

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Feb 19 17:11:51 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18346
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	idataBANK5,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
     9                           	psect	stringtext2,global,class=STRCODE,delta=2
    10                           	psect	stringtext3,global,class=STRCODE,delta=2
    11                           	psect	stringtext4,global,class=STRCODE,delta=2
    12                           	psect	stringtext5,global,class=STRCODE,delta=2
    13                           	psect	stringtext6,global,class=STRCODE,delta=2
    14                           	psect	stringtext7,global,class=STRCODE,delta=2
    15                           	psect	stringtext8,global,class=STRCODE,delta=2
    16                           	psect	stringtext9,global,class=STRCODE,delta=2
    17                           	psect	cinit,global,class=CODE,merge=1,delta=2
    18                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    22                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    23                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    24                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    25                           	psect	inittext,global,class=CODE,delta=2
    26                           	psect	clrtext,global,class=CODE,delta=2
    27                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    28                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    29                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    30                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    31                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    32                           	psect	text1,local,class=CODE,merge=1,delta=2
    33                           	psect	text2,local,class=CODE,merge=1,delta=2
    34                           	psect	text3,local,class=CODE,merge=1,delta=2
    35                           	psect	text4,local,class=CODE,merge=1,delta=2
    36                           	psect	text5,local,class=CODE,merge=1,delta=2
    37                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text7,local,class=CODE,merge=1,delta=2
    39                           	psect	text8,local,class=CODE,merge=1,delta=2
    40                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text10,local,class=CODE,merge=1,delta=2
    42                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text14,local,class=CODE,merge=1,delta=2
    46                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text18,local,class=CODE,merge=1,delta=2
    50                           	psect	text19,local,class=CODE,merge=1,delta=2
    51                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    54                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    55                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    59                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    60                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    63                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    64                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
    65                           	psect	text34,local,class=CODE,merge=1,delta=2
    66                           	psect	text35,local,class=CODE,merge=1,delta=2
    67                           	psect	text36,local,class=CODE,merge=1,delta=2
    68                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text38,local,class=CODE,merge=1,delta=2
    70                           	psect	text39,local,class=CODE,merge=1,delta=2
    71                           	psect	text40,local,class=CODE,merge=1,delta=2
    72                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    73                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    74                           	psect	text43,local,class=CODE,merge=1,delta=2
    75                           	psect	text44,local,class=CODE,merge=1,delta=2
    76                           	psect	text45,local,class=CODE,merge=1,delta=2
    77                           	psect	text46,local,class=CODE,merge=1,delta=2
    78                           	psect	text47,local,class=CODE,merge=1,delta=2
    79                           	psect	text48,local,class=CODE,merge=1,delta=2
    80                           	psect	text49,local,class=CODE,merge=1,delta=2
    81                           	psect	text50,local,class=CODE,merge=1,delta=2
    82                           	psect	text51,local,class=CODE,merge=1,delta=2
    83                           	psect	text52,local,class=CODE,merge=1,delta=2
    84                           	psect	text53,local,class=CODE,merge=1,delta=2
    85                           	psect	text54,local,class=CODE,merge=1,delta=2
    86                           	psect	text55,local,class=CODE,merge=1,delta=2
    87                           	psect	text56,local,class=CODE,merge=1,delta=2
    88                           	psect	text57,local,class=CODE,merge=1,delta=2
    89                           	psect	text58,local,class=CODE,merge=1,delta=2
    90                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    91                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
    92                           	psect	text61,local,class=CODE,merge=1,inline,delta=2
    93                           	psect	text62,local,class=CODE,merge=1,inline,delta=2
    94                           	psect	text63,local,class=CODE,merge=1,inline,delta=2
    95                           	psect	text64,local,class=CODE,merge=1,inline,delta=2
    96                           	psect	text65,local,class=CODE,merge=1,inline,delta=2
    97                           	psect	text66,local,class=CODE,merge=1,delta=2
    98                           	psect	text67,local,class=CODE,merge=1,delta=2
    99                           	psect	text68,local,class=CODE,merge=1,delta=2
   100                           	psect	text69,local,class=CODE,merge=1,delta=2
   101                           	psect	text70,local,class=CODE,merge=1,delta=2
   102                           	psect	text71,local,class=CODE,merge=1,delta=2
   103                           	psect	text72,local,class=CODE,merge=1,delta=2
   104                           	psect	text73,local,class=CODE,merge=1,delta=2
   105                           	psect	text74,local,class=CODE,merge=1,delta=2
   106                           	psect	text75,local,class=CODE,merge=1,delta=2
   107                           	psect	text76,local,class=CODE,merge=1,inline,delta=2
   108                           	psect	text77,local,class=CODE,merge=1,inline,delta=2
   109                           	psect	text78,local,class=CODE,merge=1,inline,delta=2
   110                           	psect	text79,local,class=CODE,merge=1,delta=2
   111                           	psect	text80,local,class=CODE,merge=1,inline,delta=2
   112                           	psect	text81,local,class=CODE,merge=1,inline,delta=2
   113                           	psect	text82,local,class=CODE,merge=1,inline,delta=2
   114                           	psect	text83,local,class=CODE,merge=1,delta=2
   115                           	psect	text84,local,class=CODE,merge=1,delta=2
   116                           	psect	text85,local,class=CODE,merge=1,delta=2
   117                           	psect	text86,local,class=CODE,merge=1,delta=2
   118                           	psect	text87,local,class=CODE,merge=1,delta=2
   119                           	psect	text88,local,class=CODE,merge=1,delta=2
   120                           	psect	text89,local,class=CODE,merge=1,delta=2
   121                           	psect	text90,local,class=CODE,merge=1,delta=2
   122                           	psect	text91,local,class=CODE,merge=1,delta=2
   123                           	psect	text92,local,class=CODE,merge=1,delta=2
   124                           	psect	text93,local,class=CODE,merge=1,delta=2
   125                           	psect	text94,local,class=CODE,merge=1,delta=2
   126                           	psect	text95,local,class=CODE,merge=1,delta=2
   127                           	psect	text96,local,class=CODE,merge=1,delta=2
   128                           	psect	intentry,global,class=CODE,delta=2
   129                           	psect	text98,local,class=CODE,merge=1,delta=2
   130                           	psect	text99,local,class=CODE,merge=1,delta=2
   131                           	psect	text100,local,class=CODE,merge=1,delta=2
   132                           	psect	text101,local,class=CODE,merge=1,delta=2
   133                           	psect	text102,local,class=CODE,merge=1,delta=2
   134                           	psect	text103,local,class=CODE,merge=1,delta=2
   135                           	dabs	1,0x7E,2
   136  0000                     
   137                           ; Version 2.05
   138                           ; Generated 20/12/2018 GMT
   139                           ; 
   140                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   141                           ; All rights reserved.
   142                           ; 
   143                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   144                           ; 
   145                           ; Redistribution and use in source and binary forms, with or without modification, are
   146                           ; permitted provided that the following conditions are met:
   147                           ; 
   148                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   149                           ;        conditions and the following disclaimer.
   150                           ; 
   151                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   152                           ;        of conditions and the following disclaimer in the documentation and/or other
   153                           ;        materials provided with the distribution.
   154                           ; 
   155                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   156                           ;        software without specific prior written permission.
   157                           ; 
   158                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   159                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   160                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   161                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   162                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   163                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   164                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   165                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   166                           ; 
   167                           ; 
   168                           ; Code-generator required, PIC16F18346 Definitions
   169                           ; 
   170                           ; SFR Addresses
   171  0000                     	;# 
   172  0001                     	;# 
   173  0002                     	;# 
   174  0003                     	;# 
   175  0004                     	;# 
   176  0005                     	;# 
   177  0006                     	;# 
   178  0007                     	;# 
   179  0008                     	;# 
   180  0009                     	;# 
   181  000A                     	;# 
   182  000B                     	;# 
   183  000C                     	;# 
   184  000D                     	;# 
   185  000E                     	;# 
   186  0010                     	;# 
   187  0011                     	;# 
   188  0012                     	;# 
   189  0013                     	;# 
   190  0014                     	;# 
   191  0015                     	;# 
   192  0015                     	;# 
   193  0016                     	;# 
   194  0016                     	;# 
   195  0017                     	;# 
   196  0018                     	;# 
   197  0019                     	;# 
   198  0019                     	;# 
   199  001A                     	;# 
   200  001B                     	;# 
   201  001C                     	;# 
   202  001D                     	;# 
   203  001E                     	;# 
   204  001F                     	;# 
   205  008C                     	;# 
   206  008D                     	;# 
   207  008E                     	;# 
   208  0090                     	;# 
   209  0091                     	;# 
   210  0092                     	;# 
   211  0093                     	;# 
   212  0094                     	;# 
   213  0097                     	;# 
   214  009B                     	;# 
   215  009B                     	;# 
   216  009C                     	;# 
   217  009D                     	;# 
   218  009E                     	;# 
   219  009F                     	;# 
   220  010C                     	;# 
   221  010D                     	;# 
   222  010E                     	;# 
   223  0111                     	;# 
   224  0112                     	;# 
   225  0113                     	;# 
   226  0114                     	;# 
   227  0115                     	;# 
   228  0116                     	;# 
   229  0117                     	;# 
   230  0118                     	;# 
   231  0119                     	;# 
   232  018C                     	;# 
   233  018D                     	;# 
   234  018E                     	;# 
   235  0197                     	;# 
   236  0199                     	;# 
   237  0199                     	;# 
   238  0199                     	;# 
   239  019A                     	;# 
   240  019A                     	;# 
   241  019A                     	;# 
   242  019B                     	;# 
   243  019B                     	;# 
   244  019B                     	;# 
   245  019B                     	;# 
   246  019B                     	;# 
   247  019C                     	;# 
   248  019C                     	;# 
   249  019C                     	;# 
   250  019D                     	;# 
   251  019D                     	;# 
   252  019D                     	;# 
   253  019E                     	;# 
   254  019E                     	;# 
   255  019E                     	;# 
   256  019F                     	;# 
   257  019F                     	;# 
   258  019F                     	;# 
   259  019F                     	;# 
   260  019F                     	;# 
   261  020C                     	;# 
   262  020D                     	;# 
   263  020E                     	;# 
   264  0211                     	;# 
   265  0211                     	;# 
   266  0212                     	;# 
   267  0212                     	;# 
   268  0213                     	;# 
   269  0213                     	;# 
   270  0214                     	;# 
   271  0214                     	;# 
   272  0215                     	;# 
   273  0215                     	;# 
   274  0215                     	;# 
   275  0215                     	;# 
   276  0216                     	;# 
   277  0216                     	;# 
   278  0217                     	;# 
   279  0217                     	;# 
   280  0219                     	;# 
   281  021A                     	;# 
   282  021B                     	;# 
   283  021C                     	;# 
   284  021D                     	;# 
   285  021D                     	;# 
   286  021E                     	;# 
   287  021F                     	;# 
   288  028C                     	;# 
   289  028D                     	;# 
   290  028E                     	;# 
   291  0291                     	;# 
   292  0291                     	;# 
   293  0292                     	;# 
   294  0293                     	;# 
   295  0294                     	;# 
   296  0295                     	;# 
   297  0295                     	;# 
   298  0296                     	;# 
   299  0297                     	;# 
   300  0298                     	;# 
   301  029F                     	;# 
   302  030C                     	;# 
   303  030D                     	;# 
   304  030E                     	;# 
   305  0311                     	;# 
   306  0311                     	;# 
   307  0312                     	;# 
   308  0313                     	;# 
   309  0314                     	;# 
   310  0315                     	;# 
   311  0315                     	;# 
   312  0316                     	;# 
   313  0317                     	;# 
   314  0318                     	;# 
   315  038C                     	;# 
   316  038D                     	;# 
   317  038E                     	;# 
   318  0391                     	;# 
   319  0392                     	;# 
   320  0393                     	;# 
   321  0394                     	;# 
   322  0395                     	;# 
   323  0396                     	;# 
   324  0397                     	;# 
   325  0398                     	;# 
   326  0399                     	;# 
   327  039A                     	;# 
   328  039C                     	;# 
   329  039D                     	;# 
   330  039E                     	;# 
   331  039F                     	;# 
   332  0411                     	;# 
   333  0411                     	;# 
   334  0412                     	;# 
   335  0413                     	;# 
   336  0414                     	;# 
   337  0415                     	;# 
   338  0416                     	;# 
   339  0417                     	;# 
   340  0418                     	;# 
   341  0418                     	;# 
   342  0419                     	;# 
   343  041A                     	;# 
   344  041B                     	;# 
   345  041C                     	;# 
   346  041D                     	;# 
   347  041E                     	;# 
   348  041F                     	;# 
   349  0498                     	;# 
   350  0498                     	;# 
   351  0499                     	;# 
   352  049A                     	;# 
   353  049B                     	;# 
   354  049B                     	;# 
   355  049C                     	;# 
   356  049D                     	;# 
   357  049E                     	;# 
   358  049F                     	;# 
   359  0617                     	;# 
   360  0618                     	;# 
   361  0619                     	;# 
   362  0619                     	;# 
   363  061A                     	;# 
   364  061B                     	;# 
   365  061C                     	;# 
   366  061C                     	;# 
   367  061F                     	;# 
   368  0691                     	;# 
   369  0692                     	;# 
   370  0693                     	;# 
   371  0694                     	;# 
   372  0695                     	;# 
   373  0696                     	;# 
   374  0697                     	;# 
   375  0698                     	;# 
   376  0699                     	;# 
   377  0711                     	;# 
   378  0712                     	;# 
   379  0713                     	;# 
   380  0714                     	;# 
   381  0715                     	;# 
   382  0716                     	;# 
   383  0717                     	;# 
   384  0718                     	;# 
   385  0719                     	;# 
   386  0891                     	;# 
   387  0891                     	;# 
   388  0891                     	;# 
   389  0891                     	;# 
   390  0891                     	;# 
   391  0891                     	;# 
   392  0892                     	;# 
   393  0892                     	;# 
   394  0892                     	;# 
   395  0893                     	;# 
   396  0893                     	;# 
   397  0893                     	;# 
   398  0893                     	;# 
   399  0893                     	;# 
   400  0893                     	;# 
   401  0894                     	;# 
   402  0894                     	;# 
   403  0894                     	;# 
   404  0895                     	;# 
   405  0895                     	;# 
   406  0895                     	;# 
   407  0896                     	;# 
   408  0896                     	;# 
   409  0896                     	;# 
   410  089B                     	;# 
   411  0911                     	;# 
   412  0912                     	;# 
   413  0913                     	;# 
   414  0914                     	;# 
   415  0915                     	;# 
   416  0916                     	;# 
   417  0918                     	;# 
   418  0919                     	;# 
   419  091A                     	;# 
   420  091B                     	;# 
   421  091C                     	;# 
   422  091D                     	;# 
   423  091E                     	;# 
   424  091F                     	;# 
   425  0E0F                     	;# 
   426  0E10                     	;# 
   427  0E11                     	;# 
   428  0E12                     	;# 
   429  0E13                     	;# 
   430  0E14                     	;# 
   431  0E15                     	;# 
   432  0E16                     	;# 
   433  0E17                     	;# 
   434  0E18                     	;# 
   435  0E19                     	;# 
   436  0E1A                     	;# 
   437  0E1B                     	;# 
   438  0E1C                     	;# 
   439  0E1D                     	;# 
   440  0E1E                     	;# 
   441  0E1F                     	;# 
   442  0E20                     	;# 
   443  0E21                     	;# 
   444  0E22                     	;# 
   445  0E24                     	;# 
   446  0E25                     	;# 
   447  0E28                     	;# 
   448  0E29                     	;# 
   449  0E2A                     	;# 
   450  0E2B                     	;# 
   451  0E2C                     	;# 
   452  0E2D                     	;# 
   453  0E2E                     	;# 
   454  0E2F                     	;# 
   455  0E90                     	;# 
   456  0E91                     	;# 
   457  0E92                     	;# 
   458  0E94                     	;# 
   459  0E95                     	;# 
   460  0E9C                     	;# 
   461  0E9D                     	;# 
   462  0E9E                     	;# 
   463  0E9F                     	;# 
   464  0EA0                     	;# 
   465  0EA1                     	;# 
   466  0EA2                     	;# 
   467  0EA3                     	;# 
   468  0EA4                     	;# 
   469  0EA5                     	;# 
   470  0EA6                     	;# 
   471  0EA7                     	;# 
   472  0F0F                     	;# 
   473  0F10                     	;# 
   474  0F11                     	;# 
   475  0F12                     	;# 
   476  0F13                     	;# 
   477  0F14                     	;# 
   478  0F15                     	;# 
   479  0F16                     	;# 
   480  0F17                     	;# 
   481  0F18                     	;# 
   482  0F19                     	;# 
   483  0F1A                     	;# 
   484  0F1B                     	;# 
   485  0F1C                     	;# 
   486  0F1D                     	;# 
   487  0F1E                     	;# 
   488  0F1F                     	;# 
   489  0F20                     	;# 
   490  0F21                     	;# 
   491  0F22                     	;# 
   492  0F23                     	;# 
   493  0F24                     	;# 
   494  0F25                     	;# 
   495  0F26                     	;# 
   496  0F27                     	;# 
   497  0F28                     	;# 
   498  0F29                     	;# 
   499  0F2A                     	;# 
   500  0F2B                     	;# 
   501  0F2C                     	;# 
   502  0F2D                     	;# 
   503  0F2E                     	;# 
   504  0F2F                     	;# 
   505  0F30                     	;# 
   506  0F31                     	;# 
   507  0F32                     	;# 
   508  0F33                     	;# 
   509  0F34                     	;# 
   510  0F35                     	;# 
   511  0F36                     	;# 
   512  0F37                     	;# 
   513  0FE4                     	;# 
   514  0FE5                     	;# 
   515  0FE6                     	;# 
   516  0FE7                     	;# 
   517  0FE8                     	;# 
   518  0FE9                     	;# 
   519  0FEA                     	;# 
   520  0FEB                     	;# 
   521  0FED                     	;# 
   522  0FEE                     	;# 
   523  0FEF                     	;# 
   524  0000                     	;# 
   525  0001                     	;# 
   526  0002                     	;# 
   527  0003                     	;# 
   528  0004                     	;# 
   529  0005                     	;# 
   530  0006                     	;# 
   531  0007                     	;# 
   532  0008                     	;# 
   533  0009                     	;# 
   534  000A                     	;# 
   535  000B                     	;# 
   536  000C                     	;# 
   537  000D                     	;# 
   538  000E                     	;# 
   539  0010                     	;# 
   540  0011                     	;# 
   541  0012                     	;# 
   542  0013                     	;# 
   543  0014                     	;# 
   544  0015                     	;# 
   545  0015                     	;# 
   546  0016                     	;# 
   547  0016                     	;# 
   548  0017                     	;# 
   549  0018                     	;# 
   550  0019                     	;# 
   551  0019                     	;# 
   552  001A                     	;# 
   553  001B                     	;# 
   554  001C                     	;# 
   555  001D                     	;# 
   556  001E                     	;# 
   557  001F                     	;# 
   558  008C                     	;# 
   559  008D                     	;# 
   560  008E                     	;# 
   561  0090                     	;# 
   562  0091                     	;# 
   563  0092                     	;# 
   564  0093                     	;# 
   565  0094                     	;# 
   566  0097                     	;# 
   567  009B                     	;# 
   568  009B                     	;# 
   569  009C                     	;# 
   570  009D                     	;# 
   571  009E                     	;# 
   572  009F                     	;# 
   573  010C                     	;# 
   574  010D                     	;# 
   575  010E                     	;# 
   576  0111                     	;# 
   577  0112                     	;# 
   578  0113                     	;# 
   579  0114                     	;# 
   580  0115                     	;# 
   581  0116                     	;# 
   582  0117                     	;# 
   583  0118                     	;# 
   584  0119                     	;# 
   585  018C                     	;# 
   586  018D                     	;# 
   587  018E                     	;# 
   588  0197                     	;# 
   589  0199                     	;# 
   590  0199                     	;# 
   591  0199                     	;# 
   592  019A                     	;# 
   593  019A                     	;# 
   594  019A                     	;# 
   595  019B                     	;# 
   596  019B                     	;# 
   597  019B                     	;# 
   598  019B                     	;# 
   599  019B                     	;# 
   600  019C                     	;# 
   601  019C                     	;# 
   602  019C                     	;# 
   603  019D                     	;# 
   604  019D                     	;# 
   605  019D                     	;# 
   606  019E                     	;# 
   607  019E                     	;# 
   608  019E                     	;# 
   609  019F                     	;# 
   610  019F                     	;# 
   611  019F                     	;# 
   612  019F                     	;# 
   613  019F                     	;# 
   614  020C                     	;# 
   615  020D                     	;# 
   616  020E                     	;# 
   617  0211                     	;# 
   618  0211                     	;# 
   619  0212                     	;# 
   620  0212                     	;# 
   621  0213                     	;# 
   622  0213                     	;# 
   623  0214                     	;# 
   624  0214                     	;# 
   625  0215                     	;# 
   626  0215                     	;# 
   627  0215                     	;# 
   628  0215                     	;# 
   629  0216                     	;# 
   630  0216                     	;# 
   631  0217                     	;# 
   632  0217                     	;# 
   633  0219                     	;# 
   634  021A                     	;# 
   635  021B                     	;# 
   636  021C                     	;# 
   637  021D                     	;# 
   638  021D                     	;# 
   639  021E                     	;# 
   640  021F                     	;# 
   641  028C                     	;# 
   642  028D                     	;# 
   643  028E                     	;# 
   644  0291                     	;# 
   645  0291                     	;# 
   646  0292                     	;# 
   647  0293                     	;# 
   648  0294                     	;# 
   649  0295                     	;# 
   650  0295                     	;# 
   651  0296                     	;# 
   652  0297                     	;# 
   653  0298                     	;# 
   654  029F                     	;# 
   655  030C                     	;# 
   656  030D                     	;# 
   657  030E                     	;# 
   658  0311                     	;# 
   659  0311                     	;# 
   660  0312                     	;# 
   661  0313                     	;# 
   662  0314                     	;# 
   663  0315                     	;# 
   664  0315                     	;# 
   665  0316                     	;# 
   666  0317                     	;# 
   667  0318                     	;# 
   668  038C                     	;# 
   669  038D                     	;# 
   670  038E                     	;# 
   671  0391                     	;# 
   672  0392                     	;# 
   673  0393                     	;# 
   674  0394                     	;# 
   675  0395                     	;# 
   676  0396                     	;# 
   677  0397                     	;# 
   678  0398                     	;# 
   679  0399                     	;# 
   680  039A                     	;# 
   681  039C                     	;# 
   682  039D                     	;# 
   683  039E                     	;# 
   684  039F                     	;# 
   685  0411                     	;# 
   686  0411                     	;# 
   687  0412                     	;# 
   688  0413                     	;# 
   689  0414                     	;# 
   690  0415                     	;# 
   691  0416                     	;# 
   692  0417                     	;# 
   693  0418                     	;# 
   694  0418                     	;# 
   695  0419                     	;# 
   696  041A                     	;# 
   697  041B                     	;# 
   698  041C                     	;# 
   699  041D                     	;# 
   700  041E                     	;# 
   701  041F                     	;# 
   702  0498                     	;# 
   703  0498                     	;# 
   704  0499                     	;# 
   705  049A                     	;# 
   706  049B                     	;# 
   707  049B                     	;# 
   708  049C                     	;# 
   709  049D                     	;# 
   710  049E                     	;# 
   711  049F                     	;# 
   712  0617                     	;# 
   713  0618                     	;# 
   714  0619                     	;# 
   715  0619                     	;# 
   716  061A                     	;# 
   717  061B                     	;# 
   718  061C                     	;# 
   719  061C                     	;# 
   720  061F                     	;# 
   721  0691                     	;# 
   722  0692                     	;# 
   723  0693                     	;# 
   724  0694                     	;# 
   725  0695                     	;# 
   726  0696                     	;# 
   727  0697                     	;# 
   728  0698                     	;# 
   729  0699                     	;# 
   730  0711                     	;# 
   731  0712                     	;# 
   732  0713                     	;# 
   733  0714                     	;# 
   734  0715                     	;# 
   735  0716                     	;# 
   736  0717                     	;# 
   737  0718                     	;# 
   738  0719                     	;# 
   739  0891                     	;# 
   740  0891                     	;# 
   741  0891                     	;# 
   742  0891                     	;# 
   743  0891                     	;# 
   744  0891                     	;# 
   745  0892                     	;# 
   746  0892                     	;# 
   747  0892                     	;# 
   748  0893                     	;# 
   749  0893                     	;# 
   750  0893                     	;# 
   751  0893                     	;# 
   752  0893                     	;# 
   753  0893                     	;# 
   754  0894                     	;# 
   755  0894                     	;# 
   756  0894                     	;# 
   757  0895                     	;# 
   758  0895                     	;# 
   759  0895                     	;# 
   760  0896                     	;# 
   761  0896                     	;# 
   762  0896                     	;# 
   763  089B                     	;# 
   764  0911                     	;# 
   765  0912                     	;# 
   766  0913                     	;# 
   767  0914                     	;# 
   768  0915                     	;# 
   769  0916                     	;# 
   770  0918                     	;# 
   771  0919                     	;# 
   772  091A                     	;# 
   773  091B                     	;# 
   774  091C                     	;# 
   775  091D                     	;# 
   776  091E                     	;# 
   777  091F                     	;# 
   778  0E0F                     	;# 
   779  0E10                     	;# 
   780  0E11                     	;# 
   781  0E12                     	;# 
   782  0E13                     	;# 
   783  0E14                     	;# 
   784  0E15                     	;# 
   785  0E16                     	;# 
   786  0E17                     	;# 
   787  0E18                     	;# 
   788  0E19                     	;# 
   789  0E1A                     	;# 
   790  0E1B                     	;# 
   791  0E1C                     	;# 
   792  0E1D                     	;# 
   793  0E1E                     	;# 
   794  0E1F                     	;# 
   795  0E20                     	;# 
   796  0E21                     	;# 
   797  0E22                     	;# 
   798  0E24                     	;# 
   799  0E25                     	;# 
   800  0E28                     	;# 
   801  0E29                     	;# 
   802  0E2A                     	;# 
   803  0E2B                     	;# 
   804  0E2C                     	;# 
   805  0E2D                     	;# 
   806  0E2E                     	;# 
   807  0E2F                     	;# 
   808  0E90                     	;# 
   809  0E91                     	;# 
   810  0E92                     	;# 
   811  0E94                     	;# 
   812  0E95                     	;# 
   813  0E9C                     	;# 
   814  0E9D                     	;# 
   815  0E9E                     	;# 
   816  0E9F                     	;# 
   817  0EA0                     	;# 
   818  0EA1                     	;# 
   819  0EA2                     	;# 
   820  0EA3                     	;# 
   821  0EA4                     	;# 
   822  0EA5                     	;# 
   823  0EA6                     	;# 
   824  0EA7                     	;# 
   825  0F0F                     	;# 
   826  0F10                     	;# 
   827  0F11                     	;# 
   828  0F12                     	;# 
   829  0F13                     	;# 
   830  0F14                     	;# 
   831  0F15                     	;# 
   832  0F16                     	;# 
   833  0F17                     	;# 
   834  0F18                     	;# 
   835  0F19                     	;# 
   836  0F1A                     	;# 
   837  0F1B                     	;# 
   838  0F1C                     	;# 
   839  0F1D                     	;# 
   840  0F1E                     	;# 
   841  0F1F                     	;# 
   842  0F20                     	;# 
   843  0F21                     	;# 
   844  0F22                     	;# 
   845  0F23                     	;# 
   846  0F24                     	;# 
   847  0F25                     	;# 
   848  0F26                     	;# 
   849  0F27                     	;# 
   850  0F28                     	;# 
   851  0F29                     	;# 
   852  0F2A                     	;# 
   853  0F2B                     	;# 
   854  0F2C                     	;# 
   855  0F2D                     	;# 
   856  0F2E                     	;# 
   857  0F2F                     	;# 
   858  0F30                     	;# 
   859  0F31                     	;# 
   860  0F32                     	;# 
   861  0F33                     	;# 
   862  0F34                     	;# 
   863  0F35                     	;# 
   864  0F36                     	;# 
   865  0F37                     	;# 
   866  0FE4                     	;# 
   867  0FE5                     	;# 
   868  0FE6                     	;# 
   869  0FE7                     	;# 
   870  0FE8                     	;# 
   871  0FE9                     	;# 
   872  0FEA                     	;# 
   873  0FEB                     	;# 
   874  0FED                     	;# 
   875  0FEE                     	;# 
   876  0FEF                     	;# 
   877  0000                     	;# 
   878  0001                     	;# 
   879  0002                     	;# 
   880  0003                     	;# 
   881  0004                     	;# 
   882  0005                     	;# 
   883  0006                     	;# 
   884  0007                     	;# 
   885  0008                     	;# 
   886  0009                     	;# 
   887  000A                     	;# 
   888  000B                     	;# 
   889  000C                     	;# 
   890  000D                     	;# 
   891  000E                     	;# 
   892  0010                     	;# 
   893  0011                     	;# 
   894  0012                     	;# 
   895  0013                     	;# 
   896  0014                     	;# 
   897  0015                     	;# 
   898  0015                     	;# 
   899  0016                     	;# 
   900  0016                     	;# 
   901  0017                     	;# 
   902  0018                     	;# 
   903  0019                     	;# 
   904  0019                     	;# 
   905  001A                     	;# 
   906  001B                     	;# 
   907  001C                     	;# 
   908  001D                     	;# 
   909  001E                     	;# 
   910  001F                     	;# 
   911  008C                     	;# 
   912  008D                     	;# 
   913  008E                     	;# 
   914  0090                     	;# 
   915  0091                     	;# 
   916  0092                     	;# 
   917  0093                     	;# 
   918  0094                     	;# 
   919  0097                     	;# 
   920  009B                     	;# 
   921  009B                     	;# 
   922  009C                     	;# 
   923  009D                     	;# 
   924  009E                     	;# 
   925  009F                     	;# 
   926  010C                     	;# 
   927  010D                     	;# 
   928  010E                     	;# 
   929  0111                     	;# 
   930  0112                     	;# 
   931  0113                     	;# 
   932  0114                     	;# 
   933  0115                     	;# 
   934  0116                     	;# 
   935  0117                     	;# 
   936  0118                     	;# 
   937  0119                     	;# 
   938  018C                     	;# 
   939  018D                     	;# 
   940  018E                     	;# 
   941  0197                     	;# 
   942  0199                     	;# 
   943  0199                     	;# 
   944  0199                     	;# 
   945  019A                     	;# 
   946  019A                     	;# 
   947  019A                     	;# 
   948  019B                     	;# 
   949  019B                     	;# 
   950  019B                     	;# 
   951  019B                     	;# 
   952  019B                     	;# 
   953  019C                     	;# 
   954  019C                     	;# 
   955  019C                     	;# 
   956  019D                     	;# 
   957  019D                     	;# 
   958  019D                     	;# 
   959  019E                     	;# 
   960  019E                     	;# 
   961  019E                     	;# 
   962  019F                     	;# 
   963  019F                     	;# 
   964  019F                     	;# 
   965  019F                     	;# 
   966  019F                     	;# 
   967  020C                     	;# 
   968  020D                     	;# 
   969  020E                     	;# 
   970  0211                     	;# 
   971  0211                     	;# 
   972  0212                     	;# 
   973  0212                     	;# 
   974  0213                     	;# 
   975  0213                     	;# 
   976  0214                     	;# 
   977  0214                     	;# 
   978  0215                     	;# 
   979  0215                     	;# 
   980  0215                     	;# 
   981  0215                     	;# 
   982  0216                     	;# 
   983  0216                     	;# 
   984  0217                     	;# 
   985  0217                     	;# 
   986  0219                     	;# 
   987  021A                     	;# 
   988  021B                     	;# 
   989  021C                     	;# 
   990  021D                     	;# 
   991  021D                     	;# 
   992  021E                     	;# 
   993  021F                     	;# 
   994  028C                     	;# 
   995  028D                     	;# 
   996  028E                     	;# 
   997  0291                     	;# 
   998  0291                     	;# 
   999  0292                     	;# 
  1000  0293                     	;# 
  1001  0294                     	;# 
  1002  0295                     	;# 
  1003  0295                     	;# 
  1004  0296                     	;# 
  1005  0297                     	;# 
  1006  0298                     	;# 
  1007  029F                     	;# 
  1008  030C                     	;# 
  1009  030D                     	;# 
  1010  030E                     	;# 
  1011  0311                     	;# 
  1012  0311                     	;# 
  1013  0312                     	;# 
  1014  0313                     	;# 
  1015  0314                     	;# 
  1016  0315                     	;# 
  1017  0315                     	;# 
  1018  0316                     	;# 
  1019  0317                     	;# 
  1020  0318                     	;# 
  1021  038C                     	;# 
  1022  038D                     	;# 
  1023  038E                     	;# 
  1024  0391                     	;# 
  1025  0392                     	;# 
  1026  0393                     	;# 
  1027  0394                     	;# 
  1028  0395                     	;# 
  1029  0396                     	;# 
  1030  0397                     	;# 
  1031  0398                     	;# 
  1032  0399                     	;# 
  1033  039A                     	;# 
  1034  039C                     	;# 
  1035  039D                     	;# 
  1036  039E                     	;# 
  1037  039F                     	;# 
  1038  0411                     	;# 
  1039  0411                     	;# 
  1040  0412                     	;# 
  1041  0413                     	;# 
  1042  0414                     	;# 
  1043  0415                     	;# 
  1044  0416                     	;# 
  1045  0417                     	;# 
  1046  0418                     	;# 
  1047  0418                     	;# 
  1048  0419                     	;# 
  1049  041A                     	;# 
  1050  041B                     	;# 
  1051  041C                     	;# 
  1052  041D                     	;# 
  1053  041E                     	;# 
  1054  041F                     	;# 
  1055  0498                     	;# 
  1056  0498                     	;# 
  1057  0499                     	;# 
  1058  049A                     	;# 
  1059  049B                     	;# 
  1060  049B                     	;# 
  1061  049C                     	;# 
  1062  049D                     	;# 
  1063  049E                     	;# 
  1064  049F                     	;# 
  1065  0617                     	;# 
  1066  0618                     	;# 
  1067  0619                     	;# 
  1068  0619                     	;# 
  1069  061A                     	;# 
  1070  061B                     	;# 
  1071  061C                     	;# 
  1072  061C                     	;# 
  1073  061F                     	;# 
  1074  0691                     	;# 
  1075  0692                     	;# 
  1076  0693                     	;# 
  1077  0694                     	;# 
  1078  0695                     	;# 
  1079  0696                     	;# 
  1080  0697                     	;# 
  1081  0698                     	;# 
  1082  0699                     	;# 
  1083  0711                     	;# 
  1084  0712                     	;# 
  1085  0713                     	;# 
  1086  0714                     	;# 
  1087  0715                     	;# 
  1088  0716                     	;# 
  1089  0717                     	;# 
  1090  0718                     	;# 
  1091  0719                     	;# 
  1092  0891                     	;# 
  1093  0891                     	;# 
  1094  0891                     	;# 
  1095  0891                     	;# 
  1096  0891                     	;# 
  1097  0891                     	;# 
  1098  0892                     	;# 
  1099  0892                     	;# 
  1100  0892                     	;# 
  1101  0893                     	;# 
  1102  0893                     	;# 
  1103  0893                     	;# 
  1104  0893                     	;# 
  1105  0893                     	;# 
  1106  0893                     	;# 
  1107  0894                     	;# 
  1108  0894                     	;# 
  1109  0894                     	;# 
  1110  0895                     	;# 
  1111  0895                     	;# 
  1112  0895                     	;# 
  1113  0896                     	;# 
  1114  0896                     	;# 
  1115  0896                     	;# 
  1116  089B                     	;# 
  1117  0911                     	;# 
  1118  0912                     	;# 
  1119  0913                     	;# 
  1120  0914                     	;# 
  1121  0915                     	;# 
  1122  0916                     	;# 
  1123  0918                     	;# 
  1124  0919                     	;# 
  1125  091A                     	;# 
  1126  091B                     	;# 
  1127  091C                     	;# 
  1128  091D                     	;# 
  1129  091E                     	;# 
  1130  091F                     	;# 
  1131  0E0F                     	;# 
  1132  0E10                     	;# 
  1133  0E11                     	;# 
  1134  0E12                     	;# 
  1135  0E13                     	;# 
  1136  0E14                     	;# 
  1137  0E15                     	;# 
  1138  0E16                     	;# 
  1139  0E17                     	;# 
  1140  0E18                     	;# 
  1141  0E19                     	;# 
  1142  0E1A                     	;# 
  1143  0E1B                     	;# 
  1144  0E1C                     	;# 
  1145  0E1D                     	;# 
  1146  0E1E                     	;# 
  1147  0E1F                     	;# 
  1148  0E20                     	;# 
  1149  0E21                     	;# 
  1150  0E22                     	;# 
  1151  0E24                     	;# 
  1152  0E25                     	;# 
  1153  0E28                     	;# 
  1154  0E29                     	;# 
  1155  0E2A                     	;# 
  1156  0E2B                     	;# 
  1157  0E2C                     	;# 
  1158  0E2D                     	;# 
  1159  0E2E                     	;# 
  1160  0E2F                     	;# 
  1161  0E90                     	;# 
  1162  0E91                     	;# 
  1163  0E92                     	;# 
  1164  0E94                     	;# 
  1165  0E95                     	;# 
  1166  0E9C                     	;# 
  1167  0E9D                     	;# 
  1168  0E9E                     	;# 
  1169  0E9F                     	;# 
  1170  0EA0                     	;# 
  1171  0EA1                     	;# 
  1172  0EA2                     	;# 
  1173  0EA3                     	;# 
  1174  0EA4                     	;# 
  1175  0EA5                     	;# 
  1176  0EA6                     	;# 
  1177  0EA7                     	;# 
  1178  0F0F                     	;# 
  1179  0F10                     	;# 
  1180  0F11                     	;# 
  1181  0F12                     	;# 
  1182  0F13                     	;# 
  1183  0F14                     	;# 
  1184  0F15                     	;# 
  1185  0F16                     	;# 
  1186  0F17                     	;# 
  1187  0F18                     	;# 
  1188  0F19                     	;# 
  1189  0F1A                     	;# 
  1190  0F1B                     	;# 
  1191  0F1C                     	;# 
  1192  0F1D                     	;# 
  1193  0F1E                     	;# 
  1194  0F1F                     	;# 
  1195  0F20                     	;# 
  1196  0F21                     	;# 
  1197  0F22                     	;# 
  1198  0F23                     	;# 
  1199  0F24                     	;# 
  1200  0F25                     	;# 
  1201  0F26                     	;# 
  1202  0F27                     	;# 
  1203  0F28                     	;# 
  1204  0F29                     	;# 
  1205  0F2A                     	;# 
  1206  0F2B                     	;# 
  1207  0F2C                     	;# 
  1208  0F2D                     	;# 
  1209  0F2E                     	;# 
  1210  0F2F                     	;# 
  1211  0F30                     	;# 
  1212  0F31                     	;# 
  1213  0F32                     	;# 
  1214  0F33                     	;# 
  1215  0F34                     	;# 
  1216  0F35                     	;# 
  1217  0F36                     	;# 
  1218  0F37                     	;# 
  1219  0FE4                     	;# 
  1220  0FE5                     	;# 
  1221  0FE6                     	;# 
  1222  0FE7                     	;# 
  1223  0FE8                     	;# 
  1224  0FE9                     	;# 
  1225  0FEA                     	;# 
  1226  0FEB                     	;# 
  1227  0FED                     	;# 
  1228  0FEE                     	;# 
  1229  0FEF                     	;# 
  1230  0000                     	;# 
  1231  0001                     	;# 
  1232  0002                     	;# 
  1233  0003                     	;# 
  1234  0004                     	;# 
  1235  0005                     	;# 
  1236  0006                     	;# 
  1237  0007                     	;# 
  1238  0008                     	;# 
  1239  0009                     	;# 
  1240  000A                     	;# 
  1241  000B                     	;# 
  1242  000C                     	;# 
  1243  000D                     	;# 
  1244  000E                     	;# 
  1245  0010                     	;# 
  1246  0011                     	;# 
  1247  0012                     	;# 
  1248  0013                     	;# 
  1249  0014                     	;# 
  1250  0015                     	;# 
  1251  0015                     	;# 
  1252  0016                     	;# 
  1253  0016                     	;# 
  1254  0017                     	;# 
  1255  0018                     	;# 
  1256  0019                     	;# 
  1257  0019                     	;# 
  1258  001A                     	;# 
  1259  001B                     	;# 
  1260  001C                     	;# 
  1261  001D                     	;# 
  1262  001E                     	;# 
  1263  001F                     	;# 
  1264  008C                     	;# 
  1265  008D                     	;# 
  1266  008E                     	;# 
  1267  0090                     	;# 
  1268  0091                     	;# 
  1269  0092                     	;# 
  1270  0093                     	;# 
  1271  0094                     	;# 
  1272  0097                     	;# 
  1273  009B                     	;# 
  1274  009B                     	;# 
  1275  009C                     	;# 
  1276  009D                     	;# 
  1277  009E                     	;# 
  1278  009F                     	;# 
  1279  010C                     	;# 
  1280  010D                     	;# 
  1281  010E                     	;# 
  1282  0111                     	;# 
  1283  0112                     	;# 
  1284  0113                     	;# 
  1285  0114                     	;# 
  1286  0115                     	;# 
  1287  0116                     	;# 
  1288  0117                     	;# 
  1289  0118                     	;# 
  1290  0119                     	;# 
  1291  018C                     	;# 
  1292  018D                     	;# 
  1293  018E                     	;# 
  1294  0197                     	;# 
  1295  0199                     	;# 
  1296  0199                     	;# 
  1297  0199                     	;# 
  1298  019A                     	;# 
  1299  019A                     	;# 
  1300  019A                     	;# 
  1301  019B                     	;# 
  1302  019B                     	;# 
  1303  019B                     	;# 
  1304  019B                     	;# 
  1305  019B                     	;# 
  1306  019C                     	;# 
  1307  019C                     	;# 
  1308  019C                     	;# 
  1309  019D                     	;# 
  1310  019D                     	;# 
  1311  019D                     	;# 
  1312  019E                     	;# 
  1313  019E                     	;# 
  1314  019E                     	;# 
  1315  019F                     	;# 
  1316  019F                     	;# 
  1317  019F                     	;# 
  1318  019F                     	;# 
  1319  019F                     	;# 
  1320  020C                     	;# 
  1321  020D                     	;# 
  1322  020E                     	;# 
  1323  0211                     	;# 
  1324  0211                     	;# 
  1325  0212                     	;# 
  1326  0212                     	;# 
  1327  0213                     	;# 
  1328  0213                     	;# 
  1329  0214                     	;# 
  1330  0214                     	;# 
  1331  0215                     	;# 
  1332  0215                     	;# 
  1333  0215                     	;# 
  1334  0215                     	;# 
  1335  0216                     	;# 
  1336  0216                     	;# 
  1337  0217                     	;# 
  1338  0217                     	;# 
  1339  0219                     	;# 
  1340  021A                     	;# 
  1341  021B                     	;# 
  1342  021C                     	;# 
  1343  021D                     	;# 
  1344  021D                     	;# 
  1345  021E                     	;# 
  1346  021F                     	;# 
  1347  028C                     	;# 
  1348  028D                     	;# 
  1349  028E                     	;# 
  1350  0291                     	;# 
  1351  0291                     	;# 
  1352  0292                     	;# 
  1353  0293                     	;# 
  1354  0294                     	;# 
  1355  0295                     	;# 
  1356  0295                     	;# 
  1357  0296                     	;# 
  1358  0297                     	;# 
  1359  0298                     	;# 
  1360  029F                     	;# 
  1361  030C                     	;# 
  1362  030D                     	;# 
  1363  030E                     	;# 
  1364  0311                     	;# 
  1365  0311                     	;# 
  1366  0312                     	;# 
  1367  0313                     	;# 
  1368  0314                     	;# 
  1369  0315                     	;# 
  1370  0315                     	;# 
  1371  0316                     	;# 
  1372  0317                     	;# 
  1373  0318                     	;# 
  1374  038C                     	;# 
  1375  038D                     	;# 
  1376  038E                     	;# 
  1377  0391                     	;# 
  1378  0392                     	;# 
  1379  0393                     	;# 
  1380  0394                     	;# 
  1381  0395                     	;# 
  1382  0396                     	;# 
  1383  0397                     	;# 
  1384  0398                     	;# 
  1385  0399                     	;# 
  1386  039A                     	;# 
  1387  039C                     	;# 
  1388  039D                     	;# 
  1389  039E                     	;# 
  1390  039F                     	;# 
  1391  0411                     	;# 
  1392  0411                     	;# 
  1393  0412                     	;# 
  1394  0413                     	;# 
  1395  0414                     	;# 
  1396  0415                     	;# 
  1397  0416                     	;# 
  1398  0417                     	;# 
  1399  0418                     	;# 
  1400  0418                     	;# 
  1401  0419                     	;# 
  1402  041A                     	;# 
  1403  041B                     	;# 
  1404  041C                     	;# 
  1405  041D                     	;# 
  1406  041E                     	;# 
  1407  041F                     	;# 
  1408  0498                     	;# 
  1409  0498                     	;# 
  1410  0499                     	;# 
  1411  049A                     	;# 
  1412  049B                     	;# 
  1413  049B                     	;# 
  1414  049C                     	;# 
  1415  049D                     	;# 
  1416  049E                     	;# 
  1417  049F                     	;# 
  1418  0617                     	;# 
  1419  0618                     	;# 
  1420  0619                     	;# 
  1421  0619                     	;# 
  1422  061A                     	;# 
  1423  061B                     	;# 
  1424  061C                     	;# 
  1425  061C                     	;# 
  1426  061F                     	;# 
  1427  0691                     	;# 
  1428  0692                     	;# 
  1429  0693                     	;# 
  1430  0694                     	;# 
  1431  0695                     	;# 
  1432  0696                     	;# 
  1433  0697                     	;# 
  1434  0698                     	;# 
  1435  0699                     	;# 
  1436  0711                     	;# 
  1437  0712                     	;# 
  1438  0713                     	;# 
  1439  0714                     	;# 
  1440  0715                     	;# 
  1441  0716                     	;# 
  1442  0717                     	;# 
  1443  0718                     	;# 
  1444  0719                     	;# 
  1445  0891                     	;# 
  1446  0891                     	;# 
  1447  0891                     	;# 
  1448  0891                     	;# 
  1449  0891                     	;# 
  1450  0891                     	;# 
  1451  0892                     	;# 
  1452  0892                     	;# 
  1453  0892                     	;# 
  1454  0893                     	;# 
  1455  0893                     	;# 
  1456  0893                     	;# 
  1457  0893                     	;# 
  1458  0893                     	;# 
  1459  0893                     	;# 
  1460  0894                     	;# 
  1461  0894                     	;# 
  1462  0894                     	;# 
  1463  0895                     	;# 
  1464  0895                     	;# 
  1465  0895                     	;# 
  1466  0896                     	;# 
  1467  0896                     	;# 
  1468  0896                     	;# 
  1469  089B                     	;# 
  1470  0911                     	;# 
  1471  0912                     	;# 
  1472  0913                     	;# 
  1473  0914                     	;# 
  1474  0915                     	;# 
  1475  0916                     	;# 
  1476  0918                     	;# 
  1477  0919                     	;# 
  1478  091A                     	;# 
  1479  091B                     	;# 
  1480  091C                     	;# 
  1481  091D                     	;# 
  1482  091E                     	;# 
  1483  091F                     	;# 
  1484  0E0F                     	;# 
  1485  0E10                     	;# 
  1486  0E11                     	;# 
  1487  0E12                     	;# 
  1488  0E13                     	;# 
  1489  0E14                     	;# 
  1490  0E15                     	;# 
  1491  0E16                     	;# 
  1492  0E17                     	;# 
  1493  0E18                     	;# 
  1494  0E19                     	;# 
  1495  0E1A                     	;# 
  1496  0E1B                     	;# 
  1497  0E1C                     	;# 
  1498  0E1D                     	;# 
  1499  0E1E                     	;# 
  1500  0E1F                     	;# 
  1501  0E20                     	;# 
  1502  0E21                     	;# 
  1503  0E22                     	;# 
  1504  0E24                     	;# 
  1505  0E25                     	;# 
  1506  0E28                     	;# 
  1507  0E29                     	;# 
  1508  0E2A                     	;# 
  1509  0E2B                     	;# 
  1510  0E2C                     	;# 
  1511  0E2D                     	;# 
  1512  0E2E                     	;# 
  1513  0E2F                     	;# 
  1514  0E90                     	;# 
  1515  0E91                     	;# 
  1516  0E92                     	;# 
  1517  0E94                     	;# 
  1518  0E95                     	;# 
  1519  0E9C                     	;# 
  1520  0E9D                     	;# 
  1521  0E9E                     	;# 
  1522  0E9F                     	;# 
  1523  0EA0                     	;# 
  1524  0EA1                     	;# 
  1525  0EA2                     	;# 
  1526  0EA3                     	;# 
  1527  0EA4                     	;# 
  1528  0EA5                     	;# 
  1529  0EA6                     	;# 
  1530  0EA7                     	;# 
  1531  0F0F                     	;# 
  1532  0F10                     	;# 
  1533  0F11                     	;# 
  1534  0F12                     	;# 
  1535  0F13                     	;# 
  1536  0F14                     	;# 
  1537  0F15                     	;# 
  1538  0F16                     	;# 
  1539  0F17                     	;# 
  1540  0F18                     	;# 
  1541  0F19                     	;# 
  1542  0F1A                     	;# 
  1543  0F1B                     	;# 
  1544  0F1C                     	;# 
  1545  0F1D                     	;# 
  1546  0F1E                     	;# 
  1547  0F1F                     	;# 
  1548  0F20                     	;# 
  1549  0F21                     	;# 
  1550  0F22                     	;# 
  1551  0F23                     	;# 
  1552  0F24                     	;# 
  1553  0F25                     	;# 
  1554  0F26                     	;# 
  1555  0F27                     	;# 
  1556  0F28                     	;# 
  1557  0F29                     	;# 
  1558  0F2A                     	;# 
  1559  0F2B                     	;# 
  1560  0F2C                     	;# 
  1561  0F2D                     	;# 
  1562  0F2E                     	;# 
  1563  0F2F                     	;# 
  1564  0F30                     	;# 
  1565  0F31                     	;# 
  1566  0F32                     	;# 
  1567  0F33                     	;# 
  1568  0F34                     	;# 
  1569  0F35                     	;# 
  1570  0F36                     	;# 
  1571  0F37                     	;# 
  1572  0FE4                     	;# 
  1573  0FE5                     	;# 
  1574  0FE6                     	;# 
  1575  0FE7                     	;# 
  1576  0FE8                     	;# 
  1577  0FE9                     	;# 
  1578  0FEA                     	;# 
  1579  0FEB                     	;# 
  1580  0FED                     	;# 
  1581  0FEE                     	;# 
  1582  0FEF                     	;# 
  1583  0000                     	;# 
  1584  0001                     	;# 
  1585  0002                     	;# 
  1586  0003                     	;# 
  1587  0004                     	;# 
  1588  0005                     	;# 
  1589  0006                     	;# 
  1590  0007                     	;# 
  1591  0008                     	;# 
  1592  0009                     	;# 
  1593  000A                     	;# 
  1594  000B                     	;# 
  1595  000C                     	;# 
  1596  000D                     	;# 
  1597  000E                     	;# 
  1598  0010                     	;# 
  1599  0011                     	;# 
  1600  0012                     	;# 
  1601  0013                     	;# 
  1602  0014                     	;# 
  1603  0015                     	;# 
  1604  0015                     	;# 
  1605  0016                     	;# 
  1606  0016                     	;# 
  1607  0017                     	;# 
  1608  0018                     	;# 
  1609  0019                     	;# 
  1610  0019                     	;# 
  1611  001A                     	;# 
  1612  001B                     	;# 
  1613  001C                     	;# 
  1614  001D                     	;# 
  1615  001E                     	;# 
  1616  001F                     	;# 
  1617  008C                     	;# 
  1618  008D                     	;# 
  1619  008E                     	;# 
  1620  0090                     	;# 
  1621  0091                     	;# 
  1622  0092                     	;# 
  1623  0093                     	;# 
  1624  0094                     	;# 
  1625  0097                     	;# 
  1626  009B                     	;# 
  1627  009B                     	;# 
  1628  009C                     	;# 
  1629  009D                     	;# 
  1630  009E                     	;# 
  1631  009F                     	;# 
  1632  010C                     	;# 
  1633  010D                     	;# 
  1634  010E                     	;# 
  1635  0111                     	;# 
  1636  0112                     	;# 
  1637  0113                     	;# 
  1638  0114                     	;# 
  1639  0115                     	;# 
  1640  0116                     	;# 
  1641  0117                     	;# 
  1642  0118                     	;# 
  1643  0119                     	;# 
  1644  018C                     	;# 
  1645  018D                     	;# 
  1646  018E                     	;# 
  1647  0197                     	;# 
  1648  0199                     	;# 
  1649  0199                     	;# 
  1650  0199                     	;# 
  1651  019A                     	;# 
  1652  019A                     	;# 
  1653  019A                     	;# 
  1654  019B                     	;# 
  1655  019B                     	;# 
  1656  019B                     	;# 
  1657  019B                     	;# 
  1658  019B                     	;# 
  1659  019C                     	;# 
  1660  019C                     	;# 
  1661  019C                     	;# 
  1662  019D                     	;# 
  1663  019D                     	;# 
  1664  019D                     	;# 
  1665  019E                     	;# 
  1666  019E                     	;# 
  1667  019E                     	;# 
  1668  019F                     	;# 
  1669  019F                     	;# 
  1670  019F                     	;# 
  1671  019F                     	;# 
  1672  019F                     	;# 
  1673  020C                     	;# 
  1674  020D                     	;# 
  1675  020E                     	;# 
  1676  0211                     	;# 
  1677  0211                     	;# 
  1678  0212                     	;# 
  1679  0212                     	;# 
  1680  0213                     	;# 
  1681  0213                     	;# 
  1682  0214                     	;# 
  1683  0214                     	;# 
  1684  0215                     	;# 
  1685  0215                     	;# 
  1686  0215                     	;# 
  1687  0215                     	;# 
  1688  0216                     	;# 
  1689  0216                     	;# 
  1690  0217                     	;# 
  1691  0217                     	;# 
  1692  0219                     	;# 
  1693  021A                     	;# 
  1694  021B                     	;# 
  1695  021C                     	;# 
  1696  021D                     	;# 
  1697  021D                     	;# 
  1698  021E                     	;# 
  1699  021F                     	;# 
  1700  028C                     	;# 
  1701  028D                     	;# 
  1702  028E                     	;# 
  1703  0291                     	;# 
  1704  0291                     	;# 
  1705  0292                     	;# 
  1706  0293                     	;# 
  1707  0294                     	;# 
  1708  0295                     	;# 
  1709  0295                     	;# 
  1710  0296                     	;# 
  1711  0297                     	;# 
  1712  0298                     	;# 
  1713  029F                     	;# 
  1714  030C                     	;# 
  1715  030D                     	;# 
  1716  030E                     	;# 
  1717  0311                     	;# 
  1718  0311                     	;# 
  1719  0312                     	;# 
  1720  0313                     	;# 
  1721  0314                     	;# 
  1722  0315                     	;# 
  1723  0315                     	;# 
  1724  0316                     	;# 
  1725  0317                     	;# 
  1726  0318                     	;# 
  1727  038C                     	;# 
  1728  038D                     	;# 
  1729  038E                     	;# 
  1730  0391                     	;# 
  1731  0392                     	;# 
  1732  0393                     	;# 
  1733  0394                     	;# 
  1734  0395                     	;# 
  1735  0396                     	;# 
  1736  0397                     	;# 
  1737  0398                     	;# 
  1738  0399                     	;# 
  1739  039A                     	;# 
  1740  039C                     	;# 
  1741  039D                     	;# 
  1742  039E                     	;# 
  1743  039F                     	;# 
  1744  0411                     	;# 
  1745  0411                     	;# 
  1746  0412                     	;# 
  1747  0413                     	;# 
  1748  0414                     	;# 
  1749  0415                     	;# 
  1750  0416                     	;# 
  1751  0417                     	;# 
  1752  0418                     	;# 
  1753  0418                     	;# 
  1754  0419                     	;# 
  1755  041A                     	;# 
  1756  041B                     	;# 
  1757  041C                     	;# 
  1758  041D                     	;# 
  1759  041E                     	;# 
  1760  041F                     	;# 
  1761  0498                     	;# 
  1762  0498                     	;# 
  1763  0499                     	;# 
  1764  049A                     	;# 
  1765  049B                     	;# 
  1766  049B                     	;# 
  1767  049C                     	;# 
  1768  049D                     	;# 
  1769  049E                     	;# 
  1770  049F                     	;# 
  1771  0617                     	;# 
  1772  0618                     	;# 
  1773  0619                     	;# 
  1774  0619                     	;# 
  1775  061A                     	;# 
  1776  061B                     	;# 
  1777  061C                     	;# 
  1778  061C                     	;# 
  1779  061F                     	;# 
  1780  0691                     	;# 
  1781  0692                     	;# 
  1782  0693                     	;# 
  1783  0694                     	;# 
  1784  0695                     	;# 
  1785  0696                     	;# 
  1786  0697                     	;# 
  1787  0698                     	;# 
  1788  0699                     	;# 
  1789  0711                     	;# 
  1790  0712                     	;# 
  1791  0713                     	;# 
  1792  0714                     	;# 
  1793  0715                     	;# 
  1794  0716                     	;# 
  1795  0717                     	;# 
  1796  0718                     	;# 
  1797  0719                     	;# 
  1798  0891                     	;# 
  1799  0891                     	;# 
  1800  0891                     	;# 
  1801  0891                     	;# 
  1802  0891                     	;# 
  1803  0891                     	;# 
  1804  0892                     	;# 
  1805  0892                     	;# 
  1806  0892                     	;# 
  1807  0893                     	;# 
  1808  0893                     	;# 
  1809  0893                     	;# 
  1810  0893                     	;# 
  1811  0893                     	;# 
  1812  0893                     	;# 
  1813  0894                     	;# 
  1814  0894                     	;# 
  1815  0894                     	;# 
  1816  0895                     	;# 
  1817  0895                     	;# 
  1818  0895                     	;# 
  1819  0896                     	;# 
  1820  0896                     	;# 
  1821  0896                     	;# 
  1822  089B                     	;# 
  1823  0911                     	;# 
  1824  0912                     	;# 
  1825  0913                     	;# 
  1826  0914                     	;# 
  1827  0915                     	;# 
  1828  0916                     	;# 
  1829  0918                     	;# 
  1830  0919                     	;# 
  1831  091A                     	;# 
  1832  091B                     	;# 
  1833  091C                     	;# 
  1834  091D                     	;# 
  1835  091E                     	;# 
  1836  091F                     	;# 
  1837  0E0F                     	;# 
  1838  0E10                     	;# 
  1839  0E11                     	;# 
  1840  0E12                     	;# 
  1841  0E13                     	;# 
  1842  0E14                     	;# 
  1843  0E15                     	;# 
  1844  0E16                     	;# 
  1845  0E17                     	;# 
  1846  0E18                     	;# 
  1847  0E19                     	;# 
  1848  0E1A                     	;# 
  1849  0E1B                     	;# 
  1850  0E1C                     	;# 
  1851  0E1D                     	;# 
  1852  0E1E                     	;# 
  1853  0E1F                     	;# 
  1854  0E20                     	;# 
  1855  0E21                     	;# 
  1856  0E22                     	;# 
  1857  0E24                     	;# 
  1858  0E25                     	;# 
  1859  0E28                     	;# 
  1860  0E29                     	;# 
  1861  0E2A                     	;# 
  1862  0E2B                     	;# 
  1863  0E2C                     	;# 
  1864  0E2D                     	;# 
  1865  0E2E                     	;# 
  1866  0E2F                     	;# 
  1867  0E90                     	;# 
  1868  0E91                     	;# 
  1869  0E92                     	;# 
  1870  0E94                     	;# 
  1871  0E95                     	;# 
  1872  0E9C                     	;# 
  1873  0E9D                     	;# 
  1874  0E9E                     	;# 
  1875  0E9F                     	;# 
  1876  0EA0                     	;# 
  1877  0EA1                     	;# 
  1878  0EA2                     	;# 
  1879  0EA3                     	;# 
  1880  0EA4                     	;# 
  1881  0EA5                     	;# 
  1882  0EA6                     	;# 
  1883  0EA7                     	;# 
  1884  0F0F                     	;# 
  1885  0F10                     	;# 
  1886  0F11                     	;# 
  1887  0F12                     	;# 
  1888  0F13                     	;# 
  1889  0F14                     	;# 
  1890  0F15                     	;# 
  1891  0F16                     	;# 
  1892  0F17                     	;# 
  1893  0F18                     	;# 
  1894  0F19                     	;# 
  1895  0F1A                     	;# 
  1896  0F1B                     	;# 
  1897  0F1C                     	;# 
  1898  0F1D                     	;# 
  1899  0F1E                     	;# 
  1900  0F1F                     	;# 
  1901  0F20                     	;# 
  1902  0F21                     	;# 
  1903  0F22                     	;# 
  1904  0F23                     	;# 
  1905  0F24                     	;# 
  1906  0F25                     	;# 
  1907  0F26                     	;# 
  1908  0F27                     	;# 
  1909  0F28                     	;# 
  1910  0F29                     	;# 
  1911  0F2A                     	;# 
  1912  0F2B                     	;# 
  1913  0F2C                     	;# 
  1914  0F2D                     	;# 
  1915  0F2E                     	;# 
  1916  0F2F                     	;# 
  1917  0F30                     	;# 
  1918  0F31                     	;# 
  1919  0F32                     	;# 
  1920  0F33                     	;# 
  1921  0F34                     	;# 
  1922  0F35                     	;# 
  1923  0F36                     	;# 
  1924  0F37                     	;# 
  1925  0FE4                     	;# 
  1926  0FE5                     	;# 
  1927  0FE6                     	;# 
  1928  0FE7                     	;# 
  1929  0FE8                     	;# 
  1930  0FE9                     	;# 
  1931  0FEA                     	;# 
  1932  0FEB                     	;# 
  1933  0FED                     	;# 
  1934  0FEE                     	;# 
  1935  0FEF                     	;# 
  1936  0000                     	;# 
  1937  0001                     	;# 
  1938  0002                     	;# 
  1939  0003                     	;# 
  1940  0004                     	;# 
  1941  0005                     	;# 
  1942  0006                     	;# 
  1943  0007                     	;# 
  1944  0008                     	;# 
  1945  0009                     	;# 
  1946  000A                     	;# 
  1947  000B                     	;# 
  1948  000C                     	;# 
  1949  000D                     	;# 
  1950  000E                     	;# 
  1951  0010                     	;# 
  1952  0011                     	;# 
  1953  0012                     	;# 
  1954  0013                     	;# 
  1955  0014                     	;# 
  1956  0015                     	;# 
  1957  0015                     	;# 
  1958  0016                     	;# 
  1959  0016                     	;# 
  1960  0017                     	;# 
  1961  0018                     	;# 
  1962  0019                     	;# 
  1963  0019                     	;# 
  1964  001A                     	;# 
  1965  001B                     	;# 
  1966  001C                     	;# 
  1967  001D                     	;# 
  1968  001E                     	;# 
  1969  001F                     	;# 
  1970  008C                     	;# 
  1971  008D                     	;# 
  1972  008E                     	;# 
  1973  0090                     	;# 
  1974  0091                     	;# 
  1975  0092                     	;# 
  1976  0093                     	;# 
  1977  0094                     	;# 
  1978  0097                     	;# 
  1979  009B                     	;# 
  1980  009B                     	;# 
  1981  009C                     	;# 
  1982  009D                     	;# 
  1983  009E                     	;# 
  1984  009F                     	;# 
  1985  010C                     	;# 
  1986  010D                     	;# 
  1987  010E                     	;# 
  1988  0111                     	;# 
  1989  0112                     	;# 
  1990  0113                     	;# 
  1991  0114                     	;# 
  1992  0115                     	;# 
  1993  0116                     	;# 
  1994  0117                     	;# 
  1995  0118                     	;# 
  1996  0119                     	;# 
  1997  018C                     	;# 
  1998  018D                     	;# 
  1999  018E                     	;# 
  2000  0197                     	;# 
  2001  0199                     	;# 
  2002  0199                     	;# 
  2003  0199                     	;# 
  2004  019A                     	;# 
  2005  019A                     	;# 
  2006  019A                     	;# 
  2007  019B                     	;# 
  2008  019B                     	;# 
  2009  019B                     	;# 
  2010  019B                     	;# 
  2011  019B                     	;# 
  2012  019C                     	;# 
  2013  019C                     	;# 
  2014  019C                     	;# 
  2015  019D                     	;# 
  2016  019D                     	;# 
  2017  019D                     	;# 
  2018  019E                     	;# 
  2019  019E                     	;# 
  2020  019E                     	;# 
  2021  019F                     	;# 
  2022  019F                     	;# 
  2023  019F                     	;# 
  2024  019F                     	;# 
  2025  019F                     	;# 
  2026  020C                     	;# 
  2027  020D                     	;# 
  2028  020E                     	;# 
  2029  0211                     	;# 
  2030  0211                     	;# 
  2031  0212                     	;# 
  2032  0212                     	;# 
  2033  0213                     	;# 
  2034  0213                     	;# 
  2035  0214                     	;# 
  2036  0214                     	;# 
  2037  0215                     	;# 
  2038  0215                     	;# 
  2039  0215                     	;# 
  2040  0215                     	;# 
  2041  0216                     	;# 
  2042  0216                     	;# 
  2043  0217                     	;# 
  2044  0217                     	;# 
  2045  0219                     	;# 
  2046  021A                     	;# 
  2047  021B                     	;# 
  2048  021C                     	;# 
  2049  021D                     	;# 
  2050  021D                     	;# 
  2051  021E                     	;# 
  2052  021F                     	;# 
  2053  028C                     	;# 
  2054  028D                     	;# 
  2055  028E                     	;# 
  2056  0291                     	;# 
  2057  0291                     	;# 
  2058  0292                     	;# 
  2059  0293                     	;# 
  2060  0294                     	;# 
  2061  0295                     	;# 
  2062  0295                     	;# 
  2063  0296                     	;# 
  2064  0297                     	;# 
  2065  0298                     	;# 
  2066  029F                     	;# 
  2067  030C                     	;# 
  2068  030D                     	;# 
  2069  030E                     	;# 
  2070  0311                     	;# 
  2071  0311                     	;# 
  2072  0312                     	;# 
  2073  0313                     	;# 
  2074  0314                     	;# 
  2075  0315                     	;# 
  2076  0315                     	;# 
  2077  0316                     	;# 
  2078  0317                     	;# 
  2079  0318                     	;# 
  2080  038C                     	;# 
  2081  038D                     	;# 
  2082  038E                     	;# 
  2083  0391                     	;# 
  2084  0392                     	;# 
  2085  0393                     	;# 
  2086  0394                     	;# 
  2087  0395                     	;# 
  2088  0396                     	;# 
  2089  0397                     	;# 
  2090  0398                     	;# 
  2091  0399                     	;# 
  2092  039A                     	;# 
  2093  039C                     	;# 
  2094  039D                     	;# 
  2095  039E                     	;# 
  2096  039F                     	;# 
  2097  0411                     	;# 
  2098  0411                     	;# 
  2099  0412                     	;# 
  2100  0413                     	;# 
  2101  0414                     	;# 
  2102  0415                     	;# 
  2103  0416                     	;# 
  2104  0417                     	;# 
  2105  0418                     	;# 
  2106  0418                     	;# 
  2107  0419                     	;# 
  2108  041A                     	;# 
  2109  041B                     	;# 
  2110  041C                     	;# 
  2111  041D                     	;# 
  2112  041E                     	;# 
  2113  041F                     	;# 
  2114  0498                     	;# 
  2115  0498                     	;# 
  2116  0499                     	;# 
  2117  049A                     	;# 
  2118  049B                     	;# 
  2119  049B                     	;# 
  2120  049C                     	;# 
  2121  049D                     	;# 
  2122  049E                     	;# 
  2123  049F                     	;# 
  2124  0617                     	;# 
  2125  0618                     	;# 
  2126  0619                     	;# 
  2127  0619                     	;# 
  2128  061A                     	;# 
  2129  061B                     	;# 
  2130  061C                     	;# 
  2131  061C                     	;# 
  2132  061F                     	;# 
  2133  0691                     	;# 
  2134  0692                     	;# 
  2135  0693                     	;# 
  2136  0694                     	;# 
  2137  0695                     	;# 
  2138  0696                     	;# 
  2139  0697                     	;# 
  2140  0698                     	;# 
  2141  0699                     	;# 
  2142  0711                     	;# 
  2143  0712                     	;# 
  2144  0713                     	;# 
  2145  0714                     	;# 
  2146  0715                     	;# 
  2147  0716                     	;# 
  2148  0717                     	;# 
  2149  0718                     	;# 
  2150  0719                     	;# 
  2151  0891                     	;# 
  2152  0891                     	;# 
  2153  0891                     	;# 
  2154  0891                     	;# 
  2155  0891                     	;# 
  2156  0891                     	;# 
  2157  0892                     	;# 
  2158  0892                     	;# 
  2159  0892                     	;# 
  2160  0893                     	;# 
  2161  0893                     	;# 
  2162  0893                     	;# 
  2163  0893                     	;# 
  2164  0893                     	;# 
  2165  0893                     	;# 
  2166  0894                     	;# 
  2167  0894                     	;# 
  2168  0894                     	;# 
  2169  0895                     	;# 
  2170  0895                     	;# 
  2171  0895                     	;# 
  2172  0896                     	;# 
  2173  0896                     	;# 
  2174  0896                     	;# 
  2175  089B                     	;# 
  2176  0911                     	;# 
  2177  0912                     	;# 
  2178  0913                     	;# 
  2179  0914                     	;# 
  2180  0915                     	;# 
  2181  0916                     	;# 
  2182  0918                     	;# 
  2183  0919                     	;# 
  2184  091A                     	;# 
  2185  091B                     	;# 
  2186  091C                     	;# 
  2187  091D                     	;# 
  2188  091E                     	;# 
  2189  091F                     	;# 
  2190  0E0F                     	;# 
  2191  0E10                     	;# 
  2192  0E11                     	;# 
  2193  0E12                     	;# 
  2194  0E13                     	;# 
  2195  0E14                     	;# 
  2196  0E15                     	;# 
  2197  0E16                     	;# 
  2198  0E17                     	;# 
  2199  0E18                     	;# 
  2200  0E19                     	;# 
  2201  0E1A                     	;# 
  2202  0E1B                     	;# 
  2203  0E1C                     	;# 
  2204  0E1D                     	;# 
  2205  0E1E                     	;# 
  2206  0E1F                     	;# 
  2207  0E20                     	;# 
  2208  0E21                     	;# 
  2209  0E22                     	;# 
  2210  0E24                     	;# 
  2211  0E25                     	;# 
  2212  0E28                     	;# 
  2213  0E29                     	;# 
  2214  0E2A                     	;# 
  2215  0E2B                     	;# 
  2216  0E2C                     	;# 
  2217  0E2D                     	;# 
  2218  0E2E                     	;# 
  2219  0E2F                     	;# 
  2220  0E90                     	;# 
  2221  0E91                     	;# 
  2222  0E92                     	;# 
  2223  0E94                     	;# 
  2224  0E95                     	;# 
  2225  0E9C                     	;# 
  2226  0E9D                     	;# 
  2227  0E9E                     	;# 
  2228  0E9F                     	;# 
  2229  0EA0                     	;# 
  2230  0EA1                     	;# 
  2231  0EA2                     	;# 
  2232  0EA3                     	;# 
  2233  0EA4                     	;# 
  2234  0EA5                     	;# 
  2235  0EA6                     	;# 
  2236  0EA7                     	;# 
  2237  0F0F                     	;# 
  2238  0F10                     	;# 
  2239  0F11                     	;# 
  2240  0F12                     	;# 
  2241  0F13                     	;# 
  2242  0F14                     	;# 
  2243  0F15                     	;# 
  2244  0F16                     	;# 
  2245  0F17                     	;# 
  2246  0F18                     	;# 
  2247  0F19                     	;# 
  2248  0F1A                     	;# 
  2249  0F1B                     	;# 
  2250  0F1C                     	;# 
  2251  0F1D                     	;# 
  2252  0F1E                     	;# 
  2253  0F1F                     	;# 
  2254  0F20                     	;# 
  2255  0F21                     	;# 
  2256  0F22                     	;# 
  2257  0F23                     	;# 
  2258  0F24                     	;# 
  2259  0F25                     	;# 
  2260  0F26                     	;# 
  2261  0F27                     	;# 
  2262  0F28                     	;# 
  2263  0F29                     	;# 
  2264  0F2A                     	;# 
  2265  0F2B                     	;# 
  2266  0F2C                     	;# 
  2267  0F2D                     	;# 
  2268  0F2E                     	;# 
  2269  0F2F                     	;# 
  2270  0F30                     	;# 
  2271  0F31                     	;# 
  2272  0F32                     	;# 
  2273  0F33                     	;# 
  2274  0F34                     	;# 
  2275  0F35                     	;# 
  2276  0F36                     	;# 
  2277  0F37                     	;# 
  2278  0FE4                     	;# 
  2279  0FE5                     	;# 
  2280  0FE6                     	;# 
  2281  0FE7                     	;# 
  2282  0FE8                     	;# 
  2283  0FE9                     	;# 
  2284  0FEA                     	;# 
  2285  0FEB                     	;# 
  2286  0FED                     	;# 
  2287  0FEE                     	;# 
  2288  0FEF                     	;# 
  2289  0000                     	;# 
  2290  0001                     	;# 
  2291  0002                     	;# 
  2292  0003                     	;# 
  2293  0004                     	;# 
  2294  0005                     	;# 
  2295  0006                     	;# 
  2296  0007                     	;# 
  2297  0008                     	;# 
  2298  0009                     	;# 
  2299  000A                     	;# 
  2300  000B                     	;# 
  2301  000C                     	;# 
  2302  000D                     	;# 
  2303  000E                     	;# 
  2304  0010                     	;# 
  2305  0011                     	;# 
  2306  0012                     	;# 
  2307  0013                     	;# 
  2308  0014                     	;# 
  2309  0015                     	;# 
  2310  0015                     	;# 
  2311  0016                     	;# 
  2312  0016                     	;# 
  2313  0017                     	;# 
  2314  0018                     	;# 
  2315  0019                     	;# 
  2316  0019                     	;# 
  2317  001A                     	;# 
  2318  001B                     	;# 
  2319  001C                     	;# 
  2320  001D                     	;# 
  2321  001E                     	;# 
  2322  001F                     	;# 
  2323  008C                     	;# 
  2324  008D                     	;# 
  2325  008E                     	;# 
  2326  0090                     	;# 
  2327  0091                     	;# 
  2328  0092                     	;# 
  2329  0093                     	;# 
  2330  0094                     	;# 
  2331  0097                     	;# 
  2332  009B                     	;# 
  2333  009B                     	;# 
  2334  009C                     	;# 
  2335  009D                     	;# 
  2336  009E                     	;# 
  2337  009F                     	;# 
  2338  010C                     	;# 
  2339  010D                     	;# 
  2340  010E                     	;# 
  2341  0111                     	;# 
  2342  0112                     	;# 
  2343  0113                     	;# 
  2344  0114                     	;# 
  2345  0115                     	;# 
  2346  0116                     	;# 
  2347  0117                     	;# 
  2348  0118                     	;# 
  2349  0119                     	;# 
  2350  018C                     	;# 
  2351  018D                     	;# 
  2352  018E                     	;# 
  2353  0197                     	;# 
  2354  0199                     	;# 
  2355  0199                     	;# 
  2356  0199                     	;# 
  2357  019A                     	;# 
  2358  019A                     	;# 
  2359  019A                     	;# 
  2360  019B                     	;# 
  2361  019B                     	;# 
  2362  019B                     	;# 
  2363  019B                     	;# 
  2364  019B                     	;# 
  2365  019C                     	;# 
  2366  019C                     	;# 
  2367  019C                     	;# 
  2368  019D                     	;# 
  2369  019D                     	;# 
  2370  019D                     	;# 
  2371  019E                     	;# 
  2372  019E                     	;# 
  2373  019E                     	;# 
  2374  019F                     	;# 
  2375  019F                     	;# 
  2376  019F                     	;# 
  2377  019F                     	;# 
  2378  019F                     	;# 
  2379  020C                     	;# 
  2380  020D                     	;# 
  2381  020E                     	;# 
  2382  0211                     	;# 
  2383  0211                     	;# 
  2384  0212                     	;# 
  2385  0212                     	;# 
  2386  0213                     	;# 
  2387  0213                     	;# 
  2388  0214                     	;# 
  2389  0214                     	;# 
  2390  0215                     	;# 
  2391  0215                     	;# 
  2392  0215                     	;# 
  2393  0215                     	;# 
  2394  0216                     	;# 
  2395  0216                     	;# 
  2396  0217                     	;# 
  2397  0217                     	;# 
  2398  0219                     	;# 
  2399  021A                     	;# 
  2400  021B                     	;# 
  2401  021C                     	;# 
  2402  021D                     	;# 
  2403  021D                     	;# 
  2404  021E                     	;# 
  2405  021F                     	;# 
  2406  028C                     	;# 
  2407  028D                     	;# 
  2408  028E                     	;# 
  2409  0291                     	;# 
  2410  0291                     	;# 
  2411  0292                     	;# 
  2412  0293                     	;# 
  2413  0294                     	;# 
  2414  0295                     	;# 
  2415  0295                     	;# 
  2416  0296                     	;# 
  2417  0297                     	;# 
  2418  0298                     	;# 
  2419  029F                     	;# 
  2420  030C                     	;# 
  2421  030D                     	;# 
  2422  030E                     	;# 
  2423  0311                     	;# 
  2424  0311                     	;# 
  2425  0312                     	;# 
  2426  0313                     	;# 
  2427  0314                     	;# 
  2428  0315                     	;# 
  2429  0315                     	;# 
  2430  0316                     	;# 
  2431  0317                     	;# 
  2432  0318                     	;# 
  2433  038C                     	;# 
  2434  038D                     	;# 
  2435  038E                     	;# 
  2436  0391                     	;# 
  2437  0392                     	;# 
  2438  0393                     	;# 
  2439  0394                     	;# 
  2440  0395                     	;# 
  2441  0396                     	;# 
  2442  0397                     	;# 
  2443  0398                     	;# 
  2444  0399                     	;# 
  2445  039A                     	;# 
  2446  039C                     	;# 
  2447  039D                     	;# 
  2448  039E                     	;# 
  2449  039F                     	;# 
  2450  0411                     	;# 
  2451  0411                     	;# 
  2452  0412                     	;# 
  2453  0413                     	;# 
  2454  0414                     	;# 
  2455  0415                     	;# 
  2456  0416                     	;# 
  2457  0417                     	;# 
  2458  0418                     	;# 
  2459  0418                     	;# 
  2460  0419                     	;# 
  2461  041A                     	;# 
  2462  041B                     	;# 
  2463  041C                     	;# 
  2464  041D                     	;# 
  2465  041E                     	;# 
  2466  041F                     	;# 
  2467  0498                     	;# 
  2468  0498                     	;# 
  2469  0499                     	;# 
  2470  049A                     	;# 
  2471  049B                     	;# 
  2472  049B                     	;# 
  2473  049C                     	;# 
  2474  049D                     	;# 
  2475  049E                     	;# 
  2476  049F                     	;# 
  2477  0617                     	;# 
  2478  0618                     	;# 
  2479  0619                     	;# 
  2480  0619                     	;# 
  2481  061A                     	;# 
  2482  061B                     	;# 
  2483  061C                     	;# 
  2484  061C                     	;# 
  2485  061F                     	;# 
  2486  0691                     	;# 
  2487  0692                     	;# 
  2488  0693                     	;# 
  2489  0694                     	;# 
  2490  0695                     	;# 
  2491  0696                     	;# 
  2492  0697                     	;# 
  2493  0698                     	;# 
  2494  0699                     	;# 
  2495  0711                     	;# 
  2496  0712                     	;# 
  2497  0713                     	;# 
  2498  0714                     	;# 
  2499  0715                     	;# 
  2500  0716                     	;# 
  2501  0717                     	;# 
  2502  0718                     	;# 
  2503  0719                     	;# 
  2504  0891                     	;# 
  2505  0891                     	;# 
  2506  0891                     	;# 
  2507  0891                     	;# 
  2508  0891                     	;# 
  2509  0891                     	;# 
  2510  0892                     	;# 
  2511  0892                     	;# 
  2512  0892                     	;# 
  2513  0893                     	;# 
  2514  0893                     	;# 
  2515  0893                     	;# 
  2516  0893                     	;# 
  2517  0893                     	;# 
  2518  0893                     	;# 
  2519  0894                     	;# 
  2520  0894                     	;# 
  2521  0894                     	;# 
  2522  0895                     	;# 
  2523  0895                     	;# 
  2524  0895                     	;# 
  2525  0896                     	;# 
  2526  0896                     	;# 
  2527  0896                     	;# 
  2528  089B                     	;# 
  2529  0911                     	;# 
  2530  0912                     	;# 
  2531  0913                     	;# 
  2532  0914                     	;# 
  2533  0915                     	;# 
  2534  0916                     	;# 
  2535  0918                     	;# 
  2536  0919                     	;# 
  2537  091A                     	;# 
  2538  091B                     	;# 
  2539  091C                     	;# 
  2540  091D                     	;# 
  2541  091E                     	;# 
  2542  091F                     	;# 
  2543  0E0F                     	;# 
  2544  0E10                     	;# 
  2545  0E11                     	;# 
  2546  0E12                     	;# 
  2547  0E13                     	;# 
  2548  0E14                     	;# 
  2549  0E15                     	;# 
  2550  0E16                     	;# 
  2551  0E17                     	;# 
  2552  0E18                     	;# 
  2553  0E19                     	;# 
  2554  0E1A                     	;# 
  2555  0E1B                     	;# 
  2556  0E1C                     	;# 
  2557  0E1D                     	;# 
  2558  0E1E                     	;# 
  2559  0E1F                     	;# 
  2560  0E20                     	;# 
  2561  0E21                     	;# 
  2562  0E22                     	;# 
  2563  0E24                     	;# 
  2564  0E25                     	;# 
  2565  0E28                     	;# 
  2566  0E29                     	;# 
  2567  0E2A                     	;# 
  2568  0E2B                     	;# 
  2569  0E2C                     	;# 
  2570  0E2D                     	;# 
  2571  0E2E                     	;# 
  2572  0E2F                     	;# 
  2573  0E90                     	;# 
  2574  0E91                     	;# 
  2575  0E92                     	;# 
  2576  0E94                     	;# 
  2577  0E95                     	;# 
  2578  0E9C                     	;# 
  2579  0E9D                     	;# 
  2580  0E9E                     	;# 
  2581  0E9F                     	;# 
  2582  0EA0                     	;# 
  2583  0EA1                     	;# 
  2584  0EA2                     	;# 
  2585  0EA3                     	;# 
  2586  0EA4                     	;# 
  2587  0EA5                     	;# 
  2588  0EA6                     	;# 
  2589  0EA7                     	;# 
  2590  0F0F                     	;# 
  2591  0F10                     	;# 
  2592  0F11                     	;# 
  2593  0F12                     	;# 
  2594  0F13                     	;# 
  2595  0F14                     	;# 
  2596  0F15                     	;# 
  2597  0F16                     	;# 
  2598  0F17                     	;# 
  2599  0F18                     	;# 
  2600  0F19                     	;# 
  2601  0F1A                     	;# 
  2602  0F1B                     	;# 
  2603  0F1C                     	;# 
  2604  0F1D                     	;# 
  2605  0F1E                     	;# 
  2606  0F1F                     	;# 
  2607  0F20                     	;# 
  2608  0F21                     	;# 
  2609  0F22                     	;# 
  2610  0F23                     	;# 
  2611  0F24                     	;# 
  2612  0F25                     	;# 
  2613  0F26                     	;# 
  2614  0F27                     	;# 
  2615  0F28                     	;# 
  2616  0F29                     	;# 
  2617  0F2A                     	;# 
  2618  0F2B                     	;# 
  2619  0F2C                     	;# 
  2620  0F2D                     	;# 
  2621  0F2E                     	;# 
  2622  0F2F                     	;# 
  2623  0F30                     	;# 
  2624  0F31                     	;# 
  2625  0F32                     	;# 
  2626  0F33                     	;# 
  2627  0F34                     	;# 
  2628  0F35                     	;# 
  2629  0F36                     	;# 
  2630  0F37                     	;# 
  2631  0FE4                     	;# 
  2632  0FE5                     	;# 
  2633  0FE6                     	;# 
  2634  0FE7                     	;# 
  2635  0FE8                     	;# 
  2636  0FE9                     	;# 
  2637  0FEA                     	;# 
  2638  0FEB                     	;# 
  2639  0FED                     	;# 
  2640  0FEE                     	;# 
  2641  0FEF                     	;# 
  2642  0000                     	;# 
  2643  0001                     	;# 
  2644  0002                     	;# 
  2645  0003                     	;# 
  2646  0004                     	;# 
  2647  0005                     	;# 
  2648  0006                     	;# 
  2649  0007                     	;# 
  2650  0008                     	;# 
  2651  0009                     	;# 
  2652  000A                     	;# 
  2653  000B                     	;# 
  2654  000C                     	;# 
  2655  000D                     	;# 
  2656  000E                     	;# 
  2657  0010                     	;# 
  2658  0011                     	;# 
  2659  0012                     	;# 
  2660  0013                     	;# 
  2661  0014                     	;# 
  2662  0015                     	;# 
  2663  0015                     	;# 
  2664  0016                     	;# 
  2665  0016                     	;# 
  2666  0017                     	;# 
  2667  0018                     	;# 
  2668  0019                     	;# 
  2669  0019                     	;# 
  2670  001A                     	;# 
  2671  001B                     	;# 
  2672  001C                     	;# 
  2673  001D                     	;# 
  2674  001E                     	;# 
  2675  001F                     	;# 
  2676  008C                     	;# 
  2677  008D                     	;# 
  2678  008E                     	;# 
  2679  0090                     	;# 
  2680  0091                     	;# 
  2681  0092                     	;# 
  2682  0093                     	;# 
  2683  0094                     	;# 
  2684  0097                     	;# 
  2685  009B                     	;# 
  2686  009B                     	;# 
  2687  009C                     	;# 
  2688  009D                     	;# 
  2689  009E                     	;# 
  2690  009F                     	;# 
  2691  010C                     	;# 
  2692  010D                     	;# 
  2693  010E                     	;# 
  2694  0111                     	;# 
  2695  0112                     	;# 
  2696  0113                     	;# 
  2697  0114                     	;# 
  2698  0115                     	;# 
  2699  0116                     	;# 
  2700  0117                     	;# 
  2701  0118                     	;# 
  2702  0119                     	;# 
  2703  018C                     	;# 
  2704  018D                     	;# 
  2705  018E                     	;# 
  2706  0197                     	;# 
  2707  0199                     	;# 
  2708  0199                     	;# 
  2709  0199                     	;# 
  2710  019A                     	;# 
  2711  019A                     	;# 
  2712  019A                     	;# 
  2713  019B                     	;# 
  2714  019B                     	;# 
  2715  019B                     	;# 
  2716  019B                     	;# 
  2717  019B                     	;# 
  2718  019C                     	;# 
  2719  019C                     	;# 
  2720  019C                     	;# 
  2721  019D                     	;# 
  2722  019D                     	;# 
  2723  019D                     	;# 
  2724  019E                     	;# 
  2725  019E                     	;# 
  2726  019E                     	;# 
  2727  019F                     	;# 
  2728  019F                     	;# 
  2729  019F                     	;# 
  2730  019F                     	;# 
  2731  019F                     	;# 
  2732  020C                     	;# 
  2733  020D                     	;# 
  2734  020E                     	;# 
  2735  0211                     	;# 
  2736  0211                     	;# 
  2737  0212                     	;# 
  2738  0212                     	;# 
  2739  0213                     	;# 
  2740  0213                     	;# 
  2741  0214                     	;# 
  2742  0214                     	;# 
  2743  0215                     	;# 
  2744  0215                     	;# 
  2745  0215                     	;# 
  2746  0215                     	;# 
  2747  0216                     	;# 
  2748  0216                     	;# 
  2749  0217                     	;# 
  2750  0217                     	;# 
  2751  0219                     	;# 
  2752  021A                     	;# 
  2753  021B                     	;# 
  2754  021C                     	;# 
  2755  021D                     	;# 
  2756  021D                     	;# 
  2757  021E                     	;# 
  2758  021F                     	;# 
  2759  028C                     	;# 
  2760  028D                     	;# 
  2761  028E                     	;# 
  2762  0291                     	;# 
  2763  0291                     	;# 
  2764  0292                     	;# 
  2765  0293                     	;# 
  2766  0294                     	;# 
  2767  0295                     	;# 
  2768  0295                     	;# 
  2769  0296                     	;# 
  2770  0297                     	;# 
  2771  0298                     	;# 
  2772  029F                     	;# 
  2773  030C                     	;# 
  2774  030D                     	;# 
  2775  030E                     	;# 
  2776  0311                     	;# 
  2777  0311                     	;# 
  2778  0312                     	;# 
  2779  0313                     	;# 
  2780  0314                     	;# 
  2781  0315                     	;# 
  2782  0315                     	;# 
  2783  0316                     	;# 
  2784  0317                     	;# 
  2785  0318                     	;# 
  2786  038C                     	;# 
  2787  038D                     	;# 
  2788  038E                     	;# 
  2789  0391                     	;# 
  2790  0392                     	;# 
  2791  0393                     	;# 
  2792  0394                     	;# 
  2793  0395                     	;# 
  2794  0396                     	;# 
  2795  0397                     	;# 
  2796  0398                     	;# 
  2797  0399                     	;# 
  2798  039A                     	;# 
  2799  039C                     	;# 
  2800  039D                     	;# 
  2801  039E                     	;# 
  2802  039F                     	;# 
  2803  0411                     	;# 
  2804  0411                     	;# 
  2805  0412                     	;# 
  2806  0413                     	;# 
  2807  0414                     	;# 
  2808  0415                     	;# 
  2809  0416                     	;# 
  2810  0417                     	;# 
  2811  0418                     	;# 
  2812  0418                     	;# 
  2813  0419                     	;# 
  2814  041A                     	;# 
  2815  041B                     	;# 
  2816  041C                     	;# 
  2817  041D                     	;# 
  2818  041E                     	;# 
  2819  041F                     	;# 
  2820  0498                     	;# 
  2821  0498                     	;# 
  2822  0499                     	;# 
  2823  049A                     	;# 
  2824  049B                     	;# 
  2825  049B                     	;# 
  2826  049C                     	;# 
  2827  049D                     	;# 
  2828  049E                     	;# 
  2829  049F                     	;# 
  2830  0617                     	;# 
  2831  0618                     	;# 
  2832  0619                     	;# 
  2833  0619                     	;# 
  2834  061A                     	;# 
  2835  061B                     	;# 
  2836  061C                     	;# 
  2837  061C                     	;# 
  2838  061F                     	;# 
  2839  0691                     	;# 
  2840  0692                     	;# 
  2841  0693                     	;# 
  2842  0694                     	;# 
  2843  0695                     	;# 
  2844  0696                     	;# 
  2845  0697                     	;# 
  2846  0698                     	;# 
  2847  0699                     	;# 
  2848  0711                     	;# 
  2849  0712                     	;# 
  2850  0713                     	;# 
  2851  0714                     	;# 
  2852  0715                     	;# 
  2853  0716                     	;# 
  2854  0717                     	;# 
  2855  0718                     	;# 
  2856  0719                     	;# 
  2857  0891                     	;# 
  2858  0891                     	;# 
  2859  0891                     	;# 
  2860  0891                     	;# 
  2861  0891                     	;# 
  2862  0891                     	;# 
  2863  0892                     	;# 
  2864  0892                     	;# 
  2865  0892                     	;# 
  2866  0893                     	;# 
  2867  0893                     	;# 
  2868  0893                     	;# 
  2869  0893                     	;# 
  2870  0893                     	;# 
  2871  0893                     	;# 
  2872  0894                     	;# 
  2873  0894                     	;# 
  2874  0894                     	;# 
  2875  0895                     	;# 
  2876  0895                     	;# 
  2877  0895                     	;# 
  2878  0896                     	;# 
  2879  0896                     	;# 
  2880  0896                     	;# 
  2881  089B                     	;# 
  2882  0911                     	;# 
  2883  0912                     	;# 
  2884  0913                     	;# 
  2885  0914                     	;# 
  2886  0915                     	;# 
  2887  0916                     	;# 
  2888  0918                     	;# 
  2889  0919                     	;# 
  2890  091A                     	;# 
  2891  091B                     	;# 
  2892  091C                     	;# 
  2893  091D                     	;# 
  2894  091E                     	;# 
  2895  091F                     	;# 
  2896  0E0F                     	;# 
  2897  0E10                     	;# 
  2898  0E11                     	;# 
  2899  0E12                     	;# 
  2900  0E13                     	;# 
  2901  0E14                     	;# 
  2902  0E15                     	;# 
  2903  0E16                     	;# 
  2904  0E17                     	;# 
  2905  0E18                     	;# 
  2906  0E19                     	;# 
  2907  0E1A                     	;# 
  2908  0E1B                     	;# 
  2909  0E1C                     	;# 
  2910  0E1D                     	;# 
  2911  0E1E                     	;# 
  2912  0E1F                     	;# 
  2913  0E20                     	;# 
  2914  0E21                     	;# 
  2915  0E22                     	;# 
  2916  0E24                     	;# 
  2917  0E25                     	;# 
  2918  0E28                     	;# 
  2919  0E29                     	;# 
  2920  0E2A                     	;# 
  2921  0E2B                     	;# 
  2922  0E2C                     	;# 
  2923  0E2D                     	;# 
  2924  0E2E                     	;# 
  2925  0E2F                     	;# 
  2926  0E90                     	;# 
  2927  0E91                     	;# 
  2928  0E92                     	;# 
  2929  0E94                     	;# 
  2930  0E95                     	;# 
  2931  0E9C                     	;# 
  2932  0E9D                     	;# 
  2933  0E9E                     	;# 
  2934  0E9F                     	;# 
  2935  0EA0                     	;# 
  2936  0EA1                     	;# 
  2937  0EA2                     	;# 
  2938  0EA3                     	;# 
  2939  0EA4                     	;# 
  2940  0EA5                     	;# 
  2941  0EA6                     	;# 
  2942  0EA7                     	;# 
  2943  0F0F                     	;# 
  2944  0F10                     	;# 
  2945  0F11                     	;# 
  2946  0F12                     	;# 
  2947  0F13                     	;# 
  2948  0F14                     	;# 
  2949  0F15                     	;# 
  2950  0F16                     	;# 
  2951  0F17                     	;# 
  2952  0F18                     	;# 
  2953  0F19                     	;# 
  2954  0F1A                     	;# 
  2955  0F1B                     	;# 
  2956  0F1C                     	;# 
  2957  0F1D                     	;# 
  2958  0F1E                     	;# 
  2959  0F1F                     	;# 
  2960  0F20                     	;# 
  2961  0F21                     	;# 
  2962  0F22                     	;# 
  2963  0F23                     	;# 
  2964  0F24                     	;# 
  2965  0F25                     	;# 
  2966  0F26                     	;# 
  2967  0F27                     	;# 
  2968  0F28                     	;# 
  2969  0F29                     	;# 
  2970  0F2A                     	;# 
  2971  0F2B                     	;# 
  2972  0F2C                     	;# 
  2973  0F2D                     	;# 
  2974  0F2E                     	;# 
  2975  0F2F                     	;# 
  2976  0F30                     	;# 
  2977  0F31                     	;# 
  2978  0F32                     	;# 
  2979  0F33                     	;# 
  2980  0F34                     	;# 
  2981  0F35                     	;# 
  2982  0F36                     	;# 
  2983  0F37                     	;# 
  2984  0FE4                     	;# 
  2985  0FE5                     	;# 
  2986  0FE6                     	;# 
  2987  0FE7                     	;# 
  2988  0FE8                     	;# 
  2989  0FE9                     	;# 
  2990  0FEA                     	;# 
  2991  0FEB                     	;# 
  2992  0FED                     	;# 
  2993  0FEE                     	;# 
  2994  0FEF                     	;# 
  2995  0000                     	;# 
  2996  0001                     	;# 
  2997  0002                     	;# 
  2998  0003                     	;# 
  2999  0004                     	;# 
  3000  0005                     	;# 
  3001  0006                     	;# 
  3002  0007                     	;# 
  3003  0008                     	;# 
  3004  0009                     	;# 
  3005  000A                     	;# 
  3006  000B                     	;# 
  3007  000C                     	;# 
  3008  000D                     	;# 
  3009  000E                     	;# 
  3010  0010                     	;# 
  3011  0011                     	;# 
  3012  0012                     	;# 
  3013  0013                     	;# 
  3014  0014                     	;# 
  3015  0015                     	;# 
  3016  0015                     	;# 
  3017  0016                     	;# 
  3018  0016                     	;# 
  3019  0017                     	;# 
  3020  0018                     	;# 
  3021  0019                     	;# 
  3022  0019                     	;# 
  3023  001A                     	;# 
  3024  001B                     	;# 
  3025  001C                     	;# 
  3026  001D                     	;# 
  3027  001E                     	;# 
  3028  001F                     	;# 
  3029  008C                     	;# 
  3030  008D                     	;# 
  3031  008E                     	;# 
  3032  0090                     	;# 
  3033  0091                     	;# 
  3034  0092                     	;# 
  3035  0093                     	;# 
  3036  0094                     	;# 
  3037  0097                     	;# 
  3038  009B                     	;# 
  3039  009B                     	;# 
  3040  009C                     	;# 
  3041  009D                     	;# 
  3042  009E                     	;# 
  3043  009F                     	;# 
  3044  010C                     	;# 
  3045  010D                     	;# 
  3046  010E                     	;# 
  3047  0111                     	;# 
  3048  0112                     	;# 
  3049  0113                     	;# 
  3050  0114                     	;# 
  3051  0115                     	;# 
  3052  0116                     	;# 
  3053  0117                     	;# 
  3054  0118                     	;# 
  3055  0119                     	;# 
  3056  018C                     	;# 
  3057  018D                     	;# 
  3058  018E                     	;# 
  3059  0197                     	;# 
  3060  0199                     	;# 
  3061  0199                     	;# 
  3062  0199                     	;# 
  3063  019A                     	;# 
  3064  019A                     	;# 
  3065  019A                     	;# 
  3066  019B                     	;# 
  3067  019B                     	;# 
  3068  019B                     	;# 
  3069  019B                     	;# 
  3070  019B                     	;# 
  3071  019C                     	;# 
  3072  019C                     	;# 
  3073  019C                     	;# 
  3074  019D                     	;# 
  3075  019D                     	;# 
  3076  019D                     	;# 
  3077  019E                     	;# 
  3078  019E                     	;# 
  3079  019E                     	;# 
  3080  019F                     	;# 
  3081  019F                     	;# 
  3082  019F                     	;# 
  3083  019F                     	;# 
  3084  019F                     	;# 
  3085  020C                     	;# 
  3086  020D                     	;# 
  3087  020E                     	;# 
  3088  0211                     	;# 
  3089  0211                     	;# 
  3090  0212                     	;# 
  3091  0212                     	;# 
  3092  0213                     	;# 
  3093  0213                     	;# 
  3094  0214                     	;# 
  3095  0214                     	;# 
  3096  0215                     	;# 
  3097  0215                     	;# 
  3098  0215                     	;# 
  3099  0215                     	;# 
  3100  0216                     	;# 
  3101  0216                     	;# 
  3102  0217                     	;# 
  3103  0217                     	;# 
  3104  0219                     	;# 
  3105  021A                     	;# 
  3106  021B                     	;# 
  3107  021C                     	;# 
  3108  021D                     	;# 
  3109  021D                     	;# 
  3110  021E                     	;# 
  3111  021F                     	;# 
  3112  028C                     	;# 
  3113  028D                     	;# 
  3114  028E                     	;# 
  3115  0291                     	;# 
  3116  0291                     	;# 
  3117  0292                     	;# 
  3118  0293                     	;# 
  3119  0294                     	;# 
  3120  0295                     	;# 
  3121  0295                     	;# 
  3122  0296                     	;# 
  3123  0297                     	;# 
  3124  0298                     	;# 
  3125  029F                     	;# 
  3126  030C                     	;# 
  3127  030D                     	;# 
  3128  030E                     	;# 
  3129  0311                     	;# 
  3130  0311                     	;# 
  3131  0312                     	;# 
  3132  0313                     	;# 
  3133  0314                     	;# 
  3134  0315                     	;# 
  3135  0315                     	;# 
  3136  0316                     	;# 
  3137  0317                     	;# 
  3138  0318                     	;# 
  3139  038C                     	;# 
  3140  038D                     	;# 
  3141  038E                     	;# 
  3142  0391                     	;# 
  3143  0392                     	;# 
  3144  0393                     	;# 
  3145  0394                     	;# 
  3146  0395                     	;# 
  3147  0396                     	;# 
  3148  0397                     	;# 
  3149  0398                     	;# 
  3150  0399                     	;# 
  3151  039A                     	;# 
  3152  039C                     	;# 
  3153  039D                     	;# 
  3154  039E                     	;# 
  3155  039F                     	;# 
  3156  0411                     	;# 
  3157  0411                     	;# 
  3158  0412                     	;# 
  3159  0413                     	;# 
  3160  0414                     	;# 
  3161  0415                     	;# 
  3162  0416                     	;# 
  3163  0417                     	;# 
  3164  0418                     	;# 
  3165  0418                     	;# 
  3166  0419                     	;# 
  3167  041A                     	;# 
  3168  041B                     	;# 
  3169  041C                     	;# 
  3170  041D                     	;# 
  3171  041E                     	;# 
  3172  041F                     	;# 
  3173  0498                     	;# 
  3174  0498                     	;# 
  3175  0499                     	;# 
  3176  049A                     	;# 
  3177  049B                     	;# 
  3178  049B                     	;# 
  3179  049C                     	;# 
  3180  049D                     	;# 
  3181  049E                     	;# 
  3182  049F                     	;# 
  3183  0617                     	;# 
  3184  0618                     	;# 
  3185  0619                     	;# 
  3186  0619                     	;# 
  3187  061A                     	;# 
  3188  061B                     	;# 
  3189  061C                     	;# 
  3190  061C                     	;# 
  3191  061F                     	;# 
  3192  0691                     	;# 
  3193  0692                     	;# 
  3194  0693                     	;# 
  3195  0694                     	;# 
  3196  0695                     	;# 
  3197  0696                     	;# 
  3198  0697                     	;# 
  3199  0698                     	;# 
  3200  0699                     	;# 
  3201  0711                     	;# 
  3202  0712                     	;# 
  3203  0713                     	;# 
  3204  0714                     	;# 
  3205  0715                     	;# 
  3206  0716                     	;# 
  3207  0717                     	;# 
  3208  0718                     	;# 
  3209  0719                     	;# 
  3210  0891                     	;# 
  3211  0891                     	;# 
  3212  0891                     	;# 
  3213  0891                     	;# 
  3214  0891                     	;# 
  3215  0891                     	;# 
  3216  0892                     	;# 
  3217  0892                     	;# 
  3218  0892                     	;# 
  3219  0893                     	;# 
  3220  0893                     	;# 
  3221  0893                     	;# 
  3222  0893                     	;# 
  3223  0893                     	;# 
  3224  0893                     	;# 
  3225  0894                     	;# 
  3226  0894                     	;# 
  3227  0894                     	;# 
  3228  0895                     	;# 
  3229  0895                     	;# 
  3230  0895                     	;# 
  3231  0896                     	;# 
  3232  0896                     	;# 
  3233  0896                     	;# 
  3234  089B                     	;# 
  3235  0911                     	;# 
  3236  0912                     	;# 
  3237  0913                     	;# 
  3238  0914                     	;# 
  3239  0915                     	;# 
  3240  0916                     	;# 
  3241  0918                     	;# 
  3242  0919                     	;# 
  3243  091A                     	;# 
  3244  091B                     	;# 
  3245  091C                     	;# 
  3246  091D                     	;# 
  3247  091E                     	;# 
  3248  091F                     	;# 
  3249  0E0F                     	;# 
  3250  0E10                     	;# 
  3251  0E11                     	;# 
  3252  0E12                     	;# 
  3253  0E13                     	;# 
  3254  0E14                     	;# 
  3255  0E15                     	;# 
  3256  0E16                     	;# 
  3257  0E17                     	;# 
  3258  0E18                     	;# 
  3259  0E19                     	;# 
  3260  0E1A                     	;# 
  3261  0E1B                     	;# 
  3262  0E1C                     	;# 
  3263  0E1D                     	;# 
  3264  0E1E                     	;# 
  3265  0E1F                     	;# 
  3266  0E20                     	;# 
  3267  0E21                     	;# 
  3268  0E22                     	;# 
  3269  0E24                     	;# 
  3270  0E25                     	;# 
  3271  0E28                     	;# 
  3272  0E29                     	;# 
  3273  0E2A                     	;# 
  3274  0E2B                     	;# 
  3275  0E2C                     	;# 
  3276  0E2D                     	;# 
  3277  0E2E                     	;# 
  3278  0E2F                     	;# 
  3279  0E90                     	;# 
  3280  0E91                     	;# 
  3281  0E92                     	;# 
  3282  0E94                     	;# 
  3283  0E95                     	;# 
  3284  0E9C                     	;# 
  3285  0E9D                     	;# 
  3286  0E9E                     	;# 
  3287  0E9F                     	;# 
  3288  0EA0                     	;# 
  3289  0EA1                     	;# 
  3290  0EA2                     	;# 
  3291  0EA3                     	;# 
  3292  0EA4                     	;# 
  3293  0EA5                     	;# 
  3294  0EA6                     	;# 
  3295  0EA7                     	;# 
  3296  0F0F                     	;# 
  3297  0F10                     	;# 
  3298  0F11                     	;# 
  3299  0F12                     	;# 
  3300  0F13                     	;# 
  3301  0F14                     	;# 
  3302  0F15                     	;# 
  3303  0F16                     	;# 
  3304  0F17                     	;# 
  3305  0F18                     	;# 
  3306  0F19                     	;# 
  3307  0F1A                     	;# 
  3308  0F1B                     	;# 
  3309  0F1C                     	;# 
  3310  0F1D                     	;# 
  3311  0F1E                     	;# 
  3312  0F1F                     	;# 
  3313  0F20                     	;# 
  3314  0F21                     	;# 
  3315  0F22                     	;# 
  3316  0F23                     	;# 
  3317  0F24                     	;# 
  3318  0F25                     	;# 
  3319  0F26                     	;# 
  3320  0F27                     	;# 
  3321  0F28                     	;# 
  3322  0F29                     	;# 
  3323  0F2A                     	;# 
  3324  0F2B                     	;# 
  3325  0F2C                     	;# 
  3326  0F2D                     	;# 
  3327  0F2E                     	;# 
  3328  0F2F                     	;# 
  3329  0F30                     	;# 
  3330  0F31                     	;# 
  3331  0F32                     	;# 
  3332  0F33                     	;# 
  3333  0F34                     	;# 
  3334  0F35                     	;# 
  3335  0F36                     	;# 
  3336  0F37                     	;# 
  3337  0FE4                     	;# 
  3338  0FE5                     	;# 
  3339  0FE6                     	;# 
  3340  0FE7                     	;# 
  3341  0FE8                     	;# 
  3342  0FE9                     	;# 
  3343  0FEA                     	;# 
  3344  0FEB                     	;# 
  3345  0FED                     	;# 
  3346  0FEE                     	;# 
  3347  0FEF                     	;# 
  3348                           
  3349                           	psect	idataBANK2
  3350  1000                     __pidataBANK2:	
  3351                           
  3352                           ;initializer for main@F7270
  3353  1000  34FF               	retlw	255
  3354  1001  3400               	retlw	0
  3355  1002  34FF               	retlw	255
  3356  1003  3400               	retlw	0
  3357                           
  3358                           	psect	idataBANK5
  3359  1F64                     __pidataBANK5:	
  3360                           
  3361                           ;initializer for main@F7272
  3362  1F64  34FF               	retlw	255
  3363  1F65  3400               	retlw	0
  3364  1F66  34FF               	retlw	255
  3365  1F67  3400               	retlw	0
  3366  1F68  3416               	retlw	22
  3367  1F69  3448               	retlw	72
  3368  1F6A  3445               	retlw	69
  3369  1F6B  344C               	retlw	76
  3370  1F6C  344C               	retlw	76
  3371  1F6D  344F               	retlw	79
  3372  1F6E  3420               	retlw	32
  3373  1F6F  3453               	retlw	83
  3374  1F70  3445               	retlw	69
  3375  1F71  344E               	retlw	78
  3376  1F72  3453               	retlw	83
  3377  1F73  344F               	retlw	79
  3378  1F74  3452               	retlw	82
  3379  1F75  3453               	retlw	83
  3380  1F76  3417               	retlw	23
  3381  1F77  34FF               	retlw	255
  3382  1F78  3400               	retlw	0
  3383  1F79  34FF               	retlw	255
  3384  1F7A  3400               	retlw	0
  3385                           
  3386                           	psect	stringtext1
  3387  1800                     __pstringtext1:	
  3388  1800                     _fsmStateTable:	
  3389  1800  340B               	retlw	low _I2C1_DO_IDLE
  3390  1801  341E               	retlw	high _I2C1_DO_IDLE
  3391  1802  3467               	retlw	low _I2C1_DO_SEND_ADR_READ
  3392  1803  341E               	retlw	high _I2C1_DO_SEND_ADR_READ
  3393  1804  3450               	retlw	low _I2C1_DO_SEND_ADR_WRITE
  3394  1805  341E               	retlw	high _I2C1_DO_SEND_ADR_WRITE
  3395  1806  349A               	retlw	low _I2C1_DO_TX
  3396  1807  3414               	retlw	high _I2C1_DO_TX
  3397  1808  3464               	retlw	low _I2C1_DO_RX
  3398  1809  3413               	retlw	high _I2C1_DO_RX
  3399  180A  343E               	retlw	low _I2C1_DO_RCEN
  3400  180B  341E               	retlw	high _I2C1_DO_RCEN
  3401  180C  3439               	retlw	low _I2C1_DO_TX_EMPTY
  3402  180D  3411               	retlw	high _I2C1_DO_TX_EMPTY
  3403  180E  34E2               	retlw	low _I2C1_DO_SEND_RESTART_READ
  3404  180F  341D               	retlw	high _I2C1_DO_SEND_RESTART_READ
  3405  1810  34E6               	retlw	low _I2C1_DO_SEND_RESTART_WRITE
  3406  1811  341D               	retlw	high _I2C1_DO_SEND_RESTART_WRITE
  3407  1812  34EA               	retlw	low _I2C1_DO_SEND_RESTART
  3408  1813  341D               	retlw	high _I2C1_DO_SEND_RESTART
  3409  1814  34EE               	retlw	low _I2C1_DO_SEND_STOP
  3410  1815  341D               	retlw	high _I2C1_DO_SEND_STOP
  3411  1816  34F2               	retlw	low _I2C1_DO_RX_ACK
  3412  1817  341D               	retlw	high _I2C1_DO_RX_ACK
  3413  1818  34F6               	retlw	low _I2C1_DO_RX_NACK_STOP
  3414  1819  341D               	retlw	high _I2C1_DO_RX_NACK_STOP
  3415  181A  34FA               	retlw	low _I2C1_DO_RX_NACK_RESTART
  3416  181B  341D               	retlw	high _I2C1_DO_RX_NACK_RESTART
  3417  181C  3410               	retlw	low _I2C1_DO_RESET
  3418  181D  341E               	retlw	high _I2C1_DO_RESET
  3419  181E  3468               	retlw	low _I2C1_DO_ADDRESS_NACK
  3420  181F  3411               	retlw	high _I2C1_DO_ADDRESS_NACK
  3421  1820                     __end_of_fsmStateTable:	
  3422                           
  3423                           	psect	nvBANK2
  3424  0167                     __pnvBANK2:	
  3425  0167                     _EUSART_RxDefaultInterruptHandler:	
  3426  0167                     	ds	2
  3427  0169                     _EUSART_TxDefaultInterruptHandler:	
  3428  0169                     	ds	2
  3429  016B                     _eusartTxBufferRemaining:	
  3430  016B                     	ds	1
  3431                           
  3432                           	psect	nvBANK3
  3433  01CD                     __pnvBANK3:	
  3434  01CD                     _temperature:	
  3435  01CD                     	ds	4
  3436  01D1                     _pressure:	
  3437  01D1                     	ds	4
  3438  01D5                     _EUSART_ErrorHandler:	
  3439  01D5                     	ds	2
  3440  01D7                     _EUSART_OverrunErrorHandler:	
  3441  01D7                     	ds	2
  3442  01D9                     _EUSART_FramingErrorHandler:	
  3443  01D9                     	ds	2
  3444  000E                     _PORTCbits	set	14
  3445  000B                     _INTCONbits	set	11
  3446  001F                     _T2CONbits	set	31
  3447  001F                     _T2CON	set	31
  3448  0011                     _PIR1bits	set	17
  3449  001D                     _TMR2	set	29
  3450  001E                     _PR2	set	30
  3451  008E                     _TRISC	set	142
  3452  008D                     _TRISB	set	141
  3453  008C                     _TRISA	set	140
  3454  0097                     _WDTCON	set	151
  3455  0091                     _PIE1bits	set	145
  3456  010E                     _LATCbits	set	270
  3457  010E                     _LATC	set	270
  3458  010D                     _LATB	set	269
  3459  010C                     _LATA	set	268
  3460  018C                     _ANSELA	set	396
  3461  018D                     _ANSELB	set	397
  3462  018E                     _ANSELC	set	398
  3463  0199                     _RC1REG	set	409
  3464  019D                     _RC1STAbits	set	413
  3465  019A                     _TX1REG	set	410
  3466  019E                     _TX1STAbits	set	414
  3467  019C                     _SP1BRGH	set	412
  3468  019B                     _SP1BRGL	set	411
  3469  019E                     _TX1STA	set	414
  3470  019D                     _RC1STA	set	413
  3471  019F                     _BAUD1CON	set	415
  3472  0214                     _SSP1STATbits	set	532
  3473  0216                     _SSP1CON2bits	set	534
  3474  0211                     _SSP1BUF	set	529
  3475  0215                     _SSP1CON1bits	set	533
  3476  0212                     _SSP1ADD	set	530
  3477  0216                     _SSP1CON2	set	534
  3478  0215                     _SSP1CON1	set	533
  3479  0214                     _SSP1STAT	set	532
  3480  020E                     _WPUC	set	526
  3481  020C                     _WPUA	set	524
  3482  020D                     _WPUB	set	525
  3483  028E                     _ODCONC	set	654
  3484  028D                     _ODCONB	set	653
  3485  028C                     _ODCONA	set	652
  3486  030E                     _SLRCONC	set	782
  3487  030D                     _SLRCONB	set	781
  3488  030C                     _SLRCONA	set	780
  3489  038E                     _INLVLC	set	910
  3490  038D                     _INLVLB	set	909
  3491  038C                     _INLVLA	set	908
  3492  061F                     _PWMTMRSbits	set	1567
  3493  0617                     _PWM5DCL	set	1559
  3494  0618                     _PWM5DCH	set	1560
  3495  0619                     _PWM5CON	set	1561
  3496  0916                     _PMD5	set	2326
  3497  0915                     _PMD4	set	2325
  3498  0914                     _PMD3	set	2324
  3499  0913                     _PMD2	set	2323
  3500  0912                     _PMD1	set	2322
  3501  0911                     _PMD0	set	2321
  3502  091E                     _OSCTUNE	set	2334
  3503  091F                     _OSCFRQ	set	2335
  3504  091D                     _OSCEN	set	2333
  3505  091B                     _OSCCON3	set	2331
  3506  0919                     _OSCCON1	set	2329
  3507  0E21                     _SSP1DATPPS	set	3617
  3508  0E20                     _SSP1CLKPPS	set	3616
  3509  0E24                     _RXPPS	set	3620
  3510  0EA6                     _RC6PPS	set	3750
  3511  0E9C                     _RB4PPS	set	3740
  3512  0E9D                     _RB5PPS	set	3741
  3513  0E9F                     _RB7PPS	set	3743
  3514                           
  3515                           	psect	stringtext2
  3516  2000                     __pstringtext2:	
  3517  2000                     STR_2:	
  3518  2000  3454               	retlw	84	;'T'
  3519  2001  3465               	retlw	101	;'e'
  3520  2002  346D               	retlw	109	;'m'
  3521  2003  3470               	retlw	112	;'p'
  3522  2004  3465               	retlw	101	;'e'
  3523  2005  3472               	retlw	114	;'r'
  3524  2006  3461               	retlw	97	;'a'
  3525  2007  3474               	retlw	116	;'t'
  3526  2008  3475               	retlw	117	;'u'
  3527  2009  3472               	retlw	114	;'r'
  3528  200A  3465               	retlw	101	;'e'
  3529  200B  3420               	retlw	32	;' '
  3530  200C  343A               	retlw	58	;':'
  3531  200D  3420               	retlw	32	;' '
  3532  200E  3425               	retlw	37	;'%'
  3533  200F  3466               	retlw	102	;'f'
  3534  2010  340A               	retlw	10
  3535  2011  3400               	retlw	0
  3536                           
  3537                           	psect	stringtext3
  3538  2012                     __pstringtext3:	
  3539  2012                     STR_1:	
  3540  2012  3450               	retlw	80	;'P'
  3541  2013  3472               	retlw	114	;'r'
  3542  2014  3465               	retlw	101	;'e'
  3543  2015  3473               	retlw	115	;'s'
  3544  2016  3473               	retlw	115	;'s'
  3545  2017  3475               	retlw	117	;'u'
  3546  2018  3472               	retlw	114	;'r'
  3547  2019  3465               	retlw	101	;'e'
  3548  201A  3420               	retlw	32	;' '
  3549  201B  343A               	retlw	58	;':'
  3550  201C  3420               	retlw	32	;' '
  3551  201D  3425               	retlw	37	;'%'
  3552  201E  3466               	retlw	102	;'f'
  3553  201F  340A               	retlw	10
  3554  2020  3400               	retlw	0
  3555                           
  3556                           	psect	stringtext4
  3557  2021                     __pstringtext4:	
  3558  2021                     STR_3:	
  3559  2021  3449               	retlw	73	;'I'
  3560  2022  344E               	retlw	78	;'N'
  3561  2023  3446               	retlw	70	;'F'
  3562  2024  3400               	retlw	0
  3563                           
  3564                           	psect	stringtext5
  3565  2025                     __pstringtext5:	
  3566  2025                     STR_7:	
  3567  2025  344E               	retlw	78	;'N'
  3568  2026  3441               	retlw	65	;'A'
  3569  2027  344E               	retlw	78	;'N'
  3570  2028  3400               	retlw	0
  3571                           
  3572                           	psect	stringtext6
  3573  2029                     __pstringtext6:	
  3574  2029                     STR_4:	
  3575  2029  3469               	retlw	105	;'i'
  3576  202A  346E               	retlw	110	;'n'
  3577  202B  3466               	retlw	102	;'f'
  3578  202C  3400               	retlw	0
  3579                           
  3580                           	psect	stringtext7
  3581  202D                     __pstringtext7:	
  3582  202D                     STR_8:	
  3583  202D  346E               	retlw	110	;'n'
  3584  202E  3461               	retlw	97	;'a'
  3585  202F  346E               	retlw	110	;'n'
  3586  2030  3400               	retlw	0
  3587                           
  3588                           	psect	stringtext8
  3589  2031                     __pstringtext8:	
  3590  2031                     STR_11:	
  3591  2031  346C               	retlw	108	;'l'
  3592  2032  3466               	retlw	102	;'f'
  3593  2033  3400               	retlw	0
  3594                           
  3595                           	psect	stringtext9
  3596  0000                     __pstringtext9:	
  3597  2031                     
  3598                           ; #config settings
  3599  0000                     
  3600                           	psect	cinit
  3601  0025                     start_initialization:	
  3602  0025                     __initialization:	
  3603                           
  3604                           ; Initialize objects allocated to BANK2
  3605  0025  3000               	movlw	low __pidataBANK2
  3606  0026  0084               	movwf	4
  3607  0027  3090               	movlw	(high __pidataBANK2)| (0+128)
  3608  0028  0085               	movwf	5
  3609  0029  306C               	movlw	low __pdataBANK2
  3610  002A  0086               	movwf	6
  3611  002B  3001               	movlw	high __pdataBANK2
  3612  002C  0087               	movwf	7
  3613  002D  3004               	movlw	4
  3614  002E  319E  264A  3180   	fcall	init_ram
  3615                           
  3616                           ; Initialize objects allocated to BANK5
  3617  0031  3064               	movlw	low __pidataBANK5
  3618  0032  0084               	movwf	4
  3619  0033  309F               	movlw	(high __pidataBANK5)| (0+128)
  3620  0034  0085               	movwf	5
  3621  0035  30A0               	movlw	low __pdataBANK5
  3622  0036  0086               	movwf	6
  3623  0037  3002               	movlw	high __pdataBANK5
  3624  0038  0087               	movwf	7
  3625  0039  3017               	movlw	23
  3626  003A  319E  264A  3180   	fcall	init_ram
  3627                           
  3628                           ; Clear objects allocated to COMMON
  3629  003D  01FC               	clrf	__pbssCOMMON& (0+127)
  3630                           
  3631                           ; Clear objects allocated to BANK1
  3632  003E  0021               	movlb	1	; select bank1
  3633  003F  01ED               	clrf	__pbssBANK1& (0+127)
  3634  0040  01EE               	clrf	(__pbssBANK1+1)& (0+127)
  3635  0041  01EF               	clrf	(__pbssBANK1+2)& (0+127)
  3636                           
  3637                           ; Clear objects allocated to BANK2
  3638  0042  3046               	movlw	low __pbssBANK2
  3639  0043  0084               	movwf	4
  3640  0044  3001               	movlw	high __pbssBANK2
  3641  0045  0085               	movwf	5
  3642  0046  3021               	movlw	33
  3643  0047  319E  2644  3180   	fcall	clear_ram0
  3644                           
  3645                           ; Clear objects allocated to BANK3
  3646  004A  30A0               	movlw	low __pbssBANK3
  3647  004B  0084               	movwf	4
  3648  004C  3001               	movlw	high __pbssBANK3
  3649  004D  0085               	movwf	5
  3650  004E  302D               	movlw	45
  3651  004F  319E  2644  3180   	fcall	clear_ram0
  3652                           
  3653                           ; Clear objects allocated to BANK4
  3654  0052  3020               	movlw	low __pbssBANK4
  3655  0053  0084               	movwf	4
  3656  0054  3002               	movlw	high __pbssBANK4
  3657  0055  0085               	movwf	5
  3658  0056  3050               	movlw	80
  3659  0057  319E  2644         	fcall	clear_ram0
  3660  0059                     end_of_initialization:	
  3661                           ;End of C runtime variable initialization code
  3662                           
  3663  0059                     __end_of__initialization:	
  3664  0059  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3665  005A  0020               	movlb	0
  3666  005B  3195  2D51         	ljmp	_main	;jump to C main() function
  3667                           
  3668                           	psect	bssCOMMON
  3669  007C                     __pbssCOMMON:	
  3670  007C                     _eusartRxHead:	
  3671  007C                     	ds	1
  3672                           
  3673                           	psect	bssBANK1
  3674  00ED                     __pbssBANK1:	
  3675  00ED                     _eusartRxTail:	
  3676  00ED                     	ds	1
  3677  00EE                     _eusartTxTail:	
  3678  00EE                     	ds	1
  3679  00EF                     _eusartTxHead:	
  3680  00EF                     	ds	1
  3681                           
  3682                           	psect	bssBANK2
  3683  0146                     __pbssBANK2:	
  3684  0146                     _eusartRxStatusBuffer:	
  3685  0146                     	ds	8
  3686  014E                     floorf@F524:	
  3687  014E                     	ds	4
  3688  0152                     ___fpclassifyf@F463:	
  3689  0152                     	ds	4
  3690  0156                     _nout:	
  3691  0156                     	ds	2
  3692  0158                     _width:	
  3693  0158                     	ds	2
  3694  015A                     _prec:	
  3695  015A                     	ds	2
  3696  015C                     _flags:	
  3697  015C                     	ds	2
  3698  015E                     _raw_temperature:	
  3699  015E                     	ds	2
  3700  0160                     _value:	
  3701  0160                     	ds	1
  3702  0161                     _eusartRxLastError:	
  3703  0161                     	ds	1
  3704  0162                     _eusartRxCount:	
  3705  0162                     	ds	1
  3706  0163                     _raw_pressure:	
  3707  0163                     	ds	4
  3708                           
  3709                           	psect	dataBANK2
  3710  016C                     __pdataBANK2:	
  3711  016C                     main@F7270:	
  3712  016C                     	ds	4
  3713                           
  3714                           	psect	bssBANK3
  3715  01A0                     __pbssBANK3:	
  3716  01A0                     _I2C1_Status:	
  3717  01A0                     	ds	29
  3718  01BD                     _eusartRxBuffer:	
  3719  01BD                     	ds	8
  3720  01C5                     _eusartTxBuffer:	
  3721  01C5                     	ds	8
  3722                           
  3723                           	psect	bssBANK4
  3724  0220                     __pbssBANK4:	
  3725  0220                     _dbuf:	
  3726  0220                     	ds	80
  3727                           
  3728                           	psect	dataBANK5
  3729  02A0                     __pdataBANK5:	
  3730  02A0                     main@F7272:	
  3731  02A0                     	ds	23
  3732                           
  3733                           	psect	inittext
  3734  1E4A                     init_ram:	
  3735  1E4A  00FE               	movwf	126
  3736  1E4B                     initloop:	
  3737  1E4B  0012               	moviw fsr0++
  3738  1E4C  001E               	movwi fsr1++
  3739  1E4D  0BFE               	decfsz	126,f
  3740  1E4E  2E4B               	goto	initloop
  3741  1E4F  3400               	retlw	0
  3742                           
  3743                           	psect	clrtext
  3744  1E44                     clear_ram0:	
  3745                           ;	Called with FSR0 containing the base address, and
  3746                           ;	WREG with the size to clear
  3747                           
  3748  1E44  0064               	clrwdt	;clear the watchdog before getting into this loop
  3749  1E45                     clrloop0:	
  3750  1E45  0180               	clrf	0	;clear RAM location pointed to by FSR
  3751  1E46  3101               	addfsr 0,1
  3752  1E47  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3753  1E48  2E45               	goto	clrloop0	;have we reached the end yet?
  3754  1E49  3400               	retlw	0	;all done for this memory range, return
  3755                           
  3756                           	psect	cstackBANK2
  3757  0120                     __pcstackBANK2:	
  3758  0120                     ??_readPressureSensor:	
  3759                           
  3760                           ; 1 bytes @ 0x0
  3761  0120                     	ds	9
  3762  0129                     main@dummy_data:	
  3763                           
  3764                           ; 23 bytes @ 0x9
  3765  0129                     	ds	23
  3766  0140                     main@hdr_trl:	
  3767                           
  3768                           ; 4 bytes @ 0x20
  3769  0140                     	ds	4
  3770  0144                     main@n:	
  3771                           
  3772                           ; 1 bytes @ 0x24
  3773  0144                     	ds	1
  3774  0145                     main@i:	
  3775                           
  3776                           ; 1 bytes @ 0x25
  3777  0145                     	ds	1
  3778                           
  3779                           	psect	cstackBANK1
  3780  00A0                     __pcstackBANK1:	
  3781  00A0                     efgtoa@ou:	
  3782                           
  3783                           ; 4 bytes @ 0x0
  3784  00A0                     	ds	4
  3785  00A4                     _efgtoa$1497:	
  3786                           
  3787                           ; 2 bytes @ 0x4
  3788  00A4                     	ds	2
  3789  00A6                     _efgtoa$1498:	
  3790                           
  3791                           ; 2 bytes @ 0x6
  3792  00A6                     	ds	2
  3793  00A8                     _efgtoa$1503:	
  3794                           
  3795                           ; 2 bytes @ 0x8
  3796  00A8                     	ds	2
  3797  00AA                     _efgtoa$1507:	
  3798                           
  3799                           ; 2 bytes @ 0xA
  3800  00AA                     	ds	2
  3801  00AC                     _efgtoa$1508:	
  3802                           
  3803                           ; 2 bytes @ 0xC
  3804  00AC                     	ds	2
  3805  00AE                     _efgtoa$1509:	
  3806                           
  3807                           ; 2 bytes @ 0xE
  3808  00AE                     	ds	2
  3809  00B0                     efgtoa@t:	
  3810                           
  3811                           ; 2 bytes @ 0x10
  3812  00B0                     	ds	2
  3813  00B2                     efgtoa@pp:	
  3814                           
  3815                           ; 2 bytes @ 0x12
  3816  00B2                     	ds	2
  3817  00B4                     efgtoa@m:	
  3818                           
  3819                           ; 2 bytes @ 0x14
  3820  00B4                     	ds	2
  3821  00B6                     efgtoa@ne:	
  3822                           
  3823                           ; 2 bytes @ 0x16
  3824  00B6                     	ds	2
  3825  00B8                     efgtoa@d:	
  3826                           
  3827                           ; 2 bytes @ 0x18
  3828  00B8                     	ds	2
  3829  00BA                     efgtoa@sign:	
  3830                           
  3831                           ; 2 bytes @ 0x1A
  3832  00BA                     	ds	2
  3833  00BC                     efgtoa@fp:	
  3834                           
  3835                           ; 1 bytes @ 0x1C
  3836  00BC                     	ds	1
  3837  00BD                     efgtoa@p:	
  3838                           
  3839                           ; 2 bytes @ 0x1D
  3840  00BD                     	ds	2
  3841  00BF                     efgtoa@nmode:	
  3842                           
  3843                           ; 1 bytes @ 0x1F
  3844  00BF                     	ds	1
  3845  00C0                     efgtoa@w:	
  3846                           
  3847                           ; 2 bytes @ 0x20
  3848  00C0                     	ds	2
  3849  00C2                     efgtoa@mode:	
  3850                           
  3851                           ; 1 bytes @ 0x22
  3852  00C2                     	ds	1
  3853  00C3                     efgtoa@h:	
  3854                           
  3855                           ; 4 bytes @ 0x23
  3856  00C3                     	ds	4
  3857  00C7                     efgtoa@l:	
  3858                           
  3859                           ; 4 bytes @ 0x27
  3860  00C7                     	ds	4
  3861  00CB                     efgtoa@i:	
  3862                           
  3863                           ; 2 bytes @ 0x2B
  3864  00CB                     	ds	2
  3865  00CD                     efgtoa@g:	
  3866                           
  3867                           ; 4 bytes @ 0x2D
  3868  00CD                     	ds	4
  3869  00D1                     efgtoa@e:	
  3870                           
  3871                           ; 2 bytes @ 0x31
  3872  00D1                     	ds	2
  3873  00D3                     efgtoa@n:	
  3874                           
  3875                           ; 2 bytes @ 0x33
  3876  00D3                     	ds	2
  3877  00D5                     efgtoa@u:	
  3878                           
  3879                           ; 4 bytes @ 0x35
  3880  00D5                     	ds	4
  3881  00D9                     ?_vfprintf:	
  3882  00D9                     vfprintf@fmt:	
  3883                           ; 2 bytes @ 0x39
  3884                           
  3885                           
  3886                           ; 2 bytes @ 0x39
  3887  00D9                     	ds	2
  3888  00DB                     vfprintf@ap:	
  3889                           
  3890                           ; 1 bytes @ 0x3B
  3891  00DB                     	ds	1
  3892  00DC                     ??_vfprintf:	
  3893                           
  3894                           ; 1 bytes @ 0x3C
  3895  00DC                     	ds	2
  3896  00DE                     vfprintf@fp:	
  3897                           
  3898                           ; 1 bytes @ 0x3E
  3899  00DE                     	ds	1
  3900  00DF                     vfprintf@cfmt:	
  3901                           
  3902                           ; 2 bytes @ 0x3F
  3903  00DF                     	ds	2
  3904  00E1                     ?_printf:	
  3905  00E1                     printf@fmt:	
  3906                           ; 2 bytes @ 0x41
  3907                           
  3908                           
  3909                           ; 2 bytes @ 0x41
  3910  00E1                     	ds	6
  3911  00E7                     ??_printf:	
  3912                           
  3913                           ; 1 bytes @ 0x47
  3914  00E7                     	ds	3
  3915  00EA                     printf@ap:	
  3916                           
  3917                           ; 1 bytes @ 0x4A
  3918  00EA                     	ds	1
  3919  00EB                     ??_main:	
  3920                           
  3921                           ; 1 bytes @ 0x4B
  3922  00EB                     	ds	2
  3923                           
  3924                           	psect	cstackCOMMON
  3925  0070                     __pcstackCOMMON:	
  3926  0070                     ?_I2C1_Open:	
  3927  0070                     ?_I2C1_MasterWrite:	
  3928                           ; 1 bytes @ 0x0
  3929                           
  3930  0070                     ?_I2C1_Close:	
  3931                           ; 1 bytes @ 0x0
  3932                           
  3933  0070                     ?_EUSART_Receive_ISR:	
  3934                           ; 1 bytes @ 0x0
  3935                           
  3936  0070                     ?_EUSART_Transmit_ISR:	
  3937                           ; 1 bytes @ 0x0
  3938                           
  3939  0070                     ??_EUSART_Transmit_ISR:	
  3940                           ; 1 bytes @ 0x0
  3941                           
  3942  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  3943                           ; 1 bytes @ 0x0
  3944                           
  3945  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  3946                           ; 1 bytes @ 0x0
  3947                           
  3948  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  3949                           ; 1 bytes @ 0x0
  3950                           
  3951  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  3952                           ; 1 bytes @ 0x0
  3953                           
  3954  0070                     ?_EUSART_DefaultErrorHandler:	
  3955                           ; 1 bytes @ 0x0
  3956                           
  3957  0070                     ?_EUSART_RxDataHandler:	
  3958                           ; 1 bytes @ 0x0
  3959                           
  3960  0070                     ??_EUSART_RxDataHandler:	
  3961                           ; 1 bytes @ 0x0
  3962                           
  3963  0070                     ?_PMD_Initialize:	
  3964                           ; 1 bytes @ 0x0
  3965                           
  3966  0070                     ?_I2C1_Initialize:	
  3967                           ; 1 bytes @ 0x0
  3968                           
  3969  0070                     ?_PIN_MANAGER_Initialize:	
  3970                           ; 1 bytes @ 0x0
  3971                           
  3972  0070                     ?_OSCILLATOR_Initialize:	
  3973                           ; 1 bytes @ 0x0
  3974                           
  3975  0070                     ?_WDT_Initialize:	
  3976                           ; 1 bytes @ 0x0
  3977                           
  3978  0070                     ?_I2C1_DO_IDLE:	
  3979                           ; 1 bytes @ 0x0
  3980                           
  3981  0070                     ?_I2C1_DO_SEND_ADR_READ:	
  3982                           ; 1 bytes @ 0x0
  3983                           
  3984  0070                     ?_I2C1_DO_SEND_ADR_WRITE:	
  3985                           ; 1 bytes @ 0x0
  3986                           
  3987  0070                     ?_I2C1_DO_TX:	
  3988                           ; 1 bytes @ 0x0
  3989                           
  3990  0070                     ?_I2C1_DO_RX:	
  3991                           ; 1 bytes @ 0x0
  3992                           
  3993  0070                     ?_I2C1_DO_RCEN:	
  3994                           ; 1 bytes @ 0x0
  3995                           
  3996  0070                     ?_I2C1_DO_TX_EMPTY:	
  3997                           ; 1 bytes @ 0x0
  3998                           
  3999  0070                     ?_I2C1_DO_SEND_RESTART_READ:	
  4000                           ; 1 bytes @ 0x0
  4001                           
  4002  0070                     ?_I2C1_DO_SEND_RESTART_WRITE:	
  4003                           ; 1 bytes @ 0x0
  4004                           
  4005  0070                     ?_I2C1_DO_SEND_RESTART:	
  4006                           ; 1 bytes @ 0x0
  4007                           
  4008  0070                     ?_I2C1_DO_SEND_STOP:	
  4009                           ; 1 bytes @ 0x0
  4010                           
  4011  0070                     ?_I2C1_DO_RX_ACK:	
  4012                           ; 1 bytes @ 0x0
  4013                           
  4014  0070                     ?_I2C1_DO_RX_NACK_STOP:	
  4015                           ; 1 bytes @ 0x0
  4016                           
  4017  0070                     ?_I2C1_DO_RX_NACK_RESTART:	
  4018                           ; 1 bytes @ 0x0
  4019                           
  4020  0070                     ?_I2C1_DO_RESET:	
  4021                           ; 1 bytes @ 0x0
  4022                           
  4023  0070                     ?_I2C1_DO_ADDRESS_NACK:	
  4024                           ; 1 bytes @ 0x0
  4025                           
  4026  0070                     ?_I2C1_MasterClearIrq:	
  4027                           ; 1 bytes @ 0x0
  4028                           
  4029  0070                     ?_I2C1_MasterOpen:	
  4030                           ; 1 bytes @ 0x0
  4031                           
  4032  0070                     ?_I2C1_MasterDisableIrq:	
  4033                           ; 1 bytes @ 0x0
  4034                           
  4035  0070                     ?_I2C1_MasterClose:	
  4036                           ; 1 bytes @ 0x0
  4037                           
  4038  0070                     ?_I2C1_MasterStart:	
  4039                           ; 1 bytes @ 0x0
  4040                           
  4041  0070                     ?_I2C1_Poller:	
  4042                           ; 1 bytes @ 0x0
  4043                           
  4044  0070                     ?_I2C1_MasterWaitForEvent:	
  4045                           ; 1 bytes @ 0x0
  4046                           
  4047  0070                     ?_I2C1_MasterFsm:	
  4048                           ; 1 bytes @ 0x0
  4049                           
  4050  0070                     ?_I2C1_MasterIsNack:	
  4051                           ; 1 bytes @ 0x0
  4052                           
  4053  0070                     ?_I2C1_MasterSendTxData:	
  4054                           ; 1 bytes @ 0x0
  4055                           
  4056  0070                     ?_I2C1_MasterGetRxData:	
  4057                           ; 1 bytes @ 0x0
  4058                           
  4059  0070                     ?_I2C1_MasterSendAck:	
  4060                           ; 1 bytes @ 0x0
  4061                           
  4062  0070                     ?_I2C1_MasterStartRx:	
  4063                           ; 1 bytes @ 0x0
  4064                           
  4065  0070                     ?_I2C1_MasterSetIrq:	
  4066                           ; 1 bytes @ 0x0
  4067                           
  4068  0070                     ?_I2C1_MasterEnableRestart:	
  4069                           ; 1 bytes @ 0x0
  4070                           
  4071  0070                     ?_I2C1_MasterStop:	
  4072                           ; 1 bytes @ 0x0
  4073                           
  4074  0070                     ?_I2C1_MasterSendNack:	
  4075                           ; 1 bytes @ 0x0
  4076                           
  4077  0070                     ?_PWM5_Initialize:	
  4078                           ; 1 bytes @ 0x0
  4079                           
  4080  0070                     ?_EUSART_Initialize:	
  4081                           ; 1 bytes @ 0x0
  4082                           
  4083  0070                     ?_EUSART_Write:	
  4084                           ; 1 bytes @ 0x0
  4085                           
  4086  0070                     ?_putch:	
  4087                           ; 1 bytes @ 0x0
  4088                           
  4089  0070                     ?_TMR2_Initialize:	
  4090                           ; 1 bytes @ 0x0
  4091                           
  4092  0070                     ?_INTERRUPT_InterruptManager:	
  4093                           ; 1 bytes @ 0x0
  4094                           
  4095  0070                     ?_SYSTEM_Initialize:	
  4096                           ; 1 bytes @ 0x0
  4097                           
  4098  0070                     ?_I2C1_MasterOperation:	
  4099                           ; 1 bytes @ 0x0
  4100                           
  4101  0070                     ?_setHigh:	
  4102                           ; 1 bytes @ 0x0
  4103                           
  4104  0070                     ?_setLow:	
  4105                           ; 1 bytes @ 0x0
  4106                           
  4107  0070                     ?_setZero:	
  4108                           ; 1 bytes @ 0x0
  4109                           
  4110  0070                     ?_sendPWM:	
  4111                           ; 1 bytes @ 0x0
  4112                           
  4113  0070                     ?_readPressureSensor:	
  4114                           ; 1 bytes @ 0x0
  4115                           
  4116  0070                     ?_main:	
  4117                           ; 1 bytes @ 0x0
  4118                           
  4119                           
  4120                           ; 1 bytes @ 0x0
  4121  0070                     	ds	1
  4122  0071                     ?___fleq:	
  4123  0071                     ??_I2C1_Open:	
  4124                           ; 1 bit 
  4125                           
  4126  0071                     ?_I2C1_SetBuffer:	
  4127                           ; 1 bytes @ 0x1
  4128                           
  4129  0071                     ??_I2C1_Close:	
  4130                           ; 1 bytes @ 0x1
  4131                           
  4132  0071                     ?_EUSART_SetRxInterruptHandler:	
  4133                           ; 1 bytes @ 0x1
  4134                           
  4135  0071                     ??_EUSART_Receive_ISR:	
  4136                           ; 1 bytes @ 0x1
  4137                           
  4138  0071                     ?_EUSART_SetTxInterruptHandler:	
  4139                           ; 1 bytes @ 0x1
  4140                           
  4141  0071                     ?_EUSART_SetFramingErrorHandler:	
  4142                           ; 1 bytes @ 0x1
  4143                           
  4144  0071                     ?_EUSART_SetOverrunErrorHandler:	
  4145                           ; 1 bytes @ 0x1
  4146                           
  4147  0071                     ?_EUSART_SetErrorHandler:	
  4148                           ; 1 bytes @ 0x1
  4149                           
  4150  0071                     ??_EUSART_DefaultErrorHandler:	
  4151                           ; 1 bytes @ 0x1
  4152                           
  4153  0071                     ??_PMD_Initialize:	
  4154                           ; 1 bytes @ 0x1
  4155                           
  4156  0071                     ??_I2C1_Initialize:	
  4157                           ; 1 bytes @ 0x1
  4158                           
  4159  0071                     ??_PIN_MANAGER_Initialize:	
  4160                           ; 1 bytes @ 0x1
  4161                           
  4162  0071                     ??_OSCILLATOR_Initialize:	
  4163                           ; 1 bytes @ 0x1
  4164                           
  4165  0071                     ??_WDT_Initialize:	
  4166                           ; 1 bytes @ 0x1
  4167                           
  4168  0071                     ??_I2C1_DO_IDLE:	
  4169                           ; 1 bytes @ 0x1
  4170                           
  4171  0071                     ??_I2C1_DO_SEND_ADR_READ:	
  4172                           ; 1 bytes @ 0x1
  4173                           
  4174  0071                     ??_I2C1_DO_RCEN:	
  4175                           ; 1 bytes @ 0x1
  4176                           
  4177  0071                     ??_I2C1_DO_SEND_RESTART_READ:	
  4178                           ; 1 bytes @ 0x1
  4179                           
  4180  0071                     ??_I2C1_DO_SEND_RESTART_WRITE:	
  4181                           ; 1 bytes @ 0x1
  4182                           
  4183  0071                     ??_I2C1_DO_SEND_RESTART:	
  4184                           ; 1 bytes @ 0x1
  4185                           
  4186  0071                     ??_I2C1_DO_SEND_STOP:	
  4187                           ; 1 bytes @ 0x1
  4188                           
  4189  0071                     ??_I2C1_DO_RX_ACK:	
  4190                           ; 1 bytes @ 0x1
  4191                           
  4192  0071                     ??_I2C1_DO_RX_NACK_STOP:	
  4193                           ; 1 bytes @ 0x1
  4194                           
  4195  0071                     ??_I2C1_DO_RX_NACK_RESTART:	
  4196                           ; 1 bytes @ 0x1
  4197                           
  4198  0071                     ??_I2C1_DO_RESET:	
  4199                           ; 1 bytes @ 0x1
  4200                           
  4201  0071                     ??_I2C1_MasterClearIrq:	
  4202                           ; 1 bytes @ 0x1
  4203                           
  4204  0071                     ??_I2C1_MasterOpen:	
  4205                           ; 1 bytes @ 0x1
  4206                           
  4207  0071                     ??_I2C1_MasterDisableIrq:	
  4208                           ; 1 bytes @ 0x1
  4209                           
  4210  0071                     ??_I2C1_MasterClose:	
  4211                           ; 1 bytes @ 0x1
  4212                           
  4213  0071                     ??_I2C1_MasterStart:	
  4214                           ; 1 bytes @ 0x1
  4215                           
  4216  0071                     ?_I2C1_SetCallback:	
  4217                           ; 1 bytes @ 0x1
  4218                           
  4219  0071                     ??_I2C1_MasterWaitForEvent:	
  4220                           ; 1 bytes @ 0x1
  4221                           
  4222  0071                     ??_I2C1_MasterIsNack:	
  4223                           ; 1 bytes @ 0x1
  4224                           
  4225  0071                     ??_I2C1_MasterSendTxData:	
  4226                           ; 1 bytes @ 0x1
  4227                           
  4228  0071                     ??_I2C1_MasterGetRxData:	
  4229                           ; 1 bytes @ 0x1
  4230                           
  4231  0071                     ??_I2C1_MasterSendAck:	
  4232                           ; 1 bytes @ 0x1
  4233                           
  4234  0071                     ??_I2C1_MasterStartRx:	
  4235                           ; 1 bytes @ 0x1
  4236                           
  4237  0071                     ??_I2C1_MasterSetIrq:	
  4238                           ; 1 bytes @ 0x1
  4239                           
  4240  0071                     ??_I2C1_MasterEnableRestart:	
  4241                           ; 1 bytes @ 0x1
  4242                           
  4243  0071                     ??_I2C1_MasterStop:	
  4244                           ; 1 bytes @ 0x1
  4245                           
  4246  0071                     ??_I2C1_MasterSendNack:	
  4247                           ; 1 bytes @ 0x1
  4248                           
  4249  0071                     ?_strcpy:	
  4250                           ; 1 bytes @ 0x1
  4251                           
  4252  0071                     ??_PWM5_Initialize:	
  4253                           ; 1 bytes @ 0x1
  4254                           
  4255  0071                     ??_EUSART_Write:	
  4256                           ; 1 bytes @ 0x1
  4257                           
  4258  0071                     ??_TMR2_Initialize:	
  4259                           ; 1 bytes @ 0x1
  4260                           
  4261  0071                     ??_INTERRUPT_InterruptManager:	
  4262                           ; 1 bytes @ 0x1
  4263                           
  4264  0071                     ??_setHigh:	
  4265                           ; 1 bytes @ 0x1
  4266                           
  4267  0071                     ??_setLow:	
  4268                           ; 1 bytes @ 0x1
  4269                           
  4270  0071                     ??_setZero:	
  4271                           ; 1 bytes @ 0x1
  4272                           
  4273  0071                     ??_sendPWM:	
  4274                           ; 1 bytes @ 0x1
  4275                           
  4276  0071                     ?_strlen:	
  4277                           ; 1 bytes @ 0x1
  4278                           
  4279  0071                     ?___fpclassifyf:	
  4280                           ; 2 bytes @ 0x1
  4281                           
  4282  0071                     ?_isupper:	
  4283                           ; 2 bytes @ 0x1
  4284                           
  4285  0071                     ?_strncmp:	
  4286                           ; 2 bytes @ 0x1
  4287                           
  4288  0071                     ?__Umul8_16:	
  4289                           ; 2 bytes @ 0x1
  4290                           
  4291  0071                     ?___awdiv:	
  4292                           ; 2 bytes @ 0x1
  4293                           
  4294  0071                     ?___awmod:	
  4295                           ; 2 bytes @ 0x1
  4296                           
  4297  0071                     ?___flneg:	
  4298                           ; 2 bytes @ 0x1
  4299                           
  4300  0071                     ?___fltol:	
  4301                           ; 4 bytes @ 0x1
  4302                           
  4303  0071                     ?___fladd:	
  4304                           ; 4 bytes @ 0x1
  4305                           
  4306  0071                     ?___xxtofl:	
  4307                           ; 4 bytes @ 0x1
  4308                           
  4309  0071                     I2C1_MasterSendTxData@data:	
  4310                           ; 4 bytes @ 0x1
  4311                           
  4312  0071                     __Umul8_16@multiplicand:	
  4313                           ; 1 bytes @ 0x1
  4314                           
  4315  0071                     EUSART_SetFramingErrorHandler@interruptHandler:	
  4316                           ; 1 bytes @ 0x1
  4317                           
  4318  0071                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  4319                           ; 2 bytes @ 0x1
  4320                           
  4321  0071                     EUSART_SetErrorHandler@interruptHandler:	
  4322                           ; 2 bytes @ 0x1
  4323                           
  4324  0071                     EUSART_SetTxInterruptHandler@interruptHandler:	
  4325                           ; 2 bytes @ 0x1
  4326                           
  4327  0071                     EUSART_SetRxInterruptHandler@interruptHandler:	
  4328                           ; 2 bytes @ 0x1
  4329                           
  4330  0071                     I2C1_SetBuffer@bufferSize:	
  4331                           ; 2 bytes @ 0x1
  4332                           
  4333  0071                     I2C1_SetCallback@cb:	
  4334                           ; 2 bytes @ 0x1
  4335                           
  4336  0071                     ___awdiv@divisor:	
  4337                           ; 2 bytes @ 0x1
  4338                           
  4339  0071                     ___awmod@divisor:	
  4340                           ; 2 bytes @ 0x1
  4341                           
  4342  0071                     isupper@c:	
  4343                           ; 2 bytes @ 0x1
  4344                           
  4345  0071                     strcpy@src:	
  4346                           ; 2 bytes @ 0x1
  4347                           
  4348  0071                     strncmp@_r:	
  4349                           ; 2 bytes @ 0x1
  4350                           
  4351  0071                     ___fleq@ff1:	
  4352                           ; 2 bytes @ 0x1
  4353                           
  4354  0071                     ___flneg@f1:	
  4355                           ; 4 bytes @ 0x1
  4356                           
  4357  0071                     ___fltol@f1:	
  4358                           ; 4 bytes @ 0x1
  4359                           
  4360  0071                     ___fladd@b:	
  4361                           ; 4 bytes @ 0x1
  4362                           
  4363  0071                     ___xxtofl@val:	
  4364                           ; 4 bytes @ 0x1
  4365                           
  4366  0071                     ___fpclassifyf@x:	
  4367                           ; 4 bytes @ 0x1
  4368                           
  4369                           
  4370                           ; 4 bytes @ 0x1
  4371  0071                     	ds	1
  4372  0072                     ??_I2C1_DO_SEND_ADR_WRITE:	
  4373  0072                     EUSART_Write@txData:	
  4374                           ; 1 bytes @ 0x2
  4375                           
  4376  0072                     I2C1_Open@address:	
  4377                           ; 1 bytes @ 0x2
  4378                           
  4379  0072                     I2C1_Close@returnValue:	
  4380                           ; 1 bytes @ 0x2
  4381                           
  4382  0072                     sendPWM@j:	
  4383                           ; 1 bytes @ 0x2
  4384                           
  4385                           
  4386                           ; 1 bytes @ 0x2
  4387  0072                     	ds	1
  4388  0073                     ??_I2C1_SetBuffer:	
  4389  0073                     ??_EUSART_SetRxInterruptHandler:	
  4390                           ; 1 bytes @ 0x3
  4391                           
  4392  0073                     ??_EUSART_SetTxInterruptHandler:	
  4393                           ; 1 bytes @ 0x3
  4394                           
  4395  0073                     ??_EUSART_SetFramingErrorHandler:	
  4396                           ; 1 bytes @ 0x3
  4397                           
  4398  0073                     ??_EUSART_SetOverrunErrorHandler:	
  4399                           ; 1 bytes @ 0x3
  4400                           
  4401  0073                     ??_EUSART_SetErrorHandler:	
  4402                           ; 1 bytes @ 0x3
  4403                           
  4404  0073                     ??_strlen:	
  4405                           ; 1 bytes @ 0x3
  4406                           
  4407  0073                     ??_isupper:	
  4408                           ; 1 bytes @ 0x3
  4409                           
  4410  0073                     ??_strcpy:	
  4411                           ; 1 bytes @ 0x3
  4412                           
  4413  0073                     ??__Umul8_16:	
  4414                           ; 1 bytes @ 0x3
  4415                           
  4416  0073                     ??_EUSART_Initialize:	
  4417                           ; 1 bytes @ 0x3
  4418                           
  4419  0073                     ??_putch:	
  4420                           ; 1 bytes @ 0x3
  4421                           
  4422  0073                     putch@txData:	
  4423                           ; 1 bytes @ 0x3
  4424                           
  4425  0073                     I2C1_Open@returnValue:	
  4426                           ; 1 bytes @ 0x3
  4427                           
  4428  0073                     I2C1_SetCallback@ptr:	
  4429                           ; 1 bytes @ 0x3
  4430                           
  4431  0073                     sendPWM@data:	
  4432                           ; 1 bytes @ 0x3
  4433                           
  4434  0073                     ___awdiv@dividend:	
  4435                           ; 1 bytes @ 0x3
  4436                           
  4437  0073                     ___awmod@dividend:	
  4438                           ; 2 bytes @ 0x3
  4439                           
  4440  0073                     strncmp@n:	
  4441                           ; 2 bytes @ 0x3
  4442                           
  4443                           
  4444                           ; 2 bytes @ 0x3
  4445  0073                     	ds	1
  4446  0074                     ??_I2C1_SetCallback:	
  4447  0074                     ??_SYSTEM_Initialize:	
  4448                           ; 1 bytes @ 0x4
  4449                           
  4450  0074                     ?_fputc:	
  4451                           ; 1 bytes @ 0x4
  4452                           
  4453  0074                     I2C1_SetBuffer@buffer:	
  4454                           ; 2 bytes @ 0x4
  4455                           
  4456  0074                     strlen@a:	
  4457                           ; 1 bytes @ 0x4
  4458                           
  4459  0074                     fputc@c:	
  4460                           ; 1 bytes @ 0x4
  4461                           
  4462                           
  4463                           ; 2 bytes @ 0x4
  4464  0074                     	ds	1
  4465  0075                     ??___fpclassifyf:	
  4466  0075                     ??_strncmp:	
  4467                           ; 1 bytes @ 0x5
  4468                           
  4469  0075                     ??___awdiv:	
  4470                           ; 1 bytes @ 0x5
  4471                           
  4472  0075                     ??___awmod:	
  4473                           ; 1 bytes @ 0x5
  4474                           
  4475  0075                     ??___flneg:	
  4476                           ; 1 bytes @ 0x5
  4477                           
  4478  0075                     ??___fltol:	
  4479                           ; 1 bytes @ 0x5
  4480                           
  4481  0075                     ??___xxtofl:	
  4482                           ; 1 bytes @ 0x5
  4483                           
  4484  0075                     I2C1_SetCallback@idx:	
  4485                           ; 1 bytes @ 0x5
  4486                           
  4487  0075                     strlen@s:	
  4488                           ; 1 bytes @ 0x5
  4489                           
  4490  0075                     strcpy@s:	
  4491                           ; 1 bytes @ 0x5
  4492                           
  4493  0075                     __Umul8_16@product:	
  4494                           ; 2 bytes @ 0x5
  4495                           
  4496  0075                     ___fleq@ff2:	
  4497                           ; 2 bytes @ 0x5
  4498                           
  4499  0075                     ___fladd@a:	
  4500                           ; 4 bytes @ 0x5
  4501                           
  4502                           
  4503                           ; 4 bytes @ 0x5
  4504  0075                     	ds	1
  4505  0076                     ?_I2C1_SetDataCompleteCallback:	
  4506  0076                     ?_I2C1_SetAddressNackCallback:	
  4507                           ; 1 bytes @ 0x6
  4508                           
  4509  0076                     ___awdiv@counter:	
  4510                           ; 1 bytes @ 0x6
  4511                           
  4512  0076                     ___awmod@counter:	
  4513                           ; 1 bytes @ 0x6
  4514                           
  4515  0076                     fputc@fp:	
  4516                           ; 1 bytes @ 0x6
  4517                           
  4518  0076                     strncmp@_l:	
  4519                           ; 1 bytes @ 0x6
  4520                           
  4521  0076                     I2C1_SetDataCompleteCallback@cb:	
  4522                           ; 1 bytes @ 0x6
  4523                           
  4524  0076                     I2C1_SetAddressNackCallback@cb:	
  4525                           ; 2 bytes @ 0x6
  4526                           
  4527                           
  4528                           ; 2 bytes @ 0x6
  4529  0076                     	ds	1
  4530  0077                     ??_fputc:	
  4531  0077                     ?_tolower:	
  4532                           ; 1 bytes @ 0x7
  4533                           
  4534  0077                     ___awdiv@sign:	
  4535                           ; 2 bytes @ 0x7
  4536                           
  4537  0077                     ___awmod@sign:	
  4538                           ; 1 bytes @ 0x7
  4539                           
  4540  0077                     strcpy@d:	
  4541                           ; 1 bytes @ 0x7
  4542                           
  4543  0077                     strncmp@r:	
  4544                           ; 1 bytes @ 0x7
  4545                           
  4546  0077                     tolower@c:	
  4547                           ; 2 bytes @ 0x7
  4548                           
  4549  0077                     __Umul8_16@word_mpld:	
  4550                           ; 2 bytes @ 0x7
  4551                           
  4552                           
  4553                           ; 2 bytes @ 0x7
  4554  0077                     	ds	1
  4555  0078                     I2C1_SetDataCompleteCallback@ptr:	
  4556  0078                     I2C1_SetAddressNackCallback@ptr:	
  4557                           ; 1 bytes @ 0x8
  4558                           
  4559  0078                     strcpy@dest:	
  4560                           ; 1 bytes @ 0x8
  4561                           
  4562  0078                     ___awdiv@quotient:	
  4563                           ; 1 bytes @ 0x8
  4564                           
  4565                           
  4566                           ; 2 bytes @ 0x8
  4567  0078                     	ds	1
  4568  0079                     ??_I2C1_SetDataCompleteCallback:	
  4569  0079                     ??_I2C1_SetAddressNackCallback:	
  4570                           ; 1 bytes @ 0x9
  4571                           
  4572  0079                     strncmp@l:	
  4573                           ; 1 bytes @ 0x9
  4574                           
  4575  0079                     __Umul8_16@multiplier:	
  4576                           ; 1 bytes @ 0x9
  4577                           
  4578  0079                     _tolower$1907:	
  4579                           ; 1 bytes @ 0x9
  4580                           
  4581                           
  4582                           ; 2 bytes @ 0x9
  4583  0079                     	ds	1
  4584  007A                     ?_rd1RegCompleteHandler:	
  4585  007A                     ?_rd2RegCompleteHandler:	
  4586                           ; 1 bytes @ 0xA
  4587                           
  4588  007A                     ?_wr1RegCompleteHandler:	
  4589                           ; 1 bytes @ 0xA
  4590                           
  4591  007A                     ?_wr2RegCompleteHandler:	
  4592                           ; 1 bytes @ 0xA
  4593                           
  4594  007A                     ?_rdBlkRegCompleteHandler:	
  4595                           ; 1 bytes @ 0xA
  4596                           
  4597  007A                     ?_I2C1_CallbackReturnStop:	
  4598                           ; 1 bytes @ 0xA
  4599                           
  4600  007A                     ?_I2C1_CallbackReturnReset:	
  4601                           ; 1 bytes @ 0xA
  4602                           
  4603  007A                     ??___flsub:	
  4604                           ; 1 bytes @ 0xA
  4605                           
  4606  007A                     rd1RegCompleteHandler@ptr:	
  4607                           ; 1 bytes @ 0xA
  4608                           
  4609  007A                     rd2RegCompleteHandler@ptr:	
  4610                           ; 1 bytes @ 0xA
  4611                           
  4612  007A                     wr1RegCompleteHandler@ptr:	
  4613                           ; 1 bytes @ 0xA
  4614                           
  4615  007A                     wr2RegCompleteHandler@ptr:	
  4616                           ; 1 bytes @ 0xA
  4617                           
  4618  007A                     rdBlkRegCompleteHandler@ptr:	
  4619                           ; 1 bytes @ 0xA
  4620                           
  4621  007A                     I2C1_CallbackReturnStop@funPtr:	
  4622                           ; 1 bytes @ 0xA
  4623                           
  4624  007A                     I2C1_CallbackReturnReset@funPtr:	
  4625                           ; 1 bytes @ 0xA
  4626                           
  4627  007A                     ___fltol@sign1:	
  4628                           ; 1 bytes @ 0xA
  4629                           
  4630                           
  4631                           ; 1 bytes @ 0xA
  4632  007A                     	ds	1
  4633  007B                     ??_rd1RegCompleteHandler:	
  4634  007B                     ??_rd2RegCompleteHandler:	
  4635                           ; 1 bytes @ 0xB
  4636                           
  4637  007B                     ??_wr1RegCompleteHandler:	
  4638                           ; 1 bytes @ 0xB
  4639                           
  4640  007B                     ??_wr2RegCompleteHandler:	
  4641                           ; 1 bytes @ 0xB
  4642                           
  4643  007B                     ??_rdBlkRegCompleteHandler:	
  4644                           ; 1 bytes @ 0xB
  4645                           
  4646  007B                     ??_I2C1_CallbackReturnStop:	
  4647                           ; 1 bytes @ 0xB
  4648                           
  4649  007B                     ??_I2C1_CallbackReturnReset:	
  4650                           ; 1 bytes @ 0xB
  4651                           
  4652  007B                     ??_I2C1_Poller:	
  4653                           ; 1 bytes @ 0xB
  4654                           
  4655  007B                     ??_I2C1_MasterOperation:	
  4656                           ; 1 bytes @ 0xB
  4657                           
  4658  007B                     ___fltol@exp1:	
  4659                           ; 1 bytes @ 0xB
  4660                           
  4661                           
  4662                           ; 1 bytes @ 0xB
  4663  007B                     	ds	1
  4664  007C                     ??_I2C1_MasterWrite:	
  4665                           
  4666                           	psect	cstackBANK0
  4667  0020                     __pcstackBANK0:	
  4668                           ; 1 bytes @ 0xC
  4669                           
  4670  0020                     ??_I2C1_DO_TX:	
  4671  0020                     ??_I2C1_DO_RX:	
  4672                           ; 1 bytes @ 0x0
  4673                           
  4674  0020                     ??_I2C1_DO_TX_EMPTY:	
  4675                           ; 1 bytes @ 0x0
  4676                           
  4677  0020                     ??_I2C1_DO_ADDRESS_NACK:	
  4678                           ; 1 bytes @ 0x0
  4679                           
  4680  0020                     ??_tolower:	
  4681                           ; 1 bytes @ 0x0
  4682                           
  4683  0020                     ??___fleq:	
  4684                           ; 1 bytes @ 0x0
  4685                           
  4686  0020                     ??___fladd:	
  4687                           ; 1 bytes @ 0x0
  4688                           
  4689  0020                     ?_fputs:	
  4690                           ; 1 bytes @ 0x0
  4691                           
  4692  0020                     ?___flmul:	
  4693                           ; 2 bytes @ 0x0
  4694                           
  4695  0020                     ___xxtofl@sign:	
  4696                           ; 4 bytes @ 0x0
  4697                           
  4698  0020                     fputs@fp:	
  4699                           ; 1 bytes @ 0x0
  4700                           
  4701  0020                     ___fpclassifyf@e:	
  4702                           ; 1 bytes @ 0x0
  4703                           
  4704  0020                     ___flmul@b:	
  4705                           ; 2 bytes @ 0x0
  4706                           
  4707                           
  4708                           ; 4 bytes @ 0x0
  4709  0020                     	ds	1
  4710  0021                     ??_fputs:	
  4711  0021                     ___xxtofl@exp:	
  4712                           ; 1 bytes @ 0x1
  4713                           
  4714                           
  4715                           ; 1 bytes @ 0x1
  4716  0021                     	ds	1
  4717  0022                     ___xxtofl@arg:	
  4718  0022                     ___fpclassifyf@u:	
  4719                           ; 4 bytes @ 0x2
  4720                           
  4721                           
  4722                           ; 4 bytes @ 0x2
  4723  0022                     	ds	1
  4724  0023                     ??_I2C1_MasterFsm:	
  4725                           
  4726                           ; 1 bytes @ 0x3
  4727  0023                     	ds	1
  4728  0024                     fputs@c:	
  4729  0024                     ___flmul@a:	
  4730                           ; 1 bytes @ 0x4
  4731                           
  4732                           
  4733                           ; 4 bytes @ 0x4
  4734  0024                     	ds	1
  4735  0025                     fputs@i:	
  4736                           
  4737                           ; 2 bytes @ 0x5
  4738  0025                     	ds	1
  4739  0026                     ?___fldiv:	
  4740  0026                     I2C1_MasterOperation@read:	
  4741                           ; 4 bytes @ 0x6
  4742                           
  4743  0026                     ___fldiv@a:	
  4744                           ; 1 bytes @ 0x6
  4745                           
  4746                           
  4747                           ; 4 bytes @ 0x6
  4748  0026                     	ds	1
  4749  0027                     I2C1_MasterOperation@returnValue:	
  4750  0027                     fputs@s:	
  4751                           ; 1 bytes @ 0x7
  4752                           
  4753                           
  4754                           ; 1 bytes @ 0x7
  4755  0027                     	ds	1
  4756  0028                     ?_I2C1_Read1ByteRegister:	
  4757  0028                     ??___flmul:	
  4758                           ; 1 bytes @ 0x8
  4759                           
  4760  0028                     ?_pad:	
  4761                           ; 1 bytes @ 0x8
  4762                           
  4763  0028                     I2C1_Read1ByteRegister@reg:	
  4764                           ; 2 bytes @ 0x8
  4765                           
  4766  0028                     pad@buf:	
  4767                           ; 1 bytes @ 0x8
  4768                           
  4769  0028                     ___fladd@signs:	
  4770                           ; 1 bytes @ 0x8
  4771                           
  4772                           
  4773                           ; 1 bytes @ 0x8
  4774  0028                     	ds	1
  4775  0029                     ??_I2C1_Read1ByteRegister:	
  4776  0029                     ___fladd@aexp:	
  4777                           ; 1 bytes @ 0x9
  4778                           
  4779  0029                     pad@p:	
  4780                           ; 1 bytes @ 0x9
  4781                           
  4782                           
  4783                           ; 2 bytes @ 0x9
  4784  0029                     	ds	1
  4785  002A                     I2C1_Read1ByteRegister@address:	
  4786  002A                     ___fladd@bexp:	
  4787                           ; 1 bytes @ 0xA
  4788                           
  4789  002A                     ___fldiv@b:	
  4790                           ; 1 bytes @ 0xA
  4791                           
  4792                           
  4793                           ; 4 bytes @ 0xA
  4794  002A                     	ds	1
  4795  002B                     ??_pad:	
  4796  002B                     I2C1_Read1ByteRegister@returnValue:	
  4797                           ; 1 bytes @ 0xB
  4798                           
  4799  002B                     ___fladd@grs:	
  4800                           ; 1 bytes @ 0xB
  4801                           
  4802                           
  4803                           ; 1 bytes @ 0xB
  4804  002B                     	ds	1
  4805  002C                     pad@i:	
  4806                           
  4807                           ; 2 bytes @ 0xC
  4808  002C                     	ds	1
  4809  002D                     ___flmul@sign:	
  4810                           
  4811                           ; 1 bytes @ 0xD
  4812  002D                     	ds	1
  4813  002E                     ??___fldiv:	
  4814  002E                     pad@w:	
  4815                           ; 1 bytes @ 0xE
  4816                           
  4817  002E                     ___flmul@grs:	
  4818                           ; 2 bytes @ 0xE
  4819                           
  4820                           
  4821                           ; 4 bytes @ 0xE
  4822  002E                     	ds	2
  4823  0030                     pad@fp:	
  4824                           
  4825                           ; 1 bytes @ 0x10
  4826  0030                     	ds	2
  4827  0032                     ___flmul@aexp:	
  4828                           
  4829                           ; 1 bytes @ 0x12
  4830  0032                     	ds	1
  4831  0033                     ___flmul@bexp:	
  4832  0033                     ___fldiv@rem:	
  4833                           ; 1 bytes @ 0x13
  4834                           
  4835                           
  4836                           ; 4 bytes @ 0x13
  4837  0033                     	ds	1
  4838  0034                     ___flmul@prod:	
  4839                           
  4840                           ; 4 bytes @ 0x14
  4841  0034                     	ds	3
  4842  0037                     ___fldiv@sign:	
  4843                           
  4844                           ; 1 bytes @ 0x17
  4845  0037                     	ds	1
  4846  0038                     ___fldiv@new_exp:	
  4847  0038                     ___flmul@temp:	
  4848                           ; 2 bytes @ 0x18
  4849                           
  4850                           
  4851                           ; 2 bytes @ 0x18
  4852  0038                     	ds	2
  4853  003A                     ?___flge:	
  4854  003A                     ?___flsub:	
  4855                           ; 1 bit 
  4856                           
  4857  003A                     ___flge@ff1:	
  4858                           ; 4 bytes @ 0x1A
  4859                           
  4860  003A                     ___flsub@a:	
  4861                           ; 4 bytes @ 0x1A
  4862                           
  4863  003A                     ___fldiv@grs:	
  4864                           ; 4 bytes @ 0x1A
  4865                           
  4866                           
  4867                           ; 4 bytes @ 0x1A
  4868  003A                     	ds	4
  4869  003E                     ___fldiv@bexp:	
  4870  003E                     ___flge@ff2:	
  4871                           ; 1 bytes @ 0x1E
  4872                           
  4873  003E                     ___flsub@b:	
  4874                           ; 4 bytes @ 0x1E
  4875                           
  4876                           
  4877                           ; 4 bytes @ 0x1E
  4878  003E                     	ds	1
  4879  003F                     ___fldiv@aexp:	
  4880                           
  4881                           ; 1 bytes @ 0x1F
  4882  003F                     	ds	1
  4883  0040                     ?_floorf:	
  4884  0040                     floorf@x:	
  4885                           ; 4 bytes @ 0x20
  4886                           
  4887                           
  4888                           ; 4 bytes @ 0x20
  4889  0040                     	ds	2
  4890  0042                     ??___flge:	
  4891                           
  4892                           ; 1 bytes @ 0x22
  4893  0042                     	ds	2
  4894  0044                     ??_floorf:	
  4895                           
  4896                           ; 1 bytes @ 0x24
  4897  0044                     	ds	6
  4898  004A                     floorf@m:	
  4899                           
  4900                           ; 4 bytes @ 0x2A
  4901  004A                     	ds	4
  4902  004E                     floorf@e:	
  4903                           
  4904                           ; 2 bytes @ 0x2E
  4905  004E                     	ds	2
  4906  0050                     floorf@u:	
  4907                           
  4908                           ; 4 bytes @ 0x30
  4909  0050                     	ds	4
  4910  0054                     ?_efgtoa:	
  4911  0054                     efgtoa@f:	
  4912                           ; 2 bytes @ 0x34
  4913                           
  4914                           
  4915                           ; 4 bytes @ 0x34
  4916  0054                     	ds	4
  4917  0058                     efgtoa@c:	
  4918                           
  4919                           ; 1 bytes @ 0x38
  4920  0058                     	ds	1
  4921  0059                     ??_efgtoa:	
  4922                           
  4923                           ; 1 bytes @ 0x39
  4924  0059                     	ds	4
  4925  005D                     ?_vfpfcnvrt:	
  4926  005D                     vfpfcnvrt@fmt:	
  4927                           ; 2 bytes @ 0x3D
  4928                           
  4929                           
  4930                           ; 1 bytes @ 0x3D
  4931  005D                     	ds	1
  4932  005E                     vfpfcnvrt@ap:	
  4933                           
  4934                           ; 1 bytes @ 0x3E
  4935  005E                     	ds	1
  4936  005F                     ??_vfpfcnvrt:	
  4937                           
  4938                           ; 1 bytes @ 0x3F
  4939  005F                     	ds	6
  4940  0065                     _vfpfcnvrt$1526:	
  4941                           
  4942                           ; 2 bytes @ 0x45
  4943  0065                     	ds	2
  4944  0067                     vfpfcnvrt@ct:	
  4945                           
  4946                           ; 3 bytes @ 0x47
  4947  0067                     	ds	3
  4948  006A                     vfpfcnvrt@f:	
  4949                           
  4950                           ; 4 bytes @ 0x4A
  4951  006A                     	ds	4
  4952  006E                     vfpfcnvrt@c:	
  4953                           
  4954                           ; 1 bytes @ 0x4E
  4955  006E                     	ds	1
  4956  006F                     vfpfcnvrt@fp:	
  4957                           
  4958                           ; 1 bytes @ 0x4F
  4959  006F                     	ds	1
  4960                           
  4961                           	psect	maintext
  4962  1551                     __pmaintext:	
  4963 ;;
  4964 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4965 ;;
  4966 ;; *************** function _main *****************
  4967 ;; Defined at:
  4968 ;;		line 143 in file "main.c"
  4969 ;; Parameters:    Size  Location     Type
  4970 ;;		None
  4971 ;; Auto vars:     Size  Location     Type
  4972 ;;  dummy_data     23    9[BANK2 ] unsigned char [23]
  4973 ;;  hdr_trl         4   32[BANK2 ] unsigned char [4]
  4974 ;;  i               1   37[BANK2 ] unsigned char 
  4975 ;;  n               1   36[BANK2 ] unsigned char 
  4976 ;; Return value:  Size  Location     Type
  4977 ;;                  1    wreg      void 
  4978 ;; Registers used:
  4979 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4980 ;; Tracked objects:
  4981 ;;		On entry : B1F/0
  4982 ;;		On exit  : 0/0
  4983 ;;		Unchanged: 0/0
  4984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4986 ;;      Locals:         0       0       0      29       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4987 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4988 ;;      Totals:         0       0       2      29       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4989 ;;Total ram usage:       31 bytes
  4990 ;; Hardware stack levels required when called:   14
  4991 ;; This function calls:
  4992 ;;		_SYSTEM_Initialize
  4993 ;;		_readPressureSensor
  4994 ;;		_sendPWM
  4995 ;;		_setZero
  4996 ;; This function is called by:
  4997 ;;		Startup code after reset
  4998 ;; This function uses a non-reentrant model
  4999 ;;
  5000                           
  5001                           
  5002                           ;psect for function _main
  5003  1551                     _main:	
  5004                           
  5005                           ;main.c: 145:     char hdr_trl[] = {0xFF, 0x00, 0xFF, 0x00};
  5006                           
  5007                           ;incstack = 0
  5008                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5009  1551  0022               	movlb	2	; select bank2
  5010  1552  086F               	movf	(main@F7270+3)^(0+256),w
  5011  1553  00C3               	movwf	(main@hdr_trl+3)^(0+256)
  5012  1554  086E               	movf	(main@F7270+2)^(0+256),w
  5013  1555  00C2               	movwf	(main@hdr_trl+2)^(0+256)
  5014  1556  086D               	movf	(main@F7270+1)^(0+256),w
  5015  1557  00C1               	movwf	(main@hdr_trl+1)^(0+256)
  5016  1558  086C               	movf	main@F7270^(0+256),w
  5017  1559  00C0               	movwf	main@hdr_trl^(0+256)
  5018                           
  5019                           ;main.c: 147:     SYSTEM_Initialize();
  5020  155A  319F  2793  3195   	fcall	_SYSTEM_Initialize
  5021                           
  5022                           ;main.c: 148:     setZero();
  5023  155D  319D  25CF  3195   	fcall	_setZero
  5024                           
  5025                           ;main.c: 149:     pressure = 1013.134;
  5026  1560  3044               	movlw	68
  5027  1561  0023               	movlb	3	; select bank3
  5028  1562  00D4               	movwf	(_pressure+3)^(0+384)
  5029  1563  307D               	movlw	125
  5030  1564  00D3               	movwf	(_pressure+2)^(0+384)
  5031  1565  3048               	movlw	72
  5032  1566  00D2               	movwf	(_pressure+1)^(0+384)
  5033  1567  3093               	movlw	147
  5034  1568  00D1               	movwf	_pressure^(0+384)
  5035                           
  5036                           ;main.c: 150:     temperature = 24.76;
  5037  1569  3041               	movlw	65
  5038  156A  00D0               	movwf	(_temperature+3)^(0+384)
  5039  156B  30C6               	movlw	198
  5040  156C  00CF               	movwf	(_temperature+2)^(0+384)
  5041  156D  3014               	movlw	20
  5042  156E  00CE               	movwf	(_temperature+1)^(0+384)
  5043  156F  307B               	movlw	123
  5044  1570  00CD               	movwf	_temperature^(0+384)
  5045                           
  5046                           ;main.c: 155:     (INTCONbits.GIE = 1);
  5047  1571  178B               	bsf	11,7	;volatile
  5048                           
  5049                           ;main.c: 158:     (INTCONbits.PEIE = 1);
  5050  1572  170B               	bsf	11,6	;volatile
  5051                           
  5052                           ;main.c: 165:     char dummy_data[] = {0xFF, 0x00, 0xFF, 0x00, 0x16, 'H', 'E', 'L', 'L',
      +                           'O', ' ', 'S', 'E', 'N', 'S', 'O', 'R', 'S', 0x17, 0xFF, 0x00, 0xFF, 0x00};
  5053  1573  30A0               	movlw	low main@F7272
  5054  1574  0086               	movwf	6
  5055  1575  3002               	movlw	high main@F7272
  5056  1576  0087               	movwf	7
  5057  1577  3029               	movlw	low main@dummy_data
  5058  1578  0084               	movwf	4
  5059  1579  3001               	movlw	high main@dummy_data
  5060  157A  0085               	movwf	5
  5061  157B  3017               	movlw	23
  5062  157C  0021               	movlb	1	; select bank1
  5063  157D  00EB               	movwf	??_main^(0+128)
  5064  157E                     u7440:	
  5065  157E  0016               	moviw fsr1++
  5066  157F  001A               	movwi fsr0++
  5067  1580  0BEB               	decfsz	??_main^(0+128),f
  5068  1581  2D7E               	goto	u7440
  5069                           
  5070                           ;main.c: 166:     uint8_t n = sizeof (dummy_data);
  5071  1582  3017               	movlw	23
  5072  1583  00EB               	movwf	??_main^(0+128)
  5073  1584  086B               	movf	??_main^(0+128),w
  5074  1585  0022               	movlb	2	; select bank2
  5075  1586  00C4               	movwf	main@n^(0+256)
  5076  1587                     l6838:	
  5077                           
  5078                           ;main.c: 173:         TRISC = 0xFF;
  5079  1587  30FF               	movlw	255
  5080  1588  0021               	movlb	1	; select bank1
  5081  1589  008E               	movwf	14	;volatile
  5082                           
  5083                           ;main.c: 174:         if (PORTCbits.RC4 == 1) {
  5084  158A  0020               	movlb	0	; select bank0
  5085  158B  1A0E               	btfsc	14,4	;volatile
  5086  158C  2D87               	goto	l6838
  5087                           
  5088                           ;main.c: 178:             readPressureSensor();
  5089  158D  3196  26AA  3195   	fcall	_readPressureSensor
  5090                           
  5091                           ;main.c: 179:             _delay((unsigned long)((500)*(16000000/4000.0)));
  5092  1590  300B               	movlw	11
  5093  1591  0021               	movlb	1	; select bank1
  5094  1592  00EC               	movwf	(??_main^(0+128)+1)
  5095  1593  3026               	movlw	38
  5096  1594  00EB               	movwf	??_main^(0+128)
  5097  1595  305D               	movlw	93
  5098  1596                     u7477:	
  5099  1596  0B89               	decfsz	9,f
  5100  1597  2D96               	goto	u7477
  5101  1598  0BEB               	decfsz	??_main^(0+128),f
  5102  1599  2D96               	goto	u7477
  5103  159A  0BEC               	decfsz	(??_main^(0+128)+1),f
  5104  159B  2D96               	goto	u7477
  5105  159C  3200               	nop2
  5106                           
  5107                           ;main.c: 180:             LATCbits.LATC3 = 1;
  5108  159D  0022               	movlb	2	; select bank2
  5109  159E  158E               	bsf	14,3	;volatile
  5110                           
  5111                           ;main.c: 181:             TRISC = 0xBF;
  5112  159F  30BF               	movlw	191
  5113  15A0  0021               	movlb	1	; select bank1
  5114  15A1  008E               	movwf	14	;volatile
  5115                           
  5116                           ;main.c: 182:             for (i = 0; i < n; i++) {
  5117  15A2  0022               	movlb	2	; select bank2
  5118  15A3  01C5               	clrf	main@i^(0+256)
  5119  15A4                     l6858:	
  5120  15A4  0844               	movf	main@n^(0+256),w
  5121  15A5  0245               	subwf	main@i^(0+256),w
  5122  15A6  1803               	btfsc	3,0
  5123  15A7  2DB4               	goto	l840
  5124                           
  5125                           ;main.c: 183:                 sendPWM(&dummy_data[i]);
  5126  15A8  0845               	movf	main@i^(0+256),w
  5127  15A9  3E29               	addlw	(low (main@dummy_data| (0+256)))& (0+255)
  5128  15AA  3192  229F  3195   	fcall	_sendPWM
  5129                           
  5130                           ;main.c: 184:             }
  5131  15AD  3001               	movlw	1
  5132  15AE  0021               	movlb	1	; select bank1
  5133  15AF  00EB               	movwf	??_main^(0+128)
  5134  15B0  086B               	movf	??_main^(0+128),w
  5135  15B1  0022               	movlb	2	; select bank2
  5136  15B2  07C5               	addwf	main@i^(0+256),f
  5137  15B3  2DA4               	goto	l6858
  5138  15B4                     l840:	
  5139                           
  5140                           ;main.c: 185:             LATCbits.LATC3 = 0;
  5141  15B4  118E               	bcf	14,3	;volatile
  5142  15B5  2D87               	goto	l6838
  5143  15B6                     __end_of_main:	
  5144                           
  5145                           	psect	text1
  5146  1DCF                     __ptext1:	
  5147 ;; *************** function _setZero *****************
  5148 ;; Defined at:
  5149 ;;		line 85 in file "main.c"
  5150 ;; Parameters:    Size  Location     Type
  5151 ;;		None
  5152 ;; Auto vars:     Size  Location     Type
  5153 ;;		None
  5154 ;; Return value:  Size  Location     Type
  5155 ;;                  1    wreg      void 
  5156 ;; Registers used:
  5157 ;;		status,2
  5158 ;; Tracked objects:
  5159 ;;		On entry : 0/0
  5160 ;;		On exit  : 0/0
  5161 ;;		Unchanged: 0/0
  5162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5167 ;;Total ram usage:        0 bytes
  5168 ;; Hardware stack levels used:    1
  5169 ;; Hardware stack levels required when called:    4
  5170 ;; This function calls:
  5171 ;;		Nothing
  5172 ;; This function is called by:
  5173 ;;		_main
  5174 ;; This function uses a non-reentrant model
  5175 ;;
  5176                           
  5177                           
  5178                           ;psect for function _setZero
  5179  1DCF                     _setZero:	
  5180                           
  5181                           ;main.c: 87:     PWM5CON = 0x00;
  5182                           
  5183                           ;incstack = 0
  5184                           ; Regs used in _setZero: [status,2]
  5185  1DCF  002C               	movlb	12	; select bank12
  5186  1DD0  0199               	clrf	25	;volatile
  5187  1DD1  0008               	return
  5188  1DD2                     __end_of_setZero:	
  5189                           
  5190                           	psect	text2
  5191  129F                     __ptext2:	
  5192 ;; *************** function _sendPWM *****************
  5193 ;; Defined at:
  5194 ;;		line 90 in file "main.c"
  5195 ;; Parameters:    Size  Location     Type
  5196 ;;  data            1    wreg     PTR unsigned char 
  5197 ;;		 -> main@dummy_data(23), 
  5198 ;; Auto vars:     Size  Location     Type
  5199 ;;  data            1    3[COMMON] PTR unsigned char 
  5200 ;;		 -> main@dummy_data(23), 
  5201 ;;  j               1    2[COMMON] unsigned char 
  5202 ;; Return value:  Size  Location     Type
  5203 ;;                  1    wreg      _Bool 
  5204 ;; Registers used:
  5205 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5206 ;; Tracked objects:
  5207 ;;		On entry : 0/0
  5208 ;;		On exit  : 0/0
  5209 ;;		Unchanged: 0/0
  5210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5212 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5213 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5214 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5215 ;;Total ram usage:        3 bytes
  5216 ;; Hardware stack levels used:    1
  5217 ;; Hardware stack levels required when called:    5
  5218 ;; This function calls:
  5219 ;;		_setHigh
  5220 ;;		_setLow
  5221 ;; This function is called by:
  5222 ;;		_main
  5223 ;;		_sendFloat
  5224 ;; This function uses a non-reentrant model
  5225 ;;
  5226                           
  5227                           
  5228                           ;psect for function _sendPWM
  5229  129F                     _sendPWM:	
  5230                           
  5231                           ;incstack = 0
  5232                           ; Regs used in _sendPWM: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5233                           ;sendPWM@data stored from wreg
  5234  129F  00F3               	movwf	sendPWM@data
  5235                           
  5236                           ;main.c: 93:     setLow();
  5237  12A0  319E  269E  3192   	fcall	_setLow
  5238                           
  5239                           ;main.c: 94:     _delay((unsigned long)((13.3333333333)*(16000000/4000.0)));
  5240  12A3  3046               	movlw	70
  5241  12A4  00F1               	movwf	??_sendPWM
  5242  12A5  3042               	movlw	66
  5243  12A6                     u7487:	
  5244  12A6  0B89               	decfsz	9,f
  5245  12A7  2AA6               	goto	u7487
  5246  12A8  0BF1               	decfsz	??_sendPWM,f
  5247  12A9  2AA6               	goto	u7487
  5248  12AA  0000               	nop
  5249                           
  5250                           ;main.c: 96:     for (j = 0; j < 8; j++) {
  5251  12AB  01F2               	clrf	sendPWM@j
  5252  12AC                     l5808:	
  5253                           
  5254                           ;main.c: 97:         (!!((*data >> j)&0x01)) ? setHigh() : setLow();
  5255  12AC  0873               	movf	sendPWM@data,w
  5256  12AD  0086               	movwf	6
  5257  12AE  3001               	movlw	1	; select bank2/3
  5258  12AF  0087               	movwf	7
  5259  12B0  0801               	movf	1,w
  5260  12B1  00F1               	movwf	??_sendPWM
  5261  12B2  0A72               	incf	sendPWM@j,w
  5262  12B3  2AB5               	goto	u5944
  5263  12B4                     u5945:	
  5264  12B4  36F1               	lsrf	??_sendPWM,f
  5265  12B5                     u5944:	
  5266  12B5  0B89               	decfsz	9,f
  5267  12B6  2AB4               	goto	u5945
  5268  12B7  1C71               	btfss	??_sendPWM,0
  5269  12B8  2ABD               	goto	l5812
  5270  12B9  319E  2694  3192   	fcall	_setHigh
  5271  12BC  2AC0               	goto	l5814
  5272  12BD                     l5812:	
  5273  12BD  319E  269E  3192   	fcall	_setLow
  5274  12C0                     l5814:	
  5275                           
  5276                           ;main.c: 98:         _delay((unsigned long)((13.3333333333)*(16000000/4000.0)));
  5277  12C0  3046               	movlw	70
  5278  12C1  00F1               	movwf	??_sendPWM
  5279  12C2  3042               	movlw	66
  5280  12C3                     u7497:	
  5281  12C3  0B89               	decfsz	9,f
  5282  12C4  2AC3               	goto	u7497
  5283  12C5  0BF1               	decfsz	??_sendPWM,f
  5284  12C6  2AC3               	goto	u7497
  5285  12C7  0000               	nop
  5286                           
  5287                           ;main.c: 99:     }
  5288  12C8  3001               	movlw	1
  5289  12C9  00F1               	movwf	??_sendPWM
  5290  12CA  0871               	movf	??_sendPWM,w
  5291  12CB  07F2               	addwf	sendPWM@j,f
  5292  12CC  3008               	movlw	8
  5293  12CD  0272               	subwf	sendPWM@j,w
  5294  12CE  1C03               	skipc
  5295  12CF  2AAC               	goto	l5808
  5296                           
  5297                           ;main.c: 101:     setHigh();
  5298  12D0  319E  2694  3192   	fcall	_setHigh
  5299                           
  5300                           ;main.c: 102:     _delay((unsigned long)((13.3333333333)*(16000000/4000.0)));
  5301  12D3  3046               	movlw	70
  5302  12D4  00F1               	movwf	??_sendPWM
  5303  12D5  3042               	movlw	66
  5304  12D6                     u7507:	
  5305  12D6  0B89               	decfsz	9,f
  5306  12D7  2AD6               	goto	u7507
  5307  12D8  0BF1               	decfsz	??_sendPWM,f
  5308  12D9  2AD6               	goto	u7507
  5309  12DA  0000               	nop
  5310  12DB  0008               	return
  5311  12DC                     __end_of_sendPWM:	
  5312                           
  5313                           	psect	text3
  5314  1E9E                     __ptext3:	
  5315 ;; *************** function _setLow *****************
  5316 ;; Defined at:
  5317 ;;		line 78 in file "main.c"
  5318 ;; Parameters:    Size  Location     Type
  5319 ;;		None
  5320 ;; Auto vars:     Size  Location     Type
  5321 ;;		None
  5322 ;; Return value:  Size  Location     Type
  5323 ;;                  1    wreg      void 
  5324 ;; Registers used:
  5325 ;;		wreg
  5326 ;; Tracked objects:
  5327 ;;		On entry : 0/0
  5328 ;;		On exit  : 0/0
  5329 ;;		Unchanged: 0/0
  5330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5335 ;;Total ram usage:        0 bytes
  5336 ;; Hardware stack levels used:    1
  5337 ;; Hardware stack levels required when called:    4
  5338 ;; This function calls:
  5339 ;;		Nothing
  5340 ;; This function is called by:
  5341 ;;		_sendPWM
  5342 ;; This function uses a non-reentrant model
  5343 ;;
  5344                           
  5345                           
  5346                           ;psect for function _setLow
  5347  1E9E                     _setLow:	
  5348                           
  5349                           ;main.c: 80:     PWM5CON = 0x80;
  5350                           
  5351                           ;incstack = 0
  5352                           ; Regs used in _setLow: [wreg]
  5353  1E9E  3080               	movlw	128
  5354  1E9F  002C               	movlb	12	; select bank12
  5355  1EA0  0099               	movwf	25	;volatile
  5356                           
  5357                           ;main.c: 81:     PR2 = 0x74;
  5358  1EA1  3074               	movlw	116
  5359  1EA2  0020               	movlb	0	; select bank0
  5360  1EA3  009E               	movwf	30	;volatile
  5361                           
  5362                           ;main.c: 82:     PWM5DCH = 0x3A;
  5363  1EA4  303A               	movlw	58
  5364  1EA5  002C               	movlb	12	; select bank12
  5365  1EA6  0098               	movwf	24	;volatile
  5366  1EA7  0008               	return
  5367  1EA8                     __end_of_setLow:	
  5368                           
  5369                           	psect	text4
  5370  1E94                     __ptext4:	
  5371 ;; *************** function _setHigh *****************
  5372 ;; Defined at:
  5373 ;;		line 70 in file "main.c"
  5374 ;; Parameters:    Size  Location     Type
  5375 ;;		None
  5376 ;; Auto vars:     Size  Location     Type
  5377 ;;		None
  5378 ;; Return value:  Size  Location     Type
  5379 ;;                  1    wreg      void 
  5380 ;; Registers used:
  5381 ;;		wreg
  5382 ;; Tracked objects:
  5383 ;;		On entry : 0/0
  5384 ;;		On exit  : 0/0
  5385 ;;		Unchanged: 0/0
  5386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5391 ;;Total ram usage:        0 bytes
  5392 ;; Hardware stack levels used:    1
  5393 ;; Hardware stack levels required when called:    4
  5394 ;; This function calls:
  5395 ;;		Nothing
  5396 ;; This function is called by:
  5397 ;;		_sendPWM
  5398 ;; This function uses a non-reentrant model
  5399 ;;
  5400                           
  5401                           
  5402                           ;psect for function _setHigh
  5403  1E94                     _setHigh:	
  5404                           
  5405                           ;main.c: 72:     PWM5CON = 0x80;
  5406                           
  5407                           ;incstack = 0
  5408                           ; Regs used in _setHigh: [wreg]
  5409  1E94  3080               	movlw	128
  5410  1E95  002C               	movlb	12	; select bank12
  5411  1E96  0099               	movwf	25	;volatile
  5412                           
  5413                           ;main.c: 73:     PR2 = 0x68;
  5414  1E97  3068               	movlw	104
  5415  1E98  0020               	movlb	0	; select bank0
  5416  1E99  009E               	movwf	30	;volatile
  5417                           
  5418                           ;main.c: 74:     PWM5DCH = 0x34;
  5419  1E9A  3034               	movlw	52
  5420  1E9B  002C               	movlb	12	; select bank12
  5421  1E9C  0098               	movwf	24	;volatile
  5422  1E9D  0008               	return
  5423  1E9E                     __end_of_setHigh:	
  5424                           
  5425                           	psect	text5
  5426  16AA                     __ptext5:	
  5427 ;; *************** function _readPressureSensor *****************
  5428 ;; Defined at:
  5429 ;;		line 108 in file "main.c"
  5430 ;; Parameters:    Size  Location     Type
  5431 ;;		None
  5432 ;; Auto vars:     Size  Location     Type
  5433 ;;		None
  5434 ;; Return value:  Size  Location     Type
  5435 ;;                  1    wreg      void 
  5436 ;; Registers used:
  5437 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5438 ;; Tracked objects:
  5439 ;;		On entry : 0/0
  5440 ;;		On exit  : 0/0
  5441 ;;		Unchanged: 0/0
  5442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5445 ;;      Temps:          0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5446 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5447 ;;Total ram usage:        9 bytes
  5448 ;; Hardware stack levels used:    1
  5449 ;; Hardware stack levels required when called:   13
  5450 ;; This function calls:
  5451 ;;		_I2C1_Read1ByteRegister
  5452 ;;		___fldiv
  5453 ;;		___xxtofl
  5454 ;;		_printf
  5455 ;; This function is called by:
  5456 ;;		_main
  5457 ;; This function uses a non-reentrant model
  5458 ;;
  5459                           
  5460                           
  5461                           ;psect for function _readPressureSensor
  5462  16AA                     _readPressureSensor:	
  5463                           
  5464                           ;main.c: 111:     raw_pressure = 0;
  5465                           
  5466                           ;incstack = 0
  5467                           ; Regs used in _readPressureSensor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5468  16AA  3000               	movlw	0
  5469  16AB  0022               	movlb	2	; select bank2
  5470  16AC  00E6               	movwf	(_raw_pressure+3)^(0+256)
  5471  16AD  3000               	movlw	0
  5472  16AE  00E5               	movwf	(_raw_pressure+2)^(0+256)
  5473  16AF  3000               	movlw	0
  5474  16B0  00E4               	movwf	(_raw_pressure+1)^(0+256)
  5475  16B1  3000               	movlw	0
  5476  16B2  00E3               	movwf	_raw_pressure^(0+256)
  5477                           
  5478                           ;main.c: 112:     raw_pressure = I2C1_Read1ByteRegister(0x5D, 0x2A);
  5479  16B3  302A               	movlw	42
  5480  16B4  00A0               	movwf	??_readPressureSensor^(0+256)
  5481  16B5  0820               	movf	??_readPressureSensor^(0+256),w
  5482  16B6  0020               	movlb	0	; select bank0
  5483  16B7  00A8               	movwf	I2C1_Read1ByteRegister@reg
  5484  16B8  305D               	movlw	93
  5485  16B9  3191  2197  3196   	fcall	_I2C1_Read1ByteRegister
  5486  16BC  0022               	movlb	2	; select bank2
  5487  16BD  00A1               	movwf	(??_readPressureSensor+1)^(0+256)
  5488  16BE  01A2               	clrf	((??_readPressureSensor+1)^(0+256)+1)
  5489  16BF  01A3               	clrf	((??_readPressureSensor+1)^(0+256)+2)
  5490  16C0  01A4               	clrf	((??_readPressureSensor+1)^(0+256)+3)
  5491  16C1  0824               	movf	(??_readPressureSensor+4)^(0+256),w
  5492  16C2  00E6               	movwf	(_raw_pressure+3)^(0+256)
  5493  16C3  0823               	movf	(??_readPressureSensor+3)^(0+256),w
  5494  16C4  00E5               	movwf	(_raw_pressure+2)^(0+256)
  5495  16C5  0822               	movf	(??_readPressureSensor+2)^(0+256),w
  5496  16C6  00E4               	movwf	(_raw_pressure+1)^(0+256)
  5497  16C7  0821               	movf	(??_readPressureSensor+1)^(0+256),w
  5498  16C8  00E3               	movwf	_raw_pressure^(0+256)
  5499                           
  5500                           ;main.c: 113:     raw_pressure = (raw_pressure << 8) + I2C1_Read1ByteRegister(0x5D, 0x29
      +                          );
  5501  16C9  3029               	movlw	41
  5502  16CA  00A0               	movwf	??_readPressureSensor^(0+256)
  5503  16CB  0820               	movf	??_readPressureSensor^(0+256),w
  5504  16CC  0020               	movlb	0	; select bank0
  5505  16CD  00A8               	movwf	I2C1_Read1ByteRegister@reg
  5506  16CE  305D               	movlw	93
  5507  16CF  3191  2197  3196   	fcall	_I2C1_Read1ByteRegister
  5508  16D2  0022               	movlb	2	; select bank2
  5509  16D3  00A1               	movwf	(??_readPressureSensor+1)^(0+256)
  5510  16D4  01A2               	clrf	((??_readPressureSensor+1)^(0+256)+1)
  5511  16D5  01A3               	clrf	((??_readPressureSensor+1)^(0+256)+2)
  5512  16D6  01A4               	clrf	((??_readPressureSensor+1)^(0+256)+3)
  5513  16D7  0863               	movf	_raw_pressure^(0+256),w
  5514  16D8  00A5               	movwf	(??_readPressureSensor+5)^(0+256)
  5515  16D9  0864               	movf	(_raw_pressure+1)^(0+256),w
  5516  16DA  00A6               	movwf	((??_readPressureSensor+5)^(0+256)+1)
  5517  16DB  0865               	movf	(_raw_pressure+2)^(0+256),w
  5518  16DC  00A7               	movwf	((??_readPressureSensor+5)^(0+256)+2)
  5519  16DD  0866               	movf	(_raw_pressure+3)^(0+256),w
  5520  16DE  00A8               	movwf	((??_readPressureSensor+5)^(0+256)+3)
  5521  16DF  3008               	movlw	8
  5522  16E0                     u7415:	
  5523  16E0  35A5               	lslf	(??_readPressureSensor+5)^(0+256),f
  5524  16E1  0DA6               	rlf	((??_readPressureSensor+5)^(0+256)+1),f
  5525  16E2  0DA7               	rlf	((??_readPressureSensor+5)^(0+256)+2),f
  5526  16E3  0DA8               	rlf	((??_readPressureSensor+5)^(0+256)+3),f
  5527  16E4  0B89               	decfsz	9,f
  5528  16E5  2EE0               	goto	u7415
  5529  16E6  0825               	movf	(??_readPressureSensor+5)^(0+256),w
  5530  16E7  07A1               	addwf	(??_readPressureSensor+1)^(0+256),f
  5531  16E8  0826               	movf	(??_readPressureSensor+6)^(0+256),w
  5532  16E9  3DA2               	addwfc	((??_readPressureSensor+1)^(0+256)+1),f
  5533  16EA  0827               	movf	(??_readPressureSensor+7)^(0+256),w
  5534  16EB  3DA3               	addwfc	((??_readPressureSensor+1)^(0+256)+2),f
  5535  16EC  0828               	movf	(??_readPressureSensor+8)^(0+256),w
  5536  16ED  3DA4               	addwfc	((??_readPressureSensor+1)^(0+256)+3),f
  5537  16EE  0824               	movf	(??_readPressureSensor+4)^(0+256),w
  5538  16EF  00E6               	movwf	(_raw_pressure+3)^(0+256)
  5539  16F0  0823               	movf	(??_readPressureSensor+3)^(0+256),w
  5540  16F1  00E5               	movwf	(_raw_pressure+2)^(0+256)
  5541  16F2  0822               	movf	(??_readPressureSensor+2)^(0+256),w
  5542  16F3  00E4               	movwf	(_raw_pressure+1)^(0+256)
  5543  16F4  0821               	movf	(??_readPressureSensor+1)^(0+256),w
  5544  16F5  00E3               	movwf	_raw_pressure^(0+256)
  5545                           
  5546                           ;main.c: 114:     raw_pressure = (raw_pressure << 8) + I2C1_Read1ByteRegister(0x5D, 0x28
      +                          );
  5547  16F6  3028               	movlw	40
  5548  16F7  00A0               	movwf	??_readPressureSensor^(0+256)
  5549  16F8  0820               	movf	??_readPressureSensor^(0+256),w
  5550  16F9  0020               	movlb	0	; select bank0
  5551  16FA  00A8               	movwf	I2C1_Read1ByteRegister@reg
  5552  16FB  305D               	movlw	93
  5553  16FC  3191  2197  3196   	fcall	_I2C1_Read1ByteRegister
  5554  16FF  0022               	movlb	2	; select bank2
  5555  1700  00A1               	movwf	(??_readPressureSensor+1)^(0+256)
  5556  1701  01A2               	clrf	((??_readPressureSensor+1)^(0+256)+1)
  5557  1702  01A3               	clrf	((??_readPressureSensor+1)^(0+256)+2)
  5558  1703  01A4               	clrf	((??_readPressureSensor+1)^(0+256)+3)
  5559  1704  0863               	movf	_raw_pressure^(0+256),w
  5560  1705  00A5               	movwf	(??_readPressureSensor+5)^(0+256)
  5561  1706  0864               	movf	(_raw_pressure+1)^(0+256),w
  5562  1707  00A6               	movwf	((??_readPressureSensor+5)^(0+256)+1)
  5563  1708  0865               	movf	(_raw_pressure+2)^(0+256),w
  5564  1709  00A7               	movwf	((??_readPressureSensor+5)^(0+256)+2)
  5565  170A  0866               	movf	(_raw_pressure+3)^(0+256),w
  5566  170B  00A8               	movwf	((??_readPressureSensor+5)^(0+256)+3)
  5567  170C  3008               	movlw	8
  5568  170D                     u7425:	
  5569  170D  35A5               	lslf	(??_readPressureSensor+5)^(0+256),f
  5570  170E  0DA6               	rlf	((??_readPressureSensor+5)^(0+256)+1),f
  5571  170F  0DA7               	rlf	((??_readPressureSensor+5)^(0+256)+2),f
  5572  1710  0DA8               	rlf	((??_readPressureSensor+5)^(0+256)+3),f
  5573  1711  0B89               	decfsz	9,f
  5574  1712  2F0D               	goto	u7425
  5575  1713  0825               	movf	(??_readPressureSensor+5)^(0+256),w
  5576  1714  07A1               	addwf	(??_readPressureSensor+1)^(0+256),f
  5577  1715  0826               	movf	(??_readPressureSensor+6)^(0+256),w
  5578  1716  3DA2               	addwfc	((??_readPressureSensor+1)^(0+256)+1),f
  5579  1717  0827               	movf	(??_readPressureSensor+7)^(0+256),w
  5580  1718  3DA3               	addwfc	((??_readPressureSensor+1)^(0+256)+2),f
  5581  1719  0828               	movf	(??_readPressureSensor+8)^(0+256),w
  5582  171A  3DA4               	addwfc	((??_readPressureSensor+1)^(0+256)+3),f
  5583  171B  0824               	movf	(??_readPressureSensor+4)^(0+256),w
  5584  171C  00E6               	movwf	(_raw_pressure+3)^(0+256)
  5585  171D  0823               	movf	(??_readPressureSensor+3)^(0+256),w
  5586  171E  00E5               	movwf	(_raw_pressure+2)^(0+256)
  5587  171F  0822               	movf	(??_readPressureSensor+2)^(0+256),w
  5588  1720  00E4               	movwf	(_raw_pressure+1)^(0+256)
  5589  1721  0821               	movf	(??_readPressureSensor+1)^(0+256),w
  5590  1722  00E3               	movwf	_raw_pressure^(0+256)
  5591                           
  5592                           ;main.c: 116:     if (raw_pressure & 0x800000) {
  5593  1723  1FE5               	btfss	(_raw_pressure+2)^(0+256),7
  5594  1724  2F39               	goto	l6804
  5595                           
  5596                           ;main.c: 117:         raw_pressure = (0xff000000 | raw_pressure);
  5597  1725  3000               	movlw	0
  5598  1726  0463               	iorwf	_raw_pressure^(0+256),w
  5599  1727  00A0               	movwf	??_readPressureSensor^(0+256)
  5600  1728  3000               	movlw	0
  5601  1729  0464               	iorwf	(_raw_pressure+1)^(0+256),w
  5602  172A  00A1               	movwf	(??_readPressureSensor^(0+256)+1)
  5603  172B  3000               	movlw	0
  5604  172C  0465               	iorwf	(_raw_pressure+2)^(0+256),w
  5605  172D  00A2               	movwf	(??_readPressureSensor^(0+256)+2)
  5606  172E  30FF               	movlw	255
  5607  172F  0466               	iorwf	(_raw_pressure+3)^(0+256),w
  5608  1730  00A3               	movwf	(??_readPressureSensor^(0+256)+3)
  5609  1731  0823               	movf	(??_readPressureSensor+3)^(0+256),w
  5610  1732  00E6               	movwf	(_raw_pressure+3)^(0+256)
  5611  1733  0822               	movf	(??_readPressureSensor+2)^(0+256),w
  5612  1734  00E5               	movwf	(_raw_pressure+2)^(0+256)
  5613  1735  0821               	movf	(??_readPressureSensor+1)^(0+256),w
  5614  1736  00E4               	movwf	(_raw_pressure+1)^(0+256)
  5615  1737  0820               	movf	??_readPressureSensor^(0+256),w
  5616  1738  00E3               	movwf	_raw_pressure^(0+256)
  5617  1739                     l6804:	
  5618                           
  5619                           ;main.c: 119:     pressure = (float) (raw_pressure) / 4096.0;
  5620  1739  3045               	movlw	69
  5621  173A  0020               	movlb	0	; select bank0
  5622  173B  00A9               	movwf	___fldiv@a+3
  5623  173C  3080               	movlw	128
  5624  173D  00A8               	movwf	___fldiv@a+2
  5625  173E  3000               	movlw	0
  5626  173F  00A7               	movwf	___fldiv@a+1
  5627  1740  3000               	movlw	0
  5628  1741  00A6               	movwf	___fldiv@a
  5629  1742  0022               	movlb	2	; select bank2
  5630  1743  0866               	movf	(_raw_pressure+3)^(0+256),w
  5631  1744  00F4               	movwf	___xxtofl@val+3
  5632  1745  0865               	movf	(_raw_pressure+2)^(0+256),w
  5633  1746  00F3               	movwf	___xxtofl@val+2
  5634  1747  0864               	movf	(_raw_pressure+1)^(0+256),w
  5635  1748  00F2               	movwf	___xxtofl@val+1
  5636  1749  0863               	movf	_raw_pressure^(0+256),w
  5637  174A  00F1               	movwf	___xxtofl@val
  5638  174B  3000               	movlw	0
  5639  174C  3188  2049  3196   	fcall	___xxtofl
  5640  174F  0874               	movf	?___xxtofl+3,w
  5641  1750  0020               	movlb	0	; select bank0
  5642  1751  00AD               	movwf	___fldiv@b+3
  5643  1752  0873               	movf	?___xxtofl+2,w
  5644  1753  00AC               	movwf	___fldiv@b+2
  5645  1754  0872               	movf	?___xxtofl+1,w
  5646  1755  00AB               	movwf	___fldiv@b+1
  5647  1756  0871               	movf	?___xxtofl,w
  5648  1757  00AA               	movwf	___fldiv@b
  5649  1758  3188  20DF  3196   	fcall	___fldiv
  5650  175B  0020               	movlb	0	; select bank0
  5651  175C  0829               	movf	?___fldiv+3,w
  5652  175D  0023               	movlb	3	; select bank3
  5653  175E  00D4               	movwf	(_pressure+3)^(0+384)
  5654  175F  0020               	movlb	0	; select bank0
  5655  1760  0828               	movf	?___fldiv+2,w
  5656  1761  0023               	movlb	3	; select bank3
  5657  1762  00D3               	movwf	(_pressure+2)^(0+384)
  5658  1763  0020               	movlb	0	; select bank0
  5659  1764  0827               	movf	?___fldiv+1,w
  5660  1765  0023               	movlb	3	; select bank3
  5661  1766  00D2               	movwf	(_pressure+1)^(0+384)
  5662  1767  0020               	movlb	0	; select bank0
  5663  1768  0826               	movf	?___fldiv,w
  5664  1769  0023               	movlb	3	; select bank3
  5665  176A  00D1               	movwf	_pressure^(0+384)
  5666                           
  5667                           ;main.c: 120:     _delay((unsigned long)((500)*(16000000/4000.0)));
  5668  176B  300B               	movlw	11
  5669  176C  0022               	movlb	2	; select bank2
  5670  176D  00A1               	movwf	(??_readPressureSensor^(0+256)+1)
  5671  176E  3026               	movlw	38
  5672  176F  00A0               	movwf	??_readPressureSensor^(0+256)
  5673  1770  305D               	movlw	93
  5674  1771                     u7517:	
  5675  1771  0B89               	decfsz	9,f
  5676  1772  2F71               	goto	u7517
  5677  1773  0BA0               	decfsz	??_readPressureSensor^(0+256),f
  5678  1774  2F71               	goto	u7517
  5679  1775  0BA1               	decfsz	(??_readPressureSensor^(0+256)+1),f
  5680  1776  2F71               	goto	u7517
  5681  1777  3200               	nop2
  5682                           
  5683                           ;main.c: 123:     raw_temperature = 0;
  5684  1778  0022               	movlb	2	; select bank2
  5685  1779  01DE               	clrf	_raw_temperature^(0+256)
  5686  177A  01DF               	clrf	(_raw_temperature+1)^(0+256)
  5687                           
  5688                           ;main.c: 124:     raw_temperature = I2C1_Read1ByteRegister(0x5D, 0x2C);
  5689  177B  302C               	movlw	44
  5690  177C  00A0               	movwf	??_readPressureSensor^(0+256)
  5691  177D  0820               	movf	??_readPressureSensor^(0+256),w
  5692  177E  0020               	movlb	0	; select bank0
  5693  177F  00A8               	movwf	I2C1_Read1ByteRegister@reg
  5694  1780  305D               	movlw	93
  5695  1781  3191  2197  3196   	fcall	_I2C1_Read1ByteRegister
  5696  1784  0022               	movlb	2	; select bank2
  5697  1785  00A1               	movwf	(??_readPressureSensor+1)^(0+256)
  5698  1786  01A2               	clrf	((??_readPressureSensor+1)^(0+256)+1)
  5699  1787  0821               	movf	(??_readPressureSensor+1)^(0+256),w
  5700  1788  00DE               	movwf	_raw_temperature^(0+256)
  5701  1789  0822               	movf	(??_readPressureSensor+2)^(0+256),w
  5702  178A  00DF               	movwf	(_raw_temperature+1)^(0+256)
  5703                           
  5704                           ;main.c: 125:     raw_temperature = (raw_temperature << 8) + I2C1_Read1ByteRegister(0x5D
      +                          , 0x2B);
  5705  178B  302B               	movlw	43
  5706  178C  00A0               	movwf	??_readPressureSensor^(0+256)
  5707  178D  0820               	movf	??_readPressureSensor^(0+256),w
  5708  178E  0020               	movlb	0	; select bank0
  5709  178F  00A8               	movwf	I2C1_Read1ByteRegister@reg
  5710  1790  305D               	movlw	93
  5711  1791  3191  2197  3196   	fcall	_I2C1_Read1ByteRegister
  5712  1794  0022               	movlb	2	; select bank2
  5713  1795  00A1               	movwf	(??_readPressureSensor+1)^(0+256)
  5714  1796  01A2               	clrf	((??_readPressureSensor+1)^(0+256)+1)
  5715  1797  085E               	movf	_raw_temperature^(0+256),w
  5716  1798  00A4               	movwf	((??_readPressureSensor+3)^(0+256)+1)
  5717  1799  01A3               	clrf	(??_readPressureSensor+3)^(0+256)
  5718  179A  0821               	movf	(??_readPressureSensor+1)^(0+256),w
  5719  179B  0723               	addwf	(??_readPressureSensor+3)^(0+256),w
  5720  179C  00DE               	movwf	_raw_temperature^(0+256)
  5721  179D  0822               	movf	(??_readPressureSensor+2)^(0+256),w
  5722  179E  3D24               	addwfc	(??_readPressureSensor+4)^(0+256),w
  5723  179F  00DF               	movwf	(_raw_temperature+1)^(0+256)
  5724                           
  5725                           ;main.c: 126:     temperature = (float) (raw_temperature) / 100.00;
  5726  17A0  3042               	movlw	66
  5727  17A1  0020               	movlb	0	; select bank0
  5728  17A2  00A9               	movwf	___fldiv@a+3
  5729  17A3  30C8               	movlw	200
  5730  17A4  00A8               	movwf	___fldiv@a+2
  5731  17A5  3000               	movlw	0
  5732  17A6  00A7               	movwf	___fldiv@a+1
  5733  17A7  3000               	movlw	0
  5734  17A8  00A6               	movwf	___fldiv@a
  5735  17A9  0022               	movlb	2	; select bank2
  5736  17AA  085E               	movf	_raw_temperature^(0+256),w
  5737  17AB  00F1               	movwf	___xxtofl@val
  5738  17AC  085F               	movf	(_raw_temperature+1)^(0+256),w
  5739  17AD  00F2               	movwf	___xxtofl@val+1
  5740  17AE  01F3               	clrf	___xxtofl@val+2
  5741  17AF  01F4               	clrf	___xxtofl@val+3
  5742  17B0  3000               	movlw	0
  5743  17B1  3188  2049  3196   	fcall	___xxtofl
  5744  17B4  0874               	movf	?___xxtofl+3,w
  5745  17B5  0020               	movlb	0	; select bank0
  5746  17B6  00AD               	movwf	___fldiv@b+3
  5747  17B7  0873               	movf	?___xxtofl+2,w
  5748  17B8  00AC               	movwf	___fldiv@b+2
  5749  17B9  0872               	movf	?___xxtofl+1,w
  5750  17BA  00AB               	movwf	___fldiv@b+1
  5751  17BB  0871               	movf	?___xxtofl,w
  5752  17BC  00AA               	movwf	___fldiv@b
  5753  17BD  3188  20DF  3196   	fcall	___fldiv
  5754  17C0  0020               	movlb	0	; select bank0
  5755  17C1  0829               	movf	?___fldiv+3,w
  5756  17C2  0023               	movlb	3	; select bank3
  5757  17C3  00D0               	movwf	(_temperature+3)^(0+384)
  5758  17C4  0020               	movlb	0	; select bank0
  5759  17C5  0828               	movf	?___fldiv+2,w
  5760  17C6  0023               	movlb	3	; select bank3
  5761  17C7  00CF               	movwf	(_temperature+2)^(0+384)
  5762  17C8  0020               	movlb	0	; select bank0
  5763  17C9  0827               	movf	?___fldiv+1,w
  5764  17CA  0023               	movlb	3	; select bank3
  5765  17CB  00CE               	movwf	(_temperature+1)^(0+384)
  5766  17CC  0020               	movlb	0	; select bank0
  5767  17CD  0826               	movf	?___fldiv,w
  5768  17CE  0023               	movlb	3	; select bank3
  5769  17CF  00CD               	movwf	_temperature^(0+384)
  5770                           
  5771                           ;main.c: 128:     printf("Pressure : %f\n", pressure);
  5772  17D0  3012               	movlw	low (STR_1| (0+32768))
  5773  17D1  0021               	movlb	1	; select bank1
  5774  17D2  00E1               	movwf	printf@fmt^(0+128)
  5775  17D3  30A0               	movlw	high (STR_1| (0+32768))
  5776  17D4  00E2               	movwf	(printf@fmt^(0+128)+1)
  5777  17D5  0023               	movlb	3	; select bank3
  5778  17D6  0854               	movf	(_pressure+3)^(0+384),w
  5779  17D7  0021               	movlb	1	; select bank1
  5780  17D8  00E6               	movwf	((?_printf+3)^(0+128)+2)
  5781  17D9  0023               	movlb	3	; select bank3
  5782  17DA  0853               	movf	(_pressure+2)^(0+384),w
  5783  17DB  0021               	movlb	1	; select bank1
  5784  17DC  00E5               	movwf	((?_printf+2)^(0+128)+2)
  5785  17DD  0023               	movlb	3	; select bank3
  5786  17DE  0852               	movf	(_pressure+1)^(0+384),w
  5787  17DF  0021               	movlb	1	; select bank1
  5788  17E0  00E4               	movwf	((?_printf+1)^(0+128)+2)
  5789  17E1  0023               	movlb	3	; select bank3
  5790  17E2  0851               	movf	_pressure^(0+384),w
  5791  17E3  0021               	movlb	1	; select bank1
  5792  17E4  00E3               	movwf	(?_printf^(0+128)+2)
  5793  17E5  319F  2725  3196   	fcall	_printf
  5794                           
  5795                           ;main.c: 129:     printf("Temperature : %f\n", temperature);
  5796  17E8  3000               	movlw	low (STR_2| (0+32768))
  5797  17E9  0021               	movlb	1	; select bank1
  5798  17EA  00E1               	movwf	printf@fmt^(0+128)
  5799  17EB  30A0               	movlw	high (STR_2| (0+32768))
  5800  17EC  00E2               	movwf	(printf@fmt^(0+128)+1)
  5801  17ED  0023               	movlb	3	; select bank3
  5802  17EE  0850               	movf	(_temperature+3)^(0+384),w
  5803  17EF  0021               	movlb	1	; select bank1
  5804  17F0  00E6               	movwf	((?_printf+3)^(0+128)+2)
  5805  17F1  0023               	movlb	3	; select bank3
  5806  17F2  084F               	movf	(_temperature+2)^(0+384),w
  5807  17F3  0021               	movlb	1	; select bank1
  5808  17F4  00E5               	movwf	((?_printf+2)^(0+128)+2)
  5809  17F5  0023               	movlb	3	; select bank3
  5810  17F6  084E               	movf	(_temperature+1)^(0+384),w
  5811  17F7  0021               	movlb	1	; select bank1
  5812  17F8  00E4               	movwf	((?_printf+1)^(0+128)+2)
  5813  17F9  0023               	movlb	3	; select bank3
  5814  17FA  084D               	movf	_temperature^(0+384),w
  5815  17FB  0021               	movlb	1	; select bank1
  5816  17FC  00E3               	movwf	(?_printf^(0+128)+2)
  5817  17FD  319F  2725         	fcall	_printf
  5818  17FF  0008               	return
  5819  1800                     __end_of_readPressureSensor:	
  5820                           
  5821                           	psect	text6
  5822  1F25                     __ptext6:	
  5823 ;; *************** function _printf *****************
  5824 ;; Defined at:
  5825 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  5826 ;; Parameters:    Size  Location     Type
  5827 ;;  fmt             2   65[BANK1 ] PTR const unsigned char 
  5828 ;;		 -> STR_2(18), STR_1(15), 
  5829 ;; Auto vars:     Size  Location     Type
  5830 ;;  ret             2    0        int 
  5831 ;;  ap              1   74[BANK1 ] PTR void [1]
  5832 ;;		 -> ?_printf(2), 
  5833 ;; Return value:  Size  Location     Type
  5834 ;;                  2   65[BANK1 ] int 
  5835 ;; Registers used:
  5836 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5837 ;; Tracked objects:
  5838 ;;		On entry : 0/0
  5839 ;;		On exit  : 0/0
  5840 ;;		Unchanged: 0/0
  5841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5842 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5843 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5844 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5845 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5846 ;;Total ram usage:       10 bytes
  5847 ;; Hardware stack levels used:    1
  5848 ;; Hardware stack levels required when called:   12
  5849 ;; This function calls:
  5850 ;;		_vfprintf
  5851 ;; This function is called by:
  5852 ;;		_readPressureSensor
  5853 ;; This function uses a non-reentrant model
  5854 ;;
  5855                           
  5856                           
  5857                           ;psect for function _printf
  5858  1F25                     _printf:	
  5859                           
  5860                           ;incstack = 0
  5861                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5862  1F25  30E3               	movlw	(low ((?_printf| 0+2)))& (0+255)
  5863  1F26  0021               	movlb	1	; select bank1
  5864  1F27  00E7               	movwf	??_printf^(0+128)
  5865  1F28  0867               	movf	??_printf^(0+128),w
  5866  1F29  00EA               	movwf	printf@ap^(0+128)
  5867  1F2A  0862               	movf	(printf@fmt+1)^(0+128),w
  5868  1F2B  00DA               	movwf	(vfprintf@fmt+1)^(0+128)
  5869  1F2C  0861               	movf	printf@fmt^(0+128),w
  5870  1F2D  00D9               	movwf	vfprintf@fmt^(0+128)
  5871  1F2E  30EA               	movlw	(low (printf@ap| 0))& (0+255)
  5872  1F2F  00E7               	movwf	??_printf^(0+128)
  5873  1F30  0867               	movf	??_printf^(0+128),w
  5874  1F31  00DB               	movwf	vfprintf@ap^(0+128)
  5875  1F32  3000               	movlw	0
  5876  1F33  3191  21C9         	fcall	_vfprintf
  5877  1F35  0008               	return
  5878  1F36                     __end_of_printf:	
  5879                           
  5880                           	psect	text7
  5881  11C9                     __ptext7:	
  5882 ;; *************** function _vfprintf *****************
  5883 ;; Defined at:
  5884 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5885 ;; Parameters:    Size  Location     Type
  5886 ;;  fp              1    wreg     PTR struct _IO_FILE
  5887 ;;		 -> NULL(0), 
  5888 ;;  fmt             2   57[BANK1 ] PTR const unsigned char 
  5889 ;;		 -> STR_2(18), STR_1(15), 
  5890 ;;  ap              1   59[BANK1 ] PTR PTR void 
  5891 ;;		 -> printf@ap(1), 
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;  fp              1   62[BANK1 ] PTR struct _IO_FILE
  5894 ;;		 -> NULL(0), 
  5895 ;;  cfmt            2   63[BANK1 ] PTR unsigned char 
  5896 ;;		 -> STR_2(18), STR_1(15), 
  5897 ;; Return value:  Size  Location     Type
  5898 ;;                  2   57[BANK1 ] int 
  5899 ;; Registers used:
  5900 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5901 ;; Tracked objects:
  5902 ;;		On entry : 0/0
  5903 ;;		On exit  : 0/0
  5904 ;;		Unchanged: 0/0
  5905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5906 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5907 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5908 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5909 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5910 ;;Total ram usage:        8 bytes
  5911 ;; Hardware stack levels used:    1
  5912 ;; Hardware stack levels required when called:   11
  5913 ;; This function calls:
  5914 ;;		_vfpfcnvrt
  5915 ;; This function is called by:
  5916 ;;		_printf
  5917 ;; This function uses a non-reentrant model
  5918 ;;
  5919                           
  5920                           
  5921                           ;psect for function _vfprintf
  5922  11C9                     _vfprintf:	
  5923                           
  5924                           ;incstack = 0
  5925                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5926                           ;vfprintf@fp stored from wreg
  5927  11C9  0021               	movlb	1	; select bank1
  5928  11CA  00DE               	movwf	vfprintf@fp^(0+128)
  5929                           
  5930                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  5931  11CB  085A               	movf	(vfprintf@fmt+1)^(0+128),w
  5932  11CC  00E0               	movwf	(vfprintf@cfmt+1)^(0+128)
  5933  11CD  0859               	movf	vfprintf@fmt^(0+128),w
  5934  11CE  00DF               	movwf	vfprintf@cfmt^(0+128)
  5935                           
  5936                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  5937  11CF  0022               	movlb	2	; select bank2
  5938  11D0  01D6               	clrf	_nout^(0+256)
  5939  11D1  01D7               	clrf	(_nout+1)^(0+256)
  5940  11D2                     l6762:	
  5941                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5942                           
  5943                           
  5944                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5945  11D2  0021               	movlb	1	; select bank1
  5946  11D3  085F               	movf	vfprintf@cfmt^(0+128),w
  5947  11D4  0084               	movwf	4
  5948  11D5  0860               	movf	(vfprintf@cfmt+1)^(0+128),w
  5949  11D6  0085               	movwf	5
  5950  11D7  0012               	moviw fsr0++
  5951  11D8  1903               	btfsc	3,2
  5952  11D9  29F3               	goto	l6764
  5953                           
  5954                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  5955  11DA  30DF               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  5956  11DB  00DC               	movwf	??_vfprintf^(0+128)
  5957  11DC  085C               	movf	??_vfprintf^(0+128),w
  5958  11DD  0020               	movlb	0	; select bank0
  5959  11DE  00DD               	movwf	vfpfcnvrt@fmt
  5960  11DF  0021               	movlb	1	; select bank1
  5961  11E0  085B               	movf	vfprintf@ap^(0+128),w
  5962  11E1  00DD               	movwf	(??_vfprintf+1)^(0+128)
  5963  11E2  085D               	movf	(??_vfprintf+1)^(0+128),w
  5964  11E3  0020               	movlb	0	; select bank0
  5965  11E4  00DE               	movwf	vfpfcnvrt@ap
  5966  11E5  0021               	movlb	1	; select bank1
  5967  11E6  085E               	movf	vfprintf@fp^(0+128),w
  5968  11E7  318A  2259  3191   	fcall	_vfpfcnvrt
  5969  11EA  0020               	movlb	0	; select bank0
  5970  11EB  085D               	movf	?_vfpfcnvrt,w
  5971  11EC  0022               	movlb	2	; select bank2
  5972  11ED  07D6               	addwf	_nout^(0+256),f
  5973  11EE  0020               	movlb	0	; select bank0
  5974  11EF  085E               	movf	?_vfpfcnvrt+1,w
  5975  11F0  0022               	movlb	2	; select bank2
  5976  11F1  3DD7               	addwfc	(_nout+1)^(0+256),f
  5977  11F2  29D2               	goto	l6762
  5978  11F3                     l6764:	
  5979                           
  5980                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  5981  11F3  0022               	movlb	2	; select bank2
  5982  11F4  0857               	movf	(_nout+1)^(0+256),w
  5983  11F5  0021               	movlb	1	; select bank1
  5984  11F6  00DA               	movwf	(?_vfprintf+1)^(0+128)
  5985  11F7  0022               	movlb	2	; select bank2
  5986  11F8  0856               	movf	_nout^(0+256),w
  5987  11F9  0021               	movlb	1	; select bank1
  5988  11FA  00D9               	movwf	?_vfprintf^(0+128)
  5989  11FB  0008               	return
  5990  11FC                     __end_of_vfprintf:	
  5991                           
  5992                           	psect	text8
  5993  0A59                     __ptext8:	
  5994 ;; *************** function _vfpfcnvrt *****************
  5995 ;; Defined at:
  5996 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5997 ;; Parameters:    Size  Location     Type
  5998 ;;  fp              1    wreg     PTR struct _IO_FILE
  5999 ;;		 -> NULL(0), 
  6000 ;;  fmt             1   61[BANK0 ] PTR PTR unsigned char 
  6001 ;;		 -> vfprintf@cfmt(2), 
  6002 ;;  ap              1   62[BANK0 ] PTR PTR void 
  6003 ;;		 -> printf@ap(1), 
  6004 ;; Auto vars:     Size  Location     Type
  6005 ;;  fp              1   79[BANK0 ] PTR struct _IO_FILE
  6006 ;;		 -> NULL(0), 
  6007 ;;  llu             8    0        unsigned long long 
  6008 ;;  ll              8    0        long long 
  6009 ;;  f               4   74[BANK0 ] long long 
  6010 ;;  ct              3   71[BANK0 ] unsigned char [3]
  6011 ;;  vp              2    0        PTR void 
  6012 ;;  i               2    0        int 
  6013 ;;  done            2    0        int 
  6014 ;;  cp              2    0        PTR unsigned char 
  6015 ;;  c               1   78[BANK0 ] unsigned char 
  6016 ;; Return value:  Size  Location     Type
  6017 ;;                  2   61[BANK0 ] int 
  6018 ;; Registers used:
  6019 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6020 ;; Tracked objects:
  6021 ;;		On entry : 0/0
  6022 ;;		On exit  : 0/0
  6023 ;;		Unchanged: 0/0
  6024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6025 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6026 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6027 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6028 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6029 ;;Total ram usage:       19 bytes
  6030 ;; Hardware stack levels used:    1
  6031 ;; Hardware stack levels required when called:   10
  6032 ;; This function calls:
  6033 ;;		_efgtoa
  6034 ;;		_fputc
  6035 ;;		_isupper
  6036 ;;		_strncmp
  6037 ;;		_tolower
  6038 ;; This function is called by:
  6039 ;;		_vfprintf
  6040 ;; This function uses a non-reentrant model
  6041 ;;
  6042                           
  6043                           
  6044                           ;psect for function _vfpfcnvrt
  6045  0A59                     _vfpfcnvrt:	
  6046                           
  6047                           ;incstack = 0
  6048                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6049                           ;vfpfcnvrt@fp stored from wreg
  6050  0A59  0020               	movlb	0	; select bank0
  6051  0A5A  00EF               	movwf	vfpfcnvrt@fp
  6052                           
  6053                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  6054  0A5B  085D               	movf	vfpfcnvrt@fmt,w
  6055  0A5C  0086               	movwf	6
  6056  0A5D  0187               	clrf	7
  6057  0A5E  3F40               	moviw [0]fsr1
  6058  0A5F  00DF               	movwf	??_vfpfcnvrt
  6059  0A60  3F41               	moviw [1]fsr1
  6060  0A61  00E0               	movwf	??_vfpfcnvrt+1
  6061  0A62  085F               	movf	??_vfpfcnvrt,w
  6062  0A63  0084               	movwf	4
  6063  0A64  0860               	movf	??_vfpfcnvrt+1,w
  6064  0A65  0085               	movwf	5
  6065  0A66  0012               	moviw fsr0++
  6066  0A67  3A25               	xorlw	37
  6067  0A68  1D03               	btfss	3,2
  6068  0A69  2BCF               	goto	l6748
  6069                           
  6070                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  6071  0A6A  085D               	movf	vfpfcnvrt@fmt,w
  6072  0A6B  0086               	movwf	6
  6073  0A6C  0187               	clrf	7
  6074  0A6D  3001               	movlw	1
  6075  0A6E  0781               	addwf	1,f
  6076  0A6F  3141               	addfsr 1,1
  6077  0A70  1803               	skipnc
  6078  0A71  0A81               	incf	1,f
  6079                           
  6080                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  6081  0A72  0022               	movlb	2	; select bank2
  6082  0A73  01D8               	clrf	_width^(0+256)
  6083  0A74  01D9               	clrf	(_width+1)^(0+256)
  6084  0A75  01DC               	clrf	_flags^(0+256)
  6085  0A76  01DD               	clrf	(_flags+1)^(0+256)
  6086                           
  6087                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  6088  0A77  30FF               	movlw	255
  6089  0A78  00DA               	movwf	_prec^(0+256)
  6090  0A79  30FF               	movlw	255
  6091  0A7A  00DB               	movwf	(_prec^(0+256)+1)
  6092                           
  6093                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  6094  0A7B  0020               	movlb	0	; select bank0
  6095  0A7C  085D               	movf	vfpfcnvrt@fmt,w
  6096  0A7D  0086               	movwf	6
  6097  0A7E  0187               	clrf	7
  6098  0A7F  3F40               	moviw [0]fsr1
  6099  0A80  00DF               	movwf	??_vfpfcnvrt
  6100  0A81  3F41               	moviw [1]fsr1
  6101  0A82  00E0               	movwf	??_vfpfcnvrt+1
  6102  0A83  085F               	movf	??_vfpfcnvrt,w
  6103  0A84  0084               	movwf	4
  6104  0A85  0860               	movf	??_vfpfcnvrt+1,w
  6105  0A86  0085               	movwf	5
  6106  0A87  0800               	movf	0,w	;code access
  6107  0A88  00E1               	movwf	??_vfpfcnvrt+2
  6108  0A89  01E2               	clrf	??_vfpfcnvrt+3
  6109  0A8A  0861               	movf	??_vfpfcnvrt+2,w
  6110  0A8B  00F7               	movwf	tolower@c
  6111  0A8C  0862               	movf	??_vfpfcnvrt+3,w
  6112  0A8D  00F8               	movwf	tolower@c+1
  6113  0A8E  3190  207B  318A   	fcall	_tolower
  6114  0A91  0877               	movf	?_tolower,w
  6115  0A92  0020               	movlb	0	; select bank0
  6116  0A93  00E3               	movwf	??_vfpfcnvrt+4
  6117  0A94  0863               	movf	??_vfpfcnvrt+4,w
  6118  0A95  00E7               	movwf	vfpfcnvrt@ct
  6119                           
  6120                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  6121  0A96  0867               	movf	vfpfcnvrt@ct,w
  6122  0A97  1903               	btfsc	3,2
  6123  0A98  2AD6               	goto	l6702
  6124                           
  6125                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  6126  0A99  085D               	movf	vfpfcnvrt@fmt,w
  6127  0A9A  0086               	movwf	6
  6128  0A9B  0187               	clrf	7
  6129  0A9C  3F40               	moviw [0]fsr1
  6130  0A9D  00DF               	movwf	??_vfpfcnvrt
  6131  0A9E  3F41               	moviw [1]fsr1
  6132  0A9F  00E0               	movwf	??_vfpfcnvrt+1
  6133  0AA0  3001               	movlw	1
  6134  0AA1  075F               	addwf	??_vfpfcnvrt,w
  6135  0AA2  0084               	movwf	4
  6136  0AA3  0860               	movf	??_vfpfcnvrt+1,w
  6137  0AA4  1803               	skipnc
  6138  0AA5  0A60               	incf	??_vfpfcnvrt+1,w
  6139  0AA6  0085               	movwf	5
  6140  0AA7  0800               	movf	0,w	;code access
  6141  0AA8  00E1               	movwf	??_vfpfcnvrt+2
  6142  0AA9  01E2               	clrf	??_vfpfcnvrt+3
  6143  0AAA  0861               	movf	??_vfpfcnvrt+2,w
  6144  0AAB  00F7               	movwf	tolower@c
  6145  0AAC  0862               	movf	??_vfpfcnvrt+3,w
  6146  0AAD  00F8               	movwf	tolower@c+1
  6147  0AAE  3190  207B  318A   	fcall	_tolower
  6148  0AB1  0877               	movf	?_tolower,w
  6149  0AB2  0020               	movlb	0	; select bank0
  6150  0AB3  00E3               	movwf	??_vfpfcnvrt+4
  6151  0AB4  0863               	movf	??_vfpfcnvrt+4,w
  6152  0AB5  00E8               	movwf	vfpfcnvrt@ct+1
  6153                           
  6154                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  6155  0AB6  0868               	movf	vfpfcnvrt@ct+1,w
  6156  0AB7  1903               	btfsc	3,2
  6157  0AB8  2AD6               	goto	l6702
  6158                           
  6159                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  6160  0AB9  085D               	movf	vfpfcnvrt@fmt,w
  6161  0ABA  0086               	movwf	6
  6162  0ABB  0187               	clrf	7
  6163  0ABC  3F40               	moviw [0]fsr1
  6164  0ABD  00DF               	movwf	??_vfpfcnvrt
  6165  0ABE  3F41               	moviw [1]fsr1
  6166  0ABF  00E0               	movwf	??_vfpfcnvrt+1
  6167  0AC0  3002               	movlw	2
  6168  0AC1  075F               	addwf	??_vfpfcnvrt,w
  6169  0AC2  0084               	movwf	4
  6170  0AC3  0860               	movf	??_vfpfcnvrt+1,w
  6171  0AC4  1803               	skipnc
  6172  0AC5  0A60               	incf	??_vfpfcnvrt+1,w
  6173  0AC6  0085               	movwf	5
  6174  0AC7  0800               	movf	0,w	;code access
  6175  0AC8  00E1               	movwf	??_vfpfcnvrt+2
  6176  0AC9  01E2               	clrf	??_vfpfcnvrt+3
  6177  0ACA  0861               	movf	??_vfpfcnvrt+2,w
  6178  0ACB  00F7               	movwf	tolower@c
  6179  0ACC  0862               	movf	??_vfpfcnvrt+3,w
  6180  0ACD  00F8               	movwf	tolower@c+1
  6181  0ACE  3190  207B  318A   	fcall	_tolower
  6182  0AD1  0877               	movf	?_tolower,w
  6183  0AD2  0020               	movlb	0	; select bank0
  6184  0AD3  00E3               	movwf	??_vfpfcnvrt+4
  6185  0AD4  0863               	movf	??_vfpfcnvrt+4,w
  6186  0AD5  00E9               	movwf	vfpfcnvrt@ct+2
  6187  0AD6                     l6702:	
  6188                           
  6189                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  6190  0AD6  3066               	movlw	102
  6191  0AD7  0667               	xorwf	vfpfcnvrt@ct,w
  6192  0AD8  1D03               	btfss	3,2
  6193  0AD9  2B16               	goto	l6714
  6194                           
  6195                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  6196  0ADA  085D               	movf	vfpfcnvrt@fmt,w
  6197  0ADB  0086               	movwf	6
  6198  0ADC  0187               	clrf	7
  6199  0ADD  3F40               	moviw [0]fsr1
  6200  0ADE  00DF               	movwf	??_vfpfcnvrt
  6201  0ADF  3F41               	moviw [1]fsr1
  6202  0AE0  00E0               	movwf	??_vfpfcnvrt+1
  6203  0AE1  085F               	movf	??_vfpfcnvrt,w
  6204  0AE2  0084               	movwf	4
  6205  0AE3  0860               	movf	??_vfpfcnvrt+1,w
  6206  0AE4  0085               	movwf	5
  6207  0AE5  0800               	movf	0,w	;code access
  6208  0AE6  00E1               	movwf	??_vfpfcnvrt+2
  6209  0AE7  0861               	movf	??_vfpfcnvrt+2,w
  6210  0AE8  00EE               	movwf	vfpfcnvrt@c
  6211                           
  6212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  6213  0AE9  085D               	movf	vfpfcnvrt@fmt,w
  6214  0AEA  0086               	movwf	6
  6215  0AEB  0187               	clrf	7
  6216  0AEC  3001               	movlw	1
  6217  0AED  0781               	addwf	1,f
  6218  0AEE  3141               	addfsr 1,1
  6219  0AEF  1803               	skipnc
  6220  0AF0  0A81               	incf	1,f
  6221                           
  6222                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6223  0AF1  085E               	movf	vfpfcnvrt@ap,w
  6224  0AF2  0086               	movwf	6
  6225  0AF3  0187               	clrf	7
  6226  0AF4  0801               	movf	1,w
  6227  0AF5  0084               	movwf	4
  6228  0AF6  0185               	clrf	5
  6229  0AF7  3004               	movlw	4
  6230  0AF8  0781               	addwf	1,f
  6231  0AF9  3F00               	moviw [0]fsr0
  6232  0AFA  00EA               	movwf	vfpfcnvrt@f
  6233  0AFB  3F01               	moviw [1]fsr0
  6234  0AFC  00EB               	movwf	vfpfcnvrt@f+1
  6235  0AFD  3F02               	moviw [2]fsr0
  6236  0AFE  00EC               	movwf	vfpfcnvrt@f+2
  6237  0AFF  3F03               	moviw [3]fsr0
  6238  0B00  00ED               	movwf	vfpfcnvrt@f+3
  6239                           
  6240                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  6241  0B01  086D               	movf	vfpfcnvrt@f+3,w
  6242  0B02  00D7               	movwf	efgtoa@f+3
  6243  0B03  086C               	movf	vfpfcnvrt@f+2,w
  6244  0B04  00D6               	movwf	efgtoa@f+2
  6245  0B05  086B               	movf	vfpfcnvrt@f+1,w
  6246  0B06  00D5               	movwf	efgtoa@f+1
  6247  0B07  086A               	movf	vfpfcnvrt@f,w
  6248  0B08  00D4               	movwf	efgtoa@f
  6249  0B09  086E               	movf	vfpfcnvrt@c,w
  6250  0B0A  00DF               	movwf	??_vfpfcnvrt
  6251  0B0B  085F               	movf	??_vfpfcnvrt,w
  6252  0B0C  00D8               	movwf	efgtoa@c
  6253  0B0D  086F               	movf	vfpfcnvrt@fp,w
  6254  0B0E  3180  205D         	fcall	_efgtoa
  6255  0B10  0020               	movlb	0	; select bank0
  6256  0B11  0855               	movf	?_efgtoa+1,w
  6257  0B12  00DE               	movwf	?_vfpfcnvrt+1
  6258  0B13  0854               	movf	?_efgtoa,w
  6259  0B14  00DD               	movwf	?_vfpfcnvrt
  6260  0B15  0008               	return
  6261  0B16                     l6714:	
  6262                           
  6263                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  6264  0B16  3031               	movlw	low (STR_11| (0+32768))
  6265  0B17  00F1               	movwf	strncmp@_r
  6266  0B18  30A0               	movlw	high (STR_11| (0+32768))
  6267  0B19  00F2               	movwf	strncmp@_r+1
  6268  0B1A  3002               	movlw	2
  6269  0B1B  00F3               	movwf	strncmp@n
  6270  0B1C  3000               	movlw	0
  6271  0B1D  00F4               	movwf	strncmp@n+1
  6272  0B1E  3067               	movlw	(low (vfpfcnvrt@ct| 0))& (0+255)
  6273  0B1F  3193  23AB  318A   	fcall	_strncmp
  6274  0B22  0871               	movf	?_strncmp,w
  6275  0B23  0472               	iorwf	?_strncmp+1,w
  6276  0B24  1D03               	btfss	3,2
  6277  0B25  2B9C               	goto	l6732
  6278                           
  6279                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  6280  0B26  0020               	movlb	0	; select bank0
  6281  0B27  085D               	movf	vfpfcnvrt@fmt,w
  6282  0B28  0086               	movwf	6
  6283  0B29  0187               	clrf	7
  6284  0B2A  3F40               	moviw [0]fsr1
  6285  0B2B  00DF               	movwf	??_vfpfcnvrt
  6286  0B2C  3F41               	moviw [1]fsr1
  6287  0B2D  00E0               	movwf	??_vfpfcnvrt+1
  6288  0B2E  3001               	movlw	1
  6289  0B2F  075F               	addwf	??_vfpfcnvrt,w
  6290  0B30  0084               	movwf	4
  6291  0B31  0860               	movf	??_vfpfcnvrt+1,w
  6292  0B32  1803               	skipnc
  6293  0B33  0A60               	incf	??_vfpfcnvrt+1,w
  6294  0B34  0085               	movwf	5
  6295  0B35  0800               	movf	0,w	;code access
  6296  0B36  00E1               	movwf	??_vfpfcnvrt+2
  6297  0B37  0861               	movf	??_vfpfcnvrt+2,w
  6298  0B38  00EE               	movwf	vfpfcnvrt@c
  6299  0B39  085D               	movf	vfpfcnvrt@fmt,w
  6300  0B3A  0086               	movwf	6
  6301  0B3B  0187               	clrf	7
  6302  0B3C  3F40               	moviw [0]fsr1
  6303  0B3D  00DF               	movwf	??_vfpfcnvrt
  6304  0B3E  3F41               	moviw [1]fsr1
  6305  0B3F  00E0               	movwf	??_vfpfcnvrt+1
  6306  0B40  085F               	movf	??_vfpfcnvrt,w
  6307  0B41  0084               	movwf	4
  6308  0B42  0860               	movf	??_vfpfcnvrt+1,w
  6309  0B43  0085               	movwf	5
  6310  0B44  0800               	movf	0,w	;code access
  6311  0B45  3EBF               	addlw	191
  6312  0B46  00E1               	movwf	??_vfpfcnvrt+2
  6313  0B47  30FF               	movlw	255
  6314  0B48  1803               	skipnc
  6315  0B49  3000               	movlw	0
  6316  0B4A  00E2               	movwf	??_vfpfcnvrt+3
  6317  0B4B  3000               	movlw	0
  6318  0B4C  0262               	subwf	??_vfpfcnvrt+3,w
  6319  0B4D  301A               	movlw	26
  6320  0B4E  1903               	skipnz
  6321  0B4F  0261               	subwf	??_vfpfcnvrt+2,w
  6322  0B50  1803               	btfsc	3,0
  6323  0B51  2B54               	goto	u7340
  6324  0B52  3001               	movlw	1
  6325  0B53  2B55               	goto	u7350
  6326  0B54                     u7340:	
  6327  0B54  3000               	movlw	0
  6328  0B55                     u7350:	
  6329  0B55  00E3               	movwf	??_vfpfcnvrt+4
  6330  0B56  01E4               	clrf	??_vfpfcnvrt+5
  6331  0B57  0863               	movf	??_vfpfcnvrt+4,w
  6332  0B58  00E5               	movwf	_vfpfcnvrt$1526
  6333  0B59  0864               	movf	??_vfpfcnvrt+5,w
  6334  0B5A  00E6               	movwf	_vfpfcnvrt$1526+1
  6335  0B5B  0865               	movf	_vfpfcnvrt$1526,w
  6336  0B5C  0466               	iorwf	_vfpfcnvrt$1526+1,w
  6337  0B5D  1903               	btfsc	3,2
  6338  0B5E  2B6F               	goto	l6724
  6339                           
  6340                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  6341  0B5F  085E               	movf	vfpfcnvrt@ap,w
  6342  0B60  0086               	movwf	6
  6343  0B61  0187               	clrf	7
  6344  0B62  0801               	movf	1,w
  6345  0B63  0084               	movwf	4
  6346  0B64  0185               	clrf	5
  6347  0B65  3004               	movlw	4
  6348  0B66  0781               	addwf	1,f
  6349  0B67  3F00               	moviw [0]fsr0
  6350  0B68  00EA               	movwf	vfpfcnvrt@f
  6351  0B69  3F01               	moviw [1]fsr0
  6352  0B6A  00EB               	movwf	vfpfcnvrt@f+1
  6353  0B6B  3F02               	moviw [2]fsr0
  6354  0B6C  00EC               	movwf	vfpfcnvrt@f+2
  6355  0B6D  3F03               	moviw [3]fsr0
  6356  0B6E  2B7E               	goto	L1
  6357  0B6F                     l6724:	
  6358                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  6359                           
  6360                           
  6361                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6362  0B6F  085E               	movf	vfpfcnvrt@ap,w
  6363  0B70  0086               	movwf	6
  6364  0B71  0187               	clrf	7
  6365  0B72  0801               	movf	1,w
  6366  0B73  0084               	movwf	4
  6367  0B74  0185               	clrf	5
  6368  0B75  3004               	movlw	4
  6369  0B76  0781               	addwf	1,f
  6370  0B77  3F00               	moviw [0]fsr0
  6371  0B78  00EA               	movwf	vfpfcnvrt@f
  6372  0B79  3F01               	moviw [1]fsr0
  6373  0B7A  00EB               	movwf	vfpfcnvrt@f+1
  6374  0B7B  3F02               	moviw [2]fsr0
  6375  0B7C  00EC               	movwf	vfpfcnvrt@f+2
  6376  0B7D  3F03               	moviw [3]fsr0
  6377  0B7E                     L1:	
  6378  0B7E  00ED               	movwf	vfpfcnvrt@f+3
  6379                           
  6380                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  6381  0B7F  085D               	movf	vfpfcnvrt@fmt,w
  6382  0B80  0086               	movwf	6
  6383  0B81  0187               	clrf	7
  6384  0B82  3002               	movlw	2
  6385  0B83  0781               	addwf	1,f
  6386  0B84  3141               	addfsr 1,1
  6387  0B85  1803               	skipnc
  6388  0B86  0A81               	incf	1,f
  6389                           
  6390                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 938:       
      +                                return efgtoa(fp, f, c);
  6391  0B87  086D               	movf	vfpfcnvrt@f+3,w
  6392  0B88  00D7               	movwf	efgtoa@f+3
  6393  0B89  086C               	movf	vfpfcnvrt@f+2,w
  6394  0B8A  00D6               	movwf	efgtoa@f+2
  6395  0B8B  086B               	movf	vfpfcnvrt@f+1,w
  6396  0B8C  00D5               	movwf	efgtoa@f+1
  6397  0B8D  086A               	movf	vfpfcnvrt@f,w
  6398  0B8E  00D4               	movwf	efgtoa@f
  6399  0B8F  086E               	movf	vfpfcnvrt@c,w
  6400  0B90  00DF               	movwf	??_vfpfcnvrt
  6401  0B91  085F               	movf	??_vfpfcnvrt,w
  6402  0B92  00D8               	movwf	efgtoa@c
  6403  0B93  086F               	movf	vfpfcnvrt@fp,w
  6404  0B94  3180  205D         	fcall	_efgtoa
  6405  0B96  0020               	movlb	0	; select bank0
  6406  0B97  0855               	movf	?_efgtoa+1,w
  6407  0B98  00DE               	movwf	?_vfpfcnvrt+1
  6408  0B99  0854               	movf	?_efgtoa,w
  6409  0B9A  00DD               	movwf	?_vfpfcnvrt
  6410  0B9B  0008               	return
  6411  0B9C                     l6732:	
  6412                           
  6413                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  6414  0B9C  0020               	movlb	0	; select bank0
  6415  0B9D  085D               	movf	vfpfcnvrt@fmt,w
  6416  0B9E  0086               	movwf	6
  6417  0B9F  0187               	clrf	7
  6418  0BA0  3F40               	moviw [0]fsr1
  6419  0BA1  00DF               	movwf	??_vfpfcnvrt
  6420  0BA2  3F41               	moviw [1]fsr1
  6421  0BA3  00E0               	movwf	??_vfpfcnvrt+1
  6422  0BA4  085F               	movf	??_vfpfcnvrt,w
  6423  0BA5  0084               	movwf	4
  6424  0BA6  0860               	movf	??_vfpfcnvrt+1,w
  6425  0BA7  0085               	movwf	5
  6426  0BA8  0012               	moviw fsr0++
  6427  0BA9  3A25               	xorlw	37
  6428  0BAA  1D03               	btfss	3,2
  6429  0BAB  2BC4               	goto	l6742
  6430                           
  6431                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  6432  0BAC  085D               	movf	vfpfcnvrt@fmt,w
  6433  0BAD  0086               	movwf	6
  6434  0BAE  0187               	clrf	7
  6435  0BAF  3001               	movlw	1
  6436  0BB0  0781               	addwf	1,f
  6437  0BB1  3141               	addfsr 1,1
  6438  0BB2  1803               	skipnc
  6439  0BB3  0A81               	incf	1,f
  6440                           
  6441                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  6442  0BB4  3025               	movlw	37
  6443  0BB5  00F4               	movwf	fputc@c
  6444  0BB6  3000               	movlw	0
  6445  0BB7  00F5               	movwf	fputc@c+1
  6446  0BB8  086F               	movf	vfpfcnvrt@fp,w
  6447  0BB9  00DF               	movwf	??_vfpfcnvrt
  6448  0BBA  085F               	movf	??_vfpfcnvrt,w
  6449  0BBB  00F6               	movwf	fputc@fp
  6450  0BBC  3192  2230         	fcall	_fputc
  6451  0BBE                     l6738:	
  6452                           
  6453                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  6454  0BBE  3001               	movlw	1
  6455  0BBF  0020               	movlb	0	; select bank0
  6456  0BC0  00DD               	movwf	?_vfpfcnvrt
  6457  0BC1  3000               	movlw	0
  6458  0BC2  00DE               	movwf	?_vfpfcnvrt+1
  6459  0BC3  0008               	return
  6460  0BC4                     l6742:	
  6461                           
  6462                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  6463  0BC4  085D               	movf	vfpfcnvrt@fmt,w
  6464  0BC5  0086               	movwf	6
  6465  0BC6  0187               	clrf	7
  6466  0BC7  3001               	movlw	1
  6467  0BC8  0781               	addwf	1,f
  6468  0BC9  3141               	addfsr 1,1
  6469  0BCA  1803               	skipnc
  6470  0BCB  0A81               	incf	1,f
  6471                           
  6472                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  6473  0BCC  01DD               	clrf	?_vfpfcnvrt
  6474  0BCD  01DE               	clrf	?_vfpfcnvrt+1
  6475  0BCE  0008               	return
  6476  0BCF                     l6748:	
  6477                           
  6478                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  6479  0BCF  085D               	movf	vfpfcnvrt@fmt,w
  6480  0BD0  0086               	movwf	6
  6481  0BD1  0187               	clrf	7
  6482  0BD2  3F40               	moviw [0]fsr1
  6483  0BD3  00DF               	movwf	??_vfpfcnvrt
  6484  0BD4  3F41               	moviw [1]fsr1
  6485  0BD5  00E0               	movwf	??_vfpfcnvrt+1
  6486  0BD6  085F               	movf	??_vfpfcnvrt,w
  6487  0BD7  0084               	movwf	4
  6488  0BD8  0860               	movf	??_vfpfcnvrt+1,w
  6489  0BD9  0085               	movwf	5
  6490  0BDA  0800               	movf	0,w	;code access
  6491  0BDB  00E1               	movwf	??_vfpfcnvrt+2
  6492  0BDC  01E2               	clrf	??_vfpfcnvrt+3
  6493  0BDD  0861               	movf	??_vfpfcnvrt+2,w
  6494  0BDE  00F4               	movwf	fputc@c
  6495  0BDF  0862               	movf	??_vfpfcnvrt+3,w
  6496  0BE0  00F5               	movwf	fputc@c+1
  6497  0BE1  086F               	movf	vfpfcnvrt@fp,w
  6498  0BE2  00E3               	movwf	??_vfpfcnvrt+4
  6499  0BE3  0863               	movf	??_vfpfcnvrt+4,w
  6500  0BE4  00F6               	movwf	fputc@fp
  6501  0BE5  3192  2230  318A   	fcall	_fputc
  6502                           
  6503                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  6504  0BE8  0020               	movlb	0	; select bank0
  6505  0BE9  085D               	movf	vfpfcnvrt@fmt,w
  6506  0BEA  0086               	movwf	6
  6507  0BEB  0187               	clrf	7
  6508  0BEC  3001               	movlw	1
  6509  0BED  0781               	addwf	1,f
  6510  0BEE  3141               	addfsr 1,1
  6511  0BEF  1803               	skipnc
  6512  0BF0  0A81               	incf	1,f
  6513  0BF1  2BBE               	goto	l6738
  6514  0BF2                     __end_of_vfpfcnvrt:	
  6515                           
  6516                           	psect	text9
  6517  13AB                     __ptext9:	
  6518 ;; *************** function _strncmp *****************
  6519 ;; Defined at:
  6520 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  6521 ;; Parameters:    Size  Location     Type
  6522 ;;  _l              1    wreg     PTR const unsigned char 
  6523 ;;		 -> vfpfcnvrt@ct(3), 
  6524 ;;  _r              2    1[COMMON] PTR const unsigned char 
  6525 ;;		 -> STR_13(3), 
  6526 ;;  n               2    3[COMMON] unsigned int 
  6527 ;; Auto vars:     Size  Location     Type
  6528 ;;  _l              1    6[COMMON] PTR const unsigned char 
  6529 ;;		 -> vfpfcnvrt@ct(3), 
  6530 ;;  r               2    7[COMMON] PTR const unsigned char 
  6531 ;;		 -> STR_13(3), 
  6532 ;;  l               1    9[COMMON] PTR const unsigned char 
  6533 ;;		 -> vfpfcnvrt@ct(3), 
  6534 ;; Return value:  Size  Location     Type
  6535 ;;                  2    1[COMMON] int 
  6536 ;; Registers used:
  6537 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  6538 ;; Tracked objects:
  6539 ;;		On entry : 0/0
  6540 ;;		On exit  : 0/0
  6541 ;;		Unchanged: 0/0
  6542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6543 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6544 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6545 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6546 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6547 ;;Total ram usage:        9 bytes
  6548 ;; Hardware stack levels used:    1
  6549 ;; Hardware stack levels required when called:    4
  6550 ;; This function calls:
  6551 ;;		Nothing
  6552 ;; This function is called by:
  6553 ;;		_vfpfcnvrt
  6554 ;; This function uses a non-reentrant model
  6555 ;;
  6556                           
  6557                           
  6558                           ;psect for function _strncmp
  6559  13AB                     _strncmp:	
  6560                           
  6561                           ;incstack = 0
  6562                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  6563                           ;strncmp@_l stored from wreg
  6564  13AB  00F6               	movwf	strncmp@_l
  6565  13AC  0876               	movf	strncmp@_l,w
  6566  13AD  00F5               	movwf	??_strncmp
  6567  13AE  0875               	movf	??_strncmp,w
  6568  13AF  00F9               	movwf	strncmp@l
  6569  13B0  0872               	movf	strncmp@_r+1,w
  6570  13B1  00F8               	movwf	strncmp@r+1
  6571  13B2  0871               	movf	strncmp@_r,w
  6572  13B3  00F7               	movwf	strncmp@r
  6573  13B4  3001               	movlw	1
  6574  13B5  02F3               	subwf	strncmp@n,f
  6575  13B6  3000               	movlw	0
  6576  13B7  3BF4               	subwfb	strncmp@n+1,f
  6577  13B8  0A73               	incf	strncmp@n,w
  6578  13B9  1D03               	skipz
  6579  13BA  2BE5               	goto	l5336
  6580  13BB  0A74               	incf	strncmp@n+1,w
  6581  13BC  1D03               	btfss	3,2
  6582  13BD  2BE5               	goto	l5336
  6583  13BE  01F1               	clrf	?_strncmp
  6584  13BF  01F2               	clrf	?_strncmp+1
  6585  13C0  0008               	return
  6586  13C1                     l5338:	
  6587  13C1  0877               	movf	strncmp@r,w
  6588  13C2  0084               	movwf	4
  6589  13C3  0878               	movf	strncmp@r+1,w
  6590  13C4  0085               	movwf	5
  6591  13C5  0012               	moviw fsr0++
  6592  13C6  1903               	btfsc	3,2
  6593  13C7  2BEB               	goto	l5344
  6594  13C8  0873               	movf	strncmp@n,w
  6595  13C9  0474               	iorwf	strncmp@n+1,w
  6596  13CA  1903               	btfsc	3,2
  6597  13CB  2BEB               	goto	l5344
  6598  13CC  0877               	movf	strncmp@r,w
  6599  13CD  0084               	movwf	4
  6600  13CE  0878               	movf	strncmp@r+1,w
  6601  13CF  0085               	movwf	5
  6602  13D0  0800               	movf	0,w	;code access
  6603  13D1  00F5               	movwf	??_strncmp
  6604  13D2  0879               	movf	strncmp@l,w
  6605  13D3  0086               	movwf	6
  6606  13D4  0187               	clrf	7
  6607  13D5  0801               	movf	1,w
  6608  13D6  0675               	xorwf	??_strncmp,w
  6609  13D7  1D03               	btfss	3,2
  6610  13D8  2BEB               	goto	l5344
  6611  13D9  3001               	movlw	1
  6612  13DA  00F5               	movwf	??_strncmp
  6613  13DB  0875               	movf	??_strncmp,w
  6614  13DC  07F9               	addwf	strncmp@l,f
  6615  13DD  3001               	movlw	1
  6616  13DE  07F7               	addwf	strncmp@r,f
  6617  13DF  3000               	movlw	0
  6618  13E0  3DF8               	addwfc	strncmp@r+1,f
  6619  13E1  3001               	movlw	1
  6620  13E2  02F3               	subwf	strncmp@n,f
  6621  13E3  3000               	movlw	0
  6622  13E4  3BF4               	subwfb	strncmp@n+1,f
  6623  13E5                     l5336:	
  6624  13E5  0879               	movf	strncmp@l,w
  6625  13E6  0086               	movwf	6
  6626  13E7  0187               	clrf	7
  6627  13E8  0801               	movf	1,w
  6628  13E9  1D03               	btfss	3,2
  6629  13EA  2BC1               	goto	l5338
  6630  13EB                     l5344:	
  6631  13EB  0879               	movf	strncmp@l,w
  6632  13EC  0086               	movwf	6
  6633  13ED  0187               	clrf	7
  6634  13EE  0877               	movf	strncmp@r,w
  6635  13EF  0084               	movwf	4
  6636  13F0  0878               	movf	strncmp@r+1,w
  6637  13F1  0085               	movwf	5
  6638  13F2  0800               	movf	0,w	;code access
  6639  13F3  0201               	subwf	1,w
  6640  13F4  00F1               	movwf	?_strncmp
  6641  13F5  01F2               	clrf	?_strncmp+1
  6642  13F6  1C03               	skipc
  6643  13F7  03F2               	decf	?_strncmp+1,f
  6644  13F8  0008               	return
  6645  13F9                     __end_of_strncmp:	
  6646                           
  6647                           	psect	text10
  6648  005D                     __ptext10:	
  6649 ;; *************** function _efgtoa *****************
  6650 ;; Defined at:
  6651 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6652 ;; Parameters:    Size  Location     Type
  6653 ;;  fp              1    wreg     PTR struct _IO_FILE
  6654 ;;		 -> NULL(0), 
  6655 ;;  f               4   52[BANK0 ] PTR struct _IO_FILE
  6656 ;;  c               1   56[BANK0 ] unsigned char 
  6657 ;; Auto vars:     Size  Location     Type
  6658 ;;  fp              1   28[BANK1 ] PTR struct _IO_FILE
  6659 ;;		 -> NULL(0), 
  6660 ;;  u               4   53[BANK1 ] PTR struct _IO_FILE
  6661 ;;  g               4   45[BANK1 ] PTR struct _IO_FILE
  6662 ;;  l               4   39[BANK1 ] PTR struct _IO_FILE
  6663 ;;  h               4   35[BANK1 ] PTR struct _IO_FILE
  6664 ;;  ou              4    0[BANK1 ] PTR struct _IO_FILE
  6665 ;;  n               2   51[BANK1 ] int 
  6666 ;;  e               2   49[BANK1 ] int 
  6667 ;;  i               2   43[BANK1 ] int 
  6668 ;;  w               2   32[BANK1 ] int 
  6669 ;;  p               2   29[BANK1 ] int 
  6670 ;;  sign            2   26[BANK1 ] int 
  6671 ;;  d               2   24[BANK1 ] int 
  6672 ;;  ne              2   22[BANK1 ] int 
  6673 ;;  m               2   20[BANK1 ] int 
  6674 ;;  pp              2   18[BANK1 ] int 
  6675 ;;  t               2   16[BANK1 ] int 
  6676 ;;  mode            1   34[BANK1 ] unsigned char 
  6677 ;;  nmode           1   31[BANK1 ] unsigned char 
  6678 ;; Return value:  Size  Location     Type
  6679 ;;                  2   52[BANK0 ] int 
  6680 ;; Registers used:
  6681 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6682 ;; Tracked objects:
  6683 ;;		On entry : 0/0
  6684 ;;		On exit  : 0/0
  6685 ;;		Unchanged: 0/0
  6686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6687 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6688 ;;      Locals:         0       0      57       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6689 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6690 ;;      Totals:         0       9      57       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6691 ;;Total ram usage:       66 bytes
  6692 ;; Hardware stack levels used:    1
  6693 ;; Hardware stack levels required when called:    9
  6694 ;; This function calls:
  6695 ;;		___awdiv
  6696 ;;		___awmod
  6697 ;;		___fladd
  6698 ;;		___fldiv
  6699 ;;		___fleq
  6700 ;;		___flge
  6701 ;;		___flmul
  6702 ;;		___flneg
  6703 ;;		___flsub
  6704 ;;		___fltol
  6705 ;;		___fpclassifyf
  6706 ;;		_floorf
  6707 ;;		_isupper
  6708 ;;		_pad
  6709 ;;		_strcpy
  6710 ;;		_tolower
  6711 ;; This function is called by:
  6712 ;;		_vfpfcnvrt
  6713 ;; This function uses a non-reentrant model
  6714 ;;
  6715                           
  6716                           
  6717                           ;psect for function _efgtoa
  6718  005D                     _efgtoa:	
  6719                           
  6720                           ;incstack = 0
  6721                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6722                           ;efgtoa@fp stored from wreg
  6723  005D  0021               	movlb	1	; select bank1
  6724  005E  00BC               	movwf	efgtoa@fp^(0+128)
  6725                           
  6726                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  6727  005F  01BA               	clrf	efgtoa@sign^(0+128)
  6728  0060  01BB               	clrf	(efgtoa@sign+1)^(0+128)
  6729                           
  6730                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  6731  0061  0020               	movlb	0	; select bank0
  6732  0062  0857               	movf	efgtoa@f+3,w
  6733  0063  0021               	movlb	1	; select bank1
  6734  0064  00D0               	movwf	(efgtoa@g+3)^(0+128)
  6735  0065  0020               	movlb	0	; select bank0
  6736  0066  0856               	movf	efgtoa@f+2,w
  6737  0067  0021               	movlb	1	; select bank1
  6738  0068  00CF               	movwf	(efgtoa@g+2)^(0+128)
  6739  0069  0020               	movlb	0	; select bank0
  6740  006A  0855               	movf	efgtoa@f+1,w
  6741  006B  0021               	movlb	1	; select bank1
  6742  006C  00CE               	movwf	(efgtoa@g+1)^(0+128)
  6743  006D  0020               	movlb	0	; select bank0
  6744  006E  0854               	movf	efgtoa@f,w
  6745  006F  0021               	movlb	1	; select bank1
  6746  0070  00CD               	movwf	efgtoa@g^(0+128)
  6747                           
  6748                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  6749  0071  0850               	movf	(efgtoa@g+3)^(0+128),w
  6750  0072  0020               	movlb	0	; select bank0
  6751  0073  00BD               	movwf	___flge@ff1+3
  6752  0074  0021               	movlb	1	; select bank1
  6753  0075  084F               	movf	(efgtoa@g+2)^(0+128),w
  6754  0076  0020               	movlb	0	; select bank0
  6755  0077  00BC               	movwf	___flge@ff1+2
  6756  0078  0021               	movlb	1	; select bank1
  6757  0079  084E               	movf	(efgtoa@g+1)^(0+128),w
  6758  007A  0020               	movlb	0	; select bank0
  6759  007B  00BB               	movwf	___flge@ff1+1
  6760  007C  0021               	movlb	1	; select bank1
  6761  007D  084D               	movf	efgtoa@g^(0+128),w
  6762  007E  0020               	movlb	0	; select bank0
  6763  007F  00BA               	movwf	___flge@ff1
  6764  0080  3000               	movlw	0
  6765  0081  00C1               	movwf	___flge@ff2+3
  6766  0082  3000               	movlw	0
  6767  0083  00C0               	movwf	___flge@ff2+2
  6768  0084  3000               	movlw	0
  6769  0085  00BF               	movwf	___flge@ff2+1
  6770  0086  3000               	movlw	0
  6771  0087  00BE               	movwf	___flge@ff2
  6772  0088  3196  262E  3180   	fcall	___flge
  6773  008B  1803               	btfsc	3,0
  6774  008C  28A6               	goto	l6402
  6775                           
  6776                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  6777  008D  3001               	movlw	1
  6778  008E  0021               	movlb	1	; select bank1
  6779  008F  00BA               	movwf	efgtoa@sign^(0+128)
  6780  0090  3000               	movlw	0
  6781  0091  00BB               	movwf	(efgtoa@sign^(0+128)+1)
  6782                           
  6783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  6784  0092  0850               	movf	(efgtoa@g+3)^(0+128),w
  6785  0093  00F4               	movwf	___flneg@f1+3
  6786  0094  084F               	movf	(efgtoa@g+2)^(0+128),w
  6787  0095  00F3               	movwf	___flneg@f1+2
  6788  0096  084E               	movf	(efgtoa@g+1)^(0+128),w
  6789  0097  00F2               	movwf	___flneg@f1+1
  6790  0098  084D               	movf	efgtoa@g^(0+128),w
  6791  0099  00F1               	movwf	___flneg@f1
  6792  009A  319E  2681  3180   	fcall	___flneg
  6793  009D  0874               	movf	?___flneg+3,w
  6794  009E  0021               	movlb	1	; select bank1
  6795  009F  00D0               	movwf	(efgtoa@g+3)^(0+128)
  6796  00A0  0873               	movf	?___flneg+2,w
  6797  00A1  00CF               	movwf	(efgtoa@g+2)^(0+128)
  6798  00A2  0872               	movf	?___flneg+1,w
  6799  00A3  00CE               	movwf	(efgtoa@g+1)^(0+128)
  6800  00A4  0871               	movf	?___flneg,w
  6801  00A5  00CD               	movwf	efgtoa@g^(0+128)
  6802  00A6                     l6402:	
  6803                           
  6804                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  6805  00A6  0021               	movlb	1	; select bank1
  6806  00A7  01D3               	clrf	efgtoa@n^(0+128)
  6807  00A8  01D4               	clrf	(efgtoa@n+1)^(0+128)
  6808                           
  6809                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  6810  00A9  0022               	movlb	2	; select bank2
  6811  00AA  0859               	movf	(_width+1)^(0+256),w
  6812  00AB  0021               	movlb	1	; select bank1
  6813  00AC  00C1               	movwf	(efgtoa@w+1)^(0+128)
  6814  00AD  0022               	movlb	2	; select bank2
  6815  00AE  0858               	movf	_width^(0+256),w
  6816  00AF  0021               	movlb	1	; select bank1
  6817  00B0  00C0               	movwf	efgtoa@w^(0+128)
  6818                           
  6819                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  6820  00B1  083A               	movf	efgtoa@sign^(0+128),w
  6821  00B2  043B               	iorwf	(efgtoa@sign+1)^(0+128),w
  6822  00B3  1D03               	btfss	3,2
  6823  00B4  28B8               	goto	l6410
  6824  00B5  0022               	movlb	2	; select bank2
  6825  00B6  1D5C               	btfss	_flags^(0+256),2
  6826  00B7  28D2               	goto	l6422
  6827  00B8                     l6410:	
  6828                           
  6829                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  6830  00B8  0021               	movlb	1	; select bank1
  6831  00B9  083A               	movf	efgtoa@sign^(0+128),w
  6832  00BA  043B               	iorwf	(efgtoa@sign+1)^(0+128),w
  6833  00BB  1D03               	btfss	3,2
  6834  00BC  28BF               	goto	l6414
  6835  00BD  302B               	movlw	43
  6836  00BE  28C0               	goto	L2
  6837  00BF                     l6414:	
  6838  00BF  302D               	movlw	45
  6839  00C0                     L2:	
  6840  00C0  00A4               	movwf	_efgtoa$1497^(0+128)
  6841  00C1  3000               	movlw	0
  6842  00C2  00A5               	movwf	(_efgtoa$1497^(0+128)+1)
  6843  00C3  0824               	movf	_efgtoa$1497^(0+128),w
  6844  00C4  0020               	movlb	0	; select bank0
  6845  00C5  00D9               	movwf	??_efgtoa
  6846  00C6  0859               	movf	??_efgtoa,w
  6847  00C7  0024               	movlb	4	; select bank4
  6848  00C8  00A0               	movwf	_dbuf^(0+512)
  6849                           
  6850                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  6851  00C9  3001               	movlw	1
  6852  00CA  0021               	movlb	1	; select bank1
  6853  00CB  07D3               	addwf	efgtoa@n^(0+128),f
  6854  00CC  3000               	movlw	0
  6855  00CD  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  6856                           
  6857                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  6858  00CE  30FF               	movlw	255
  6859  00CF  07C0               	addwf	efgtoa@w^(0+128),f
  6860  00D0  30FF               	movlw	255
  6861  00D1  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  6862  00D2                     l6422:	
  6863                           
  6864                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  6865  00D2  0021               	movlb	1	; select bank1
  6866  00D3  0850               	movf	(efgtoa@g+3)^(0+128),w
  6867  00D4  00F4               	movwf	___fpclassifyf@x+3
  6868  00D5  084F               	movf	(efgtoa@g+2)^(0+128),w
  6869  00D6  00F3               	movwf	___fpclassifyf@x+2
  6870  00D7  084E               	movf	(efgtoa@g+1)^(0+128),w
  6871  00D8  00F2               	movwf	___fpclassifyf@x+1
  6872  00D9  084D               	movf	efgtoa@g^(0+128),w
  6873  00DA  00F1               	movwf	___fpclassifyf@x
  6874  00DB  3195  25B6  3180   	fcall	___fpclassifyf
  6875  00DE  0371               	decf	?___fpclassifyf,w
  6876  00DF  0472               	iorwf	?___fpclassifyf+1,w
  6877  00E0  1D03               	btfss	3,2
  6878  00E1  292A               	goto	l6440
  6879  00E2  0020               	movlb	0	; select bank0
  6880  00E3  0858               	movf	efgtoa@c,w
  6881  00E4  3EBF               	addlw	191
  6882  00E5  00D9               	movwf	??_efgtoa
  6883  00E6  30FF               	movlw	255
  6884  00E7  1803               	skipnc
  6885  00E8  3000               	movlw	0
  6886  00E9  00DA               	movwf	??_efgtoa+1
  6887  00EA  3000               	movlw	0
  6888  00EB  025A               	subwf	??_efgtoa+1,w
  6889  00EC  301A               	movlw	26
  6890  00ED  1903               	skipnz
  6891  00EE  0259               	subwf	??_efgtoa,w
  6892  00EF  1803               	btfsc	3,0
  6893  00F0  28F3               	goto	u6820
  6894  00F1  3001               	movlw	1
  6895  00F2  28F4               	goto	u6830
  6896  00F3                     u6820:	
  6897  00F3  3000               	movlw	0
  6898  00F4                     u6830:	
  6899  00F4  00DB               	movwf	??_efgtoa+2
  6900  00F5  01DC               	clrf	??_efgtoa+3
  6901  00F6  085B               	movf	??_efgtoa+2,w
  6902  00F7  0021               	movlb	1	; select bank1
  6903  00F8  00A6               	movwf	_efgtoa$1498^(0+128)
  6904  00F9  0020               	movlb	0	; select bank0
  6905  00FA  085C               	movf	??_efgtoa+3,w
  6906  00FB  0021               	movlb	1	; select bank1
  6907  00FC  00A7               	movwf	(_efgtoa$1498+1)^(0+128)
  6908  00FD  0826               	movf	_efgtoa$1498^(0+128),w
  6909  00FE  0427               	iorwf	(_efgtoa$1498+1)^(0+128),w
  6910  00FF  1903               	btfsc	3,2
  6911  0100  2905               	goto	l6432
  6912                           
  6913                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  6914  0101  3021               	movlw	low (STR_3| (0+32768))
  6915  0102  00F1               	movwf	strcpy@src
  6916  0103  30A0               	movlw	high (STR_3| (0+32768))
  6917  0104  2908               	goto	L3
  6918  0105                     l6432:	
  6919                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  6920                           
  6921                           
  6922                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  6923  0105  3029               	movlw	low (STR_4| (0+32768))
  6924  0106  00F1               	movwf	strcpy@src
  6925  0107  30A0               	movlw	high (STR_4| (0+32768))
  6926  0108                     L3:	
  6927  0108  00F2               	movwf	strcpy@src+1
  6928  0109  0853               	movf	efgtoa@n^(0+128),w
  6929  010A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6930  010B  3190  203C  3180   	fcall	_strcpy
  6931                           
  6932                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  6933  010E  30FD               	movlw	253
  6934  010F  0021               	movlb	1	; select bank1
  6935  0110  07C0               	addwf	efgtoa@w^(0+128),f
  6936  0111  30FF               	movlw	255
  6937  0112  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  6938                           
  6939                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  6940  0113  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  6941  0114  0020               	movlb	0	; select bank0
  6942  0115  00D9               	movwf	??_efgtoa
  6943  0116  0859               	movf	??_efgtoa,w
  6944  0117  00A8               	movwf	pad@buf
  6945  0118  0021               	movlb	1	; select bank1
  6946  0119  0841               	movf	(efgtoa@w+1)^(0+128),w
  6947  011A  0020               	movlb	0	; select bank0
  6948  011B  00AA               	movwf	pad@p+1
  6949  011C  0021               	movlb	1	; select bank1
  6950  011D  0840               	movf	efgtoa@w^(0+128),w
  6951  011E  0020               	movlb	0	; select bank0
  6952  011F  00A9               	movwf	pad@p
  6953  0120  0021               	movlb	1	; select bank1
  6954  0121  083C               	movf	efgtoa@fp^(0+128),w
  6955  0122  3193  23F9         	fcall	_pad
  6956  0124  0020               	movlb	0	; select bank0
  6957  0125  0829               	movf	?_pad+1,w
  6958  0126  00D5               	movwf	?_efgtoa+1
  6959  0127  0828               	movf	?_pad,w
  6960  0128  00D4               	movwf	?_efgtoa
  6961  0129  0008               	return
  6962  012A                     l6440:	
  6963                           
  6964                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  6965  012A  0021               	movlb	1	; select bank1
  6966  012B  0850               	movf	(efgtoa@g+3)^(0+128),w
  6967  012C  00F4               	movwf	___fpclassifyf@x+3
  6968  012D  084F               	movf	(efgtoa@g+2)^(0+128),w
  6969  012E  00F3               	movwf	___fpclassifyf@x+2
  6970  012F  084E               	movf	(efgtoa@g+1)^(0+128),w
  6971  0130  00F2               	movwf	___fpclassifyf@x+1
  6972  0131  084D               	movf	efgtoa@g^(0+128),w
  6973  0132  00F1               	movwf	___fpclassifyf@x
  6974  0133  3195  25B6  3180   	fcall	___fpclassifyf
  6975  0136  0871               	movf	?___fpclassifyf,w
  6976  0137  0472               	iorwf	?___fpclassifyf+1,w
  6977  0138  1D03               	btfss	3,2
  6978  0139  2982               	goto	l6458
  6979  013A  0020               	movlb	0	; select bank0
  6980  013B  0858               	movf	efgtoa@c,w
  6981  013C  3EBF               	addlw	191
  6982  013D  00D9               	movwf	??_efgtoa
  6983  013E  30FF               	movlw	255
  6984  013F  1803               	skipnc
  6985  0140  3000               	movlw	0
  6986  0141  00DA               	movwf	??_efgtoa+1
  6987  0142  3000               	movlw	0
  6988  0143  025A               	subwf	??_efgtoa+1,w
  6989  0144  301A               	movlw	26
  6990  0145  1903               	skipnz
  6991  0146  0259               	subwf	??_efgtoa,w
  6992  0147  1803               	btfsc	3,0
  6993  0148  294B               	goto	u6860
  6994  0149  3001               	movlw	1
  6995  014A  294C               	goto	u6870
  6996  014B                     u6860:	
  6997  014B  3000               	movlw	0
  6998  014C                     u6870:	
  6999  014C  00DB               	movwf	??_efgtoa+2
  7000  014D  01DC               	clrf	??_efgtoa+3
  7001  014E  085B               	movf	??_efgtoa+2,w
  7002  014F  0021               	movlb	1	; select bank1
  7003  0150  00A8               	movwf	_efgtoa$1503^(0+128)
  7004  0151  0020               	movlb	0	; select bank0
  7005  0152  085C               	movf	??_efgtoa+3,w
  7006  0153  0021               	movlb	1	; select bank1
  7007  0154  00A9               	movwf	(_efgtoa$1503+1)^(0+128)
  7008  0155  0828               	movf	_efgtoa$1503^(0+128),w
  7009  0156  0429               	iorwf	(_efgtoa$1503+1)^(0+128),w
  7010  0157  1903               	btfsc	3,2
  7011  0158  295D               	goto	l6450
  7012                           
  7013                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  7014  0159  3025               	movlw	low (STR_7| (0+32768))
  7015  015A  00F1               	movwf	strcpy@src
  7016  015B  30A0               	movlw	high (STR_7| (0+32768))
  7017  015C  2960               	goto	L4
  7018  015D                     l6450:	
  7019                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  7020                           
  7021                           
  7022                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  7023  015D  302D               	movlw	low (STR_8| (0+32768))
  7024  015E  00F1               	movwf	strcpy@src
  7025  015F  30A0               	movlw	high (STR_8| (0+32768))
  7026  0160                     L4:	
  7027  0160  00F2               	movwf	strcpy@src+1
  7028  0161  0853               	movf	efgtoa@n^(0+128),w
  7029  0162  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7030  0163  3190  203C  3180   	fcall	_strcpy
  7031                           
  7032                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 358:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  7033  0166  30FD               	movlw	253
  7034  0167  0021               	movlb	1	; select bank1
  7035  0168  07C0               	addwf	efgtoa@w^(0+128),f
  7036  0169  30FF               	movlw	255
  7037  016A  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  7038                           
  7039                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 359:       
      +                            return pad(fp, &dbuf[0], w);
  7040  016B  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  7041  016C  0020               	movlb	0	; select bank0
  7042  016D  00D9               	movwf	??_efgtoa
  7043  016E  0859               	movf	??_efgtoa,w
  7044  016F  00A8               	movwf	pad@buf
  7045  0170  0021               	movlb	1	; select bank1
  7046  0171  0841               	movf	(efgtoa@w+1)^(0+128),w
  7047  0172  0020               	movlb	0	; select bank0
  7048  0173  00AA               	movwf	pad@p+1
  7049  0174  0021               	movlb	1	; select bank1
  7050  0175  0840               	movf	efgtoa@w^(0+128),w
  7051  0176  0020               	movlb	0	; select bank0
  7052  0177  00A9               	movwf	pad@p
  7053  0178  0021               	movlb	1	; select bank1
  7054  0179  083C               	movf	efgtoa@fp^(0+128),w
  7055  017A  3193  23F9         	fcall	_pad
  7056  017C  0020               	movlb	0	; select bank0
  7057  017D  0829               	movf	?_pad+1,w
  7058  017E  00D5               	movwf	?_efgtoa+1
  7059  017F  0828               	movf	?_pad,w
  7060  0180  00D4               	movwf	?_efgtoa
  7061  0181  0008               	return
  7062  0182                     l6458:	
  7063                           
  7064                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  7065  0182  303F               	movlw	63
  7066  0183  0021               	movlb	1	; select bank1
  7067  0184  00D8               	movwf	(efgtoa@u+3)^(0+128)
  7068  0185  3080               	movlw	128
  7069  0186  00D7               	movwf	(efgtoa@u+2)^(0+128)
  7070  0187  3000               	movlw	0
  7071  0188  00D6               	movwf	(efgtoa@u+1)^(0+128)
  7072  0189  3000               	movlw	0
  7073  018A  00D5               	movwf	efgtoa@u^(0+128)
  7074                           
  7075                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  7076  018B  01D1               	clrf	efgtoa@e^(0+128)
  7077  018C  01D2               	clrf	(efgtoa@e+1)^(0+128)
  7078                           
  7079                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  7080  018D  0850               	movf	(efgtoa@g+3)^(0+128),w
  7081  018E  00F4               	movwf	___fleq@ff1+3
  7082  018F  084F               	movf	(efgtoa@g+2)^(0+128),w
  7083  0190  00F3               	movwf	___fleq@ff1+2
  7084  0191  084E               	movf	(efgtoa@g+1)^(0+128),w
  7085  0192  00F2               	movwf	___fleq@ff1+1
  7086  0193  084D               	movf	efgtoa@g^(0+128),w
  7087  0194  00F1               	movwf	___fleq@ff1
  7088  0195  3000               	movlw	0
  7089  0196  00F8               	movwf	___fleq@ff2+3
  7090  0197  3000               	movlw	0
  7091  0198  00F7               	movwf	___fleq@ff2+2
  7092  0199  3000               	movlw	0
  7093  019A  00F6               	movwf	___fleq@ff2+1
  7094  019B  3000               	movlw	0
  7095  019C  00F5               	movwf	___fleq@ff2
  7096  019D  3188  2000  3180   	fcall	___fleq
  7097  01A0  1C03               	btfss	3,0
  7098  01A1  29D3               	goto	l6470
  7099  01A2  2A62               	goto	l6478
  7100  01A3                     l6466:	
  7101                           
  7102                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  7103  01A3  3041               	movlw	65
  7104  01A4  0020               	movlb	0	; select bank0
  7105  01A5  00A3               	movwf	___flmul@b+3
  7106  01A6  3020               	movlw	32
  7107  01A7  00A2               	movwf	___flmul@b+2
  7108  01A8  3000               	movlw	0
  7109  01A9  00A1               	movwf	___flmul@b+1
  7110  01AA  3000               	movlw	0
  7111  01AB  00A0               	movwf	___flmul@b
  7112  01AC  0021               	movlb	1	; select bank1
  7113  01AD  0858               	movf	(efgtoa@u+3)^(0+128),w
  7114  01AE  0020               	movlb	0	; select bank0
  7115  01AF  00A7               	movwf	___flmul@a+3
  7116  01B0  0021               	movlb	1	; select bank1
  7117  01B1  0857               	movf	(efgtoa@u+2)^(0+128),w
  7118  01B2  0020               	movlb	0	; select bank0
  7119  01B3  00A6               	movwf	___flmul@a+2
  7120  01B4  0021               	movlb	1	; select bank1
  7121  01B5  0856               	movf	(efgtoa@u+1)^(0+128),w
  7122  01B6  0020               	movlb	0	; select bank0
  7123  01B7  00A5               	movwf	___flmul@a+1
  7124  01B8  0021               	movlb	1	; select bank1
  7125  01B9  0855               	movf	efgtoa@u^(0+128),w
  7126  01BA  0020               	movlb	0	; select bank0
  7127  01BB  00A4               	movwf	___flmul@a
  7128  01BC  318D  25D4  3180   	fcall	___flmul
  7129  01BF  0020               	movlb	0	; select bank0
  7130  01C0  0823               	movf	?___flmul+3,w
  7131  01C1  0021               	movlb	1	; select bank1
  7132  01C2  00D8               	movwf	(efgtoa@u+3)^(0+128)
  7133  01C3  0020               	movlb	0	; select bank0
  7134  01C4  0822               	movf	?___flmul+2,w
  7135  01C5  0021               	movlb	1	; select bank1
  7136  01C6  00D7               	movwf	(efgtoa@u+2)^(0+128)
  7137  01C7  0020               	movlb	0	; select bank0
  7138  01C8  0821               	movf	?___flmul+1,w
  7139  01C9  0021               	movlb	1	; select bank1
  7140  01CA  00D6               	movwf	(efgtoa@u+1)^(0+128)
  7141  01CB  0020               	movlb	0	; select bank0
  7142  01CC  0820               	movf	?___flmul,w
  7143  01CD  0021               	movlb	1	; select bank1
  7144  01CE  00D5               	movwf	efgtoa@u^(0+128)
  7145                           
  7146                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  7147  01CF  3001               	movlw	1
  7148  01D0  07D1               	addwf	efgtoa@e^(0+128),f
  7149  01D1  3000               	movlw	0
  7150  01D2  3DD2               	addwfc	(efgtoa@e+1)^(0+128),f
  7151  01D3                     l6470:	
  7152                           
  7153                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  7154  01D3  0021               	movlb	1	; select bank1
  7155  01D4  0850               	movf	(efgtoa@g+3)^(0+128),w
  7156  01D5  0020               	movlb	0	; select bank0
  7157  01D6  00BD               	movwf	___flge@ff1+3
  7158  01D7  0021               	movlb	1	; select bank1
  7159  01D8  084F               	movf	(efgtoa@g+2)^(0+128),w
  7160  01D9  0020               	movlb	0	; select bank0
  7161  01DA  00BC               	movwf	___flge@ff1+2
  7162  01DB  0021               	movlb	1	; select bank1
  7163  01DC  084E               	movf	(efgtoa@g+1)^(0+128),w
  7164  01DD  0020               	movlb	0	; select bank0
  7165  01DE  00BB               	movwf	___flge@ff1+1
  7166  01DF  0021               	movlb	1	; select bank1
  7167  01E0  084D               	movf	efgtoa@g^(0+128),w
  7168  01E1  0020               	movlb	0	; select bank0
  7169  01E2  00BA               	movwf	___flge@ff1
  7170  01E3  3041               	movlw	65
  7171  01E4  00A3               	movwf	___flmul@b+3
  7172  01E5  3020               	movlw	32
  7173  01E6  00A2               	movwf	___flmul@b+2
  7174  01E7  3000               	movlw	0
  7175  01E8  00A1               	movwf	___flmul@b+1
  7176  01E9  3000               	movlw	0
  7177  01EA  00A0               	movwf	___flmul@b
  7178  01EB  0021               	movlb	1	; select bank1
  7179  01EC  0858               	movf	(efgtoa@u+3)^(0+128),w
  7180  01ED  0020               	movlb	0	; select bank0
  7181  01EE  00A7               	movwf	___flmul@a+3
  7182  01EF  0021               	movlb	1	; select bank1
  7183  01F0  0857               	movf	(efgtoa@u+2)^(0+128),w
  7184  01F1  0020               	movlb	0	; select bank0
  7185  01F2  00A6               	movwf	___flmul@a+2
  7186  01F3  0021               	movlb	1	; select bank1
  7187  01F4  0856               	movf	(efgtoa@u+1)^(0+128),w
  7188  01F5  0020               	movlb	0	; select bank0
  7189  01F6  00A5               	movwf	___flmul@a+1
  7190  01F7  0021               	movlb	1	; select bank1
  7191  01F8  0855               	movf	efgtoa@u^(0+128),w
  7192  01F9  0020               	movlb	0	; select bank0
  7193  01FA  00A4               	movwf	___flmul@a
  7194  01FB  318D  25D4  3180   	fcall	___flmul
  7195  01FE  0020               	movlb	0	; select bank0
  7196  01FF  0823               	movf	?___flmul+3,w
  7197  0200  00C1               	movwf	___flge@ff2+3
  7198  0201  0822               	movf	?___flmul+2,w
  7199  0202  00C0               	movwf	___flge@ff2+2
  7200  0203  0821               	movf	?___flmul+1,w
  7201  0204  00BF               	movwf	___flge@ff2+1
  7202  0205  0820               	movf	?___flmul,w
  7203  0206  00BE               	movwf	___flge@ff2
  7204  0207  3196  262E  3180   	fcall	___flge
  7205  020A  1C03               	btfss	3,0
  7206  020B  2A3D               	goto	l6476
  7207  020C  29A3               	goto	l6466
  7208  020D                     l6472:	
  7209                           
  7210                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  7211  020D  3041               	movlw	65
  7212  020E  0020               	movlb	0	; select bank0
  7213  020F  00A9               	movwf	___fldiv@a+3
  7214  0210  3020               	movlw	32
  7215  0211  00A8               	movwf	___fldiv@a+2
  7216  0212  3000               	movlw	0
  7217  0213  00A7               	movwf	___fldiv@a+1
  7218  0214  3000               	movlw	0
  7219  0215  00A6               	movwf	___fldiv@a
  7220  0216  0021               	movlb	1	; select bank1
  7221  0217  0858               	movf	(efgtoa@u+3)^(0+128),w
  7222  0218  0020               	movlb	0	; select bank0
  7223  0219  00AD               	movwf	___fldiv@b+3
  7224  021A  0021               	movlb	1	; select bank1
  7225  021B  0857               	movf	(efgtoa@u+2)^(0+128),w
  7226  021C  0020               	movlb	0	; select bank0
  7227  021D  00AC               	movwf	___fldiv@b+2
  7228  021E  0021               	movlb	1	; select bank1
  7229  021F  0856               	movf	(efgtoa@u+1)^(0+128),w
  7230  0220  0020               	movlb	0	; select bank0
  7231  0221  00AB               	movwf	___fldiv@b+1
  7232  0222  0021               	movlb	1	; select bank1
  7233  0223  0855               	movf	efgtoa@u^(0+128),w
  7234  0224  0020               	movlb	0	; select bank0
  7235  0225  00AA               	movwf	___fldiv@b
  7236  0226  3188  20DF  3180   	fcall	___fldiv
  7237  0229  0020               	movlb	0	; select bank0
  7238  022A  0829               	movf	?___fldiv+3,w
  7239  022B  0021               	movlb	1	; select bank1
  7240  022C  00D8               	movwf	(efgtoa@u+3)^(0+128)
  7241  022D  0020               	movlb	0	; select bank0
  7242  022E  0828               	movf	?___fldiv+2,w
  7243  022F  0021               	movlb	1	; select bank1
  7244  0230  00D7               	movwf	(efgtoa@u+2)^(0+128)
  7245  0231  0020               	movlb	0	; select bank0
  7246  0232  0827               	movf	?___fldiv+1,w
  7247  0233  0021               	movlb	1	; select bank1
  7248  0234  00D6               	movwf	(efgtoa@u+1)^(0+128)
  7249  0235  0020               	movlb	0	; select bank0
  7250  0236  0826               	movf	?___fldiv,w
  7251  0237  0021               	movlb	1	; select bank1
  7252  0238  00D5               	movwf	efgtoa@u^(0+128)
  7253                           
  7254                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  7255  0239  30FF               	movlw	255
  7256  023A  07D1               	addwf	efgtoa@e^(0+128),f
  7257  023B  30FF               	movlw	255
  7258  023C  3DD2               	addwfc	(efgtoa@e+1)^(0+128),f
  7259  023D                     l6476:	
  7260                           
  7261                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  7262  023D  0021               	movlb	1	; select bank1
  7263  023E  0850               	movf	(efgtoa@g+3)^(0+128),w
  7264  023F  0020               	movlb	0	; select bank0
  7265  0240  00BD               	movwf	___flge@ff1+3
  7266  0241  0021               	movlb	1	; select bank1
  7267  0242  084F               	movf	(efgtoa@g+2)^(0+128),w
  7268  0243  0020               	movlb	0	; select bank0
  7269  0244  00BC               	movwf	___flge@ff1+2
  7270  0245  0021               	movlb	1	; select bank1
  7271  0246  084E               	movf	(efgtoa@g+1)^(0+128),w
  7272  0247  0020               	movlb	0	; select bank0
  7273  0248  00BB               	movwf	___flge@ff1+1
  7274  0249  0021               	movlb	1	; select bank1
  7275  024A  084D               	movf	efgtoa@g^(0+128),w
  7276  024B  0020               	movlb	0	; select bank0
  7277  024C  00BA               	movwf	___flge@ff1
  7278  024D  0021               	movlb	1	; select bank1
  7279  024E  0858               	movf	(efgtoa@u+3)^(0+128),w
  7280  024F  0020               	movlb	0	; select bank0
  7281  0250  00C1               	movwf	___flge@ff2+3
  7282  0251  0021               	movlb	1	; select bank1
  7283  0252  0857               	movf	(efgtoa@u+2)^(0+128),w
  7284  0253  0020               	movlb	0	; select bank0
  7285  0254  00C0               	movwf	___flge@ff2+2
  7286  0255  0021               	movlb	1	; select bank1
  7287  0256  0856               	movf	(efgtoa@u+1)^(0+128),w
  7288  0257  0020               	movlb	0	; select bank0
  7289  0258  00BF               	movwf	___flge@ff2+1
  7290  0259  0021               	movlb	1	; select bank1
  7291  025A  0855               	movf	efgtoa@u^(0+128),w
  7292  025B  0020               	movlb	0	; select bank0
  7293  025C  00BE               	movwf	___flge@ff2
  7294  025D  3196  262E  3180   	fcall	___flge
  7295  0260  1C03               	btfss	3,0
  7296  0261  2A0D               	goto	l6472
  7297  0262                     l6478:	
  7298                           
  7299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  7300  0262  0020               	movlb	0	; select bank0
  7301  0263  0858               	movf	efgtoa@c,w
  7302  0264  00D9               	movwf	??_efgtoa
  7303  0265  01DA               	clrf	??_efgtoa+1
  7304  0266  0859               	movf	??_efgtoa,w
  7305  0267  00F7               	movwf	tolower@c
  7306  0268  085A               	movf	??_efgtoa+1,w
  7307  0269  00F8               	movwf	tolower@c+1
  7308  026A  3190  207B  3180   	fcall	_tolower
  7309  026D  0877               	movf	?_tolower,w
  7310  026E  0020               	movlb	0	; select bank0
  7311  026F  00DB               	movwf	??_efgtoa+2
  7312  0270  085B               	movf	??_efgtoa+2,w
  7313  0271  0021               	movlb	1	; select bank1
  7314  0272  00C2               	movwf	efgtoa@mode^(0+128)
  7315                           
  7316                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  7317  0273  0842               	movf	efgtoa@mode^(0+128),w
  7318  0274  0020               	movlb	0	; select bank0
  7319  0275  00D9               	movwf	??_efgtoa
  7320  0276  0859               	movf	??_efgtoa,w
  7321  0277  0021               	movlb	1	; select bank1
  7322  0278  00BF               	movwf	efgtoa@nmode^(0+128)
  7323                           
  7324                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  7325  0279  3067               	movlw	103
  7326  027A  0642               	xorwf	efgtoa@mode^(0+128),w
  7327  027B  1D03               	btfss	3,2
  7328  027C  2A99               	goto	l1066
  7329                           
  7330                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  7331  027D  0022               	movlb	2	; select bank2
  7332  027E  085A               	movf	_prec^(0+256),w
  7333  027F  045B               	iorwf	(_prec+1)^(0+256),w
  7334  0280  1D03               	btfss	3,2
  7335  0281  2A86               	goto	l1067
  7336                           
  7337                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  7338  0282  3001               	movlw	1
  7339  0283  00DA               	movwf	_prec^(0+256)
  7340  0284  3000               	movlw	0
  7341  0285  00DB               	movwf	(_prec^(0+256)+1)
  7342  0286                     l1067:	
  7343                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 382:   }
  7344                           
  7345                           
  7346                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  7347  0286  085B               	movf	(_prec+1)^(0+256),w
  7348  0287  3A80               	xorlw	128
  7349  0288  0020               	movlb	0	; select bank0
  7350  0289  00D9               	movwf	??_efgtoa
  7351  028A  3080               	movlw	128
  7352  028B  0259               	subwf	??_efgtoa,w
  7353  028C  1D03               	skipz
  7354  028D  2A91               	goto	u6945
  7355  028E  3001               	movlw	1
  7356  028F  0022               	movlb	2	; select bank2
  7357  0290  025A               	subwf	_prec^(0+256),w
  7358  0291                     u6945:	
  7359  0291  1803               	skipnc
  7360  0292  2A9C               	goto	l6490
  7361  0293                     l6488:	
  7362  0293  3006               	movlw	6
  7363  0294  0021               	movlb	1	; select bank1
  7364  0295  00BD               	movwf	efgtoa@p^(0+128)
  7365  0296  3000               	movlw	0
  7366  0297  00BE               	movwf	(efgtoa@p^(0+128)+1)
  7367  0298  2AA4               	goto	l6496
  7368  0299                     l1066:	
  7369                           
  7370                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  7371  0299  0022               	movlb	2	; select bank2
  7372  029A  1BDB               	btfsc	(_prec+1)^(0+256),7
  7373  029B  2A93               	goto	l6488
  7374  029C                     l6490:	
  7375  029C  0022               	movlb	2	; select bank2
  7376  029D  085B               	movf	(_prec+1)^(0+256),w
  7377  029E  0021               	movlb	1	; select bank1
  7378  029F  00BE               	movwf	(efgtoa@p+1)^(0+128)
  7379  02A0  0022               	movlb	2	; select bank2
  7380  02A1  085A               	movf	_prec^(0+256),w
  7381  02A2  0021               	movlb	1	; select bank1
  7382  02A3  00BD               	movwf	efgtoa@p^(0+128)
  7383  02A4                     l6496:	
  7384                           
  7385                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  7386  02A4  3067               	movlw	103
  7387  02A5  0642               	xorwf	efgtoa@mode^(0+128),w
  7388  02A6  1D03               	btfss	3,2
  7389  02A7  2AD7               	goto	l1077
  7390                           
  7391                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  7392  02A8  0852               	movf	(efgtoa@e+1)^(0+128),w
  7393  02A9  3A80               	xorlw	128
  7394  02AA  0020               	movlb	0	; select bank0
  7395  02AB  00D9               	movwf	??_efgtoa
  7396  02AC  307F               	movlw	127
  7397  02AD  0259               	subwf	??_efgtoa,w
  7398  02AE  1D03               	skipz
  7399  02AF  2AB3               	goto	u6975
  7400  02B0  30FC               	movlw	252
  7401  02B1  0021               	movlb	1	; select bank1
  7402  02B2  0251               	subwf	efgtoa@e^(0+128),w
  7403  02B3                     u6975:	
  7404  02B3  1C03               	skipc
  7405  02B4  2AD1               	goto	l6504
  7406  02B5  0021               	movlb	1	; select bank1
  7407  02B6  083D               	movf	efgtoa@p^(0+128),w
  7408  02B7  3EFF               	addlw	255
  7409  02B8  0020               	movlb	0	; select bank0
  7410  02B9  00D9               	movwf	??_efgtoa
  7411  02BA  30FF               	movlw	255
  7412  02BB  0021               	movlb	1	; select bank1
  7413  02BC  3D3E               	addwfc	(efgtoa@p+1)^(0+128),w
  7414  02BD  0020               	movlb	0	; select bank0
  7415  02BE  00DA               	movwf	??_efgtoa+1
  7416  02BF  085A               	movf	??_efgtoa+1,w
  7417  02C0  3A80               	xorlw	128
  7418  02C1  00DB               	movwf	??_efgtoa+2
  7419  02C2  0021               	movlb	1	; select bank1
  7420  02C3  0852               	movf	(efgtoa@e+1)^(0+128),w
  7421  02C4  3A80               	xorlw	128
  7422  02C5  0020               	movlb	0	; select bank0
  7423  02C6  025B               	subwf	??_efgtoa+2,w
  7424  02C7  1D03               	skipz
  7425  02C8  2ACD               	goto	u6985
  7426  02C9  0021               	movlb	1	; select bank1
  7427  02CA  0851               	movf	efgtoa@e^(0+128),w
  7428  02CB  0020               	movlb	0	; select bank0
  7429  02CC  0259               	subwf	??_efgtoa,w
  7430  02CD                     u6985:	
  7431  02CD  1C03               	skipc
  7432  02CE  2AD1               	goto	l6504
  7433                           
  7434                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  7435  02CF  3066               	movlw	102
  7436  02D0  2AD2               	goto	L5
  7437  02D1                     l6504:	
  7438                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  7439                           
  7440                           
  7441                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  7442  02D1  3065               	movlw	101
  7443  02D2                     L5:	
  7444  02D2  0020               	movlb	0	; select bank0
  7445  02D3  00D9               	movwf	??_efgtoa
  7446  02D4  0859               	movf	??_efgtoa,w
  7447  02D5  0021               	movlb	1	; select bank1
  7448  02D6  00BF               	movwf	efgtoa@nmode^(0+128)
  7449  02D7                     l1077:	
  7450                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 395:     }
  7451                           
  7452                           
  7453                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  7454  02D7  083E               	movf	(efgtoa@p+1)^(0+128),w
  7455  02D8  00B5               	movwf	(efgtoa@m+1)^(0+128)
  7456  02D9  083D               	movf	efgtoa@p^(0+128),w
  7457  02DA  00B4               	movwf	efgtoa@m^(0+128)
  7458                           
  7459                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  7460  02DB  3067               	movlw	103
  7461  02DC  0642               	xorwf	efgtoa@mode^(0+128),w
  7462  02DD  1D03               	btfss	3,2
  7463  02DE  2AE4               	goto	l6512
  7464  02DF  3066               	movlw	102
  7465  02E0  063F               	xorwf	efgtoa@nmode^(0+128),w
  7466  02E1  1903               	btfsc	3,2
  7467  02E2  1FD2               	btfss	(efgtoa@e+1)^(0+128),7
  7468  02E3  2AE8               	goto	l6514
  7469  02E4                     l6512:	
  7470                           
  7471                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  7472  02E4  3001               	movlw	1
  7473  02E5  07B4               	addwf	efgtoa@m^(0+128),f
  7474  02E6  3000               	movlw	0
  7475  02E7  3DB5               	addwfc	(efgtoa@m+1)^(0+128),f
  7476  02E8                     l6514:	
  7477                           
  7478                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  7479  02E8  3066               	movlw	102
  7480  02E9  063F               	xorwf	efgtoa@nmode^(0+128),w
  7481  02EA  1D03               	btfss	3,2
  7482  02EB  2B00               	goto	l6526
  7483                           
  7484                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  7485  02EC  1FD2               	btfss	(efgtoa@e+1)^(0+128),7
  7486  02ED  2AF8               	goto	l6522
  7487                           
  7488                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  7489  02EE  303F               	movlw	63
  7490  02EF  00D8               	movwf	(efgtoa@u+3)^(0+128)
  7491  02F0  3080               	movlw	128
  7492  02F1  00D7               	movwf	(efgtoa@u+2)^(0+128)
  7493  02F2  3000               	movlw	0
  7494  02F3  00D6               	movwf	(efgtoa@u+1)^(0+128)
  7495  02F4  3000               	movlw	0
  7496  02F5  00D5               	movwf	efgtoa@u^(0+128)
  7497                           
  7498                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  7499  02F6  01D1               	clrf	efgtoa@e^(0+128)
  7500  02F7  01D2               	clrf	(efgtoa@e+1)^(0+128)
  7501  02F8                     l6522:	
  7502                           
  7503                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  7504  02F8  3067               	movlw	103
  7505  02F9  0642               	xorwf	efgtoa@mode^(0+128),w
  7506  02FA  1903               	btfsc	3,2
  7507  02FB  2B00               	goto	l6526
  7508                           
  7509                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  7510  02FC  0851               	movf	efgtoa@e^(0+128),w
  7511  02FD  07B4               	addwf	efgtoa@m^(0+128),f
  7512  02FE  0852               	movf	(efgtoa@e+1)^(0+128),w
  7513  02FF  3DB5               	addwfc	(efgtoa@m+1)^(0+128),f
  7514  0300                     l6526:	
  7515                           
  7516                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  7517  0300  01CB               	clrf	efgtoa@i^(0+128)
  7518  0301  01CC               	clrf	(efgtoa@i+1)^(0+128)
  7519                           
  7520                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  7521  0302  0850               	movf	(efgtoa@g+3)^(0+128),w
  7522  0303  00C6               	movwf	(efgtoa@h+3)^(0+128)
  7523  0304  084F               	movf	(efgtoa@g+2)^(0+128),w
  7524  0305  00C5               	movwf	(efgtoa@h+2)^(0+128)
  7525  0306  084E               	movf	(efgtoa@g+1)^(0+128),w
  7526  0307  00C4               	movwf	(efgtoa@h+1)^(0+128)
  7527  0308  084D               	movf	efgtoa@g^(0+128),w
  7528  0309  00C3               	movwf	efgtoa@h^(0+128)
  7529                           
  7530                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  7531  030A  0858               	movf	(efgtoa@u+3)^(0+128),w
  7532  030B  00A3               	movwf	(efgtoa@ou+3)^(0+128)
  7533  030C  0857               	movf	(efgtoa@u+2)^(0+128),w
  7534  030D  00A2               	movwf	(efgtoa@ou+2)^(0+128)
  7535  030E  0856               	movf	(efgtoa@u+1)^(0+128),w
  7536  030F  00A1               	movwf	(efgtoa@ou+1)^(0+128)
  7537  0310  0855               	movf	efgtoa@u^(0+128),w
  7538  0311  00A0               	movwf	efgtoa@ou^(0+128)
  7539  0312                     l6536:	
  7540                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  7541                           
  7542                           
  7543                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  7544  0312  084C               	movf	(efgtoa@i+1)^(0+128),w
  7545  0313  3A80               	xorlw	128
  7546  0314  0020               	movlb	0	; select bank0
  7547  0315  00D9               	movwf	??_efgtoa
  7548  0316  0021               	movlb	1	; select bank1
  7549  0317  0835               	movf	(efgtoa@m+1)^(0+128),w
  7550  0318  3A80               	xorlw	128
  7551  0319  0020               	movlb	0	; select bank0
  7552  031A  0259               	subwf	??_efgtoa,w
  7553  031B  1D03               	skipz
  7554  031C  2B20               	goto	u7055
  7555  031D  0021               	movlb	1	; select bank1
  7556  031E  0834               	movf	efgtoa@m^(0+128),w
  7557  031F  024B               	subwf	efgtoa@i^(0+128),w
  7558  0320                     u7055:	
  7559  0320  1803               	btfsc	3,0
  7560  0321  2BF0               	goto	l6538
  7561                           
  7562                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  7563  0322  0021               	movlb	1	; select bank1
  7564  0323  0858               	movf	(efgtoa@u+3)^(0+128),w
  7565  0324  0020               	movlb	0	; select bank0
  7566  0325  00A9               	movwf	___fldiv@a+3
  7567  0326  0021               	movlb	1	; select bank1
  7568  0327  0857               	movf	(efgtoa@u+2)^(0+128),w
  7569  0328  0020               	movlb	0	; select bank0
  7570  0329  00A8               	movwf	___fldiv@a+2
  7571  032A  0021               	movlb	1	; select bank1
  7572  032B  0856               	movf	(efgtoa@u+1)^(0+128),w
  7573  032C  0020               	movlb	0	; select bank0
  7574  032D  00A7               	movwf	___fldiv@a+1
  7575  032E  0021               	movlb	1	; select bank1
  7576  032F  0855               	movf	efgtoa@u^(0+128),w
  7577  0330  0020               	movlb	0	; select bank0
  7578  0331  00A6               	movwf	___fldiv@a
  7579  0332  0021               	movlb	1	; select bank1
  7580  0333  0846               	movf	(efgtoa@h+3)^(0+128),w
  7581  0334  0020               	movlb	0	; select bank0
  7582  0335  00AD               	movwf	___fldiv@b+3
  7583  0336  0021               	movlb	1	; select bank1
  7584  0337  0845               	movf	(efgtoa@h+2)^(0+128),w
  7585  0338  0020               	movlb	0	; select bank0
  7586  0339  00AC               	movwf	___fldiv@b+2
  7587  033A  0021               	movlb	1	; select bank1
  7588  033B  0844               	movf	(efgtoa@h+1)^(0+128),w
  7589  033C  0020               	movlb	0	; select bank0
  7590  033D  00AB               	movwf	___fldiv@b+1
  7591  033E  0021               	movlb	1	; select bank1
  7592  033F  0843               	movf	efgtoa@h^(0+128),w
  7593  0340  0020               	movlb	0	; select bank0
  7594  0341  00AA               	movwf	___fldiv@b
  7595  0342  3188  20DF  3180   	fcall	___fldiv
  7596  0345  0020               	movlb	0	; select bank0
  7597  0346  0829               	movf	?___fldiv+3,w
  7598  0347  00C3               	movwf	floorf@x+3
  7599  0348  0828               	movf	?___fldiv+2,w
  7600  0349  00C2               	movwf	floorf@x+2
  7601  034A  0827               	movf	?___fldiv+1,w
  7602  034B  00C1               	movwf	floorf@x+1
  7603  034C  0826               	movf	?___fldiv,w
  7604  034D  00C0               	movwf	floorf@x
  7605  034E  3186  26F1  3180   	fcall	_floorf
  7606  0351  0020               	movlb	0	; select bank0
  7607  0352  0843               	movf	?_floorf+3,w
  7608  0353  0021               	movlb	1	; select bank1
  7609  0354  00CA               	movwf	(efgtoa@l+3)^(0+128)
  7610  0355  0020               	movlb	0	; select bank0
  7611  0356  0842               	movf	?_floorf+2,w
  7612  0357  0021               	movlb	1	; select bank1
  7613  0358  00C9               	movwf	(efgtoa@l+2)^(0+128)
  7614  0359  0020               	movlb	0	; select bank0
  7615  035A  0841               	movf	?_floorf+1,w
  7616  035B  0021               	movlb	1	; select bank1
  7617  035C  00C8               	movwf	(efgtoa@l+1)^(0+128)
  7618  035D  0020               	movlb	0	; select bank0
  7619  035E  0840               	movf	?_floorf,w
  7620  035F  0021               	movlb	1	; select bank1
  7621  0360  00C7               	movwf	efgtoa@l^(0+128)
  7622                           
  7623                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  7624  0361  084A               	movf	(efgtoa@l+3)^(0+128),w
  7625  0362  00F4               	movwf	___fltol@f1+3
  7626  0363  0849               	movf	(efgtoa@l+2)^(0+128),w
  7627  0364  00F3               	movwf	___fltol@f1+2
  7628  0365  0848               	movf	(efgtoa@l+1)^(0+128),w
  7629  0366  00F2               	movwf	___fltol@f1+1
  7630  0367  0847               	movf	efgtoa@l^(0+128),w
  7631  0368  00F1               	movwf	___fltol@f1
  7632  0369  3194  24EC  3180   	fcall	___fltol
  7633  036C  0872               	movf	?___fltol+1,w
  7634  036D  0021               	movlb	1	; select bank1
  7635  036E  00B9               	movwf	(efgtoa@d+1)^(0+128)
  7636  036F  0871               	movf	?___fltol,w
  7637  0370  00B8               	movwf	efgtoa@d^(0+128)
  7638                           
  7639                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  7640  0371  084A               	movf	(efgtoa@l+3)^(0+128),w
  7641  0372  0020               	movlb	0	; select bank0
  7642  0373  00A7               	movwf	___flmul@a+3
  7643  0374  0021               	movlb	1	; select bank1
  7644  0375  0849               	movf	(efgtoa@l+2)^(0+128),w
  7645  0376  0020               	movlb	0	; select bank0
  7646  0377  00A6               	movwf	___flmul@a+2
  7647  0378  0021               	movlb	1	; select bank1
  7648  0379  0848               	movf	(efgtoa@l+1)^(0+128),w
  7649  037A  0020               	movlb	0	; select bank0
  7650  037B  00A5               	movwf	___flmul@a+1
  7651  037C  0021               	movlb	1	; select bank1
  7652  037D  0847               	movf	efgtoa@l^(0+128),w
  7653  037E  0020               	movlb	0	; select bank0
  7654  037F  00A4               	movwf	___flmul@a
  7655  0380  0021               	movlb	1	; select bank1
  7656  0381  0858               	movf	(efgtoa@u+3)^(0+128),w
  7657  0382  0020               	movlb	0	; select bank0
  7658  0383  00A3               	movwf	___flmul@b+3
  7659  0384  0021               	movlb	1	; select bank1
  7660  0385  0857               	movf	(efgtoa@u+2)^(0+128),w
  7661  0386  0020               	movlb	0	; select bank0
  7662  0387  00A2               	movwf	___flmul@b+2
  7663  0388  0021               	movlb	1	; select bank1
  7664  0389  0856               	movf	(efgtoa@u+1)^(0+128),w
  7665  038A  0020               	movlb	0	; select bank0
  7666  038B  00A1               	movwf	___flmul@b+1
  7667  038C  0021               	movlb	1	; select bank1
  7668  038D  0855               	movf	efgtoa@u^(0+128),w
  7669  038E  0020               	movlb	0	; select bank0
  7670  038F  00A0               	movwf	___flmul@b
  7671  0390  318D  25D4  3180   	fcall	___flmul
  7672  0393  0020               	movlb	0	; select bank0
  7673  0394  0823               	movf	?___flmul+3,w
  7674  0395  00BD               	movwf	___flsub@a+3
  7675  0396  0822               	movf	?___flmul+2,w
  7676  0397  00BC               	movwf	___flsub@a+2
  7677  0398  0821               	movf	?___flmul+1,w
  7678  0399  00BB               	movwf	___flsub@a+1
  7679  039A  0820               	movf	?___flmul,w
  7680  039B  00BA               	movwf	___flsub@a
  7681  039C  0021               	movlb	1	; select bank1
  7682  039D  0846               	movf	(efgtoa@h+3)^(0+128),w
  7683  039E  0020               	movlb	0	; select bank0
  7684  039F  00C1               	movwf	___flsub@b+3
  7685  03A0  0021               	movlb	1	; select bank1
  7686  03A1  0845               	movf	(efgtoa@h+2)^(0+128),w
  7687  03A2  0020               	movlb	0	; select bank0
  7688  03A3  00C0               	movwf	___flsub@b+2
  7689  03A4  0021               	movlb	1	; select bank1
  7690  03A5  0844               	movf	(efgtoa@h+1)^(0+128),w
  7691  03A6  0020               	movlb	0	; select bank0
  7692  03A7  00BF               	movwf	___flsub@b+1
  7693  03A8  0021               	movlb	1	; select bank1
  7694  03A9  0843               	movf	efgtoa@h^(0+128),w
  7695  03AA  0020               	movlb	0	; select bank0
  7696  03AB  00BE               	movwf	___flsub@b
  7697  03AC  3190  201D  3180   	fcall	___flsub
  7698  03AF  0020               	movlb	0	; select bank0
  7699  03B0  083D               	movf	?___flsub+3,w
  7700  03B1  0021               	movlb	1	; select bank1
  7701  03B2  00C6               	movwf	(efgtoa@h+3)^(0+128)
  7702  03B3  0020               	movlb	0	; select bank0
  7703  03B4  083C               	movf	?___flsub+2,w
  7704  03B5  0021               	movlb	1	; select bank1
  7705  03B6  00C5               	movwf	(efgtoa@h+2)^(0+128)
  7706  03B7  0020               	movlb	0	; select bank0
  7707  03B8  083B               	movf	?___flsub+1,w
  7708  03B9  0021               	movlb	1	; select bank1
  7709  03BA  00C4               	movwf	(efgtoa@h+1)^(0+128)
  7710  03BB  0020               	movlb	0	; select bank0
  7711  03BC  083A               	movf	?___flsub,w
  7712  03BD  0021               	movlb	1	; select bank1
  7713  03BE  00C3               	movwf	efgtoa@h^(0+128)
  7714                           
  7715                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  7716  03BF  3041               	movlw	65
  7717  03C0  0020               	movlb	0	; select bank0
  7718  03C1  00A9               	movwf	___fldiv@a+3
  7719  03C2  3020               	movlw	32
  7720  03C3  00A8               	movwf	___fldiv@a+2
  7721  03C4  3000               	movlw	0
  7722  03C5  00A7               	movwf	___fldiv@a+1
  7723  03C6  3000               	movlw	0
  7724  03C7  00A6               	movwf	___fldiv@a
  7725  03C8  0021               	movlb	1	; select bank1
  7726  03C9  0858               	movf	(efgtoa@u+3)^(0+128),w
  7727  03CA  0020               	movlb	0	; select bank0
  7728  03CB  00AD               	movwf	___fldiv@b+3
  7729  03CC  0021               	movlb	1	; select bank1
  7730  03CD  0857               	movf	(efgtoa@u+2)^(0+128),w
  7731  03CE  0020               	movlb	0	; select bank0
  7732  03CF  00AC               	movwf	___fldiv@b+2
  7733  03D0  0021               	movlb	1	; select bank1
  7734  03D1  0856               	movf	(efgtoa@u+1)^(0+128),w
  7735  03D2  0020               	movlb	0	; select bank0
  7736  03D3  00AB               	movwf	___fldiv@b+1
  7737  03D4  0021               	movlb	1	; select bank1
  7738  03D5  0855               	movf	efgtoa@u^(0+128),w
  7739  03D6  0020               	movlb	0	; select bank0
  7740  03D7  00AA               	movwf	___fldiv@b
  7741  03D8  3188  20DF  3180   	fcall	___fldiv
  7742  03DB  0020               	movlb	0	; select bank0
  7743  03DC  0829               	movf	?___fldiv+3,w
  7744  03DD  0021               	movlb	1	; select bank1
  7745  03DE  00D8               	movwf	(efgtoa@u+3)^(0+128)
  7746  03DF  0020               	movlb	0	; select bank0
  7747  03E0  0828               	movf	?___fldiv+2,w
  7748  03E1  0021               	movlb	1	; select bank1
  7749  03E2  00D7               	movwf	(efgtoa@u+2)^(0+128)
  7750  03E3  0020               	movlb	0	; select bank0
  7751  03E4  0827               	movf	?___fldiv+1,w
  7752  03E5  0021               	movlb	1	; select bank1
  7753  03E6  00D6               	movwf	(efgtoa@u+1)^(0+128)
  7754  03E7  0020               	movlb	0	; select bank0
  7755  03E8  0826               	movf	?___fldiv,w
  7756  03E9  0021               	movlb	1	; select bank1
  7757  03EA  00D5               	movwf	efgtoa@u^(0+128)
  7758                           
  7759                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  7760  03EB  3001               	movlw	1
  7761  03EC  07CB               	addwf	efgtoa@i^(0+128),f
  7762  03ED  3000               	movlw	0
  7763  03EE  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  7764  03EF  2B12               	goto	l6536
  7765  03F0                     l6538:	
  7766                           
  7767                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  7768  03F0  3040               	movlw	64
  7769  03F1  0020               	movlb	0	; select bank0
  7770  03F2  00A3               	movwf	___flmul@b+3
  7771  03F3  30A0               	movlw	160
  7772  03F4  00A2               	movwf	___flmul@b+2
  7773  03F5  3000               	movlw	0
  7774  03F6  00A1               	movwf	___flmul@b+1
  7775  03F7  3000               	movlw	0
  7776  03F8  00A0               	movwf	___flmul@b
  7777  03F9  0021               	movlb	1	; select bank1
  7778  03FA  0858               	movf	(efgtoa@u+3)^(0+128),w
  7779  03FB  0020               	movlb	0	; select bank0
  7780  03FC  00A7               	movwf	___flmul@a+3
  7781  03FD  0021               	movlb	1	; select bank1
  7782  03FE  0857               	movf	(efgtoa@u+2)^(0+128),w
  7783  03FF  0020               	movlb	0	; select bank0
  7784  0400  00A6               	movwf	___flmul@a+2
  7785  0401  0021               	movlb	1	; select bank1
  7786  0402  0856               	movf	(efgtoa@u+1)^(0+128),w
  7787  0403  0020               	movlb	0	; select bank0
  7788  0404  00A5               	movwf	___flmul@a+1
  7789  0405  0021               	movlb	1	; select bank1
  7790  0406  0855               	movf	efgtoa@u^(0+128),w
  7791  0407  0020               	movlb	0	; select bank0
  7792  0408  00A4               	movwf	___flmul@a
  7793  0409  318D  25D4  3180   	fcall	___flmul
  7794  040C  0020               	movlb	0	; select bank0
  7795  040D  0823               	movf	?___flmul+3,w
  7796  040E  0021               	movlb	1	; select bank1
  7797  040F  00CA               	movwf	(efgtoa@l+3)^(0+128)
  7798  0410  0020               	movlb	0	; select bank0
  7799  0411  0822               	movf	?___flmul+2,w
  7800  0412  0021               	movlb	1	; select bank1
  7801  0413  00C9               	movwf	(efgtoa@l+2)^(0+128)
  7802  0414  0020               	movlb	0	; select bank0
  7803  0415  0821               	movf	?___flmul+1,w
  7804  0416  0021               	movlb	1	; select bank1
  7805  0417  00C8               	movwf	(efgtoa@l+1)^(0+128)
  7806  0418  0020               	movlb	0	; select bank0
  7807  0419  0820               	movf	?___flmul,w
  7808  041A  0021               	movlb	1	; select bank1
  7809  041B  00C7               	movwf	efgtoa@l^(0+128)
  7810                           
  7811                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  7812  041C  0846               	movf	(efgtoa@h+3)^(0+128),w
  7813  041D  0020               	movlb	0	; select bank0
  7814  041E  00BD               	movwf	___flge@ff1+3
  7815  041F  0021               	movlb	1	; select bank1
  7816  0420  0845               	movf	(efgtoa@h+2)^(0+128),w
  7817  0421  0020               	movlb	0	; select bank0
  7818  0422  00BC               	movwf	___flge@ff1+2
  7819  0423  0021               	movlb	1	; select bank1
  7820  0424  0844               	movf	(efgtoa@h+1)^(0+128),w
  7821  0425  0020               	movlb	0	; select bank0
  7822  0426  00BB               	movwf	___flge@ff1+1
  7823  0427  0021               	movlb	1	; select bank1
  7824  0428  0843               	movf	efgtoa@h^(0+128),w
  7825  0429  0020               	movlb	0	; select bank0
  7826  042A  00BA               	movwf	___flge@ff1
  7827  042B  0021               	movlb	1	; select bank1
  7828  042C  084A               	movf	(efgtoa@l+3)^(0+128),w
  7829  042D  0020               	movlb	0	; select bank0
  7830  042E  00C1               	movwf	___flge@ff2+3
  7831  042F  0021               	movlb	1	; select bank1
  7832  0430  0849               	movf	(efgtoa@l+2)^(0+128),w
  7833  0431  0020               	movlb	0	; select bank0
  7834  0432  00C0               	movwf	___flge@ff2+2
  7835  0433  0021               	movlb	1	; select bank1
  7836  0434  0848               	movf	(efgtoa@l+1)^(0+128),w
  7837  0435  0020               	movlb	0	; select bank0
  7838  0436  00BF               	movwf	___flge@ff2+1
  7839  0437  0021               	movlb	1	; select bank1
  7840  0438  0847               	movf	efgtoa@l^(0+128),w
  7841  0439  0020               	movlb	0	; select bank0
  7842  043A  00BE               	movwf	___flge@ff2
  7843  043B  3196  262E  3180   	fcall	___flge
  7844  043E  1803               	btfsc	3,0
  7845  043F  2C43               	goto	l6542
  7846                           
  7847                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  7848  0440  3000               	movlw	0
  7849  0441  0021               	movlb	1	; select bank1
  7850  0442  2C5D               	goto	L6
  7851  0443                     l6542:	
  7852                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  7853                           
  7854                           
  7855                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  7856  0443  0021               	movlb	1	; select bank1
  7857  0444  0846               	movf	(efgtoa@h+3)^(0+128),w
  7858  0445  00F4               	movwf	___fleq@ff1+3
  7859  0446  0845               	movf	(efgtoa@h+2)^(0+128),w
  7860  0447  00F3               	movwf	___fleq@ff1+2
  7861  0448  0844               	movf	(efgtoa@h+1)^(0+128),w
  7862  0449  00F2               	movwf	___fleq@ff1+1
  7863  044A  0843               	movf	efgtoa@h^(0+128),w
  7864  044B  00F1               	movwf	___fleq@ff1
  7865  044C  084A               	movf	(efgtoa@l+3)^(0+128),w
  7866  044D  00F8               	movwf	___fleq@ff2+3
  7867  044E  0849               	movf	(efgtoa@l+2)^(0+128),w
  7868  044F  00F7               	movwf	___fleq@ff2+2
  7869  0450  0848               	movf	(efgtoa@l+1)^(0+128),w
  7870  0451  00F6               	movwf	___fleq@ff2+1
  7871  0452  0847               	movf	efgtoa@l^(0+128),w
  7872  0453  00F5               	movwf	___fleq@ff2
  7873  0454  3188  2000  3180   	fcall	___fleq
  7874  0457  1C03               	btfss	3,0
  7875  0458  2C64               	goto	l6548
  7876  0459  0021               	movlb	1	; select bank1
  7877  045A  1838               	btfsc	efgtoa@d^(0+128),0
  7878  045B  2C64               	goto	l6548
  7879                           
  7880                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  7881  045C  3000               	movlw	0
  7882  045D                     L6:	
  7883  045D  00CA               	movwf	(efgtoa@l+3)^(0+128)
  7884  045E  3000               	movlw	0
  7885  045F  00C9               	movwf	(efgtoa@l+2)^(0+128)
  7886  0460  3000               	movlw	0
  7887  0461  00C8               	movwf	(efgtoa@l+1)^(0+128)
  7888  0462  3000               	movlw	0
  7889  0463  00C7               	movwf	efgtoa@l^(0+128)
  7890  0464                     l6548:	
  7891                           
  7892                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  7893  0464  0021               	movlb	1	; select bank1
  7894  0465  084A               	movf	(efgtoa@l+3)^(0+128),w
  7895  0466  00F4               	movwf	___fladd@b+3
  7896  0467  0849               	movf	(efgtoa@l+2)^(0+128),w
  7897  0468  00F3               	movwf	___fladd@b+2
  7898  0469  0848               	movf	(efgtoa@l+1)^(0+128),w
  7899  046A  00F2               	movwf	___fladd@b+1
  7900  046B  0847               	movf	efgtoa@l^(0+128),w
  7901  046C  00F1               	movwf	___fladd@b
  7902  046D  0850               	movf	(efgtoa@g+3)^(0+128),w
  7903  046E  00F8               	movwf	___fladd@a+3
  7904  046F  084F               	movf	(efgtoa@g+2)^(0+128),w
  7905  0470  00F7               	movwf	___fladd@a+2
  7906  0471  084E               	movf	(efgtoa@g+1)^(0+128),w
  7907  0472  00F6               	movwf	___fladd@a+1
  7908  0473  084D               	movf	efgtoa@g^(0+128),w
  7909  0474  00F5               	movwf	___fladd@a
  7910  0475  318B  23F2  3180   	fcall	___fladd
  7911  0478  0874               	movf	?___fladd+3,w
  7912  0479  0021               	movlb	1	; select bank1
  7913  047A  00C6               	movwf	(efgtoa@h+3)^(0+128)
  7914  047B  0873               	movf	?___fladd+2,w
  7915  047C  00C5               	movwf	(efgtoa@h+2)^(0+128)
  7916  047D  0872               	movf	?___fladd+1,w
  7917  047E  00C4               	movwf	(efgtoa@h+1)^(0+128)
  7918  047F  0871               	movf	?___fladd,w
  7919  0480  00C3               	movwf	efgtoa@h^(0+128)
  7920                           
  7921                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  7922  0481  0823               	movf	(efgtoa@ou+3)^(0+128),w
  7923  0482  00D8               	movwf	(efgtoa@u+3)^(0+128)
  7924  0483  0822               	movf	(efgtoa@ou+2)^(0+128),w
  7925  0484  00D7               	movwf	(efgtoa@u+2)^(0+128)
  7926  0485  0821               	movf	(efgtoa@ou+1)^(0+128),w
  7927  0486  00D6               	movwf	(efgtoa@u+1)^(0+128)
  7928  0487  0820               	movf	efgtoa@ou^(0+128),w
  7929  0488  00D5               	movwf	efgtoa@u^(0+128)
  7930                           
  7931                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  7932  0489  3065               	movlw	101
  7933  048A  063F               	xorwf	efgtoa@nmode^(0+128),w
  7934  048B  1903               	btfsc	3,2
  7935  048C  2C92               	goto	l6556
  7936  048D  0852               	movf	(efgtoa@e+1)^(0+128),w
  7937  048E  00B7               	movwf	(efgtoa@ne+1)^(0+128)
  7938  048F  0851               	movf	efgtoa@e^(0+128),w
  7939  0490  00B6               	movwf	efgtoa@ne^(0+128)
  7940  0491  2C94               	goto	l1095
  7941  0492                     l6556:	
  7942  0492  01B6               	clrf	efgtoa@ne^(0+128)
  7943  0493  01B7               	clrf	(efgtoa@ne+1)^(0+128)
  7944  0494                     l1095:	
  7945                           
  7946                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  7947  0494  01B2               	clrf	efgtoa@pp^(0+128)
  7948  0495  01B3               	clrf	(efgtoa@pp+1)^(0+128)
  7949                           
  7950                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  7951  0496  01B0               	clrf	efgtoa@t^(0+128)
  7952  0497  01B1               	clrf	(efgtoa@t+1)^(0+128)
  7953                           
  7954                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  7955  0498  01CB               	clrf	efgtoa@i^(0+128)
  7956  0499  01CC               	clrf	(efgtoa@i+1)^(0+128)
  7957                           
  7958                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  7959  049A  2DD1               	goto	l6606
  7960  049B                     l6558:	
  7961                           
  7962                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  7963  049B  0021               	movlb	1	; select bank1
  7964  049C  0858               	movf	(efgtoa@u+3)^(0+128),w
  7965  049D  0020               	movlb	0	; select bank0
  7966  049E  00A9               	movwf	___fldiv@a+3
  7967  049F  0021               	movlb	1	; select bank1
  7968  04A0  0857               	movf	(efgtoa@u+2)^(0+128),w
  7969  04A1  0020               	movlb	0	; select bank0
  7970  04A2  00A8               	movwf	___fldiv@a+2
  7971  04A3  0021               	movlb	1	; select bank1
  7972  04A4  0856               	movf	(efgtoa@u+1)^(0+128),w
  7973  04A5  0020               	movlb	0	; select bank0
  7974  04A6  00A7               	movwf	___fldiv@a+1
  7975  04A7  0021               	movlb	1	; select bank1
  7976  04A8  0855               	movf	efgtoa@u^(0+128),w
  7977  04A9  0020               	movlb	0	; select bank0
  7978  04AA  00A6               	movwf	___fldiv@a
  7979  04AB  0021               	movlb	1	; select bank1
  7980  04AC  0846               	movf	(efgtoa@h+3)^(0+128),w
  7981  04AD  0020               	movlb	0	; select bank0
  7982  04AE  00AD               	movwf	___fldiv@b+3
  7983  04AF  0021               	movlb	1	; select bank1
  7984  04B0  0845               	movf	(efgtoa@h+2)^(0+128),w
  7985  04B1  0020               	movlb	0	; select bank0
  7986  04B2  00AC               	movwf	___fldiv@b+2
  7987  04B3  0021               	movlb	1	; select bank1
  7988  04B4  0844               	movf	(efgtoa@h+1)^(0+128),w
  7989  04B5  0020               	movlb	0	; select bank0
  7990  04B6  00AB               	movwf	___fldiv@b+1
  7991  04B7  0021               	movlb	1	; select bank1
  7992  04B8  0843               	movf	efgtoa@h^(0+128),w
  7993  04B9  0020               	movlb	0	; select bank0
  7994  04BA  00AA               	movwf	___fldiv@b
  7995  04BB  3188  20DF  3180   	fcall	___fldiv
  7996  04BE  0020               	movlb	0	; select bank0
  7997  04BF  0829               	movf	?___fldiv+3,w
  7998  04C0  00C3               	movwf	floorf@x+3
  7999  04C1  0828               	movf	?___fldiv+2,w
  8000  04C2  00C2               	movwf	floorf@x+2
  8001  04C3  0827               	movf	?___fldiv+1,w
  8002  04C4  00C1               	movwf	floorf@x+1
  8003  04C5  0826               	movf	?___fldiv,w
  8004  04C6  00C0               	movwf	floorf@x
  8005  04C7  3186  26F1  3180   	fcall	_floorf
  8006  04CA  0020               	movlb	0	; select bank0
  8007  04CB  0843               	movf	?_floorf+3,w
  8008  04CC  0021               	movlb	1	; select bank1
  8009  04CD  00CA               	movwf	(efgtoa@l+3)^(0+128)
  8010  04CE  0020               	movlb	0	; select bank0
  8011  04CF  0842               	movf	?_floorf+2,w
  8012  04D0  0021               	movlb	1	; select bank1
  8013  04D1  00C9               	movwf	(efgtoa@l+2)^(0+128)
  8014  04D2  0020               	movlb	0	; select bank0
  8015  04D3  0841               	movf	?_floorf+1,w
  8016  04D4  0021               	movlb	1	; select bank1
  8017  04D5  00C8               	movwf	(efgtoa@l+1)^(0+128)
  8018  04D6  0020               	movlb	0	; select bank0
  8019  04D7  0840               	movf	?_floorf,w
  8020  04D8  0021               	movlb	1	; select bank1
  8021  04D9  00C7               	movwf	efgtoa@l^(0+128)
  8022                           
  8023                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  8024  04DA  084A               	movf	(efgtoa@l+3)^(0+128),w
  8025  04DB  00F4               	movwf	___fltol@f1+3
  8026  04DC  0849               	movf	(efgtoa@l+2)^(0+128),w
  8027  04DD  00F3               	movwf	___fltol@f1+2
  8028  04DE  0848               	movf	(efgtoa@l+1)^(0+128),w
  8029  04DF  00F2               	movwf	___fltol@f1+1
  8030  04E0  0847               	movf	efgtoa@l^(0+128),w
  8031  04E1  00F1               	movwf	___fltol@f1
  8032  04E2  3194  24EC  3180   	fcall	___fltol
  8033  04E5  0872               	movf	?___fltol+1,w
  8034  04E6  0021               	movlb	1	; select bank1
  8035  04E7  00B9               	movwf	(efgtoa@d+1)^(0+128)
  8036  04E8  0871               	movf	?___fltol,w
  8037  04E9  00B8               	movwf	efgtoa@d^(0+128)
  8038                           
  8039                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  8040  04EA  0022               	movlb	2	; select bank2
  8041  04EB  1A5C               	btfsc	_flags^(0+256),4
  8042  04EC  2CFC               	goto	l6570
  8043  04ED  0021               	movlb	1	; select bank1
  8044  04EE  0838               	movf	efgtoa@d^(0+128),w
  8045  04EF  0439               	iorwf	(efgtoa@d+1)^(0+128),w
  8046  04F0  1D03               	btfss	3,2
  8047  04F1  2CFC               	goto	l6570
  8048  04F2  3067               	movlw	103
  8049  04F3  0642               	xorwf	efgtoa@mode^(0+128),w
  8050  04F4  1903               	btfsc	3,2
  8051  04F5  1FB7               	btfss	(efgtoa@ne+1)^(0+128),7
  8052  04F6  2CFC               	goto	l6570
  8053                           
  8054                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  8055  04F7  3001               	movlw	1
  8056  04F8  07B0               	addwf	efgtoa@t^(0+128),f
  8057  04F9  3000               	movlw	0
  8058  04FA  3DB1               	addwfc	(efgtoa@t+1)^(0+128),f
  8059                           
  8060                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  8061  04FB  2D4F               	goto	l6598
  8062  04FC                     l6570:	
  8063                           
  8064                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  8065  04FC  0021               	movlb	1	; select bank1
  8066  04FD  0832               	movf	efgtoa@pp^(0+128),w
  8067  04FE  0433               	iorwf	(efgtoa@pp+1)^(0+128),w
  8068  04FF  1903               	btfsc	3,2
  8069  0500  1FB7               	btfss	(efgtoa@ne+1)^(0+128),7
  8070  0501  2D1B               	goto	l6590
  8071                           
  8072                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  8073  0502  302E               	movlw	46
  8074  0503  0020               	movlb	0	; select bank0
  8075  0504  00D9               	movwf	??_efgtoa
  8076  0505  0021               	movlb	1	; select bank1
  8077  0506  0853               	movf	efgtoa@n^(0+128),w
  8078  0507  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8079  0508  0086               	movwf	6
  8080  0509  3002               	movlw	2	; select bank4/5
  8081  050A  0087               	movwf	7
  8082  050B  0020               	movlb	0	; select bank0
  8083  050C  0859               	movf	??_efgtoa,w
  8084  050D  0081               	movwf	1
  8085  050E  3001               	movlw	1
  8086  050F  0021               	movlb	1	; select bank1
  8087  0510  07D3               	addwf	efgtoa@n^(0+128),f
  8088  0511  3000               	movlw	0
  8089  0512  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  8090                           
  8091                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  8092  0513  30FF               	movlw	255
  8093  0514  07C0               	addwf	efgtoa@w^(0+128),f
  8094  0515  30FF               	movlw	255
  8095  0516  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  8096                           
  8097                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  8098  0517  3001               	movlw	1
  8099  0518  00B2               	movwf	efgtoa@pp^(0+128)
  8100  0519  3000               	movlw	0
  8101  051A  00B3               	movwf	(efgtoa@pp^(0+128)+1)
  8102  051B                     l6590:	
  8103                           
  8104                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  8105  051B  0830               	movf	efgtoa@t^(0+128),w
  8106  051C  0431               	iorwf	(efgtoa@t+1)^(0+128),w
  8107  051D  1903               	btfsc	3,2
  8108  051E  2D39               	goto	l6592
  8109                           
  8110                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  8111  051F  3030               	movlw	48
  8112  0520  0020               	movlb	0	; select bank0
  8113  0521  00D9               	movwf	??_efgtoa
  8114  0522  0021               	movlb	1	; select bank1
  8115  0523  0853               	movf	efgtoa@n^(0+128),w
  8116  0524  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8117  0525  0086               	movwf	6
  8118  0526  3002               	movlw	2	; select bank4/5
  8119  0527  0087               	movwf	7
  8120  0528  0020               	movlb	0	; select bank0
  8121  0529  0859               	movf	??_efgtoa,w
  8122  052A  0081               	movwf	1
  8123  052B  3001               	movlw	1
  8124  052C  0021               	movlb	1	; select bank1
  8125  052D  07D3               	addwf	efgtoa@n^(0+128),f
  8126  052E  3000               	movlw	0
  8127  052F  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  8128                           
  8129                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  8130  0530  30FF               	movlw	255
  8131  0531  07C0               	addwf	efgtoa@w^(0+128),f
  8132  0532  30FF               	movlw	255
  8133  0533  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  8134                           
  8135                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  8136  0534  30FF               	movlw	255
  8137  0535  07B0               	addwf	efgtoa@t^(0+128),f
  8138  0536  30FF               	movlw	255
  8139  0537  3DB1               	addwfc	(efgtoa@t+1)^(0+128),f
  8140  0538  2D1B               	goto	l6590
  8141  0539                     l6592:	
  8142                           
  8143                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  8144  0539  0838               	movf	efgtoa@d^(0+128),w
  8145  053A  3E30               	addlw	48
  8146  053B  0020               	movlb	0	; select bank0
  8147  053C  00D9               	movwf	??_efgtoa
  8148  053D  0021               	movlb	1	; select bank1
  8149  053E  0853               	movf	efgtoa@n^(0+128),w
  8150  053F  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8151  0540  0086               	movwf	6
  8152  0541  3002               	movlw	2	; select bank4/5
  8153  0542  0087               	movwf	7
  8154  0543  0020               	movlb	0	; select bank0
  8155  0544  0859               	movf	??_efgtoa,w
  8156  0545  0081               	movwf	1
  8157  0546  3001               	movlw	1
  8158  0547  0021               	movlb	1	; select bank1
  8159  0548  07D3               	addwf	efgtoa@n^(0+128),f
  8160  0549  3000               	movlw	0
  8161  054A  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  8162                           
  8163                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  8164  054B  30FF               	movlw	255
  8165  054C  07C0               	addwf	efgtoa@w^(0+128),f
  8166  054D  30FF               	movlw	255
  8167  054E  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  8168  054F                     l6598:	
  8169                           
  8170                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  8171  054F  084A               	movf	(efgtoa@l+3)^(0+128),w
  8172  0550  0020               	movlb	0	; select bank0
  8173  0551  00A7               	movwf	___flmul@a+3
  8174  0552  0021               	movlb	1	; select bank1
  8175  0553  0849               	movf	(efgtoa@l+2)^(0+128),w
  8176  0554  0020               	movlb	0	; select bank0
  8177  0555  00A6               	movwf	___flmul@a+2
  8178  0556  0021               	movlb	1	; select bank1
  8179  0557  0848               	movf	(efgtoa@l+1)^(0+128),w
  8180  0558  0020               	movlb	0	; select bank0
  8181  0559  00A5               	movwf	___flmul@a+1
  8182  055A  0021               	movlb	1	; select bank1
  8183  055B  0847               	movf	efgtoa@l^(0+128),w
  8184  055C  0020               	movlb	0	; select bank0
  8185  055D  00A4               	movwf	___flmul@a
  8186  055E  0021               	movlb	1	; select bank1
  8187  055F  0858               	movf	(efgtoa@u+3)^(0+128),w
  8188  0560  0020               	movlb	0	; select bank0
  8189  0561  00A3               	movwf	___flmul@b+3
  8190  0562  0021               	movlb	1	; select bank1
  8191  0563  0857               	movf	(efgtoa@u+2)^(0+128),w
  8192  0564  0020               	movlb	0	; select bank0
  8193  0565  00A2               	movwf	___flmul@b+2
  8194  0566  0021               	movlb	1	; select bank1
  8195  0567  0856               	movf	(efgtoa@u+1)^(0+128),w
  8196  0568  0020               	movlb	0	; select bank0
  8197  0569  00A1               	movwf	___flmul@b+1
  8198  056A  0021               	movlb	1	; select bank1
  8199  056B  0855               	movf	efgtoa@u^(0+128),w
  8200  056C  0020               	movlb	0	; select bank0
  8201  056D  00A0               	movwf	___flmul@b
  8202  056E  318D  25D4  3180   	fcall	___flmul
  8203  0571  0020               	movlb	0	; select bank0
  8204  0572  0823               	movf	?___flmul+3,w
  8205  0573  00BD               	movwf	___flsub@a+3
  8206  0574  0822               	movf	?___flmul+2,w
  8207  0575  00BC               	movwf	___flsub@a+2
  8208  0576  0821               	movf	?___flmul+1,w
  8209  0577  00BB               	movwf	___flsub@a+1
  8210  0578  0820               	movf	?___flmul,w
  8211  0579  00BA               	movwf	___flsub@a
  8212  057A  0021               	movlb	1	; select bank1
  8213  057B  0846               	movf	(efgtoa@h+3)^(0+128),w
  8214  057C  0020               	movlb	0	; select bank0
  8215  057D  00C1               	movwf	___flsub@b+3
  8216  057E  0021               	movlb	1	; select bank1
  8217  057F  0845               	movf	(efgtoa@h+2)^(0+128),w
  8218  0580  0020               	movlb	0	; select bank0
  8219  0581  00C0               	movwf	___flsub@b+2
  8220  0582  0021               	movlb	1	; select bank1
  8221  0583  0844               	movf	(efgtoa@h+1)^(0+128),w
  8222  0584  0020               	movlb	0	; select bank0
  8223  0585  00BF               	movwf	___flsub@b+1
  8224  0586  0021               	movlb	1	; select bank1
  8225  0587  0843               	movf	efgtoa@h^(0+128),w
  8226  0588  0020               	movlb	0	; select bank0
  8227  0589  00BE               	movwf	___flsub@b
  8228  058A  3190  201D  3180   	fcall	___flsub
  8229  058D  0020               	movlb	0	; select bank0
  8230  058E  083D               	movf	?___flsub+3,w
  8231  058F  0021               	movlb	1	; select bank1
  8232  0590  00C6               	movwf	(efgtoa@h+3)^(0+128)
  8233  0591  0020               	movlb	0	; select bank0
  8234  0592  083C               	movf	?___flsub+2,w
  8235  0593  0021               	movlb	1	; select bank1
  8236  0594  00C5               	movwf	(efgtoa@h+2)^(0+128)
  8237  0595  0020               	movlb	0	; select bank0
  8238  0596  083B               	movf	?___flsub+1,w
  8239  0597  0021               	movlb	1	; select bank1
  8240  0598  00C4               	movwf	(efgtoa@h+1)^(0+128)
  8241  0599  0020               	movlb	0	; select bank0
  8242  059A  083A               	movf	?___flsub,w
  8243  059B  0021               	movlb	1	; select bank1
  8244  059C  00C3               	movwf	efgtoa@h^(0+128)
  8245                           
  8246                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  8247  059D  3041               	movlw	65
  8248  059E  0020               	movlb	0	; select bank0
  8249  059F  00A9               	movwf	___fldiv@a+3
  8250  05A0  3020               	movlw	32
  8251  05A1  00A8               	movwf	___fldiv@a+2
  8252  05A2  3000               	movlw	0
  8253  05A3  00A7               	movwf	___fldiv@a+1
  8254  05A4  3000               	movlw	0
  8255  05A5  00A6               	movwf	___fldiv@a
  8256  05A6  0021               	movlb	1	; select bank1
  8257  05A7  0858               	movf	(efgtoa@u+3)^(0+128),w
  8258  05A8  0020               	movlb	0	; select bank0
  8259  05A9  00AD               	movwf	___fldiv@b+3
  8260  05AA  0021               	movlb	1	; select bank1
  8261  05AB  0857               	movf	(efgtoa@u+2)^(0+128),w
  8262  05AC  0020               	movlb	0	; select bank0
  8263  05AD  00AC               	movwf	___fldiv@b+2
  8264  05AE  0021               	movlb	1	; select bank1
  8265  05AF  0856               	movf	(efgtoa@u+1)^(0+128),w
  8266  05B0  0020               	movlb	0	; select bank0
  8267  05B1  00AB               	movwf	___fldiv@b+1
  8268  05B2  0021               	movlb	1	; select bank1
  8269  05B3  0855               	movf	efgtoa@u^(0+128),w
  8270  05B4  0020               	movlb	0	; select bank0
  8271  05B5  00AA               	movwf	___fldiv@b
  8272  05B6  3188  20DF  3180   	fcall	___fldiv
  8273  05B9  0020               	movlb	0	; select bank0
  8274  05BA  0829               	movf	?___fldiv+3,w
  8275  05BB  0021               	movlb	1	; select bank1
  8276  05BC  00D8               	movwf	(efgtoa@u+3)^(0+128)
  8277  05BD  0020               	movlb	0	; select bank0
  8278  05BE  0828               	movf	?___fldiv+2,w
  8279  05BF  0021               	movlb	1	; select bank1
  8280  05C0  00D7               	movwf	(efgtoa@u+2)^(0+128)
  8281  05C1  0020               	movlb	0	; select bank0
  8282  05C2  0827               	movf	?___fldiv+1,w
  8283  05C3  0021               	movlb	1	; select bank1
  8284  05C4  00D6               	movwf	(efgtoa@u+1)^(0+128)
  8285  05C5  0020               	movlb	0	; select bank0
  8286  05C6  0826               	movf	?___fldiv,w
  8287  05C7  0021               	movlb	1	; select bank1
  8288  05C8  00D5               	movwf	efgtoa@u^(0+128)
  8289                           
  8290                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  8291  05C9  30FF               	movlw	255
  8292  05CA  07B6               	addwf	efgtoa@ne^(0+128),f
  8293  05CB  30FF               	movlw	255
  8294  05CC  3DB7               	addwfc	(efgtoa@ne+1)^(0+128),f
  8295                           
  8296                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  8297  05CD  3001               	movlw	1
  8298  05CE  07CB               	addwf	efgtoa@i^(0+128),f
  8299  05CF  3000               	movlw	0
  8300  05D0  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  8301  05D1                     l6606:	
  8302                           
  8303                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  8304  05D1  084C               	movf	(efgtoa@i+1)^(0+128),w
  8305  05D2  3A80               	xorlw	128
  8306  05D3  0020               	movlb	0	; select bank0
  8307  05D4  00D9               	movwf	??_efgtoa
  8308  05D5  0021               	movlb	1	; select bank1
  8309  05D6  0835               	movf	(efgtoa@m+1)^(0+128),w
  8310  05D7  3A80               	xorlw	128
  8311  05D8  0020               	movlb	0	; select bank0
  8312  05D9  0259               	subwf	??_efgtoa,w
  8313  05DA  1D03               	skipz
  8314  05DB  2DDF               	goto	u7175
  8315  05DC  0021               	movlb	1	; select bank1
  8316  05DD  0834               	movf	efgtoa@m^(0+128),w
  8317  05DE  024B               	subwf	efgtoa@i^(0+128),w
  8318  05DF                     u7175:	
  8319  05DF  1803               	skipnc
  8320  05E0  2DEF               	goto	l6610
  8321  05E1  0021               	movlb	1	; select bank1
  8322  05E2  0854               	movf	(efgtoa@n+1)^(0+128),w
  8323  05E3  3A80               	xorlw	128
  8324  05E4  0020               	movlb	0	; select bank0
  8325  05E5  00D9               	movwf	??_efgtoa
  8326  05E6  3080               	movlw	128
  8327  05E7  0259               	subwf	??_efgtoa,w
  8328  05E8  1D03               	skipz
  8329  05E9  2DED               	goto	u7185
  8330  05EA  304B               	movlw	75
  8331  05EB  0021               	movlb	1	; select bank1
  8332  05EC  0253               	subwf	efgtoa@n^(0+128),w
  8333  05ED                     u7185:	
  8334  05ED  1C03               	skipc
  8335  05EE  2C9B               	goto	l6558
  8336  05EF                     l6610:	
  8337                           
  8338                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  8339  05EF  0021               	movlb	1	; select bank1
  8340  05F0  0832               	movf	efgtoa@pp^(0+128),w
  8341  05F1  0433               	iorwf	(efgtoa@pp+1)^(0+128),w
  8342  05F2  1D03               	btfss	3,2
  8343  05F3  2E08               	goto	l6618
  8344  05F4  0022               	movlb	2	; select bank2
  8345  05F5  1E5C               	btfss	_flags^(0+256),4
  8346  05F6  2E08               	goto	l6618
  8347                           
  8348                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  8349  05F7  302E               	movlw	46
  8350  05F8  0020               	movlb	0	; select bank0
  8351  05F9  00D9               	movwf	??_efgtoa
  8352  05FA  0021               	movlb	1	; select bank1
  8353  05FB  0853               	movf	efgtoa@n^(0+128),w
  8354  05FC  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8355  05FD  0086               	movwf	6
  8356  05FE  3002               	movlw	2	; select bank4/5
  8357  05FF  0087               	movwf	7
  8358  0600  0020               	movlb	0	; select bank0
  8359  0601  0859               	movf	??_efgtoa,w
  8360  0602  0081               	movwf	1
  8361  0603  3001               	movlw	1
  8362  0604  0021               	movlb	1	; select bank1
  8363  0605  07D3               	addwf	efgtoa@n^(0+128),f
  8364  0606  3000               	movlw	0
  8365  0607  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  8366  0608                     l6618:	
  8367                           
  8368                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  8369  0608  0021               	movlb	1	; select bank1
  8370  0609  0853               	movf	efgtoa@n^(0+128),w
  8371  060A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8372  060B  0086               	movwf	6
  8373  060C  3002               	movlw	2	; select bank4/5
  8374  060D  0087               	movwf	7
  8375  060E  0181               	clrf	1
  8376                           
  8377                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  8378  060F  3065               	movlw	101
  8379  0610  063F               	xorwf	efgtoa@nmode^(0+128),w
  8380  0611  1D03               	btfss	3,2
  8381  0612  2EDA               	goto	l6680
  8382                           
  8383                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  8384  0613  304F               	movlw	79
  8385  0614  00CB               	movwf	efgtoa@i^(0+128)
  8386  0615  3000               	movlw	0
  8387  0616  00CC               	movwf	(efgtoa@i^(0+128)+1)
  8388                           
  8389                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  8390  0617  084B               	movf	efgtoa@i^(0+128),w
  8391  0618  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8392  0619  0086               	movwf	6
  8393  061A  3002               	movlw	2	; select bank4/5
  8394  061B  0087               	movwf	7
  8395  061C  0181               	clrf	1
  8396                           
  8397                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  8398  061D  01BA               	clrf	efgtoa@sign^(0+128)
  8399  061E  01BB               	clrf	(efgtoa@sign+1)^(0+128)
  8400                           
  8401                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  8402  061F  1FD2               	btfss	(efgtoa@e+1)^(0+128),7
  8403  0620  2E2A               	goto	l6634
  8404                           
  8405                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  8406  0621  3001               	movlw	1
  8407  0622  00BA               	movwf	efgtoa@sign^(0+128)
  8408  0623  3000               	movlw	0
  8409  0624  00BB               	movwf	(efgtoa@sign^(0+128)+1)
  8410                           
  8411                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  8412  0625  09D1               	comf	efgtoa@e^(0+128),f
  8413  0626  09D2               	comf	(efgtoa@e+1)^(0+128),f
  8414  0627  0AD1               	incf	efgtoa@e^(0+128),f
  8415  0628  1903               	skipnz
  8416  0629  0AD2               	incf	(efgtoa@e+1)^(0+128),f
  8417  062A                     l6634:	
  8418                           
  8419                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  8420  062A  3002               	movlw	2
  8421  062B  00BD               	movwf	efgtoa@p^(0+128)
  8422  062C  3000               	movlw	0
  8423  062D  00BE               	movwf	(efgtoa@p^(0+128)+1)
  8424  062E                     l6646:	
  8425                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  8426                           
  8427                           
  8428                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  8429  062E  0851               	movf	efgtoa@e^(0+128),w
  8430  062F  0452               	iorwf	(efgtoa@e+1)^(0+128),w
  8431  0630  1903               	btfsc	3,2
  8432  0631  2E69               	goto	l6648
  8433  0632                     l6636:	
  8434                           
  8435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  8436  0632  30FF               	movlw	255
  8437  0633  0021               	movlb	1	; select bank1
  8438  0634  07CB               	addwf	efgtoa@i^(0+128),f
  8439  0635  30FF               	movlw	255
  8440  0636  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  8441                           
  8442                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  8443  0637  300A               	movlw	10
  8444  0638  00F1               	movwf	___awmod@divisor
  8445  0639  3000               	movlw	0
  8446  063A  00F2               	movwf	___awmod@divisor+1
  8447  063B  0852               	movf	(efgtoa@e+1)^(0+128),w
  8448  063C  00F4               	movwf	___awmod@dividend+1
  8449  063D  0851               	movf	efgtoa@e^(0+128),w
  8450  063E  00F3               	movwf	___awmod@dividend
  8451  063F  3193  231F  3180   	fcall	___awmod
  8452  0642  0871               	movf	?___awmod,w
  8453  0643  3E30               	addlw	48
  8454  0644  0020               	movlb	0	; select bank0
  8455  0645  00D9               	movwf	??_efgtoa
  8456  0646  0021               	movlb	1	; select bank1
  8457  0647  084B               	movf	efgtoa@i^(0+128),w
  8458  0648  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8459  0649  0086               	movwf	6
  8460  064A  3002               	movlw	2	; select bank4/5
  8461  064B  0087               	movwf	7
  8462  064C  0020               	movlb	0	; select bank0
  8463  064D  0859               	movf	??_efgtoa,w
  8464  064E  0081               	movwf	1
  8465                           
  8466                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  8467  064F  300A               	movlw	10
  8468  0650  00F1               	movwf	___awdiv@divisor
  8469  0651  3000               	movlw	0
  8470  0652  00F2               	movwf	___awdiv@divisor+1
  8471  0653  0021               	movlb	1	; select bank1
  8472  0654  0852               	movf	(efgtoa@e+1)^(0+128),w
  8473  0655  00F4               	movwf	___awdiv@dividend+1
  8474  0656  0851               	movf	efgtoa@e^(0+128),w
  8475  0657  00F3               	movwf	___awdiv@dividend
  8476  0658  3194  2449  3180   	fcall	___awdiv
  8477  065B  0872               	movf	?___awdiv+1,w
  8478  065C  0021               	movlb	1	; select bank1
  8479  065D  00D2               	movwf	(efgtoa@e+1)^(0+128)
  8480  065E  0871               	movf	?___awdiv,w
  8481  065F  00D1               	movwf	efgtoa@e^(0+128)
  8482                           
  8483                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  8484  0660  30FF               	movlw	255
  8485  0661  07BD               	addwf	efgtoa@p^(0+128),f
  8486  0662  30FF               	movlw	255
  8487  0663  3DBE               	addwfc	(efgtoa@p+1)^(0+128),f
  8488                           
  8489                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  8490  0664  30FF               	movlw	255
  8491  0665  07C0               	addwf	efgtoa@w^(0+128),f
  8492  0666  30FF               	movlw	255
  8493  0667  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  8494  0668  2E2E               	goto	l6646
  8495  0669                     l6648:	
  8496  0669  083E               	movf	(efgtoa@p+1)^(0+128),w
  8497  066A  3A80               	xorlw	128
  8498  066B  0020               	movlb	0	; select bank0
  8499  066C  00D9               	movwf	??_efgtoa
  8500  066D  3080               	movlw	128
  8501  066E  0259               	subwf	??_efgtoa,w
  8502  066F  1D03               	skipz
  8503  0670  2E74               	goto	u7245
  8504  0671  3001               	movlw	1
  8505  0672  0021               	movlb	1	; select bank1
  8506  0673  023D               	subwf	efgtoa@p^(0+128),w
  8507  0674                     u7245:	
  8508  0674  1803               	skipnc
  8509  0675  2E32               	goto	l6636
  8510                           
  8511                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  8512  0676  30FF               	movlw	255
  8513  0677  0021               	movlb	1	; select bank1
  8514  0678  07CB               	addwf	efgtoa@i^(0+128),f
  8515  0679  30FF               	movlw	255
  8516  067A  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  8517                           
  8518                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  8519  067B  083A               	movf	efgtoa@sign^(0+128),w
  8520  067C  043B               	iorwf	(efgtoa@sign+1)^(0+128),w
  8521  067D  1D03               	btfss	3,2
  8522  067E  2E81               	goto	l6656
  8523  067F  302B               	movlw	43
  8524  0680  2E82               	goto	L7
  8525  0681                     l6656:	
  8526  0681  302D               	movlw	45
  8527  0682                     L7:	
  8528  0682  00AA               	movwf	_efgtoa$1507^(0+128)
  8529  0683  3000               	movlw	0
  8530  0684  00AB               	movwf	(_efgtoa$1507^(0+128)+1)
  8531  0685  082A               	movf	_efgtoa$1507^(0+128),w
  8532  0686  0020               	movlb	0	; select bank0
  8533  0687  00D9               	movwf	??_efgtoa
  8534  0688  0021               	movlb	1	; select bank1
  8535  0689  084B               	movf	efgtoa@i^(0+128),w
  8536  068A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8537  068B  0086               	movwf	6
  8538  068C  3002               	movlw	2	; select bank4/5
  8539  068D  0087               	movwf	7
  8540  068E  0020               	movlb	0	; select bank0
  8541  068F  0859               	movf	??_efgtoa,w
  8542  0690  0081               	movwf	1
  8543                           
  8544                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  8545  0691  30FF               	movlw	255
  8546  0692  0021               	movlb	1	; select bank1
  8547  0693  07C0               	addwf	efgtoa@w^(0+128),f
  8548  0694  30FF               	movlw	255
  8549  0695  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  8550                           
  8551                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  8552  0696  30FF               	movlw	255
  8553  0697  07CB               	addwf	efgtoa@i^(0+128),f
  8554  0698  30FF               	movlw	255
  8555  0699  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  8556  069A  0020               	movlb	0	; select bank0
  8557  069B  0858               	movf	efgtoa@c,w
  8558  069C  3EBF               	addlw	191
  8559  069D  00D9               	movwf	??_efgtoa
  8560  069E  30FF               	movlw	255
  8561  069F  1803               	skipnc
  8562  06A0  3000               	movlw	0
  8563  06A1  00DA               	movwf	??_efgtoa+1
  8564  06A2  3000               	movlw	0
  8565  06A3  025A               	subwf	??_efgtoa+1,w
  8566  06A4  301A               	movlw	26
  8567  06A5  1903               	skipnz
  8568  06A6  0259               	subwf	??_efgtoa,w
  8569  06A7  1803               	btfsc	3,0
  8570  06A8  2EAB               	goto	u7260
  8571  06A9  3001               	movlw	1
  8572  06AA  2EAC               	goto	u7270
  8573  06AB                     u7260:	
  8574  06AB  3000               	movlw	0
  8575  06AC                     u7270:	
  8576  06AC  00DB               	movwf	??_efgtoa+2
  8577  06AD  01DC               	clrf	??_efgtoa+3
  8578  06AE  085B               	movf	??_efgtoa+2,w
  8579  06AF  0021               	movlb	1	; select bank1
  8580  06B0  00AE               	movwf	_efgtoa$1509^(0+128)
  8581  06B1  0020               	movlb	0	; select bank0
  8582  06B2  085C               	movf	??_efgtoa+3,w
  8583  06B3  0021               	movlb	1	; select bank1
  8584  06B4  00AF               	movwf	(_efgtoa$1509+1)^(0+128)
  8585  06B5  082E               	movf	_efgtoa$1509^(0+128),w
  8586  06B6  042F               	iorwf	(_efgtoa$1509+1)^(0+128),w
  8587  06B7  1D03               	btfss	3,2
  8588  06B8  2EBB               	goto	l6672
  8589  06B9  3065               	movlw	101
  8590  06BA  2EBC               	goto	L8
  8591  06BB                     l6672:	
  8592  06BB  3045               	movlw	69
  8593  06BC                     L8:	
  8594  06BC  00AC               	movwf	_efgtoa$1508^(0+128)
  8595  06BD  3000               	movlw	0
  8596  06BE  00AD               	movwf	(_efgtoa$1508^(0+128)+1)
  8597  06BF  082C               	movf	_efgtoa$1508^(0+128),w
  8598  06C0  0020               	movlb	0	; select bank0
  8599  06C1  00D9               	movwf	??_efgtoa
  8600  06C2  0021               	movlb	1	; select bank1
  8601  06C3  084B               	movf	efgtoa@i^(0+128),w
  8602  06C4  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8603  06C5  0086               	movwf	6
  8604  06C6  3002               	movlw	2	; select bank4/5
  8605  06C7  0087               	movwf	7
  8606  06C8  0020               	movlb	0	; select bank0
  8607  06C9  0859               	movf	??_efgtoa,w
  8608  06CA  0081               	movwf	1
  8609                           
  8610                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  8611  06CB  30FF               	movlw	255
  8612  06CC  0021               	movlb	1	; select bank1
  8613  06CD  07C0               	addwf	efgtoa@w^(0+128),f
  8614  06CE  30FF               	movlw	255
  8615  06CF  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  8616                           
  8617                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  8618  06D0  084B               	movf	efgtoa@i^(0+128),w
  8619  06D1  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8620  06D2  00F1               	movwf	strcpy@src
  8621  06D3  3002               	movlw	2
  8622  06D4  00F2               	movwf	strcpy@src+1
  8623  06D5  0853               	movf	efgtoa@n^(0+128),w
  8624  06D6  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8625  06D7  3190  203C  3180   	fcall	_strcpy
  8626  06DA                     l6680:	
  8627                           
  8628                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 502:     re
      +                          turn pad(fp, &dbuf[0], w);
  8629  06DA  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  8630  06DB  0020               	movlb	0	; select bank0
  8631  06DC  00D9               	movwf	??_efgtoa
  8632  06DD  0859               	movf	??_efgtoa,w
  8633  06DE  00A8               	movwf	pad@buf
  8634  06DF  0021               	movlb	1	; select bank1
  8635  06E0  0841               	movf	(efgtoa@w+1)^(0+128),w
  8636  06E1  0020               	movlb	0	; select bank0
  8637  06E2  00AA               	movwf	pad@p+1
  8638  06E3  0021               	movlb	1	; select bank1
  8639  06E4  0840               	movf	efgtoa@w^(0+128),w
  8640  06E5  0020               	movlb	0	; select bank0
  8641  06E6  00A9               	movwf	pad@p
  8642  06E7  0021               	movlb	1	; select bank1
  8643  06E8  083C               	movf	efgtoa@fp^(0+128),w
  8644  06E9  3193  23F9         	fcall	_pad
  8645  06EB  0020               	movlb	0	; select bank0
  8646  06EC  0829               	movf	?_pad+1,w
  8647  06ED  00D5               	movwf	?_efgtoa+1
  8648  06EE  0828               	movf	?_pad,w
  8649  06EF  00D4               	movwf	?_efgtoa
  8650  06F0  0008               	return
  8651  06F1                     __end_of_efgtoa:	
  8652                           
  8653                           	psect	text11
  8654  107B                     __ptext11:	
  8655 ;; *************** function _tolower *****************
  8656 ;; Defined at:
  8657 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
  8658 ;; Parameters:    Size  Location     Type
  8659 ;;  c               2    7[COMMON] int 
  8660 ;; Auto vars:     Size  Location     Type
  8661 ;;		None
  8662 ;; Return value:  Size  Location     Type
  8663 ;;                  2    7[COMMON] int 
  8664 ;; Registers used:
  8665 ;;		wreg, status,2, status,0
  8666 ;; Tracked objects:
  8667 ;;		On entry : 0/0
  8668 ;;		On exit  : 0/0
  8669 ;;		Unchanged: 0/0
  8670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8671 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8672 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8673 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8674 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8675 ;;Total ram usage:        8 bytes
  8676 ;; Hardware stack levels used:    1
  8677 ;; Hardware stack levels required when called:    5
  8678 ;; This function calls:
  8679 ;;		_isupper
  8680 ;; This function is called by:
  8681 ;;		_efgtoa
  8682 ;;		_vfpfcnvrt
  8683 ;; This function uses a non-reentrant model
  8684 ;;
  8685                           
  8686                           
  8687                           ;psect for function _tolower
  8688  107B                     _tolower:	
  8689                           
  8690                           ;incstack = 0
  8691                           ; Regs used in _tolower: [wreg+status,2+status,0]
  8692  107B  0877               	movf	tolower@c,w
  8693  107C  3EBF               	addlw	191
  8694  107D  0020               	movlb	0	; select bank0
  8695  107E  00A0               	movwf	??_tolower
  8696  107F  30FF               	movlw	255
  8697  1080  3D78               	addwfc	tolower@c+1,w
  8698  1081  00A1               	movwf	??_tolower+1
  8699  1082  3000               	movlw	0
  8700  1083  0221               	subwf	??_tolower+1,w
  8701  1084  301A               	movlw	26
  8702  1085  1903               	skipnz
  8703  1086  0220               	subwf	??_tolower,w
  8704  1087  1803               	btfsc	3,0
  8705  1088  288B               	goto	u6710
  8706  1089  3001               	movlw	1
  8707  108A  288C               	goto	u6720
  8708  108B                     u6710:	
  8709  108B  3000               	movlw	0
  8710  108C                     u6720:	
  8711  108C  00A2               	movwf	??_tolower+2
  8712  108D  01A3               	clrf	??_tolower+3
  8713  108E  0822               	movf	??_tolower+2,w
  8714  108F  00F9               	movwf	_tolower$1907
  8715  1090  0823               	movf	??_tolower+3,w
  8716  1091  00FA               	movwf	_tolower$1907+1
  8717  1092  0879               	movf	_tolower$1907,w
  8718  1093  047A               	iorwf	_tolower$1907+1,w
  8719  1094  1903               	btfsc	3,2
  8720  1095  0008               	return
  8721  1096  3020               	movlw	32
  8722  1097  0477               	iorwf	tolower@c,w
  8723  1098  00F7               	movwf	?_tolower
  8724  1099  3000               	movlw	0
  8725  109A  0478               	iorwf	tolower@c+1,w
  8726  109B  00F8               	movwf	?_tolower+1
  8727  109C  0008               	return
  8728  109D                     __end_of_tolower:	
  8729                           
  8730                           	psect	text12
  8731  1F4D                     __ptext12:	
  8732 ;; *************** function _isupper *****************
  8733 ;; Defined at:
  8734 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  8735 ;; Parameters:    Size  Location     Type
  8736 ;;  c               2    1[COMMON] int 
  8737 ;; Auto vars:     Size  Location     Type
  8738 ;;		None
  8739 ;; Return value:  Size  Location     Type
  8740 ;;                  2    1[COMMON] int 
  8741 ;; Registers used:
  8742 ;;		wreg, status,2, status,0
  8743 ;; Tracked objects:
  8744 ;;		On entry : 0/0
  8745 ;;		On exit  : 0/0
  8746 ;;		Unchanged: 0/0
  8747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8748 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8750 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8751 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8752 ;;Total ram usage:        6 bytes
  8753 ;; Hardware stack levels used:    1
  8754 ;; Hardware stack levels required when called:    4
  8755 ;; This function calls:
  8756 ;;		Nothing
  8757 ;; This function is called by:
  8758 ;;		_efgtoa
  8759 ;;		_vfpfcnvrt
  8760 ;;		_tolower
  8761 ;; This function uses a non-reentrant model
  8762 ;;
  8763                           
  8764                           
  8765                           ;psect for function _isupper
  8766  1F4D                     _isupper:	
  8767                           
  8768                           ;incstack = 0
  8769                           ; Regs used in _isupper: [wreg+status,2+status,0]
  8770  1F4D  0871               	movf	isupper@c,w
  8771  1F4E  3EBF               	addlw	191
  8772  1F4F  00F3               	movwf	??_isupper
  8773  1F50  30FF               	movlw	255
  8774  1F51  3D72               	addwfc	isupper@c+1,w
  8775  1F52  00F4               	movwf	??_isupper+1
  8776  1F53  3000               	movlw	0
  8777  1F54  0274               	subwf	??_isupper+1,w
  8778  1F55  301A               	movlw	26
  8779  1F56  1903               	skipnz
  8780  1F57  0273               	subwf	??_isupper,w
  8781  1F58  1803               	btfsc	3,0
  8782  1F59  2F5C               	goto	u6220
  8783  1F5A  3001               	movlw	1
  8784  1F5B  2F5D               	goto	u6230
  8785  1F5C                     u6220:	
  8786  1F5C  3000               	movlw	0
  8787  1F5D                     u6230:	
  8788  1F5D  00F5               	movwf	??_isupper+2
  8789  1F5E  01F6               	clrf	??_isupper+3
  8790  1F5F  0875               	movf	??_isupper+2,w
  8791  1F60  00F1               	movwf	?_isupper
  8792  1F61  0876               	movf	??_isupper+3,w
  8793  1F62  00F2               	movwf	?_isupper+1
  8794  1F63  0008               	return
  8795  1F64                     __end_of_isupper:	
  8796                           
  8797                           	psect	text13
  8798  103C                     __ptext13:	
  8799 ;; *************** function _strcpy *****************
  8800 ;; Defined at:
  8801 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
  8802 ;; Parameters:    Size  Location     Type
  8803 ;;  dest            1    wreg     PTR unsigned char 
  8804 ;;		 -> dbuf(80), 
  8805 ;;  src             2    1[COMMON] PTR const unsigned char 
  8806 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  8807 ;;		 -> dbuf(80), 
  8808 ;; Auto vars:     Size  Location     Type
  8809 ;;  dest            1    8[COMMON] PTR unsigned char 
  8810 ;;		 -> dbuf(80), 
  8811 ;;  s               2    5[COMMON] PTR const unsigned char 
  8812 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  8813 ;;		 -> dbuf(80), 
  8814 ;;  d               1    7[COMMON] PTR unsigned char 
  8815 ;;		 -> dbuf(80), 
  8816 ;; Return value:  Size  Location     Type
  8817 ;;                  1    wreg      PTR unsigned char 
  8818 ;; Registers used:
  8819 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  8820 ;; Tracked objects:
  8821 ;;		On entry : 0/0
  8822 ;;		On exit  : 0/0
  8823 ;;		Unchanged: 0/0
  8824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8825 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8826 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8827 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8828 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8829 ;;Total ram usage:        8 bytes
  8830 ;; Hardware stack levels used:    1
  8831 ;; Hardware stack levels required when called:    4
  8832 ;; This function calls:
  8833 ;;		Nothing
  8834 ;; This function is called by:
  8835 ;;		_efgtoa
  8836 ;; This function uses a non-reentrant model
  8837 ;;
  8838                           
  8839                           
  8840                           ;psect for function _strcpy
  8841  103C                     _strcpy:	
  8842                           
  8843                           ;incstack = 0
  8844                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  8845                           ;strcpy@dest stored from wreg
  8846  103C  00F8               	movwf	strcpy@dest
  8847  103D  0872               	movf	strcpy@src+1,w
  8848  103E  00F6               	movwf	strcpy@s+1
  8849  103F  0871               	movf	strcpy@src,w
  8850  1040  00F5               	movwf	strcpy@s
  8851  1041  0878               	movf	strcpy@dest,w
  8852  1042  00F3               	movwf	??_strcpy
  8853  1043  0873               	movf	??_strcpy,w
  8854  1044  00F7               	movwf	strcpy@d
  8855  1045                     l4534:	
  8856  1045  0877               	movf	strcpy@d,w
  8857  1046  0086               	movwf	6
  8858  1047  3002               	movlw	2	; select bank4/5
  8859  1048  0087               	movwf	7
  8860  1049  0AF7               	incf	strcpy@d,f
  8861  104A  0876               	movf	strcpy@s+1,w
  8862  104B  00F4               	movwf	??_strcpy+1
  8863  104C  0875               	movf	strcpy@s,w
  8864  104D  00F3               	movwf	??_strcpy
  8865  104E  0AF5               	incf	strcpy@s,f
  8866  104F  1903               	skipnz
  8867  1050  0AF6               	incf	strcpy@s+1,f
  8868  1051  0873               	movf	??_strcpy,w
  8869  1052  0084               	movwf	4
  8870  1053  0874               	movf	??_strcpy+1,w
  8871  1054  0085               	movwf	5
  8872  1055  0800               	movf	0,w	;code access
  8873  1056  3FC0               	movwi [0]fsr1
  8874  1057  0889               	movf	9,f
  8875  1058  1903               	btfsc	3,2
  8876  1059  0008               	return
  8877  105A  2845               	goto	l4534
  8878  105B                     __end_of_strcpy:	
  8879                           
  8880                           	psect	text14
  8881  13F9                     __ptext14:	
  8882 ;; *************** function _pad *****************
  8883 ;; Defined at:
  8884 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8885 ;; Parameters:    Size  Location     Type
  8886 ;;  fp              1    wreg     PTR struct _IO_FILE
  8887 ;;		 -> NULL(0), 
  8888 ;;  buf             1    8[BANK0 ] PTR unsigned char 
  8889 ;;		 -> dbuf(80), 
  8890 ;;  p               2    9[BANK0 ] int 
  8891 ;; Auto vars:     Size  Location     Type
  8892 ;;  fp              1   16[BANK0 ] PTR struct _IO_FILE
  8893 ;;		 -> NULL(0), 
  8894 ;;  w               2   14[BANK0 ] int 
  8895 ;;  i               2   12[BANK0 ] int 
  8896 ;; Return value:  Size  Location     Type
  8897 ;;                  2    8[BANK0 ] int 
  8898 ;; Registers used:
  8899 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8900 ;; Tracked objects:
  8901 ;;		On entry : 0/0
  8902 ;;		On exit  : 0/0
  8903 ;;		Unchanged: 0/0
  8904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8905 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8906 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8907 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8908 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8909 ;;Total ram usage:        9 bytes
  8910 ;; Hardware stack levels used:    1
  8911 ;; Hardware stack levels required when called:    8
  8912 ;; This function calls:
  8913 ;;		_fputc
  8914 ;;		_fputs
  8915 ;;		_strlen
  8916 ;; This function is called by:
  8917 ;;		_efgtoa
  8918 ;; This function uses a non-reentrant model
  8919 ;;
  8920                           
  8921                           
  8922                           ;psect for function _pad
  8923  13F9                     _pad:	
  8924                           
  8925                           ;incstack = 0
  8926                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8927                           ;pad@fp stored from wreg
  8928  13F9  0020               	movlb	0	; select bank0
  8929  13FA  00B0               	movwf	pad@fp
  8930                           
  8931                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  8932  13FB  0022               	movlb	2	; select bank2
  8933  13FC  1C5C               	btfss	_flags^(0+256),0
  8934  13FD  2C07               	goto	l6348
  8935                           
  8936                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  8937  13FE  0020               	movlb	0	; select bank0
  8938  13FF  0830               	movf	pad@fp,w
  8939  1400  00AB               	movwf	??_pad
  8940  1401  082B               	movf	??_pad,w
  8941  1402  00A0               	movwf	fputs@fp
  8942  1403  0828               	movf	pad@buf,w
  8943  1404  3190  20C1  3193   	fcall	_fputs
  8944  1407                     l6348:	
  8945                           
  8946                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  8947  1407  0020               	movlb	0	; select bank0
  8948  1408  1BAA               	btfsc	pad@p+1,7
  8949  1409  2C0F               	goto	l6352
  8950  140A  082A               	movf	pad@p+1,w
  8951  140B  00AF               	movwf	pad@w+1
  8952  140C  0829               	movf	pad@p,w
  8953  140D  00AE               	movwf	pad@w
  8954  140E  2C11               	goto	l1028
  8955  140F                     l6352:	
  8956  140F  01AE               	clrf	pad@w
  8957  1410  01AF               	clrf	pad@w+1
  8958  1411                     l1028:	
  8959                           
  8960                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  8961  1411  01AC               	clrf	pad@i
  8962  1412  01AD               	clrf	pad@i+1
  8963  1413                     l6358:	
  8964                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8965                           
  8966                           
  8967                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8968  1413  082D               	movf	pad@i+1,w
  8969  1414  3A80               	xorlw	128
  8970  1415  00AB               	movwf	??_pad
  8971  1416  082F               	movf	pad@w+1,w
  8972  1417  3A80               	xorlw	128
  8973  1418  022B               	subwf	??_pad,w
  8974  1419  1D03               	skipz
  8975  141A  2C1D               	goto	u6695
  8976  141B  082E               	movf	pad@w,w
  8977  141C  022C               	subwf	pad@i,w
  8978  141D                     u6695:	
  8979  141D  1803               	btfsc	3,0
  8980  141E  2C31               	goto	l1031
  8981                           
  8982                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  8983  141F  3020               	movlw	32
  8984  1420  00F4               	movwf	fputc@c
  8985  1421  3000               	movlw	0
  8986  1422  00F5               	movwf	fputc@c+1
  8987  1423  0020               	movlb	0	; select bank0
  8988  1424  0830               	movf	pad@fp,w
  8989  1425  00AB               	movwf	??_pad
  8990  1426  082B               	movf	??_pad,w
  8991  1427  00F6               	movwf	fputc@fp
  8992  1428  3192  2230  3193   	fcall	_fputc
  8993                           
  8994                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  8995  142B  3001               	movlw	1
  8996  142C  0020               	movlb	0	; select bank0
  8997  142D  07AC               	addwf	pad@i,f
  8998  142E  3000               	movlw	0
  8999  142F  3DAD               	addwfc	pad@i+1,f
  9000  1430  2C13               	goto	l6358
  9001  1431                     l1031:	
  9002                           
  9003                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  9004  1431  0022               	movlb	2	; select bank2
  9005  1432  185C               	btfsc	_flags^(0+256),0
  9006  1433  2C3D               	goto	l1032
  9007                           
  9008                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  9009  1434  0020               	movlb	0	; select bank0
  9010  1435  0830               	movf	pad@fp,w
  9011  1436  00AB               	movwf	??_pad
  9012  1437  082B               	movf	??_pad,w
  9013  1438  00A0               	movwf	fputs@fp
  9014  1439  0828               	movf	pad@buf,w
  9015  143A  3190  20C1  3193   	fcall	_fputs
  9016  143D                     l1032:	
  9017                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 92:     }
  9018                           
  9019                           
  9020                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  9021  143D  0020               	movlb	0	; select bank0
  9022  143E  0828               	movf	pad@buf,w
  9023  143F  319F  27AB         	fcall	_strlen
  9024  1441  0020               	movlb	0	; select bank0
  9025  1442  082E               	movf	pad@w,w
  9026  1443  0771               	addwf	?_strlen,w
  9027  1444  00A8               	movwf	?_pad
  9028  1445  082F               	movf	pad@w+1,w
  9029  1446  3D72               	addwfc	?_strlen+1,w
  9030  1447  00A9               	movwf	?_pad+1
  9031  1448  0008               	return
  9032  1449                     __end_of_pad:	
  9033                           
  9034                           	psect	text15
  9035  1FAB                     __ptext15:	
  9036 ;; *************** function _strlen *****************
  9037 ;; Defined at:
  9038 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  9039 ;; Parameters:    Size  Location     Type
  9040 ;;  s               1    wreg     PTR const unsigned char 
  9041 ;;		 -> dbuf(80), 
  9042 ;; Auto vars:     Size  Location     Type
  9043 ;;  s               1    5[COMMON] PTR const unsigned char 
  9044 ;;		 -> dbuf(80), 
  9045 ;;  a               1    4[COMMON] PTR const unsigned char 
  9046 ;;		 -> dbuf(80), 
  9047 ;; Return value:  Size  Location     Type
  9048 ;;                  2    1[COMMON] unsigned int 
  9049 ;; Registers used:
  9050 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9051 ;; Tracked objects:
  9052 ;;		On entry : 0/0
  9053 ;;		On exit  : 0/0
  9054 ;;		Unchanged: 0/0
  9055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9056 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9057 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9058 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9059 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9060 ;;Total ram usage:        5 bytes
  9061 ;; Hardware stack levels used:    1
  9062 ;; Hardware stack levels required when called:    4
  9063 ;; This function calls:
  9064 ;;		Nothing
  9065 ;; This function is called by:
  9066 ;;		_pad
  9067 ;; This function uses a non-reentrant model
  9068 ;;
  9069                           
  9070                           
  9071                           ;psect for function _strlen
  9072  1FAB                     _strlen:	
  9073                           
  9074                           ;incstack = 0
  9075                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  9076                           ;strlen@s stored from wreg
  9077  1FAB  00F5               	movwf	strlen@s
  9078  1FAC  0875               	movf	strlen@s,w
  9079  1FAD  00F3               	movwf	??_strlen
  9080  1FAE  0873               	movf	??_strlen,w
  9081  1FAF  00F4               	movwf	strlen@a
  9082  1FB0                     l4258:	
  9083  1FB0  0875               	movf	strlen@s,w
  9084  1FB1  0086               	movwf	6
  9085  1FB2  3002               	movlw	2	; select bank4/5
  9086  1FB3  0087               	movwf	7
  9087  1FB4  0801               	movf	1,w
  9088  1FB5  1903               	btfsc	3,2
  9089  1FB6  2FBC               	goto	l4260
  9090  1FB7  3001               	movlw	1
  9091  1FB8  00F3               	movwf	??_strlen
  9092  1FB9  0873               	movf	??_strlen,w
  9093  1FBA  07F5               	addwf	strlen@s,f
  9094  1FBB  2FB0               	goto	l4258
  9095  1FBC                     l4260:	
  9096  1FBC  0874               	movf	strlen@a,w
  9097  1FBD  0275               	subwf	strlen@s,w
  9098  1FBE  00F1               	movwf	?_strlen
  9099  1FBF  01F2               	clrf	?_strlen+1
  9100  1FC0  1BF1               	btfsc	?_strlen,7
  9101  1FC1  03F2               	decf	?_strlen+1,f
  9102  1FC2  0008               	return
  9103  1FC3                     __end_of_strlen:	
  9104                           
  9105                           	psect	text16
  9106  10C1                     __ptext16:	
  9107 ;; *************** function _fputs *****************
  9108 ;; Defined at:
  9109 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  9110 ;; Parameters:    Size  Location     Type
  9111 ;;  s               1    wreg     PTR const unsigned char 
  9112 ;;		 -> dbuf(80), 
  9113 ;;  fp              1    0[BANK0 ] PTR struct _IO_FILE
  9114 ;;		 -> NULL(0), 
  9115 ;; Auto vars:     Size  Location     Type
  9116 ;;  s               1    7[BANK0 ] PTR const unsigned char 
  9117 ;;		 -> dbuf(80), 
  9118 ;;  i               2    5[BANK0 ] int 
  9119 ;;  c               1    4[BANK0 ] unsigned char 
  9120 ;; Return value:  Size  Location     Type
  9121 ;;                  2    0[BANK0 ] int 
  9122 ;; Registers used:
  9123 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9124 ;; Tracked objects:
  9125 ;;		On entry : 0/0
  9126 ;;		On exit  : 0/0
  9127 ;;		Unchanged: 0/0
  9128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9129 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9130 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9131 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9132 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9133 ;;Total ram usage:        8 bytes
  9134 ;; Hardware stack levels used:    1
  9135 ;; Hardware stack levels required when called:    7
  9136 ;; This function calls:
  9137 ;;		_fputc
  9138 ;; This function is called by:
  9139 ;;		_pad
  9140 ;; This function uses a non-reentrant model
  9141 ;;
  9142                           
  9143                           
  9144                           ;psect for function _fputs
  9145  10C1                     _fputs:	
  9146                           
  9147                           ;incstack = 0
  9148                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9149                           ;fputs@s stored from wreg
  9150  10C1  0020               	movlb	0	; select bank0
  9151  10C2  00A7               	movwf	fputs@s
  9152  10C3  01A5               	clrf	fputs@i
  9153  10C4  01A6               	clrf	fputs@i+1
  9154  10C5                     l6144:	
  9155  10C5  0825               	movf	fputs@i,w
  9156  10C6  0727               	addwf	fputs@s,w
  9157  10C7  00A1               	movwf	??_fputs
  9158  10C8  0821               	movf	??_fputs,w
  9159  10C9  0086               	movwf	6
  9160  10CA  3002               	movlw	2	; select bank4/5
  9161  10CB  0087               	movwf	7
  9162  10CC  0801               	movf	1,w
  9163  10CD  00A2               	movwf	??_fputs+1
  9164  10CE  0822               	movf	??_fputs+1,w
  9165  10CF  00A4               	movwf	fputs@c
  9166  10D0  0824               	movf	fputs@c,w
  9167  10D1  1903               	btfsc	3,2
  9168  10D2  0008               	return
  9169  10D3  0824               	movf	fputs@c,w
  9170  10D4  00A1               	movwf	??_fputs
  9171  10D5  01A2               	clrf	??_fputs+1
  9172  10D6  0821               	movf	??_fputs,w
  9173  10D7  00F4               	movwf	fputc@c
  9174  10D8  0822               	movf	??_fputs+1,w
  9175  10D9  00F5               	movwf	fputc@c+1
  9176  10DA  0820               	movf	fputs@fp,w
  9177  10DB  00A3               	movwf	??_fputs+2
  9178  10DC  0823               	movf	??_fputs+2,w
  9179  10DD  00F6               	movwf	fputc@fp
  9180  10DE  3192  2230  3190   	fcall	_fputc
  9181  10E1  3001               	movlw	1
  9182  10E2  0020               	movlb	0	; select bank0
  9183  10E3  07A5               	addwf	fputs@i,f
  9184  10E4  3000               	movlw	0
  9185  10E5  3DA6               	addwfc	fputs@i+1,f
  9186  10E6  28C5               	goto	l6144
  9187  10E7                     __end_of_fputs:	
  9188                           
  9189                           	psect	text17
  9190  1230                     __ptext17:	
  9191 ;; *************** function _fputc *****************
  9192 ;; Defined at:
  9193 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  9194 ;; Parameters:    Size  Location     Type
  9195 ;;  c               2    4[COMMON] int 
  9196 ;;  fp              1    6[COMMON] PTR struct _IO_FILE
  9197 ;;		 -> NULL(0), 
  9198 ;; Auto vars:     Size  Location     Type
  9199 ;;		None
  9200 ;; Return value:  Size  Location     Type
  9201 ;;                  2    4[COMMON] int 
  9202 ;; Registers used:
  9203 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9204 ;; Tracked objects:
  9205 ;;		On entry : 0/0
  9206 ;;		On exit  : 0/0
  9207 ;;		Unchanged: 0/0
  9208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9209 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9211 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9212 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9213 ;;Total ram usage:        8 bytes
  9214 ;; Hardware stack levels used:    1
  9215 ;; Hardware stack levels required when called:    6
  9216 ;; This function calls:
  9217 ;;		_putch
  9218 ;; This function is called by:
  9219 ;;		_pad
  9220 ;;		_vfpfcnvrt
  9221 ;;		_fputs
  9222 ;; This function uses a non-reentrant model
  9223 ;;
  9224                           
  9225                           
  9226                           ;psect for function _fputc
  9227  1230                     _fputc:	
  9228                           
  9229                           ;incstack = 0
  9230                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9231  1230  0876               	movf	fputc@fp,w
  9232  1231  1D03               	btfss	3,2
  9233  1232  0876               	movf	fputc@fp,w
  9234  1233  1D03               	btfss	3,2
  9235  1234  2A39               	goto	l4082
  9236  1235  0874               	movf	fputc@c,w
  9237  1236  319E  2615         	fcall	_putch
  9238  1238  0008               	return
  9239  1239                     l4082:	
  9240  1239  0876               	movf	fputc@fp,w
  9241  123A  3E03               	addlw	3
  9242  123B  0086               	movwf	6
  9243  123C  0187               	clrf	7
  9244  123D  0016               	moviw fsr1++
  9245  123E  0401               	iorwf	1,w
  9246  123F  1903               	btfsc	3,2
  9247  1240  2A5C               	goto	l4086
  9248  1241  0876               	movf	fputc@fp,w
  9249  1242  3E03               	addlw	3
  9250  1243  0086               	movwf	6
  9251  1244  0187               	clrf	7
  9252  1245  3F40               	moviw [0]fsr1
  9253  1246  00F7               	movwf	??_fputc
  9254  1247  3F41               	moviw [1]fsr1
  9255  1248  00F8               	movwf	??_fputc+1
  9256  1249  0A76               	incf	fputc@fp,w
  9257  124A  0086               	movwf	6
  9258  124B  0187               	clrf	7
  9259  124C  3F40               	moviw [0]fsr1
  9260  124D  00F9               	movwf	??_fputc+2
  9261  124E  3F41               	moviw [1]fsr1
  9262  124F  00FA               	movwf	??_fputc+3
  9263  1250  087A               	movf	??_fputc+3,w
  9264  1251  3A80               	xorlw	128
  9265  1252  00FB               	movwf	??_fputc+4
  9266  1253  0878               	movf	??_fputc+1,w
  9267  1254  3A80               	xorlw	128
  9268  1255  027B               	subwf	??_fputc+4,w
  9269  1256  1D03               	skipz
  9270  1257  2A5A               	goto	u3205
  9271  1258  0877               	movf	??_fputc,w
  9272  1259  0279               	subwf	??_fputc+2,w
  9273  125A                     u3205:	
  9274  125A  1803               	skipnc
  9275  125B  0008               	return
  9276  125C                     l4086:	
  9277  125C  0A76               	incf	fputc@fp,w
  9278  125D  0086               	movwf	6
  9279  125E  0187               	clrf	7
  9280  125F  3001               	movlw	1
  9281  1260  0781               	addwf	1,f
  9282  1261  3141               	addfsr 1,1
  9283  1262  1803               	skipnc
  9284  1263  0A81               	incf	1,f
  9285  1264  0008               	return
  9286  1265                     __end_of_fputc:	
  9287                           
  9288                           	psect	text18
  9289  1E15                     __ptext18:	
  9290 ;; *************** function _putch *****************
  9291 ;; Defined at:
  9292 ;;		line 201 in file "mcc_generated_files/eusart.c"
  9293 ;; Parameters:    Size  Location     Type
  9294 ;;  txData          1    wreg     unsigned char 
  9295 ;; Auto vars:     Size  Location     Type
  9296 ;;  txData          1    3[COMMON] unsigned char 
  9297 ;; Return value:  Size  Location     Type
  9298 ;;                  1    wreg      void 
  9299 ;; Registers used:
  9300 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9301 ;; Tracked objects:
  9302 ;;		On entry : 0/0
  9303 ;;		On exit  : 0/0
  9304 ;;		Unchanged: 0/0
  9305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9307 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9309 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9310 ;;Total ram usage:        1 bytes
  9311 ;; Hardware stack levels used:    1
  9312 ;; Hardware stack levels required when called:    5
  9313 ;; This function calls:
  9314 ;;		_EUSART_Write
  9315 ;; This function is called by:
  9316 ;;		_fputc
  9317 ;; This function uses a non-reentrant model
  9318 ;;
  9319                           
  9320                           
  9321                           ;psect for function _putch
  9322  1E15                     _putch:	
  9323                           
  9324                           ;incstack = 0
  9325                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9326                           ;putch@txData stored from wreg
  9327  1E15  00F3               	movwf	putch@txData
  9328                           
  9329                           ;mcc_generated_files/eusart.c: 201: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 202: {;mcc_generated_files/eusart.c: 203:     EUSART_Write(txData);
  9330  1E16  0873               	movf	putch@txData,w
  9331  1E17  3190  209D         	fcall	_EUSART_Write
  9332  1E19  0008               	return
  9333  1E1A                     __end_of_putch:	
  9334                           
  9335                           	psect	text19
  9336  109D                     __ptext19:	
  9337 ;; *************** function _EUSART_Write *****************
  9338 ;; Defined at:
  9339 ;;		line 173 in file "mcc_generated_files/eusart.c"
  9340 ;; Parameters:    Size  Location     Type
  9341 ;;  txData          1    wreg     unsigned char 
  9342 ;; Auto vars:     Size  Location     Type
  9343 ;;  txData          1    2[COMMON] unsigned char 
  9344 ;; Return value:  Size  Location     Type
  9345 ;;                  1    wreg      void 
  9346 ;; Registers used:
  9347 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9348 ;; Tracked objects:
  9349 ;;		On entry : 0/0
  9350 ;;		On exit  : 0/0
  9351 ;;		Unchanged: 0/0
  9352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9354 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9355 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9356 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9357 ;;Total ram usage:        2 bytes
  9358 ;; Hardware stack levels used:    1
  9359 ;; Hardware stack levels required when called:    4
  9360 ;; This function calls:
  9361 ;;		Nothing
  9362 ;; This function is called by:
  9363 ;;		_putch
  9364 ;; This function uses a non-reentrant model
  9365 ;;
  9366                           
  9367                           
  9368                           ;psect for function _EUSART_Write
  9369  109D                     _EUSART_Write:	
  9370                           
  9371                           ;incstack = 0
  9372                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  9373                           ;EUSART_Write@txData stored from wreg
  9374  109D  00F2               	movwf	EUSART_Write@txData
  9375  109E                     l3940:	
  9376                           ;mcc_generated_files/eusart.c: 173: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 174: {;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemai
      +                          ning)
  9377                           
  9378                           
  9379                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
  9380  109E  0022               	movlb	2	; select bank2
  9381  109F  086B               	movf	_eusartTxBufferRemaining^(0+256),w	;volatile
  9382  10A0  1903               	btfsc	3,2
  9383  10A1  289E               	goto	l3940
  9384                           
  9385                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TXIE)
  9386  10A2  0021               	movlb	1	; select bank1
  9387  10A3  1A11               	btfsc	17,4	;volatile
  9388  10A4  28A9               	goto	l216
  9389                           
  9390                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TX1
      +                          REG = txData;
  9391  10A5  0872               	movf	EUSART_Write@txData,w
  9392  10A6  0023               	movlb	3	; select bank3
  9393  10A7  009A               	movwf	26	;volatile
  9394                           
  9395                           ;mcc_generated_files/eusart.c: 182:     }
  9396  10A8  28BE               	goto	l3954
  9397  10A9                     l216:	
  9398                           ;mcc_generated_files/eusart.c: 183:     else
  9399                           
  9400                           
  9401                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TXIE = 0;
  9402  10A9  1211               	bcf	17,4	;volatile
  9403                           
  9404                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
  9405  10AA  0872               	movf	EUSART_Write@txData,w
  9406  10AB  00F1               	movwf	??_EUSART_Write
  9407  10AC  086F               	movf	_eusartTxHead^(0+128),w
  9408  10AD  3EC5               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
  9409  10AE  0086               	movwf	6
  9410  10AF  3001               	movlw	1	; select bank3/4
  9411  10B0  0087               	movwf	7
  9412  10B1  0871               	movf	??_EUSART_Write,w
  9413  10B2  0081               	movwf	1
  9414  10B3  3001               	movlw	1
  9415  10B4  00F1               	movwf	??_EUSART_Write
  9416  10B5  0871               	movf	??_EUSART_Write,w
  9417  10B6  07EF               	addwf	_eusartTxHead^(0+128),f	;volatile
  9418                           
  9419                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  9420  10B7  3008               	movlw	8
  9421  10B8  026F               	subwf	_eusartTxHead^(0+128),w	;volatile
  9422  10B9  1803               	btfsc	3,0
  9423                           
  9424                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
  9425  10BA  01EF               	clrf	_eusartTxHead^(0+128)	;volatile
  9426                           
  9427                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
  9428  10BB  3001               	movlw	1
  9429  10BC  0022               	movlb	2	; select bank2
  9430  10BD  02EB               	subwf	_eusartTxBufferRemaining^(0+256),f	;volatile
  9431  10BE                     l3954:	
  9432                           
  9433                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TXIE = 1;
  9434  10BE  0021               	movlb	1	; select bank1
  9435  10BF  1611               	bsf	17,4	;volatile
  9436  10C0  0008               	return
  9437  10C1                     __end_of_EUSART_Write:	
  9438                           
  9439                           	psect	text20
  9440  06F1                     __ptext20:	
  9441 ;; *************** function _floorf *****************
  9442 ;; Defined at:
  9443 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
  9444 ;; Parameters:    Size  Location     Type
  9445 ;;  x               4   32[BANK0 ] float 
  9446 ;; Auto vars:     Size  Location     Type
  9447 ;;  u               4   48[BANK0 ] struct .
  9448 ;;  m               4   42[BANK0 ] unsigned long 
  9449 ;;  e               2   46[BANK0 ] int 
  9450 ;; Return value:  Size  Location     Type
  9451 ;;                  4   32[BANK0 ] float 
  9452 ;; Registers used:
  9453 ;;		wreg, status,2, status,0
  9454 ;; Tracked objects:
  9455 ;;		On entry : 0/0
  9456 ;;		On exit  : 0/0
  9457 ;;		Unchanged: 0/0
  9458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9459 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9460 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9461 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9462 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9463 ;;Total ram usage:       20 bytes
  9464 ;; Hardware stack levels used:    1
  9465 ;; Hardware stack levels required when called:    4
  9466 ;; This function calls:
  9467 ;;		Nothing
  9468 ;; This function is called by:
  9469 ;;		_efgtoa
  9470 ;; This function uses a non-reentrant model
  9471 ;;
  9472                           
  9473                           
  9474                           ;psect for function _floorf
  9475  06F1                     _floorf:	
  9476                           
  9477                           ;incstack = 0
  9478                           ; Regs used in _floorf: [wreg+status,2+status,0]
  9479  06F1  0022               	movlb	2	; select bank2
  9480  06F2  0851               	movf	(floorf@F524+3)^(0+256),w
  9481  06F3  0020               	movlb	0	; select bank0
  9482  06F4  00D3               	movwf	floorf@u+3
  9483  06F5  0022               	movlb	2	; select bank2
  9484  06F6  0850               	movf	(floorf@F524+2)^(0+256),w
  9485  06F7  0020               	movlb	0	; select bank0
  9486  06F8  00D2               	movwf	floorf@u+2
  9487  06F9  0022               	movlb	2	; select bank2
  9488  06FA  084F               	movf	(floorf@F524+1)^(0+256),w
  9489  06FB  0020               	movlb	0	; select bank0
  9490  06FC  00D1               	movwf	floorf@u+1
  9491  06FD  0022               	movlb	2	; select bank2
  9492  06FE  084E               	movf	floorf@F524^(0+256),w
  9493  06FF  0020               	movlb	0	; select bank0
  9494  0700  00D0               	movwf	floorf@u
  9495  0701  0843               	movf	floorf@x+3,w
  9496  0702  00D3               	movwf	floorf@u+3
  9497  0703  0842               	movf	floorf@x+2,w
  9498  0704  00D2               	movwf	floorf@u+2
  9499  0705  0841               	movf	floorf@x+1,w
  9500  0706  00D1               	movwf	floorf@u+1
  9501  0707  0840               	movf	floorf@x,w
  9502  0708  00D0               	movwf	floorf@u
  9503  0709  0850               	movf	floorf@u,w
  9504  070A  00C4               	movwf	??_floorf
  9505  070B  0851               	movf	floorf@u+1,w
  9506  070C  00C5               	movwf	??_floorf+1
  9507  070D  0852               	movf	floorf@u+2,w
  9508  070E  00C6               	movwf	??_floorf+2
  9509  070F  0853               	movf	floorf@u+3,w
  9510  0710  00C7               	movwf	??_floorf+3
  9511  0711  3017               	movlw	23
  9512  0712                     u3935:	
  9513  0712  36C7               	lsrf	??_floorf+3,f
  9514  0713  0CC6               	rrf	??_floorf+2,f
  9515  0714  0CC5               	rrf	??_floorf+1,f
  9516  0715  0CC4               	rrf	??_floorf,f
  9517  0716  0B89               	decfsz	9,f
  9518  0717  2F12               	goto	u3935
  9519  0718  30FF               	movlw	255
  9520  0719  0544               	andwf	??_floorf,w
  9521  071A  00C8               	movwf	??_floorf+4
  9522  071B  3000               	movlw	0
  9523  071C  0545               	andwf	??_floorf+1,w
  9524  071D  00C9               	movwf	??_floorf+5
  9525  071E  0848               	movf	??_floorf+4,w
  9526  071F  3E81               	addlw	129
  9527  0720  00CE               	movwf	floorf@e
  9528  0721  30FF               	movlw	255
  9529  0722  3D49               	addwfc	??_floorf+5,w
  9530  0723  00CF               	movwf	floorf@e+1
  9531  0724  084F               	movf	floorf@e+1,w
  9532  0725  3A80               	xorlw	128
  9533  0726  00C4               	movwf	??_floorf
  9534  0727  3080               	movlw	128
  9535  0728  0244               	subwf	??_floorf,w
  9536  0729  1D03               	skipz
  9537  072A  2F2D               	goto	u3945
  9538  072B  3017               	movlw	23
  9539  072C  024E               	subwf	floorf@e,w
  9540  072D                     u3945:	
  9541  072D  1803               	btfsc	3,0
  9542  072E  0008               	return
  9543  072F  0020               	movlb	0	; select bank0
  9544  0730  1BCF               	btfsc	floorf@e+1,7
  9545  0731  2F8A               	goto	l4566
  9546  0732  30FF               	movlw	255
  9547  0733  00C4               	movwf	??_floorf
  9548  0734  30FF               	movlw	255
  9549  0735  00C5               	movwf	??_floorf+1
  9550  0736  307F               	movlw	127
  9551  0737  00C6               	movwf	??_floorf+2
  9552  0738  3000               	movlw	0
  9553  0739  00C7               	movwf	??_floorf+3
  9554  073A  0A4E               	incf	floorf@e,w
  9555  073B  2F40               	goto	u3960
  9556  073C                     u3965:	
  9557  073C  37C7               	asrf	??_floorf+3,f
  9558  073D  0CC6               	rrf	??_floorf+2,f
  9559  073E  0CC5               	rrf	??_floorf+1,f
  9560  073F  0CC4               	rrf	??_floorf,f
  9561  0740                     u3960:	
  9562  0740  0B89               	decfsz	9,f
  9563  0741  2F3C               	goto	u3965
  9564  0742  0847               	movf	??_floorf+3,w
  9565  0743  00CD               	movwf	floorf@m+3
  9566  0744  0846               	movf	??_floorf+2,w
  9567  0745  00CC               	movwf	floorf@m+2
  9568  0746  0845               	movf	??_floorf+1,w
  9569  0747  00CB               	movwf	floorf@m+1
  9570  0748  0844               	movf	??_floorf,w
  9571  0749  00CA               	movwf	floorf@m
  9572  074A  0850               	movf	floorf@u,w
  9573  074B  054A               	andwf	floorf@m,w
  9574  074C  00C4               	movwf	??_floorf
  9575  074D  0851               	movf	floorf@u+1,w
  9576  074E  054B               	andwf	floorf@m+1,w
  9577  074F  00C5               	movwf	??_floorf+1
  9578  0750  0852               	movf	floorf@u+2,w
  9579  0751  054C               	andwf	floorf@m+2,w
  9580  0752  00C6               	movwf	??_floorf+2
  9581  0753  0853               	movf	floorf@u+3,w
  9582  0754  054D               	andwf	floorf@m+3,w
  9583  0755  00C7               	movwf	??_floorf+3
  9584  0756  0847               	movf	??_floorf+3,w
  9585  0757  0446               	iorwf	??_floorf+2,w
  9586  0758  0445               	iorwf	??_floorf+1,w
  9587  0759  0444               	iorwf	??_floorf,w
  9588  075A  1903               	btfsc	3,2
  9589  075B  0008               	return
  9590  075C  0850               	movf	floorf@u,w
  9591  075D  00C4               	movwf	??_floorf
  9592  075E  0851               	movf	floorf@u+1,w
  9593  075F  00C5               	movwf	??_floorf+1
  9594  0760  0852               	movf	floorf@u+2,w
  9595  0761  00C6               	movwf	??_floorf+2
  9596  0762  0853               	movf	floorf@u+3,w
  9597  0763  00C7               	movwf	??_floorf+3
  9598  0764  301F               	movlw	31
  9599  0765                     u3985:	
  9600  0765  36C7               	lsrf	??_floorf+3,f
  9601  0766  0CC6               	rrf	??_floorf+2,f
  9602  0767  0CC5               	rrf	??_floorf+1,f
  9603  0768  0CC4               	rrf	??_floorf,f
  9604  0769  0B89               	decfsz	9,f
  9605  076A  2F65               	goto	u3985
  9606  076B  0847               	movf	??_floorf+3,w
  9607  076C  0446               	iorwf	??_floorf+2,w
  9608  076D  0445               	iorwf	??_floorf+1,w
  9609  076E  0444               	iorwf	??_floorf,w
  9610  076F  1903               	skipnz
  9611  0770  2F79               	goto	l4564
  9612  0771  084A               	movf	floorf@m,w
  9613  0772  07D0               	addwf	floorf@u,f
  9614  0773  084B               	movf	floorf@m+1,w
  9615  0774  3DD1               	addwfc	floorf@u+1,f
  9616  0775  084C               	movf	floorf@m+2,w
  9617  0776  3DD2               	addwfc	floorf@u+2,f
  9618  0777  084D               	movf	floorf@m+3,w
  9619  0778  3DD3               	addwfc	floorf@u+3,f
  9620  0779                     l4564:	
  9621  0779  094A               	comf	floorf@m,w
  9622  077A  00C4               	movwf	??_floorf
  9623  077B  094B               	comf	floorf@m+1,w
  9624  077C  00C5               	movwf	??_floorf+1
  9625  077D  094C               	comf	floorf@m+2,w
  9626  077E  00C6               	movwf	??_floorf+2
  9627  077F  094D               	comf	floorf@m+3,w
  9628  0780  00C7               	movwf	??_floorf+3
  9629  0781  0844               	movf	??_floorf,w
  9630  0782  05D0               	andwf	floorf@u,f
  9631  0783  0845               	movf	??_floorf+1,w
  9632  0784  05D1               	andwf	floorf@u+1,f
  9633  0785  0846               	movf	??_floorf+2,w
  9634  0786  05D2               	andwf	floorf@u+2,f
  9635  0787  0847               	movf	??_floorf+3,w
  9636  0788  05D3               	andwf	floorf@u+3,f
  9637  0789  2FC0               	goto	l1620
  9638  078A                     l4566:	
  9639  078A  0850               	movf	floorf@u,w
  9640  078B  00C4               	movwf	??_floorf
  9641  078C  0851               	movf	floorf@u+1,w
  9642  078D  00C5               	movwf	??_floorf+1
  9643  078E  0852               	movf	floorf@u+2,w
  9644  078F  00C6               	movwf	??_floorf+2
  9645  0790  0853               	movf	floorf@u+3,w
  9646  0791  00C7               	movwf	??_floorf+3
  9647  0792  301F               	movlw	31
  9648  0793                     u4005:	
  9649  0793  36C7               	lsrf	??_floorf+3,f
  9650  0794  0CC6               	rrf	??_floorf+2,f
  9651  0795  0CC5               	rrf	??_floorf+1,f
  9652  0796  0CC4               	rrf	??_floorf,f
  9653  0797  0B89               	decfsz	9,f
  9654  0798  2F93               	goto	u4005
  9655  0799  0847               	movf	??_floorf+3,w
  9656  079A  0446               	iorwf	??_floorf+2,w
  9657  079B  0445               	iorwf	??_floorf+1,w
  9658  079C  0444               	iorwf	??_floorf,w
  9659  079D  1D03               	skipz
  9660  079E  2FA3               	goto	l4570
  9661  079F  3000               	movlw	0
  9662  07A0  00D3               	movwf	floorf@u+3
  9663  07A1  3000               	movlw	0
  9664  07A2  2FBB               	goto	L9
  9665  07A3                     l4570:	
  9666  07A3  0850               	movf	floorf@u,w
  9667  07A4  00C4               	movwf	??_floorf
  9668  07A5  0851               	movf	floorf@u+1,w
  9669  07A6  00C5               	movwf	??_floorf+1
  9670  07A7  0852               	movf	floorf@u+2,w
  9671  07A8  00C6               	movwf	??_floorf+2
  9672  07A9  0853               	movf	floorf@u+3,w
  9673  07AA  00C7               	movwf	??_floorf+3
  9674  07AB  3001               	movlw	1
  9675  07AC                     u4025:	
  9676  07AC  35C4               	lslf	??_floorf,f
  9677  07AD  0DC5               	rlf	??_floorf+1,f
  9678  07AE  0DC6               	rlf	??_floorf+2,f
  9679  07AF  0DC7               	rlf	??_floorf+3,f
  9680  07B0  0B89               	decfsz	9,f
  9681  07B1  2FAC               	goto	u4025
  9682  07B2  0847               	movf	??_floorf+3,w
  9683  07B3  0446               	iorwf	??_floorf+2,w
  9684  07B4  0445               	iorwf	??_floorf+1,w
  9685  07B5  0444               	iorwf	??_floorf,w
  9686  07B6  1903               	skipnz
  9687  07B7  2FC0               	goto	l1620
  9688  07B8  30BF               	movlw	191
  9689  07B9  00D3               	movwf	floorf@u+3
  9690  07BA  3080               	movlw	128
  9691  07BB                     L9:	
  9692  07BB  00D2               	movwf	floorf@u+2
  9693  07BC  3000               	movlw	0
  9694  07BD  00D1               	movwf	floorf@u+1
  9695  07BE  3000               	movlw	0
  9696  07BF  00D0               	movwf	floorf@u
  9697  07C0                     l1620:	
  9698  07C0  0853               	movf	floorf@u+3,w
  9699  07C1  00C3               	movwf	?_floorf+3
  9700  07C2  0852               	movf	floorf@u+2,w
  9701  07C3  00C2               	movwf	?_floorf+2
  9702  07C4  0851               	movf	floorf@u+1,w
  9703  07C5  00C1               	movwf	?_floorf+1
  9704  07C6  0850               	movf	floorf@u,w
  9705  07C7  00C0               	movwf	?_floorf
  9706  07C8  0008               	return
  9707  07C9                     __end_of_floorf:	
  9708                           
  9709                           	psect	text21
  9710  15B6                     __ptext21:	
  9711 ;; *************** function ___fpclassifyf *****************
  9712 ;; Defined at:
  9713 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
  9714 ;; Parameters:    Size  Location     Type
  9715 ;;  x               4    1[COMMON] float 
  9716 ;; Auto vars:     Size  Location     Type
  9717 ;;  u               4    2[BANK0 ] struct .
  9718 ;;  e               2    0[BANK0 ] int 
  9719 ;; Return value:  Size  Location     Type
  9720 ;;                  2    1[COMMON] int 
  9721 ;; Registers used:
  9722 ;;		wreg, status,2, status,0
  9723 ;; Tracked objects:
  9724 ;;		On entry : 0/0
  9725 ;;		On exit  : 0/0
  9726 ;;		Unchanged: 0/0
  9727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9728 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9729 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9730 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9731 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9732 ;;Total ram usage:       16 bytes
  9733 ;; Hardware stack levels used:    1
  9734 ;; Hardware stack levels required when called:    4
  9735 ;; This function calls:
  9736 ;;		Nothing
  9737 ;; This function is called by:
  9738 ;;		_efgtoa
  9739 ;; This function uses a non-reentrant model
  9740 ;;
  9741                           
  9742                           
  9743                           ;psect for function ___fpclassifyf
  9744  15B6                     ___fpclassifyf:	
  9745                           
  9746                           ;incstack = 0
  9747                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  9748  15B6  0022               	movlb	2	; select bank2
  9749  15B7  0855               	movf	(___fpclassifyf@F463+3)^(0+256),w
  9750  15B8  0020               	movlb	0	; select bank0
  9751  15B9  00A5               	movwf	___fpclassifyf@u+3
  9752  15BA  0022               	movlb	2	; select bank2
  9753  15BB  0854               	movf	(___fpclassifyf@F463+2)^(0+256),w
  9754  15BC  0020               	movlb	0	; select bank0
  9755  15BD  00A4               	movwf	___fpclassifyf@u+2
  9756  15BE  0022               	movlb	2	; select bank2
  9757  15BF  0853               	movf	(___fpclassifyf@F463+1)^(0+256),w
  9758  15C0  0020               	movlb	0	; select bank0
  9759  15C1  00A3               	movwf	___fpclassifyf@u+1
  9760  15C2  0022               	movlb	2	; select bank2
  9761  15C3  0852               	movf	___fpclassifyf@F463^(0+256),w
  9762  15C4  0020               	movlb	0	; select bank0
  9763  15C5  00A2               	movwf	___fpclassifyf@u
  9764  15C6  0874               	movf	___fpclassifyf@x+3,w
  9765  15C7  00A5               	movwf	___fpclassifyf@u+3
  9766  15C8  0873               	movf	___fpclassifyf@x+2,w
  9767  15C9  00A4               	movwf	___fpclassifyf@u+2
  9768  15CA  0872               	movf	___fpclassifyf@x+1,w
  9769  15CB  00A3               	movwf	___fpclassifyf@u+1
  9770  15CC  0871               	movf	___fpclassifyf@x,w
  9771  15CD  00A2               	movwf	___fpclassifyf@u
  9772  15CE  0822               	movf	___fpclassifyf@u,w
  9773  15CF  00F5               	movwf	??___fpclassifyf
  9774  15D0  0823               	movf	___fpclassifyf@u+1,w
  9775  15D1  00F6               	movwf	??___fpclassifyf+1
  9776  15D2  0824               	movf	___fpclassifyf@u+2,w
  9777  15D3  00F7               	movwf	??___fpclassifyf+2
  9778  15D4  0825               	movf	___fpclassifyf@u+3,w
  9779  15D5  00F8               	movwf	??___fpclassifyf+3
  9780  15D6  3017               	movlw	23
  9781  15D7                     u3815:	
  9782  15D7  36F8               	lsrf	??___fpclassifyf+3,f
  9783  15D8  0CF7               	rrf	??___fpclassifyf+2,f
  9784  15D9  0CF6               	rrf	??___fpclassifyf+1,f
  9785  15DA  0CF5               	rrf	??___fpclassifyf,f
  9786  15DB  0B89               	decfsz	9,f
  9787  15DC  2DD7               	goto	u3815
  9788  15DD  30FF               	movlw	255
  9789  15DE  0575               	andwf	??___fpclassifyf,w
  9790  15DF  00A0               	movwf	___fpclassifyf@e
  9791  15E0  3000               	movlw	0
  9792  15E1  0576               	andwf	??___fpclassifyf+1,w
  9793  15E2  00A1               	movwf	___fpclassifyf@e+1
  9794  15E3  0820               	movf	___fpclassifyf@e,w
  9795  15E4  0421               	iorwf	___fpclassifyf@e+1,w
  9796  15E5  1D03               	btfss	3,2
  9797  15E6  2E06               	goto	l4522
  9798  15E7  0822               	movf	___fpclassifyf@u,w
  9799  15E8  00F5               	movwf	??___fpclassifyf
  9800  15E9  0823               	movf	___fpclassifyf@u+1,w
  9801  15EA  00F6               	movwf	??___fpclassifyf+1
  9802  15EB  0824               	movf	___fpclassifyf@u+2,w
  9803  15EC  00F7               	movwf	??___fpclassifyf+2
  9804  15ED  0825               	movf	___fpclassifyf@u+3,w
  9805  15EE  00F8               	movwf	??___fpclassifyf+3
  9806  15EF  3001               	movlw	1
  9807  15F0                     u3835:	
  9808  15F0  35F5               	lslf	??___fpclassifyf,f
  9809  15F1  0DF6               	rlf	??___fpclassifyf+1,f
  9810  15F2  0DF7               	rlf	??___fpclassifyf+2,f
  9811  15F3  0DF8               	rlf	??___fpclassifyf+3,f
  9812  15F4  0B89               	decfsz	9,f
  9813  15F5  2DF0               	goto	u3835
  9814  15F6  0878               	movf	??___fpclassifyf+3,w
  9815  15F7  0477               	iorwf	??___fpclassifyf+2,w
  9816  15F8  0476               	iorwf	??___fpclassifyf+1,w
  9817  15F9  0475               	iorwf	??___fpclassifyf,w
  9818  15FA  1D03               	skipz
  9819  15FB  2E01               	goto	l4518
  9820  15FC  3002               	movlw	2
  9821  15FD  00F1               	movwf	?___fpclassifyf
  9822  15FE  3000               	movlw	0
  9823  15FF  00F2               	movwf	?___fpclassifyf+1
  9824  1600  0008               	return
  9825  1601                     l4518:	
  9826  1601  3003               	movlw	3
  9827  1602  00F1               	movwf	?___fpclassifyf
  9828  1603  3000               	movlw	0
  9829  1604  00F2               	movwf	?___fpclassifyf+1
  9830  1605  0008               	return
  9831  1606                     l4522:	
  9832  1606  0A20               	incf	___fpclassifyf@e,w
  9833  1607  0421               	iorwf	___fpclassifyf@e+1,w
  9834  1608  1D03               	btfss	3,2
  9835  1609  2E29               	goto	l4528
  9836  160A  0822               	movf	___fpclassifyf@u,w
  9837  160B  00F5               	movwf	??___fpclassifyf
  9838  160C  0823               	movf	___fpclassifyf@u+1,w
  9839  160D  00F6               	movwf	??___fpclassifyf+1
  9840  160E  0824               	movf	___fpclassifyf@u+2,w
  9841  160F  00F7               	movwf	??___fpclassifyf+2
  9842  1610  0825               	movf	___fpclassifyf@u+3,w
  9843  1611  00F8               	movwf	??___fpclassifyf+3
  9844  1612  3009               	movlw	9
  9845  1613                     u3865:	
  9846  1613  35F5               	lslf	??___fpclassifyf,f
  9847  1614  0DF6               	rlf	??___fpclassifyf+1,f
  9848  1615  0DF7               	rlf	??___fpclassifyf+2,f
  9849  1616  0DF8               	rlf	??___fpclassifyf+3,f
  9850  1617  0B89               	decfsz	9,f
  9851  1618  2E13               	goto	u3865
  9852  1619  0878               	movf	??___fpclassifyf+3,w
  9853  161A  0477               	iorwf	??___fpclassifyf+2,w
  9854  161B  0476               	iorwf	??___fpclassifyf+1,w
  9855  161C  0475               	iorwf	??___fpclassifyf,w
  9856  161D  1D03               	btfss	3,2
  9857  161E  2E21               	goto	u3870
  9858  161F  3001               	movlw	1
  9859  1620  2E22               	goto	u3880
  9860  1621                     u3870:	
  9861  1621  3000               	movlw	0
  9862  1622                     u3880:	
  9863  1622  00F9               	movwf	??___fpclassifyf+4
  9864  1623  01FA               	clrf	??___fpclassifyf+5
  9865  1624  0879               	movf	??___fpclassifyf+4,w
  9866  1625  00F1               	movwf	?___fpclassifyf
  9867  1626  087A               	movf	??___fpclassifyf+5,w
  9868  1627  00F2               	movwf	?___fpclassifyf+1
  9869  1628  0008               	return
  9870  1629                     l4528:	
  9871  1629  3004               	movlw	4
  9872  162A  00F1               	movwf	?___fpclassifyf
  9873  162B  3000               	movlw	0
  9874  162C  00F2               	movwf	?___fpclassifyf+1
  9875  162D  0008               	return
  9876  162E                     __end_of___fpclassifyf:	
  9877                           
  9878                           	psect	text22
  9879  14EC                     __ptext22:	
  9880 ;; *************** function ___fltol *****************
  9881 ;; Defined at:
  9882 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  9883 ;; Parameters:    Size  Location     Type
  9884 ;;  f1              4    1[COMMON] int 
  9885 ;; Auto vars:     Size  Location     Type
  9886 ;;  exp1            1   11[COMMON] unsigned char 
  9887 ;;  sign1           1   10[COMMON] unsigned char 
  9888 ;; Return value:  Size  Location     Type
  9889 ;;                  4    1[COMMON] long 
  9890 ;; Registers used:
  9891 ;;		wreg, status,2, status,0
  9892 ;; Tracked objects:
  9893 ;;		On entry : 0/0
  9894 ;;		On exit  : 0/0
  9895 ;;		Unchanged: 0/0
  9896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9897 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9898 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9899 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9900 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9901 ;;Total ram usage:       11 bytes
  9902 ;; Hardware stack levels used:    1
  9903 ;; Hardware stack levels required when called:    4
  9904 ;; This function calls:
  9905 ;;		Nothing
  9906 ;; This function is called by:
  9907 ;;		_efgtoa
  9908 ;; This function uses a non-reentrant model
  9909 ;;
  9910                           
  9911                           
  9912                           ;psect for function ___fltol
  9913  14EC                     ___fltol:	
  9914                           
  9915                           ;incstack = 0
  9916                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  9917  14EC  1003               	clrc
  9918  14ED  0D73               	rlf	___fltol@f1+2,w
  9919  14EE  0D74               	rlf	___fltol@f1+3,w
  9920  14EF  00F5               	movwf	??___fltol
  9921  14F0  0875               	movf	??___fltol,w
  9922  14F1  00FB               	movwf	___fltol@exp1
  9923  14F2  087B               	movf	___fltol@exp1,w
  9924  14F3  1D03               	btfss	3,2
  9925  14F4  2CFE               	goto	l4704
  9926  14F5                     l4700:	
  9927  14F5  3000               	movlw	0
  9928  14F6  00F4               	movwf	?___fltol+3
  9929  14F7  3000               	movlw	0
  9930  14F8  00F3               	movwf	?___fltol+2
  9931  14F9  3000               	movlw	0
  9932  14FA  00F2               	movwf	?___fltol+1
  9933  14FB  3000               	movlw	0
  9934  14FC  00F1               	movwf	?___fltol
  9935  14FD  0008               	return
  9936  14FE                     l4704:	
  9937  14FE  0871               	movf	___fltol@f1,w
  9938  14FF  00F5               	movwf	??___fltol
  9939  1500  0872               	movf	___fltol@f1+1,w
  9940  1501  00F6               	movwf	??___fltol+1
  9941  1502  0873               	movf	___fltol@f1+2,w
  9942  1503  00F7               	movwf	??___fltol+2
  9943  1504  0874               	movf	___fltol@f1+3,w
  9944  1505  00F8               	movwf	??___fltol+3
  9945  1506  301F               	movlw	31
  9946  1507                     u4335:	
  9947  1507  36F8               	lsrf	??___fltol+3,f
  9948  1508  0CF7               	rrf	??___fltol+2,f
  9949  1509  0CF6               	rrf	??___fltol+1,f
  9950  150A  0CF5               	rrf	??___fltol,f
  9951  150B  0B89               	decfsz	9,f
  9952  150C  2D07               	goto	u4335
  9953  150D  0875               	movf	??___fltol,w
  9954  150E  00F9               	movwf	??___fltol+4
  9955  150F  0879               	movf	??___fltol+4,w
  9956  1510  00FA               	movwf	___fltol@sign1
  9957  1511  17F3               	bsf	___fltol@f1+2,7
  9958  1512  30FF               	movlw	255
  9959  1513  05F1               	andwf	___fltol@f1,f
  9960  1514  30FF               	movlw	255
  9961  1515  05F2               	andwf	___fltol@f1+1,f
  9962  1516  30FF               	movlw	255
  9963  1517  05F3               	andwf	___fltol@f1+2,f
  9964  1518  3000               	movlw	0
  9965  1519  05F4               	andwf	___fltol@f1+3,f
  9966  151A  3096               	movlw	150
  9967  151B  02FB               	subwf	___fltol@exp1,f
  9968  151C  1FFB               	btfss	___fltol@exp1,7
  9969  151D  2D31               	goto	l4722
  9970  151E  087B               	movf	___fltol@exp1,w
  9971  151F  3A80               	xorlw	128
  9972  1520  3E97               	addlw	151
  9973  1521  1C03               	btfss	3,0
  9974  1522  2CF5               	goto	l4700
  9975  1523                     l4720:	
  9976  1523  3001               	movlw	1
  9977  1524                     u4365:	
  9978  1524  36F4               	lsrf	___fltol@f1+3,f
  9979  1525  0CF3               	rrf	___fltol@f1+2,f
  9980  1526  0CF2               	rrf	___fltol@f1+1,f
  9981  1527  0CF1               	rrf	___fltol@f1,f
  9982  1528  0B89               	decfsz	9,f
  9983  1529  2D24               	goto	u4365
  9984  152A  3001               	movlw	1
  9985  152B  00F5               	movwf	??___fltol
  9986  152C  0875               	movf	??___fltol,w
  9987  152D  07FB               	addwf	___fltol@exp1,f
  9988  152E  1903               	btfsc	3,2
  9989  152F  2D42               	goto	l4730
  9990  1530  2D23               	goto	l4720
  9991  1531                     l4722:	
  9992  1531  3020               	movlw	32
  9993  1532  027B               	subwf	___fltol@exp1,w
  9994  1533  1803               	btfsc	3,0
  9995  1534  2CF5               	goto	l4700
  9996  1535                     l1350:	
  9997  1535  087B               	movf	___fltol@exp1,w
  9998  1536  1903               	btfsc	3,2
  9999  1537  2D42               	goto	l4730
 10000  1538  3001               	movlw	1
 10001  1539                     u4395:	
 10002  1539  35F1               	lslf	___fltol@f1,f
 10003  153A  0DF2               	rlf	___fltol@f1+1,f
 10004  153B  0DF3               	rlf	___fltol@f1+2,f
 10005  153C  0DF4               	rlf	___fltol@f1+3,f
 10006  153D  0B89               	decfsz	9,f
 10007  153E  2D39               	goto	u4395
 10008  153F  3001               	movlw	1
 10009  1540  02FB               	subwf	___fltol@exp1,f
 10010  1541  2D35               	goto	l1350
 10011  1542                     l4730:	
 10012  1542  087A               	movf	___fltol@sign1,w
 10013  1543  1903               	btfsc	3,2
 10014  1544  0008               	return
 10015  1545  09F1               	comf	___fltol@f1,f
 10016  1546  09F2               	comf	___fltol@f1+1,f
 10017  1547  09F3               	comf	___fltol@f1+2,f
 10018  1548  09F4               	comf	___fltol@f1+3,f
 10019  1549  0AF1               	incf	___fltol@f1,f
 10020  154A  1903               	skipnz
 10021  154B  0AF2               	incf	___fltol@f1+1,f
 10022  154C  1903               	skipnz
 10023  154D  0AF3               	incf	___fltol@f1+2,f
 10024  154E  1903               	skipnz
 10025  154F  0AF4               	incf	___fltol@f1+3,f
 10026  1550  0008               	return
 10027  1551                     __end_of___fltol:	
 10028                           
 10029                           	psect	text23
 10030  101D                     __ptext23:	
 10031 ;; *************** function ___flsub *****************
 10032 ;; Defined at:
 10033 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 10034 ;; Parameters:    Size  Location     Type
 10035 ;;  a               4   26[BANK0 ] long 
 10036 ;;  b               4   30[BANK0 ] long 
 10037 ;; Auto vars:     Size  Location     Type
 10038 ;;		None
 10039 ;; Return value:  Size  Location     Type
 10040 ;;                  4   26[BANK0 ] long 
 10041 ;; Registers used:
 10042 ;;		wreg, status,2, status,0, pclath, cstack
 10043 ;; Tracked objects:
 10044 ;;		On entry : 0/0
 10045 ;;		On exit  : 0/0
 10046 ;;		Unchanged: 0/0
 10047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10048 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10051 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10052 ;;Total ram usage:        8 bytes
 10053 ;; Hardware stack levels used:    1
 10054 ;; Hardware stack levels required when called:    5
 10055 ;; This function calls:
 10056 ;;		___fladd
 10057 ;; This function is called by:
 10058 ;;		_efgtoa
 10059 ;; This function uses a non-reentrant model
 10060 ;;
 10061                           
 10062                           
 10063                           ;psect for function ___flsub
 10064  101D                     ___flsub:	
 10065                           
 10066                           ;incstack = 0
 10067                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 10068  101D  3080               	movlw	128
 10069  101E  0020               	movlb	0	; select bank0
 10070  101F  06BD               	xorwf	___flsub@a+3,f
 10071  1020  0841               	movf	___flsub@b+3,w
 10072  1021  00F4               	movwf	___fladd@b+3
 10073  1022  0840               	movf	___flsub@b+2,w
 10074  1023  00F3               	movwf	___fladd@b+2
 10075  1024  083F               	movf	___flsub@b+1,w
 10076  1025  00F2               	movwf	___fladd@b+1
 10077  1026  083E               	movf	___flsub@b,w
 10078  1027  00F1               	movwf	___fladd@b
 10079  1028  083D               	movf	___flsub@a+3,w
 10080  1029  00F8               	movwf	___fladd@a+3
 10081  102A  083C               	movf	___flsub@a+2,w
 10082  102B  00F7               	movwf	___fladd@a+2
 10083  102C  083B               	movf	___flsub@a+1,w
 10084  102D  00F6               	movwf	___fladd@a+1
 10085  102E  083A               	movf	___flsub@a,w
 10086  102F  00F5               	movwf	___fladd@a
 10087  1030  318B  23F2         	fcall	___fladd
 10088  1032  0874               	movf	?___fladd+3,w
 10089  1033  0020               	movlb	0	; select bank0
 10090  1034  00BD               	movwf	?___flsub+3
 10091  1035  0873               	movf	?___fladd+2,w
 10092  1036  00BC               	movwf	?___flsub+2
 10093  1037  0872               	movf	?___fladd+1,w
 10094  1038  00BB               	movwf	?___flsub+1
 10095  1039  0871               	movf	?___fladd,w
 10096  103A  00BA               	movwf	?___flsub
 10097  103B  0008               	return
 10098  103C                     __end_of___flsub:	
 10099                           
 10100                           	psect	text24
 10101  0BF2                     __ptext24:	
 10102 ;; *************** function ___fladd *****************
 10103 ;; Defined at:
 10104 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 10105 ;; Parameters:    Size  Location     Type
 10106 ;;  b               4    1[COMMON] long 
 10107 ;;  a               4    5[COMMON] long 
 10108 ;; Auto vars:     Size  Location     Type
 10109 ;;  grs             1   11[BANK0 ] unsigned char 
 10110 ;;  bexp            1   10[BANK0 ] unsigned char 
 10111 ;;  aexp            1    9[BANK0 ] unsigned char 
 10112 ;;  signs           1    8[BANK0 ] unsigned char 
 10113 ;; Return value:  Size  Location     Type
 10114 ;;                  4    1[COMMON] unsigned char 
 10115 ;; Registers used:
 10116 ;;		wreg, status,2, status,0
 10117 ;; Tracked objects:
 10118 ;;		On entry : 0/0
 10119 ;;		On exit  : 0/0
 10120 ;;		Unchanged: 0/0
 10121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10122 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10123 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10124 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10125 ;;      Totals:         8      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10126 ;;Total ram usage:       20 bytes
 10127 ;; Hardware stack levels used:    1
 10128 ;; Hardware stack levels required when called:    4
 10129 ;; This function calls:
 10130 ;;		Nothing
 10131 ;; This function is called by:
 10132 ;;		_efgtoa
 10133 ;;		___flsub
 10134 ;; This function uses a non-reentrant model
 10135 ;;
 10136                           
 10137                           
 10138                           ;psect for function ___fladd
 10139  0BF2                     ___fladd:	
 10140                           
 10141                           ;incstack = 0
 10142                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 10143  0BF2  0874               	movf	___fladd@b+3,w
 10144  0BF3  3980               	andlw	128
 10145  0BF4  0020               	movlb	0	; select bank0
 10146  0BF5  00A0               	movwf	??___fladd
 10147  0BF6  0820               	movf	??___fladd,w
 10148  0BF7  00A8               	movwf	___fladd@signs
 10149  0BF8  3574               	lslf	___fladd@b+3,w
 10150  0BF9  00A0               	movwf	??___fladd
 10151  0BFA  0820               	movf	??___fladd,w
 10152  0BFB  00AA               	movwf	___fladd@bexp
 10153  0BFC  1BF3               	btfsc	___fladd@b+2,7
 10154  0BFD  142A               	bsf	___fladd@bexp,0
 10155  0BFE  082A               	movf	___fladd@bexp,w
 10156  0BFF  1903               	btfsc	3,2
 10157  0C00  2C0F               	goto	l6168
 10158  0C01  0A2A               	incf	___fladd@bexp,w
 10159  0C02  1D03               	btfss	3,2
 10160  0C03  2C0C               	goto	l6164
 10161  0C04  3000               	movlw	0
 10162  0C05  00F4               	movwf	___fladd@b+3
 10163  0C06  3000               	movlw	0
 10164  0C07  00F3               	movwf	___fladd@b+2
 10165  0C08  3000               	movlw	0
 10166  0C09  00F2               	movwf	___fladd@b+1
 10167  0C0A  3000               	movlw	0
 10168  0C0B  00F1               	movwf	___fladd@b
 10169  0C0C                     l6164:	
 10170  0C0C  17F3               	bsf	___fladd@b+2,7
 10171  0C0D  01F4               	clrf	___fladd@b+3
 10172  0C0E  2C17               	goto	l6170
 10173  0C0F                     l6168:	
 10174  0C0F  3000               	movlw	0
 10175  0C10  00F4               	movwf	___fladd@b+3
 10176  0C11  3000               	movlw	0
 10177  0C12  00F3               	movwf	___fladd@b+2
 10178  0C13  3000               	movlw	0
 10179  0C14  00F2               	movwf	___fladd@b+1
 10180  0C15  3000               	movlw	0
 10181  0C16  00F1               	movwf	___fladd@b
 10182  0C17                     l6170:	
 10183  0C17  0878               	movf	___fladd@a+3,w
 10184  0C18  3980               	andlw	128
 10185  0C19  00A0               	movwf	??___fladd
 10186  0C1A  0820               	movf	??___fladd,w
 10187  0C1B  00A9               	movwf	___fladd@aexp
 10188  0C1C  0829               	movf	___fladd@aexp,w
 10189  0C1D  0628               	xorwf	___fladd@signs,w
 10190  0C1E  1D03               	btfss	3,2
 10191  0C1F  1728               	bsf	___fladd@signs,6
 10192  0C20  3578               	lslf	___fladd@a+3,w
 10193  0C21  00A0               	movwf	??___fladd
 10194  0C22  0820               	movf	??___fladd,w
 10195  0C23  00A9               	movwf	___fladd@aexp
 10196  0C24  1BF7               	btfsc	___fladd@a+2,7
 10197  0C25  1429               	bsf	___fladd@aexp,0
 10198  0C26  0829               	movf	___fladd@aexp,w
 10199  0C27  1903               	btfsc	3,2
 10200  0C28  2C37               	goto	l6192
 10201  0C29  0A29               	incf	___fladd@aexp,w
 10202  0C2A  1D03               	btfss	3,2
 10203  0C2B  2C34               	goto	l6188
 10204  0C2C  3000               	movlw	0
 10205  0C2D  00F8               	movwf	___fladd@a+3
 10206  0C2E  3000               	movlw	0
 10207  0C2F  00F7               	movwf	___fladd@a+2
 10208  0C30  3000               	movlw	0
 10209  0C31  00F6               	movwf	___fladd@a+1
 10210  0C32  3000               	movlw	0
 10211  0C33  00F5               	movwf	___fladd@a
 10212  0C34                     l6188:	
 10213  0C34  17F7               	bsf	___fladd@a+2,7
 10214  0C35  01F8               	clrf	___fladd@a+3
 10215  0C36  2C3F               	goto	l1450
 10216  0C37                     l6192:	
 10217  0C37  3000               	movlw	0
 10218  0C38  00F8               	movwf	___fladd@a+3
 10219  0C39  3000               	movlw	0
 10220  0C3A  00F7               	movwf	___fladd@a+2
 10221  0C3B  3000               	movlw	0
 10222  0C3C  00F6               	movwf	___fladd@a+1
 10223  0C3D  3000               	movlw	0
 10224  0C3E  00F5               	movwf	___fladd@a
 10225  0C3F                     l1450:	
 10226  0C3F  082A               	movf	___fladd@bexp,w
 10227  0C40  0229               	subwf	___fladd@aexp,w
 10228  0C41  1803               	skipnc
 10229  0C42  2C85               	goto	l6228
 10230  0C43  1F28               	btfss	___fladd@signs,6
 10231  0C44  2C49               	goto	l6198
 10232  0C45  3080               	movlw	128
 10233  0C46  00A0               	movwf	??___fladd
 10234  0C47  0820               	movf	??___fladd,w
 10235  0C48  06A8               	xorwf	___fladd@signs,f
 10236  0C49                     l6198:	
 10237  0C49  082A               	movf	___fladd@bexp,w
 10238  0C4A  00A0               	movwf	??___fladd
 10239  0C4B  0820               	movf	??___fladd,w
 10240  0C4C  00AB               	movwf	___fladd@grs
 10241  0C4D  0829               	movf	___fladd@aexp,w
 10242  0C4E  00A0               	movwf	??___fladd
 10243  0C4F  0820               	movf	??___fladd,w
 10244  0C50  00AA               	movwf	___fladd@bexp
 10245  0C51  082B               	movf	___fladd@grs,w
 10246  0C52  00A0               	movwf	??___fladd
 10247  0C53  0820               	movf	??___fladd,w
 10248  0C54  00A9               	movwf	___fladd@aexp
 10249  0C55  0871               	movf	___fladd@b,w
 10250  0C56  00A0               	movwf	??___fladd
 10251  0C57  0820               	movf	??___fladd,w
 10252  0C58  00AB               	movwf	___fladd@grs
 10253  0C59  0875               	movf	___fladd@a,w
 10254  0C5A  00A0               	movwf	??___fladd
 10255  0C5B  0820               	movf	??___fladd,w
 10256  0C5C  00F1               	movwf	___fladd@b
 10257  0C5D  082B               	movf	___fladd@grs,w
 10258  0C5E  00A0               	movwf	??___fladd
 10259  0C5F  0820               	movf	??___fladd,w
 10260  0C60  00F5               	movwf	___fladd@a
 10261  0C61  0872               	movf	___fladd@b+1,w
 10262  0C62  00A0               	movwf	??___fladd
 10263  0C63  0820               	movf	??___fladd,w
 10264  0C64  00AB               	movwf	___fladd@grs
 10265  0C65  0876               	movf	___fladd@a+1,w
 10266  0C66  00A0               	movwf	??___fladd
 10267  0C67  0820               	movf	??___fladd,w
 10268  0C68  00F2               	movwf	___fladd@b+1
 10269  0C69  082B               	movf	___fladd@grs,w
 10270  0C6A  00A0               	movwf	??___fladd
 10271  0C6B  0820               	movf	??___fladd,w
 10272  0C6C  00F6               	movwf	___fladd@a+1
 10273  0C6D  0873               	movf	___fladd@b+2,w
 10274  0C6E  00A0               	movwf	??___fladd
 10275  0C6F  0820               	movf	??___fladd,w
 10276  0C70  00AB               	movwf	___fladd@grs
 10277  0C71  0877               	movf	___fladd@a+2,w
 10278  0C72  00A0               	movwf	??___fladd
 10279  0C73  0820               	movf	??___fladd,w
 10280  0C74  00F3               	movwf	___fladd@b+2
 10281  0C75  082B               	movf	___fladd@grs,w
 10282  0C76  00A0               	movwf	??___fladd
 10283  0C77  0820               	movf	??___fladd,w
 10284  0C78  00F7               	movwf	___fladd@a+2
 10285  0C79  0874               	movf	___fladd@b+3,w
 10286  0C7A  00A0               	movwf	??___fladd
 10287  0C7B  0820               	movf	??___fladd,w
 10288  0C7C  00AB               	movwf	___fladd@grs
 10289  0C7D  0878               	movf	___fladd@a+3,w
 10290  0C7E  00A0               	movwf	??___fladd
 10291  0C7F  0820               	movf	??___fladd,w
 10292  0C80  00F4               	movwf	___fladd@b+3
 10293  0C81  082B               	movf	___fladd@grs,w
 10294  0C82  00A0               	movwf	??___fladd
 10295  0C83  0820               	movf	??___fladd,w
 10296  0C84  00F8               	movwf	___fladd@a+3
 10297  0C85                     l6228:	
 10298  0C85  01AB               	clrf	___fladd@grs
 10299  0C86  0829               	movf	___fladd@aexp,w
 10300  0C87  00A0               	movwf	??___fladd
 10301  0C88  01A1               	clrf	??___fladd+1
 10302  0C89  0821               	movf	??___fladd+1,w
 10303  0C8A  00A3               	movwf	??___fladd+3
 10304  0C8B  082A               	movf	___fladd@bexp,w
 10305  0C8C  0220               	subwf	??___fladd,w
 10306  0C8D  00A2               	movwf	??___fladd+2
 10307  0C8E  1C03               	skipc
 10308  0C8F  03A3               	decf	??___fladd+3,f
 10309  0C90  0823               	movf	??___fladd+3,w
 10310  0C91  3A80               	xorlw	128
 10311  0C92  00A4               	movwf	??___fladd+4
 10312  0C93  3080               	movlw	128
 10313  0C94  0224               	subwf	??___fladd+4,w
 10314  0C95  1D03               	skipz
 10315  0C96  2C99               	goto	u6335
 10316  0C97  301A               	movlw	26
 10317  0C98  0222               	subwf	??___fladd+2,w
 10318  0C99                     u6335:	
 10319  0C99  1C03               	skipc
 10320  0C9A  2CCD               	goto	l6246
 10321  0C9B  0874               	movf	___fladd@b+3,w
 10322  0C9C  0473               	iorwf	___fladd@b+2,w
 10323  0C9D  0472               	iorwf	___fladd@b+1,w
 10324  0C9E  0471               	iorwf	___fladd@b,w
 10325  0C9F  1903               	btfsc	3,2
 10326  0CA0  2CA3               	goto	u6340
 10327  0CA1  3001               	movlw	1
 10328  0CA2  2CA4               	goto	u6350
 10329  0CA3                     u6340:	
 10330  0CA3  3000               	movlw	0
 10331  0CA4                     u6350:	
 10332  0CA4  0020               	movlb	0	; select bank0
 10333  0CA5  00A0               	movwf	??___fladd
 10334  0CA6  0820               	movf	??___fladd,w
 10335  0CA7  00AB               	movwf	___fladd@grs
 10336  0CA8  3000               	movlw	0
 10337  0CA9  00F4               	movwf	___fladd@b+3
 10338  0CAA  3000               	movlw	0
 10339  0CAB  00F3               	movwf	___fladd@b+2
 10340  0CAC  3000               	movlw	0
 10341  0CAD  00F2               	movwf	___fladd@b+1
 10342  0CAE  3000               	movlw	0
 10343  0CAF  00F1               	movwf	___fladd@b
 10344  0CB0  0829               	movf	___fladd@aexp,w
 10345  0CB1  00A0               	movwf	??___fladd
 10346  0CB2  0820               	movf	??___fladd,w
 10347  0CB3  00AA               	movwf	___fladd@bexp
 10348  0CB4  2CD2               	goto	l1454
 10349  0CB5                     l1456:	
 10350  0CB5  1C2B               	btfss	___fladd@grs,0
 10351  0CB6  2CBD               	goto	l6236
 10352  0CB7  362B               	lsrf	___fladd@grs,w
 10353  0CB8  3801               	iorlw	1
 10354  0CB9  00A0               	movwf	??___fladd
 10355  0CBA  0820               	movf	??___fladd,w
 10356  0CBB  00AB               	movwf	___fladd@grs
 10357  0CBC  2CBF               	goto	l6238
 10358  0CBD                     l6236:	
 10359  0CBD  1003               	clrc
 10360  0CBE  0CAB               	rrf	___fladd@grs,f
 10361  0CBF                     l6238:	
 10362  0CBF  1871               	btfsc	___fladd@b,0
 10363  0CC0  17AB               	bsf	___fladd@grs,7
 10364  0CC1  3001               	movlw	1
 10365  0CC2  00A0               	movwf	??___fladd
 10366  0CC3                     u6385:	
 10367  0CC3  37F4               	asrf	___fladd@b+3,f
 10368  0CC4  0CF3               	rrf	___fladd@b+2,f
 10369  0CC5  0CF2               	rrf	___fladd@b+1,f
 10370  0CC6  0CF1               	rrf	___fladd@b,f
 10371  0CC7  0BA0               	decfsz	??___fladd& (0+127),f
 10372  0CC8  2CC3               	goto	u6385
 10373  0CC9  3001               	movlw	1
 10374  0CCA  00A0               	movwf	??___fladd
 10375  0CCB  0820               	movf	??___fladd,w
 10376  0CCC  07AA               	addwf	___fladd@bexp,f
 10377  0CCD                     l6246:	
 10378  0CCD  0020               	movlb	0	; select bank0
 10379  0CCE  0829               	movf	___fladd@aexp,w
 10380  0CCF  022A               	subwf	___fladd@bexp,w
 10381  0CD0  1C03               	skipc
 10382  0CD1  2CB5               	goto	l1456
 10383  0CD2                     l1454:	
 10384  0CD2  1B28               	btfsc	___fladd@signs,6
 10385  0CD3  2D03               	goto	l6272
 10386  0CD4  082A               	movf	___fladd@bexp,w
 10387  0CD5  1D03               	btfss	3,2
 10388  0CD6  2CE0               	goto	l6254
 10389  0CD7  3000               	movlw	0
 10390  0CD8  00F4               	movwf	?___fladd+3
 10391  0CD9  3000               	movlw	0
 10392  0CDA  00F3               	movwf	?___fladd+2
 10393  0CDB  3000               	movlw	0
 10394  0CDC  00F2               	movwf	?___fladd+1
 10395  0CDD  3000               	movlw	0
 10396  0CDE  00F1               	movwf	?___fladd
 10397  0CDF  0008               	return
 10398  0CE0                     l6254:	
 10399  0CE0  0875               	movf	___fladd@a,w
 10400  0CE1  07F1               	addwf	___fladd@b,f
 10401  0CE2  0876               	movf	___fladd@a+1,w
 10402  0CE3  3DF2               	addwfc	___fladd@b+1,f
 10403  0CE4  0877               	movf	___fladd@a+2,w
 10404  0CE5  3DF3               	addwfc	___fladd@b+2,f
 10405  0CE6  0878               	movf	___fladd@a+3,w
 10406  0CE7  3DF4               	addwfc	___fladd@b+3,f
 10407  0CE8  1C74               	btfss	___fladd@b+3,0
 10408  0CE9  2D7D               	goto	l6306
 10409  0CEA  1C2B               	btfss	___fladd@grs,0
 10410  0CEB  2CF2               	goto	l6262
 10411  0CEC  362B               	lsrf	___fladd@grs,w
 10412  0CED  3801               	iorlw	1
 10413  0CEE  00A0               	movwf	??___fladd
 10414  0CEF  0820               	movf	??___fladd,w
 10415  0CF0  00AB               	movwf	___fladd@grs
 10416  0CF1  2CF4               	goto	l6264
 10417  0CF2                     l6262:	
 10418  0CF2  1003               	clrc
 10419  0CF3  0CAB               	rrf	___fladd@grs,f
 10420  0CF4                     l6264:	
 10421  0CF4  1871               	btfsc	___fladd@b,0
 10422  0CF5  17AB               	bsf	___fladd@grs,7
 10423  0CF6  3001               	movlw	1
 10424  0CF7  00A0               	movwf	??___fladd
 10425  0CF8                     u6455:	
 10426  0CF8  37F4               	asrf	___fladd@b+3,f
 10427  0CF9  0CF3               	rrf	___fladd@b+2,f
 10428  0CFA  0CF2               	rrf	___fladd@b+1,f
 10429  0CFB  0CF1               	rrf	___fladd@b,f
 10430  0CFC  0BA0               	decfsz	??___fladd& (0+127),f
 10431  0CFD  2CF8               	goto	u6455
 10432  0CFE  3001               	movlw	1
 10433  0CFF  00A0               	movwf	??___fladd
 10434  0D00  0820               	movf	??___fladd,w
 10435  0D01  07AA               	addwf	___fladd@bexp,f
 10436  0D02  2D7D               	goto	l6306
 10437  0D03                     l6272:	
 10438  0D03  0874               	movf	___fladd@b+3,w
 10439  0D04  3A80               	xorlw	128
 10440  0D05  00A0               	movwf	??___fladd
 10441  0D06  0878               	movf	___fladd@a+3,w
 10442  0D07  3A80               	xorlw	128
 10443  0D08  0220               	subwf	??___fladd,w
 10444  0D09  1D03               	skipz
 10445  0D0A  2D15               	goto	u6463
 10446  0D0B  0877               	movf	___fladd@a+2,w
 10447  0D0C  0273               	subwf	___fladd@b+2,w
 10448  0D0D  1D03               	skipz
 10449  0D0E  2D15               	goto	u6463
 10450  0D0F  0876               	movf	___fladd@a+1,w
 10451  0D10  0272               	subwf	___fladd@b+1,w
 10452  0D11  1D03               	skipz
 10453  0D12  2D15               	goto	u6463
 10454  0D13  0875               	movf	___fladd@a,w
 10455  0D14  0271               	subwf	___fladd@b,w
 10456  0D15                     u6463:	
 10457  0D15  1803               	skipnc
 10458  0D16  2D4D               	goto	l6282
 10459  0D17  30FF               	movlw	255
 10460  0D18  00A0               	movwf	??___fladd
 10461  0D19  30FF               	movlw	255
 10462  0D1A  00A1               	movwf	??___fladd+1
 10463  0D1B  30FF               	movlw	255
 10464  0D1C  00A2               	movwf	??___fladd+2
 10465  0D1D  30FF               	movlw	255
 10466  0D1E  00A3               	movwf	??___fladd+3
 10467  0D1F  0871               	movf	___fladd@b,w
 10468  0D20  0275               	subwf	___fladd@a,w
 10469  0D21  00A4               	movwf	??___fladd+4
 10470  0D22  0872               	movf	___fladd@b+1,w
 10471  0D23  3B76               	subwfb	___fladd@a+1,w
 10472  0D24  00A5               	movwf	??___fladd+5
 10473  0D25  0873               	movf	___fladd@b+2,w
 10474  0D26  3B77               	subwfb	___fladd@a+2,w
 10475  0D27  00A6               	movwf	??___fladd+6
 10476  0D28  0874               	movf	___fladd@b+3,w
 10477  0D29  3B78               	subwfb	___fladd@a+3,w
 10478  0D2A  00A7               	movwf	??___fladd+7
 10479  0D2B  0824               	movf	??___fladd+4,w
 10480  0D2C  07A0               	addwf	??___fladd,f
 10481  0D2D  0825               	movf	??___fladd+5,w
 10482  0D2E  3DA1               	addwfc	??___fladd+1,f
 10483  0D2F  0826               	movf	??___fladd+6,w
 10484  0D30  3DA2               	addwfc	??___fladd+2,f
 10485  0D31  0827               	movf	??___fladd+7,w
 10486  0D32  3DA3               	addwfc	??___fladd+3,f
 10487  0D33  0823               	movf	??___fladd+3,w
 10488  0D34  00F4               	movwf	___fladd@b+3
 10489  0D35  0822               	movf	??___fladd+2,w
 10490  0D36  00F3               	movwf	___fladd@b+2
 10491  0D37  0821               	movf	??___fladd+1,w
 10492  0D38  00F2               	movwf	___fladd@b+1
 10493  0D39  0820               	movf	??___fladd,w
 10494  0D3A  00F1               	movwf	___fladd@b
 10495  0D3B  3080               	movlw	128
 10496  0D3C  00A0               	movwf	??___fladd
 10497  0D3D  0820               	movf	??___fladd,w
 10498  0D3E  06A8               	xorwf	___fladd@signs,f
 10499  0D3F  09AB               	comf	___fladd@grs,f
 10500  0D40  0AAB               	incf	___fladd@grs,f
 10501  0D41  082B               	movf	___fladd@grs,w
 10502  0D42  1D03               	btfss	3,2
 10503  0D43  2D55               	goto	l1471
 10504  0D44  3001               	movlw	1
 10505  0D45  07F1               	addwf	___fladd@b,f
 10506  0D46  3000               	movlw	0
 10507  0D47  3DF2               	addwfc	___fladd@b+1,f
 10508  0D48  3000               	movlw	0
 10509  0D49  3DF3               	addwfc	___fladd@b+2,f
 10510  0D4A  3000               	movlw	0
 10511  0D4B  3DF4               	addwfc	___fladd@b+3,f
 10512  0D4C  2D55               	goto	l1471
 10513  0D4D                     l6282:	
 10514  0D4D  0875               	movf	___fladd@a,w
 10515  0D4E  02F1               	subwf	___fladd@b,f
 10516  0D4F  0876               	movf	___fladd@a+1,w
 10517  0D50  3BF2               	subwfb	___fladd@b+1,f
 10518  0D51  0877               	movf	___fladd@a+2,w
 10519  0D52  3BF3               	subwfb	___fladd@b+2,f
 10520  0D53  0878               	movf	___fladd@a+3,w
 10521  0D54  3BF4               	subwfb	___fladd@b+3,f
 10522  0D55                     l1471:	
 10523  0D55  0874               	movf	___fladd@b+3,w
 10524  0D56  0473               	iorwf	___fladd@b+2,w
 10525  0D57  0472               	iorwf	___fladd@b+1,w
 10526  0D58  0471               	iorwf	___fladd@b,w
 10527  0D59  1D03               	skipz
 10528  0D5A  2D7B               	goto	l6304
 10529  0D5B  082B               	movf	___fladd@grs,w
 10530  0D5C  1D03               	btfss	3,2
 10531  0D5D  2D7B               	goto	l6304
 10532  0D5E  3000               	movlw	0
 10533  0D5F  00F4               	movwf	?___fladd+3
 10534  0D60  3000               	movlw	0
 10535  0D61  00F3               	movwf	?___fladd+2
 10536  0D62  3000               	movlw	0
 10537  0D63  00F2               	movwf	?___fladd+1
 10538  0D64  3000               	movlw	0
 10539  0D65  00F1               	movwf	?___fladd
 10540  0D66  0008               	return
 10541  0D67                     l6290:	
 10542  0D67  3001               	movlw	1
 10543  0D68                     u6505:	
 10544  0D68  35F1               	lslf	___fladd@b,f
 10545  0D69  0DF2               	rlf	___fladd@b+1,f
 10546  0D6A  0DF3               	rlf	___fladd@b+2,f
 10547  0D6B  0DF4               	rlf	___fladd@b+3,f
 10548  0D6C  0B89               	decfsz	9,f
 10549  0D6D  2D68               	goto	u6505
 10550  0D6E  1BAB               	btfsc	___fladd@grs,7
 10551  0D6F  1471               	bsf	___fladd@b,0
 10552  0D70  1C2B               	btfss	___fladd@grs,0
 10553  0D71  2D74               	goto	l6298
 10554  0D72  1403               	setc
 10555  0D73  2D75               	goto	L10
 10556  0D74                     l6298:	
 10557  0D74  1003               	clrc
 10558  0D75                     L10:	
 10559  0D75  0DAB               	rlf	___fladd@grs,f
 10560  0D76  082A               	movf	___fladd@bexp,w
 10561  0D77  1903               	btfsc	3,2
 10562  0D78  2D7B               	goto	l6304
 10563  0D79  3001               	movlw	1
 10564  0D7A  02AA               	subwf	___fladd@bexp,f
 10565  0D7B                     l6304:	
 10566  0D7B  1FF3               	btfss	___fladd@b+2,7
 10567  0D7C  2D67               	goto	l6290
 10568  0D7D                     l6306:	
 10569  0D7D  01A9               	clrf	___fladd@aexp
 10570  0D7E  1FAB               	btfss	___fladd@grs,7
 10571  0D7F  2D88               	goto	l6316
 10572  0D80  082B               	movf	___fladd@grs,w
 10573  0D81  397F               	andlw	127
 10574  0D82  1903               	btfsc	3,2
 10575  0D83  1871               	btfsc	___fladd@b,0
 10576  0D84  2D86               	goto	l6312
 10577  0D85  2D88               	goto	l6316
 10578  0D86                     l6312:	
 10579  0D86  01A9               	clrf	___fladd@aexp
 10580  0D87  0AA9               	incf	___fladd@aexp,f
 10581  0D88                     l6316:	
 10582  0D88  0829               	movf	___fladd@aexp,w
 10583  0D89  1903               	btfsc	3,2
 10584  0D8A  2DB4               	goto	l1484
 10585  0D8B  3001               	movlw	1
 10586  0D8C  07F1               	addwf	___fladd@b,f
 10587  0D8D  3000               	movlw	0
 10588  0D8E  3DF2               	addwfc	___fladd@b+1,f
 10589  0D8F  3000               	movlw	0
 10590  0D90  3DF3               	addwfc	___fladd@b+2,f
 10591  0D91  3000               	movlw	0
 10592  0D92  3DF4               	addwfc	___fladd@b+3,f
 10593  0D93  1C74               	btfss	___fladd@b+3,0
 10594  0D94  2DB4               	goto	l1484
 10595  0D95  0871               	movf	___fladd@b,w
 10596  0D96  00A0               	movwf	??___fladd
 10597  0D97  0872               	movf	___fladd@b+1,w
 10598  0D98  00A1               	movwf	??___fladd+1
 10599  0D99  0873               	movf	___fladd@b+2,w
 10600  0D9A  00A2               	movwf	??___fladd+2
 10601  0D9B  0874               	movf	___fladd@b+3,w
 10602  0D9C  00A3               	movwf	??___fladd+3
 10603  0D9D  3001               	movlw	1
 10604  0D9E  00A4               	movwf	??___fladd+4
 10605  0D9F                     u6605:	
 10606  0D9F  37A3               	asrf	??___fladd+3,f
 10607  0DA0  0CA2               	rrf	??___fladd+2,f
 10608  0DA1  0CA1               	rrf	??___fladd+1,f
 10609  0DA2  0CA0               	rrf	??___fladd,f
 10610  0DA3  0BA4               	decfsz	??___fladd+4,f
 10611  0DA4  2D9F               	goto	u6605
 10612  0DA5  0823               	movf	??___fladd+3,w
 10613  0DA6  00F4               	movwf	___fladd@b+3
 10614  0DA7  0822               	movf	??___fladd+2,w
 10615  0DA8  00F3               	movwf	___fladd@b+2
 10616  0DA9  0821               	movf	??___fladd+1,w
 10617  0DAA  00F2               	movwf	___fladd@b+1
 10618  0DAB  0820               	movf	??___fladd,w
 10619  0DAC  00F1               	movwf	___fladd@b
 10620  0DAD  0A2A               	incf	___fladd@bexp,w
 10621  0DAE  1903               	btfsc	3,2
 10622  0DAF  2DB4               	goto	l1484
 10623  0DB0  3001               	movlw	1
 10624  0DB1  00A0               	movwf	??___fladd
 10625  0DB2  0820               	movf	??___fladd,w
 10626  0DB3  07AA               	addwf	___fladd@bexp,f
 10627  0DB4                     l1484:	
 10628  0DB4  0A2A               	incf	___fladd@bexp,w
 10629  0DB5  1D03               	btfss	3,2
 10630  0DB6  082A               	movf	___fladd@bexp,w
 10631  0DB7  1D03               	btfss	3,2
 10632  0DB8  2DC4               	goto	l6334
 10633  0DB9  3000               	movlw	0
 10634  0DBA  00F4               	movwf	___fladd@b+3
 10635  0DBB  3000               	movlw	0
 10636  0DBC  00F3               	movwf	___fladd@b+2
 10637  0DBD  3000               	movlw	0
 10638  0DBE  00F2               	movwf	___fladd@b+1
 10639  0DBF  3000               	movlw	0
 10640  0DC0  00F1               	movwf	___fladd@b
 10641  0DC1  082A               	movf	___fladd@bexp,w
 10642  0DC2  1903               	btfsc	3,2
 10643  0DC3  01A8               	clrf	___fladd@signs
 10644  0DC4                     l6334:	
 10645  0DC4  1C2A               	btfss	___fladd@bexp,0
 10646  0DC5  2DC8               	goto	l6338
 10647  0DC6  17F3               	bsf	___fladd@b+2,7
 10648  0DC7  2DCC               	goto	l1492
 10649  0DC8                     l6338:	
 10650  0DC8  307F               	movlw	127
 10651  0DC9  00A0               	movwf	??___fladd
 10652  0DCA  0820               	movf	??___fladd,w
 10653  0DCB  05F3               	andwf	___fladd@b+2,f
 10654  0DCC                     l1492:	
 10655  0DCC  362A               	lsrf	___fladd@bexp,w
 10656  0DCD  00A0               	movwf	??___fladd
 10657  0DCE  0820               	movf	??___fladd,w
 10658  0DCF  00F4               	movwf	___fladd@b+3
 10659  0DD0  1FA8               	btfss	___fladd@signs,7
 10660  0DD1  0008               	return
 10661  0DD2  17F4               	bsf	___fladd@b+3,7
 10662  0DD3  0008               	return
 10663  0DD4                     __end_of___fladd:	
 10664                           
 10665                           	psect	text25
 10666  1E81                     __ptext25:	
 10667 ;; *************** function ___flneg *****************
 10668 ;; Defined at:
 10669 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
 10670 ;; Parameters:    Size  Location     Type
 10671 ;;  f1              4    1[COMMON] unsigned char 
 10672 ;; Auto vars:     Size  Location     Type
 10673 ;;		None
 10674 ;; Return value:  Size  Location     Type
 10675 ;;                  4    1[COMMON] unsigned char 
 10676 ;; Registers used:
 10677 ;;		wreg
 10678 ;; Tracked objects:
 10679 ;;		On entry : 0/0
 10680 ;;		On exit  : 0/0
 10681 ;;		Unchanged: 0/0
 10682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10683 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10686 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10687 ;;Total ram usage:        4 bytes
 10688 ;; Hardware stack levels used:    1
 10689 ;; Hardware stack levels required when called:    4
 10690 ;; This function calls:
 10691 ;;		Nothing
 10692 ;; This function is called by:
 10693 ;;		_efgtoa
 10694 ;; This function uses a non-reentrant model
 10695 ;;
 10696                           
 10697                           
 10698                           ;psect for function ___flneg
 10699  1E81                     ___flneg:	
 10700                           
 10701                           ;incstack = 0
 10702                           ; Regs used in ___flneg: [wreg]
 10703  1E81  0874               	movf	___flneg@f1+3,w
 10704  1E82  0473               	iorwf	___flneg@f1+2,w
 10705  1E83  0472               	iorwf	___flneg@f1+1,w
 10706  1E84  0471               	iorwf	___flneg@f1,w
 10707  1E85  1903               	skipnz
 10708  1E86  0008               	return
 10709  1E87  3080               	movlw	128
 10710  1E88  06F4               	xorwf	___flneg@f1+3,f
 10711  1E89  0008               	return
 10712  1E8A                     __end_of___flneg:	
 10713                           
 10714                           	psect	text26
 10715  0DD4                     __ptext26:	
 10716 ;; *************** function ___flmul *****************
 10717 ;; Defined at:
 10718 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 10719 ;; Parameters:    Size  Location     Type
 10720 ;;  b               4    0[BANK0 ] unsigned char 
 10721 ;;  a               4    4[BANK0 ] unsigned char 
 10722 ;; Auto vars:     Size  Location     Type
 10723 ;;  prod            4   20[BANK0 ] struct .
 10724 ;;  grs             4   14[BANK0 ] unsigned long 
 10725 ;;  temp            2   24[BANK0 ] struct .
 10726 ;;  bexp            1   19[BANK0 ] unsigned char 
 10727 ;;  aexp            1   18[BANK0 ] unsigned char 
 10728 ;;  sign            1   13[BANK0 ] unsigned char 
 10729 ;; Return value:  Size  Location     Type
 10730 ;;                  4    0[BANK0 ] unsigned char 
 10731 ;; Registers used:
 10732 ;;		wreg, status,2, status,0, pclath, cstack
 10733 ;; Tracked objects:
 10734 ;;		On entry : 0/0
 10735 ;;		On exit  : 0/0
 10736 ;;		Unchanged: 0/0
 10737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10738 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10739 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10740 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10741 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10742 ;;Total ram usage:       26 bytes
 10743 ;; Hardware stack levels used:    1
 10744 ;; Hardware stack levels required when called:    5
 10745 ;; This function calls:
 10746 ;;		__Umul8_16
 10747 ;; This function is called by:
 10748 ;;		_efgtoa
 10749 ;; This function uses a non-reentrant model
 10750 ;;
 10751                           
 10752                           
 10753                           ;psect for function ___flmul
 10754  0DD4                     ___flmul:	
 10755                           
 10756                           ;incstack = 0
 10757                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 10758  0DD4  0020               	movlb	0	; select bank0
 10759  0DD5  0823               	movf	___flmul@b+3,w
 10760  0DD6  3980               	andlw	128
 10761  0DD7  00A8               	movwf	??___flmul
 10762  0DD8  0828               	movf	??___flmul,w
 10763  0DD9  00AD               	movwf	___flmul@sign
 10764  0DDA  3523               	lslf	___flmul@b+3,w
 10765  0DDB  00A8               	movwf	??___flmul
 10766  0DDC  0828               	movf	??___flmul,w
 10767  0DDD  00B3               	movwf	___flmul@bexp
 10768  0DDE  1BA2               	btfsc	___flmul@b+2,7
 10769  0DDF  1433               	bsf	___flmul@bexp,0
 10770  0DE0  0833               	movf	___flmul@bexp,w
 10771  0DE1  1903               	btfsc	3,2
 10772  0DE2  2DF0               	goto	l4896
 10773  0DE3  0A33               	incf	___flmul@bexp,w
 10774  0DE4  1D03               	btfss	3,2
 10775  0DE5  2DEE               	goto	l4894
 10776  0DE6  3000               	movlw	0
 10777  0DE7  00A3               	movwf	___flmul@b+3
 10778  0DE8  3000               	movlw	0
 10779  0DE9  00A2               	movwf	___flmul@b+2
 10780  0DEA  3000               	movlw	0
 10781  0DEB  00A1               	movwf	___flmul@b+1
 10782  0DEC  3000               	movlw	0
 10783  0DED  00A0               	movwf	___flmul@b
 10784  0DEE                     l4894:	
 10785  0DEE  17A2               	bsf	___flmul@b+2,7
 10786  0DEF  2DF8               	goto	l4898
 10787  0DF0                     l4896:	
 10788  0DF0  3000               	movlw	0
 10789  0DF1  00A3               	movwf	___flmul@b+3
 10790  0DF2  3000               	movlw	0
 10791  0DF3  00A2               	movwf	___flmul@b+2
 10792  0DF4  3000               	movlw	0
 10793  0DF5  00A1               	movwf	___flmul@b+1
 10794  0DF6  3000               	movlw	0
 10795  0DF7  00A0               	movwf	___flmul@b
 10796  0DF8                     l4898:	
 10797  0DF8  0827               	movf	___flmul@a+3,w
 10798  0DF9  3980               	andlw	128
 10799  0DFA  00A8               	movwf	??___flmul
 10800  0DFB  0828               	movf	??___flmul,w
 10801  0DFC  06AD               	xorwf	___flmul@sign,f
 10802  0DFD  3527               	lslf	___flmul@a+3,w
 10803  0DFE  00A8               	movwf	??___flmul
 10804  0DFF  0828               	movf	??___flmul,w
 10805  0E00  00B2               	movwf	___flmul@aexp
 10806  0E01  1BA6               	btfsc	___flmul@a+2,7
 10807  0E02  1432               	bsf	___flmul@aexp,0
 10808  0E03  0832               	movf	___flmul@aexp,w
 10809  0E04  1903               	btfsc	3,2
 10810  0E05  2E13               	goto	l4914
 10811  0E06  0A32               	incf	___flmul@aexp,w
 10812  0E07  1D03               	btfss	3,2
 10813  0E08  2E11               	goto	l4912
 10814  0E09  3000               	movlw	0
 10815  0E0A  00A7               	movwf	___flmul@a+3
 10816  0E0B  3000               	movlw	0
 10817  0E0C  00A6               	movwf	___flmul@a+2
 10818  0E0D  3000               	movlw	0
 10819  0E0E  00A5               	movwf	___flmul@a+1
 10820  0E0F  3000               	movlw	0
 10821  0E10  00A4               	movwf	___flmul@a
 10822  0E11                     l4912:	
 10823  0E11  17A6               	bsf	___flmul@a+2,7
 10824  0E12  2E1B               	goto	l4916
 10825  0E13                     l4914:	
 10826  0E13  3000               	movlw	0
 10827  0E14  00A7               	movwf	___flmul@a+3
 10828  0E15  3000               	movlw	0
 10829  0E16  00A6               	movwf	___flmul@a+2
 10830  0E17  3000               	movlw	0
 10831  0E18  00A5               	movwf	___flmul@a+1
 10832  0E19  3000               	movlw	0
 10833  0E1A  00A4               	movwf	___flmul@a
 10834  0E1B                     l4916:	
 10835  0E1B  0832               	movf	___flmul@aexp,w
 10836  0E1C  1D03               	btfss	3,2
 10837  0E1D  0833               	movf	___flmul@bexp,w
 10838  0E1E  1D03               	btfss	3,2
 10839  0E1F  2E29               	goto	l4924
 10840  0E20  3000               	movlw	0
 10841  0E21  00A3               	movwf	?___flmul+3
 10842  0E22  3000               	movlw	0
 10843  0E23  00A2               	movwf	?___flmul+2
 10844  0E24  3000               	movlw	0
 10845  0E25  00A1               	movwf	?___flmul+1
 10846  0E26  3000               	movlw	0
 10847  0E27  00A0               	movwf	?___flmul
 10848  0E28  0008               	return
 10849  0E29                     l4924:	
 10850  0E29  0820               	movf	___flmul@b,w
 10851  0E2A  00A8               	movwf	??___flmul
 10852  0E2B  0828               	movf	??___flmul,w
 10853  0E2C  00F1               	movwf	__Umul8_16@multiplicand
 10854  0E2D  0826               	movf	___flmul@a+2,w
 10855  0E2E  319F  27E1  318D   	fcall	__Umul8_16
 10856  0E31  0872               	movf	?__Umul8_16+1,w
 10857  0E32  0020               	movlb	0	; select bank0
 10858  0E33  00B9               	movwf	___flmul@temp+1
 10859  0E34  0871               	movf	?__Umul8_16,w
 10860  0E35  00B8               	movwf	___flmul@temp
 10861  0E36  0838               	movf	___flmul@temp,w
 10862  0E37  00A8               	movwf	??___flmul
 10863  0E38  01A9               	clrf	??___flmul+1
 10864  0E39  01AA               	clrf	??___flmul+2
 10865  0E3A  01AB               	clrf	??___flmul+3
 10866  0E3B  082B               	movf	??___flmul+3,w
 10867  0E3C  00B1               	movwf	___flmul@grs+3
 10868  0E3D  082A               	movf	??___flmul+2,w
 10869  0E3E  00B0               	movwf	___flmul@grs+2
 10870  0E3F  0829               	movf	??___flmul+1,w
 10871  0E40  00AF               	movwf	___flmul@grs+1
 10872  0E41  0828               	movf	??___flmul,w
 10873  0E42  00AE               	movwf	___flmul@grs
 10874  0E43  0839               	movf	___flmul@temp+1,w
 10875  0E44  00A8               	movwf	??___flmul
 10876  0E45  01A9               	clrf	??___flmul+1
 10877  0E46  01AA               	clrf	??___flmul+2
 10878  0E47  01AB               	clrf	??___flmul+3
 10879  0E48  082B               	movf	??___flmul+3,w
 10880  0E49  00B7               	movwf	___flmul@prod+3
 10881  0E4A  082A               	movf	??___flmul+2,w
 10882  0E4B  00B6               	movwf	___flmul@prod+2
 10883  0E4C  0829               	movf	??___flmul+1,w
 10884  0E4D  00B5               	movwf	___flmul@prod+1
 10885  0E4E  0828               	movf	??___flmul,w
 10886  0E4F  00B4               	movwf	___flmul@prod
 10887  0E50  0821               	movf	___flmul@b+1,w
 10888  0E51  00A8               	movwf	??___flmul
 10889  0E52  0828               	movf	??___flmul,w
 10890  0E53  00F1               	movwf	__Umul8_16@multiplicand
 10891  0E54  0825               	movf	___flmul@a+1,w
 10892  0E55  319F  27E1  318D   	fcall	__Umul8_16
 10893  0E58  0872               	movf	?__Umul8_16+1,w
 10894  0E59  0020               	movlb	0	; select bank0
 10895  0E5A  00B9               	movwf	___flmul@temp+1
 10896  0E5B  0871               	movf	?__Umul8_16,w
 10897  0E5C  00B8               	movwf	___flmul@temp
 10898  0E5D  0838               	movf	___flmul@temp,w
 10899  0E5E  00A8               	movwf	??___flmul
 10900  0E5F  01A9               	clrf	??___flmul+1
 10901  0E60  01AA               	clrf	??___flmul+2
 10902  0E61  01AB               	clrf	??___flmul+3
 10903  0E62  0828               	movf	??___flmul,w
 10904  0E63  07AE               	addwf	___flmul@grs,f
 10905  0E64  0829               	movf	??___flmul+1,w
 10906  0E65  3DAF               	addwfc	___flmul@grs+1,f
 10907  0E66  082A               	movf	??___flmul+2,w
 10908  0E67  3DB0               	addwfc	___flmul@grs+2,f
 10909  0E68  082B               	movf	??___flmul+3,w
 10910  0E69  3DB1               	addwfc	___flmul@grs+3,f
 10911  0E6A  0839               	movf	___flmul@temp+1,w
 10912  0E6B  00A8               	movwf	??___flmul
 10913  0E6C  01A9               	clrf	??___flmul+1
 10914  0E6D  01AA               	clrf	??___flmul+2
 10915  0E6E  01AB               	clrf	??___flmul+3
 10916  0E6F  0828               	movf	??___flmul,w
 10917  0E70  07B4               	addwf	___flmul@prod,f
 10918  0E71  0829               	movf	??___flmul+1,w
 10919  0E72  3DB5               	addwfc	___flmul@prod+1,f
 10920  0E73  082A               	movf	??___flmul+2,w
 10921  0E74  3DB6               	addwfc	___flmul@prod+2,f
 10922  0E75  082B               	movf	??___flmul+3,w
 10923  0E76  3DB7               	addwfc	___flmul@prod+3,f
 10924  0E77  0822               	movf	___flmul@b+2,w
 10925  0E78  00A8               	movwf	??___flmul
 10926  0E79  0828               	movf	??___flmul,w
 10927  0E7A  00F1               	movwf	__Umul8_16@multiplicand
 10928  0E7B  0824               	movf	___flmul@a,w
 10929  0E7C  319F  27E1  318D   	fcall	__Umul8_16
 10930  0E7F  0872               	movf	?__Umul8_16+1,w
 10931  0E80  0020               	movlb	0	; select bank0
 10932  0E81  00B9               	movwf	___flmul@temp+1
 10933  0E82  0871               	movf	?__Umul8_16,w
 10934  0E83  00B8               	movwf	___flmul@temp
 10935  0E84  0838               	movf	___flmul@temp,w
 10936  0E85  00A8               	movwf	??___flmul
 10937  0E86  01A9               	clrf	??___flmul+1
 10938  0E87  01AA               	clrf	??___flmul+2
 10939  0E88  01AB               	clrf	??___flmul+3
 10940  0E89  0828               	movf	??___flmul,w
 10941  0E8A  07AE               	addwf	___flmul@grs,f
 10942  0E8B  0829               	movf	??___flmul+1,w
 10943  0E8C  3DAF               	addwfc	___flmul@grs+1,f
 10944  0E8D  082A               	movf	??___flmul+2,w
 10945  0E8E  3DB0               	addwfc	___flmul@grs+2,f
 10946  0E8F  082B               	movf	??___flmul+3,w
 10947  0E90  3DB1               	addwfc	___flmul@grs+3,f
 10948  0E91  0839               	movf	___flmul@temp+1,w
 10949  0E92  00A8               	movwf	??___flmul
 10950  0E93  01A9               	clrf	??___flmul+1
 10951  0E94  01AA               	clrf	??___flmul+2
 10952  0E95  01AB               	clrf	??___flmul+3
 10953  0E96  0828               	movf	??___flmul,w
 10954  0E97  07B4               	addwf	___flmul@prod,f
 10955  0E98  0829               	movf	??___flmul+1,w
 10956  0E99  3DB5               	addwfc	___flmul@prod+1,f
 10957  0E9A  082A               	movf	??___flmul+2,w
 10958  0E9B  3DB6               	addwfc	___flmul@prod+2,f
 10959  0E9C  082B               	movf	??___flmul+3,w
 10960  0E9D  3DB7               	addwfc	___flmul@prod+3,f
 10961  0E9E  3008               	movlw	8
 10962  0E9F                     u4795:	
 10963  0E9F  35AE               	lslf	___flmul@grs,f
 10964  0EA0  0DAF               	rlf	___flmul@grs+1,f
 10965  0EA1  0DB0               	rlf	___flmul@grs+2,f
 10966  0EA2  0DB1               	rlf	___flmul@grs+3,f
 10967  0EA3  0B89               	decfsz	9,f
 10968  0EA4  2E9F               	goto	u4795
 10969  0EA5  0821               	movf	___flmul@b+1,w
 10970  0EA6  00A8               	movwf	??___flmul
 10971  0EA7  0828               	movf	??___flmul,w
 10972  0EA8  00F1               	movwf	__Umul8_16@multiplicand
 10973  0EA9  0824               	movf	___flmul@a,w
 10974  0EAA  319F  27E1  318D   	fcall	__Umul8_16
 10975  0EAD  0872               	movf	?__Umul8_16+1,w
 10976  0EAE  0020               	movlb	0	; select bank0
 10977  0EAF  00B9               	movwf	___flmul@temp+1
 10978  0EB0  0871               	movf	?__Umul8_16,w
 10979  0EB1  00B8               	movwf	___flmul@temp
 10980  0EB2  0838               	movf	___flmul@temp,w
 10981  0EB3  07AE               	addwf	___flmul@grs,f
 10982  0EB4  0839               	movf	___flmul@temp+1,w
 10983  0EB5  3DAF               	addwfc	___flmul@grs+1,f
 10984  0EB6  3000               	movlw	0
 10985  0EB7  3DB0               	addwfc	___flmul@grs+2,f
 10986  0EB8  3DB1               	addwfc	___flmul@grs+3,f
 10987  0EB9  0820               	movf	___flmul@b,w
 10988  0EBA  00A8               	movwf	??___flmul
 10989  0EBB  0828               	movf	??___flmul,w
 10990  0EBC  00F1               	movwf	__Umul8_16@multiplicand
 10991  0EBD  0825               	movf	___flmul@a+1,w
 10992  0EBE  319F  27E1  318D   	fcall	__Umul8_16
 10993  0EC1  0872               	movf	?__Umul8_16+1,w
 10994  0EC2  0020               	movlb	0	; select bank0
 10995  0EC3  00B9               	movwf	___flmul@temp+1
 10996  0EC4  0871               	movf	?__Umul8_16,w
 10997  0EC5  00B8               	movwf	___flmul@temp
 10998  0EC6  0838               	movf	___flmul@temp,w
 10999  0EC7  07AE               	addwf	___flmul@grs,f
 11000  0EC8  0839               	movf	___flmul@temp+1,w
 11001  0EC9  3DAF               	addwfc	___flmul@grs+1,f
 11002  0ECA  3000               	movlw	0
 11003  0ECB  3DB0               	addwfc	___flmul@grs+2,f
 11004  0ECC  3DB1               	addwfc	___flmul@grs+3,f
 11005  0ECD  3008               	movlw	8
 11006  0ECE                     u4805:	
 11007  0ECE  35AE               	lslf	___flmul@grs,f
 11008  0ECF  0DAF               	rlf	___flmul@grs+1,f
 11009  0ED0  0DB0               	rlf	___flmul@grs+2,f
 11010  0ED1  0DB1               	rlf	___flmul@grs+3,f
 11011  0ED2  0B89               	decfsz	9,f
 11012  0ED3  2ECE               	goto	u4805
 11013  0ED4  0820               	movf	___flmul@b,w
 11014  0ED5  00A8               	movwf	??___flmul
 11015  0ED6  0828               	movf	??___flmul,w
 11016  0ED7  00F1               	movwf	__Umul8_16@multiplicand
 11017  0ED8  0824               	movf	___flmul@a,w
 11018  0ED9  319F  27E1  318D   	fcall	__Umul8_16
 11019  0EDC  0872               	movf	?__Umul8_16+1,w
 11020  0EDD  0020               	movlb	0	; select bank0
 11021  0EDE  00B9               	movwf	___flmul@temp+1
 11022  0EDF  0871               	movf	?__Umul8_16,w
 11023  0EE0  00B8               	movwf	___flmul@temp
 11024  0EE1  0838               	movf	___flmul@temp,w
 11025  0EE2  07AE               	addwf	___flmul@grs,f
 11026  0EE3  0839               	movf	___flmul@temp+1,w
 11027  0EE4  3DAF               	addwfc	___flmul@grs+1,f
 11028  0EE5  3000               	movlw	0
 11029  0EE6  3DB0               	addwfc	___flmul@grs+2,f
 11030  0EE7  3DB1               	addwfc	___flmul@grs+3,f
 11031  0EE8  0821               	movf	___flmul@b+1,w
 11032  0EE9  00A8               	movwf	??___flmul
 11033  0EEA  0828               	movf	??___flmul,w
 11034  0EEB  00F1               	movwf	__Umul8_16@multiplicand
 11035  0EEC  0826               	movf	___flmul@a+2,w
 11036  0EED  319F  27E1  318D   	fcall	__Umul8_16
 11037  0EF0  0872               	movf	?__Umul8_16+1,w
 11038  0EF1  0020               	movlb	0	; select bank0
 11039  0EF2  00B9               	movwf	___flmul@temp+1
 11040  0EF3  0871               	movf	?__Umul8_16,w
 11041  0EF4  00B8               	movwf	___flmul@temp
 11042  0EF5  0838               	movf	___flmul@temp,w
 11043  0EF6  07B4               	addwf	___flmul@prod,f
 11044  0EF7  0839               	movf	___flmul@temp+1,w
 11045  0EF8  3DB5               	addwfc	___flmul@prod+1,f
 11046  0EF9  3000               	movlw	0
 11047  0EFA  3DB6               	addwfc	___flmul@prod+2,f
 11048  0EFB  3DB7               	addwfc	___flmul@prod+3,f
 11049  0EFC  0822               	movf	___flmul@b+2,w
 11050  0EFD  00A8               	movwf	??___flmul
 11051  0EFE  0828               	movf	??___flmul,w
 11052  0EFF  00F1               	movwf	__Umul8_16@multiplicand
 11053  0F00  0825               	movf	___flmul@a+1,w
 11054  0F01  319F  27E1  318D   	fcall	__Umul8_16
 11055  0F04  0872               	movf	?__Umul8_16+1,w
 11056  0F05  0020               	movlb	0	; select bank0
 11057  0F06  00B9               	movwf	___flmul@temp+1
 11058  0F07  0871               	movf	?__Umul8_16,w
 11059  0F08  00B8               	movwf	___flmul@temp
 11060  0F09  0838               	movf	___flmul@temp,w
 11061  0F0A  07B4               	addwf	___flmul@prod,f
 11062  0F0B  0839               	movf	___flmul@temp+1,w
 11063  0F0C  3DB5               	addwfc	___flmul@prod+1,f
 11064  0F0D  3000               	movlw	0
 11065  0F0E  3DB6               	addwfc	___flmul@prod+2,f
 11066  0F0F  3DB7               	addwfc	___flmul@prod+3,f
 11067  0F10  0822               	movf	___flmul@b+2,w
 11068  0F11  00A8               	movwf	??___flmul
 11069  0F12  0828               	movf	??___flmul,w
 11070  0F13  00F1               	movwf	__Umul8_16@multiplicand
 11071  0F14  0826               	movf	___flmul@a+2,w
 11072  0F15  319F  27E1  318D   	fcall	__Umul8_16
 11073  0F18  0872               	movf	?__Umul8_16+1,w
 11074  0F19  0020               	movlb	0	; select bank0
 11075  0F1A  00B9               	movwf	___flmul@temp+1
 11076  0F1B  0871               	movf	?__Umul8_16,w
 11077  0F1C  00B8               	movwf	___flmul@temp
 11078  0F1D  0838               	movf	___flmul@temp,w
 11079  0F1E  00A8               	movwf	??___flmul
 11080  0F1F  0839               	movf	___flmul@temp+1,w
 11081  0F20  00A9               	movwf	??___flmul+1
 11082  0F21  01AA               	clrf	??___flmul+2
 11083  0F22  01AB               	clrf	??___flmul+3
 11084  0F23  3008               	movlw	8
 11085  0F24                     u4815:	
 11086  0F24  35A8               	lslf	??___flmul,f
 11087  0F25  0DA9               	rlf	??___flmul+1,f
 11088  0F26  0DAA               	rlf	??___flmul+2,f
 11089  0F27  0DAB               	rlf	??___flmul+3,f
 11090  0F28  0B89               	decfsz	9,f
 11091  0F29  2F24               	goto	u4815
 11092  0F2A  0828               	movf	??___flmul,w
 11093  0F2B  07B4               	addwf	___flmul@prod,f
 11094  0F2C  0829               	movf	??___flmul+1,w
 11095  0F2D  3DB5               	addwfc	___flmul@prod+1,f
 11096  0F2E  082A               	movf	??___flmul+2,w
 11097  0F2F  3DB6               	addwfc	___flmul@prod+2,f
 11098  0F30  082B               	movf	??___flmul+3,w
 11099  0F31  3DB7               	addwfc	___flmul@prod+3,f
 11100  0F32  082E               	movf	___flmul@grs,w
 11101  0F33  00A8               	movwf	??___flmul
 11102  0F34  082F               	movf	___flmul@grs+1,w
 11103  0F35  00A9               	movwf	??___flmul+1
 11104  0F36  0830               	movf	___flmul@grs+2,w
 11105  0F37  00AA               	movwf	??___flmul+2
 11106  0F38  0831               	movf	___flmul@grs+3,w
 11107  0F39  00AB               	movwf	??___flmul+3
 11108  0F3A  3018               	movlw	24
 11109  0F3B                     u4825:	
 11110  0F3B  36AB               	lsrf	??___flmul+3,f
 11111  0F3C  0CAA               	rrf	??___flmul+2,f
 11112  0F3D  0CA9               	rrf	??___flmul+1,f
 11113  0F3E  0CA8               	rrf	??___flmul,f
 11114  0F3F  0B89               	decfsz	9,f
 11115  0F40  2F3B               	goto	u4825
 11116  0F41  0828               	movf	??___flmul,w
 11117  0F42  07B4               	addwf	___flmul@prod,f
 11118  0F43  0829               	movf	??___flmul+1,w
 11119  0F44  3DB5               	addwfc	___flmul@prod+1,f
 11120  0F45  082A               	movf	??___flmul+2,w
 11121  0F46  3DB6               	addwfc	___flmul@prod+2,f
 11122  0F47  082B               	movf	??___flmul+3,w
 11123  0F48  3DB7               	addwfc	___flmul@prod+3,f
 11124  0F49  3008               	movlw	8
 11125  0F4A                     u4835:	
 11126  0F4A  35AE               	lslf	___flmul@grs,f
 11127  0F4B  0DAF               	rlf	___flmul@grs+1,f
 11128  0F4C  0DB0               	rlf	___flmul@grs+2,f
 11129  0F4D  0DB1               	rlf	___flmul@grs+3,f
 11130  0F4E  0B89               	decfsz	9,f
 11131  0F4F  2F4A               	goto	u4835
 11132  0F50  0833               	movf	___flmul@bexp,w
 11133  0F51  0732               	addwf	___flmul@aexp,w
 11134  0F52  00A8               	movwf	??___flmul
 11135  0F53  01A9               	clrf	??___flmul+1
 11136  0F54  0DA9               	rlf	??___flmul+1,f
 11137  0F55  0828               	movf	??___flmul,w
 11138  0F56  3E82               	addlw	130
 11139  0F57  00B8               	movwf	___flmul@temp
 11140  0F58  30FF               	movlw	255
 11141  0F59  3D29               	addwfc	??___flmul+1,w
 11142  0F5A  00B9               	movwf	___flmul@temp+1
 11143  0F5B                     l4976:	
 11144  0F5B  1BB6               	btfsc	___flmul@prod+2,7
 11145  0F5C  2F72               	goto	l4978
 11146  0F5D  3001               	movlw	1
 11147  0F5E                     u4845:	
 11148  0F5E  35B4               	lslf	___flmul@prod,f
 11149  0F5F  0DB5               	rlf	___flmul@prod+1,f
 11150  0F60  0DB6               	rlf	___flmul@prod+2,f
 11151  0F61  0DB7               	rlf	___flmul@prod+3,f
 11152  0F62  0B89               	decfsz	9,f
 11153  0F63  2F5E               	goto	u4845
 11154  0F64  1BB1               	btfsc	___flmul@grs+3,7
 11155  0F65  1434               	bsf	___flmul@prod,0
 11156  0F66  3001               	movlw	1
 11157  0F67                     u4865:	
 11158  0F67  35AE               	lslf	___flmul@grs,f
 11159  0F68  0DAF               	rlf	___flmul@grs+1,f
 11160  0F69  0DB0               	rlf	___flmul@grs+2,f
 11161  0F6A  0DB1               	rlf	___flmul@grs+3,f
 11162  0F6B  0B89               	decfsz	9,f
 11163  0F6C  2F67               	goto	u4865
 11164  0F6D  30FF               	movlw	255
 11165  0F6E  07B8               	addwf	___flmul@temp,f
 11166  0F6F  30FF               	movlw	255
 11167  0F70  3DB9               	addwfc	___flmul@temp+1,f
 11168  0F71  2F5B               	goto	l4976
 11169  0F72                     l4978:	
 11170  0F72  01B2               	clrf	___flmul@aexp
 11171  0F73  1FB1               	btfss	___flmul@grs+3,7
 11172  0F74  2F8B               	goto	l4988
 11173  0F75  30FF               	movlw	255
 11174  0F76  052E               	andwf	___flmul@grs,w
 11175  0F77  00A8               	movwf	??___flmul
 11176  0F78  30FF               	movlw	255
 11177  0F79  052F               	andwf	___flmul@grs+1,w
 11178  0F7A  00A9               	movwf	??___flmul+1
 11179  0F7B  30FF               	movlw	255
 11180  0F7C  0530               	andwf	___flmul@grs+2,w
 11181  0F7D  00AA               	movwf	??___flmul+2
 11182  0F7E  307F               	movlw	127
 11183  0F7F  0531               	andwf	___flmul@grs+3,w
 11184  0F80  00AB               	movwf	??___flmul+3
 11185  0F81  082B               	movf	??___flmul+3,w
 11186  0F82  042A               	iorwf	??___flmul+2,w
 11187  0F83  0429               	iorwf	??___flmul+1,w
 11188  0F84  0428               	iorwf	??___flmul,w
 11189  0F85  1903               	skipnz
 11190  0F86  1834               	btfsc	___flmul@prod,0
 11191  0F87  2F89               	goto	l4984
 11192  0F88  2F8B               	goto	l4988
 11193  0F89                     l4984:	
 11194  0F89  01B2               	clrf	___flmul@aexp
 11195  0F8A  0AB2               	incf	___flmul@aexp,f
 11196  0F8B                     l4988:	
 11197  0F8B  0832               	movf	___flmul@aexp,w
 11198  0F8C  1903               	btfsc	3,2
 11199  0F8D  2FB4               	goto	l4998
 11200  0F8E  3001               	movlw	1
 11201  0F8F  07B4               	addwf	___flmul@prod,f
 11202  0F90  3000               	movlw	0
 11203  0F91  3DB5               	addwfc	___flmul@prod+1,f
 11204  0F92  3000               	movlw	0
 11205  0F93  3DB6               	addwfc	___flmul@prod+2,f
 11206  0F94  3000               	movlw	0
 11207  0F95  3DB7               	addwfc	___flmul@prod+3,f
 11208  0F96  1C37               	btfss	___flmul@prod+3,0
 11209  0F97  2FB4               	goto	l4998
 11210  0F98  0834               	movf	___flmul@prod,w
 11211  0F99  00A8               	movwf	??___flmul
 11212  0F9A  0835               	movf	___flmul@prod+1,w
 11213  0F9B  00A9               	movwf	??___flmul+1
 11214  0F9C  0836               	movf	___flmul@prod+2,w
 11215  0F9D  00AA               	movwf	??___flmul+2
 11216  0F9E  0837               	movf	___flmul@prod+3,w
 11217  0F9F  00AB               	movwf	??___flmul+3
 11218  0FA0  3001               	movlw	1
 11219  0FA1  00AC               	movwf	??___flmul+4
 11220  0FA2                     u4935:	
 11221  0FA2  37AB               	asrf	??___flmul+3,f
 11222  0FA3  0CAA               	rrf	??___flmul+2,f
 11223  0FA4  0CA9               	rrf	??___flmul+1,f
 11224  0FA5  0CA8               	rrf	??___flmul,f
 11225  0FA6  0BAC               	decfsz	??___flmul+4,f
 11226  0FA7  2FA2               	goto	u4935
 11227  0FA8  082B               	movf	??___flmul+3,w
 11228  0FA9  00B7               	movwf	___flmul@prod+3
 11229  0FAA  082A               	movf	??___flmul+2,w
 11230  0FAB  00B6               	movwf	___flmul@prod+2
 11231  0FAC  0829               	movf	??___flmul+1,w
 11232  0FAD  00B5               	movwf	___flmul@prod+1
 11233  0FAE  0828               	movf	??___flmul,w
 11234  0FAF  00B4               	movwf	___flmul@prod
 11235  0FB0  3001               	movlw	1
 11236  0FB1  07B8               	addwf	___flmul@temp,f
 11237  0FB2  3000               	movlw	0
 11238  0FB3  3DB9               	addwfc	___flmul@temp+1,f
 11239  0FB4                     l4998:	
 11240  0FB4  0839               	movf	___flmul@temp+1,w
 11241  0FB5  3A80               	xorlw	128
 11242  0FB6  00A8               	movwf	??___flmul
 11243  0FB7  3080               	movlw	128
 11244  0FB8  0228               	subwf	??___flmul,w
 11245  0FB9  1D03               	skipz
 11246  0FBA  2FBD               	goto	u4945
 11247  0FBB  30FF               	movlw	255
 11248  0FBC  0238               	subwf	___flmul@temp,w
 11249  0FBD                     u4945:	
 11250  0FBD  1C03               	skipc
 11251  0FBE  2FC9               	goto	l5002
 11252  0FBF  307F               	movlw	127
 11253  0FC0  0020               	movlb	0	; select bank0
 11254  0FC1  00B7               	movwf	___flmul@prod+3
 11255  0FC2  3080               	movlw	128
 11256  0FC3  00B6               	movwf	___flmul@prod+2
 11257  0FC4  3000               	movlw	0
 11258  0FC5  00B5               	movwf	___flmul@prod+1
 11259  0FC6  3000               	movlw	0
 11260  0FC7  00B4               	movwf	___flmul@prod
 11261  0FC8  2FF3               	goto	l1558
 11262  0FC9                     l5002:	
 11263  0FC9  0020               	movlb	0	; select bank0
 11264  0FCA  0839               	movf	___flmul@temp+1,w
 11265  0FCB  3A80               	xorlw	128
 11266  0FCC  00A8               	movwf	??___flmul
 11267  0FCD  3080               	movlw	128
 11268  0FCE  0228               	subwf	??___flmul,w
 11269  0FCF  1D03               	skipz
 11270  0FD0  2FD3               	goto	u4955
 11271  0FD1  3001               	movlw	1
 11272  0FD2  0238               	subwf	___flmul@temp,w
 11273  0FD3                     u4955:	
 11274  0FD3  1803               	skipnc
 11275  0FD4  2FE0               	goto	l5008
 11276  0FD5  3000               	movlw	0
 11277  0FD6  0020               	movlb	0	; select bank0
 11278  0FD7  00B7               	movwf	___flmul@prod+3
 11279  0FD8  3000               	movlw	0
 11280  0FD9  00B6               	movwf	___flmul@prod+2
 11281  0FDA  3000               	movlw	0
 11282  0FDB  00B5               	movwf	___flmul@prod+1
 11283  0FDC  3000               	movlw	0
 11284  0FDD  00B4               	movwf	___flmul@prod
 11285  0FDE  01AD               	clrf	___flmul@sign
 11286  0FDF  2FF3               	goto	l1558
 11287  0FE0                     l5008:	
 11288  0FE0  0020               	movlb	0	; select bank0
 11289  0FE1  0838               	movf	___flmul@temp,w
 11290  0FE2  00A8               	movwf	??___flmul
 11291  0FE3  0828               	movf	??___flmul,w
 11292  0FE4  00B3               	movwf	___flmul@bexp
 11293  0FE5  30FF               	movlw	255
 11294  0FE6  05B4               	andwf	___flmul@prod,f
 11295  0FE7  30FF               	movlw	255
 11296  0FE8  05B5               	andwf	___flmul@prod+1,f
 11297  0FE9  307F               	movlw	127
 11298  0FEA  05B6               	andwf	___flmul@prod+2,f
 11299  0FEB  3000               	movlw	0
 11300  0FEC  05B7               	andwf	___flmul@prod+3,f
 11301  0FED  1833               	btfsc	___flmul@bexp,0
 11302  0FEE  17B6               	bsf	___flmul@prod+2,7
 11303  0FEF  3633               	lsrf	___flmul@bexp,w
 11304  0FF0  00A8               	movwf	??___flmul
 11305  0FF1  0828               	movf	??___flmul,w
 11306  0FF2  00B7               	movwf	___flmul@prod+3
 11307  0FF3                     l1558:	
 11308  0FF3  082D               	movf	___flmul@sign,w
 11309  0FF4  00A8               	movwf	??___flmul
 11310  0FF5  0828               	movf	??___flmul,w
 11311  0FF6  04B7               	iorwf	___flmul@prod+3,f
 11312  0FF7  0837               	movf	___flmul@prod+3,w
 11313  0FF8  00A3               	movwf	?___flmul+3
 11314  0FF9  0836               	movf	___flmul@prod+2,w
 11315  0FFA  00A2               	movwf	?___flmul+2
 11316  0FFB  0835               	movf	___flmul@prod+1,w
 11317  0FFC  00A1               	movwf	?___flmul+1
 11318  0FFD  0834               	movf	___flmul@prod,w
 11319  0FFE  00A0               	movwf	?___flmul
 11320  0FFF  0008               	return
 11321  1000                     __end_of___flmul:	
 11322                           
 11323                           	psect	text27
 11324  1FE1                     __ptext27:	
 11325 ;; *************** function __Umul8_16 *****************
 11326 ;; Defined at:
 11327 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 11328 ;; Parameters:    Size  Location     Type
 11329 ;;  multiplier      1    wreg     unsigned char 
 11330 ;;  multiplicand    1    1[COMMON] unsigned char 
 11331 ;; Auto vars:     Size  Location     Type
 11332 ;;  multiplier      1    9[COMMON] unsigned char 
 11333 ;;  word_mpld       2    7[COMMON] unsigned int 
 11334 ;;  product         2    5[COMMON] unsigned int 
 11335 ;; Return value:  Size  Location     Type
 11336 ;;                  2    1[COMMON] unsigned int 
 11337 ;; Registers used:
 11338 ;;		wreg, status,2, status,0
 11339 ;; Tracked objects:
 11340 ;;		On entry : 0/0
 11341 ;;		On exit  : 0/0
 11342 ;;		Unchanged: 0/0
 11343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11344 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11345 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11346 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11347 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11348 ;;Total ram usage:        9 bytes
 11349 ;; Hardware stack levels used:    1
 11350 ;; Hardware stack levels required when called:    4
 11351 ;; This function calls:
 11352 ;;		Nothing
 11353 ;; This function is called by:
 11354 ;;		___flmul
 11355 ;; This function uses a non-reentrant model
 11356 ;;
 11357                           
 11358                           
 11359                           ;psect for function __Umul8_16
 11360  1FE1                     __Umul8_16:	
 11361                           
 11362                           ;incstack = 0
 11363                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 11364                           ;__Umul8_16@multiplier stored from wreg
 11365  1FE1  00F9               	movwf	__Umul8_16@multiplier
 11366  1FE2  01F5               	clrf	__Umul8_16@product
 11367  1FE3  01F6               	clrf	__Umul8_16@product+1
 11368  1FE4  0871               	movf	__Umul8_16@multiplicand,w
 11369  1FE5  00F3               	movwf	??__Umul8_16
 11370  1FE6  01F4               	clrf	??__Umul8_16+1
 11371  1FE7  0873               	movf	??__Umul8_16,w
 11372  1FE8  00F7               	movwf	__Umul8_16@word_mpld
 11373  1FE9  0874               	movf	??__Umul8_16+1,w
 11374  1FEA  00F8               	movwf	__Umul8_16@word_mpld+1
 11375  1FEB                     l4466:	
 11376  1FEB  1C79               	btfss	__Umul8_16@multiplier,0
 11377  1FEC  2FF1               	goto	l1694
 11378  1FED  0877               	movf	__Umul8_16@word_mpld,w
 11379  1FEE  07F5               	addwf	__Umul8_16@product,f
 11380  1FEF  0878               	movf	__Umul8_16@word_mpld+1,w
 11381  1FF0  3DF6               	addwfc	__Umul8_16@product+1,f
 11382  1FF1                     l1694:	
 11383  1FF1  3001               	movlw	1
 11384  1FF2                     u3725:	
 11385  1FF2  35F7               	lslf	__Umul8_16@word_mpld,f
 11386  1FF3  0DF8               	rlf	__Umul8_16@word_mpld+1,f
 11387  1FF4  0B89               	decfsz	9,f
 11388  1FF5  2FF2               	goto	u3725
 11389  1FF6  1003               	clrc
 11390  1FF7  0CF9               	rrf	__Umul8_16@multiplier,f
 11391  1FF8  0879               	movf	__Umul8_16@multiplier,w
 11392  1FF9  1D03               	btfss	3,2
 11393  1FFA  2FEB               	goto	l4466
 11394  1FFB  0876               	movf	__Umul8_16@product+1,w
 11395  1FFC  00F2               	movwf	?__Umul8_16+1
 11396  1FFD  0875               	movf	__Umul8_16@product,w
 11397  1FFE  00F1               	movwf	?__Umul8_16
 11398  1FFF  0008               	return
 11399  2000                     __end_of__Umul8_16:	
 11400                           
 11401                           	psect	text28
 11402  162E                     __ptext28:	
 11403 ;; *************** function ___flge *****************
 11404 ;; Defined at:
 11405 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 11406 ;; Parameters:    Size  Location     Type
 11407 ;;  ff1             4   26[BANK0 ] unsigned int 
 11408 ;;  ff2             4   30[BANK0 ] unsigned int 
 11409 ;; Auto vars:     Size  Location     Type
 11410 ;;		None
 11411 ;; Return value:  Size  Location     Type
 11412 ;;		None               void
 11413 ;; Registers used:
 11414 ;;		wreg, status,2, status,0
 11415 ;; Tracked objects:
 11416 ;;		On entry : 0/0
 11417 ;;		On exit  : 0/0
 11418 ;;		Unchanged: 0/0
 11419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11420 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11422 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11423 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11424 ;;Total ram usage:       12 bytes
 11425 ;; Hardware stack levels used:    1
 11426 ;; Hardware stack levels required when called:    4
 11427 ;; This function calls:
 11428 ;;		Nothing
 11429 ;; This function is called by:
 11430 ;;		_efgtoa
 11431 ;; This function uses a non-reentrant model
 11432 ;;
 11433                           
 11434                           
 11435                           ;psect for function ___flge
 11436  162E                     ___flge:	
 11437                           
 11438                           ;incstack = 0
 11439                           ; Regs used in ___flge: [wreg+status,2+status,0]
 11440  162E  3000               	movlw	0
 11441  162F  0020               	movlb	0	; select bank0
 11442  1630  053A               	andwf	___flge@ff1,w
 11443  1631  00C2               	movwf	??___flge
 11444  1632  3000               	movlw	0
 11445  1633  053B               	andwf	___flge@ff1+1,w
 11446  1634  00C3               	movwf	??___flge+1
 11447  1635  3080               	movlw	128
 11448  1636  053C               	andwf	___flge@ff1+2,w
 11449  1637  00C4               	movwf	??___flge+2
 11450  1638  307F               	movlw	127
 11451  1639  053D               	andwf	___flge@ff1+3,w
 11452  163A  00C5               	movwf	??___flge+3
 11453  163B  0845               	movf	??___flge+3,w
 11454  163C  0444               	iorwf	??___flge+2,w
 11455  163D  0443               	iorwf	??___flge+1,w
 11456  163E  0442               	iorwf	??___flge,w
 11457  163F  1D03               	skipz
 11458  1640  2E49               	goto	l1327
 11459  1641  3000               	movlw	0
 11460  1642  00BD               	movwf	___flge@ff1+3
 11461  1643  3000               	movlw	0
 11462  1644  00BC               	movwf	___flge@ff1+2
 11463  1645  3000               	movlw	0
 11464  1646  00BB               	movwf	___flge@ff1+1
 11465  1647  3000               	movlw	0
 11466  1648  00BA               	movwf	___flge@ff1
 11467  1649                     l1327:	
 11468  1649  3000               	movlw	0
 11469  164A  053E               	andwf	___flge@ff2,w
 11470  164B  00C2               	movwf	??___flge
 11471  164C  3000               	movlw	0
 11472  164D  053F               	andwf	___flge@ff2+1,w
 11473  164E  00C3               	movwf	??___flge+1
 11474  164F  3080               	movlw	128
 11475  1650  0540               	andwf	___flge@ff2+2,w
 11476  1651  00C4               	movwf	??___flge+2
 11477  1652  307F               	movlw	127
 11478  1653  0541               	andwf	___flge@ff2+3,w
 11479  1654  00C5               	movwf	??___flge+3
 11480  1655  0845               	movf	??___flge+3,w
 11481  1656  0444               	iorwf	??___flge+2,w
 11482  1657  0443               	iorwf	??___flge+1,w
 11483  1658  0442               	iorwf	??___flge,w
 11484  1659  1D03               	skipz
 11485  165A  2E63               	goto	l4676
 11486  165B  3000               	movlw	0
 11487  165C  00C1               	movwf	___flge@ff2+3
 11488  165D  3000               	movlw	0
 11489  165E  00C0               	movwf	___flge@ff2+2
 11490  165F  3000               	movlw	0
 11491  1660  00BF               	movwf	___flge@ff2+1
 11492  1661  3000               	movlw	0
 11493  1662  00BE               	movwf	___flge@ff2
 11494  1663                     l4676:	
 11495  1663  1FBD               	btfss	___flge@ff1+3,7
 11496  1664  2E7D               	goto	l4680
 11497  1665  3000               	movlw	0
 11498  1666  00C2               	movwf	??___flge
 11499  1667  3000               	movlw	0
 11500  1668  00C3               	movwf	??___flge+1
 11501  1669  3000               	movlw	0
 11502  166A  00C4               	movwf	??___flge+2
 11503  166B  3080               	movlw	128
 11504  166C  00C5               	movwf	??___flge+3
 11505  166D  083A               	movf	___flge@ff1,w
 11506  166E  02C2               	subwf	??___flge,f
 11507  166F  083B               	movf	___flge@ff1+1,w
 11508  1670  3BC3               	subwfb	??___flge+1,f
 11509  1671  083C               	movf	___flge@ff1+2,w
 11510  1672  3BC4               	subwfb	??___flge+2,f
 11511  1673  083D               	movf	___flge@ff1+3,w
 11512  1674  3BC5               	subwfb	??___flge+3,f
 11513  1675  0845               	movf	??___flge+3,w
 11514  1676  00BD               	movwf	___flge@ff1+3
 11515  1677  0844               	movf	??___flge+2,w
 11516  1678  00BC               	movwf	___flge@ff1+2
 11517  1679  0843               	movf	??___flge+1,w
 11518  167A  00BB               	movwf	___flge@ff1+1
 11519  167B  0842               	movf	??___flge,w
 11520  167C  00BA               	movwf	___flge@ff1
 11521  167D                     l4680:	
 11522  167D  1FC1               	btfss	___flge@ff2+3,7
 11523  167E  2E97               	goto	l1330
 11524  167F  3000               	movlw	0
 11525  1680  00C2               	movwf	??___flge
 11526  1681  3000               	movlw	0
 11527  1682  00C3               	movwf	??___flge+1
 11528  1683  3000               	movlw	0
 11529  1684  00C4               	movwf	??___flge+2
 11530  1685  3080               	movlw	128
 11531  1686  00C5               	movwf	??___flge+3
 11532  1687  083E               	movf	___flge@ff2,w
 11533  1688  02C2               	subwf	??___flge,f
 11534  1689  083F               	movf	___flge@ff2+1,w
 11535  168A  3BC3               	subwfb	??___flge+1,f
 11536  168B  0840               	movf	___flge@ff2+2,w
 11537  168C  3BC4               	subwfb	??___flge+2,f
 11538  168D  0841               	movf	___flge@ff2+3,w
 11539  168E  3BC5               	subwfb	??___flge+3,f
 11540  168F  0845               	movf	??___flge+3,w
 11541  1690  00C1               	movwf	___flge@ff2+3
 11542  1691  0844               	movf	??___flge+2,w
 11543  1692  00C0               	movwf	___flge@ff2+2
 11544  1693  0843               	movf	??___flge+1,w
 11545  1694  00BF               	movwf	___flge@ff2+1
 11546  1695  0842               	movf	??___flge,w
 11547  1696  00BE               	movwf	___flge@ff2
 11548  1697                     l1330:	
 11549  1697  3080               	movlw	128
 11550  1698  06BD               	xorwf	___flge@ff1+3,f
 11551  1699  3080               	movlw	128
 11552  169A  06C1               	xorwf	___flge@ff2+3,f
 11553  169B  0841               	movf	___flge@ff2+3,w
 11554  169C  023D               	subwf	___flge@ff1+3,w
 11555  169D  1D03               	skipz
 11556  169E  0008               	return
 11557  169F  0840               	movf	___flge@ff2+2,w
 11558  16A0  023C               	subwf	___flge@ff1+2,w
 11559  16A1  1D03               	skipz
 11560  16A2  0008               	return
 11561  16A3  083F               	movf	___flge@ff2+1,w
 11562  16A4  023B               	subwf	___flge@ff1+1,w
 11563  16A5  1D03               	skipz
 11564  16A6  0008               	return
 11565  16A7  083E               	movf	___flge@ff2,w
 11566  16A8  023A               	subwf	___flge@ff1,w
 11567  16A9  0008               	return
 11568  16AA                     __end_of___flge:	
 11569                           
 11570                           	psect	text29
 11571  0800                     __ptext29:	
 11572 ;; *************** function ___fleq *****************
 11573 ;; Defined at:
 11574 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
 11575 ;; Parameters:    Size  Location     Type
 11576 ;;  ff1             4    1[COMMON] unsigned int 
 11577 ;;  ff2             4    5[COMMON] unsigned int 
 11578 ;; Auto vars:     Size  Location     Type
 11579 ;;		None
 11580 ;; Return value:  Size  Location     Type
 11581 ;;		None               void
 11582 ;; Registers used:
 11583 ;;		wreg, status,2, status,0
 11584 ;; Tracked objects:
 11585 ;;		On entry : 0/0
 11586 ;;		On exit  : 0/0
 11587 ;;		Unchanged: 0/0
 11588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11589 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11591 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11592 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11593 ;;Total ram usage:       12 bytes
 11594 ;; Hardware stack levels used:    1
 11595 ;; Hardware stack levels required when called:    4
 11596 ;; This function calls:
 11597 ;;		Nothing
 11598 ;; This function is called by:
 11599 ;;		_efgtoa
 11600 ;; This function uses a non-reentrant model
 11601 ;;
 11602                           
 11603                           
 11604                           ;psect for function ___fleq
 11605  0800                     ___fleq:	
 11606                           
 11607                           ;incstack = 0
 11608                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 11609  0800  3000               	movlw	0
 11610  0801  0571               	andwf	___fleq@ff1,w
 11611  0802  0020               	movlb	0	; select bank0
 11612  0803  00A0               	movwf	??___fleq
 11613  0804  3000               	movlw	0
 11614  0805  0572               	andwf	___fleq@ff1+1,w
 11615  0806  00A1               	movwf	??___fleq+1
 11616  0807  3080               	movlw	128
 11617  0808  0573               	andwf	___fleq@ff1+2,w
 11618  0809  00A2               	movwf	??___fleq+2
 11619  080A  307F               	movlw	127
 11620  080B  0574               	andwf	___fleq@ff1+3,w
 11621  080C  00A3               	movwf	??___fleq+3
 11622  080D  0823               	movf	??___fleq+3,w
 11623  080E  0422               	iorwf	??___fleq+2,w
 11624  080F  0421               	iorwf	??___fleq+1,w
 11625  0810  0420               	iorwf	??___fleq,w
 11626  0811  1D03               	skipz
 11627  0812  281B               	goto	l1318
 11628  0813  3000               	movlw	0
 11629  0814  00F4               	movwf	___fleq@ff1+3
 11630  0815  3000               	movlw	0
 11631  0816  00F3               	movwf	___fleq@ff1+2
 11632  0817  3000               	movlw	0
 11633  0818  00F2               	movwf	___fleq@ff1+1
 11634  0819  3000               	movlw	0
 11635  081A  00F1               	movwf	___fleq@ff1
 11636  081B                     l1318:	
 11637  081B  3000               	movlw	0
 11638  081C  0575               	andwf	___fleq@ff2,w
 11639  081D  00A0               	movwf	??___fleq
 11640  081E  3000               	movlw	0
 11641  081F  0576               	andwf	___fleq@ff2+1,w
 11642  0820  00A1               	movwf	??___fleq+1
 11643  0821  3080               	movlw	128
 11644  0822  0577               	andwf	___fleq@ff2+2,w
 11645  0823  00A2               	movwf	??___fleq+2
 11646  0824  307F               	movlw	127
 11647  0825  0578               	andwf	___fleq@ff2+3,w
 11648  0826  00A3               	movwf	??___fleq+3
 11649  0827  0823               	movf	??___fleq+3,w
 11650  0828  0422               	iorwf	??___fleq+2,w
 11651  0829  0421               	iorwf	??___fleq+1,w
 11652  082A  0420               	iorwf	??___fleq,w
 11653  082B  1D03               	skipz
 11654  082C  2835               	goto	l1319
 11655  082D  3000               	movlw	0
 11656  082E  00F8               	movwf	___fleq@ff2+3
 11657  082F  3000               	movlw	0
 11658  0830  00F7               	movwf	___fleq@ff2+2
 11659  0831  3000               	movlw	0
 11660  0832  00F6               	movwf	___fleq@ff2+1
 11661  0833  3000               	movlw	0
 11662  0834  00F5               	movwf	___fleq@ff2
 11663  0835                     l1319:	
 11664  0835  0878               	movf	___fleq@ff2+3,w
 11665  0836  0674               	xorwf	___fleq@ff1+3,w
 11666  0837  1D03               	skipz
 11667  0838  2843               	goto	u6765
 11668  0839  0877               	movf	___fleq@ff2+2,w
 11669  083A  0673               	xorwf	___fleq@ff1+2,w
 11670  083B  1D03               	skipz
 11671  083C  2843               	goto	u6765
 11672  083D  0876               	movf	___fleq@ff2+1,w
 11673  083E  0672               	xorwf	___fleq@ff1+1,w
 11674  083F  1D03               	skipz
 11675  0840  2843               	goto	u6765
 11676  0841  0875               	movf	___fleq@ff2,w
 11677  0842  0671               	xorwf	___fleq@ff1,w
 11678  0843                     u6765:	
 11679  0843  1903               	skipnz
 11680  0844  2847               	goto	l6382
 11681  0845  1003               	clrc
 11682  0846  0008               	return
 11683  0847                     l6382:	
 11684  0847  1403               	setc
 11685  0848  0008               	return
 11686  0849                     __end_of___fleq:	
 11687                           
 11688                           	psect	text30
 11689  08DF                     __ptext30:	
 11690 ;; *************** function ___fldiv *****************
 11691 ;; Defined at:
 11692 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 11693 ;; Parameters:    Size  Location     Type
 11694 ;;  a               4    6[BANK0 ] unsigned int 
 11695 ;;  b               4   10[BANK0 ] unsigned int 
 11696 ;; Auto vars:     Size  Location     Type
 11697 ;;  grs             4   26[BANK0 ] unsigned long 
 11698 ;;  rem             4   19[BANK0 ] unsigned long 
 11699 ;;  new_exp         2   24[BANK0 ] int 
 11700 ;;  aexp            1   31[BANK0 ] unsigned char 
 11701 ;;  bexp            1   30[BANK0 ] unsigned char 
 11702 ;;  sign            1   23[BANK0 ] unsigned char 
 11703 ;; Return value:  Size  Location     Type
 11704 ;;                  4    6[BANK0 ] unsigned char 
 11705 ;; Registers used:
 11706 ;;		wreg, status,2, status,0
 11707 ;; Tracked objects:
 11708 ;;		On entry : 0/0
 11709 ;;		On exit  : 0/0
 11710 ;;		Unchanged: 0/0
 11711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11712 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11713 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11714 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11715 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11716 ;;Total ram usage:       26 bytes
 11717 ;; Hardware stack levels used:    1
 11718 ;; Hardware stack levels required when called:    4
 11719 ;; This function calls:
 11720 ;;		Nothing
 11721 ;; This function is called by:
 11722 ;;		_readPressureSensor
 11723 ;;		_efgtoa
 11724 ;; This function uses a non-reentrant model
 11725 ;;
 11726                           
 11727                           
 11728                           ;psect for function ___fldiv
 11729  08DF                     ___fldiv:	
 11730                           
 11731                           ;incstack = 0
 11732                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 11733  08DF  0020               	movlb	0	; select bank0
 11734  08E0  082D               	movf	___fldiv@b+3,w
 11735  08E1  3980               	andlw	128
 11736  08E2  00AE               	movwf	??___fldiv
 11737  08E3  082E               	movf	??___fldiv,w
 11738  08E4  00B7               	movwf	___fldiv@sign
 11739  08E5  352D               	lslf	___fldiv@b+3,w
 11740  08E6  00AE               	movwf	??___fldiv
 11741  08E7  082E               	movf	??___fldiv,w
 11742  08E8  00BE               	movwf	___fldiv@bexp
 11743  08E9  1BAC               	btfsc	___fldiv@b+2,7
 11744  08EA  143E               	bsf	___fldiv@bexp,0
 11745  08EB  083E               	movf	___fldiv@bexp,w
 11746  08EC  1903               	btfsc	3,2
 11747  08ED  28FC               	goto	l4758
 11748  08EE  0A3E               	incf	___fldiv@bexp,w
 11749  08EF  1D03               	btfss	3,2
 11750  08F0  28F9               	goto	l4754
 11751  08F1  3000               	movlw	0
 11752  08F2  00AD               	movwf	___fldiv@b+3
 11753  08F3  3000               	movlw	0
 11754  08F4  00AC               	movwf	___fldiv@b+2
 11755  08F5  3000               	movlw	0
 11756  08F6  00AB               	movwf	___fldiv@b+1
 11757  08F7  3000               	movlw	0
 11758  08F8  00AA               	movwf	___fldiv@b
 11759  08F9                     l4754:	
 11760  08F9  17AC               	bsf	___fldiv@b+2,7
 11761  08FA  01AD               	clrf	___fldiv@b+3
 11762  08FB  2904               	goto	l4760
 11763  08FC                     l4758:	
 11764  08FC  3000               	movlw	0
 11765  08FD  00AD               	movwf	___fldiv@b+3
 11766  08FE  3000               	movlw	0
 11767  08FF  00AC               	movwf	___fldiv@b+2
 11768  0900  3000               	movlw	0
 11769  0901  00AB               	movwf	___fldiv@b+1
 11770  0902  3000               	movlw	0
 11771  0903  00AA               	movwf	___fldiv@b
 11772  0904                     l4760:	
 11773  0904  0829               	movf	___fldiv@a+3,w
 11774  0905  3980               	andlw	128
 11775  0906  00AE               	movwf	??___fldiv
 11776  0907  082E               	movf	??___fldiv,w
 11777  0908  06B7               	xorwf	___fldiv@sign,f
 11778  0909  3529               	lslf	___fldiv@a+3,w
 11779  090A  00AE               	movwf	??___fldiv
 11780  090B  082E               	movf	??___fldiv,w
 11781  090C  00BF               	movwf	___fldiv@aexp
 11782  090D  1BA8               	btfsc	___fldiv@a+2,7
 11783  090E  143F               	bsf	___fldiv@aexp,0
 11784  090F  083F               	movf	___fldiv@aexp,w
 11785  0910  1903               	btfsc	3,2
 11786  0911  2920               	goto	l4778
 11787  0912  0A3F               	incf	___fldiv@aexp,w
 11788  0913  1D03               	btfss	3,2
 11789  0914  291D               	goto	l4774
 11790  0915  3000               	movlw	0
 11791  0916  00A9               	movwf	___fldiv@a+3
 11792  0917  3000               	movlw	0
 11793  0918  00A8               	movwf	___fldiv@a+2
 11794  0919  3000               	movlw	0
 11795  091A  00A7               	movwf	___fldiv@a+1
 11796  091B  3000               	movlw	0
 11797  091C  00A6               	movwf	___fldiv@a
 11798  091D                     l4774:	
 11799  091D  17A8               	bsf	___fldiv@a+2,7
 11800  091E  01A9               	clrf	___fldiv@a+3
 11801  091F  2928               	goto	l1506
 11802  0920                     l4778:	
 11803  0920  3000               	movlw	0
 11804  0921  00A9               	movwf	___fldiv@a+3
 11805  0922  3000               	movlw	0
 11806  0923  00A8               	movwf	___fldiv@a+2
 11807  0924  3000               	movlw	0
 11808  0925  00A7               	movwf	___fldiv@a+1
 11809  0926  3000               	movlw	0
 11810  0927  00A6               	movwf	___fldiv@a
 11811  0928                     l1506:	
 11812  0928  0829               	movf	___fldiv@a+3,w
 11813  0929  0428               	iorwf	___fldiv@a+2,w
 11814  092A  0427               	iorwf	___fldiv@a+1,w
 11815  092B  0426               	iorwf	___fldiv@a,w
 11816  092C  1D03               	skipz
 11817  092D  2947               	goto	l4788
 11818  092E  3000               	movlw	0
 11819  092F  00AD               	movwf	___fldiv@b+3
 11820  0930  3000               	movlw	0
 11821  0931  00AC               	movwf	___fldiv@b+2
 11822  0932  3000               	movlw	0
 11823  0933  00AB               	movwf	___fldiv@b+1
 11824  0934  3000               	movlw	0
 11825  0935  00AA               	movwf	___fldiv@b
 11826  0936  3080               	movlw	128
 11827  0937  04AC               	iorwf	___fldiv@b+2,f
 11828  0938  307F               	movlw	127
 11829  0939  04AD               	iorwf	___fldiv@b+3,f
 11830  093A                     L12:	
 11831  093A  0837               	movf	___fldiv@sign,w
 11832  093B  00AE               	movwf	??___fldiv
 11833  093C  082E               	movf	??___fldiv,w
 11834  093D  04AD               	iorwf	___fldiv@b+3,f
 11835  093E  082D               	movf	___fldiv@b+3,w
 11836  093F  00A9               	movwf	?___fldiv+3
 11837  0940  082C               	movf	___fldiv@b+2,w
 11838  0941  00A8               	movwf	?___fldiv+2
 11839  0942  082B               	movf	___fldiv@b+1,w
 11840  0943  00A7               	movwf	?___fldiv+1
 11841  0944  082A               	movf	___fldiv@b,w
 11842  0945  00A6               	movwf	?___fldiv
 11843  0946  0008               	return
 11844  0947                     l4788:	
 11845  0947  083E               	movf	___fldiv@bexp,w
 11846  0948  1D03               	btfss	3,2
 11847  0949  2953               	goto	l4794
 11848  094A  3000               	movlw	0
 11849  094B  00A9               	movwf	?___fldiv+3
 11850  094C  3000               	movlw	0
 11851  094D  00A8               	movwf	?___fldiv+2
 11852  094E  3000               	movlw	0
 11853  094F  00A7               	movwf	?___fldiv+1
 11854  0950  3000               	movlw	0
 11855  0951  00A6               	movwf	?___fldiv
 11856  0952  0008               	return
 11857  0953                     l4794:	
 11858  0953  083E               	movf	___fldiv@bexp,w
 11859  0954  00AE               	movwf	??___fldiv
 11860  0955  01AF               	clrf	??___fldiv+1
 11861  0956  082F               	movf	??___fldiv+1,w
 11862  0957  00B1               	movwf	??___fldiv+3
 11863  0958  083F               	movf	___fldiv@aexp,w
 11864  0959  022E               	subwf	??___fldiv,w
 11865  095A  00B0               	movwf	??___fldiv+2
 11866  095B  1C03               	skipc
 11867  095C  03B1               	decf	??___fldiv+3,f
 11868  095D  0830               	movf	??___fldiv+2,w
 11869  095E  3E7F               	addlw	127
 11870  095F  00B8               	movwf	___fldiv@new_exp
 11871  0960  3000               	movlw	0
 11872  0961  3D31               	addwfc	??___fldiv+3,w
 11873  0962  00B9               	movwf	___fldiv@new_exp+1
 11874  0963  082D               	movf	___fldiv@b+3,w
 11875  0964  00B6               	movwf	___fldiv@rem+3
 11876  0965  082C               	movf	___fldiv@b+2,w
 11877  0966  00B5               	movwf	___fldiv@rem+2
 11878  0967  082B               	movf	___fldiv@b+1,w
 11879  0968  00B4               	movwf	___fldiv@rem+1
 11880  0969  082A               	movf	___fldiv@b,w
 11881  096A  00B3               	movwf	___fldiv@rem
 11882  096B  3000               	movlw	0
 11883  096C  00AD               	movwf	___fldiv@b+3
 11884  096D  3000               	movlw	0
 11885  096E  00AC               	movwf	___fldiv@b+2
 11886  096F  3000               	movlw	0
 11887  0970  00AB               	movwf	___fldiv@b+1
 11888  0971  3000               	movlw	0
 11889  0972  00AA               	movwf	___fldiv@b
 11890  0973  3000               	movlw	0
 11891  0974  00BD               	movwf	___fldiv@grs+3
 11892  0975  3000               	movlw	0
 11893  0976  00BC               	movwf	___fldiv@grs+2
 11894  0977  3000               	movlw	0
 11895  0978  00BB               	movwf	___fldiv@grs+1
 11896  0979  3000               	movlw	0
 11897  097A  00BA               	movwf	___fldiv@grs
 11898  097B  01BF               	clrf	___fldiv@aexp
 11899  097C                     l4822:	
 11900  097C  301A               	movlw	26
 11901  097D  023F               	subwf	___fldiv@aexp,w
 11902  097E  1803               	btfsc	3,0
 11903  097F  29B8               	goto	l4824
 11904  0980  083F               	movf	___fldiv@aexp,w
 11905  0981  1903               	btfsc	3,2
 11906  0982  299A               	goto	l4814
 11907  0983  3001               	movlw	1
 11908  0984                     u4515:	
 11909  0984  35B3               	lslf	___fldiv@rem,f
 11910  0985  0DB4               	rlf	___fldiv@rem+1,f
 11911  0986  0DB5               	rlf	___fldiv@rem+2,f
 11912  0987  0DB6               	rlf	___fldiv@rem+3,f
 11913  0988  0B89               	decfsz	9,f
 11914  0989  2984               	goto	u4515
 11915  098A  3001               	movlw	1
 11916  098B                     u4525:	
 11917  098B  35AA               	lslf	___fldiv@b,f
 11918  098C  0DAB               	rlf	___fldiv@b+1,f
 11919  098D  0DAC               	rlf	___fldiv@b+2,f
 11920  098E  0DAD               	rlf	___fldiv@b+3,f
 11921  098F  0B89               	decfsz	9,f
 11922  0990  298B               	goto	u4525
 11923  0991  1BBD               	btfsc	___fldiv@grs+3,7
 11924  0992  142A               	bsf	___fldiv@b,0
 11925  0993  3001               	movlw	1
 11926  0994                     u4545:	
 11927  0994  35BA               	lslf	___fldiv@grs,f
 11928  0995  0DBB               	rlf	___fldiv@grs+1,f
 11929  0996  0DBC               	rlf	___fldiv@grs+2,f
 11930  0997  0DBD               	rlf	___fldiv@grs+3,f
 11931  0998  0B89               	decfsz	9,f
 11932  0999  2994               	goto	u4545
 11933  099A                     l4814:	
 11934  099A  0829               	movf	___fldiv@a+3,w
 11935  099B  0236               	subwf	___fldiv@rem+3,w
 11936  099C  1D03               	skipz
 11937  099D  29A8               	goto	u4555
 11938  099E  0828               	movf	___fldiv@a+2,w
 11939  099F  0235               	subwf	___fldiv@rem+2,w
 11940  09A0  1D03               	skipz
 11941  09A1  29A8               	goto	u4555
 11942  09A2  0827               	movf	___fldiv@a+1,w
 11943  09A3  0234               	subwf	___fldiv@rem+1,w
 11944  09A4  1D03               	skipz
 11945  09A5  29A8               	goto	u4555
 11946  09A6  0826               	movf	___fldiv@a,w
 11947  09A7  0233               	subwf	___fldiv@rem,w
 11948  09A8                     u4555:	
 11949  09A8  1C03               	skipc
 11950  09A9  29B3               	goto	l4820
 11951  09AA  173D               	bsf	___fldiv@grs+3,6
 11952  09AB  0826               	movf	___fldiv@a,w
 11953  09AC  02B3               	subwf	___fldiv@rem,f
 11954  09AD  0827               	movf	___fldiv@a+1,w
 11955  09AE  3BB4               	subwfb	___fldiv@rem+1,f
 11956  09AF  0828               	movf	___fldiv@a+2,w
 11957  09B0  3BB5               	subwfb	___fldiv@rem+2,f
 11958  09B1  0829               	movf	___fldiv@a+3,w
 11959  09B2  3BB6               	subwfb	___fldiv@rem+3,f
 11960  09B3                     l4820:	
 11961  09B3  3001               	movlw	1
 11962  09B4  00AE               	movwf	??___fldiv
 11963  09B5  082E               	movf	??___fldiv,w
 11964  09B6  07BF               	addwf	___fldiv@aexp,f
 11965  09B7  297C               	goto	l4822
 11966  09B8                     l4824:	
 11967  09B8  0836               	movf	___fldiv@rem+3,w
 11968  09B9  0435               	iorwf	___fldiv@rem+2,w
 11969  09BA  0434               	iorwf	___fldiv@rem+1,w
 11970  09BB  0433               	iorwf	___fldiv@rem,w
 11971  09BC  1D03               	btfss	3,2
 11972  09BD  143A               	bsf	___fldiv@grs,0
 11973  09BE                     l4838:	
 11974  09BE  1BAC               	btfsc	___fldiv@b+2,7
 11975  09BF  29D5               	goto	l4840
 11976  09C0  3001               	movlw	1
 11977  09C1                     u4585:	
 11978  09C1  35AA               	lslf	___fldiv@b,f
 11979  09C2  0DAB               	rlf	___fldiv@b+1,f
 11980  09C3  0DAC               	rlf	___fldiv@b+2,f
 11981  09C4  0DAD               	rlf	___fldiv@b+3,f
 11982  09C5  0B89               	decfsz	9,f
 11983  09C6  29C1               	goto	u4585
 11984  09C7  1BBD               	btfsc	___fldiv@grs+3,7
 11985  09C8  142A               	bsf	___fldiv@b,0
 11986  09C9  3001               	movlw	1
 11987  09CA                     u4605:	
 11988  09CA  35BA               	lslf	___fldiv@grs,f
 11989  09CB  0DBB               	rlf	___fldiv@grs+1,f
 11990  09CC  0DBC               	rlf	___fldiv@grs+2,f
 11991  09CD  0DBD               	rlf	___fldiv@grs+3,f
 11992  09CE  0B89               	decfsz	9,f
 11993  09CF  29CA               	goto	u4605
 11994  09D0  30FF               	movlw	255
 11995  09D1  07B8               	addwf	___fldiv@new_exp,f
 11996  09D2  30FF               	movlw	255
 11997  09D3  3DB9               	addwfc	___fldiv@new_exp+1,f
 11998  09D4  29BE               	goto	l4838
 11999  09D5                     l4840:	
 12000  09D5  01BF               	clrf	___fldiv@aexp
 12001  09D6  1FBD               	btfss	___fldiv@grs+3,7
 12002  09D7  29EE               	goto	l4850
 12003  09D8  30FF               	movlw	255
 12004  09D9  053A               	andwf	___fldiv@grs,w
 12005  09DA  00AE               	movwf	??___fldiv
 12006  09DB  30FF               	movlw	255
 12007  09DC  053B               	andwf	___fldiv@grs+1,w
 12008  09DD  00AF               	movwf	??___fldiv+1
 12009  09DE  30FF               	movlw	255
 12010  09DF  053C               	andwf	___fldiv@grs+2,w
 12011  09E0  00B0               	movwf	??___fldiv+2
 12012  09E1  307F               	movlw	127
 12013  09E2  053D               	andwf	___fldiv@grs+3,w
 12014  09E3  00B1               	movwf	??___fldiv+3
 12015  09E4  0831               	movf	??___fldiv+3,w
 12016  09E5  0430               	iorwf	??___fldiv+2,w
 12017  09E6  042F               	iorwf	??___fldiv+1,w
 12018  09E7  042E               	iorwf	??___fldiv,w
 12019  09E8  1903               	skipnz
 12020  09E9  182A               	btfsc	___fldiv@b,0
 12021  09EA  29EC               	goto	l4846
 12022  09EB  29EE               	goto	l4850
 12023  09EC                     l4846:	
 12024  09EC  01BF               	clrf	___fldiv@aexp
 12025  09ED  0ABF               	incf	___fldiv@aexp,f
 12026  09EE                     l4850:	
 12027  09EE  083F               	movf	___fldiv@aexp,w
 12028  09EF  1903               	btfsc	3,2
 12029  09F0  2A17               	goto	l4860
 12030  09F1  3001               	movlw	1
 12031  09F2  07AA               	addwf	___fldiv@b,f
 12032  09F3  3000               	movlw	0
 12033  09F4  3DAB               	addwfc	___fldiv@b+1,f
 12034  09F5  3000               	movlw	0
 12035  09F6  3DAC               	addwfc	___fldiv@b+2,f
 12036  09F7  3000               	movlw	0
 12037  09F8  3DAD               	addwfc	___fldiv@b+3,f
 12038  09F9  1C2D               	btfss	___fldiv@b+3,0
 12039  09FA  2A17               	goto	l4860
 12040  09FB  082A               	movf	___fldiv@b,w
 12041  09FC  00AE               	movwf	??___fldiv
 12042  09FD  082B               	movf	___fldiv@b+1,w
 12043  09FE  00AF               	movwf	??___fldiv+1
 12044  09FF  082C               	movf	___fldiv@b+2,w
 12045  0A00  00B0               	movwf	??___fldiv+2
 12046  0A01  082D               	movf	___fldiv@b+3,w
 12047  0A02  00B1               	movwf	??___fldiv+3
 12048  0A03  3001               	movlw	1
 12049  0A04  00B2               	movwf	??___fldiv+4
 12050  0A05                     u4675:	
 12051  0A05  37B1               	asrf	??___fldiv+3,f
 12052  0A06  0CB0               	rrf	??___fldiv+2,f
 12053  0A07  0CAF               	rrf	??___fldiv+1,f
 12054  0A08  0CAE               	rrf	??___fldiv,f
 12055  0A09  0BB2               	decfsz	??___fldiv+4,f
 12056  0A0A  2A05               	goto	u4675
 12057  0A0B  0831               	movf	??___fldiv+3,w
 12058  0A0C  00AD               	movwf	___fldiv@b+3
 12059  0A0D  0830               	movf	??___fldiv+2,w
 12060  0A0E  00AC               	movwf	___fldiv@b+2
 12061  0A0F  082F               	movf	??___fldiv+1,w
 12062  0A10  00AB               	movwf	___fldiv@b+1
 12063  0A11  082E               	movf	??___fldiv,w
 12064  0A12  00AA               	movwf	___fldiv@b
 12065  0A13  3001               	movlw	1
 12066  0A14  07B8               	addwf	___fldiv@new_exp,f
 12067  0A15  3000               	movlw	0
 12068  0A16  3DB9               	addwfc	___fldiv@new_exp+1,f
 12069  0A17                     l4860:	
 12070  0A17  0839               	movf	___fldiv@new_exp+1,w
 12071  0A18  3A80               	xorlw	128
 12072  0A19  00AE               	movwf	??___fldiv
 12073  0A1A  3080               	movlw	128
 12074  0A1B  022E               	subwf	??___fldiv,w
 12075  0A1C  1D03               	skipz
 12076  0A1D  2A20               	goto	u4685
 12077  0A1E  30FF               	movlw	255
 12078  0A1F  0238               	subwf	___fldiv@new_exp,w
 12079  0A20                     u4685:	
 12080  0A20  1C03               	skipc
 12081  0A21  2A2F               	goto	l1527
 12082  0A22  30FF               	movlw	255
 12083  0A23  0020               	movlb	0	; select bank0
 12084  0A24  00B8               	movwf	___fldiv@new_exp
 12085  0A25  3000               	movlw	0
 12086  0A26  00B9               	movwf	___fldiv@new_exp+1
 12087  0A27  3000               	movlw	0
 12088  0A28  00AD               	movwf	___fldiv@b+3
 12089  0A29  3000               	movlw	0
 12090  0A2A  00AC               	movwf	___fldiv@b+2
 12091  0A2B  3000               	movlw	0
 12092  0A2C  00AB               	movwf	___fldiv@b+1
 12093  0A2D  3000               	movlw	0
 12094  0A2E  00AA               	movwf	___fldiv@b
 12095  0A2F                     l1527:	
 12096  0A2F  0020               	movlb	0	; select bank0
 12097  0A30  0839               	movf	___fldiv@new_exp+1,w
 12098  0A31  3A80               	xorlw	128
 12099  0A32  00AE               	movwf	??___fldiv
 12100  0A33  3080               	movlw	128
 12101  0A34  022E               	subwf	??___fldiv,w
 12102  0A35  1D03               	skipz
 12103  0A36  2A39               	goto	u4695
 12104  0A37  3001               	movlw	1
 12105  0A38  0238               	subwf	___fldiv@new_exp,w
 12106  0A39                     u4695:	
 12107  0A39  1803               	skipnc
 12108  0A3A  2A47               	goto	l1528
 12109  0A3B  0020               	movlb	0	; select bank0
 12110  0A3C  01B8               	clrf	___fldiv@new_exp
 12111  0A3D  01B9               	clrf	___fldiv@new_exp+1
 12112  0A3E  3000               	movlw	0
 12113  0A3F  00AD               	movwf	___fldiv@b+3
 12114  0A40  3000               	movlw	0
 12115  0A41  00AC               	movwf	___fldiv@b+2
 12116  0A42  3000               	movlw	0
 12117  0A43  00AB               	movwf	___fldiv@b+1
 12118  0A44  3000               	movlw	0
 12119  0A45  00AA               	movwf	___fldiv@b
 12120  0A46  01B7               	clrf	___fldiv@sign
 12121  0A47                     l1528:	
 12122  0A47  0020               	movlb	0	; select bank0
 12123  0A48  0838               	movf	___fldiv@new_exp,w
 12124  0A49  00AE               	movwf	??___fldiv
 12125  0A4A  082E               	movf	??___fldiv,w
 12126  0A4B  00BE               	movwf	___fldiv@bexp
 12127  0A4C  1C3E               	btfss	___fldiv@bexp,0
 12128  0A4D  2A50               	goto	l4874
 12129  0A4E  17AC               	bsf	___fldiv@b+2,7
 12130  0A4F  2A54               	goto	l1530
 12131  0A50                     l4874:	
 12132  0A50  307F               	movlw	127
 12133  0A51  00AE               	movwf	??___fldiv
 12134  0A52  082E               	movf	??___fldiv,w
 12135  0A53  05AC               	andwf	___fldiv@b+2,f
 12136  0A54                     l1530:	
 12137  0A54  363E               	lsrf	___fldiv@bexp,w
 12138  0A55  00AE               	movwf	??___fldiv
 12139  0A56  082E               	movf	??___fldiv,w
 12140  0A57  00AD               	movwf	___fldiv@b+3
 12141  0A58  293A               	goto	L12
 12142  0A59                     __end_of___fldiv:	
 12143                           
 12144                           	psect	text31
 12145  131F                     __ptext31:	
 12146 ;; *************** function ___awmod *****************
 12147 ;; Defined at:
 12148 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
 12149 ;; Parameters:    Size  Location     Type
 12150 ;;  divisor         2    1[COMMON] int 
 12151 ;;  dividend        2    3[COMMON] int 
 12152 ;; Auto vars:     Size  Location     Type
 12153 ;;  sign            1    7[COMMON] unsigned char 
 12154 ;;  counter         1    6[COMMON] unsigned char 
 12155 ;; Return value:  Size  Location     Type
 12156 ;;                  2    1[COMMON] int 
 12157 ;; Registers used:
 12158 ;;		wreg, status,2, status,0
 12159 ;; Tracked objects:
 12160 ;;		On entry : 0/0
 12161 ;;		On exit  : 0/0
 12162 ;;		Unchanged: 0/0
 12163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12164 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12165 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12166 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12167 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12168 ;;Total ram usage:        7 bytes
 12169 ;; Hardware stack levels used:    1
 12170 ;; Hardware stack levels required when called:    4
 12171 ;; This function calls:
 12172 ;;		Nothing
 12173 ;; This function is called by:
 12174 ;;		_efgtoa
 12175 ;; This function uses a non-reentrant model
 12176 ;;
 12177                           
 12178                           
 12179                           ;psect for function ___awmod
 12180  131F                     ___awmod:	
 12181                           
 12182                           ;incstack = 0
 12183                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 12184  131F  01F7               	clrf	___awmod@sign
 12185  1320  1FF4               	btfss	___awmod@dividend+1,7
 12186  1321  2B29               	goto	l4628
 12187  1322  09F3               	comf	___awmod@dividend,f
 12188  1323  09F4               	comf	___awmod@dividend+1,f
 12189  1324  0AF3               	incf	___awmod@dividend,f
 12190  1325  1903               	skipnz
 12191  1326  0AF4               	incf	___awmod@dividend+1,f
 12192  1327  01F7               	clrf	___awmod@sign
 12193  1328  0AF7               	incf	___awmod@sign,f
 12194  1329                     l4628:	
 12195  1329  1FF2               	btfss	___awmod@divisor+1,7
 12196  132A  2B30               	goto	l4632
 12197  132B  09F1               	comf	___awmod@divisor,f
 12198  132C  09F2               	comf	___awmod@divisor+1,f
 12199  132D  0AF1               	incf	___awmod@divisor,f
 12200  132E  1903               	skipnz
 12201  132F  0AF2               	incf	___awmod@divisor+1,f
 12202  1330                     l4632:	
 12203  1330  0871               	movf	___awmod@divisor,w
 12204  1331  0472               	iorwf	___awmod@divisor+1,w
 12205  1332  1903               	btfsc	3,2
 12206  1333  2B57               	goto	l4650
 12207  1334  01F6               	clrf	___awmod@counter
 12208  1335  0AF6               	incf	___awmod@counter,f
 12209  1336                     l4640:	
 12210  1336  1BF2               	btfsc	___awmod@divisor+1,7
 12211  1337  2B42               	goto	l4642
 12212  1338  3001               	movlw	1
 12213  1339                     u4175:	
 12214  1339  35F1               	lslf	___awmod@divisor,f
 12215  133A  0DF2               	rlf	___awmod@divisor+1,f
 12216  133B  0B89               	decfsz	9,f
 12217  133C  2B39               	goto	u4175
 12218  133D  3001               	movlw	1
 12219  133E  00F5               	movwf	??___awmod
 12220  133F  0875               	movf	??___awmod,w
 12221  1340  07F6               	addwf	___awmod@counter,f
 12222  1341  2B36               	goto	l4640
 12223  1342                     l4642:	
 12224  1342  0872               	movf	___awmod@divisor+1,w
 12225  1343  0274               	subwf	___awmod@dividend+1,w
 12226  1344  1D03               	skipz
 12227  1345  2B48               	goto	u4195
 12228  1346  0871               	movf	___awmod@divisor,w
 12229  1347  0273               	subwf	___awmod@dividend,w
 12230  1348                     u4195:	
 12231  1348  1C03               	skipc
 12232  1349  2B4E               	goto	l4646
 12233  134A  0871               	movf	___awmod@divisor,w
 12234  134B  02F3               	subwf	___awmod@dividend,f
 12235  134C  0872               	movf	___awmod@divisor+1,w
 12236  134D  3BF4               	subwfb	___awmod@dividend+1,f
 12237  134E                     l4646:	
 12238  134E  3001               	movlw	1
 12239  134F                     u4205:	
 12240  134F  36F2               	lsrf	___awmod@divisor+1,f
 12241  1350  0CF1               	rrf	___awmod@divisor,f
 12242  1351  0B89               	decfsz	9,f
 12243  1352  2B4F               	goto	u4205
 12244  1353  3001               	movlw	1
 12245  1354  02F6               	subwf	___awmod@counter,f
 12246  1355  1D03               	btfss	3,2
 12247  1356  2B42               	goto	l4642
 12248  1357                     l4650:	
 12249  1357  0877               	movf	___awmod@sign,w
 12250  1358  1903               	btfsc	3,2
 12251  1359  2B5F               	goto	l4654
 12252  135A  09F3               	comf	___awmod@dividend,f
 12253  135B  09F4               	comf	___awmod@dividend+1,f
 12254  135C  0AF3               	incf	___awmod@dividend,f
 12255  135D  1903               	skipnz
 12256  135E  0AF4               	incf	___awmod@dividend+1,f
 12257  135F                     l4654:	
 12258  135F  0874               	movf	___awmod@dividend+1,w
 12259  1360  00F2               	movwf	?___awmod+1
 12260  1361  0873               	movf	___awmod@dividend,w
 12261  1362  00F1               	movwf	?___awmod
 12262  1363  0008               	return
 12263  1364                     __end_of___awmod:	
 12264                           
 12265                           	psect	text32
 12266  1449                     __ptext32:	
 12267 ;; *************** function ___awdiv *****************
 12268 ;; Defined at:
 12269 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 12270 ;; Parameters:    Size  Location     Type
 12271 ;;  divisor         2    1[COMMON] int 
 12272 ;;  dividend        2    3[COMMON] int 
 12273 ;; Auto vars:     Size  Location     Type
 12274 ;;  quotient        2    8[COMMON] int 
 12275 ;;  sign            1    7[COMMON] unsigned char 
 12276 ;;  counter         1    6[COMMON] unsigned char 
 12277 ;; Return value:  Size  Location     Type
 12278 ;;                  2    1[COMMON] int 
 12279 ;; Registers used:
 12280 ;;		wreg, status,2, status,0
 12281 ;; Tracked objects:
 12282 ;;		On entry : 0/0
 12283 ;;		On exit  : 0/0
 12284 ;;		Unchanged: 0/0
 12285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12286 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12287 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12288 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12289 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12290 ;;Total ram usage:        9 bytes
 12291 ;; Hardware stack levels used:    1
 12292 ;; Hardware stack levels required when called:    4
 12293 ;; This function calls:
 12294 ;;		Nothing
 12295 ;; This function is called by:
 12296 ;;		_efgtoa
 12297 ;; This function uses a non-reentrant model
 12298 ;;
 12299                           
 12300                           
 12301                           ;psect for function ___awdiv
 12302  1449                     ___awdiv:	
 12303                           
 12304                           ;incstack = 0
 12305                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 12306  1449  01F7               	clrf	___awdiv@sign
 12307  144A  1FF2               	btfss	___awdiv@divisor+1,7
 12308  144B  2C53               	goto	l4584
 12309  144C  09F1               	comf	___awdiv@divisor,f
 12310  144D  09F2               	comf	___awdiv@divisor+1,f
 12311  144E  0AF1               	incf	___awdiv@divisor,f
 12312  144F  1903               	skipnz
 12313  1450  0AF2               	incf	___awdiv@divisor+1,f
 12314  1451  01F7               	clrf	___awdiv@sign
 12315  1452  0AF7               	incf	___awdiv@sign,f
 12316  1453                     l4584:	
 12317  1453  1FF4               	btfss	___awdiv@dividend+1,7
 12318  1454  2C5E               	goto	l4590
 12319  1455  09F3               	comf	___awdiv@dividend,f
 12320  1456  09F4               	comf	___awdiv@dividend+1,f
 12321  1457  0AF3               	incf	___awdiv@dividend,f
 12322  1458  1903               	skipnz
 12323  1459  0AF4               	incf	___awdiv@dividend+1,f
 12324  145A  3001               	movlw	1
 12325  145B  00F5               	movwf	??___awdiv
 12326  145C  0875               	movf	??___awdiv,w
 12327  145D  06F7               	xorwf	___awdiv@sign,f
 12328  145E                     l4590:	
 12329  145E  01F8               	clrf	___awdiv@quotient
 12330  145F  01F9               	clrf	___awdiv@quotient+1
 12331  1460  0871               	movf	___awdiv@divisor,w
 12332  1461  0472               	iorwf	___awdiv@divisor+1,w
 12333  1462  1903               	btfsc	3,2
 12334  1463  2C8D               	goto	l4612
 12335  1464  01F6               	clrf	___awdiv@counter
 12336  1465  0AF6               	incf	___awdiv@counter,f
 12337  1466                     l4600:	
 12338  1466  1BF2               	btfsc	___awdiv@divisor+1,7
 12339  1467  2C72               	goto	l4602
 12340  1468  3001               	movlw	1
 12341  1469                     u4075:	
 12342  1469  35F1               	lslf	___awdiv@divisor,f
 12343  146A  0DF2               	rlf	___awdiv@divisor+1,f
 12344  146B  0B89               	decfsz	9,f
 12345  146C  2C69               	goto	u4075
 12346  146D  3001               	movlw	1
 12347  146E  00F5               	movwf	??___awdiv
 12348  146F  0875               	movf	??___awdiv,w
 12349  1470  07F6               	addwf	___awdiv@counter,f
 12350  1471  2C66               	goto	l4600
 12351  1472                     l4602:	
 12352  1472  3001               	movlw	1
 12353  1473                     u4095:	
 12354  1473  35F8               	lslf	___awdiv@quotient,f
 12355  1474  0DF9               	rlf	___awdiv@quotient+1,f
 12356  1475  0B89               	decfsz	9,f
 12357  1476  2C73               	goto	u4095
 12358  1477  0872               	movf	___awdiv@divisor+1,w
 12359  1478  0274               	subwf	___awdiv@dividend+1,w
 12360  1479  1D03               	skipz
 12361  147A  2C7D               	goto	u4105
 12362  147B  0871               	movf	___awdiv@divisor,w
 12363  147C  0273               	subwf	___awdiv@dividend,w
 12364  147D                     u4105:	
 12365  147D  1C03               	skipc
 12366  147E  2C84               	goto	l4608
 12367  147F  0871               	movf	___awdiv@divisor,w
 12368  1480  02F3               	subwf	___awdiv@dividend,f
 12369  1481  0872               	movf	___awdiv@divisor+1,w
 12370  1482  3BF4               	subwfb	___awdiv@dividend+1,f
 12371  1483  1478               	bsf	___awdiv@quotient,0
 12372  1484                     l4608:	
 12373  1484  3001               	movlw	1
 12374  1485                     u4115:	
 12375  1485  36F2               	lsrf	___awdiv@divisor+1,f
 12376  1486  0CF1               	rrf	___awdiv@divisor,f
 12377  1487  0B89               	decfsz	9,f
 12378  1488  2C85               	goto	u4115
 12379  1489  3001               	movlw	1
 12380  148A  02F6               	subwf	___awdiv@counter,f
 12381  148B  1D03               	btfss	3,2
 12382  148C  2C72               	goto	l4602
 12383  148D                     l4612:	
 12384  148D  0877               	movf	___awdiv@sign,w
 12385  148E  1903               	btfsc	3,2
 12386  148F  2C95               	goto	l4616
 12387  1490  09F8               	comf	___awdiv@quotient,f
 12388  1491  09F9               	comf	___awdiv@quotient+1,f
 12389  1492  0AF8               	incf	___awdiv@quotient,f
 12390  1493  1903               	skipnz
 12391  1494  0AF9               	incf	___awdiv@quotient+1,f
 12392  1495                     l4616:	
 12393  1495  0879               	movf	___awdiv@quotient+1,w
 12394  1496  00F2               	movwf	?___awdiv+1
 12395  1497  0878               	movf	___awdiv@quotient,w
 12396  1498  00F1               	movwf	?___awdiv
 12397  1499  0008               	return
 12398  149A                     __end_of___awdiv:	
 12399                           
 12400                           	psect	text33
 12401  0849                     __ptext33:	
 12402 ;; *************** function ___xxtofl *****************
 12403 ;; Defined at:
 12404 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 12405 ;; Parameters:    Size  Location     Type
 12406 ;;  sign            1    wreg     unsigned char 
 12407 ;;  val             4    1[COMMON] long 
 12408 ;; Auto vars:     Size  Location     Type
 12409 ;;  sign            1    0[BANK0 ] unsigned char 
 12410 ;;  arg             4    2[BANK0 ] unsigned long 
 12411 ;;  exp             1    1[BANK0 ] unsigned char 
 12412 ;; Return value:  Size  Location     Type
 12413 ;;                  4    1[COMMON] unsigned char 
 12414 ;; Registers used:
 12415 ;;		wreg, status,2, status,0
 12416 ;; Tracked objects:
 12417 ;;		On entry : 0/0
 12418 ;;		On exit  : 0/0
 12419 ;;		Unchanged: 0/0
 12420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12421 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12422 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12423 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12424 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12425 ;;Total ram usage:       14 bytes
 12426 ;; Hardware stack levels used:    1
 12427 ;; Hardware stack levels required when called:    4
 12428 ;; This function calls:
 12429 ;;		Nothing
 12430 ;; This function is called by:
 12431 ;;		_readPressureSensor
 12432 ;; This function uses a non-reentrant model
 12433 ;;
 12434                           
 12435                           
 12436                           ;psect for function ___xxtofl
 12437  0849                     ___xxtofl:	
 12438                           
 12439                           ;incstack = 0
 12440                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 12441                           ;___xxtofl@sign stored from wreg
 12442  0849  0020               	movlb	0	; select bank0
 12443  084A  00A0               	movwf	___xxtofl@sign
 12444  084B  0820               	movf	___xxtofl@sign,w
 12445  084C  1D03               	btfss	3,2
 12446  084D  1FF4               	btfss	___xxtofl@val+3,7
 12447  084E  285F               	goto	l5686
 12448  084F  0971               	comf	___xxtofl@val,w
 12449  0850  00A2               	movwf	___xxtofl@arg
 12450  0851  0972               	comf	___xxtofl@val+1,w
 12451  0852  00A3               	movwf	___xxtofl@arg+1
 12452  0853  0973               	comf	___xxtofl@val+2,w
 12453  0854  00A4               	movwf	___xxtofl@arg+2
 12454  0855  0974               	comf	___xxtofl@val+3,w
 12455  0856  00A5               	movwf	___xxtofl@arg+3
 12456  0857  0AA2               	incf	___xxtofl@arg,f
 12457  0858  1903               	skipnz
 12458  0859  0AA3               	incf	___xxtofl@arg+1,f
 12459  085A  1903               	skipnz
 12460  085B  0AA4               	incf	___xxtofl@arg+2,f
 12461  085C  1903               	skipnz
 12462  085D  0AA5               	incf	___xxtofl@arg+3,f
 12463  085E  2867               	goto	l1584
 12464  085F                     l5686:	
 12465  085F  0874               	movf	___xxtofl@val+3,w
 12466  0860  00A5               	movwf	___xxtofl@arg+3
 12467  0861  0873               	movf	___xxtofl@val+2,w
 12468  0862  00A4               	movwf	___xxtofl@arg+2
 12469  0863  0872               	movf	___xxtofl@val+1,w
 12470  0864  00A3               	movwf	___xxtofl@arg+1
 12471  0865  0871               	movf	___xxtofl@val,w
 12472  0866  00A2               	movwf	___xxtofl@arg
 12473  0867                     l1584:	
 12474  0867  0874               	movf	___xxtofl@val+3,w
 12475  0868  0473               	iorwf	___xxtofl@val+2,w
 12476  0869  0472               	iorwf	___xxtofl@val+1,w
 12477  086A  0471               	iorwf	___xxtofl@val,w
 12478  086B  1D03               	skipz
 12479  086C  2876               	goto	l5692
 12480  086D  3000               	movlw	0
 12481  086E  00F4               	movwf	?___xxtofl+3
 12482  086F  3000               	movlw	0
 12483  0870  00F3               	movwf	?___xxtofl+2
 12484  0871  3000               	movlw	0
 12485  0872  00F2               	movwf	?___xxtofl+1
 12486  0873  3000               	movlw	0
 12487  0874  00F1               	movwf	?___xxtofl
 12488  0875  0008               	return
 12489  0876                     l5692:	
 12490  0876  3096               	movlw	150
 12491  0877  00F5               	movwf	??___xxtofl
 12492  0878  0875               	movf	??___xxtofl,w
 12493  0879  00A1               	movwf	___xxtofl@exp
 12494  087A                     l5696:	
 12495  087A  30FE               	movlw	254
 12496  087B  0525               	andwf	___xxtofl@arg+3,w
 12497  087C  1903               	btfsc	3,2
 12498  087D  289D               	goto	l1590
 12499  087E  3001               	movlw	1
 12500  087F  00F5               	movwf	??___xxtofl
 12501  0880  0875               	movf	??___xxtofl,w
 12502  0881  07A1               	addwf	___xxtofl@exp,f
 12503  0882  3001               	movlw	1
 12504  0883                     u5765:	
 12505  0883  36A5               	lsrf	___xxtofl@arg+3,f
 12506  0884  0CA4               	rrf	___xxtofl@arg+2,f
 12507  0885  0CA3               	rrf	___xxtofl@arg+1,f
 12508  0886  0CA2               	rrf	___xxtofl@arg,f
 12509  0887  0B89               	decfsz	9,f
 12510  0888  2883               	goto	u5765
 12511  0889  287A               	goto	l5696
 12512  088A                     l5698:	
 12513  088A  3001               	movlw	1
 12514  088B  00F5               	movwf	??___xxtofl
 12515  088C  0875               	movf	??___xxtofl,w
 12516  088D  07A1               	addwf	___xxtofl@exp,f
 12517  088E  3001               	movlw	1
 12518  088F  07A2               	addwf	___xxtofl@arg,f
 12519  0890  3000               	movlw	0
 12520  0891  3DA3               	addwfc	___xxtofl@arg+1,f
 12521  0892  3000               	movlw	0
 12522  0893  3DA4               	addwfc	___xxtofl@arg+2,f
 12523  0894  3000               	movlw	0
 12524  0895  3DA5               	addwfc	___xxtofl@arg+3,f
 12525  0896  3001               	movlw	1
 12526  0897                     u5785:	
 12527  0897  36A5               	lsrf	___xxtofl@arg+3,f
 12528  0898  0CA4               	rrf	___xxtofl@arg+2,f
 12529  0899  0CA3               	rrf	___xxtofl@arg+1,f
 12530  089A  0CA2               	rrf	___xxtofl@arg,f
 12531  089B  0B89               	decfsz	9,f
 12532  089C  2897               	goto	u5785
 12533  089D                     l1590:	
 12534  089D  30FF               	movlw	255
 12535  089E  0525               	andwf	___xxtofl@arg+3,w
 12536  089F  1903               	btfsc	3,2
 12537  08A0  28AF               	goto	l5706
 12538  08A1  288A               	goto	l5698
 12539  08A2                     l5708:	
 12540  08A2  3002               	movlw	2
 12541  08A3  0221               	subwf	___xxtofl@exp,w
 12542  08A4  1C03               	btfss	3,0
 12543  08A5  28B1               	goto	l1597
 12544  08A6  3001               	movlw	1
 12545  08A7  02A1               	subwf	___xxtofl@exp,f
 12546  08A8  3001               	movlw	1
 12547  08A9                     u5805:	
 12548  08A9  35A2               	lslf	___xxtofl@arg,f
 12549  08AA  0DA3               	rlf	___xxtofl@arg+1,f
 12550  08AB  0DA4               	rlf	___xxtofl@arg+2,f
 12551  08AC  0DA5               	rlf	___xxtofl@arg+3,f
 12552  08AD  0B89               	decfsz	9,f
 12553  08AE  28A9               	goto	u5805
 12554  08AF                     l5706:	
 12555  08AF  1FA4               	btfss	___xxtofl@arg+2,7
 12556  08B0  28A2               	goto	l5708
 12557  08B1                     l1597:	
 12558  08B1  1821               	btfsc	___xxtofl@exp,0
 12559  08B2  28BB               	goto	l1598
 12560  08B3  30FF               	movlw	255
 12561  08B4  05A2               	andwf	___xxtofl@arg,f
 12562  08B5  30FF               	movlw	255
 12563  08B6  05A3               	andwf	___xxtofl@arg+1,f
 12564  08B7  307F               	movlw	127
 12565  08B8  05A4               	andwf	___xxtofl@arg+2,f
 12566  08B9  30FF               	movlw	255
 12567  08BA  05A5               	andwf	___xxtofl@arg+3,f
 12568  08BB                     l1598:	
 12569  08BB  1003               	clrc
 12570  08BC  0CA1               	rrf	___xxtofl@exp,f
 12571  08BD  0821               	movf	___xxtofl@exp,w
 12572  08BE  00F5               	movwf	??___xxtofl
 12573  08BF  01F6               	clrf	??___xxtofl+1
 12574  08C0  01F7               	clrf	??___xxtofl+2
 12575  08C1  01F8               	clrf	??___xxtofl+3
 12576  08C2  3018               	movlw	24
 12577  08C3                     u5845:	
 12578  08C3  35F5               	lslf	??___xxtofl,f
 12579  08C4  0DF6               	rlf	??___xxtofl+1,f
 12580  08C5  0DF7               	rlf	??___xxtofl+2,f
 12581  08C6  0DF8               	rlf	??___xxtofl+3,f
 12582  08C7  0B89               	decfsz	9,f
 12583  08C8  28C3               	goto	u5845
 12584  08C9  0875               	movf	??___xxtofl,w
 12585  08CA  04A2               	iorwf	___xxtofl@arg,f
 12586  08CB  0876               	movf	??___xxtofl+1,w
 12587  08CC  04A3               	iorwf	___xxtofl@arg+1,f
 12588  08CD  0877               	movf	??___xxtofl+2,w
 12589  08CE  04A4               	iorwf	___xxtofl@arg+2,f
 12590  08CF  0878               	movf	??___xxtofl+3,w
 12591  08D0  04A5               	iorwf	___xxtofl@arg+3,f
 12592  08D1  0820               	movf	___xxtofl@sign,w
 12593  08D2  1D03               	btfss	3,2
 12594  08D3  1FF4               	btfss	___xxtofl@val+3,7
 12595  08D4  28D6               	goto	l5720
 12596  08D5  17A5               	bsf	___xxtofl@arg+3,7
 12597  08D6                     l5720:	
 12598  08D6  0825               	movf	___xxtofl@arg+3,w
 12599  08D7  00F4               	movwf	?___xxtofl+3
 12600  08D8  0824               	movf	___xxtofl@arg+2,w
 12601  08D9  00F3               	movwf	?___xxtofl+2
 12602  08DA  0823               	movf	___xxtofl@arg+1,w
 12603  08DB  00F2               	movwf	?___xxtofl+1
 12604  08DC  0822               	movf	___xxtofl@arg,w
 12605  08DD  00F1               	movwf	?___xxtofl
 12606  08DE  0008               	return
 12607  08DF                     __end_of___xxtofl:	
 12608                           
 12609                           	psect	text34
 12610  1197                     __ptext34:	
 12611 ;; *************** function _I2C1_Read1ByteRegister *****************
 12612 ;; Defined at:
 12613 ;;		line 63 in file "mcc_generated_files/examples/i2c1_master_example.c"
 12614 ;; Parameters:    Size  Location     Type
 12615 ;;  address         1    wreg     unsigned char 
 12616 ;;  reg             1    8[BANK0 ] unsigned char 
 12617 ;; Auto vars:     Size  Location     Type
 12618 ;;  address         1   10[BANK0 ] unsigned char 
 12619 ;;  returnValue     1   11[BANK0 ] unsigned char 
 12620 ;; Return value:  Size  Location     Type
 12621 ;;                  1    wreg      unsigned char 
 12622 ;; Registers used:
 12623 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12624 ;; Tracked objects:
 12625 ;;		On entry : 0/0
 12626 ;;		On exit  : 0/0
 12627 ;;		Unchanged: 0/0
 12628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12629 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12630 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12631 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12632 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12633 ;;Total ram usage:        4 bytes
 12634 ;; Hardware stack levels used:    1
 12635 ;; Hardware stack levels required when called:   12
 12636 ;; This function calls:
 12637 ;;		_I2C1_Close
 12638 ;;		_I2C1_MasterWrite
 12639 ;;		_I2C1_Open
 12640 ;;		_I2C1_SetAddressNackCallback
 12641 ;;		_I2C1_SetBuffer
 12642 ;;		_I2C1_SetDataCompleteCallback
 12643 ;; This function is called by:
 12644 ;;		_readPressureSensor
 12645 ;; This function uses a non-reentrant model
 12646 ;;
 12647                           
 12648                           
 12649                           ;psect for function _I2C1_Read1ByteRegister
 12650  1197                     _I2C1_Read1ByteRegister:	
 12651                           
 12652                           ;incstack = 0
 12653                           ; Regs used in _I2C1_Read1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12654                           ;I2C1_Read1ByteRegister@address stored from wreg
 12655  1197  0020               	movlb	0	; select bank0
 12656  1198  00AA               	movwf	I2C1_Read1ByteRegister@address
 12657                           
 12658                           ;mcc_generated_files/examples/i2c1_master_example.c: 63: uint8_t I2C1_Read1ByteRegister(
      +                          i2c1_address_t address, uint8_t reg);mcc_generated_files/examples/i2c1_master_example.c:
      +                           64: {;mcc_generated_files/examples/i2c1_master_example.c: 65:     uint8_t returnValue =
      +                           0x00;
 12659  1199  01AB               	clrf	I2C1_Read1ByteRegister@returnValue
 12660  119A                     l6770:	
 12661                           ;mcc_generated_files/examples/i2c1_master_example.c: 67:     while(!I2C1_Open(address));
 12662                           
 12663  119A  0020               	movlb	0	; select bank0
 12664  119B  082A               	movf	I2C1_Read1ByteRegister@address,w
 12665  119C  3187  27C9  3191   	fcall	_I2C1_Open
 12666  119F  3A00               	xorlw	0
 12667  11A0  1903               	skipnz
 12668  11A1  299A               	goto	l6770
 12669                           
 12670                           ;mcc_generated_files/examples/i2c1_master_example.c: 68:     I2C1_SetDataCompleteCallbac
      +                          k(rd1RegCompleteHandler,&returnValue);
 12671  11A2  30F5               	movlw	low _rd1RegCompleteHandler
 12672  11A3  00F6               	movwf	I2C1_SetDataCompleteCallback@cb
 12673  11A4  301E               	movlw	high _rd1RegCompleteHandler
 12674  11A5  00F7               	movwf	I2C1_SetDataCompleteCallback@cb+1
 12675  11A6  302B               	movlw	(low (I2C1_Read1ByteRegister@returnValue| 0))& (0+255)
 12676  11A7  0020               	movlb	0	; select bank0
 12677  11A8  00A9               	movwf	??_I2C1_Read1ByteRegister
 12678  11A9  0829               	movf	??_I2C1_Read1ByteRegister,w
 12679  11AA  00F8               	movwf	I2C1_SetDataCompleteCallback@ptr
 12680  11AB  319E  26BF  3191   	fcall	_I2C1_SetDataCompleteCallback
 12681                           
 12682                           ;mcc_generated_files/examples/i2c1_master_example.c: 69:     I2C1_SetBuffer(&reg,1);
 12683  11AE  3001               	movlw	1
 12684  11AF  00F1               	movwf	I2C1_SetBuffer@bufferSize
 12685  11B0  3000               	movlw	0
 12686  11B1  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 12687  11B2  3028               	movlw	(low (I2C1_Read1ByteRegister@reg| 0))& (0+255)
 12688  11B3  319E  26D7  3191   	fcall	_I2C1_SetBuffer
 12689                           
 12690                           ;mcc_generated_files/examples/i2c1_master_example.c: 70:     I2C1_SetAddressNackCallback
      +                          (((void*)0),((void*)0));
 12691  11B6  3000               	movlw	0
 12692  11B7  00F6               	movwf	I2C1_SetAddressNackCallback@cb
 12693  11B8  00F7               	movwf	I2C1_SetAddressNackCallback@cb+1
 12694  11B9  01F8               	clrf	I2C1_SetAddressNackCallback@ptr
 12695  11BA  319E  26CB  3191   	fcall	_I2C1_SetAddressNackCallback
 12696                           
 12697                           ;mcc_generated_files/examples/i2c1_master_example.c: 71:     I2C1_MasterWrite();
 12698  11BD  319E  2602  3191   	fcall	_I2C1_MasterWrite
 12699  11C0                     l6780:	
 12700                           ;mcc_generated_files/examples/i2c1_master_example.c: 72:     while(I2C1_BUSY == I2C1_Clo
      +                          se());
 12701                           
 12702  11C0  3190  2004  3191   	fcall	_I2C1_Close
 12703  11C3  3A01               	xorlw	1
 12704  11C4  1903               	skipnz
 12705  11C5  29C0               	goto	l6780
 12706                           
 12707                           ;mcc_generated_files/examples/i2c1_master_example.c: 74:     return returnValue;
 12708  11C6  0020               	movlb	0	; select bank0
 12709  11C7  082B               	movf	I2C1_Read1ByteRegister@returnValue,w
 12710  11C8  0008               	return
 12711  11C9                     __end_of_I2C1_Read1ByteRegister:	
 12712                           
 12713                           	psect	text35
 12714  1ECB                     __ptext35:	
 12715 ;; *************** function _I2C1_SetAddressNackCallback *****************
 12716 ;; Defined at:
 12717 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 12718 ;; Parameters:    Size  Location     Type
 12719 ;;  cb              2    6[COMMON] PTR FTN(PTR void ,)enum 
 12720 ;;		 -> Absolute function(1), 
 12721 ;;  ptr             1    8[COMMON] PTR void 
 12722 ;;		 -> NULL(0), 
 12723 ;; Auto vars:     Size  Location     Type
 12724 ;;		None
 12725 ;; Return value:  Size  Location     Type
 12726 ;;                  1    wreg      void 
 12727 ;; Registers used:
 12728 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12729 ;; Tracked objects:
 12730 ;;		On entry : 0/0
 12731 ;;		On exit  : 0/0
 12732 ;;		Unchanged: 0/0
 12733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12734 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12736 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12737 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12738 ;;Total ram usage:        4 bytes
 12739 ;; Hardware stack levels used:    1
 12740 ;; Hardware stack levels required when called:    5
 12741 ;; This function calls:
 12742 ;;		_I2C1_SetCallback
 12743 ;; This function is called by:
 12744 ;;		_I2C1_Read1ByteRegister
 12745 ;;		_I2C1_Read2ByteRegister
 12746 ;;		_I2C1_Write1ByteRegister
 12747 ;;		_I2C1_Write2ByteRegister
 12748 ;;		_I2C1_WriteNBytes
 12749 ;;		_I2C1_ReadDataBlock
 12750 ;; This function uses a non-reentrant model
 12751 ;;
 12752                           
 12753                           
 12754                           ;psect for function _I2C1_SetAddressNackCallback
 12755  1ECB                     _I2C1_SetAddressNackCallback:	
 12756                           
 12757                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 12758                           
 12759                           ;incstack = 0
 12760                           ; Regs used in _I2C1_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 12761  1ECB  0877               	movf	I2C1_SetAddressNackCallback@cb+1,w
 12762  1ECC  00F2               	movwf	I2C1_SetCallback@cb+1
 12763  1ECD  0876               	movf	I2C1_SetAddressNackCallback@cb,w
 12764  1ECE  00F1               	movwf	I2C1_SetCallback@cb
 12765  1ECF  0878               	movf	I2C1_SetAddressNackCallback@ptr,w
 12766  1ED0  00F9               	movwf	??_I2C1_SetAddressNackCallback
 12767  1ED1  0879               	movf	??_I2C1_SetAddressNackCallback,w
 12768  1ED2  00F3               	movwf	I2C1_SetCallback@ptr
 12769  1ED3  3002               	movlw	2
 12770  1ED4  3190  20E7         	fcall	_I2C1_SetCallback
 12771  1ED6  0008               	return
 12772  1ED7                     __end_of_I2C1_SetAddressNackCallback:	
 12773                           
 12774                           	psect	text36
 12775  07C9                     __ptext36:	
 12776 ;; *************** function _I2C1_Open *****************
 12777 ;; Defined at:
 12778 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 12779 ;; Parameters:    Size  Location     Type
 12780 ;;  address         1    wreg     unsigned char 
 12781 ;; Auto vars:     Size  Location     Type
 12782 ;;  address         1    2[COMMON] unsigned char 
 12783 ;;  returnValue     1    3[COMMON] enum E353
 12784 ;; Return value:  Size  Location     Type
 12785 ;;                  1    wreg      enum E353
 12786 ;; Registers used:
 12787 ;;		wreg, status,2, status,0, pclath, cstack
 12788 ;; Tracked objects:
 12789 ;;		On entry : 0/0
 12790 ;;		On exit  : 0/0
 12791 ;;		Unchanged: 0/0
 12792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12794 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12795 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12796 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12797 ;;Total ram usage:        3 bytes
 12798 ;; Hardware stack levels used:    1
 12799 ;; Hardware stack levels required when called:    5
 12800 ;; This function calls:
 12801 ;;		_I2C1_MasterClearIrq
 12802 ;;		_I2C1_MasterOpen
 12803 ;; This function is called by:
 12804 ;;		_I2C1_Read1ByteRegister
 12805 ;;		_I2C1_Read2ByteRegister
 12806 ;;		_I2C1_Write1ByteRegister
 12807 ;;		_I2C1_Write2ByteRegister
 12808 ;;		_I2C1_WriteNBytes
 12809 ;;		_I2C1_ReadNBytes
 12810 ;;		_I2C1_ReadDataBlock
 12811 ;; This function uses a non-reentrant model
 12812 ;;
 12813                           
 12814                           
 12815                           ;psect for function _I2C1_Open
 12816  07C9                     _I2C1_Open:	
 12817                           
 12818                           ;incstack = 0
 12819                           ; Regs used in _I2C1_Open: [wreg+status,2+status,0+pclath+cstack]
 12820                           ;I2C1_Open@address stored from wreg
 12821  07C9  00F2               	movwf	I2C1_Open@address
 12822                           
 12823                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 12824  07CA  01F3               	clrf	I2C1_Open@returnValue
 12825  07CB  0AF3               	incf	I2C1_Open@returnValue,f
 12826                           
 12827                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 12828  07CC  0023               	movlb	3	; select bank3
 12829  07CD  193C               	btfsc	(_I2C1_Status^(0+384)+28),2
 12830  07CE  2FFE               	goto	l541
 12831                           
 12832                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 12833  07CF  0872               	movf	I2C1_Open@address,w
 12834  07D0  00F1               	movwf	??_I2C1_Open
 12835  07D1  0871               	movf	??_I2C1_Open,w
 12836  07D2  00B6               	movwf	(_I2C1_Status^(0+384)+22)
 12837                           
 12838                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 12839  07D3  10BC               	bcf	(_I2C1_Status^(0+384)+28),1
 12840                           
 12841                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 12842  07D4  153C               	bsf	(_I2C1_Status^(0+384)+28),2
 12843                           
 12844                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 12845  07D5  103C               	bcf	(_I2C1_Status^(0+384)+28),0
 12846                           
 12847                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 12848  07D6  300E               	movlw	14
 12849  07D7  00F1               	movwf	??_I2C1_Open
 12850  07D8  0871               	movf	??_I2C1_Open,w
 12851  07D9  00BA               	movwf	(_I2C1_Status^(0+384)+26)
 12852                           
 12853                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 12854  07DA  30F4               	movlw	244
 12855  07DB  00B4               	movwf	(_I2C1_Status^(0+384)+20)
 12856  07DC  3001               	movlw	1
 12857  07DD  00B5               	movwf	(_I2C1_Status^(0+384)+21)
 12858                           
 12859                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 12860  07DE  15BC               	bsf	(_I2C1_Status^(0+384)+28),3
 12861                           
 12862                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 12863  07DF  30AF               	movlw	low _I2C1_CallbackReturnStop
 12864  07E0  00A0               	movwf	_I2C1_Status^(0+384)
 12865  07E1  301D               	movlw	high _I2C1_CallbackReturnStop
 12866  07E2  00A1               	movwf	(_I2C1_Status^(0+384)+1)
 12867                           
 12868                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 12869  07E3  01AC               	clrf	(low ((_I2C1_Status| (0+256)+12)))^(0+128)
 12870                           
 12871                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 12872  07E4  30AF               	movlw	low _I2C1_CallbackReturnStop
 12873  07E5  00A2               	movwf	(low ((_I2C1_Status| (0+256)+2)))^(0+128)
 12874  07E6  301D               	movlw	high _I2C1_CallbackReturnStop
 12875  07E7  00A3               	movwf	((low ((_I2C1_Status| (0+256)+2)))^(0+128)+1)
 12876                           
 12877                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 12878  07E8  01AD               	clrf	(low ((_I2C1_Status| (0+256)+13)))^(0+128)
 12879                           
 12880                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 12881  07E9  30AF               	movlw	low _I2C1_CallbackReturnStop
 12882  07EA  00A4               	movwf	(low ((_I2C1_Status| (0+256)+4)))^(0+128)
 12883  07EB  301D               	movlw	high _I2C1_CallbackReturnStop
 12884  07EC  00A5               	movwf	((low ((_I2C1_Status| (0+256)+4)))^(0+128)+1)
 12885                           
 12886                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 12887  07ED  01AE               	clrf	(low ((_I2C1_Status| (0+256)+14)))^(0+128)
 12888                           
 12889                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 12890  07EE  30AF               	movlw	low _I2C1_CallbackReturnStop
 12891  07EF  00A6               	movwf	(low ((_I2C1_Status| (0+256)+6)))^(0+128)
 12892  07F0  301D               	movlw	high _I2C1_CallbackReturnStop
 12893  07F1  00A7               	movwf	((low ((_I2C1_Status| (0+256)+6)))^(0+128)+1)
 12894                           
 12895                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 12896  07F2  01AF               	clrf	(low ((_I2C1_Status| (0+256)+15)))^(0+128)
 12897                           
 12898                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 12899  07F3  3002               	movlw	low _I2C1_CallbackReturnReset
 12900  07F4  00A8               	movwf	(low ((_I2C1_Status| (0+256)+8)))^(0+128)
 12901  07F5  3000               	movlw	high _I2C1_CallbackReturnReset
 12902  07F6  00A9               	movwf	((low ((_I2C1_Status| (0+256)+8)))^(0+128)+1)
 12903                           
 12904                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 12905  07F7  01B0               	clrf	(low ((_I2C1_Status| (0+256)+16)))^(0+128)
 12906                           
 12907                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 12908  07F8  319D  25B4  3187   	fcall	_I2C1_MasterClearIrq
 12909                           
 12910                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 12911  07FB  319E  26A8         	fcall	_I2C1_MasterOpen
 12912                           
 12913                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 12914  07FD  01F3               	clrf	I2C1_Open@returnValue
 12915  07FE                     l541:	
 12916                           ;mcc_generated_files/i2c1_master.c: 205:     }
 12917                           
 12918                           
 12919                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 12920  07FE  0873               	movf	I2C1_Open@returnValue,w
 12921  07FF  0008               	return
 12922  0800                     __end_of_I2C1_Open:	
 12923                           
 12924                           	psect	text37
 12925  1EA8                     __ptext37:	
 12926 ;; *************** function _I2C1_MasterOpen *****************
 12927 ;; Defined at:
 12928 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 12929 ;; Parameters:    Size  Location     Type
 12930 ;;		None
 12931 ;; Auto vars:     Size  Location     Type
 12932 ;;		None
 12933 ;; Return value:  Size  Location     Type
 12934 ;;                  1    wreg      _Bool 
 12935 ;; Registers used:
 12936 ;;		wreg, status,2
 12937 ;; Tracked objects:
 12938 ;;		On entry : 0/0
 12939 ;;		On exit  : 0/0
 12940 ;;		Unchanged: 0/0
 12941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12946 ;;Total ram usage:        0 bytes
 12947 ;; Hardware stack levels used:    1
 12948 ;; Hardware stack levels required when called:    4
 12949 ;; This function calls:
 12950 ;;		Nothing
 12951 ;; This function is called by:
 12952 ;;		_I2C1_Open
 12953 ;; This function uses a non-reentrant model
 12954 ;;
 12955                           
 12956                           
 12957                           ;psect for function _I2C1_MasterOpen
 12958  1EA8                     _I2C1_MasterOpen:	
 12959                           
 12960                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 12961                           
 12962                           ;incstack = 0
 12963                           ; Regs used in _I2C1_MasterOpen: [wreg+status,2]
 12964  1EA8  0024               	movlb	4	; select bank4
 12965  1EA9  1A95               	btfsc	21,5	;volatile
 12966  1EAA  0008               	return
 12967                           
 12968                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x00;
 12969  1EAB  0194               	clrf	20	;volatile
 12970                           
 12971                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 12972  1EAC  3008               	movlw	8
 12973  1EAD  0095               	movwf	21	;volatile
 12974                           
 12975                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 12976  1EAE  0196               	clrf	22	;volatile
 12977                           
 12978                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x27;
 12979  1EAF  3027               	movlw	39
 12980  1EB0  0092               	movwf	18	;volatile
 12981                           
 12982                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 12983  1EB1  1695               	bsf	21,5	;volatile
 12984  1EB2  0008               	return
 12985  1EB3                     __end_of_I2C1_MasterOpen:	
 12986                           
 12987                           	psect	text38
 12988  1E02                     __ptext38:	
 12989 ;; *************** function _I2C1_MasterWrite *****************
 12990 ;; Defined at:
 12991 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 12992 ;; Parameters:    Size  Location     Type
 12993 ;;		None
 12994 ;; Auto vars:     Size  Location     Type
 12995 ;;		None
 12996 ;; Return value:  Size  Location     Type
 12997 ;;                  1    wreg      enum E353
 12998 ;; Registers used:
 12999 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13000 ;; Tracked objects:
 13001 ;;		On entry : 0/0
 13002 ;;		On exit  : 0/0
 13003 ;;		Unchanged: 0/0
 13004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13009 ;;Total ram usage:        0 bytes
 13010 ;; Hardware stack levels used:    1
 13011 ;; Hardware stack levels required when called:   11
 13012 ;; This function calls:
 13013 ;;		_I2C1_MasterOperation
 13014 ;; This function is called by:
 13015 ;;		_I2C1_Read1ByteRegister
 13016 ;;		_I2C1_Read2ByteRegister
 13017 ;;		_I2C1_Write1ByteRegister
 13018 ;;		_I2C1_Write2ByteRegister
 13019 ;;		_I2C1_WriteNBytes
 13020 ;;		_I2C1_ReadDataBlock
 13021 ;; This function uses a non-reentrant model
 13022 ;;
 13023                           
 13024                           
 13025                           ;psect for function _I2C1_MasterWrite
 13026  1E02                     _I2C1_MasterWrite:	
 13027                           
 13028                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 13029                           
 13030                           ;incstack = 0
 13031                           ; Regs used in _I2C1_MasterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13032  1E02  3000               	movlw	0
 13033  1E03  319F  27C3         	fcall	_I2C1_MasterOperation
 13034  1E05  0008               	return
 13035  1E06                     __end_of_I2C1_MasterWrite:	
 13036                           
 13037                           	psect	text39
 13038  1FC3                     __ptext39:	
 13039 ;; *************** function _I2C1_MasterOperation *****************
 13040 ;; Defined at:
 13041 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 13042 ;; Parameters:    Size  Location     Type
 13043 ;;  read            1    wreg     _Bool 
 13044 ;; Auto vars:     Size  Location     Type
 13045 ;;  read            1    6[BANK0 ] _Bool 
 13046 ;;  returnValue     1    7[BANK0 ] enum E353
 13047 ;; Return value:  Size  Location     Type
 13048 ;;                  1    wreg      enum E353
 13049 ;; Registers used:
 13050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13051 ;; Tracked objects:
 13052 ;;		On entry : 0/0
 13053 ;;		On exit  : 0/0
 13054 ;;		Unchanged: 0/0
 13055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13057 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13058 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13059 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13060 ;;Total ram usage:        3 bytes
 13061 ;; Hardware stack levels used:    1
 13062 ;; Hardware stack levels required when called:   10
 13063 ;; This function calls:
 13064 ;;		_I2C1_MasterStart
 13065 ;;		_I2C1_Poller
 13066 ;; This function is called by:
 13067 ;;		_I2C1_MasterWrite
 13068 ;;		_I2C1_MasterRead
 13069 ;; This function uses a non-reentrant model
 13070 ;;
 13071                           
 13072                           
 13073                           ;psect for function _I2C1_MasterOperation
 13074  1FC3                     _I2C1_MasterOperation:	
 13075                           
 13076                           ;incstack = 0
 13077                           ; Regs used in _I2C1_MasterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13078                           ;I2C1_MasterOperation@read stored from wreg
 13079  1FC3  0020               	movlb	0	; select bank0
 13080  1FC4  00A6               	movwf	I2C1_MasterOperation@read
 13081                           
 13082                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 13083  1FC5  01A7               	clrf	I2C1_MasterOperation@returnValue
 13084  1FC6  0AA7               	incf	I2C1_MasterOperation@returnValue,f
 13085                           
 13086                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 13087  1FC7  0023               	movlb	3	; select bank3
 13088  1FC8  18BC               	btfsc	(_I2C1_Status^(0+384)+28),1
 13089  1FC9  2FDE               	goto	l5380
 13090                           
 13091                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 13092  1FCA  14BC               	bsf	(_I2C1_Status^(0+384)+28),1
 13093                           
 13094                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 13095  1FCB  0020               	movlb	0	; select bank0
 13096  1FCC  01A7               	clrf	I2C1_MasterOperation@returnValue
 13097                           
 13098                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 13099  1FCD  0826               	movf	I2C1_MasterOperation@read,w
 13100  1FCE  1903               	btfsc	3,2
 13101  1FCF  2FD4               	goto	l5374
 13102                           
 13103                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 13104  1FD0  0023               	movlb	3	; select bank3
 13105  1FD1  01BA               	clrf	(_I2C1_Status^(0+384)+26)
 13106  1FD2  0ABA               	incf	(_I2C1_Status^(0+384)+26),f
 13107                           
 13108                           ;mcc_generated_files/i2c1_master.c: 235:         }
 13109  1FD3  2FD9               	goto	l5376
 13110  1FD4                     l5374:	
 13111                           
 13112                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 13113  1FD4  3002               	movlw	2
 13114  1FD5  00FB               	movwf	??_I2C1_MasterOperation
 13115  1FD6  087B               	movf	??_I2C1_MasterOperation,w
 13116  1FD7  0023               	movlb	3	; select bank3
 13117  1FD8  00BA               	movwf	(_I2C1_Status^(0+384)+26)
 13118  1FD9                     l5376:	
 13119                           
 13120                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 13121  1FD9  319D  25BD  319F   	fcall	_I2C1_MasterStart
 13122                           
 13123                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 13124  1FDC  319E  268A         	fcall	_I2C1_Poller
 13125  1FDE                     l5380:	
 13126                           
 13127                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 13128  1FDE  0020               	movlb	0	; select bank0
 13129  1FDF  0827               	movf	I2C1_MasterOperation@returnValue,w
 13130  1FE0  0008               	return
 13131  1FE1                     __end_of_I2C1_MasterOperation:	
 13132                           
 13133                           	psect	text40
 13134  1E8A                     __ptext40:	
 13135 ;; *************** function _I2C1_Poller *****************
 13136 ;; Defined at:
 13137 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 13138 ;; Parameters:    Size  Location     Type
 13139 ;;		None
 13140 ;; Auto vars:     Size  Location     Type
 13141 ;;		None
 13142 ;; Return value:  Size  Location     Type
 13143 ;;                  1    wreg      void 
 13144 ;; Registers used:
 13145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13146 ;; Tracked objects:
 13147 ;;		On entry : 0/0
 13148 ;;		On exit  : 0/0
 13149 ;;		Unchanged: 0/0
 13150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13155 ;;Total ram usage:        0 bytes
 13156 ;; Hardware stack levels used:    1
 13157 ;; Hardware stack levels required when called:    9
 13158 ;; This function calls:
 13159 ;;		_I2C1_MasterFsm
 13160 ;;		_I2C1_MasterWaitForEvent
 13161 ;; This function is called by:
 13162 ;;		_I2C1_MasterOperation
 13163 ;; This function uses a non-reentrant model
 13164 ;;
 13165                           
 13166                           
 13167                           ;psect for function _I2C1_Poller
 13168  1E8A                     _I2C1_Poller:	
 13169  1E8A                     l5028:	
 13170                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 13171                           
 13172                           ;incstack = 0
 13173                           ; Regs used in _I2C1_Poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13174                           
 13175                           
 13176                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 13177  1E8A  0023               	movlb	3	; select bank3
 13178  1E8B  1CBC               	btfss	(_I2C1_Status^(0+384)+28),1
 13179  1E8C  0008               	return
 13180                           
 13181                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 13182  1E8D  319D  25FE  319E   	fcall	_I2C1_MasterWaitForEvent
 13183                           
 13184                           ;mcc_generated_files/i2c1_master.c: 317:         I2C1_MasterFsm();
 13185  1E90  3191  210F  319E   	fcall	_I2C1_MasterFsm
 13186  1E93  2E8A               	goto	l5028
 13187  1E94                     __end_of_I2C1_Poller:	
 13188                           
 13189                           	psect	text41
 13190  1DFE                     __ptext41:	
 13191 ;; *************** function _I2C1_MasterWaitForEvent *****************
 13192 ;; Defined at:
 13193 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 13194 ;; Parameters:    Size  Location     Type
 13195 ;;		None
 13196 ;; Auto vars:     Size  Location     Type
 13197 ;;		None
 13198 ;; Return value:  Size  Location     Type
 13199 ;;                  1    wreg      void 
 13200 ;; Registers used:
 13201 ;;		None
 13202 ;; Tracked objects:
 13203 ;;		On entry : 0/0
 13204 ;;		On exit  : 0/0
 13205 ;;		Unchanged: 0/0
 13206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13211 ;;Total ram usage:        0 bytes
 13212 ;; Hardware stack levels used:    1
 13213 ;; Hardware stack levels required when called:    4
 13214 ;; This function calls:
 13215 ;;		Nothing
 13216 ;; This function is called by:
 13217 ;;		_I2C1_Poller
 13218 ;; This function uses a non-reentrant model
 13219 ;;
 13220                           
 13221                           
 13222                           ;psect for function _I2C1_MasterWaitForEvent
 13223  1DFE                     _I2C1_MasterWaitForEvent:	
 13224  1DFE                     l764:	
 13225                           ;incstack = 0
 13226                           ; Regs used in _I2C1_MasterWaitForEvent: []
 13227                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 13228                           
 13229                           
 13230                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR1bits.SSP1IF)
 13231  1DFE  0020               	movlb	0	; select bank0
 13232  1DFF  1991               	btfsc	17,3	;volatile
 13233  1E00  0008               	return
 13234  1E01  2DFE               	goto	l764
 13235  1E02                     __end_of_I2C1_MasterWaitForEvent:	
 13236                           
 13237                           	psect	text42
 13238  110F                     __ptext42:	
 13239 ;; *************** function _I2C1_MasterFsm *****************
 13240 ;; Defined at:
 13241 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 13242 ;; Parameters:    Size  Location     Type
 13243 ;;		None
 13244 ;; Auto vars:     Size  Location     Type
 13245 ;;		None
 13246 ;; Return value:  Size  Location     Type
 13247 ;;                  1    wreg      void 
 13248 ;; Registers used:
 13249 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13250 ;; Tracked objects:
 13251 ;;		On entry : 0/0
 13252 ;;		On exit  : 0/0
 13253 ;;		Unchanged: 0/0
 13254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13257 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13258 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13259 ;;Total ram usage:        3 bytes
 13260 ;; Hardware stack levels used:    1
 13261 ;; Hardware stack levels required when called:    8
 13262 ;; This function calls:
 13263 ;;		_I2C1_DO_ADDRESS_NACK
 13264 ;;		_I2C1_DO_IDLE
 13265 ;;		_I2C1_DO_RCEN
 13266 ;;		_I2C1_DO_RESET
 13267 ;;		_I2C1_DO_RX
 13268 ;;		_I2C1_DO_RX_ACK
 13269 ;;		_I2C1_DO_RX_NACK_RESTART
 13270 ;;		_I2C1_DO_RX_NACK_STOP
 13271 ;;		_I2C1_DO_SEND_ADR_READ
 13272 ;;		_I2C1_DO_SEND_ADR_WRITE
 13273 ;;		_I2C1_DO_SEND_RESTART
 13274 ;;		_I2C1_DO_SEND_RESTART_READ
 13275 ;;		_I2C1_DO_SEND_RESTART_WRITE
 13276 ;;		_I2C1_DO_SEND_STOP
 13277 ;;		_I2C1_DO_TX
 13278 ;;		_I2C1_DO_TX_EMPTY
 13279 ;;		_I2C1_MasterClearIrq
 13280 ;;		_I2C1_MasterIsNack
 13281 ;; This function is called by:
 13282 ;;		_I2C1_Poller
 13283 ;; This function uses a non-reentrant model
 13284 ;;
 13285                           
 13286                           
 13287                           ;psect for function _I2C1_MasterFsm
 13288  110F                     _I2C1_MasterFsm:	
 13289                           
 13290                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 13291                           
 13292                           ;incstack = 0
 13293                           ; Regs used in _I2C1_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13294  110F  319D  25B4  3191   	fcall	_I2C1_MasterClearIrq
 13295                           
 13296                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 13297  1112  0023               	movlb	3	; select bank3
 13298  1113  1C3C               	btfss	(_I2C1_Status^(0+384)+28),0
 13299  1114  2921               	goto	l4486
 13300  1115  319E  2638  3191   	fcall	_I2C1_MasterIsNack
 13301  1118  3A00               	xorlw	0
 13302  1119  1903               	skipnz
 13303  111A  2921               	goto	l4486
 13304                           
 13305                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 13306  111B  300F               	movlw	15
 13307  111C  0020               	movlb	0	; select bank0
 13308  111D  00A3               	movwf	??_I2C1_MasterFsm
 13309  111E  0823               	movf	??_I2C1_MasterFsm,w
 13310  111F  0023               	movlb	3	; select bank3
 13311  1120  00BA               	movwf	(_I2C1_Status^(0+384)+26)
 13312  1121                     l4486:	
 13313                           
 13314                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = fsmStateTable[I2C1_Stat
      +                          us.state]();
 13315  1121  0023               	movlb	3	; select bank3
 13316  1122  083A               	movf	(_I2C1_Status^(0+384)+26),w
 13317  1123  0020               	movlb	0	; select bank0
 13318  1124  00A3               	movwf	??_I2C1_MasterFsm
 13319  1125  01A4               	clrf	??_I2C1_MasterFsm+1
 13320  1126  35A3               	lslf	??_I2C1_MasterFsm,f
 13321  1127  0DA4               	rlf	??_I2C1_MasterFsm+1,f
 13322  1128  3000               	movlw	low (_fsmStateTable| (0+32768))
 13323  1129  0723               	addwf	??_I2C1_MasterFsm,w
 13324  112A  0084               	movwf	4
 13325  112B  3098               	movlw	high (_fsmStateTable| (0+32768))
 13326  112C  3D24               	addwfc	??_I2C1_MasterFsm+1,w
 13327  112D  0085               	movwf	5
 13328  112E  3F01               	moviw [1]fsr0
 13329  112F  008A               	movwf	10
 13330  1130  3F00               	moviw [0]fsr0
 13331  1131  000A               	callw
 13332  1132  3191               	pagesel	$
 13333  1133  0020               	movlb	0	; select bank0
 13334  1134  00A5               	movwf	??_I2C1_MasterFsm+2
 13335  1135  0825               	movf	??_I2C1_MasterFsm+2,w
 13336  1136  0023               	movlb	3	; select bank3
 13337  1137  00BA               	movwf	(_I2C1_Status^(0+384)+26)
 13338  1138  0008               	return
 13339  1139                     __end_of_I2C1_MasterFsm:	
 13340                           
 13341                           	psect	text43
 13342  1168                     __ptext43:	
 13343 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 13344 ;; Defined at:
 13345 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 13346 ;; Parameters:    Size  Location     Type
 13347 ;;		None
 13348 ;; Auto vars:     Size  Location     Type
 13349 ;;		None
 13350 ;; Return value:  Size  Location     Type
 13351 ;;                  1    wreg      enum E7150
 13352 ;; Registers used:
 13353 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13354 ;; Tracked objects:
 13355 ;;		On entry : 0/0
 13356 ;;		On exit  : 0/0
 13357 ;;		Unchanged: 0/0
 13358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13361 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13362 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13363 ;;Total ram usage:        3 bytes
 13364 ;; Hardware stack levels used:    1
 13365 ;; Hardware stack levels required when called:    7
 13366 ;; This function calls:
 13367 ;;		Absolute function
 13368 ;;		_I2C1_CallbackReturnReset
 13369 ;;		_I2C1_CallbackReturnStop
 13370 ;;		_I2C1_DO_SEND_RESTART
 13371 ;;		_I2C1_DO_SEND_STOP
 13372 ;;		_rd1RegCompleteHandler
 13373 ;;		_rd2RegCompleteHandler
 13374 ;;		_rdBlkRegCompleteHandler
 13375 ;;		_wr1RegCompleteHandler
 13376 ;;		_wr2RegCompleteHandler
 13377 ;; This function is called by:
 13378 ;;		_I2C1_MasterFsm
 13379 ;; This function uses a non-reentrant model
 13380 ;;
 13381                           
 13382                           
 13383                           ;psect for function _I2C1_DO_ADDRESS_NACK
 13384  1168                     _I2C1_DO_ADDRESS_NACK:	
 13385                           
 13386                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 13387                           
 13388                           ;incstack = 0
 13389                           ; Regs used in _I2C1_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13390  1168  0023               	movlb	3	; select bank3
 13391  1169  103C               	bcf	(_I2C1_Status^(0+384)+28),0
 13392                           
 13393                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 13394  116A  3002               	movlw	2
 13395  116B  0020               	movlb	0	; select bank0
 13396  116C  00A0               	movwf	??_I2C1_DO_ADDRESS_NACK
 13397  116D  0820               	movf	??_I2C1_DO_ADDRESS_NACK,w
 13398  116E  0023               	movlb	3	; select bank3
 13399  116F  00BB               	movwf	(_I2C1_Status^(0+384)+27)
 13400                           
 13401                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 13402  1170  2977               	goto	l4240
 13403  1171                     l4230:	
 13404                           
 13405                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 13406  1171  319D  25EA         	fcall	_I2C1_DO_SEND_RESTART
 13407  1173  0008               	return
 13408  1174                     l4234:	
 13409                           
 13410                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 13411  1174  319D  25EE         	fcall	_I2C1_DO_SEND_STOP
 13412  1176  0008               	return
 13413  1177                     l4240:	
 13414  1177  082E               	movf	(low ((_I2C1_Status| (0+256)+14)))^(0+128),w
 13415  1178  0020               	movlb	0	; select bank0
 13416  1179  00A0               	movwf	??_I2C1_DO_ADDRESS_NACK
 13417  117A  0820               	movf	??_I2C1_DO_ADDRESS_NACK,w
 13418  117B  00FA               	movwf	I2C1_CallbackReturnReset@funPtr
 13419  117C  3004               	movlw	4
 13420  117D  3EA0               	addlw	(low (_I2C1_Status| (0+256)))& (0+255)
 13421  117E  0086               	movwf	6
 13422  117F  3001               	movlw	1	; select bank3/4
 13423  1180  0087               	movwf	7
 13424  1181  3F41               	moviw [1]fsr1
 13425  1182  008A               	movwf	10
 13426  1183  3F40               	moviw [0]fsr1
 13427  1184  000A               	callw
 13428  1185  3191               	pagesel	$
 13429  1186  0020               	movlb	0	; select bank0
 13430  1187  00A1               	movwf	??_I2C1_DO_ADDRESS_NACK+1
 13431  1188  01A2               	clrf	??_I2C1_DO_ADDRESS_NACK+2
 13432                           
 13433                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13434                           ; Switch size 1, requested type "simple"
 13435                           ; Number of cases is 1, Range of values is 0 to 0
 13436                           ; switch strategies available:
 13437                           ; Name         Instructions Cycles
 13438                           ; simple_byte            4     3 (average)
 13439                           ; direct_byte            8     6 (fixed)
 13440                           ; jumptable            260     6 (fixed)
 13441                           ;	Chosen strategy is simple_byte
 13442  1189  0822               	movf	??_I2C1_DO_ADDRESS_NACK+2,w
 13443  118A  3A00               	xorlw	0	; case 0
 13444  118B  1903               	skipnz
 13445  118C  298E               	goto	l6940
 13446  118D  2974               	goto	l4234
 13447  118E                     l6940:	
 13448                           
 13449                           ; Switch size 1, requested type "simple"
 13450                           ; Number of cases is 2, Range of values is 2 to 3
 13451                           ; switch strategies available:
 13452                           ; Name         Instructions Cycles
 13453                           ; simple_byte            7     4 (average)
 13454                           ; direct_byte           13     9 (fixed)
 13455                           ; jumptable            263     9 (fixed)
 13456                           ;	Chosen strategy is simple_byte
 13457  118E  0821               	movf	??_I2C1_DO_ADDRESS_NACK+1,w
 13458  118F  3A02               	xorlw	2	; case 2
 13459  1190  1903               	skipnz
 13460  1191  2971               	goto	l4230
 13461  1192  3A01               	xorlw	1	; case 3
 13462  1193  1903               	skipnz
 13463  1194  2971               	goto	l4230
 13464  1195  2974               	goto	l4234
 13465  1196  0008               	return
 13466  1197                     __end_of_I2C1_DO_ADDRESS_NACK:	
 13467                           
 13468                           	psect	text44
 13469  1E10                     __ptext44:	
 13470 ;; *************** function _I2C1_DO_RESET *****************
 13471 ;; Defined at:
 13472 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 13473 ;; Parameters:    Size  Location     Type
 13474 ;;		None
 13475 ;; Auto vars:     Size  Location     Type
 13476 ;;		None
 13477 ;; Return value:  Size  Location     Type
 13478 ;;                  1    wreg      enum E7150
 13479 ;; Registers used:
 13480 ;;		wreg, status,2
 13481 ;; Tracked objects:
 13482 ;;		On entry : 0/0
 13483 ;;		On exit  : 0/0
 13484 ;;		Unchanged: 0/0
 13485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13490 ;;Total ram usage:        0 bytes
 13491 ;; Hardware stack levels used:    1
 13492 ;; Hardware stack levels required when called:    4
 13493 ;; This function calls:
 13494 ;;		Nothing
 13495 ;; This function is called by:
 13496 ;;		_I2C1_MasterFsm
 13497 ;; This function uses a non-reentrant model
 13498 ;;
 13499                           
 13500                           
 13501                           ;psect for function _I2C1_DO_RESET
 13502  1E10                     _I2C1_DO_RESET:	
 13503                           
 13504                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 13505                           
 13506                           ;incstack = 0
 13507                           ; Regs used in _I2C1_DO_RESET: [wreg+status,2]
 13508  1E10  0023               	movlb	3	; select bank3
 13509  1E11  10BC               	bcf	(_I2C1_Status^(0+384)+28),1
 13510                           
 13511                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 13512  1E12  01BB               	clrf	(_I2C1_Status^(0+384)+27)
 13513                           
 13514                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 13515  1E13  300E               	movlw	14
 13516  1E14  0008               	return
 13517  1E15                     __end_of_I2C1_DO_RESET:	
 13518                           
 13519                           	psect	text45
 13520  1DFA                     __ptext45:	
 13521 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 13522 ;; Defined at:
 13523 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 13524 ;; Parameters:    Size  Location     Type
 13525 ;;		None
 13526 ;; Auto vars:     Size  Location     Type
 13527 ;;		None
 13528 ;; Return value:  Size  Location     Type
 13529 ;;                  1    wreg      enum E7150
 13530 ;; Registers used:
 13531 ;;		wreg, status,2, status,0, pclath, cstack
 13532 ;; Tracked objects:
 13533 ;;		On entry : 0/0
 13534 ;;		On exit  : 0/0
 13535 ;;		Unchanged: 0/0
 13536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13541 ;;Total ram usage:        0 bytes
 13542 ;; Hardware stack levels used:    1
 13543 ;; Hardware stack levels required when called:    5
 13544 ;; This function calls:
 13545 ;;		_I2C1_MasterSendNack
 13546 ;; This function is called by:
 13547 ;;		_I2C1_DO_RX
 13548 ;;		_I2C1_MasterFsm
 13549 ;; This function uses a non-reentrant model
 13550 ;;
 13551                           
 13552                           
 13553                           ;psect for function _I2C1_DO_RX_NACK_RESTART
 13554  1DFA                     _I2C1_DO_RX_NACK_RESTART:	
 13555                           
 13556                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 13557                           
 13558                           ;incstack = 0
 13559                           ; Regs used in _I2C1_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 13560  1DFA  319D  25DA         	fcall	_I2C1_MasterSendNack
 13561                           
 13562                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 13563  1DFC  3009               	movlw	9
 13564  1DFD  0008               	return
 13565  1DFE                     __end_of_I2C1_DO_RX_NACK_RESTART:	
 13566                           
 13567                           	psect	text46
 13568  1DF6                     __ptext46:	
 13569 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 13570 ;; Defined at:
 13571 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 13572 ;; Parameters:    Size  Location     Type
 13573 ;;		None
 13574 ;; Auto vars:     Size  Location     Type
 13575 ;;		None
 13576 ;; Return value:  Size  Location     Type
 13577 ;;                  1    wreg      enum E7150
 13578 ;; Registers used:
 13579 ;;		wreg, status,2, status,0, pclath, cstack
 13580 ;; Tracked objects:
 13581 ;;		On entry : 0/0
 13582 ;;		On exit  : 0/0
 13583 ;;		Unchanged: 0/0
 13584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13589 ;;Total ram usage:        0 bytes
 13590 ;; Hardware stack levels used:    1
 13591 ;; Hardware stack levels required when called:    5
 13592 ;; This function calls:
 13593 ;;		_I2C1_MasterSendNack
 13594 ;; This function is called by:
 13595 ;;		_I2C1_DO_RX
 13596 ;;		_I2C1_MasterFsm
 13597 ;; This function uses a non-reentrant model
 13598 ;;
 13599                           
 13600                           
 13601                           ;psect for function _I2C1_DO_RX_NACK_STOP
 13602  1DF6                     _I2C1_DO_RX_NACK_STOP:	
 13603                           
 13604                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 13605                           
 13606                           ;incstack = 0
 13607                           ; Regs used in _I2C1_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 13608  1DF6  319D  25DA         	fcall	_I2C1_MasterSendNack
 13609                           
 13610                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 13611  1DF8  300A               	movlw	10
 13612  1DF9  0008               	return
 13613  1DFA                     __end_of_I2C1_DO_RX_NACK_STOP:	
 13614                           
 13615                           	psect	text47
 13616  1DF2                     __ptext47:	
 13617 ;; *************** function _I2C1_DO_RX_ACK *****************
 13618 ;; Defined at:
 13619 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 13620 ;; Parameters:    Size  Location     Type
 13621 ;;		None
 13622 ;; Auto vars:     Size  Location     Type
 13623 ;;		None
 13624 ;; Return value:  Size  Location     Type
 13625 ;;                  1    wreg      enum E7150
 13626 ;; Registers used:
 13627 ;;		wreg, status,2, status,0, pclath, cstack
 13628 ;; Tracked objects:
 13629 ;;		On entry : 0/0
 13630 ;;		On exit  : 0/0
 13631 ;;		Unchanged: 0/0
 13632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13637 ;;Total ram usage:        0 bytes
 13638 ;; Hardware stack levels used:    1
 13639 ;; Hardware stack levels required when called:    5
 13640 ;; This function calls:
 13641 ;;		_I2C1_MasterSendAck
 13642 ;; This function is called by:
 13643 ;;		_I2C1_MasterFsm
 13644 ;; This function uses a non-reentrant model
 13645 ;;
 13646                           
 13647                           
 13648                           ;psect for function _I2C1_DO_RX_ACK
 13649  1DF2                     _I2C1_DO_RX_ACK:	
 13650                           
 13651                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 13652                           
 13653                           ;incstack = 0
 13654                           ; Regs used in _I2C1_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
 13655  1DF2  319D  25DE         	fcall	_I2C1_MasterSendAck
 13656                           
 13657                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 13658  1DF4  3005               	movlw	5
 13659  1DF5  0008               	return
 13660  1DF6                     __end_of_I2C1_DO_RX_ACK:	
 13661                           
 13662                           	psect	text48
 13663  1DEE                     __ptext48:	
 13664 ;; *************** function _I2C1_DO_SEND_STOP *****************
 13665 ;; Defined at:
 13666 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 13667 ;; Parameters:    Size  Location     Type
 13668 ;;		None
 13669 ;; Auto vars:     Size  Location     Type
 13670 ;;		None
 13671 ;; Return value:  Size  Location     Type
 13672 ;;                  1    wreg      enum E7150
 13673 ;; Registers used:
 13674 ;;		wreg, status,2, status,0, pclath, cstack
 13675 ;; Tracked objects:
 13676 ;;		On entry : 0/0
 13677 ;;		On exit  : 0/0
 13678 ;;		Unchanged: 0/0
 13679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13684 ;;Total ram usage:        0 bytes
 13685 ;; Hardware stack levels used:    1
 13686 ;; Hardware stack levels required when called:    5
 13687 ;; This function calls:
 13688 ;;		_I2C1_MasterStop
 13689 ;; This function is called by:
 13690 ;;		_I2C1_DO_TX
 13691 ;;		_I2C1_DO_TX_EMPTY
 13692 ;;		_I2C1_DO_ADDRESS_NACK
 13693 ;;		_I2C1_MasterFsm
 13694 ;; This function uses a non-reentrant model
 13695 ;;
 13696                           
 13697                           
 13698                           ;psect for function _I2C1_DO_SEND_STOP
 13699  1DEE                     _I2C1_DO_SEND_STOP:	
 13700                           
 13701                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 13702                           
 13703                           ;incstack = 0
 13704                           ; Regs used in _I2C1_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 13705  1DEE  319D  25C3         	fcall	_I2C1_MasterStop
 13706                           
 13707                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 13708  1DF0  3000               	movlw	0
 13709  1DF1  0008               	return
 13710  1DF2                     __end_of_I2C1_DO_SEND_STOP:	
 13711                           
 13712                           	psect	text49
 13713  1DEA                     __ptext49:	
 13714 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 13715 ;; Defined at:
 13716 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 13717 ;; Parameters:    Size  Location     Type
 13718 ;;		None
 13719 ;; Auto vars:     Size  Location     Type
 13720 ;;		None
 13721 ;; Return value:  Size  Location     Type
 13722 ;;                  1    wreg      enum E7150
 13723 ;; Registers used:
 13724 ;;		wreg, status,2, status,0, pclath, cstack
 13725 ;; Tracked objects:
 13726 ;;		On entry : 0/0
 13727 ;;		On exit  : 0/0
 13728 ;;		Unchanged: 0/0
 13729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13734 ;;Total ram usage:        0 bytes
 13735 ;; Hardware stack levels used:    1
 13736 ;; Hardware stack levels required when called:    5
 13737 ;; This function calls:
 13738 ;;		_I2C1_MasterEnableRestart
 13739 ;; This function is called by:
 13740 ;;		_I2C1_DO_TX_EMPTY
 13741 ;;		_I2C1_DO_ADDRESS_NACK
 13742 ;;		_I2C1_MasterFsm
 13743 ;; This function uses a non-reentrant model
 13744 ;;
 13745                           
 13746                           
 13747                           ;psect for function _I2C1_DO_SEND_RESTART
 13748  1DEA                     _I2C1_DO_SEND_RESTART:	
 13749                           
 13750                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 13751                           
 13752                           ;incstack = 0
 13753                           ; Regs used in _I2C1_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 13754  1DEA  319D  25C0         	fcall	_I2C1_MasterEnableRestart
 13755                           
 13756                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 13757  1DEC  3001               	movlw	1
 13758  1DED  0008               	return
 13759  1DEE                     __end_of_I2C1_DO_SEND_RESTART:	
 13760                           
 13761                           	psect	text50
 13762  1DE6                     __ptext50:	
 13763 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 13764 ;; Defined at:
 13765 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 13766 ;; Parameters:    Size  Location     Type
 13767 ;;		None
 13768 ;; Auto vars:     Size  Location     Type
 13769 ;;		None
 13770 ;; Return value:  Size  Location     Type
 13771 ;;                  1    wreg      enum E7150
 13772 ;; Registers used:
 13773 ;;		wreg, status,2, status,0, pclath, cstack
 13774 ;; Tracked objects:
 13775 ;;		On entry : 0/0
 13776 ;;		On exit  : 0/0
 13777 ;;		Unchanged: 0/0
 13778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13783 ;;Total ram usage:        0 bytes
 13784 ;; Hardware stack levels used:    1
 13785 ;; Hardware stack levels required when called:    5
 13786 ;; This function calls:
 13787 ;;		_I2C1_MasterEnableRestart
 13788 ;; This function is called by:
 13789 ;;		_I2C1_DO_TX
 13790 ;;		_I2C1_MasterFsm
 13791 ;; This function uses a non-reentrant model
 13792 ;;
 13793                           
 13794                           
 13795                           ;psect for function _I2C1_DO_SEND_RESTART_WRITE
 13796  1DE6                     _I2C1_DO_SEND_RESTART_WRITE:	
 13797                           
 13798                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 13799                           
 13800                           ;incstack = 0
 13801                           ; Regs used in _I2C1_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 13802  1DE6  319D  25C0         	fcall	_I2C1_MasterEnableRestart
 13803                           
 13804                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 13805  1DE8  3002               	movlw	2
 13806  1DE9  0008               	return
 13807  1DEA                     __end_of_I2C1_DO_SEND_RESTART_WRITE:	
 13808                           
 13809                           	psect	text51
 13810  1DE2                     __ptext51:	
 13811 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 13812 ;; Defined at:
 13813 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 13814 ;; Parameters:    Size  Location     Type
 13815 ;;		None
 13816 ;; Auto vars:     Size  Location     Type
 13817 ;;		None
 13818 ;; Return value:  Size  Location     Type
 13819 ;;                  1    wreg      enum E7150
 13820 ;; Registers used:
 13821 ;;		wreg, status,2, status,0, pclath, cstack
 13822 ;; Tracked objects:
 13823 ;;		On entry : 0/0
 13824 ;;		On exit  : 0/0
 13825 ;;		Unchanged: 0/0
 13826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13831 ;;Total ram usage:        0 bytes
 13832 ;; Hardware stack levels used:    1
 13833 ;; Hardware stack levels required when called:    5
 13834 ;; This function calls:
 13835 ;;		_I2C1_MasterEnableRestart
 13836 ;; This function is called by:
 13837 ;;		_I2C1_DO_TX
 13838 ;;		_I2C1_MasterFsm
 13839 ;; This function uses a non-reentrant model
 13840 ;;
 13841                           
 13842                           
 13843                           ;psect for function _I2C1_DO_SEND_RESTART_READ
 13844  1DE2                     _I2C1_DO_SEND_RESTART_READ:	
 13845                           
 13846                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 13847                           
 13848                           ;incstack = 0
 13849                           ; Regs used in _I2C1_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 13850  1DE2  319D  25C0         	fcall	_I2C1_MasterEnableRestart
 13851                           
 13852                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 13853  1DE4  3001               	movlw	1
 13854  1DE5  0008               	return
 13855  1DE6                     __end_of_I2C1_DO_SEND_RESTART_READ:	
 13856                           
 13857                           	psect	text52
 13858  1E3E                     __ptext52:	
 13859 ;; *************** function _I2C1_DO_RCEN *****************
 13860 ;; Defined at:
 13861 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 13862 ;; Parameters:    Size  Location     Type
 13863 ;;		None
 13864 ;; Auto vars:     Size  Location     Type
 13865 ;;		None
 13866 ;; Return value:  Size  Location     Type
 13867 ;;                  1    wreg      enum E7150
 13868 ;; Registers used:
 13869 ;;		wreg, status,2, status,0, pclath, cstack
 13870 ;; Tracked objects:
 13871 ;;		On entry : 0/0
 13872 ;;		On exit  : 0/0
 13873 ;;		Unchanged: 0/0
 13874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13879 ;;Total ram usage:        0 bytes
 13880 ;; Hardware stack levels used:    1
 13881 ;; Hardware stack levels required when called:    5
 13882 ;; This function calls:
 13883 ;;		_I2C1_MasterStartRx
 13884 ;; This function is called by:
 13885 ;;		_I2C1_MasterFsm
 13886 ;; This function uses a non-reentrant model
 13887 ;;
 13888                           
 13889                           
 13890                           ;psect for function _I2C1_DO_RCEN
 13891  1E3E                     _I2C1_DO_RCEN:	
 13892                           
 13893                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 13894                           
 13895                           ;incstack = 0
 13896                           ; Regs used in _I2C1_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
 13897  1E3E  0023               	movlb	3	; select bank3
 13898  1E3F  103C               	bcf	(_I2C1_Status^(0+384)+28),0
 13899                           
 13900                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 13901  1E40  319D  25C6         	fcall	_I2C1_MasterStartRx
 13902                           
 13903                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 13904  1E42  3004               	movlw	4
 13905  1E43  0008               	return
 13906  1E44                     __end_of_I2C1_DO_RCEN:	
 13907                           
 13908                           	psect	text53
 13909  1364                     __ptext53:	
 13910 ;; *************** function _I2C1_DO_RX *****************
 13911 ;; Defined at:
 13912 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 13913 ;; Parameters:    Size  Location     Type
 13914 ;;		None
 13915 ;; Auto vars:     Size  Location     Type
 13916 ;;		None
 13917 ;; Return value:  Size  Location     Type
 13918 ;;                  1    wreg      enum E7150
 13919 ;; Registers used:
 13920 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13921 ;; Tracked objects:
 13922 ;;		On entry : 0/0
 13923 ;;		On exit  : 0/0
 13924 ;;		Unchanged: 0/0
 13925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13928 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13929 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13930 ;;Total ram usage:        3 bytes
 13931 ;; Hardware stack levels used:    1
 13932 ;; Hardware stack levels required when called:    7
 13933 ;; This function calls:
 13934 ;;		Absolute function
 13935 ;;		_I2C1_CallbackReturnReset
 13936 ;;		_I2C1_CallbackReturnStop
 13937 ;;		_I2C1_DO_RX_NACK_RESTART
 13938 ;;		_I2C1_DO_RX_NACK_STOP
 13939 ;;		_I2C1_MasterGetRxData
 13940 ;;		_I2C1_MasterSendAck
 13941 ;;		_rd1RegCompleteHandler
 13942 ;;		_rd2RegCompleteHandler
 13943 ;;		_rdBlkRegCompleteHandler
 13944 ;;		_wr1RegCompleteHandler
 13945 ;;		_wr2RegCompleteHandler
 13946 ;; This function is called by:
 13947 ;;		_I2C1_MasterFsm
 13948 ;; This function uses a non-reentrant model
 13949 ;;
 13950                           
 13951                           
 13952                           ;psect for function _I2C1_DO_RX
 13953  1364                     _I2C1_DO_RX:	
 13954                           
 13955                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 13956                           
 13957                           ;incstack = 0
 13958                           ; Regs used in _I2C1_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13959  1364  319D  25C9  3193   	fcall	_I2C1_MasterGetRxData
 13960  1367  0020               	movlb	0	; select bank0
 13961  1368  00A0               	movwf	??_I2C1_DO_RX
 13962  1369  0023               	movlb	3	; select bank3
 13963  136A  0837               	movf	(low ((_I2C1_Status| (0+256)+23)))^(0+128),w
 13964  136B  0086               	movwf	6
 13965  136C  0187               	clrf	7
 13966  136D  0020               	movlb	0	; select bank0
 13967  136E  0820               	movf	??_I2C1_DO_RX,w
 13968  136F  0081               	movwf	1
 13969  1370  3001               	movlw	1
 13970  1371  00A0               	movwf	??_I2C1_DO_RX
 13971  1372  0820               	movf	??_I2C1_DO_RX,w
 13972  1373  0023               	movlb	3	; select bank3
 13973  1374  07B7               	addwf	(low ((_I2C1_Status| (0+256)+23)))^(0+128),f
 13974                           
 13975                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 13976  1375  3001               	movlw	1
 13977  1376  02B8               	subwf	(_I2C1_Status^(0+384)+24),f
 13978  1377  3000               	movlw	0
 13979  1378  3BB9               	subwfb	((_I2C1_Status+1)^(0+384)+24),f
 13980  1379  0838               	movf	(_I2C1_Status^(0+384)+24),w
 13981  137A  0439               	iorwf	((_I2C1_Status+1)^(0+384)+24),w
 13982  137B  1903               	btfsc	3,2
 13983  137C  2B81               	goto	l623
 13984                           
 13985                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 13986  137D  319D  25DE         	fcall	_I2C1_MasterSendAck
 13987                           
 13988                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 13989  137F  3005               	movlw	5
 13990  1380  0008               	return
 13991  1381                     l623:	
 13992                           ;mcc_generated_files/i2c1_master.c: 386:     else
 13993                           
 13994                           
 13995                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 13996  1381  15BC               	bsf	(_I2C1_Status^(0+384)+28),3
 13997                           
 13998                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 13999  1382  2B89               	goto	l4174
 14000  1383                     l4164:	
 14001                           
 14002                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 14003  1383  319D  25FA         	fcall	_I2C1_DO_RX_NACK_RESTART
 14004  1385  0008               	return
 14005  1386                     l4168:	
 14006                           
 14007                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 14008  1386  319D  25F6         	fcall	_I2C1_DO_RX_NACK_STOP
 14009  1388  0008               	return
 14010  1389                     l4174:	
 14011  1389  082C               	movf	(low ((_I2C1_Status| (0+256)+12)))^(0+128),w
 14012  138A  0020               	movlb	0	; select bank0
 14013  138B  00A0               	movwf	??_I2C1_DO_RX
 14014  138C  0820               	movf	??_I2C1_DO_RX,w
 14015  138D  00FA               	movwf	I2C1_CallbackReturnReset@funPtr
 14016  138E  0023               	movlb	3	; select bank3
 14017  138F  0821               	movf	(_I2C1_Status+1)^(0+384),w
 14018  1390  008A               	movwf	10
 14019  1391  0820               	movf	_I2C1_Status^(0+384),w
 14020  1392  000A               	callw
 14021  1393  3193               	pagesel	$
 14022  1394  0020               	movlb	0	; select bank0
 14023  1395  00A1               	movwf	??_I2C1_DO_RX+1
 14024  1396  01A2               	clrf	??_I2C1_DO_RX+2
 14025                           
 14026                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14027                           ; Switch size 1, requested type "simple"
 14028                           ; Number of cases is 1, Range of values is 0 to 0
 14029                           ; switch strategies available:
 14030                           ; Name         Instructions Cycles
 14031                           ; simple_byte            4     3 (average)
 14032                           ; direct_byte            8     6 (fixed)
 14033                           ; jumptable            260     6 (fixed)
 14034                           ;	Chosen strategy is simple_byte
 14035  1397  0822               	movf	??_I2C1_DO_RX+2,w
 14036  1398  3A00               	xorlw	0	; case 0
 14037  1399  1903               	skipnz
 14038  139A  2B9C               	goto	l6942
 14039  139B  2B86               	goto	l4168
 14040  139C                     l6942:	
 14041                           
 14042                           ; Switch size 1, requested type "simple"
 14043                           ; Number of cases is 4, Range of values is 1 to 4
 14044                           ; switch strategies available:
 14045                           ; Name         Instructions Cycles
 14046                           ; simple_byte           13     7 (average)
 14047                           ; direct_byte           17     9 (fixed)
 14048                           ; jumptable            263     9 (fixed)
 14049                           ;	Chosen strategy is simple_byte
 14050  139C  0821               	movf	??_I2C1_DO_RX+1,w
 14051  139D  3A01               	xorlw	1	; case 1
 14052  139E  1903               	skipnz
 14053  139F  2B86               	goto	l4168
 14054  13A0  3A03               	xorlw	3	; case 2
 14055  13A1  1903               	skipnz
 14056  13A2  2B83               	goto	l4164
 14057  13A3  3A01               	xorlw	1	; case 3
 14058  13A4  1903               	skipnz
 14059  13A5  2B83               	goto	l4164
 14060  13A6  3A07               	xorlw	7	; case 4
 14061  13A7  1903               	skipnz
 14062  13A8  2B86               	goto	l4168
 14063  13A9  2B86               	goto	l4168
 14064  13AA  0008               	return
 14065  13AB                     __end_of_I2C1_DO_RX:	
 14066                           
 14067                           	psect	text54
 14068  149A                     __ptext54:	
 14069 ;; *************** function _I2C1_DO_TX *****************
 14070 ;; Defined at:
 14071 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 14072 ;; Parameters:    Size  Location     Type
 14073 ;;		None
 14074 ;; Auto vars:     Size  Location     Type
 14075 ;;		None
 14076 ;; Return value:  Size  Location     Type
 14077 ;;                  1    wreg      enum E7150
 14078 ;; Registers used:
 14079 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14080 ;; Tracked objects:
 14081 ;;		On entry : 0/0
 14082 ;;		On exit  : 0/0
 14083 ;;		Unchanged: 0/0
 14084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14087 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14088 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14089 ;;Total ram usage:        3 bytes
 14090 ;; Hardware stack levels used:    1
 14091 ;; Hardware stack levels required when called:    7
 14092 ;; This function calls:
 14093 ;;		Absolute function
 14094 ;;		_I2C1_CallbackReturnReset
 14095 ;;		_I2C1_CallbackReturnStop
 14096 ;;		_I2C1_DO_SEND_RESTART_READ
 14097 ;;		_I2C1_DO_SEND_RESTART_WRITE
 14098 ;;		_I2C1_DO_SEND_STOP
 14099 ;;		_I2C1_MasterIsNack
 14100 ;;		_I2C1_MasterSendTxData
 14101 ;;		_rd1RegCompleteHandler
 14102 ;;		_rd2RegCompleteHandler
 14103 ;;		_rdBlkRegCompleteHandler
 14104 ;;		_wr1RegCompleteHandler
 14105 ;;		_wr2RegCompleteHandler
 14106 ;; This function is called by:
 14107 ;;		_I2C1_MasterFsm
 14108 ;; This function uses a non-reentrant model
 14109 ;;
 14110                           
 14111                           
 14112                           ;psect for function _I2C1_DO_TX
 14113  149A                     _I2C1_DO_TX:	
 14114                           
 14115                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 14116                           
 14117                           ;incstack = 0
 14118                           ; Regs used in _I2C1_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14119  149A  319E  2638  3194   	fcall	_I2C1_MasterIsNack
 14120  149D  3A00               	xorlw	0
 14121  149E  1D03               	btfss	3,2
 14122  149F  2CAA               	goto	l4134
 14123  14A0  2CD0               	goto	l607
 14124  14A1                     l4120:	
 14125                           
 14126                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 14127  14A1  319D  25E2         	fcall	_I2C1_DO_SEND_RESTART_READ
 14128  14A3  0008               	return
 14129  14A4                     l4124:	
 14130                           
 14131                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 14132  14A4  319D  25E6         	fcall	_I2C1_DO_SEND_RESTART_WRITE
 14133  14A6  0008               	return
 14134  14A7                     l4128:	
 14135                           
 14136                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 14137  14A7  319D  25EE         	fcall	_I2C1_DO_SEND_STOP
 14138  14A9  0008               	return
 14139  14AA                     l4134:	
 14140  14AA  0023               	movlb	3	; select bank3
 14141  14AB  082F               	movf	(low ((_I2C1_Status| (0+256)+15)))^(0+128),w
 14142  14AC  0020               	movlb	0	; select bank0
 14143  14AD  00A0               	movwf	??_I2C1_DO_TX
 14144  14AE  0820               	movf	??_I2C1_DO_TX,w
 14145  14AF  00FA               	movwf	I2C1_CallbackReturnReset@funPtr
 14146  14B0  3006               	movlw	6
 14147  14B1  3EA0               	addlw	(low (_I2C1_Status| (0+256)))& (0+255)
 14148  14B2  0086               	movwf	6
 14149  14B3  3001               	movlw	1	; select bank3/4
 14150  14B4  0087               	movwf	7
 14151  14B5  3F41               	moviw [1]fsr1
 14152  14B6  008A               	movwf	10
 14153  14B7  3F40               	moviw [0]fsr1
 14154  14B8  000A               	callw
 14155  14B9  3194               	pagesel	$
 14156  14BA  0020               	movlb	0	; select bank0
 14157  14BB  00A1               	movwf	??_I2C1_DO_TX+1
 14158  14BC  01A2               	clrf	??_I2C1_DO_TX+2
 14159                           
 14160                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14161                           ; Switch size 1, requested type "simple"
 14162                           ; Number of cases is 1, Range of values is 0 to 0
 14163                           ; switch strategies available:
 14164                           ; Name         Instructions Cycles
 14165                           ; simple_byte            4     3 (average)
 14166                           ; direct_byte            8     6 (fixed)
 14167                           ; jumptable            260     6 (fixed)
 14168                           ;	Chosen strategy is simple_byte
 14169  14BD  0822               	movf	??_I2C1_DO_TX+2,w
 14170  14BE  3A00               	xorlw	0	; case 0
 14171  14BF  1903               	skipnz
 14172  14C0  2CC2               	goto	l6944
 14173  14C1  2CA7               	goto	l4128
 14174  14C2                     l6944:	
 14175                           
 14176                           ; Switch size 1, requested type "simple"
 14177                           ; Number of cases is 4, Range of values is 1 to 4
 14178                           ; switch strategies available:
 14179                           ; Name         Instructions Cycles
 14180                           ; simple_byte           13     7 (average)
 14181                           ; direct_byte           17     9 (fixed)
 14182                           ; jumptable            263     9 (fixed)
 14183                           ;	Chosen strategy is simple_byte
 14184  14C2  0821               	movf	??_I2C1_DO_TX+1,w
 14185  14C3  3A01               	xorlw	1	; case 1
 14186  14C4  1903               	skipnz
 14187  14C5  2CA7               	goto	l4128
 14188  14C6  3A03               	xorlw	3	; case 2
 14189  14C7  1903               	skipnz
 14190  14C8  2CA1               	goto	l4120
 14191  14C9  3A01               	xorlw	1	; case 3
 14192  14CA  1903               	skipnz
 14193  14CB  2CA4               	goto	l4124
 14194  14CC  3A07               	xorlw	7	; case 4
 14195  14CD  1903               	skipnz
 14196  14CE  2CA7               	goto	l4128
 14197  14CF  2CA7               	goto	l4128
 14198  14D0                     l607:	
 14199                           ;mcc_generated_files/i2c1_master.c: 370:     else
 14200                           
 14201                           
 14202                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 14203  14D0  0023               	movlb	3	; select bank3
 14204  14D1  103C               	bcf	(_I2C1_Status^(0+384)+28),0
 14205                           
 14206                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 14207  14D2  3017               	movlw	23
 14208  14D3  3EA0               	addlw	(low (_I2C1_Status| (0+256)))& (0+255)
 14209  14D4  0086               	movwf	6
 14210  14D5  3001               	movlw	1	; select bank3/4
 14211  14D6  0087               	movwf	7
 14212  14D7  3F40               	moviw [0]fsr1
 14213  14D8  0084               	movwf	4
 14214  14D9  0185               	clrf	5
 14215  14DA  0A81               	incf	1,f
 14216  14DB  0800               	movf	0,w
 14217  14DC  319E  2606  3194   	fcall	_I2C1_MasterSendTxData
 14218                           
 14219                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 14220  14DF  3001               	movlw	1
 14221  14E0  0023               	movlb	3	; select bank3
 14222  14E1  02B8               	subwf	(_I2C1_Status^(0+384)+24),f
 14223  14E2  3000               	movlw	0
 14224  14E3  3BB9               	subwfb	((_I2C1_Status+1)^(0+384)+24),f
 14225  14E4  0838               	movf	(_I2C1_Status^(0+384)+24),w
 14226  14E5  0439               	iorwf	((_I2C1_Status+1)^(0+384)+24),w
 14227  14E6  1D03               	btfss	3,2
 14228  14E7  2CEA               	goto	l4142
 14229  14E8  3006               	movlw	6
 14230  14E9  0008               	return
 14231  14EA                     l4142:	
 14232  14EA  3003               	movlw	3
 14233  14EB  0008               	return
 14234  14EC                     __end_of_I2C1_DO_TX:	
 14235                           
 14236                           	psect	text55
 14237  1E50                     __ptext55:	
 14238 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 14239 ;; Defined at:
 14240 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 14241 ;; Parameters:    Size  Location     Type
 14242 ;;		None
 14243 ;; Auto vars:     Size  Location     Type
 14244 ;;		None
 14245 ;; Return value:  Size  Location     Type
 14246 ;;                  1    wreg      enum E7150
 14247 ;; Registers used:
 14248 ;;		wreg, status,2, status,0, pclath, cstack
 14249 ;; Tracked objects:
 14250 ;;		On entry : 0/0
 14251 ;;		On exit  : 0/0
 14252 ;;		Unchanged: 0/0
 14253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14258 ;;Total ram usage:        0 bytes
 14259 ;; Hardware stack levels used:    1
 14260 ;; Hardware stack levels required when called:    5
 14261 ;; This function calls:
 14262 ;;		_I2C1_MasterSendTxData
 14263 ;; This function is called by:
 14264 ;;		_I2C1_MasterFsm
 14265 ;; This function uses a non-reentrant model
 14266 ;;
 14267                           
 14268                           
 14269                           ;psect for function _I2C1_DO_SEND_ADR_WRITE
 14270  1E50                     _I2C1_DO_SEND_ADR_WRITE:	
 14271                           
 14272                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 14273                           
 14274                           ;incstack = 0
 14275                           ; Regs used in _I2C1_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 14276  1E50  0023               	movlb	3	; select bank3
 14277  1E51  143C               	bsf	(_I2C1_Status^(0+384)+28),0
 14278                           
 14279                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData(I2C1_Status.address <
      +                          < 1);
 14280  1E52  3536               	lslf	(_I2C1_Status^(0+384)+22),w
 14281  1E53  319E  2606         	fcall	_I2C1_MasterSendTxData
 14282                           
 14283                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 14284  1E55  3003               	movlw	3
 14285  1E56  0008               	return
 14286  1E57                     __end_of_I2C1_DO_SEND_ADR_WRITE:	
 14287                           
 14288                           	psect	text56
 14289  1E67                     __ptext56:	
 14290 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 14291 ;; Defined at:
 14292 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 14293 ;; Parameters:    Size  Location     Type
 14294 ;;		None
 14295 ;; Auto vars:     Size  Location     Type
 14296 ;;		None
 14297 ;; Return value:  Size  Location     Type
 14298 ;;                  1    wreg      enum E7150
 14299 ;; Registers used:
 14300 ;;		wreg, status,2, status,0, pclath, cstack
 14301 ;; Tracked objects:
 14302 ;;		On entry : 0/0
 14303 ;;		On exit  : 0/0
 14304 ;;		Unchanged: 0/0
 14305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14310 ;;Total ram usage:        0 bytes
 14311 ;; Hardware stack levels used:    1
 14312 ;; Hardware stack levels required when called:    5
 14313 ;; This function calls:
 14314 ;;		_I2C1_MasterSendTxData
 14315 ;; This function is called by:
 14316 ;;		_I2C1_MasterFsm
 14317 ;; This function uses a non-reentrant model
 14318 ;;
 14319                           
 14320                           
 14321                           ;psect for function _I2C1_DO_SEND_ADR_READ
 14322  1E67                     _I2C1_DO_SEND_ADR_READ:	
 14323                           
 14324                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 14325                           
 14326                           ;incstack = 0
 14327                           ; Regs used in _I2C1_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 14328  1E67  0023               	movlb	3	; select bank3
 14329  1E68  143C               	bsf	(_I2C1_Status^(0+384)+28),0
 14330                           
 14331                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData(I2C1_Status.address <
      +                          < 1 | 1);
 14332  1E69  1403               	setc
 14333  1E6A  0D36               	rlf	(_I2C1_Status^(0+384)+22),w
 14334  1E6B  319E  2606         	fcall	_I2C1_MasterSendTxData
 14335                           
 14336                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 14337  1E6D  3005               	movlw	5
 14338  1E6E  0008               	return
 14339  1E6F                     __end_of_I2C1_DO_SEND_ADR_READ:	
 14340                           
 14341                           	psect	text57
 14342  1E0B                     __ptext57:	
 14343 ;; *************** function _I2C1_DO_IDLE *****************
 14344 ;; Defined at:
 14345 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 14346 ;; Parameters:    Size  Location     Type
 14347 ;;		None
 14348 ;; Auto vars:     Size  Location     Type
 14349 ;;		None
 14350 ;; Return value:  Size  Location     Type
 14351 ;;                  1    wreg      enum E7150
 14352 ;; Registers used:
 14353 ;;		wreg, status,2
 14354 ;; Tracked objects:
 14355 ;;		On entry : 0/0
 14356 ;;		On exit  : 0/0
 14357 ;;		Unchanged: 0/0
 14358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14363 ;;Total ram usage:        0 bytes
 14364 ;; Hardware stack levels used:    1
 14365 ;; Hardware stack levels required when called:    4
 14366 ;; This function calls:
 14367 ;;		Nothing
 14368 ;; This function is called by:
 14369 ;;		_I2C1_MasterFsm
 14370 ;; This function uses a non-reentrant model
 14371 ;;
 14372                           
 14373                           
 14374                           ;psect for function _I2C1_DO_IDLE
 14375  1E0B                     _I2C1_DO_IDLE:	
 14376                           
 14377                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 14378                           
 14379                           ;incstack = 0
 14380                           ; Regs used in _I2C1_DO_IDLE: [wreg+status,2]
 14381  1E0B  0023               	movlb	3	; select bank3
 14382  1E0C  10BC               	bcf	(_I2C1_Status^(0+384)+28),1
 14383                           
 14384                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 14385  1E0D  01BB               	clrf	(_I2C1_Status^(0+384)+27)
 14386                           
 14387                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 14388  1E0E  300E               	movlw	14
 14389  1E0F  0008               	return
 14390  1E10                     __end_of_I2C1_DO_IDLE:	
 14391                           
 14392                           	psect	text58
 14393  1139                     __ptext58:	
 14394 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 14395 ;; Defined at:
 14396 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 14397 ;; Parameters:    Size  Location     Type
 14398 ;;		None
 14399 ;; Auto vars:     Size  Location     Type
 14400 ;;		None
 14401 ;; Return value:  Size  Location     Type
 14402 ;;                  1    wreg      enum E7150
 14403 ;; Registers used:
 14404 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14405 ;; Tracked objects:
 14406 ;;		On entry : 0/0
 14407 ;;		On exit  : 0/0
 14408 ;;		Unchanged: 0/0
 14409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14412 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14413 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14414 ;;Total ram usage:        3 bytes
 14415 ;; Hardware stack levels used:    1
 14416 ;; Hardware stack levels required when called:    7
 14417 ;; This function calls:
 14418 ;;		Absolute function
 14419 ;;		_I2C1_CallbackReturnReset
 14420 ;;		_I2C1_CallbackReturnStop
 14421 ;;		_I2C1_DO_SEND_RESTART
 14422 ;;		_I2C1_DO_SEND_STOP
 14423 ;;		_I2C1_MasterSetIrq
 14424 ;;		_rd1RegCompleteHandler
 14425 ;;		_rd2RegCompleteHandler
 14426 ;;		_rdBlkRegCompleteHandler
 14427 ;;		_wr1RegCompleteHandler
 14428 ;;		_wr2RegCompleteHandler
 14429 ;; This function is called by:
 14430 ;;		_I2C1_MasterFsm
 14431 ;; This function uses a non-reentrant model
 14432 ;;
 14433                           
 14434                           
 14435                           ;psect for function _I2C1_DO_TX_EMPTY
 14436  1139                     _I2C1_DO_TX_EMPTY:	
 14437                           
 14438                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 14439                           
 14440                           ;incstack = 0
 14441                           ; Regs used in _I2C1_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14442  1139  0023               	movlb	3	; select bank3
 14443  113A  15BC               	bsf	(_I2C1_Status^(0+384)+28),3
 14444                           
 14445                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 14446  113B  2946               	goto	l4206
 14447  113C                     l4190:	
 14448                           
 14449                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 14450  113C  319D  25EA         	fcall	_I2C1_DO_SEND_RESTART
 14451  113E  0008               	return
 14452  113F                     l4194:	
 14453                           
 14454                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 14455  113F  319D  25CC         	fcall	_I2C1_MasterSetIrq
 14456                           
 14457                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 14458  1141  3003               	movlw	3
 14459  1142  0008               	return
 14460  1143                     l4200:	
 14461                           
 14462                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 14463  1143  319D  25EE         	fcall	_I2C1_DO_SEND_STOP
 14464  1145  0008               	return
 14465  1146                     l4206:	
 14466  1146  082C               	movf	(low ((_I2C1_Status| (0+256)+12)))^(0+128),w
 14467  1147  0020               	movlb	0	; select bank0
 14468  1148  00A0               	movwf	??_I2C1_DO_TX_EMPTY
 14469  1149  0820               	movf	??_I2C1_DO_TX_EMPTY,w
 14470  114A  00FA               	movwf	I2C1_CallbackReturnReset@funPtr
 14471  114B  0023               	movlb	3	; select bank3
 14472  114C  0821               	movf	(_I2C1_Status+1)^(0+384),w
 14473  114D  008A               	movwf	10
 14474  114E  0820               	movf	_I2C1_Status^(0+384),w
 14475  114F  000A               	callw
 14476  1150  3191               	pagesel	$
 14477  1151  0020               	movlb	0	; select bank0
 14478  1152  00A1               	movwf	??_I2C1_DO_TX_EMPTY+1
 14479  1153  01A2               	clrf	??_I2C1_DO_TX_EMPTY+2
 14480                           
 14481                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14482                           ; Switch size 1, requested type "simple"
 14483                           ; Number of cases is 1, Range of values is 0 to 0
 14484                           ; switch strategies available:
 14485                           ; Name         Instructions Cycles
 14486                           ; simple_byte            4     3 (average)
 14487                           ; direct_byte            8     6 (fixed)
 14488                           ; jumptable            260     6 (fixed)
 14489                           ;	Chosen strategy is simple_byte
 14490  1154  0822               	movf	??_I2C1_DO_TX_EMPTY+2,w
 14491  1155  3A00               	xorlw	0	; case 0
 14492  1156  1903               	skipnz
 14493  1157  2959               	goto	l6946
 14494  1158  2943               	goto	l4200
 14495  1159                     l6946:	
 14496                           
 14497                           ; Switch size 1, requested type "simple"
 14498                           ; Number of cases is 4, Range of values is 1 to 4
 14499                           ; switch strategies available:
 14500                           ; Name         Instructions Cycles
 14501                           ; simple_byte           13     7 (average)
 14502                           ; direct_byte           17     9 (fixed)
 14503                           ; jumptable            263     9 (fixed)
 14504                           ;	Chosen strategy is simple_byte
 14505  1159  0821               	movf	??_I2C1_DO_TX_EMPTY+1,w
 14506  115A  3A01               	xorlw	1	; case 1
 14507  115B  1903               	skipnz
 14508  115C  2943               	goto	l4200
 14509  115D  3A03               	xorlw	3	; case 2
 14510  115E  1903               	skipnz
 14511  115F  293C               	goto	l4190
 14512  1160  3A01               	xorlw	1	; case 3
 14513  1161  1903               	skipnz
 14514  1162  293C               	goto	l4190
 14515  1163  3A07               	xorlw	7	; case 4
 14516  1164  1903               	skipnz
 14517  1165  293F               	goto	l4194
 14518  1166  2943               	goto	l4200
 14519  1167  0008               	return
 14520  1168                     __end_of_I2C1_DO_TX_EMPTY:	
 14521                           
 14522                           	psect	text59
 14523  1DCC                     __ptext59:	
 14524 ;; *************** function _I2C1_MasterSetIrq *****************
 14525 ;; Defined at:
 14526 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 14527 ;; Parameters:    Size  Location     Type
 14528 ;;		None
 14529 ;; Auto vars:     Size  Location     Type
 14530 ;;		None
 14531 ;; Return value:  Size  Location     Type
 14532 ;;                  1    wreg      void 
 14533 ;; Registers used:
 14534 ;;		None
 14535 ;; Tracked objects:
 14536 ;;		On entry : 0/0
 14537 ;;		On exit  : 0/0
 14538 ;;		Unchanged: 0/0
 14539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14544 ;;Total ram usage:        0 bytes
 14545 ;; Hardware stack levels used:    1
 14546 ;; Hardware stack levels required when called:    4
 14547 ;; This function calls:
 14548 ;;		Nothing
 14549 ;; This function is called by:
 14550 ;;		_I2C1_DO_TX_EMPTY
 14551 ;; This function uses a non-reentrant model
 14552 ;;
 14553                           
 14554                           
 14555                           ;psect for function _I2C1_MasterSetIrq
 14556  1DCC                     _I2C1_MasterSetIrq:	
 14557                           
 14558                           ;mcc_generated_files/i2c1_master.c: 647:     PIR1bits.SSP1IF = 1;
 14559                           
 14560                           ;incstack = 0
 14561                           ; Regs used in _I2C1_MasterSetIrq: []
 14562  1DCC  0020               	movlb	0	; select bank0
 14563  1DCD  1591               	bsf	17,3	;volatile
 14564  1DCE  0008               	return
 14565  1DCF                     __end_of_I2C1_MasterSetIrq:	
 14566                           
 14567                           	psect	text60
 14568  1E38                     __ptext60:	
 14569 ;; *************** function _I2C1_MasterIsNack *****************
 14570 ;; Defined at:
 14571 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 14572 ;; Parameters:    Size  Location     Type
 14573 ;;		None
 14574 ;; Auto vars:     Size  Location     Type
 14575 ;;		None
 14576 ;; Return value:  Size  Location     Type
 14577 ;;                  1    wreg      _Bool 
 14578 ;; Registers used:
 14579 ;;		wreg, status,2, status,0
 14580 ;; Tracked objects:
 14581 ;;		On entry : 0/0
 14582 ;;		On exit  : 0/0
 14583 ;;		Unchanged: 0/0
 14584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14589 ;;Total ram usage:        0 bytes
 14590 ;; Hardware stack levels used:    1
 14591 ;; Hardware stack levels required when called:    4
 14592 ;; This function calls:
 14593 ;;		Nothing
 14594 ;; This function is called by:
 14595 ;;		_I2C1_MasterFsm
 14596 ;;		_I2C1_DO_TX
 14597 ;; This function uses a non-reentrant model
 14598 ;;
 14599                           
 14600                           
 14601                           ;psect for function _I2C1_MasterIsNack
 14602  1E38                     _I2C1_MasterIsNack:	
 14603                           
 14604                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 14605                           
 14606                           ;incstack = 0
 14607                           ; Regs used in _I2C1_MasterIsNack: [wreg+status,2+status,0]
 14608  1E38  0024               	movlb	4	; select bank4
 14609  1E39  0E16               	swapf	22,w	;volatile
 14610  1E3A  0C89               	rrf	9,f
 14611  1E3B  0C89               	rrf	9,f
 14612  1E3C  3901               	andlw	1
 14613  1E3D  0008               	return
 14614  1E3E                     __end_of_I2C1_MasterIsNack:	
 14615                           
 14616                           	psect	text61
 14617  1E06                     __ptext61:	
 14618 ;; *************** function _I2C1_MasterSendTxData *****************
 14619 ;; Defined at:
 14620 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 14621 ;; Parameters:    Size  Location     Type
 14622 ;;  data            1    wreg     unsigned char 
 14623 ;; Auto vars:     Size  Location     Type
 14624 ;;  data            1    1[COMMON] unsigned char 
 14625 ;; Return value:  Size  Location     Type
 14626 ;;                  1    wreg      void 
 14627 ;; Registers used:
 14628 ;;		wreg
 14629 ;; Tracked objects:
 14630 ;;		On entry : 0/0
 14631 ;;		On exit  : 0/0
 14632 ;;		Unchanged: 0/0
 14633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14635 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14637 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14638 ;;Total ram usage:        1 bytes
 14639 ;; Hardware stack levels used:    1
 14640 ;; Hardware stack levels required when called:    4
 14641 ;; This function calls:
 14642 ;;		Nothing
 14643 ;; This function is called by:
 14644 ;;		_I2C1_DO_SEND_ADR_READ
 14645 ;;		_I2C1_DO_SEND_ADR_WRITE
 14646 ;;		_I2C1_DO_TX
 14647 ;; This function uses a non-reentrant model
 14648 ;;
 14649                           
 14650                           
 14651                           ;psect for function _I2C1_MasterSendTxData
 14652  1E06                     _I2C1_MasterSendTxData:	
 14653                           
 14654                           ;incstack = 0
 14655                           ; Regs used in _I2C1_MasterSendTxData: [wreg]
 14656                           ;I2C1_MasterSendTxData@data stored from wreg
 14657  1E06  00F1               	movwf	I2C1_MasterSendTxData@data
 14658                           
 14659                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 14660  1E07  0871               	movf	I2C1_MasterSendTxData@data,w
 14661  1E08  0024               	movlb	4	; select bank4
 14662  1E09  0091               	movwf	17	;volatile
 14663  1E0A  0008               	return
 14664  1E0B                     __end_of_I2C1_MasterSendTxData:	
 14665                           
 14666                           	psect	text62
 14667  1DDE                     __ptext62:	
 14668 ;; *************** function _I2C1_MasterSendAck *****************
 14669 ;; Defined at:
 14670 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 14671 ;; Parameters:    Size  Location     Type
 14672 ;;		None
 14673 ;; Auto vars:     Size  Location     Type
 14674 ;;		None
 14675 ;; Return value:  Size  Location     Type
 14676 ;;                  1    wreg      void 
 14677 ;; Registers used:
 14678 ;;		None
 14679 ;; Tracked objects:
 14680 ;;		On entry : 0/0
 14681 ;;		On exit  : 0/0
 14682 ;;		Unchanged: 0/0
 14683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14688 ;;Total ram usage:        0 bytes
 14689 ;; Hardware stack levels used:    1
 14690 ;; Hardware stack levels required when called:    4
 14691 ;; This function calls:
 14692 ;;		Nothing
 14693 ;; This function is called by:
 14694 ;;		_I2C1_DO_RX
 14695 ;;		_I2C1_DO_RX_ACK
 14696 ;; This function uses a non-reentrant model
 14697 ;;
 14698                           
 14699                           
 14700                           ;psect for function _I2C1_MasterSendAck
 14701  1DDE                     _I2C1_MasterSendAck:	
 14702                           
 14703                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 14704                           
 14705                           ;incstack = 0
 14706                           ; Regs used in _I2C1_MasterSendAck: []
 14707  1DDE  0024               	movlb	4	; select bank4
 14708  1DDF  1296               	bcf	22,5	;volatile
 14709                           
 14710                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 14711  1DE0  1616               	bsf	22,4	;volatile
 14712  1DE1  0008               	return
 14713  1DE2                     __end_of_I2C1_MasterSendAck:	
 14714                           
 14715                           	psect	text63
 14716  1DC9                     __ptext63:	
 14717 ;; *************** function _I2C1_MasterGetRxData *****************
 14718 ;; Defined at:
 14719 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 14720 ;; Parameters:    Size  Location     Type
 14721 ;;		None
 14722 ;; Auto vars:     Size  Location     Type
 14723 ;;		None
 14724 ;; Return value:  Size  Location     Type
 14725 ;;                  1    wreg      unsigned char 
 14726 ;; Registers used:
 14727 ;;		wreg
 14728 ;; Tracked objects:
 14729 ;;		On entry : 0/0
 14730 ;;		On exit  : 0/0
 14731 ;;		Unchanged: 0/0
 14732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14737 ;;Total ram usage:        0 bytes
 14738 ;; Hardware stack levels used:    1
 14739 ;; Hardware stack levels required when called:    4
 14740 ;; This function calls:
 14741 ;;		Nothing
 14742 ;; This function is called by:
 14743 ;;		_I2C1_DO_RX
 14744 ;; This function uses a non-reentrant model
 14745 ;;
 14746                           
 14747                           
 14748                           ;psect for function _I2C1_MasterGetRxData
 14749  1DC9                     _I2C1_MasterGetRxData:	
 14750                           
 14751                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 14752                           
 14753                           ;incstack = 0
 14754                           ; Regs used in _I2C1_MasterGetRxData: [wreg]
 14755  1DC9  0024               	movlb	4	; select bank4
 14756  1DCA  0811               	movf	17,w	;volatile
 14757  1DCB  0008               	return
 14758  1DCC                     __end_of_I2C1_MasterGetRxData:	
 14759                           
 14760                           	psect	text64
 14761  1DDA                     __ptext64:	
 14762 ;; *************** function _I2C1_MasterSendNack *****************
 14763 ;; Defined at:
 14764 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 14765 ;; Parameters:    Size  Location     Type
 14766 ;;		None
 14767 ;; Auto vars:     Size  Location     Type
 14768 ;;		None
 14769 ;; Return value:  Size  Location     Type
 14770 ;;                  1    wreg      void 
 14771 ;; Registers used:
 14772 ;;		None
 14773 ;; Tracked objects:
 14774 ;;		On entry : 0/0
 14775 ;;		On exit  : 0/0
 14776 ;;		Unchanged: 0/0
 14777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14782 ;;Total ram usage:        0 bytes
 14783 ;; Hardware stack levels used:    1
 14784 ;; Hardware stack levels required when called:    4
 14785 ;; This function calls:
 14786 ;;		Nothing
 14787 ;; This function is called by:
 14788 ;;		_I2C1_DO_RX_NACK_STOP
 14789 ;;		_I2C1_DO_RX_NACK_RESTART
 14790 ;; This function uses a non-reentrant model
 14791 ;;
 14792                           
 14793                           
 14794                           ;psect for function _I2C1_MasterSendNack
 14795  1DDA                     _I2C1_MasterSendNack:	
 14796                           
 14797                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 14798                           
 14799                           ;incstack = 0
 14800                           ; Regs used in _I2C1_MasterSendNack: []
 14801  1DDA  0024               	movlb	4	; select bank4
 14802  1DDB  1696               	bsf	22,5	;volatile
 14803                           
 14804                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 14805  1DDC  1616               	bsf	22,4	;volatile
 14806  1DDD  0008               	return
 14807  1DDE                     __end_of_I2C1_MasterSendNack:	
 14808                           
 14809                           	psect	text65
 14810  1DC6                     __ptext65:	
 14811 ;; *************** function _I2C1_MasterStartRx *****************
 14812 ;; Defined at:
 14813 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 14814 ;; Parameters:    Size  Location     Type
 14815 ;;		None
 14816 ;; Auto vars:     Size  Location     Type
 14817 ;;		None
 14818 ;; Return value:  Size  Location     Type
 14819 ;;                  1    wreg      void 
 14820 ;; Registers used:
 14821 ;;		None
 14822 ;; Tracked objects:
 14823 ;;		On entry : 0/0
 14824 ;;		On exit  : 0/0
 14825 ;;		Unchanged: 0/0
 14826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14831 ;;Total ram usage:        0 bytes
 14832 ;; Hardware stack levels used:    1
 14833 ;; Hardware stack levels required when called:    4
 14834 ;; This function calls:
 14835 ;;		Nothing
 14836 ;; This function is called by:
 14837 ;;		_I2C1_DO_RCEN
 14838 ;; This function uses a non-reentrant model
 14839 ;;
 14840                           
 14841                           
 14842                           ;psect for function _I2C1_MasterStartRx
 14843  1DC6                     _I2C1_MasterStartRx:	
 14844                           
 14845                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 14846                           
 14847                           ;incstack = 0
 14848                           ; Regs used in _I2C1_MasterStartRx: []
 14849  1DC6  0024               	movlb	4	; select bank4
 14850  1DC7  1596               	bsf	22,3	;volatile
 14851  1DC8  0008               	return
 14852  1DC9                     __end_of_I2C1_MasterStartRx:	
 14853                           
 14854                           	psect	text66
 14855  0002                     __ptext66:	
 14856 ;; *************** function _I2C1_CallbackReturnReset *****************
 14857 ;; Defined at:
 14858 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 14859 ;; Parameters:    Size  Location     Type
 14860 ;;  funPtr          1   10[COMMON] PTR void 
 14861 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 14862 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 14863 ;; Auto vars:     Size  Location     Type
 14864 ;;		None
 14865 ;; Return value:  Size  Location     Type
 14866 ;;                  1    wreg      enum E358
 14867 ;; Registers used:
 14868 ;;		wreg
 14869 ;; Tracked objects:
 14870 ;;		On entry : 0/0
 14871 ;;		On exit  : 0/0
 14872 ;;		Unchanged: 0/0
 14873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14874 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14877 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14878 ;;Total ram usage:        1 bytes
 14879 ;; Hardware stack levels used:    1
 14880 ;; Hardware stack levels required when called:    4
 14881 ;; This function calls:
 14882 ;;		Nothing
 14883 ;; This function is called by:
 14884 ;;		_I2C1_Open
 14885 ;;		_I2C1_DO_TX
 14886 ;;		_I2C1_DO_RX
 14887 ;;		_I2C1_DO_TX_EMPTY
 14888 ;;		_I2C1_DO_ADDRESS_NACK
 14889 ;;		_I2C1_DO_RX_EMPTY
 14890 ;; This function uses a non-reentrant model
 14891 ;;
 14892                           
 14893                           
 14894                           ;psect for function _I2C1_CallbackReturnReset
 14895  0002                     _I2C1_CallbackReturnReset:	
 14896                           
 14897                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 14898                           
 14899                           ;incstack = 0
 14900                           ; Regs used in _I2C1_CallbackReturnReset: [wreg]
 14901  0002  3005               	movlw	5
 14902  0003  0008               	return
 14903  0004                     __end_of_I2C1_CallbackReturnReset:	
 14904                           
 14905                           	psect	text67
 14906  1DAF                     __ptext67:	
 14907 ;; *************** function _I2C1_CallbackReturnStop *****************
 14908 ;; Defined at:
 14909 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 14910 ;; Parameters:    Size  Location     Type
 14911 ;;  funPtr          1   10[COMMON] PTR void 
 14912 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 14913 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 14914 ;; Auto vars:     Size  Location     Type
 14915 ;;		None
 14916 ;; Return value:  Size  Location     Type
 14917 ;;                  1    wreg      enum E358
 14918 ;; Registers used:
 14919 ;;		wreg
 14920 ;; Tracked objects:
 14921 ;;		On entry : 0/0
 14922 ;;		On exit  : 0/0
 14923 ;;		Unchanged: 0/0
 14924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14925 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14928 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14929 ;;Total ram usage:        1 bytes
 14930 ;; Hardware stack levels used:    1
 14931 ;; Hardware stack levels required when called:    4
 14932 ;; This function calls:
 14933 ;;		Nothing
 14934 ;; This function is called by:
 14935 ;;		_I2C1_Open
 14936 ;;		_I2C1_SetCallback
 14937 ;;		_I2C1_DO_TX
 14938 ;;		_I2C1_DO_RX
 14939 ;;		_I2C1_DO_TX_EMPTY
 14940 ;;		_I2C1_DO_ADDRESS_NACK
 14941 ;;		_I2C1_DO_RX_EMPTY
 14942 ;; This function uses a non-reentrant model
 14943 ;;
 14944                           
 14945                           
 14946                           ;psect for function _I2C1_CallbackReturnStop
 14947  1DAF                     _I2C1_CallbackReturnStop:	
 14948                           
 14949                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 14950                           
 14951                           ;incstack = 0
 14952                           ; Regs used in _I2C1_CallbackReturnStop: [wreg]
 14953  1DAF  3001               	movlw	1
 14954  1DB0  0008               	return
 14955  1DB1                     __end_of_I2C1_CallbackReturnStop:	
 14956                           
 14957                           	psect	text68
 14958  1F36                     __ptext68:	
 14959 ;; *************** function _rdBlkRegCompleteHandler *****************
 14960 ;; Defined at:
 14961 ;;		line 170 in file "mcc_generated_files/examples/i2c1_master_example.c"
 14962 ;; Parameters:    Size  Location     Type
 14963 ;;  ptr             1   10[COMMON] PTR void 
 14964 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 14965 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 14966 ;; Auto vars:     Size  Location     Type
 14967 ;;		None
 14968 ;; Return value:  Size  Location     Type
 14969 ;;                  1    wreg      enum E358
 14970 ;; Registers used:
 14971 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14972 ;; Tracked objects:
 14973 ;;		On entry : 0/0
 14974 ;;		On exit  : 0/0
 14975 ;;		Unchanged: 0/0
 14976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14977 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14980 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14981 ;;Total ram usage:        1 bytes
 14982 ;; Hardware stack levels used:    1
 14983 ;; Hardware stack levels required when called:    6
 14984 ;; This function calls:
 14985 ;;		_I2C1_SetBuffer
 14986 ;;		_I2C1_SetDataCompleteCallback
 14987 ;; This function is called by:
 14988 ;;		_I2C1_ReadDataBlock
 14989 ;;		_I2C1_DO_TX
 14990 ;;		_I2C1_DO_RX
 14991 ;;		_I2C1_DO_TX_EMPTY
 14992 ;;		_I2C1_DO_ADDRESS_NACK
 14993 ;;		_I2C1_DO_RX_EMPTY
 14994 ;; This function uses a non-reentrant model
 14995 ;;
 14996                           
 14997                           
 14998                           ;psect for function _rdBlkRegCompleteHandler
 14999  1F36                     _rdBlkRegCompleteHandler:	
 15000                           
 15001                           ;mcc_generated_files/examples/i2c1_master_example.c: 170: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 171: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 15002                           
 15003                           ;incstack = 0
 15004                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 15005  1F36  087A               	movf	rdBlkRegCompleteHandler@ptr,w
 15006  1F37  0086               	movwf	6
 15007  1F38  0187               	clrf	7
 15008  1F39  3F40               	moviw [0]fsr1
 15009  1F3A  00F1               	movwf	I2C1_SetBuffer@bufferSize
 15010  1F3B  3F41               	moviw [1]fsr1
 15011  1F3C  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 15012  1F3D  087A               	movf	rdBlkRegCompleteHandler@ptr,w
 15013  1F3E  3E02               	addlw	2
 15014  1F3F  0086               	movwf	6
 15015  1F40  0187               	clrf	7
 15016  1F41  0801               	movf	1,w
 15017  1F42  319E  26D7  319F   	fcall	_I2C1_SetBuffer
 15018                           
 15019                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 15020  1F45  3000               	movlw	0
 15021  1F46  00F6               	movwf	I2C1_SetDataCompleteCallback@cb
 15022  1F47  00F7               	movwf	I2C1_SetDataCompleteCallback@cb+1
 15023  1F48  01F8               	clrf	I2C1_SetDataCompleteCallback@ptr
 15024  1F49  319E  26BF         	fcall	_I2C1_SetDataCompleteCallback
 15025                           
 15026                           ;mcc_generated_files/examples/i2c1_master_example.c: 174:     return I2C1_RESTART_READ;
 15027  1F4B  3002               	movlw	2
 15028  1F4C  0008               	return
 15029  1F4D                     __end_of_rdBlkRegCompleteHandler:	
 15030                           
 15031                           	psect	text69
 15032  1F15                     __ptext69:	
 15033 ;; *************** function _wr1RegCompleteHandler *****************
 15034 ;; Defined at:
 15035 ;;		line 156 in file "mcc_generated_files/examples/i2c1_master_example.c"
 15036 ;; Parameters:    Size  Location     Type
 15037 ;;  ptr             1   10[COMMON] PTR void 
 15038 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 15039 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 15040 ;; Auto vars:     Size  Location     Type
 15041 ;;		None
 15042 ;; Return value:  Size  Location     Type
 15043 ;;                  1    wreg      enum E358
 15044 ;; Registers used:
 15045 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15046 ;; Tracked objects:
 15047 ;;		On entry : 0/0
 15048 ;;		On exit  : 0/0
 15049 ;;		Unchanged: 0/0
 15050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15051 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15054 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15055 ;;Total ram usage:        1 bytes
 15056 ;; Hardware stack levels used:    1
 15057 ;; Hardware stack levels required when called:    6
 15058 ;; This function calls:
 15059 ;;		_I2C1_SetBuffer
 15060 ;;		_I2C1_SetDataCompleteCallback
 15061 ;; This function is called by:
 15062 ;;		_I2C1_Write1ByteRegister
 15063 ;;		_I2C1_DO_TX
 15064 ;;		_I2C1_DO_RX
 15065 ;;		_I2C1_DO_TX_EMPTY
 15066 ;;		_I2C1_DO_ADDRESS_NACK
 15067 ;;		_I2C1_DO_RX_EMPTY
 15068 ;; This function uses a non-reentrant model
 15069 ;;
 15070                           
 15071                           
 15072                           ;psect for function _wr1RegCompleteHandler
 15073  1F15                     _wr1RegCompleteHandler:	
 15074                           
 15075                           ;mcc_generated_files/examples/i2c1_master_example.c: 156: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 157: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetBuffer(ptr,1);
 15076                           
 15077                           ;incstack = 0
 15078                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15079  1F15  3001               	movlw	1
 15080  1F16  00F1               	movwf	I2C1_SetBuffer@bufferSize
 15081  1F17  3000               	movlw	0
 15082  1F18  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 15083  1F19  087A               	movf	wr1RegCompleteHandler@ptr,w
 15084  1F1A  319E  26D7  319F   	fcall	_I2C1_SetBuffer
 15085                           
 15086                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 15087  1F1D  3000               	movlw	0
 15088  1F1E  00F6               	movwf	I2C1_SetDataCompleteCallback@cb
 15089  1F1F  00F7               	movwf	I2C1_SetDataCompleteCallback@cb+1
 15090  1F20  01F8               	clrf	I2C1_SetDataCompleteCallback@ptr
 15091  1F21  319E  26BF         	fcall	_I2C1_SetDataCompleteCallback
 15092                           
 15093                           ;mcc_generated_files/examples/i2c1_master_example.c: 160:     return I2C1_CONTINUE;
 15094  1F23  3004               	movlw	4
 15095  1F24  0008               	return
 15096  1F25                     __end_of_wr1RegCompleteHandler:	
 15097                           
 15098                           	psect	text70
 15099  1F05                     __ptext70:	
 15100 ;; *************** function _rd2RegCompleteHandler *****************
 15101 ;; Defined at:
 15102 ;;		line 149 in file "mcc_generated_files/examples/i2c1_master_example.c"
 15103 ;; Parameters:    Size  Location     Type
 15104 ;;  ptr             1   10[COMMON] PTR void 
 15105 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 15106 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 15107 ;; Auto vars:     Size  Location     Type
 15108 ;;		None
 15109 ;; Return value:  Size  Location     Type
 15110 ;;                  1    wreg      enum E358
 15111 ;; Registers used:
 15112 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15113 ;; Tracked objects:
 15114 ;;		On entry : 0/0
 15115 ;;		On exit  : 0/0
 15116 ;;		Unchanged: 0/0
 15117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15118 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15121 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15122 ;;Total ram usage:        1 bytes
 15123 ;; Hardware stack levels used:    1
 15124 ;; Hardware stack levels required when called:    6
 15125 ;; This function calls:
 15126 ;;		_I2C1_SetBuffer
 15127 ;;		_I2C1_SetDataCompleteCallback
 15128 ;; This function is called by:
 15129 ;;		_I2C1_Read2ByteRegister
 15130 ;;		_I2C1_DO_TX
 15131 ;;		_I2C1_DO_RX
 15132 ;;		_I2C1_DO_TX_EMPTY
 15133 ;;		_I2C1_DO_ADDRESS_NACK
 15134 ;;		_I2C1_DO_RX_EMPTY
 15135 ;; This function uses a non-reentrant model
 15136 ;;
 15137                           
 15138                           
 15139                           ;psect for function _rd2RegCompleteHandler
 15140  1F05                     _rd2RegCompleteHandler:	
 15141                           
 15142                           ;mcc_generated_files/examples/i2c1_master_example.c: 149: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 150: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetBuffer(ptr,2);
 15143                           
 15144                           ;incstack = 0
 15145                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15146  1F05  3002               	movlw	2
 15147  1F06  00F1               	movwf	I2C1_SetBuffer@bufferSize
 15148  1F07  3000               	movlw	0
 15149  1F08  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 15150  1F09  087A               	movf	rd2RegCompleteHandler@ptr,w
 15151  1F0A  319E  26D7  319F   	fcall	_I2C1_SetBuffer
 15152                           
 15153                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 15154  1F0D  3000               	movlw	0
 15155  1F0E  00F6               	movwf	I2C1_SetDataCompleteCallback@cb
 15156  1F0F  00F7               	movwf	I2C1_SetDataCompleteCallback@cb+1
 15157  1F10  01F8               	clrf	I2C1_SetDataCompleteCallback@ptr
 15158  1F11  319E  26BF         	fcall	_I2C1_SetDataCompleteCallback
 15159                           
 15160                           ;mcc_generated_files/examples/i2c1_master_example.c: 153:     return I2C1_RESTART_READ;
 15161  1F13  3002               	movlw	2
 15162  1F14  0008               	return
 15163  1F15                     __end_of_rd2RegCompleteHandler:	
 15164                           
 15165                           	psect	text71
 15166  1EF5                     __ptext71:	
 15167 ;; *************** function _rd1RegCompleteHandler *****************
 15168 ;; Defined at:
 15169 ;;		line 142 in file "mcc_generated_files/examples/i2c1_master_example.c"
 15170 ;; Parameters:    Size  Location     Type
 15171 ;;  ptr             1   10[COMMON] PTR void 
 15172 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 15173 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 15174 ;; Auto vars:     Size  Location     Type
 15175 ;;		None
 15176 ;; Return value:  Size  Location     Type
 15177 ;;                  1    wreg      enum E358
 15178 ;; Registers used:
 15179 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15180 ;; Tracked objects:
 15181 ;;		On entry : 0/0
 15182 ;;		On exit  : 0/0
 15183 ;;		Unchanged: 0/0
 15184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15185 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15188 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15189 ;;Total ram usage:        1 bytes
 15190 ;; Hardware stack levels used:    1
 15191 ;; Hardware stack levels required when called:    6
 15192 ;; This function calls:
 15193 ;;		_I2C1_SetBuffer
 15194 ;;		_I2C1_SetDataCompleteCallback
 15195 ;; This function is called by:
 15196 ;;		_I2C1_Read1ByteRegister
 15197 ;;		_I2C1_DO_TX
 15198 ;;		_I2C1_DO_RX
 15199 ;;		_I2C1_DO_TX_EMPTY
 15200 ;;		_I2C1_DO_ADDRESS_NACK
 15201 ;;		_I2C1_DO_RX_EMPTY
 15202 ;; This function uses a non-reentrant model
 15203 ;;
 15204                           
 15205                           
 15206                           ;psect for function _rd1RegCompleteHandler
 15207  1EF5                     _rd1RegCompleteHandler:	
 15208                           
 15209                           ;mcc_generated_files/examples/i2c1_master_example.c: 142: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 143: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 144:     I2C1_SetBuffer(ptr,1);
 15210                           
 15211                           ;incstack = 0
 15212                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15213  1EF5  3001               	movlw	1
 15214  1EF6  00F1               	movwf	I2C1_SetBuffer@bufferSize
 15215  1EF7  3000               	movlw	0
 15216  1EF8  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 15217  1EF9  087A               	movf	rd1RegCompleteHandler@ptr,w
 15218  1EFA  319E  26D7  319E   	fcall	_I2C1_SetBuffer
 15219                           
 15220                           ;mcc_generated_files/examples/i2c1_master_example.c: 145:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 15221  1EFD  3000               	movlw	0
 15222  1EFE  00F6               	movwf	I2C1_SetDataCompleteCallback@cb
 15223  1EFF  00F7               	movwf	I2C1_SetDataCompleteCallback@cb+1
 15224  1F00  01F8               	clrf	I2C1_SetDataCompleteCallback@ptr
 15225  1F01  319E  26BF         	fcall	_I2C1_SetDataCompleteCallback
 15226                           
 15227                           ;mcc_generated_files/examples/i2c1_master_example.c: 146:     return I2C1_RESTART_READ;
 15228  1F03  3002               	movlw	2
 15229  1F04  0008               	return
 15230  1F05                     __end_of_rd1RegCompleteHandler:	
 15231                           
 15232                           	psect	text72
 15233  1EE5                     __ptext72:	
 15234 ;; *************** function _wr2RegCompleteHandler *****************
 15235 ;; Defined at:
 15236 ;;		line 163 in file "mcc_generated_files/examples/i2c1_master_example.c"
 15237 ;; Parameters:    Size  Location     Type
 15238 ;;  ptr             1   10[COMMON] PTR void 
 15239 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 15240 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 15241 ;; Auto vars:     Size  Location     Type
 15242 ;;		None
 15243 ;; Return value:  Size  Location     Type
 15244 ;;                  1    wreg      enum E358
 15245 ;; Registers used:
 15246 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15247 ;; Tracked objects:
 15248 ;;		On entry : 0/0
 15249 ;;		On exit  : 0/0
 15250 ;;		Unchanged: 0/0
 15251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15252 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15255 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15256 ;;Total ram usage:        1 bytes
 15257 ;; Hardware stack levels used:    1
 15258 ;; Hardware stack levels required when called:    6
 15259 ;; This function calls:
 15260 ;;		_I2C1_SetBuffer
 15261 ;;		_I2C1_SetDataCompleteCallback
 15262 ;; This function is called by:
 15263 ;;		_I2C1_Write2ByteRegister
 15264 ;;		_I2C1_DO_TX
 15265 ;;		_I2C1_DO_RX
 15266 ;;		_I2C1_DO_TX_EMPTY
 15267 ;;		_I2C1_DO_ADDRESS_NACK
 15268 ;;		_I2C1_DO_RX_EMPTY
 15269 ;; This function uses a non-reentrant model
 15270 ;;
 15271                           
 15272                           
 15273                           ;psect for function _wr2RegCompleteHandler
 15274  1EE5                     _wr2RegCompleteHandler:	
 15275                           
 15276                           ;mcc_generated_files/examples/i2c1_master_example.c: 163: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 164: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetBuffer(ptr,2);
 15277                           
 15278                           ;incstack = 0
 15279                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15280  1EE5  3002               	movlw	2
 15281  1EE6  00F1               	movwf	I2C1_SetBuffer@bufferSize
 15282  1EE7  3000               	movlw	0
 15283  1EE8  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 15284  1EE9  087A               	movf	wr2RegCompleteHandler@ptr,w
 15285  1EEA  319E  26D7  319E   	fcall	_I2C1_SetBuffer
 15286                           
 15287                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 15288  1EED  3000               	movlw	0
 15289  1EEE  00F6               	movwf	I2C1_SetDataCompleteCallback@cb
 15290  1EEF  00F7               	movwf	I2C1_SetDataCompleteCallback@cb+1
 15291  1EF0  01F8               	clrf	I2C1_SetDataCompleteCallback@ptr
 15292  1EF1  319E  26BF         	fcall	_I2C1_SetDataCompleteCallback
 15293                           
 15294                           ;mcc_generated_files/examples/i2c1_master_example.c: 167:     return I2C1_CONTINUE;
 15295  1EF3  3004               	movlw	4
 15296  1EF4  0008               	return
 15297  1EF5                     __end_of_wr2RegCompleteHandler:	
 15298                           
 15299                           	psect	text73
 15300  1EBF                     __ptext73:	
 15301 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 15302 ;; Defined at:
 15303 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 15304 ;; Parameters:    Size  Location     Type
 15305 ;;  cb              2    6[COMMON] PTR FTN(PTR void ,)enum 
 15306 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 15307 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 15308 ;;  ptr             1    8[COMMON] PTR void 
 15309 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 15310 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 15311 ;; Auto vars:     Size  Location     Type
 15312 ;;		None
 15313 ;; Return value:  Size  Location     Type
 15314 ;;                  1    wreg      void 
 15315 ;; Registers used:
 15316 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15317 ;; Tracked objects:
 15318 ;;		On entry : 0/0
 15319 ;;		On exit  : 0/0
 15320 ;;		Unchanged: 0/0
 15321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15322 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15324 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15325 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15326 ;;Total ram usage:        4 bytes
 15327 ;; Hardware stack levels used:    1
 15328 ;; Hardware stack levels required when called:    5
 15329 ;; This function calls:
 15330 ;;		_I2C1_SetCallback
 15331 ;; This function is called by:
 15332 ;;		_I2C1_Read1ByteRegister
 15333 ;;		_rd1RegCompleteHandler
 15334 ;;		_rd2RegCompleteHandler
 15335 ;;		_wr1RegCompleteHandler
 15336 ;;		_wr2RegCompleteHandler
 15337 ;;		_rdBlkRegCompleteHandler
 15338 ;;		_I2C1_Read2ByteRegister
 15339 ;;		_I2C1_Write1ByteRegister
 15340 ;;		_I2C1_Write2ByteRegister
 15341 ;;		_I2C1_ReadDataBlock
 15342 ;; This function uses a non-reentrant model
 15343 ;;
 15344                           
 15345                           
 15346                           ;psect for function _I2C1_SetDataCompleteCallback
 15347  1EBF                     _I2C1_SetDataCompleteCallback:	
 15348                           
 15349                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 15350                           
 15351                           ;incstack = 0
 15352                           ; Regs used in _I2C1_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 15353  1EBF  0877               	movf	I2C1_SetDataCompleteCallback@cb+1,w
 15354  1EC0  00F2               	movwf	I2C1_SetCallback@cb+1
 15355  1EC1  0876               	movf	I2C1_SetDataCompleteCallback@cb,w
 15356  1EC2  00F1               	movwf	I2C1_SetCallback@cb
 15357  1EC3  0878               	movf	I2C1_SetDataCompleteCallback@ptr,w
 15358  1EC4  00F9               	movwf	??_I2C1_SetDataCompleteCallback
 15359  1EC5  0879               	movf	??_I2C1_SetDataCompleteCallback,w
 15360  1EC6  00F3               	movwf	I2C1_SetCallback@ptr
 15361  1EC7  3000               	movlw	0
 15362  1EC8  3190  20E7         	fcall	_I2C1_SetCallback
 15363  1ECA  0008               	return
 15364  1ECB                     __end_of_I2C1_SetDataCompleteCallback:	
 15365                           
 15366                           	psect	text74
 15367  10E7                     __ptext74:	
 15368 ;; *************** function _I2C1_SetCallback *****************
 15369 ;; Defined at:
 15370 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 15371 ;; Parameters:    Size  Location     Type
 15372 ;;  idx             1    wreg     enum E7168
 15373 ;;  cb              2    1[COMMON] PTR FTN(PTR void ,)enum 
 15374 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 15375 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 15376 ;;  ptr             1    3[COMMON] PTR void 
 15377 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 15378 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 15379 ;; Auto vars:     Size  Location     Type
 15380 ;;  idx             1    5[COMMON] enum E7168
 15381 ;; Return value:  Size  Location     Type
 15382 ;;                  1    wreg      void 
 15383 ;; Registers used:
 15384 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15385 ;; Tracked objects:
 15386 ;;		On entry : 0/0
 15387 ;;		On exit  : 0/0
 15388 ;;		Unchanged: 0/0
 15389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15390 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15391 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15392 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15393 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15394 ;;Total ram usage:        5 bytes
 15395 ;; Hardware stack levels used:    1
 15396 ;; Hardware stack levels required when called:    4
 15397 ;; This function calls:
 15398 ;;		Nothing
 15399 ;; This function is called by:
 15400 ;;		_I2C1_SetDataCompleteCallback
 15401 ;;		_I2C1_SetAddressNackCallback
 15402 ;;		_I2C1_SetWriteCollisionCallback
 15403 ;;		_I2C1_SetDataNackCallback
 15404 ;;		_I2C1_SetTimeoutCallback
 15405 ;; This function uses a non-reentrant model
 15406 ;;
 15407                           
 15408                           
 15409                           ;psect for function _I2C1_SetCallback
 15410  10E7                     _I2C1_SetCallback:	
 15411                           
 15412                           ;incstack = 0
 15413                           ; Regs used in _I2C1_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 15414                           ;I2C1_SetCallback@idx stored from wreg
 15415  10E7  00F5               	movwf	I2C1_SetCallback@idx
 15416                           
 15417                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 15418  10E8  0871               	movf	I2C1_SetCallback@cb,w
 15419  10E9  0472               	iorwf	I2C1_SetCallback@cb+1,w
 15420  10EA  1903               	btfsc	3,2
 15421  10EB  28FF               	goto	l3960
 15422                           
 15423                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 15424  10EC  3575               	lslf	I2C1_SetCallback@idx,w
 15425  10ED  3EA0               	addlw	(low (_I2C1_Status| (0+256)))& (0+255)
 15426  10EE  0086               	movwf	6
 15427  10EF  3001               	movlw	1	; select bank3/4
 15428  10F0  0087               	movwf	7
 15429  10F1  0871               	movf	I2C1_SetCallback@cb,w
 15430  10F2  3FC0               	movwi [0]fsr1
 15431  10F3  0872               	movf	I2C1_SetCallback@cb+1,w
 15432  10F4  3FC1               	movwi [1]fsr1
 15433                           
 15434                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 15435  10F5  0873               	movf	I2C1_SetCallback@ptr,w
 15436  10F6  00F4               	movwf	??_I2C1_SetCallback
 15437  10F7  0875               	movf	I2C1_SetCallback@idx,w
 15438  10F8  3EAC               	addlw	(low ((_I2C1_Status| (0+256)+12)))& (0+255)
 15439  10F9  0086               	movwf	6
 15440  10FA  3001               	movlw	1	; select bank3/4
 15441  10FB  0087               	movwf	7
 15442  10FC  0874               	movf	??_I2C1_SetCallback,w
 15443  10FD  0081               	movwf	1
 15444                           
 15445                           ;mcc_generated_files/i2c1_master.c: 304:     }
 15446  10FE  0008               	return
 15447  10FF                     l3960:	
 15448                           
 15449                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 15450  10FF  3575               	lslf	I2C1_SetCallback@idx,w
 15451  1100  3EA0               	addlw	(low (_I2C1_Status| (0+256)))& (0+255)
 15452  1101  0086               	movwf	6
 15453  1102  3001               	movlw	1	; select bank3/4
 15454  1103  0087               	movwf	7
 15455  1104  30AF               	movlw	low _I2C1_CallbackReturnStop
 15456  1105  3FC0               	movwi [0]fsr1
 15457  1106  301D               	movlw	high _I2C1_CallbackReturnStop
 15458  1107  3FC1               	movwi [1]fsr1
 15459                           
 15460                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 15461  1108  0875               	movf	I2C1_SetCallback@idx,w
 15462  1109  3EAC               	addlw	(low ((_I2C1_Status| (0+256)+12)))& (0+255)
 15463  110A  0086               	movwf	6
 15464  110B  3001               	movlw	1	; select bank3/4
 15465  110C  0087               	movwf	7
 15466  110D  0181               	clrf	1
 15467  110E  0008               	return
 15468  110F                     __end_of_I2C1_SetCallback:	
 15469                           
 15470                           	psect	text75
 15471  1ED7                     __ptext75:	
 15472 ;; *************** function _I2C1_SetBuffer *****************
 15473 ;; Defined at:
 15474 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 15475 ;; Parameters:    Size  Location     Type
 15476 ;;  buffer          1    wreg     PTR void 
 15477 ;;		 -> I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteReg
      +ister@data(2), 
 15478 ;;		 -> I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRe
      +gister@returnValue(2), 
 15479 ;;		 -> NULL(0), I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), 
 15480 ;;  bufferSize      2    1[COMMON] unsigned int 
 15481 ;; Auto vars:     Size  Location     Type
 15482 ;;  buffer          1    4[COMMON] PTR void 
 15483 ;;		 -> I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteReg
      +ister@data(2), 
 15484 ;;		 -> I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRe
      +gister@returnValue(2), 
 15485 ;;		 -> NULL(0), I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), 
 15486 ;; Return value:  Size  Location     Type
 15487 ;;                  1    wreg      void 
 15488 ;; Registers used:
 15489 ;;		wreg
 15490 ;; Tracked objects:
 15491 ;;		On entry : 0/0
 15492 ;;		On exit  : 0/0
 15493 ;;		Unchanged: 0/0
 15494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15495 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15496 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15497 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15498 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15499 ;;Total ram usage:        4 bytes
 15500 ;; Hardware stack levels used:    1
 15501 ;; Hardware stack levels required when called:    4
 15502 ;; This function calls:
 15503 ;;		Nothing
 15504 ;; This function is called by:
 15505 ;;		_I2C1_Read1ByteRegister
 15506 ;;		_rd1RegCompleteHandler
 15507 ;;		_rd2RegCompleteHandler
 15508 ;;		_wr1RegCompleteHandler
 15509 ;;		_wr2RegCompleteHandler
 15510 ;;		_rdBlkRegCompleteHandler
 15511 ;;		_I2C1_Read2ByteRegister
 15512 ;;		_I2C1_Write1ByteRegister
 15513 ;;		_I2C1_Write2ByteRegister
 15514 ;;		_I2C1_WriteNBytes
 15515 ;;		_I2C1_ReadNBytes
 15516 ;;		_I2C1_ReadDataBlock
 15517 ;; This function uses a non-reentrant model
 15518 ;;
 15519                           
 15520                           
 15521                           ;psect for function _I2C1_SetBuffer
 15522  1ED7                     _I2C1_SetBuffer:	
 15523                           
 15524                           ;incstack = 0
 15525                           ; Regs used in _I2C1_SetBuffer: [wreg]
 15526                           ;I2C1_SetBuffer@buffer stored from wreg
 15527  1ED7  00F4               	movwf	I2C1_SetBuffer@buffer
 15528                           
 15529                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 15530  1ED8  0023               	movlb	3	; select bank3
 15531  1ED9  1DBC               	btfss	(_I2C1_Status^(0+384)+28),3
 15532  1EDA  0008               	return
 15533                           
 15534                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 15535  1EDB  0874               	movf	I2C1_SetBuffer@buffer,w
 15536  1EDC  00F3               	movwf	??_I2C1_SetBuffer
 15537  1EDD  0873               	movf	??_I2C1_SetBuffer,w
 15538  1EDE  00B7               	movwf	(low ((_I2C1_Status| (0+256)+23)))^(0+128)
 15539                           
 15540                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 15541  1EDF  0872               	movf	I2C1_SetBuffer@bufferSize+1,w
 15542  1EE0  00B9               	movwf	((_I2C1_Status+1)^(0+384)+24)
 15543  1EE1  0871               	movf	I2C1_SetBuffer@bufferSize,w
 15544  1EE2  00B8               	movwf	(_I2C1_Status^(0+384)+24)
 15545                           
 15546                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 15547  1EE3  11BC               	bcf	(_I2C1_Status^(0+384)+28),3
 15548  1EE4  0008               	return
 15549  1EE5                     __end_of_I2C1_SetBuffer:	
 15550                           
 15551                           	psect	text76
 15552  1DC3                     __ptext76:	
 15553 ;; *************** function _I2C1_MasterStop *****************
 15554 ;; Defined at:
 15555 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 15556 ;; Parameters:    Size  Location     Type
 15557 ;;		None
 15558 ;; Auto vars:     Size  Location     Type
 15559 ;;		None
 15560 ;; Return value:  Size  Location     Type
 15561 ;;                  1    wreg      void 
 15562 ;; Registers used:
 15563 ;;		None
 15564 ;; Tracked objects:
 15565 ;;		On entry : 0/0
 15566 ;;		On exit  : 0/0
 15567 ;;		Unchanged: 0/0
 15568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15573 ;;Total ram usage:        0 bytes
 15574 ;; Hardware stack levels used:    1
 15575 ;; Hardware stack levels required when called:    4
 15576 ;; This function calls:
 15577 ;;		Nothing
 15578 ;; This function is called by:
 15579 ;;		_I2C1_DO_SEND_STOP
 15580 ;; This function uses a non-reentrant model
 15581 ;;
 15582                           
 15583                           
 15584                           ;psect for function _I2C1_MasterStop
 15585  1DC3                     _I2C1_MasterStop:	
 15586                           
 15587                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 15588                           
 15589                           ;incstack = 0
 15590                           ; Regs used in _I2C1_MasterStop: []
 15591  1DC3  0024               	movlb	4	; select bank4
 15592  1DC4  1516               	bsf	22,2	;volatile
 15593  1DC5  0008               	return
 15594  1DC6                     __end_of_I2C1_MasterStop:	
 15595                           
 15596                           	psect	text77
 15597  1DC0                     __ptext77:	
 15598 ;; *************** function _I2C1_MasterEnableRestart *****************
 15599 ;; Defined at:
 15600 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 15601 ;; Parameters:    Size  Location     Type
 15602 ;;		None
 15603 ;; Auto vars:     Size  Location     Type
 15604 ;;		None
 15605 ;; Return value:  Size  Location     Type
 15606 ;;                  1    wreg      void 
 15607 ;; Registers used:
 15608 ;;		None
 15609 ;; Tracked objects:
 15610 ;;		On entry : 0/0
 15611 ;;		On exit  : 0/0
 15612 ;;		Unchanged: 0/0
 15613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15618 ;;Total ram usage:        0 bytes
 15619 ;; Hardware stack levels used:    1
 15620 ;; Hardware stack levels required when called:    4
 15621 ;; This function calls:
 15622 ;;		Nothing
 15623 ;; This function is called by:
 15624 ;;		_I2C1_DO_SEND_RESTART_READ
 15625 ;;		_I2C1_DO_SEND_RESTART_WRITE
 15626 ;;		_I2C1_DO_SEND_RESTART
 15627 ;;		_I2C1_DO_RX_EMPTY
 15628 ;; This function uses a non-reentrant model
 15629 ;;
 15630                           
 15631                           
 15632                           ;psect for function _I2C1_MasterEnableRestart
 15633  1DC0                     _I2C1_MasterEnableRestart:	
 15634                           
 15635                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 15636                           
 15637                           ;incstack = 0
 15638                           ; Regs used in _I2C1_MasterEnableRestart: []
 15639  1DC0  0024               	movlb	4	; select bank4
 15640  1DC1  1496               	bsf	22,1	;volatile
 15641  1DC2  0008               	return
 15642  1DC3                     __end_of_I2C1_MasterEnableRestart:	
 15643                           
 15644                           	psect	text78
 15645  1DBD                     __ptext78:	
 15646 ;; *************** function _I2C1_MasterStart *****************
 15647 ;; Defined at:
 15648 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 15649 ;; Parameters:    Size  Location     Type
 15650 ;;		None
 15651 ;; Auto vars:     Size  Location     Type
 15652 ;;		None
 15653 ;; Return value:  Size  Location     Type
 15654 ;;                  1    wreg      void 
 15655 ;; Registers used:
 15656 ;;		None
 15657 ;; Tracked objects:
 15658 ;;		On entry : 0/0
 15659 ;;		On exit  : 0/0
 15660 ;;		Unchanged: 0/0
 15661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15666 ;;Total ram usage:        0 bytes
 15667 ;; Hardware stack levels used:    1
 15668 ;; Hardware stack levels required when called:    4
 15669 ;; This function calls:
 15670 ;;		Nothing
 15671 ;; This function is called by:
 15672 ;;		_I2C1_MasterOperation
 15673 ;; This function uses a non-reentrant model
 15674 ;;
 15675                           
 15676                           
 15677                           ;psect for function _I2C1_MasterStart
 15678  1DBD                     _I2C1_MasterStart:	
 15679                           
 15680                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 15681                           
 15682                           ;incstack = 0
 15683                           ; Regs used in _I2C1_MasterStart: []
 15684  1DBD  0024               	movlb	4	; select bank4
 15685  1DBE  1416               	bsf	22,0	;volatile
 15686  1DBF  0008               	return
 15687  1DC0                     __end_of_I2C1_MasterStart:	
 15688                           
 15689                           	psect	text79
 15690  1004                     __ptext79:	
 15691 ;; *************** function _I2C1_Close *****************
 15692 ;; Defined at:
 15693 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 15694 ;; Parameters:    Size  Location     Type
 15695 ;;		None
 15696 ;; Auto vars:     Size  Location     Type
 15697 ;;  returnValue     1    2[COMMON] enum E353
 15698 ;; Return value:  Size  Location     Type
 15699 ;;                  1    wreg      enum E353
 15700 ;; Registers used:
 15701 ;;		wreg, status,2, status,0, pclath, cstack
 15702 ;; Tracked objects:
 15703 ;;		On entry : 0/0
 15704 ;;		On exit  : 0/0
 15705 ;;		Unchanged: 0/0
 15706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15708 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15709 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15710 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15711 ;;Total ram usage:        2 bytes
 15712 ;; Hardware stack levels used:    1
 15713 ;; Hardware stack levels required when called:    5
 15714 ;; This function calls:
 15715 ;;		_I2C1_MasterClearIrq
 15716 ;;		_I2C1_MasterClose
 15717 ;;		_I2C1_MasterDisableIrq
 15718 ;; This function is called by:
 15719 ;;		_I2C1_Read1ByteRegister
 15720 ;;		_I2C1_Read2ByteRegister
 15721 ;;		_I2C1_Write1ByteRegister
 15722 ;;		_I2C1_Write2ByteRegister
 15723 ;;		_I2C1_WriteNBytes
 15724 ;;		_I2C1_ReadNBytes
 15725 ;;		_I2C1_ReadDataBlock
 15726 ;; This function uses a non-reentrant model
 15727 ;;
 15728                           
 15729                           
 15730                           ;psect for function _I2C1_Close
 15731  1004                     _I2C1_Close:	
 15732                           
 15733                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 15734                           
 15735                           ;incstack = 0
 15736                           ; Regs used in _I2C1_Close: [wreg+status,2+status,0+pclath+cstack]
 15737  1004  01F2               	clrf	I2C1_Close@returnValue
 15738  1005  0AF2               	incf	I2C1_Close@returnValue,f
 15739                           
 15740                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 15741  1006  0023               	movlb	3	; select bank3
 15742  1007  18BC               	btfsc	(_I2C1_Status^(0+384)+28),1
 15743  1008  281B               	goto	l5508
 15744                           
 15745                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 15746  1009  113C               	bcf	(_I2C1_Status^(0+384)+28),2
 15747                           
 15748                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 15749  100A  30FF               	movlw	255
 15750  100B  00F1               	movwf	??_I2C1_Close
 15751  100C  0871               	movf	??_I2C1_Close,w
 15752  100D  00B6               	movwf	(_I2C1_Status^(0+384)+22)
 15753                           
 15754                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 15755  100E  319D  25B4  3190   	fcall	_I2C1_MasterClearIrq
 15756                           
 15757                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 15758  1011  319D  25BA  3190   	fcall	_I2C1_MasterDisableIrq
 15759                           
 15760                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 15761  1014  319D  25B7         	fcall	_I2C1_MasterClose
 15762                           
 15763                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 15764  1016  0023               	movlb	3	; select bank3
 15765  1017  083B               	movf	(_I2C1_Status^(0+384)+27),w
 15766  1018  00F1               	movwf	??_I2C1_Close
 15767  1019  0871               	movf	??_I2C1_Close,w
 15768  101A  00F2               	movwf	I2C1_Close@returnValue
 15769  101B                     l5508:	
 15770                           
 15771                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 15772  101B  0872               	movf	I2C1_Close@returnValue,w
 15773  101C  0008               	return
 15774  101D                     __end_of_I2C1_Close:	
 15775                           
 15776                           	psect	text80
 15777  1DBA                     __ptext80:	
 15778 ;; *************** function _I2C1_MasterDisableIrq *****************
 15779 ;; Defined at:
 15780 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 15781 ;; Parameters:    Size  Location     Type
 15782 ;;		None
 15783 ;; Auto vars:     Size  Location     Type
 15784 ;;		None
 15785 ;; Return value:  Size  Location     Type
 15786 ;;                  1    wreg      void 
 15787 ;; Registers used:
 15788 ;;		None
 15789 ;; Tracked objects:
 15790 ;;		On entry : 0/0
 15791 ;;		On exit  : 0/0
 15792 ;;		Unchanged: 0/0
 15793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15798 ;;Total ram usage:        0 bytes
 15799 ;; Hardware stack levels used:    1
 15800 ;; Hardware stack levels required when called:    4
 15801 ;; This function calls:
 15802 ;;		Nothing
 15803 ;; This function is called by:
 15804 ;;		_I2C1_Close
 15805 ;;		_I2C1_SetTimeOut
 15806 ;; This function uses a non-reentrant model
 15807 ;;
 15808                           
 15809                           
 15810                           ;psect for function _I2C1_MasterDisableIrq
 15811  1DBA                     _I2C1_MasterDisableIrq:	
 15812                           
 15813                           ;mcc_generated_files/i2c1_master.c: 637:     PIE1bits.SSP1IE = 0;
 15814                           
 15815                           ;incstack = 0
 15816                           ; Regs used in _I2C1_MasterDisableIrq: []
 15817  1DBA  0021               	movlb	1	; select bank1
 15818  1DBB  1191               	bcf	17,3	;volatile
 15819  1DBC  0008               	return
 15820  1DBD                     __end_of_I2C1_MasterDisableIrq:	
 15821                           
 15822                           	psect	text81
 15823  1DB7                     __ptext81:	
 15824 ;; *************** function _I2C1_MasterClose *****************
 15825 ;; Defined at:
 15826 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 15827 ;; Parameters:    Size  Location     Type
 15828 ;;		None
 15829 ;; Auto vars:     Size  Location     Type
 15830 ;;		None
 15831 ;; Return value:  Size  Location     Type
 15832 ;;                  1    wreg      void 
 15833 ;; Registers used:
 15834 ;;		None
 15835 ;; Tracked objects:
 15836 ;;		On entry : 0/0
 15837 ;;		On exit  : 0/0
 15838 ;;		Unchanged: 0/0
 15839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15844 ;;Total ram usage:        0 bytes
 15845 ;; Hardware stack levels used:    1
 15846 ;; Hardware stack levels required when called:    4
 15847 ;; This function calls:
 15848 ;;		Nothing
 15849 ;; This function is called by:
 15850 ;;		_I2C1_Close
 15851 ;; This function uses a non-reentrant model
 15852 ;;
 15853                           
 15854                           
 15855                           ;psect for function _I2C1_MasterClose
 15856  1DB7                     _I2C1_MasterClose:	
 15857                           
 15858                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 15859                           
 15860                           ;incstack = 0
 15861                           ; Regs used in _I2C1_MasterClose: []
 15862  1DB7  0024               	movlb	4	; select bank4
 15863  1DB8  1295               	bcf	21,5	;volatile
 15864  1DB9  0008               	return
 15865  1DBA                     __end_of_I2C1_MasterClose:	
 15866                           
 15867                           	psect	text82
 15868  1DB4                     __ptext82:	
 15869 ;; *************** function _I2C1_MasterClearIrq *****************
 15870 ;; Defined at:
 15871 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 15872 ;; Parameters:    Size  Location     Type
 15873 ;;		None
 15874 ;; Auto vars:     Size  Location     Type
 15875 ;;		None
 15876 ;; Return value:  Size  Location     Type
 15877 ;;                  1    wreg      void 
 15878 ;; Registers used:
 15879 ;;		None
 15880 ;; Tracked objects:
 15881 ;;		On entry : 0/0
 15882 ;;		On exit  : 0/0
 15883 ;;		Unchanged: 0/0
 15884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15889 ;;Total ram usage:        0 bytes
 15890 ;; Hardware stack levels used:    1
 15891 ;; Hardware stack levels required when called:    4
 15892 ;; This function calls:
 15893 ;;		Nothing
 15894 ;; This function is called by:
 15895 ;;		_I2C1_Open
 15896 ;;		_I2C1_Close
 15897 ;;		_I2C1_MasterFsm
 15898 ;; This function uses a non-reentrant model
 15899 ;;
 15900                           
 15901                           
 15902                           ;psect for function _I2C1_MasterClearIrq
 15903  1DB4                     _I2C1_MasterClearIrq:	
 15904                           
 15905                           ;mcc_generated_files/i2c1_master.c: 642:     PIR1bits.SSP1IF = 0;
 15906                           
 15907                           ;incstack = 0
 15908                           ; Regs used in _I2C1_MasterClearIrq: []
 15909  1DB4  0020               	movlb	0	; select bank0
 15910  1DB5  1191               	bcf	17,3	;volatile
 15911  1DB6  0008               	return
 15912  1DB7                     __end_of_I2C1_MasterClearIrq:	
 15913                           
 15914                           	psect	text83
 15915  1F93                     __ptext83:	
 15916 ;; *************** function _SYSTEM_Initialize *****************
 15917 ;; Defined at:
 15918 ;;		line 50 in file "mcc_generated_files/mcc.c"
 15919 ;; Parameters:    Size  Location     Type
 15920 ;;		None
 15921 ;; Auto vars:     Size  Location     Type
 15922 ;;		None
 15923 ;; Return value:  Size  Location     Type
 15924 ;;                  1    wreg      void 
 15925 ;; Registers used:
 15926 ;;		wreg, status,2, status,0, pclath, cstack
 15927 ;; Tracked objects:
 15928 ;;		On entry : 0/0
 15929 ;;		On exit  : 0/0
 15930 ;;		Unchanged: 0/0
 15931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15936 ;;Total ram usage:        0 bytes
 15937 ;; Hardware stack levels used:    1
 15938 ;; Hardware stack levels required when called:    6
 15939 ;; This function calls:
 15940 ;;		_EUSART_Initialize
 15941 ;;		_I2C1_Initialize
 15942 ;;		_OSCILLATOR_Initialize
 15943 ;;		_PIN_MANAGER_Initialize
 15944 ;;		_PMD_Initialize
 15945 ;;		_PWM5_Initialize
 15946 ;;		_TMR2_Initialize
 15947 ;;		_WDT_Initialize
 15948 ;; This function is called by:
 15949 ;;		_main
 15950 ;; This function uses a non-reentrant model
 15951 ;;
 15952                           
 15953                           
 15954                           ;psect for function _SYSTEM_Initialize
 15955  1F93                     _SYSTEM_Initialize:	
 15956                           
 15957                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 15958                           
 15959                           ;incstack = 0
 15960                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15961  1F93  319E  2657  319F   	fcall	_PMD_Initialize
 15962                           
 15963                           ;mcc_generated_files/mcc.c: 54:     I2C1_Initialize();
 15964  1F96  319E  266F  319F   	fcall	_I2C1_Initialize
 15965                           
 15966                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 15967  1F99  3192  2265  319F   	fcall	_PIN_MANAGER_Initialize
 15968                           
 15969                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 15970  1F9C  319E  2678  319F   	fcall	_OSCILLATOR_Initialize
 15971                           
 15972                           ;mcc_generated_files/mcc.c: 57:     WDT_Initialize();
 15973  1F9F  319D  25D6  319F   	fcall	_WDT_Initialize
 15974                           
 15975                           ;mcc_generated_files/mcc.c: 58:     PWM5_Initialize();
 15976  1FA2  319E  26B3  319F   	fcall	_PWM5_Initialize
 15977                           
 15978                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 15979  1FA5  319E  265F  319F   	fcall	_TMR2_Initialize
 15980                           
 15981                           ;mcc_generated_files/mcc.c: 60:     EUSART_Initialize();
 15982  1FA8  3192  22DC         	fcall	_EUSART_Initialize
 15983  1FAA  0008               	return
 15984  1FAB                     __end_of_SYSTEM_Initialize:	
 15985                           
 15986                           	psect	text84
 15987  1DD6                     __ptext84:	
 15988 ;; *************** function _WDT_Initialize *****************
 15989 ;; Defined at:
 15990 ;;		line 77 in file "mcc_generated_files/mcc.c"
 15991 ;; Parameters:    Size  Location     Type
 15992 ;;		None
 15993 ;; Auto vars:     Size  Location     Type
 15994 ;;		None
 15995 ;; Return value:  Size  Location     Type
 15996 ;;                  1    wreg      void 
 15997 ;; Registers used:
 15998 ;;		wreg
 15999 ;; Tracked objects:
 16000 ;;		On entry : 0/0
 16001 ;;		On exit  : 0/0
 16002 ;;		Unchanged: 0/0
 16003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16008 ;;Total ram usage:        0 bytes
 16009 ;; Hardware stack levels used:    1
 16010 ;; Hardware stack levels required when called:    4
 16011 ;; This function calls:
 16012 ;;		Nothing
 16013 ;; This function is called by:
 16014 ;;		_SYSTEM_Initialize
 16015 ;; This function uses a non-reentrant model
 16016 ;;
 16017                           
 16018                           
 16019                           ;psect for function _WDT_Initialize
 16020  1DD6                     _WDT_Initialize:	
 16021                           
 16022                           ;mcc_generated_files/mcc.c: 80:     WDTCON = 0x16;
 16023                           
 16024                           ;incstack = 0
 16025                           ; Regs used in _WDT_Initialize: [wreg]
 16026  1DD6  3016               	movlw	22
 16027  1DD7  0021               	movlb	1	; select bank1
 16028  1DD8  0097               	movwf	23	;volatile
 16029  1DD9  0008               	return
 16030  1DDA                     __end_of_WDT_Initialize:	
 16031                           
 16032                           	psect	text85
 16033  1E5F                     __ptext85:	
 16034 ;; *************** function _TMR2_Initialize *****************
 16035 ;; Defined at:
 16036 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 16037 ;; Parameters:    Size  Location     Type
 16038 ;;		None
 16039 ;; Auto vars:     Size  Location     Type
 16040 ;;		None
 16041 ;; Return value:  Size  Location     Type
 16042 ;;                  1    wreg      void 
 16043 ;; Registers used:
 16044 ;;		wreg, status,2
 16045 ;; Tracked objects:
 16046 ;;		On entry : 0/0
 16047 ;;		On exit  : 0/0
 16048 ;;		Unchanged: 0/0
 16049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16054 ;;Total ram usage:        0 bytes
 16055 ;; Hardware stack levels used:    1
 16056 ;; Hardware stack levels required when called:    4
 16057 ;; This function calls:
 16058 ;;		Nothing
 16059 ;; This function is called by:
 16060 ;;		_SYSTEM_Initialize
 16061 ;; This function uses a non-reentrant model
 16062 ;;
 16063                           
 16064                           
 16065                           ;psect for function _TMR2_Initialize
 16066  1E5F                     _TMR2_Initialize:	
 16067                           
 16068                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0x68;
 16069                           
 16070                           ;incstack = 0
 16071                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 16072  1E5F  3068               	movlw	104
 16073  1E60  0020               	movlb	0	; select bank0
 16074  1E61  009E               	movwf	30	;volatile
 16075                           
 16076                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
 16077  1E62  019D               	clrf	29	;volatile
 16078                           
 16079                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
 16080  1E63  1091               	bcf	17,1	;volatile
 16081                           
 16082                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x05;
 16083  1E64  3005               	movlw	5
 16084  1E65  009F               	movwf	31	;volatile
 16085  1E66  0008               	return
 16086  1E67                     __end_of_TMR2_Initialize:	
 16087                           
 16088                           	psect	text86
 16089  1EB3                     __ptext86:	
 16090 ;; *************** function _PWM5_Initialize *****************
 16091 ;; Defined at:
 16092 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 16093 ;; Parameters:    Size  Location     Type
 16094 ;;		None
 16095 ;; Auto vars:     Size  Location     Type
 16096 ;;		None
 16097 ;; Return value:  Size  Location     Type
 16098 ;;                  1    wreg      void 
 16099 ;; Registers used:
 16100 ;;		wreg, status,2, status,0
 16101 ;; Tracked objects:
 16102 ;;		On entry : 0/0
 16103 ;;		On exit  : 0/0
 16104 ;;		Unchanged: 0/0
 16105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16110 ;;Total ram usage:        0 bytes
 16111 ;; Hardware stack levels used:    1
 16112 ;; Hardware stack levels required when called:    4
 16113 ;; This function calls:
 16114 ;;		Nothing
 16115 ;; This function is called by:
 16116 ;;		_SYSTEM_Initialize
 16117 ;; This function uses a non-reentrant model
 16118 ;;
 16119                           
 16120                           
 16121                           ;psect for function _PWM5_Initialize
 16122  1EB3                     _PWM5_Initialize:	
 16123                           
 16124                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
 16125                           
 16126                           ;incstack = 0
 16127                           ; Regs used in _PWM5_Initialize: [wreg+status,2+status,0]
 16128  1EB3  3080               	movlw	128
 16129  1EB4  002C               	movlb	12	; select bank12
 16130  1EB5  0099               	movwf	25	;volatile
 16131                           
 16132                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x34;
 16133  1EB6  3034               	movlw	52
 16134  1EB7  0098               	movwf	24	;volatile
 16135                           
 16136                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x40;
 16137  1EB8  3040               	movlw	64
 16138  1EB9  0097               	movwf	23	;volatile
 16139                           
 16140                           ;mcc_generated_files/pwm5.c: 71:     PWMTMRSbits.P5TSEL = 1;
 16141  1EBA  081F               	movf	31,w	;volatile
 16142  1EBB  39FC               	andlw	-4
 16143  1EBC  3801               	iorlw	1
 16144  1EBD  009F               	movwf	31	;volatile
 16145  1EBE  0008               	return
 16146  1EBF                     __end_of_PWM5_Initialize:	
 16147                           
 16148                           	psect	text87
 16149  1E57                     __ptext87:	
 16150 ;; *************** function _PMD_Initialize *****************
 16151 ;; Defined at:
 16152 ;;		line 83 in file "mcc_generated_files/mcc.c"
 16153 ;; Parameters:    Size  Location     Type
 16154 ;;		None
 16155 ;; Auto vars:     Size  Location     Type
 16156 ;;		None
 16157 ;; Return value:  Size  Location     Type
 16158 ;;                  1    wreg      void 
 16159 ;; Registers used:
 16160 ;;		status,2
 16161 ;; Tracked objects:
 16162 ;;		On entry : 0/0
 16163 ;;		On exit  : 0/0
 16164 ;;		Unchanged: 0/0
 16165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16170 ;;Total ram usage:        0 bytes
 16171 ;; Hardware stack levels used:    1
 16172 ;; Hardware stack levels required when called:    4
 16173 ;; This function calls:
 16174 ;;		Nothing
 16175 ;; This function is called by:
 16176 ;;		_SYSTEM_Initialize
 16177 ;; This function uses a non-reentrant model
 16178 ;;
 16179                           
 16180                           
 16181                           ;psect for function _PMD_Initialize
 16182  1E57                     _PMD_Initialize:	
 16183                           
 16184                           ;mcc_generated_files/mcc.c: 86:     PMD0 = 0x00;
 16185                           
 16186                           ;incstack = 0
 16187                           ; Regs used in _PMD_Initialize: [status,2]
 16188  1E57  0032               	movlb	18	; select bank18
 16189  1E58  0191               	clrf	17	;volatile
 16190                           
 16191                           ;mcc_generated_files/mcc.c: 88:     PMD1 = 0x00;
 16192  1E59  0192               	clrf	18	;volatile
 16193                           
 16194                           ;mcc_generated_files/mcc.c: 90:     PMD2 = 0x00;
 16195  1E5A  0193               	clrf	19	;volatile
 16196                           
 16197                           ;mcc_generated_files/mcc.c: 92:     PMD3 = 0x00;
 16198  1E5B  0194               	clrf	20	;volatile
 16199                           
 16200                           ;mcc_generated_files/mcc.c: 94:     PMD4 = 0x00;
 16201  1E5C  0195               	clrf	21	;volatile
 16202                           
 16203                           ;mcc_generated_files/mcc.c: 96:     PMD5 = 0x00;
 16204  1E5D  0196               	clrf	22	;volatile
 16205  1E5E  0008               	return
 16206  1E5F                     __end_of_PMD_Initialize:	
 16207                           
 16208                           	psect	text88
 16209  1265                     __ptext88:	
 16210 ;; *************** function _PIN_MANAGER_Initialize *****************
 16211 ;; Defined at:
 16212 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 16213 ;; Parameters:    Size  Location     Type
 16214 ;;		None
 16215 ;; Auto vars:     Size  Location     Type
 16216 ;;		None
 16217 ;; Return value:  Size  Location     Type
 16218 ;;                  1    wreg      void 
 16219 ;; Registers used:
 16220 ;;		wreg, status,2
 16221 ;; Tracked objects:
 16222 ;;		On entry : 0/0
 16223 ;;		On exit  : 0/0
 16224 ;;		Unchanged: 0/0
 16225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16230 ;;Total ram usage:        0 bytes
 16231 ;; Hardware stack levels used:    1
 16232 ;; Hardware stack levels required when called:    4
 16233 ;; This function calls:
 16234 ;;		Nothing
 16235 ;; This function is called by:
 16236 ;;		_SYSTEM_Initialize
 16237 ;; This function uses a non-reentrant model
 16238 ;;
 16239                           
 16240                           
 16241                           ;psect for function _PIN_MANAGER_Initialize
 16242  1265                     _PIN_MANAGER_Initialize:	
 16243                           
 16244                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 16245                           
 16246                           ;incstack = 0
 16247                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 16248  1265  0022               	movlb	2	; select bank2
 16249  1266  018C               	clrf	12	;volatile
 16250                           
 16251                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 16252  1267  018D               	clrf	13	;volatile
 16253                           
 16254                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 16255  1268  018E               	clrf	14	;volatile
 16256                           
 16257                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x37;
 16258  1269  3037               	movlw	55
 16259  126A  0021               	movlb	1	; select bank1
 16260  126B  008C               	movwf	12	;volatile
 16261                           
 16262                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x70;
 16263  126C  3070               	movlw	112
 16264  126D  008D               	movwf	13	;volatile
 16265                           
 16266                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xB7;
 16267  126E  30B7               	movlw	183
 16268  126F  008E               	movwf	14	;volatile
 16269                           
 16270                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xE7;
 16271  1270  30E7               	movlw	231
 16272  1271  0023               	movlb	3	; select bank3
 16273  1272  008E               	movwf	14	;volatile
 16274                           
 16275                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x80;
 16276  1273  3080               	movlw	128
 16277  1274  008D               	movwf	13	;volatile
 16278                           
 16279                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x37;
 16280  1275  3037               	movlw	55
 16281  1276  008C               	movwf	12	;volatile
 16282                           
 16283                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
 16284  1277  0024               	movlb	4	; select bank4
 16285  1278  018D               	clrf	13	;volatile
 16286                           
 16287                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
 16288  1279  018C               	clrf	12	;volatile
 16289                           
 16290                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
 16291  127A  018E               	clrf	14	;volatile
 16292                           
 16293                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
 16294  127B  0025               	movlb	5	; select bank5
 16295  127C  018C               	clrf	12	;volatile
 16296                           
 16297                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
 16298  127D  018D               	clrf	13	;volatile
 16299                           
 16300                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
 16301  127E  018E               	clrf	14	;volatile
 16302                           
 16303                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
 16304  127F  3037               	movlw	55
 16305  1280  0026               	movlb	6	; select bank6
 16306  1281  008C               	movwf	12	;volatile
 16307                           
 16308                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
 16309  1282  30F0               	movlw	240
 16310  1283  008D               	movwf	13	;volatile
 16311                           
 16312                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
 16313  1284  30FF               	movlw	255
 16314  1285  008E               	movwf	14	;volatile
 16315                           
 16316                           ;mcc_generated_files/pin_manager.c: 102:     INLVLA = 0x3F;
 16317  1286  303F               	movlw	63
 16318  1287  0027               	movlb	7	; select bank7
 16319  1288  008C               	movwf	12	;volatile
 16320                           
 16321                           ;mcc_generated_files/pin_manager.c: 103:     INLVLB = 0xF0;
 16322  1289  30F0               	movlw	240
 16323  128A  008D               	movwf	13	;volatile
 16324                           
 16325                           ;mcc_generated_files/pin_manager.c: 104:     INLVLC = 0xFF;
 16326  128B  30FF               	movlw	255
 16327  128C  008E               	movwf	14	;volatile
 16328                           
 16329                           ;mcc_generated_files/pin_manager.c: 113:     RXPPS = 0x0E;
 16330  128D  300E               	movlw	14
 16331  128E  003C               	movlb	28	; select bank28
 16332  128F  00A4               	movwf	36	;volatile
 16333                           
 16334                           ;mcc_generated_files/pin_manager.c: 114:     SSP1CLKPPS = 0x0D;
 16335  1290  300D               	movlw	13
 16336  1291  00A0               	movwf	32	;volatile
 16337                           
 16338                           ;mcc_generated_files/pin_manager.c: 115:     RB7PPS = 0x14;
 16339  1292  3014               	movlw	20
 16340  1293  003D               	movlb	29	; select bank29
 16341  1294  009F               	movwf	31	;volatile
 16342                           
 16343                           ;mcc_generated_files/pin_manager.c: 116:     RB5PPS = 0x18;
 16344  1295  3018               	movlw	24
 16345  1296  009D               	movwf	29	;volatile
 16346                           
 16347                           ;mcc_generated_files/pin_manager.c: 117:     RB4PPS = 0x19;
 16348  1297  3019               	movlw	25
 16349  1298  009C               	movwf	28	;volatile
 16350                           
 16351                           ;mcc_generated_files/pin_manager.c: 118:     RC6PPS = 0x02;
 16352  1299  3002               	movlw	2
 16353  129A  00A6               	movwf	38	;volatile
 16354                           
 16355                           ;mcc_generated_files/pin_manager.c: 119:     SSP1DATPPS = 0x0C;
 16356  129B  300C               	movlw	12
 16357  129C  003C               	movlb	28	; select bank28
 16358  129D  00A1               	movwf	33	;volatile
 16359  129E  0008               	return
 16360  129F                     __end_of_PIN_MANAGER_Initialize:	
 16361                           
 16362                           	psect	text89
 16363  1E78                     __ptext89:	
 16364 ;; *************** function _OSCILLATOR_Initialize *****************
 16365 ;; Defined at:
 16366 ;;		line 63 in file "mcc_generated_files/mcc.c"
 16367 ;; Parameters:    Size  Location     Type
 16368 ;;		None
 16369 ;; Auto vars:     Size  Location     Type
 16370 ;;		None
 16371 ;; Return value:  Size  Location     Type
 16372 ;;                  1    wreg      void 
 16373 ;; Registers used:
 16374 ;;		wreg, status,2
 16375 ;; Tracked objects:
 16376 ;;		On entry : 0/0
 16377 ;;		On exit  : 0/0
 16378 ;;		Unchanged: 0/0
 16379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16384 ;;Total ram usage:        0 bytes
 16385 ;; Hardware stack levels used:    1
 16386 ;; Hardware stack levels required when called:    4
 16387 ;; This function calls:
 16388 ;;		Nothing
 16389 ;; This function is called by:
 16390 ;;		_SYSTEM_Initialize
 16391 ;; This function uses a non-reentrant model
 16392 ;;
 16393                           
 16394                           
 16395                           ;psect for function _OSCILLATOR_Initialize
 16396  1E78                     _OSCILLATOR_Initialize:	
 16397                           
 16398                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x60;
 16399                           
 16400                           ;incstack = 0
 16401                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 16402  1E78  3060               	movlw	96
 16403  1E79  0032               	movlb	18	; select bank18
 16404  1E7A  0099               	movwf	25	;volatile
 16405                           
 16406                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
 16407  1E7B  019B               	clrf	27	;volatile
 16408                           
 16409                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
 16410  1E7C  019D               	clrf	29	;volatile
 16411                           
 16412                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x06;
 16413  1E7D  3006               	movlw	6
 16414  1E7E  009F               	movwf	31	;volatile
 16415                           
 16416                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 16417  1E7F  019E               	clrf	30	;volatile
 16418  1E80  0008               	return
 16419  1E81                     __end_of_OSCILLATOR_Initialize:	
 16420                           
 16421                           	psect	text90
 16422  1E6F                     __ptext90:	
 16423 ;; *************** function _I2C1_Initialize *****************
 16424 ;; Defined at:
 16425 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 16426 ;; Parameters:    Size  Location     Type
 16427 ;;		None
 16428 ;; Auto vars:     Size  Location     Type
 16429 ;;		None
 16430 ;; Return value:  Size  Location     Type
 16431 ;;                  1    wreg      void 
 16432 ;; Registers used:
 16433 ;;		wreg, status,2
 16434 ;; Tracked objects:
 16435 ;;		On entry : 0/0
 16436 ;;		On exit  : 0/0
 16437 ;;		Unchanged: 0/0
 16438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16443 ;;Total ram usage:        0 bytes
 16444 ;; Hardware stack levels used:    1
 16445 ;; Hardware stack levels required when called:    4
 16446 ;; This function calls:
 16447 ;;		Nothing
 16448 ;; This function is called by:
 16449 ;;		_SYSTEM_Initialize
 16450 ;; This function uses a non-reentrant model
 16451 ;;
 16452                           
 16453                           
 16454                           ;psect for function _I2C1_Initialize
 16455  1E6F                     _I2C1_Initialize:	
 16456                           
 16457                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x00;
 16458                           
 16459                           ;incstack = 0
 16460                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 16461  1E6F  0024               	movlb	4	; select bank4
 16462  1E70  0194               	clrf	20	;volatile
 16463                           
 16464                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 16465  1E71  3008               	movlw	8
 16466  1E72  0095               	movwf	21	;volatile
 16467                           
 16468                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 16469  1E73  0196               	clrf	22	;volatile
 16470                           
 16471                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x27;
 16472  1E74  3027               	movlw	39
 16473  1E75  0092               	movwf	18	;volatile
 16474                           
 16475                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 16476  1E76  1295               	bcf	21,5	;volatile
 16477  1E77  0008               	return
 16478  1E78                     __end_of_I2C1_Initialize:	
 16479                           
 16480                           	psect	text91
 16481  12DC                     __ptext91:	
 16482 ;; *************** function _EUSART_Initialize *****************
 16483 ;; Defined at:
 16484 ;;		line 88 in file "mcc_generated_files/eusart.c"
 16485 ;; Parameters:    Size  Location     Type
 16486 ;;		None
 16487 ;; Auto vars:     Size  Location     Type
 16488 ;;		None
 16489 ;; Return value:  Size  Location     Type
 16490 ;;                  1    wreg      void 
 16491 ;; Registers used:
 16492 ;;		wreg, status,2, status,0, pclath, cstack
 16493 ;; Tracked objects:
 16494 ;;		On entry : 0/0
 16495 ;;		On exit  : 0/0
 16496 ;;		Unchanged: 0/0
 16497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16500 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16501 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16502 ;;Total ram usage:        1 bytes
 16503 ;; Hardware stack levels used:    1
 16504 ;; Hardware stack levels required when called:    5
 16505 ;; This function calls:
 16506 ;;		_EUSART_SetErrorHandler
 16507 ;;		_EUSART_SetFramingErrorHandler
 16508 ;;		_EUSART_SetOverrunErrorHandler
 16509 ;;		_EUSART_SetRxInterruptHandler
 16510 ;;		_EUSART_SetTxInterruptHandler
 16511 ;; This function is called by:
 16512 ;;		_SYSTEM_Initialize
 16513 ;; This function uses a non-reentrant model
 16514 ;;
 16515                           
 16516                           
 16517                           ;psect for function _EUSART_Initialize
 16518  12DC                     _EUSART_Initialize:	
 16519                           
 16520                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
 16521                           
 16522                           ;incstack = 0
 16523                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16524  12DC  0021               	movlb	1	; select bank1
 16525  12DD  1291               	bcf	17,5	;volatile
 16526                           
 16527                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
 16528  12DE  30FC               	movlw	low _EUSART_Receive_ISR
 16529  12DF  00F1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
 16530  12E0  3011               	movlw	high _EUSART_Receive_ISR
 16531  12E1  00F2               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
 16532  12E2  319E  262C  3192   	fcall	_EUSART_SetRxInterruptHandler
 16533                           
 16534                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
 16535  12E5  0021               	movlb	1	; select bank1
 16536  12E6  1211               	bcf	17,4	;volatile
 16537                           
 16538                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
 16539  12E7  305B               	movlw	low _EUSART_Transmit_ISR
 16540  12E8  00F1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
 16541  12E9  3010               	movlw	high _EUSART_Transmit_ISR
 16542  12EA  00F2               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
 16543  12EB  319E  2632  3192   	fcall	_EUSART_SetTxInterruptHandler
 16544                           
 16545                           ;mcc_generated_files/eusart.c: 98:     BAUD1CON = 0x08;
 16546  12EE  3008               	movlw	8
 16547  12EF  0023               	movlb	3	; select bank3
 16548  12F0  009F               	movwf	31	;volatile
 16549                           
 16550                           ;mcc_generated_files/eusart.c: 101:     RC1STA = 0x90;
 16551  12F1  3090               	movlw	144
 16552  12F2  009D               	movwf	29	;volatile
 16553                           
 16554                           ;mcc_generated_files/eusart.c: 104:     TX1STA = 0x24;
 16555  12F3  3024               	movlw	36
 16556  12F4  009E               	movwf	30	;volatile
 16557                           
 16558                           ;mcc_generated_files/eusart.c: 107:     SP1BRGL = 0xA0;
 16559  12F5  30A0               	movlw	160
 16560  12F6  009B               	movwf	27	;volatile
 16561                           
 16562                           ;mcc_generated_files/eusart.c: 110:     SP1BRGH = 0x01;
 16563  12F7  3001               	movlw	1
 16564  12F8  009C               	movwf	28	;volatile
 16565                           
 16566                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
 16567  12F9  30AE               	movlw	low _EUSART_DefaultFramingErrorHandler
 16568  12FA  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
 16569  12FB  301D               	movlw	high _EUSART_DefaultFramingErrorHandler
 16570  12FC  00F2               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
 16571  12FD  319E  2620  3192   	fcall	_EUSART_SetFramingErrorHandler
 16572                           
 16573                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
 16574  1300  30D2               	movlw	low _EUSART_DefaultOverrunErrorHandler
 16575  1301  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
 16576  1302  301D               	movlw	high _EUSART_DefaultOverrunErrorHandler
 16577  1303  00F2               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
 16578  1304  319E  2626  3192   	fcall	_EUSART_SetOverrunErrorHandler
 16579                           
 16580                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
 16581  1307  30B1               	movlw	low _EUSART_DefaultErrorHandler
 16582  1308  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler
 16583  1309  301D               	movlw	high _EUSART_DefaultErrorHandler
 16584  130A  00F2               	movwf	EUSART_SetErrorHandler@interruptHandler+1
 16585  130B  319E  261A         	fcall	_EUSART_SetErrorHandler
 16586                           
 16587                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
 16588  130D  0022               	movlb	2	; select bank2
 16589  130E  01E1               	clrf	_eusartRxLastError^(0+256)	;volatile
 16590                           
 16591                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
 16592  130F  0021               	movlb	1	; select bank1
 16593  1310  01EF               	clrf	_eusartTxHead^(0+128)	;volatile
 16594                           
 16595                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
 16596  1311  01EE               	clrf	_eusartTxTail^(0+128)	;volatile
 16597                           
 16598                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
 16599  1312  3008               	movlw	8
 16600  1313  00F3               	movwf	??_EUSART_Initialize
 16601  1314  0873               	movf	??_EUSART_Initialize,w
 16602  1315  0022               	movlb	2	; select bank2
 16603  1316  00EB               	movwf	_eusartTxBufferRemaining^(0+256)	;volatile
 16604                           
 16605                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
 16606  1317  01FC               	clrf	_eusartRxHead	;volatile
 16607                           
 16608                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
 16609  1318  0021               	movlb	1	; select bank1
 16610  1319  01ED               	clrf	_eusartRxTail^(0+128)	;volatile
 16611                           
 16612                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
 16613  131A  0022               	movlb	2	; select bank2
 16614  131B  01E2               	clrf	_eusartRxCount^(0+256)	;volatile
 16615                           
 16616                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
 16617  131C  0021               	movlb	1	; select bank1
 16618  131D  1691               	bsf	17,5	;volatile
 16619  131E  0008               	return
 16620  131F                     __end_of_EUSART_Initialize:	
 16621                           
 16622                           	psect	text92
 16623  1E32                     __ptext92:	
 16624 ;; *************** function _EUSART_SetTxInterruptHandler *****************
 16625 ;; Defined at:
 16626 ;;		line 285 in file "mcc_generated_files/eusart.c"
 16627 ;; Parameters:    Size  Location     Type
 16628 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 16629 ;;		 -> EUSART_Transmit_ISR(1), 
 16630 ;; Auto vars:     Size  Location     Type
 16631 ;;		None
 16632 ;; Return value:  Size  Location     Type
 16633 ;;                  1    wreg      void 
 16634 ;; Registers used:
 16635 ;;		wreg
 16636 ;; Tracked objects:
 16637 ;;		On entry : 0/0
 16638 ;;		On exit  : 0/0
 16639 ;;		Unchanged: 0/0
 16640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16641 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16644 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16645 ;;Total ram usage:        2 bytes
 16646 ;; Hardware stack levels used:    1
 16647 ;; Hardware stack levels required when called:    4
 16648 ;; This function calls:
 16649 ;;		Nothing
 16650 ;; This function is called by:
 16651 ;;		_EUSART_Initialize
 16652 ;; This function uses a non-reentrant model
 16653 ;;
 16654                           
 16655                           
 16656                           ;psect for function _EUSART_SetTxInterruptHandler
 16657  1E32                     _EUSART_SetTxInterruptHandler:	
 16658                           
 16659                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
 16660                           
 16661                           ;incstack = 0
 16662                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
 16663  1E32  0872               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
 16664  1E33  0022               	movlb	2	; select bank2
 16665  1E34  00EA               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+256)
 16666  1E35  0871               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
 16667  1E36  00E9               	movwf	_EUSART_TxDefaultInterruptHandler^(0+256)
 16668  1E37  0008               	return
 16669  1E38                     __end_of_EUSART_SetTxInterruptHandler:	
 16670                           
 16671                           	psect	text93
 16672  1E2C                     __ptext93:	
 16673 ;; *************** function _EUSART_SetRxInterruptHandler *****************
 16674 ;; Defined at:
 16675 ;;		line 289 in file "mcc_generated_files/eusart.c"
 16676 ;; Parameters:    Size  Location     Type
 16677 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 16678 ;;		 -> EUSART_Receive_ISR(1), 
 16679 ;; Auto vars:     Size  Location     Type
 16680 ;;		None
 16681 ;; Return value:  Size  Location     Type
 16682 ;;                  1    wreg      void 
 16683 ;; Registers used:
 16684 ;;		wreg
 16685 ;; Tracked objects:
 16686 ;;		On entry : 0/0
 16687 ;;		On exit  : 0/0
 16688 ;;		Unchanged: 0/0
 16689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16690 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16693 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16694 ;;Total ram usage:        2 bytes
 16695 ;; Hardware stack levels used:    1
 16696 ;; Hardware stack levels required when called:    4
 16697 ;; This function calls:
 16698 ;;		Nothing
 16699 ;; This function is called by:
 16700 ;;		_EUSART_Initialize
 16701 ;; This function uses a non-reentrant model
 16702 ;;
 16703                           
 16704                           
 16705                           ;psect for function _EUSART_SetRxInterruptHandler
 16706  1E2C                     _EUSART_SetRxInterruptHandler:	
 16707                           
 16708                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
 16709                           
 16710                           ;incstack = 0
 16711                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
 16712  1E2C  0872               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
 16713  1E2D  0022               	movlb	2	; select bank2
 16714  1E2E  00E8               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+256)
 16715  1E2F  0871               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
 16716  1E30  00E7               	movwf	_EUSART_RxDefaultInterruptHandler^(0+256)
 16717  1E31  0008               	return
 16718  1E32                     __end_of_EUSART_SetRxInterruptHandler:	
 16719                           
 16720                           	psect	text94
 16721  1E26                     __ptext94:	
 16722 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
 16723 ;; Defined at:
 16724 ;;		line 277 in file "mcc_generated_files/eusart.c"
 16725 ;; Parameters:    Size  Location     Type
 16726 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 16727 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
 16728 ;; Auto vars:     Size  Location     Type
 16729 ;;		None
 16730 ;; Return value:  Size  Location     Type
 16731 ;;                  1    wreg      void 
 16732 ;; Registers used:
 16733 ;;		wreg
 16734 ;; Tracked objects:
 16735 ;;		On entry : 0/0
 16736 ;;		On exit  : 0/0
 16737 ;;		Unchanged: 0/0
 16738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16739 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16742 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16743 ;;Total ram usage:        2 bytes
 16744 ;; Hardware stack levels used:    1
 16745 ;; Hardware stack levels required when called:    4
 16746 ;; This function calls:
 16747 ;;		Nothing
 16748 ;; This function is called by:
 16749 ;;		_EUSART_Initialize
 16750 ;; This function uses a non-reentrant model
 16751 ;;
 16752                           
 16753                           
 16754                           ;psect for function _EUSART_SetOverrunErrorHandler
 16755  1E26                     _EUSART_SetOverrunErrorHandler:	
 16756                           
 16757                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
 16758                           
 16759                           ;incstack = 0
 16760                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
 16761  1E26  0872               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
 16762  1E27  0023               	movlb	3	; select bank3
 16763  1E28  00D8               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+384)
 16764  1E29  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
 16765  1E2A  00D7               	movwf	_EUSART_OverrunErrorHandler^(0+384)
 16766  1E2B  0008               	return
 16767  1E2C                     __end_of_EUSART_SetOverrunErrorHandler:	
 16768                           
 16769                           	psect	text95
 16770  1E20                     __ptext95:	
 16771 ;; *************** function _EUSART_SetFramingErrorHandler *****************
 16772 ;; Defined at:
 16773 ;;		line 273 in file "mcc_generated_files/eusart.c"
 16774 ;; Parameters:    Size  Location     Type
 16775 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 16776 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
 16777 ;; Auto vars:     Size  Location     Type
 16778 ;;		None
 16779 ;; Return value:  Size  Location     Type
 16780 ;;                  1    wreg      void 
 16781 ;; Registers used:
 16782 ;;		wreg
 16783 ;; Tracked objects:
 16784 ;;		On entry : 0/0
 16785 ;;		On exit  : 0/0
 16786 ;;		Unchanged: 0/0
 16787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16788 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16791 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16792 ;;Total ram usage:        2 bytes
 16793 ;; Hardware stack levels used:    1
 16794 ;; Hardware stack levels required when called:    4
 16795 ;; This function calls:
 16796 ;;		Nothing
 16797 ;; This function is called by:
 16798 ;;		_EUSART_Initialize
 16799 ;; This function uses a non-reentrant model
 16800 ;;
 16801                           
 16802                           
 16803                           ;psect for function _EUSART_SetFramingErrorHandler
 16804  1E20                     _EUSART_SetFramingErrorHandler:	
 16805                           
 16806                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
 16807                           
 16808                           ;incstack = 0
 16809                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
 16810  1E20  0872               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
 16811  1E21  0023               	movlb	3	; select bank3
 16812  1E22  00DA               	movwf	(_EUSART_FramingErrorHandler+1)^(0+384)
 16813  1E23  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
 16814  1E24  00D9               	movwf	_EUSART_FramingErrorHandler^(0+384)
 16815  1E25  0008               	return
 16816  1E26                     __end_of_EUSART_SetFramingErrorHandler:	
 16817                           
 16818                           	psect	text96
 16819  1E1A                     __ptext96:	
 16820 ;; *************** function _EUSART_SetErrorHandler *****************
 16821 ;; Defined at:
 16822 ;;		line 281 in file "mcc_generated_files/eusart.c"
 16823 ;; Parameters:    Size  Location     Type
 16824 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 16825 ;;		 -> EUSART_DefaultErrorHandler(1), 
 16826 ;; Auto vars:     Size  Location     Type
 16827 ;;		None
 16828 ;; Return value:  Size  Location     Type
 16829 ;;                  1    wreg      void 
 16830 ;; Registers used:
 16831 ;;		wreg
 16832 ;; Tracked objects:
 16833 ;;		On entry : 0/0
 16834 ;;		On exit  : 0/0
 16835 ;;		Unchanged: 0/0
 16836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16837 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16840 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16841 ;;Total ram usage:        2 bytes
 16842 ;; Hardware stack levels used:    1
 16843 ;; Hardware stack levels required when called:    4
 16844 ;; This function calls:
 16845 ;;		Nothing
 16846 ;; This function is called by:
 16847 ;;		_EUSART_Initialize
 16848 ;; This function uses a non-reentrant model
 16849 ;;
 16850                           
 16851                           
 16852                           ;psect for function _EUSART_SetErrorHandler
 16853  1E1A                     _EUSART_SetErrorHandler:	
 16854                           
 16855                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
 16856                           
 16857                           ;incstack = 0
 16858                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
 16859  1E1A  0872               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
 16860  1E1B  0023               	movlb	3	; select bank3
 16861  1E1C  00D6               	movwf	(_EUSART_ErrorHandler+1)^(0+384)
 16862  1E1D  0871               	movf	EUSART_SetErrorHandler@interruptHandler,w
 16863  1E1E  00D5               	movwf	_EUSART_ErrorHandler^(0+384)
 16864  1E1F  0008               	return
 16865  1E20                     __end_of_EUSART_SetErrorHandler:	
 16866                           
 16867                           	psect	intentry
 16868  0004                     __pintentry:	
 16869 ;; *************** function _INTERRUPT_InterruptManager *****************
 16870 ;; Defined at:
 16871 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 16872 ;; Parameters:    Size  Location     Type
 16873 ;;		None
 16874 ;; Auto vars:     Size  Location     Type
 16875 ;;		None
 16876 ;; Return value:  Size  Location     Type
 16877 ;;                  1    wreg      void 
 16878 ;; Registers used:
 16879 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16880 ;; Tracked objects:
 16881 ;;		On entry : 0/0
 16882 ;;		On exit  : 0/0
 16883 ;;		Unchanged: 0/0
 16884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16889 ;;Total ram usage:        0 bytes
 16890 ;; Hardware stack levels used:    1
 16891 ;; Hardware stack levels required when called:    3
 16892 ;; This function calls:
 16893 ;;		Absolute function
 16894 ;;		_EUSART_Receive_ISR
 16895 ;;		_EUSART_Transmit_ISR
 16896 ;; This function is called by:
 16897 ;;		Interrupt level 1
 16898 ;; This function uses a non-reentrant model
 16899 ;;
 16900                           
 16901  0004                     _INTERRUPT_InterruptManager:	
 16902                           
 16903                           ;incstack = 0
 16904  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 16905                           
 16906                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 16907  0005  3180               	pagesel	$
 16908                           
 16909                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
 16910  0006  1F0B               	btfss	11,6	;volatile
 16911  0007  2821               	goto	i1l319
 16912                           
 16913                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 16914  0008  0021               	movlb	1	; select bank1
 16915  0009  1E11               	btfss	17,4	;volatile
 16916  000A  2815               	goto	i1l314
 16917  000B  0020               	movlb	0	; select bank0
 16918  000C  1E11               	btfss	17,4	;volatile
 16919  000D  2815               	goto	i1l314
 16920                           
 16921                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART_TxDefaultInterruptHandler();
 16922  000E  0022               	movlb	2	; select bank2
 16923  000F  086A               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+256),w
 16924  0010  008A               	movwf	10
 16925  0011  0869               	movf	_EUSART_TxDefaultInterruptHandler^(0+256),w
 16926  0012  000A               	callw
 16927  0013  3180               	pagesel	$
 16928                           
 16929                           ;mcc_generated_files/interrupt_manager.c: 60:         }
 16930  0014  2821               	goto	i1l319
 16931  0015                     i1l314:	
 16932                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
 16933                           
 16934  0015  0021               	movlb	1	; select bank1
 16935  0016  1E91               	btfss	17,5	;volatile
 16936  0017  2821               	goto	i1l319
 16937  0018  0020               	movlb	0	; select bank0
 16938  0019  1E91               	btfss	17,5	;volatile
 16939  001A  2821               	goto	i1l319
 16940                           
 16941                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_RxDefaultInterruptHandler();
 16942  001B  0022               	movlb	2	; select bank2
 16943  001C  0868               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+256),w
 16944  001D  008A               	movwf	10
 16945  001E  0867               	movf	_EUSART_RxDefaultInterruptHandler^(0+256),w
 16946  001F  000A               	callw
 16947  0020  3180               	pagesel	$
 16948  0021                     i1l319:	
 16949                           ;mcc_generated_files/interrupt_manager.c: 69:     }
 16950                           
 16951                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 16952                           
 16953  0021  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 16954  0022  0009               	retfie
 16955  0023                     __end_of_INTERRUPT_InterruptManager:	
 16956                           
 16957                           	psect	text98
 16958  105B                     __ptext98:	
 16959 ;; *************** function _EUSART_Transmit_ISR *****************
 16960 ;; Defined at:
 16961 ;;		line 206 in file "mcc_generated_files/eusart.c"
 16962 ;; Parameters:    Size  Location     Type
 16963 ;;		None
 16964 ;; Auto vars:     Size  Location     Type
 16965 ;;		None
 16966 ;; Return value:  Size  Location     Type
 16967 ;;                  1    wreg      void 
 16968 ;; Registers used:
 16969 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16970 ;; Tracked objects:
 16971 ;;		On entry : 0/0
 16972 ;;		On exit  : 0/0
 16973 ;;		Unchanged: 0/0
 16974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16977 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16978 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16979 ;;Total ram usage:        1 bytes
 16980 ;; Hardware stack levels used:    1
 16981 ;; This function calls:
 16982 ;;		Nothing
 16983 ;; This function is called by:
 16984 ;;		_EUSART_Initialize
 16985 ;;		_INTERRUPT_InterruptManager
 16986 ;; This function uses a non-reentrant model
 16987 ;;
 16988                           
 16989                           
 16990                           ;psect for function _EUSART_Transmit_ISR
 16991  105B                     _EUSART_Transmit_ISR:	
 16992                           
 16993                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
 16994                           
 16995                           ;incstack = 0
 16996                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 16997  105B  3008               	movlw	8
 16998  105C  0022               	movlb	2	; select bank2
 16999  105D  026B               	subwf	_eusartTxBufferRemaining^(0+256),w	;volatile
 17000  105E  1803               	skipnc
 17001  105F  2878               	goto	i1l228
 17002                           
 17003                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TX1
      +                          REG = eusartTxBuffer[eusartTxTail++];
 17004  1060  0021               	movlb	1	; select bank1
 17005  1061  086E               	movf	_eusartTxTail^(0+128),w
 17006  1062  3EC5               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 17007  1063  0086               	movwf	6
 17008  1064  3001               	movlw	1	; select bank3/4
 17009  1065  0087               	movwf	7
 17010  1066  0801               	movf	1,w
 17011  1067  0023               	movlb	3	; select bank3
 17012  1068  009A               	movwf	26	;volatile
 17013  1069  3001               	movlw	1
 17014  106A  00F0               	movwf	??_EUSART_Transmit_ISR
 17015  106B  0870               	movf	??_EUSART_Transmit_ISR,w
 17016  106C  0021               	movlb	1	; select bank1
 17017  106D  07EE               	addwf	_eusartTxTail^(0+128),f	;volatile
 17018                           
 17019                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 17020  106E  3008               	movlw	8
 17021  106F  026E               	subwf	_eusartTxTail^(0+128),w	;volatile
 17022  1070  1803               	btfsc	3,0
 17023                           
 17024                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
 17025  1071  01EE               	clrf	_eusartTxTail^(0+128)	;volatile
 17026                           
 17027                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
 17028  1072  3001               	movlw	1
 17029  1073  00F0               	movwf	??_EUSART_Transmit_ISR
 17030  1074  0870               	movf	??_EUSART_Transmit_ISR,w
 17031  1075  0022               	movlb	2	; select bank2
 17032  1076  07EB               	addwf	_eusartTxBufferRemaining^(0+256),f	;volatile
 17033                           
 17034                           ;mcc_generated_files/eusart.c: 218:     }
 17035  1077  0008               	return
 17036  1078                     i1l228:	
 17037                           ;mcc_generated_files/eusart.c: 219:     else
 17038                           
 17039                           
 17040                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          1bits.TXIE = 0;
 17041  1078  0021               	movlb	1	; select bank1
 17042  1079  1211               	bcf	17,4	;volatile
 17043  107A  0008               	return
 17044  107B                     __end_of_EUSART_Transmit_ISR:	
 17045                           
 17046                           	psect	text99
 17047  11FC                     __ptext99:	
 17048 ;; *************** function _EUSART_Receive_ISR *****************
 17049 ;; Defined at:
 17050 ;;		line 225 in file "mcc_generated_files/eusart.c"
 17051 ;; Parameters:    Size  Location     Type
 17052 ;;		None
 17053 ;; Auto vars:     Size  Location     Type
 17054 ;;		None
 17055 ;; Return value:  Size  Location     Type
 17056 ;;                  1    wreg      void 
 17057 ;; Registers used:
 17058 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17059 ;; Tracked objects:
 17060 ;;		On entry : 0/0
 17061 ;;		On exit  : 0/0
 17062 ;;		Unchanged: 0/0
 17063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17068 ;;Total ram usage:        0 bytes
 17069 ;; Hardware stack levels used:    1
 17070 ;; Hardware stack levels required when called:    2
 17071 ;; This function calls:
 17072 ;;		Absolute function
 17073 ;;		_EUSART_DefaultErrorHandler
 17074 ;;		_EUSART_DefaultFramingErrorHandler
 17075 ;;		_EUSART_DefaultOverrunErrorHandler
 17076 ;;		_EUSART_RxDataHandler
 17077 ;; This function is called by:
 17078 ;;		_EUSART_Initialize
 17079 ;;		_INTERRUPT_InterruptManager
 17080 ;; This function uses a non-reentrant model
 17081 ;;
 17082                           
 17083                           
 17084                           ;psect for function _EUSART_Receive_ISR
 17085  11FC                     _EUSART_Receive_ISR:	
 17086                           
 17087                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 17088                           
 17089                           ;incstack = 0
 17090                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17091  11FC  087C               	movf	_eusartRxHead,w	;volatile
 17092  11FD  3E46               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 17093  11FE  0086               	movwf	6
 17094  11FF  3001               	movlw	1	; select bank2/3
 17095  1200  0087               	movwf	7
 17096  1201  0181               	clrf	1
 17097                           
 17098                           ;mcc_generated_files/eusart.c: 230:     if(RC1STAbits.FERR){
 17099  1202  0023               	movlb	3	; select bank3
 17100  1203  1D1D               	btfss	29,2	;volatile
 17101  1204  2A10               	goto	i1l5766
 17102                           
 17103                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 17104  1205  087C               	movf	_eusartRxHead,w	;volatile
 17105  1206  3E46               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 17106  1207  0086               	movwf	6
 17107  1208  3001               	movlw	1	; select bank2/3
 17108  1209  0087               	movwf	7
 17109  120A  1481               	bsf	1,1
 17110                           
 17111                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
 17112  120B  085A               	movf	(_EUSART_FramingErrorHandler+1)^(0+384),w
 17113  120C  008A               	movwf	10
 17114  120D  0859               	movf	_EUSART_FramingErrorHandler^(0+384),w
 17115  120E  000A               	callw
 17116  120F  3191               	pagesel	$
 17117  1210                     i1l5766:	
 17118                           
 17119                           ;mcc_generated_files/eusart.c: 235:     if(RC1STAbits.OERR){
 17120  1210  0023               	movlb	3	; select bank3
 17121  1211  1C9D               	btfss	29,1	;volatile
 17122  1212  2A1E               	goto	i1l5772
 17123                           
 17124                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 17125  1213  087C               	movf	_eusartRxHead,w	;volatile
 17126  1214  3E46               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 17127  1215  0086               	movwf	6
 17128  1216  3001               	movlw	1	; select bank2/3
 17129  1217  0087               	movwf	7
 17130  1218  1501               	bsf	1,2
 17131                           
 17132                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
 17133  1219  0858               	movf	(_EUSART_OverrunErrorHandler+1)^(0+384),w
 17134  121A  008A               	movwf	10
 17135  121B  0857               	movf	_EUSART_OverrunErrorHandler^(0+384),w
 17136  121C  000A               	callw
 17137  121D  3191               	pagesel	$
 17138  121E                     i1l5772:	
 17139                           
 17140                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
 17141  121E  087C               	movf	_eusartRxHead,w	;volatile
 17142  121F  3E46               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 17143  1220  0086               	movwf	6
 17144  1221  3001               	movlw	1	; select bank2/3
 17145  1222  0087               	movwf	7
 17146  1223  0801               	movf	1,w
 17147  1224  1903               	btfsc	3,2
 17148  1225  2A2D               	goto	i1l5776
 17149                           
 17150                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
 17151  1226  0023               	movlb	3	; select bank3
 17152  1227  0856               	movf	(_EUSART_ErrorHandler+1)^(0+384),w
 17153  1228  008A               	movwf	10
 17154  1229  0855               	movf	_EUSART_ErrorHandler^(0+384),w
 17155  122A  000A               	callw
 17156  122B  3191               	pagesel	$
 17157                           
 17158                           ;mcc_generated_files/eusart.c: 242:     } else {
 17159  122C  0008               	return
 17160  122D                     i1l5776:	
 17161                           
 17162                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
 17163  122D  319F  277B         	fcall	_EUSART_RxDataHandler
 17164  122F  0008               	return
 17165  1230                     __end_of_EUSART_Receive_ISR:	
 17166                           
 17167                           	psect	text100
 17168  1DD2                     __ptext100:	
 17169 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 17170 ;; Defined at:
 17171 ;;		line 261 in file "mcc_generated_files/eusart.c"
 17172 ;; Parameters:    Size  Location     Type
 17173 ;;		None
 17174 ;; Auto vars:     Size  Location     Type
 17175 ;;		None
 17176 ;; Return value:  Size  Location     Type
 17177 ;;                  1    wreg      void 
 17178 ;; Registers used:
 17179 ;;		None
 17180 ;; Tracked objects:
 17181 ;;		On entry : 0/0
 17182 ;;		On exit  : 0/0
 17183 ;;		Unchanged: 0/0
 17184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17189 ;;Total ram usage:        0 bytes
 17190 ;; Hardware stack levels used:    1
 17191 ;; This function calls:
 17192 ;;		Nothing
 17193 ;; This function is called by:
 17194 ;;		_EUSART_Initialize
 17195 ;;		_EUSART_Receive_ISR
 17196 ;; This function uses a non-reentrant model
 17197 ;;
 17198                           
 17199                           
 17200                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 17201  1DD2                     _EUSART_DefaultOverrunErrorHandler:	
 17202                           
 17203                           ;mcc_generated_files/eusart.c: 264:     RC1STAbits.CREN = 0;
 17204                           
 17205                           ;incstack = 0
 17206                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 17207  1DD2  0023               	movlb	3	; select bank3
 17208  1DD3  121D               	bcf	29,4	;volatile
 17209                           
 17210                           ;mcc_generated_files/eusart.c: 265:     RC1STAbits.CREN = 1;
 17211  1DD4  161D               	bsf	29,4	;volatile
 17212  1DD5  0008               	return
 17213  1DD6                     __end_of_EUSART_DefaultOverrunErrorHandler:	
 17214                           
 17215                           	psect	text101
 17216  1DAE                     __ptext101:	
 17217 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 17218 ;; Defined at:
 17219 ;;		line 259 in file "mcc_generated_files/eusart.c"
 17220 ;; Parameters:    Size  Location     Type
 17221 ;;		None
 17222 ;; Auto vars:     Size  Location     Type
 17223 ;;		None
 17224 ;; Return value:  Size  Location     Type
 17225 ;;                  1    wreg      void 
 17226 ;; Registers used:
 17227 ;;		None
 17228 ;; Tracked objects:
 17229 ;;		On entry : 0/0
 17230 ;;		On exit  : 0/0
 17231 ;;		Unchanged: 0/0
 17232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17237 ;;Total ram usage:        0 bytes
 17238 ;; Hardware stack levels used:    1
 17239 ;; This function calls:
 17240 ;;		Nothing
 17241 ;; This function is called by:
 17242 ;;		_EUSART_Initialize
 17243 ;;		_EUSART_Receive_ISR
 17244 ;; This function uses a non-reentrant model
 17245 ;;
 17246                           
 17247                           
 17248                           ;psect for function _EUSART_DefaultFramingErrorHandler
 17249  1DAE                     _EUSART_DefaultFramingErrorHandler:	
 17250                           
 17251                           ;incstack = 0
 17252                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 17253  1DAE  0008               	return
 17254  1DAF                     __end_of_EUSART_DefaultFramingErrorHandler:	
 17255                           
 17256                           	psect	text102
 17257  1DB1                     __ptext102:	
 17258 ;; *************** function _EUSART_DefaultErrorHandler *****************
 17259 ;; Defined at:
 17260 ;;		line 269 in file "mcc_generated_files/eusart.c"
 17261 ;; Parameters:    Size  Location     Type
 17262 ;;		None
 17263 ;; Auto vars:     Size  Location     Type
 17264 ;;		None
 17265 ;; Return value:  Size  Location     Type
 17266 ;;                  1    wreg      void 
 17267 ;; Registers used:
 17268 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17269 ;; Tracked objects:
 17270 ;;		On entry : 0/0
 17271 ;;		On exit  : 0/0
 17272 ;;		Unchanged: 0/0
 17273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17278 ;;Total ram usage:        0 bytes
 17279 ;; Hardware stack levels used:    1
 17280 ;; Hardware stack levels required when called:    1
 17281 ;; This function calls:
 17282 ;;		_EUSART_RxDataHandler
 17283 ;; This function is called by:
 17284 ;;		_EUSART_Initialize
 17285 ;;		_EUSART_Receive_ISR
 17286 ;; This function uses a non-reentrant model
 17287 ;;
 17288                           
 17289                           
 17290                           ;psect for function _EUSART_DefaultErrorHandler
 17291  1DB1                     _EUSART_DefaultErrorHandler:	
 17292                           
 17293                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
 17294                           
 17295                           ;incstack = 0
 17296                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 17297  1DB1  319F  277B         	fcall	_EUSART_RxDataHandler
 17298  1DB3  0008               	return
 17299  1DB4                     __end_of_EUSART_DefaultErrorHandler:	
 17300                           
 17301                           	psect	text103
 17302  1F7B                     __ptext103:	
 17303 ;; *************** function _EUSART_RxDataHandler *****************
 17304 ;; Defined at:
 17305 ;;		line 249 in file "mcc_generated_files/eusart.c"
 17306 ;; Parameters:    Size  Location     Type
 17307 ;;		None
 17308 ;; Auto vars:     Size  Location     Type
 17309 ;;		None
 17310 ;; Return value:  Size  Location     Type
 17311 ;;                  1    wreg      void 
 17312 ;; Registers used:
 17313 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17314 ;; Tracked objects:
 17315 ;;		On entry : 0/0
 17316 ;;		On exit  : 0/0
 17317 ;;		Unchanged: 0/0
 17318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17321 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17322 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17323 ;;Total ram usage:        1 bytes
 17324 ;; Hardware stack levels used:    1
 17325 ;; This function calls:
 17326 ;;		Nothing
 17327 ;; This function is called by:
 17328 ;;		_EUSART_Receive_ISR
 17329 ;;		_EUSART_DefaultErrorHandler
 17330 ;; This function uses a non-reentrant model
 17331 ;;
 17332                           
 17333                           
 17334                           ;psect for function _EUSART_RxDataHandler
 17335  1F7B                     _EUSART_RxDataHandler:	
 17336                           
 17337                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RC1REG;
 17338                           
 17339                           ;incstack = 0
 17340                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 17341  1F7B  0023               	movlb	3	; select bank3
 17342  1F7C  0819               	movf	25,w	;volatile
 17343  1F7D  00F0               	movwf	??_EUSART_RxDataHandler
 17344  1F7E  087C               	movf	_eusartRxHead,w
 17345  1F7F  3EBD               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 17346  1F80  0086               	movwf	6
 17347  1F81  3001               	movlw	1	; select bank3/4
 17348  1F82  0087               	movwf	7
 17349  1F83  0870               	movf	??_EUSART_RxDataHandler,w
 17350  1F84  0081               	movwf	1
 17351  1F85  3001               	movlw	1
 17352  1F86  00F0               	movwf	??_EUSART_RxDataHandler
 17353  1F87  0870               	movf	??_EUSART_RxDataHandler,w
 17354  1F88  07FC               	addwf	_eusartRxHead,f	;volatile
 17355                           
 17356                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 17357  1F89  3008               	movlw	8
 17358  1F8A  027C               	subwf	_eusartRxHead,w	;volatile
 17359  1F8B  1803               	btfsc	3,0
 17360                           
 17361                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
 17362  1F8C  01FC               	clrf	_eusartRxHead	;volatile
 17363                           
 17364                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
 17365  1F8D  3001               	movlw	1
 17366  1F8E  00F0               	movwf	??_EUSART_RxDataHandler
 17367  1F8F  0870               	movf	??_EUSART_RxDataHandler,w
 17368  1F90  0022               	movlb	2	; select bank2
 17369  1F91  07E2               	addwf	_eusartRxCount^(0+256),f	;volatile
 17370  1F92  0008               	return
 17371  1F93                     __end_of_EUSART_RxDataHandler:	
 17372  007E                     btemp	set	126	;btemp
 17373  007E                     int$flags	set	126
 17374  007E                     wtemp0	set	126


Data Sizes:
    Strings     52
    Constant    32
    Data        27
    BSS         162
    Persistent  51
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80     77      80
    BANK2            80     38      80
    BANK3            80      0      59
    BANK4            80      0      80
    BANK5            80      0      23
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_DO_TX$2211$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C1_DO_TX$2216	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C1_DO_TX$2211	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_MasterFsm$2210	const PTR FTN()enum E7150 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    S701$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[15]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S1847_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    sendPWM@data	PTR unsigned char  size(1) Largest target is 23
		 -> main@dummy_data(BANK2[23]), 

    I2C1_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_SetBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@reg(BANK0[1]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    S701$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@reg(BANK0[1]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@reg(BANK0[1]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    S701$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C1_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    S701$callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    fsmStateTable	const PTR FTN()enum E7150[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    S94$data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _vfpfcnvrt->_fputc
    _efgtoa->___fltol
    _tolower->_isupper
    _pad->_fputc
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    ___flmul->__Umul8_16
    ___fldiv->___xxtofl
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback
    _SYSTEM_Initialize->_EUSART_Initialize
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    ___fldiv->___xxtofl
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _readPressureSensor->_printf
    _printf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_readPressureSensor

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                31    31      0  118700
                                             75 BANK1      2     2      0
                                              9 BANK2     29    29      0
                  _SYSTEM_Initialize
                 _readPressureSensor
                            _sendPWM
                            _setZero
 ---------------------------------------------------------------------------------
 (1) _setZero                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sendPWM                                              3     3      0     278
                                              1 COMMON     3     3      0
                            _setHigh
                             _setLow
 ---------------------------------------------------------------------------------
 (2) _setLow                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setHigh                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readPressureSensor                                   9     9      0  117784
                                              0 BANK2      9     9      0
             _I2C1_Read1ByteRegister
                            ___fldiv
                           ___xxtofl
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              10     4      6   30454
                                             65 BANK1     10     4      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3   30181
                                             57 BANK1      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           43    41      2   29722
                                             61 BANK0     19    17      2
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                              9     5      4     410
                                              1 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              66    61      5   25448
                                             52 BANK0      9     4      5
                                              0 BANK1     57    57      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1142
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               8     6      2     641
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    3241
                                              8 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     123
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    1226
                                              0 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     834
                                              4 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      66
                                              3 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (7) _EUSART_Write                                         2     2      0      44
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             32 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       16    12      4     287
                                              1 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             11     7      4     381
                                              1 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    3727
                                             26 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             20    12      8    3302
                                              1 COMMON     8     0      8
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             26    18      8    3025
                                              0 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (7) __Umul8_16                                            9     7      2     799
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     790
                                             26 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     490
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             26    18      8    2185
                                              6 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              7     3      4     448
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              9     5      4     452
                                              1 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Read1ByteRegister                               4     3      1   84671
                                              8 BANK0      4     3      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C1_SetAddressNackCallback                          4     1      3    1870
                                              6 COMMON     4     1      3
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (3) _I2C1_Open                                            3     3      0      46
                                              1 COMMON     3     3      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterWrite                                     0     0      0   78300
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterOperation                                 3     3      0   78300
                                             11 COMMON     1     1      0
                                              6 BANK0      2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (5) _I2C1_Poller                                          0     0      0   78254
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterFsm                                       3     3      0   78254
                                              3 BANK0      3     3      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_TX_EMPTY                                     3     3      0   19547
                                              0 BANK0      3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterSetIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_TX                                           3     3      0   19569
                                              0 BANK0      3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_DO_SEND_RESTART_WRITE                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C1_DO_SEND_RESTART_READ                            0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_SEND_ADR_WRITE                               0     0      0      22
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_SEND_ADR_READ                                0     0      0      22
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterSendTxData                                1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_RX_ACK                                       0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_RX                                           3     3      0   19547
                                              0 BANK0      3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterSendAck                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterGetRxData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_RX_NACK_STOP                                 0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_RX_NACK_RESTART                              0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterSendNack                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_RCEN                                         0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterStartRx                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_ADDRESS_NACK                                 3     3      0   19547
                                              0 BANK0      3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                1     0      1    3852
                                             10 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                1     0      1    3852
                                             10 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              1     0      1    3874
                                             10 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                1     0      1    3852
                                             10 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                1     0      1    3852
                                             10 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C1_SetDataCompleteCallback                         4     1      3    2478
                                              6 COMMON     4     1      3
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (4) _I2C1_SetCallback                                     5     2      3     914
                                              1 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (3) _I2C1_SetBuffer                                       4     2      2    1352
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _I2C1_DO_SEND_STOP                                    0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_DO_SEND_RESTART                                 0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_CallbackReturnStop                              1     0      1       0
                                             10 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _I2C1_CallbackReturnReset                             1     0      1     265
                                             10 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C1_Close                                           2     2      0      24
                                              1 COMMON     2     2      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                  _EUSART_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     490
                                              3 COMMON     1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          0     0      0       0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _TMR2_Initialize
     _WDT_Initialize
   _readPressureSensor
     _I2C1_Read1ByteRegister
       _I2C1_Close
         _I2C1_MasterClearIrq
         _I2C1_MasterClose
         _I2C1_MasterDisableIrq
       _I2C1_MasterWrite
         _I2C1_MasterOperation
           _I2C1_MasterStart
           _I2C1_Poller
             _I2C1_MasterFsm
               _I2C1_DO_ADDRESS_NACK *
                 Absolute function(Fake) *
                 _I2C1_CallbackReturnReset *
                 _I2C1_CallbackReturnStop *
                 _I2C1_DO_SEND_RESTART *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_STOP *
                   _I2C1_MasterStop
                 _rd1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
               _I2C1_DO_IDLE *
               _I2C1_DO_RCEN *
                 _I2C1_MasterStartRx
               _I2C1_DO_RESET *
               _I2C1_DO_RX *
                 Absolute function(Fake) *
                 _I2C1_CallbackReturnReset *
                 _I2C1_CallbackReturnStop *
                 _I2C1_DO_RX_NACK_RESTART *
                   _I2C1_MasterSendNack
                 _I2C1_DO_RX_NACK_STOP *
                   _I2C1_MasterSendNack
                 _I2C1_MasterGetRxData *
                 _I2C1_MasterSendAck *
                 _rd1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
               _I2C1_DO_RX_ACK *
                 _I2C1_MasterSendAck
               _I2C1_DO_RX_NACK_RESTART *
                 _I2C1_MasterSendNack
               _I2C1_DO_RX_NACK_STOP *
                 _I2C1_MasterSendNack
               _I2C1_DO_SEND_ADR_READ *
                 _I2C1_MasterSendTxData
               _I2C1_DO_SEND_ADR_WRITE *
                 _I2C1_MasterSendTxData
               _I2C1_DO_SEND_RESTART *
                 _I2C1_MasterEnableRestart
               _I2C1_DO_SEND_RESTART_READ *
                 _I2C1_MasterEnableRestart
               _I2C1_DO_SEND_RESTART_WRITE *
                 _I2C1_MasterEnableRestart
               _I2C1_DO_SEND_STOP *
                 _I2C1_MasterStop
               _I2C1_DO_TX *
                 Absolute function(Fake) *
                 _I2C1_CallbackReturnReset *
                 _I2C1_CallbackReturnStop *
                 _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_STOP *
                   _I2C1_MasterStop
                 _I2C1_MasterIsNack *
                 _I2C1_MasterSendTxData *
                 _rd1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
               _I2C1_DO_TX_EMPTY *
                 Absolute function(Fake) *
                 _I2C1_CallbackReturnReset *
                 _I2C1_CallbackReturnStop *
                 _I2C1_DO_SEND_RESTART *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_STOP *
                   _I2C1_MasterStop
                 _I2C1_MasterSetIrq *
                 _rd1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
               _I2C1_MasterClearIrq *
               _I2C1_MasterIsNack *
             _I2C1_MasterWaitForEvent
       _I2C1_Open
         _I2C1_MasterClearIrq
         _I2C1_MasterOpen
       _I2C1_SetAddressNackCallback
         _I2C1_SetCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
         _I2C1_SetCallback
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _printf
       _vfprintf
         _vfpfcnvrt
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
               ___xxtofl (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 __Umul8_16
             ___flmul
               __Umul8_16
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 __Umul8_16
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___xxtofl (ARG)
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART_Write
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _EUSART_Write
           _isupper
           _strncmp
           _tolower
             _isupper
   _sendPWM
     _setHigh
     _setLow
   _setZero

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4D      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     26      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      3B      11       73.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     19F      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      17      16       28.8%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     19F      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Feb 19 17:11:51 2020

                ?_EUSART_SetRxInterruptHandler 0071                                   ___fldiv@aexp 003F  
                                 ___fldiv@bexp 003E                                   ___fldiv@sign 0037  
                                  __CFG_CP$OFF 0000                                   ___awdiv@sign 0077  
                          __Umul8_16@word_mpld 0077                                    __CFG_LVP$ON 0000  
                                          l216 10A9                                            l541 07FE  
                                          l607 14D0                                            l623 1381  
                                          l840 15B4                                            l764 1DFE  
                                          _PR2 001E                                   __CFG_CPD$OFF 0000  
                        ?_I2C1_MasterOperation 0070                         ??_EUSART_RxDataHandler 0070  
                                          _pad 13F9                 ?_EUSART_SetFramingErrorHandler 0071  
                      __size_of_PMD_Initialize 0008                                   ___awmod@sign 0077  
                              _TMR2_Initialize 1E5F                                            wreg 0009  
                       ?_I2C1_MasterSendTxData 0070              __size_of_I2C1_MasterEnableRestart 0003  
                         _I2C1_DO_RX_NACK_STOP 1DF6                                   ___flmul@aexp 0032  
                    ?_I2C1_MasterEnableRestart 0070                                   ___flmul@bexp 0033  
                                 ___flmul@sign 002D                                   ___flmul@temp 0038  
                                 ___flmul@prod 0034                           I2C1_SetBuffer@buffer 0074  
                                 ___fltol@exp1 007B                                    main@hdr_trl 0140  
                                         l1031 1431                                           l1032 143D  
                                         l1028 1411                        ??_rd2RegCompleteHandler 007B  
                                         l1330 1697                                           l1066 0299  
                                         l1067 0286                                           l1077 02D7  
                                         l1318 081B                                           l1350 1535  
                                         l1319 0835                                           l1327 1649  
                                         l1095 0494                                           l1530 0A54  
                                         l1506 0928                                           l1450 0C3F  
                                         l1620 07C0                                           l1454 0CD2  
                                         l1527 0A2F                                           l1471 0D55  
                                         l4200 1143                                           l4120 14A1  
                                         l1528 0A47                                           l1456 0CB5  
                                         l5002 0FC9                                           l4124 14A4  
                                         l1492 0DCC                                           l1484 0DB4  
                                         l4206 1146                                           l4142 14EA  
                                         l4134 14AA                                           l4230 1171  
                                         l1590 089D                                           l1558 0FF3  
                                         l4128 14A7                                           l4240 1177  
                                         l1584 0867                                           l5008 0FE0  
                                         l4234 1174                                           l4082 1239  
                                         l4164 1383                                           l5028 1E8A  
                                         l4260 1FBC                                           l1597 08B1  
                                         l4190 113C                                           l4174 1389  
                                         l1598 08BB                                           l1694 1FF1  
                                         l4086 125C                                           l4168 1386  
                                         l4600 1466                                           l4194 113F  
                                         l4602 1472                                           l4522 1606  
                                         l4258 1FB0                                           l4612 148D  
                                         l4700 14F5                                           l4518 1601  
                                         l4534 1045                                           ?_pad 0028  
                                         l4616 1495                                           l4608 1484  
                                         l4640 1336                                           l4632 1330  
                                         l6312 0D86                                           l6304 0D7B  
                                         l4720 1523                                           l4704 14FE  
                                         l4528 1629                                           l6144 10C5  
                                         l5344 13EB                                           l5336 13E5  
                                         l4642 1342                                           l4650 1357  
                                         l4466 1FEB                                           l6306 0D7D  
                                         l6170 0C17                                           l4730 1542  
                                         l4722 1531                                           l4570 07A3  
                                         l6410 00B8                                           l6402 00A6  
                                         l5338 13C1                                           l5508 101B  
                                         l5380 1FDE                                           l4628 1329  
                                         l4820 09B3                                           l6316 0D88  
                                         l6236 0CBD                                           l6228 0C85  
                                         l6164 0C0C                                           l4564 0779  
                                         l3940 109E                                           l4486 1121  
                                         l5374 1FD4                                           l4590 145E  
                                         l4654 135F                                           l4646 134E  
                                         l4814 099A                                           l4822 097C  
                                         l6334 0DC4                                           l6262 0CF2  
                                         l6254 0CE0                                           l6238 0CBF  
                                         l6246 0CCD                                           l4566 078A  
                                         l6414 00BF                                           l6422 00D2  
                                         l3960 10FF                                           l5376 1FD9  
                                         l5720 08D6                                           l4584 1453  
                                         l4840 09D5                                           l4824 09B8  
                                         l4760 0904                                           l4680 167D  
                                         l4912 0E11                                           l6264 0CF4  
                                         l6272 0D03                                           l6192 0C37  
                                         l6168 0C0F                                           l6352 140F  
                                         l6512 02E4                                           l6504 02D1  
                                         l6432 0105                                           l6440 012A  
                                         l5706 08AF                                           l4850 09EE  
                                         l4754 08F9                                           l4914 0E13  
                                         l6338 0DC8                                           l6290 0D67  
                                         l6282 0D4D                                           l3954 10BE  
                                         l6610 05EF                                           l6522 02F8  
                                         l6514 02E8                                           l6450 015D  
                                         l5708 08A2                                           l4860 0A17  
                                         l4676 1663                                           l4924 0E29  
                                         l4916 0E1B                                           l6188 0C34  
                                         l6348 1407                                           l5812 12BD  
                                         l4846 09EC                                           l4838 09BE  
                                         l4774 091D                                           l4758 08FC  
                                         l6382 0847                                           l6198 0C49  
                                         l6358 1413                                           l6606 05D1  
                                         l6542 0443                                           l6526 0300  
                                         l6470 01D3                                           l6702 0AD6  
                                         l5814 12C0                                           l6536 0312  
                                         l6472 020D                                           l5808 12AC  
                                         l4874 0A50                                           l4794 0953  
                                         l4778 0920                                           l6298 0D74  
                                         l6634 062A                                           l6618 0608  
                                         l6570 04FC                                           l6538 03F0  
                                         l6490 029C                                           l6466 01A3  
                                         l6458 0182                                           l6714 0B16  
                                         l5692 0876                                           l4788 0947  
                                         l6636 0632                                           l6556 0492  
                                         l6548 0464                                           l6476 023D  
                                         l6724 0B6F                                           l6732 0B9C  
                                         l6804 1739                                           l5686 085F  
                                         l4894 0DEE                                           l6646 062E  
                                         l6590 051B                                           l6558 049B  
                                         l6478 0262                                           l6742 0BC4  
                                         l5696 087A                                           l4984 0F89  
                                         l4976 0F5B                                           l4896 0DF0  
                                         l6672 06BB                                           l6656 0681  
                                         l6648 0669                                           l6680 06DA  
                                         l6592 0539                                           l6496 02A4  
                                         l6488 0293                                           l6770 119A  
                                         l5698 088A                                           l4978 0F72  
                                         l4898 0DF8                                           l6738 0BBE  
                                         l6762 11D2                                           l6940 118E  
                                         l6780 11C0                                           l4988 0F8B  
                                         l6748 0BCF                                           l6764 11F3  
                                         l6942 139C                                           l4998 0FB4  
                                         l6598 054F                                           l6838 1587  
                                         l6944 14C2                                           l6946 1159  
                                         l6858 15A4                                           STR_1 2012  
                                         STR_2 2000                                           STR_3 2021  
                                         STR_4 2029                                           STR_7 2025  
                                         STR_8 202D                                           _LATA 010C  
                                         _LATB 010D                                           _LATC 010E  
                                         u4005 0793                                           u3205 125A  
                                         u4105 147D                                           u4025 07AC  
                                         u4115 1485                                           u4205 134F  
                                         u4075 1469                                           u4095 1473  
                                         u4175 1339                                           u4335 1507  
                                         u4195 1348                                           u4515 0984  
                                         u6220 1F5C                                           _PMD0 0911  
                                         u4605 09CA                                           u4525 098B  
                                         u3725 1FF2                                           u4365 1524  
                                         _PMD1 0912                                           u6230 1F5D  
                                         _PMD2 0913                                           u3815 15D7  
                                         _PMD3 0914                                           _PMD4 0915  
                                         u4545 0994                                           _PMD5 0916  
                                         u4555 09A8                                           u4395 1539  
                                         u3835 15F0                                           u6340 0CA3  
                                         u4805 0ECE                                           u6350 0CA4  
                                         u3870 1621                                           u4815 0F24  
                                         u6335 0C99                                           u3935 0712  
                                         u7055 0320                                           u3880 1622  
                                         u3960 0740                                           u4585 09C1  
                                         u4825 0F3B                                           u6505 0D68  
                                         u3865 1613                                           u3945 072D  
                                         u4675 0A05                                           u4835 0F4A  
                                         u7260 06AB                                           u7340 0B54  
                                         u5805 08A9                                           u4685 0A20  
                                         u4845 0F5E                                           u6605 0D9F  
                                         u3965 073C                                           u7245 0674  
                                         u6710 108B                                           u7270 06AC  
                                         u7350 0B55                                           u4695 0A39  
                                         u4935 0FA2                                           u6463 0D15  
                                         u6455 0CF8                                           u7175 05DF  
                                         u7415 16E0                                           u6720 108C  
                                         u7440 157E                                           u4945 0FBD  
                                         u4865 0F67                                           u6385 0CC3  
                                         u3985 0765                                           u7185 05ED  
                                         u7425 170D                                           u4955 0FD3  
                                         u4795 0E9F                                           u7507 12D6  
                                         u6820 00F3                                           u5845 08C3  
                                         u5765 0883                                           u7517 1771  
                                         u6830 00F4                                           u5944 12B5  
                                         u5785 0897                                           u5945 12B4  
                                         u6860 014B                                           u6765 0843  
                                         u7477 1596                                           u6870 014C  
                                         u6695 141D                                           u7487 12A6  
                                         u6945 0291                                           u7497 12C3  
                                         u6975 02B3                                           u6985 02CD  
                                         _TMR2 001D                                           _WPUA 020C  
                                         _WPUB 020D                                           _WPUC 020E  
                      ??_wr2RegCompleteHandler 007B                               ??_I2C1_MasterFsm 0023  
             __size_of_I2C1_DO_RX_NACK_RESTART 0004                                   __CFG_WRT$OFF 0000  
                                __CFG_FCMEN$ON 0000                      ??_I2C1_CallbackReturnStop 007B  
                                         _dbuf 0220                                           _main 1551  
                                         _prec 015A                                           _nout 0156  
                                         pad@i 002C                                           pad@p 0029  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         pad@w 002E                                           btemp 007E  
                                __CFG_BOREN$ON 0000                                  ___fpclassifyf 15B6  
                                __CFG_BORV$LOW 0000                                           start 0023  
                             ??_I2C1_SetBuffer 0073                                ___fldiv@new_exp 0038  
                              _PWM5_Initialize 1EB3                                   _tolower$1907 0079  
                                __CFG_CSWEN$ON 0000                                  __CFG_MCLRE$ON 0000  
             __size_of_rdBlkRegCompleteHandler 0017                  I2C1_CallbackReturnStop@funPtr 007A  
                                        ??_pad 002B                                  ?_EUSART_Write 0070  
               __size_of_OSCILLATOR_Initialize 0009                  __end_of_OSCILLATOR_Initialize 1E81  
                                ___fltol@sign1 007A                              __end_of_I2C1_Open 0800  
                              __end_of___fladd 0DD4                                          ?_main 0070  
                              __end_of___fldiv 0A59                                __end_of___awdiv 149A  
                              __end_of___flneg 1E8A                                          STR_11 2031  
                                        STR_13 2031                                  __CFG_WDTE$OFF 0000  
                              __end_of___awmod 1364                                __end_of___flmul 1000  
                              __end_of___flsub 103C                                __end_of___fltol 1551  
                              ___awdiv@divisor 0071                                          _T2CON 001F  
                               __CFG_DEBUG$OFF 0000                                          i1l314 0015  
                                        i1l228 1078                                          i1l319 0021  
                              ___awdiv@counter 0076                                          _OSCEN 091D  
                                 vfpfcnvrt@fmt 005D                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                       ??_I2C1_MasterGetRxData 0071                                          _RXPPS 0E24  
                        ?_I2C1_DO_RX_NACK_STOP 0070                     ??_I2C1_CallbackReturnReset 007B  
                            ??_I2C1_MasterOpen 0071                              ??_I2C1_MasterStop 0071  
                            ??_I2C1_Initialize 0071                                          _flags 015C  
                               _WDT_Initialize 1DD6                                          _fputc 1230  
                                        _fputs 10C1                                          _value 0160  
                                        pad@fp 0030                                          _width 0158  
                              __end_of_sendPWM 12DC                                          _putch 1E15  
                                        main@i 0145                                          main@n 0144  
                              __end_of_setHigh 1E9E                                __end_of_setZero 1DD2  
                              __end_of_isupper 1F64                                          pclath 000A  
                                        status 0003                    __size_of_I2C1_MasterSendAck 0004  
                                        wtemp0 007E                                 ?___fpclassifyf 0071  
                              __end_of_tolower 109D                                   ??_I2C1_DO_RX 0020  
                                 ??_I2C1_DO_TX 0020                                __end_of_strncmp 13F9  
                       ??_I2C1_DO_ADDRESS_NACK 0020                                   ??_I2C1_Close 0071  
                  __size_of_I2C1_MasterStartRx 0003                                  _fsmStateTable 1800  
                              __initialization 0025                                   __end_of_main 15B6  
                               ??_EUSART_Write 0071                        __end_of_TMR2_Initialize 1E67  
                  ?_INTERRUPT_InterruptManager 0070                 ??_EUSART_SetRxInterruptHandler 0073  
                       ??_I2C1_MasterOperation 007B                                         ??_main 00EB  
                __size_of_I2C1_DO_SEND_RESTART 0004                             __end_of_I2C1_DO_RX 13AB  
                           __end_of_I2C1_DO_TX 14EC                         __end_of_WDT_Initialize 1DDA  
                           __end_of_I2C1_Close 101D      __end_of_EUSART_DefaultFramingErrorHandler 1DAF  
   __size_of_EUSART_DefaultFramingErrorHandler 0001            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 1DAE  
                      ?_I2C1_Read1ByteRegister 0028                     _EUSART_OverrunErrorHandler 01D7  
                                       ?_fputc 0074                                         ?_fputs 0020  
                             ___awdiv@dividend 0073                                         _ANSELA 018C  
                                       ?_putch 0070                                         _ANSELB 018D  
                                       _ANSELC 018E                             __CFG_RSTOSC$HFINT1 0000  
                                       _RC1REG 0199                                         _RC1STA 019D  
                                       _RB4PPS 0E9C                                         _RB5PPS 0E9D  
                                       _RB7PPS 0E9F                                         _ODCONA 028C  
                                       _ODCONB 028D                                         _RC6PPS 0EA6  
                                       _ODCONC 028E                        __end_of_PWM5_Initialize 1EBF  
         __size_of_I2C1_SetAddressNackCallback 000C                                         i1l5772 121E  
                                       i1l5766 1210                                         i1l5776 122D  
                                       _INLVLA 038C                                         _INLVLB 038D  
                                       _INLVLC 038E                                         _OSCFRQ 091F  
                                       _TX1REG 019A                                         _WDTCON 0097  
                                       _TX1STA 019E                              ?_I2C1_MasterClose 0070  
                             __end_of___xxtofl 08DF                        ??_I2C1_MasterDisableIrq 0071  
                            ?_I2C1_MasterStart 0070                              ?_I2C1_MasterWrite 0070  
                     ?_I2C1_MasterWaitForEvent 0070                             ??_I2C1_MasterClose 0071  
                             _I2C1_DO_TX_EMPTY 1139                                 __CFG_PWRTE$OFF 0000  
                           ??_I2C1_MasterStart 0071                             ??_I2C1_MasterWrite 007C  
                                 vfprintf@cfmt 00DF                                         ___flge 162E  
                                       ___fleq 0800                                      ??___fladd 0020  
                                    ??___fldiv 002E                                      ??___awdiv 0075  
                                    ??___flneg 0075                                 __CFG_STVREN$ON 0000  
                                    ??___awmod 0075                                      ??___flmul 0028  
                                    ??___flsub 007A                                      ??___fltol 0075  
                                       _efgtoa 005D                            _EUSART_Transmit_ISR 105B  
                                       _floorf 06F1                   __size_of_I2C1_MasterClearIrq 0003  
                             ___awdiv@quotient 0078                                         _setLow 1E9E  
                              ___awmod@divisor 0071                                ___awmod@counter 0076  
                                       _printf 1F25                                         pad@buf 0028  
                     ??_I2C1_DO_SEND_ADR_WRITE 0072                                         _strcpy 103C  
                                       _strlen 1FAB                              ?_I2C1_SetCallback 0071  
                       ??_I2C1_DO_RX_NACK_STOP 0071                          _I2C1_DO_SEND_ADR_READ 1E67  
                                       fputc@c 0074                                 _PMD_Initialize 1E57  
                                       fputs@c 0024                                         fputs@i 0025  
                                       fputs@s 0027                  ?_I2C1_SetDataCompleteCallback 0076  
                           __size_of__Umul8_16 001F                                ___fpclassifyf@e 0020  
                              ___fpclassifyf@u 0022                                      ??_sendPWM 0071  
                              ___fpclassifyf@x 0071                                      ??_setHigh 0071  
                           ??_I2C1_SetCallback 0074                 __end_of_I2C1_Read1ByteRegister 11C9  
                              ?_WDT_Initialize 0070                                      ??_setZero 0071  
                                    ??_isupper 0073                               __end_of_vfprintf 11FC  
                                    ??_tolower 0020                   __size_of_I2C1_MasterSendNack 0004  
                                    ??_strncmp 0075                           ?_EUSART_Transmit_ISR 0070  
                      _I2C1_DO_RX_NACK_RESTART 1DFA                                     ___flge@ff1 003A  
                                   ___flge@ff2 003E                                ??___fpclassifyf 0075  
                                 ___xxtofl@arg 0022                                   ___xxtofl@exp 0021  
                            _SYSTEM_Initialize 1F93                                   ___xxtofl@val 0071  
                                   ___fleq@ff1 0071                                     ___fleq@ff2 0075  
               I2C1_SetDataCompleteCallback@cb 0076                        __end_of__initialization 0059  
                                   ___flneg@f1 0071                I2C1_MasterOperation@returnValue 0027  
                           ?_SYSTEM_Initialize 0070                                     ___fltol@f1 0071  
                                ??_I2C1_Poller 007B           __end_of_EUSART_SetTxInterruptHandler 1E38  
        __size_of_EUSART_SetTxInterruptHandler 0006                   _EUSART_SetTxInterruptHandler 1E32  
                      _rdBlkRegCompleteHandler 1F36                                 __pcstackCOMMON 0070  
                                 __pidataBANK2 1000                                   __pidataBANK5 1F64  
                          ??_SYSTEM_Initialize 0074               __end_of_I2C1_MasterEnableRestart 1DC3  
                   __end_of_readPressureSensor 1800                                  __end_of_fputc 1265  
                                __end_of_fputs 10E7                                  __end_of_putch 1E1A  
                             ?_TMR2_Initialize 0070                         __end_of_PMD_Initialize 1E5F  
                 ??_I2C1_DO_SEND_RESTART_WRITE 0071                        ??_I2C1_MasterSendTxData 0071  
                         _eusartRxStatusBuffer 0146                          __end_of_I2C1_DO_RESET 1E15  
              ??_EUSART_SetOverrunErrorHandler 0073                                    sendPWM@data 0073  
                                      ??_fputc 0077                      __end_of_SYSTEM_Initialize 1FAB  
                                      ??_fputs 0021                          ??_EUSART_Transmit_ISR 0070  
                                      ??_putch 0073                                     __pbssBANK1 00ED  
                                   __pbssBANK2 0146                                     __pbssBANK3 01A0  
                                   __pbssBANK4 0220                __end_of_I2C1_MasterWaitForEvent 1E02  
                         __end_of_EUSART_Write 10C1                               ?_PWM5_Initialize 0070  
               __size_of_rd2RegCompleteHandler 0010                  __end_of_rd2RegCompleteHandler 1F15  
                         I2C1_Open@returnValue 0073                 __size_of_wr2RegCompleteHandler 0010  
                __end_of_wr2RegCompleteHandler 1EF5                    __size_of_EUSART_Receive_ISR 0034  
                        _rd1RegCompleteHandler 1EF5                              _I2C1_DO_SEND_STOP 1DEE  
                            __end_of__Umul8_16 2000                          _wr1RegCompleteHandler 1F15  
          __size_of_I2C1_DO_SEND_RESTART_WRITE 0004                                     __pmaintext 1551  
                     rd1RegCompleteHandler@ptr 007A                                        ?___flge 003A  
                ?_EUSART_SetTxInterruptHandler 0071                                        ?___fleq 0071  
             _EUSART_TxDefaultInterruptHandler 0169                             ?_I2C1_DO_SEND_STOP 0070  
                              __CFG_PPS1WAY$ON 0000                                _I2C1_MasterOpen 1EA8  
                                   __pintentry 0004                                        ?_efgtoa 0054  
                              _I2C1_MasterStop 1DC3                                _I2C1_Initialize 1E6F  
                          __end_of_I2C1_Poller 1E94                                        ?_floorf 0040  
                                      ?_setLow 0070                        __size_of_I2C1_DO_RX_ACK 0004  
                 ??_EUSART_DefaultErrorHandler 0071                                        ?_printf 00E1  
                              ?_PMD_Initialize 0070                         ?_I2C1_DO_SEND_ADR_READ 0070  
                          ??_I2C1_DO_SEND_STOP 0071                                        ?_strcpy 0071  
                                      ?_strlen 0071                __size_of_I2C1_DO_SEND_ADR_WRITE 0007  
                                _eusartRxCount 0162                                      ?___xxtofl 0071  
                            _I2C1_MasterIsNack 1E38                                        _SP1BRGH 019C  
                                      _SP1BRGL 019B                                        _OSCCON1 0919  
                                      _OSCCON3 091B                                      _I2C1_Open 07C9  
                           __size_of_vfpfcnvrt 0199                      ??_I2C1_DO_RX_NACK_RESTART 0071  
                __size_of_EUSART_RxDataHandler 0018                                        _OSCTUNE 091E  
                                      _PWM5DCH 0618                                        _PWM5DCL 0617  
                                      _PWM5CON 0619                              _I2C1_MasterSetIrq 1DCC  
           __size_of_I2C1_DO_SEND_RESTART_READ 0004                                        _SSP1ADD 0212  
                                      _SLRCONA 030C                                        _SLRCONB 030D  
                                      _SLRCONC 030E                                        _SSP1BUF 0211  
                           ?_I2C1_MasterIsNack 0070                     ?_I2C1_DO_SEND_RESTART_READ 0070  
                     ??_EUSART_SetErrorHandler 0073                 ??_I2C1_SetDataCompleteCallback 0079  
                           ?_I2C1_MasterSetIrq 0070                                 main@dummy_data 0129  
                          ??_I2C1_MasterIsNack 0071                      __end_of_I2C1_DO_SEND_STOP 1DF2  
                    ??_rdBlkRegCompleteHandler 007B                             I2C1_SetCallback@cb 0071  
                          ??_I2C1_MasterSetIrq 0071            __size_of_EUSART_DefaultErrorHandler 0003  
                              __size_of___flge 007C                                __size_of___fleq 0049  
                                      ___fladd 0BF2                                        ___fldiv 08DF  
                                      ___awdiv 1449                                        ___flneg 1E81  
                                      ___awmod 131F                                        ___flmul 0DD4  
                                      ___flsub 101D                                        ___fltol 14EC  
                                    ?_vfprintf 00D9                                __size_of_efgtoa 0694  
                              __size_of_floorf 00D8                                  ?_I2C1_DO_IDLE 0070  
                                ?_I2C1_DO_RCEN 0070                                __size_of_setLow 000A  
                                      __ptext1 1DCF                                        __ptext2 129F  
                                      __ptext3 1E9E                                        __ptext4 1E94  
                                      __ptext5 16AA                                        __ptext6 1F25  
                                      __ptext7 11C9                                        __ptext8 0A59  
                                      __ptext9 13AB                       _I2C1_MasterEnableRestart 1DC0  
                              __size_of_printf 0011                      __end_of_I2C1_MasterIsNack 1E3E  
                 ?_I2C1_SetAddressNackCallback 0076                                __size_of_strcpy 001F  
                              __size_of_strlen 0018                          _OSCILLATOR_Initialize 1E78  
                                    _T2CONbits 001F                                   __size_of_pad 0050  
                    __end_of_I2C1_MasterSetIrq 1DCF                                     ??___xxtofl 0075  
                     __end_of_I2C1_DO_TX_EMPTY 1168                               ___awmod@dividend 0073  
                                      _sendPWM 129F                                        _setHigh 1E94  
                     ??_PIN_MANAGER_Initialize 0071                       wr1RegCompleteHandler@ptr 007A  
                                   ?_I2C1_Open 0070                                        _setZero 1DCF  
                                      _isupper 1F4D                                        efgtoa@c 0058  
                                      efgtoa@d 00B8                                        efgtoa@e 00D1  
                                      efgtoa@f 0054                                        efgtoa@g 00CD  
                                      efgtoa@h 00C3                                        efgtoa@i 00CB  
                                      efgtoa@l 00C7                                        efgtoa@m 00B4  
                                      efgtoa@n 00D3                                        efgtoa@p 00BD  
                                      efgtoa@t 00B0                                        efgtoa@u 00D5  
                                      efgtoa@w 00C0                  __size_of_I2C1_MasterGetRxData 0003  
                     ?_I2C1_CallbackReturnStop 007A                     __size_of_SYSTEM_Initialize 0018  
                                      _tolower 107B                                        clrloop0 1E45  
                                      _strncmp 13AB              __end_of_I2C1_DO_SEND_RESTART_READ 1DE6  
                         end_of_initialization 0059                     __end_of_I2C1_MasterSendAck 1DE2  
                                      floorf@e 004E                                        floorf@m 004A  
                                      floorf@u 0050                                        floorf@x 0040  
                          _I2C1_MasterClearIrq 1DB4          __end_of_EUSART_SetOverrunErrorHandler 1E2C  
       __size_of_EUSART_SetOverrunErrorHandler 0006                  _EUSART_SetOverrunErrorHandler 1E26  
                                      fputc@fp 0076                                        init_ram 1E4A  
                   __end_of_I2C1_MasterStartRx 1DC9                                        fputs@fp 0020  
                       ?_rd1RegCompleteHandler 007A                                        initloop 1E4B  
                       _I2C1_DO_SEND_ADR_WRITE 1E50                   __end_of_I2C1_DO_SEND_RESTART 1DEE  
                            _EUSART_Initialize 12DC                        __end_of_I2C1_MasterOpen 1EB3  
                       ?_wr1RegCompleteHandler 007A                        __end_of_I2C1_MasterStop 1DC6  
                      __end_of_I2C1_Initialize 1E78              __size_of_I2C1_CallbackReturnReset 0002  
                                  _I2C1_Poller 1E8A                 __size_of_I2C1_MasterDisableIrq 0003  
                    ?_I2C1_CallbackReturnReset 007A                  __end_of_I2C1_MasterDisableIrq 1DBD  
                                  _I2C1_Status 01A0                  __size_of_I2C1_DO_ADDRESS_NACK 002F  
                           ?_EUSART_Initialize 0070                              __end_of_vfpfcnvrt 0BF2  
                                   efgtoa@mode 00C2                                     efgtoa@sign 00BA  
                      __size_of_I2C1_MasterFsm 002A                            _I2C1_MasterSendNack 1DDA  
          __end_of_I2C1_SetAddressNackCallback 1ED7                    _I2C1_SetAddressNackCallback 1ECB  
                                   ??_vfprintf 00DC                           ?_I2C1_MasterClearIrq 0070  
                               ??_I2C1_DO_IDLE 0071                                 ??_I2C1_DO_RCEN 0071  
           __end_of_I2C1_DO_SEND_RESTART_WRITE 1DEA                     _I2C1_DO_SEND_RESTART_WRITE 1DE6  
                                      strcpy@d 0077                                        strlen@a 0074  
                                      strcpy@s 0075                                        strlen@s 0075  
                    __size_of_I2C1_MasterClose 0003                            ??_EUSART_Initialize 0073  
                             ??_WDT_Initialize 0071                 ??_EUSART_SetTxInterruptHandler 0073  
                              _raw_temperature 015E                                      _PORTCbits 000E  
                      __size_of_I2C1_SetBuffer 000E                __end_of_rdBlkRegCompleteHandler 1F4D  
             __size_of_I2C1_MasterWaitForEvent 0004                      __size_of_I2C1_MasterStart 0003  
                    __size_of_I2C1_MasterWrite 0004                                    ___fladd@grs 002B  
                __size_of_I2C1_MasterOperation 001E                  ??_I2C1_SetAddressNackCallback 0079  
                    I2C1_Read1ByteRegister@reg 0028                                  ___xxtofl@sign 0020  
              I2C1_SetDataCompleteCallback@ptr 0078                          __size_of_EUSART_Write 0024  
                                  ___fldiv@grs 003A                                    ___fldiv@rem 0033  
               I2C1_CallbackReturnReset@funPtr 007A                           ?_I2C1_MasterSendNack 0070  
                             __CFG_FEXTOSC$OFF 0000                __size_of_EUSART_SetErrorHandler 0006  
                                  ___flmul@grs 002E                      __end_of_EUSART_Initialize 131F  
                    __size_of_I2C1_SetCallback 0028                     rdBlkRegCompleteHandler@ptr 007A  
                   __size_of_I2C1_DO_SEND_STOP 0004                          ??_I2C1_MasterClearIrq 0071  
                               __end_of___flge 16AA                                 __end_of___fleq 0849  
           __end_of_EUSART_DefaultErrorHandler 1DB4                     _EUSART_DefaultErrorHandler 1DB1  
                                  vfpfcnvrt@ap 005E                                    vfpfcnvrt@ct 0067  
                                  vfpfcnvrt@fp 006F                                 _I2C1_DO_RX_ACK 1DF2  
                               __end_of_efgtoa 06F1                                   _EUSART_Write 109D  
                               __end_of_floorf 07C9                         ?_OSCILLATOR_Initialize 0070  
                                   floorf@F524 014E                     __size_of_I2C1_MasterIsNack 0006  
                               __end_of_setLow 1EA8                __end_of_I2C1_CallbackReturnStop 1DB1  
                               __end_of_printf 1F36                 __size_of_I2C1_MasterSendTxData 0005  
                __end_of_I2C1_MasterSendTxData 1E0B                     __size_of_I2C1_MasterSetIrq 0003  
                               __end_of_strcpy 105B                                 __end_of_strlen 1FC3  
                          start_initialization 0025                                    ??_I2C1_Open 0071  
                __size_of_I2C1_DO_RX_NACK_STOP 0004                __size_of_PIN_MANAGER_Initialize 003A  
                           _readPressureSensor 16AA                                    __end_of_pad 1449  
                        ??_I2C1_MasterSendNack 0071   EUSART_SetRxInterruptHandler@interruptHandler 0071  
 EUSART_SetTxInterruptHandler@interruptHandler 0071                                    putch@txData 0073  
                          ?_readPressureSensor 0070                          __end_of___fpclassifyf 162E  
                     I2C1_SetBuffer@bufferSize 0071                               ?_I2C1_MasterOpen 0070  
                             ?_I2C1_MasterStop 0070                               ?_I2C1_Initialize 0070  
               ?_EUSART_SetOverrunErrorHandler 0071                               __CFG_LPBOREN$OFF 0000  
                                  vfprintf@fmt 00D9                     _EUSART_FramingErrorHandler 01D9  
                                     ??___flge 0042                                       ??___fleq 0020  
                             ??_PMD_Initialize 0071                         __end_of_I2C1_DO_RX_ACK 1DF6  
                       _EUSART_SetErrorHandler 1E1A                        ??_I2C1_DO_SEND_ADR_READ 0071  
                                     ??_efgtoa 0059                                      __Umul8_16 1FE1  
                                  __pdataBANK2 016C                                    __pdataBANK5 02A0  
                                     ??_floorf 0044                                       ??_setLow 0071  
                         ??_readPressureSensor 0120                                       ??_printf 00E7  
                                     ??_strcpy 0073                                       ??_strlen 0073  
                             I2C1_Open@address 0072                                      ___fladd@a 0075  
                                    ___fladd@b 0071                                      ___fldiv@a 0026  
                                    ___fldiv@b 002A                    __end_of_EUSART_Transmit_ISR 107B  
                                    ___flmul@a 0024                                      ___flmul@b 0020  
                                  __pbssCOMMON 007C                           _I2C1_DO_SEND_RESTART 1DEA  
                                    ___flsub@a 003A                                      ___flsub@b 003E  
                                    ___latbits 0003                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00A0                                  __pcstackBANK2 0120  
                     __size_of_TMR2_Initialize 0008                              __size_of___xxtofl 0096  
                  ??_I2C1_DO_SEND_RESTART_READ 0071                     __end_of_EUSART_Receive_ISR 1230  
                         __end_of_I2C1_DO_IDLE 1E10                           __end_of_I2C1_DO_RCEN 1E44  
                   __size_of_EUSART_Initialize 0043               _EUSART_RxDefaultInterruptHandler 0167  
                I2C1_SetAddressNackCallback@cb 0076                                      __pnvBANK2 0167  
                                    __pnvBANK3 01CD                          _rd2RegCompleteHandler 1F05  
                        __end_of_fsmStateTable 1820                                    _efgtoa$1503 00A8  
                                  _efgtoa$1507 00AA                                    _efgtoa$1508 00AC  
                                  _efgtoa$1509 00AE                   __end_of_EUSART_RxDataHandler 1F93  
                                  _efgtoa$1497 00A4                                    _efgtoa$1498 00A6  
                       _PIN_MANAGER_Initialize 1265                          _wr2RegCompleteHandler 1EE5  
                   ??_I2C1_MasterEnableRestart 0071                       __size_of_PWM5_Initialize 000C  
                     rd2RegCompleteHandler@ptr 007A                                 _I2C1_MasterFsm 110F  
                       __size_of_I2C1_DO_RESET 0005                                       ?___fladd 0071  
                              ?_I2C1_DO_RX_ACK 0070                                       ?___fldiv 0026  
                                     ?___awdiv 0071                                      __ptext100 1DD2  
                                    __ptext101 1DAE                                      __ptext102 1DB1  
                                     ?___flneg 0071                                      __ptext103 1F7B  
                                     ?___awmod 0071                                       ?___flmul 0020  
                                     ?___flsub 003A                                       ?___fltol 0071  
                                   ?__Umul8_16 0071                                   _eusartRxHead 007C  
                                 _eusartTxHead 00EF                                   _eusartRxTail 00ED  
                                 _eusartTxTail 00EE                        _I2C1_MasterWaitForEvent 1DFE  
                             _I2C1_MasterClose 1DB7                       ??_I2C1_Read1ByteRegister 0029  
                               _I2C1_SetBuffer 1ED7                   ??_INTERRUPT_InterruptManager 0071  
                             _I2C1_MasterStart 1DBD                              __size_of_vfprintf 0033  
                             _I2C1_MasterWrite 1E02                        _eusartTxBufferRemaining 016B  
                                     _BAUD1CON 019F                          ?_I2C1_DO_SEND_RESTART 0070  
                                     ?_sendPWM 0070                                       ?_setHigh 0070  
                            ?_I2C1_DO_TX_EMPTY 0070                                       ?_setZero 0070  
                                     ?_isupper 0071               __end_of_I2C1_CallbackReturnReset 0004  
                           ??_I2C1_DO_TX_EMPTY 0020                                       ?_tolower 0077  
                               __size_of_fputc 0035                                 __size_of_fputs 0026  
                      ??_rd1RegCompleteHandler 007B                                       ?_strncmp 0071  
                      ?_I2C1_DO_SEND_ADR_WRITE 0070                      I2C1_MasterSendTxData@data 0071  
                               __size_of_putch 0005                                 _eusartRxBuffer 01BD  
                      ??_wr1RegCompleteHandler 007B                                 _eusartTxBuffer 01C5  
                             _I2C1_SetCallback 10E7         EUSART_SetErrorHandler@interruptHandler 0071  
                                     _LATCbits 010E                                     _I2C1_DO_RX 1364  
                                   _I2C1_DO_TX 149A                                      clear_ram0 1E44  
                                     _PIE1bits 0091                              _eusartRxLastError 0161  
                                   _I2C1_Close 1004                                   ?_I2C1_Poller 0070  
                       __end_of_I2C1_MasterFsm 1139            __size_of_INTERRUPT_InterruptManager 001F  
                 __end_of_I2C1_MasterGetRxData 1DCC                                       _PIR1bits 0011  
             __size_of_I2C1_CallbackReturnStop 0002                ??_EUSART_SetFramingErrorHandler 0073  
                           _I2C1_MasterSendAck 1DDE                      _I2C1_DO_SEND_RESTART_READ 1DE2  
                                    main@F7270 016C                                      main@F7272 02A0  
                                     _SSP1CON1 0215                                       _SSP1CON2 0216  
    __end_of_EUSART_DefaultOverrunErrorHandler 1DD6     __size_of_EUSART_DefaultOverrunErrorHandler 0004  
          ??_EUSART_DefaultOverrunErrorHandler 0070             ?_EUSART_DefaultOverrunErrorHandler 0070  
            _EUSART_DefaultOverrunErrorHandler 1DD2                         __end_of_I2C1_SetBuffer 1EE5  
                                     _SSP1STAT 0214           __end_of_I2C1_SetDataCompleteCallback 1ECB  
        __size_of_I2C1_SetDataCompleteCallback 000C                   _I2C1_SetDataCompleteCallback 1EBF  
                           _I2C1_MasterStartRx 1DC6                                      _vfpfcnvrt 0A59  
                  ?_I2C1_DO_SEND_RESTART_WRITE 0070                            ?_I2C1_MasterSendAck 0070  
                     ?_I2C1_DO_RX_NACK_RESTART 0070                            ?_I2C1_MasterStartRx 0070  
                 __end_of_I2C1_DO_ADDRESS_NACK 1197                       wr2RegCompleteHandler@ptr 007A  
               __end_of_I2C1_DO_SEND_ADR_WRITE 1E57                                  _I2C1_DO_RESET 1E10  
                                   vfpfcnvrt@c 006E                                     vfpfcnvrt@f 006A  
                        I2C1_Close@returnValue 0072                       ?_rdBlkRegCompleteHandler 007A  
                          I2C1_SetCallback@idx 0075                            I2C1_SetCallback@ptr 0073  
                         ??_I2C1_MasterSendAck 0071                              ??_TMR2_Initialize 0071  
                       ?_rd2RegCompleteHandler 007A                   __end_of_I2C1_MasterOperation 1FE1  
                       ?_wr2RegCompleteHandler 007A                           ??_I2C1_MasterStartRx 0071  
                              ?_I2C1_MasterFsm 0070                                     vfprintf@ap 00DB  
                                   vfprintf@fp 00DE                      ??_I2C1_MasterWaitForEvent 0071  
                        _I2C1_MasterDisableIrq 1DBA                        ??_OSCILLATOR_Initialize 0071  
                                  ??__Umul8_16 0073                            _EUSART_ErrorHandler 01D5  
                              ?_I2C1_SetBuffer 0071                               __size_of___fladd 01E2  
                             __size_of___fldiv 017A                               __size_of___awdiv 0051  
                             __size_of___flneg 0009                               __size_of___awmod 0045  
                             __size_of___flmul 022C                               __size_of___flsub 001F  
                             __size_of___fltol 0065                    ?_EUSART_DefaultErrorHandler 0070  
                                   ?_vfpfcnvrt 005D                                   _raw_pressure 0163  
              __size_of_I2C1_Read1ByteRegister 0032                              ??_PWM5_Initialize 0071  
            I2C1_Read1ByteRegister@returnValue 002B                         ??_I2C1_DO_SEND_RESTART 0071  
                           ___fpclassifyf@F463 0152                                       ___xxtofl 0849  
                               ?_I2C1_DO_RESET 0070                               __size_of_sendPWM 003D  
                         _EUSART_RxDataHandler 1F7B                          __size_of_I2C1_DO_IDLE 0005  
                             __size_of_setHigh 000A                          __size_of_I2C1_DO_RCEN 0006  
                                     __ptext10 005D                                       __ptext11 107B  
                                     __ptext20 06F1                                       __ptext12 1F4D  
                                     __ptext21 15B6                                       __ptext13 103C  
                                     __ptext30 08DF                                       __ptext22 14EC  
                                     __ptext14 13F9                                       __ptext31 131F  
                                     __ptext23 101D                                       __ptext15 1FAB  
                                     __ptext40 1E8A                                       __ptext32 1449  
                                     __ptext24 0BF2                                       __ptext16 10C1  
                                     __ptext41 1DFE                                       __ptext33 0849  
                                     __ptext25 1E81                                       __ptext17 1230  
                             __size_of_setZero 0003                                       __ptext50 1DE6  
                                     __ptext42 110F                                       __ptext34 1197  
                                     __ptext26 0DD4                                       __ptext18 1E15  
                                     __ptext51 1DE2                                       __ptext43 1168  
                                     __ptext35 1ECB                                       __ptext27 1FE1  
                                     __ptext19 109D                                       __ptext60 1E38  
                                     __ptext52 1E3E                                       __ptext44 1E10  
                                     __ptext36 07C9                                       __ptext28 162E  
                                     __ptext61 1E06                                       __ptext53 1364  
                                     __ptext45 1DFA                                       __ptext37 1EA8  
                                     __ptext29 0800                                       __ptext70 1F05  
                                     __ptext62 1DDE                                       __ptext54 149A  
                                     __ptext46 1DF6                                       __ptext38 1E02  
                                     __ptext71 1EF5                                       __ptext63 1DC9  
                                     __ptext55 1E50                                       __ptext47 1DF2  
                                     __ptext39 1FC3                                       __ptext80 1DBA  
                                     __ptext72 1EE5                                       __ptext64 1DDA  
                                     __ptext56 1E67                                       __ptext48 1DEE  
                                     __ptext81 1DB7                                       __ptext73 1EBF  
                                     __ptext65 1DC6                                       __ptext57 1E0B  
                                     __ptext49 1DEA                                       __ptext90 1E6F  
                                     __ptext82 1DB4                                       __ptext74 10E7  
                                     __ptext66 0002                                       __ptext58 1139  
                                     __ptext91 12DC                                       __ptext83 1F93  
                                     __ptext75 1ED7                                       __ptext67 1DAF  
                                     __ptext59 1DCC                                       __ptext92 1E32  
                                     __ptext84 1DD6                                       __ptext76 1DC3  
                                     __ptext68 1F36                                       __ptext93 1E2C  
                                     __ptext85 1E5F                                       __ptext77 1DC0  
                                     __ptext69 1F15                                       __ptext94 1E26  
                                     __ptext86 1EB3                                       __ptext78 1DBD  
                                     __ptext95 1E20                                       __ptext87 1E57  
                                     __ptext79 1004                                       __ptext96 1E1A  
                                     __ptext88 1265                                       __ptext89 1E78  
                                     __ptext98 105B                                       __ptext99 11FC  
                             __size_of_isupper 0017                                   _SSP1CON1bits 0215  
                                 _SSP1CON2bits 0216                               __size_of_tolower 0022  
                                   strcpy@dest 0078                               __size_of_strncmp 004E  
                     _I2C1_CallbackReturnReset 0002                                  __size_of_main 0065  
                                  ?_I2C1_DO_RX 0070                                    ?_I2C1_DO_TX 0070  
                  __end_of_I2C1_MasterClearIrq 1DB7                   __end_of_I2C1_DO_RX_NACK_STOP 1DFA  
                                  ?_I2C1_Close 0070                        ?_EUSART_SetErrorHandler 0071  
                                   _RC1STAbits 019D                                       efgtoa@fp 00BC  
                                     efgtoa@ne 00B6                                       efgtoa@pp 00B2  
                                     efgtoa@ou 00A0  EUSART_SetOverrunErrorHandler@interruptHandler 0071  
                                     int$flags 007E                                       _pressure 01D1  
              __end_of_I2C1_DO_RX_NACK_RESTART 1DFE                       I2C1_MasterOperation@read 0026  
                                     _vfprintf 11C9             __end_of_INTERRUPT_InterruptManager 0023  
                   _INTERRUPT_InterruptManager 0004                                      printf@fmt 00E1  
        __end_of_EUSART_SetFramingErrorHandler 1E26         __size_of_EUSART_SetFramingErrorHandler 0006  
                _EUSART_SetFramingErrorHandler 1E20                                   _SSP1STATbits 0214  
               __size_of_I2C1_DO_SEND_ADR_READ 0008                  __end_of_I2C1_DO_SEND_ADR_READ 1E6F  
                                 _I2C1_DO_IDLE 1E0B                                   _I2C1_DO_RCEN 1E3E  
                  __end_of_I2C1_MasterSendNack 1DDE                                 _vfpfcnvrt$1526 0065  
                                   _INTCONbits 000B                          ?_EUSART_RxDataHandler 0070  
               I2C1_SetAddressNackCallback@ptr 0078                           _I2C1_MasterGetRxData 1DC9  
                        _I2C1_MasterSendTxData 1E06                        __size_of_WDT_Initialize 0004  
                                     intlevel1 0000                                       sendPWM@j 0072  
                     __end_of_I2C1_MasterClose 1DBA                         _I2C1_Read1ByteRegister 1197  
                      ?_PIN_MANAGER_Initialize 0070                  I2C1_Read1ByteRegister@address 002A  
                     __end_of_I2C1_MasterStart 1DC0                       __end_of_I2C1_MasterWrite 1E06  
               __end_of_EUSART_SetErrorHandler 1E20                              __CFG_CLKOUTEN$OFF 0000  
                                    strcpy@src 0071                               ??_I2C1_DO_RX_ACK 0071  
                                     isupper@c 0071                        _I2C1_CallbackReturnStop 1DAF  
                                    strncmp@_l 0076                                      strncmp@_r 0071  
         __end_of_EUSART_SetRxInterruptHandler 1E32          __size_of_EUSART_SetRxInterruptHandler 0006  
                 _EUSART_SetRxInterruptHandler 1E2C                           _I2C1_DO_ADDRESS_NACK 1168  
                       ?_I2C1_MasterDisableIrq 0070                                    efgtoa@nmode 00BF  
                         __size_of_I2C1_Poller 000A                                       printf@ap 00EA  
                           _EUSART_Receive_ISR 11FC  EUSART_SetFramingErrorHandler@interruptHandler 0071  
                                  ??_vfpfcnvrt 005F                       __size_of_I2C1_MasterOpen 000B  
                     __size_of_I2C1_MasterStop 0003                       __size_of_I2C1_Initialize 0009  
                                __pstringtext1 1800                                  __pstringtext2 2000  
                                __pstringtext3 2012                                  __pstringtext4 2021  
                                __pstringtext5 2025                                  __pstringtext6 2029  
                                __pstringtext7 202D                                  __pstringtext8 2031  
                  __size_of_readPressureSensor 0156                                  __pstringtext9 0000  
                     __end_of_I2C1_SetCallback 110F                         __Umul8_16@multiplicand 0071  
                                  _temperature 01CD                                       tolower@c 0077  
                          ?_EUSART_Receive_ISR 0070                                     _SSP1DATPPS 0E21  
                       __size_of___fpclassifyf 0078                                     _SSP1CLKPPS 0E20  
                          __size_of_I2C1_DO_RX 0047                            __size_of_I2C1_DO_TX 0052  
                              ??_I2C1_DO_RESET 0071                           _I2C1_MasterOperation 1FC3  
                                     strncmp@l 0079                                       strncmp@n 0073  
                                     strncmp@r 0077                            __size_of_I2C1_Close 0019  
                        ?_I2C1_MasterGetRxData 0070                                     _TX1STAbits 019E  
                                ___fladd@signs 0028                             EUSART_Write@txData 0072  
                 __size_of_EUSART_Transmit_ISR 0020                 __end_of_PIN_MANAGER_Initialize 129F  
               __size_of_rd1RegCompleteHandler 0010                  __end_of_rd1RegCompleteHandler 1F05  
                           __size_of_I2C1_Open 0037                                    _PWMTMRSbits 061F  
                                 ___fladd@aexp 0029                                   ___fladd@bexp 002A  
               __size_of_wr1RegCompleteHandler 0010                           ??_EUSART_Receive_ISR 0071  
                         __Umul8_16@multiplier 0079                  __end_of_wr1RegCompleteHandler 1F25  
                    __size_of_I2C1_DO_TX_EMPTY 002F                          ?_I2C1_DO_ADDRESS_NACK 0070  
                            __Umul8_16@product 0075  
