

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Mar 03 15:11:05 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18346
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	idataBANK5,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
     9                           	psect	stringtext2,global,class=STRCODE,delta=2
    10                           	psect	stringtext3,global,class=STRCODE,delta=2
    11                           	psect	stringtext4,global,class=STRCODE,delta=2
    12                           	psect	stringtext5,global,class=STRCODE,delta=2
    13                           	psect	stringtext6,global,class=STRCODE,delta=2
    14                           	psect	stringtext7,global,class=STRCODE,delta=2
    15                           	psect	stringtext8,global,class=STRCODE,delta=2
    16                           	psect	stringtext9,global,class=STRCODE,delta=2
    17                           	psect	cinit,global,class=CODE,merge=1,delta=2
    18                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    22                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    23                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    24                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    25                           	psect	inittext,global,class=CODE,delta=2
    26                           	psect	clrtext,global,class=CODE,delta=2
    27                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    28                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    29                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    30                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    31                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    32                           	psect	text1,local,class=CODE,merge=1,delta=2
    33                           	psect	text2,local,class=CODE,merge=1,delta=2
    34                           	psect	text3,local,class=CODE,merge=1,delta=2
    35                           	psect	text4,local,class=CODE,merge=1,delta=2
    36                           	psect	text5,local,class=CODE,merge=1,delta=2
    37                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text7,local,class=CODE,merge=1,delta=2
    39                           	psect	text8,local,class=CODE,merge=1,delta=2
    40                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text10,local,class=CODE,merge=1,delta=2
    42                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text14,local,class=CODE,merge=1,delta=2
    46                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text18,local,class=CODE,merge=1,delta=2
    50                           	psect	text19,local,class=CODE,merge=1,delta=2
    51                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    54                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    55                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    59                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    60                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    63                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    64                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
    65                           	psect	text34,local,class=CODE,merge=1,delta=2
    66                           	psect	text35,local,class=CODE,merge=1,delta=2
    67                           	psect	text36,local,class=CODE,merge=1,delta=2
    68                           	psect	text37,local,class=CODE,merge=1,delta=2
    69                           	psect	text38,local,class=CODE,merge=1,delta=2
    70                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    71                           	psect	text40,local,class=CODE,merge=1,delta=2
    72                           	psect	text41,local,class=CODE,merge=1,delta=2
    73                           	psect	text42,local,class=CODE,merge=1,delta=2
    74                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    75                           	psect	text44,local,class=CODE,merge=1,inline,delta=2
    76                           	psect	text45,local,class=CODE,merge=1,delta=2
    77                           	psect	text46,local,class=CODE,merge=1,delta=2
    78                           	psect	text47,local,class=CODE,merge=1,delta=2
    79                           	psect	text48,local,class=CODE,merge=1,delta=2
    80                           	psect	text49,local,class=CODE,merge=1,delta=2
    81                           	psect	text50,local,class=CODE,merge=1,delta=2
    82                           	psect	text51,local,class=CODE,merge=1,delta=2
    83                           	psect	text52,local,class=CODE,merge=1,delta=2
    84                           	psect	text53,local,class=CODE,merge=1,delta=2
    85                           	psect	text54,local,class=CODE,merge=1,delta=2
    86                           	psect	text55,local,class=CODE,merge=1,delta=2
    87                           	psect	text56,local,class=CODE,merge=1,delta=2
    88                           	psect	text57,local,class=CODE,merge=1,delta=2
    89                           	psect	text58,local,class=CODE,merge=1,delta=2
    90                           	psect	text59,local,class=CODE,merge=1,delta=2
    91                           	psect	text60,local,class=CODE,merge=1,delta=2
    92                           	psect	text61,local,class=CODE,merge=1,inline,delta=2
    93                           	psect	text62,local,class=CODE,merge=1,inline,delta=2
    94                           	psect	text63,local,class=CODE,merge=1,inline,delta=2
    95                           	psect	text64,local,class=CODE,merge=1,inline,delta=2
    96                           	psect	text65,local,class=CODE,merge=1,inline,delta=2
    97                           	psect	text66,local,class=CODE,merge=1,inline,delta=2
    98                           	psect	text67,local,class=CODE,merge=1,inline,delta=2
    99                           	psect	text68,local,class=CODE,merge=1,delta=2
   100                           	psect	text69,local,class=CODE,merge=1,delta=2
   101                           	psect	text70,local,class=CODE,merge=1,delta=2
   102                           	psect	text71,local,class=CODE,merge=1,delta=2
   103                           	psect	text72,local,class=CODE,merge=1,delta=2
   104                           	psect	text73,local,class=CODE,merge=1,delta=2
   105                           	psect	text74,local,class=CODE,merge=1,delta=2
   106                           	psect	text75,local,class=CODE,merge=1,delta=2
   107                           	psect	text76,local,class=CODE,merge=1,delta=2
   108                           	psect	text77,local,class=CODE,merge=1,delta=2
   109                           	psect	text78,local,class=CODE,merge=1,inline,delta=2
   110                           	psect	text79,local,class=CODE,merge=1,inline,delta=2
   111                           	psect	text80,local,class=CODE,merge=1,inline,delta=2
   112                           	psect	text81,local,class=CODE,merge=1,delta=2
   113                           	psect	text82,local,class=CODE,merge=1,inline,delta=2
   114                           	psect	text83,local,class=CODE,merge=1,inline,delta=2
   115                           	psect	text84,local,class=CODE,merge=1,inline,delta=2
   116                           	psect	text85,local,class=CODE,merge=1,delta=2
   117                           	psect	text86,local,class=CODE,merge=1,delta=2
   118                           	psect	text87,local,class=CODE,merge=1,delta=2
   119                           	psect	text88,local,class=CODE,merge=1,delta=2
   120                           	psect	text89,local,class=CODE,merge=1,delta=2
   121                           	psect	text90,local,class=CODE,merge=1,delta=2
   122                           	psect	text91,local,class=CODE,merge=1,delta=2
   123                           	psect	text92,local,class=CODE,merge=1,delta=2
   124                           	psect	text93,local,class=CODE,merge=1,delta=2
   125                           	psect	text94,local,class=CODE,merge=1,delta=2
   126                           	psect	text95,local,class=CODE,merge=1,delta=2
   127                           	psect	text96,local,class=CODE,merge=1,delta=2
   128                           	psect	text97,local,class=CODE,merge=1,delta=2
   129                           	psect	text98,local,class=CODE,merge=1,delta=2
   130                           	psect	intentry,global,class=CODE,delta=2
   131                           	psect	text100,local,class=CODE,merge=1,delta=2
   132                           	psect	text101,local,class=CODE,merge=1,delta=2
   133                           	psect	text102,local,class=CODE,merge=1,delta=2
   134                           	psect	text103,local,class=CODE,merge=1,delta=2
   135                           	psect	text104,local,class=CODE,merge=1,delta=2
   136                           	psect	text105,local,class=CODE,merge=1,delta=2
   137                           	dabs	1,0x7E,2
   138  0000                     
   139                           ; Version 2.05
   140                           ; Generated 20/12/2018 GMT
   141                           ; 
   142                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   143                           ; All rights reserved.
   144                           ; 
   145                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   146                           ; 
   147                           ; Redistribution and use in source and binary forms, with or without modification, are
   148                           ; permitted provided that the following conditions are met:
   149                           ; 
   150                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   151                           ;        conditions and the following disclaimer.
   152                           ; 
   153                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   154                           ;        of conditions and the following disclaimer in the documentation and/or other
   155                           ;        materials provided with the distribution.
   156                           ; 
   157                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   158                           ;        software without specific prior written permission.
   159                           ; 
   160                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   161                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   162                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   163                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   164                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   165                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   166                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   167                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   168                           ; 
   169                           ; 
   170                           ; Code-generator required, PIC16F18346 Definitions
   171                           ; 
   172                           ; SFR Addresses
   173  0000                     	;# 
   174  0001                     	;# 
   175  0002                     	;# 
   176  0003                     	;# 
   177  0004                     	;# 
   178  0005                     	;# 
   179  0006                     	;# 
   180  0007                     	;# 
   181  0008                     	;# 
   182  0009                     	;# 
   183  000A                     	;# 
   184  000B                     	;# 
   185  000C                     	;# 
   186  000D                     	;# 
   187  000E                     	;# 
   188  0010                     	;# 
   189  0011                     	;# 
   190  0012                     	;# 
   191  0013                     	;# 
   192  0014                     	;# 
   193  0015                     	;# 
   194  0015                     	;# 
   195  0016                     	;# 
   196  0016                     	;# 
   197  0017                     	;# 
   198  0018                     	;# 
   199  0019                     	;# 
   200  0019                     	;# 
   201  001A                     	;# 
   202  001B                     	;# 
   203  001C                     	;# 
   204  001D                     	;# 
   205  001E                     	;# 
   206  001F                     	;# 
   207  008C                     	;# 
   208  008D                     	;# 
   209  008E                     	;# 
   210  0090                     	;# 
   211  0091                     	;# 
   212  0092                     	;# 
   213  0093                     	;# 
   214  0094                     	;# 
   215  0097                     	;# 
   216  009B                     	;# 
   217  009B                     	;# 
   218  009C                     	;# 
   219  009D                     	;# 
   220  009E                     	;# 
   221  009F                     	;# 
   222  010C                     	;# 
   223  010D                     	;# 
   224  010E                     	;# 
   225  0111                     	;# 
   226  0112                     	;# 
   227  0113                     	;# 
   228  0114                     	;# 
   229  0115                     	;# 
   230  0116                     	;# 
   231  0117                     	;# 
   232  0118                     	;# 
   233  0119                     	;# 
   234  018C                     	;# 
   235  018D                     	;# 
   236  018E                     	;# 
   237  0197                     	;# 
   238  0199                     	;# 
   239  0199                     	;# 
   240  0199                     	;# 
   241  019A                     	;# 
   242  019A                     	;# 
   243  019A                     	;# 
   244  019B                     	;# 
   245  019B                     	;# 
   246  019B                     	;# 
   247  019B                     	;# 
   248  019B                     	;# 
   249  019C                     	;# 
   250  019C                     	;# 
   251  019C                     	;# 
   252  019D                     	;# 
   253  019D                     	;# 
   254  019D                     	;# 
   255  019E                     	;# 
   256  019E                     	;# 
   257  019E                     	;# 
   258  019F                     	;# 
   259  019F                     	;# 
   260  019F                     	;# 
   261  019F                     	;# 
   262  019F                     	;# 
   263  020C                     	;# 
   264  020D                     	;# 
   265  020E                     	;# 
   266  0211                     	;# 
   267  0211                     	;# 
   268  0212                     	;# 
   269  0212                     	;# 
   270  0213                     	;# 
   271  0213                     	;# 
   272  0214                     	;# 
   273  0214                     	;# 
   274  0215                     	;# 
   275  0215                     	;# 
   276  0215                     	;# 
   277  0215                     	;# 
   278  0216                     	;# 
   279  0216                     	;# 
   280  0217                     	;# 
   281  0217                     	;# 
   282  0219                     	;# 
   283  021A                     	;# 
   284  021B                     	;# 
   285  021C                     	;# 
   286  021D                     	;# 
   287  021D                     	;# 
   288  021E                     	;# 
   289  021F                     	;# 
   290  028C                     	;# 
   291  028D                     	;# 
   292  028E                     	;# 
   293  0291                     	;# 
   294  0291                     	;# 
   295  0292                     	;# 
   296  0293                     	;# 
   297  0294                     	;# 
   298  0295                     	;# 
   299  0295                     	;# 
   300  0296                     	;# 
   301  0297                     	;# 
   302  0298                     	;# 
   303  029F                     	;# 
   304  030C                     	;# 
   305  030D                     	;# 
   306  030E                     	;# 
   307  0311                     	;# 
   308  0311                     	;# 
   309  0312                     	;# 
   310  0313                     	;# 
   311  0314                     	;# 
   312  0315                     	;# 
   313  0315                     	;# 
   314  0316                     	;# 
   315  0317                     	;# 
   316  0318                     	;# 
   317  038C                     	;# 
   318  038D                     	;# 
   319  038E                     	;# 
   320  0391                     	;# 
   321  0392                     	;# 
   322  0393                     	;# 
   323  0394                     	;# 
   324  0395                     	;# 
   325  0396                     	;# 
   326  0397                     	;# 
   327  0398                     	;# 
   328  0399                     	;# 
   329  039A                     	;# 
   330  039C                     	;# 
   331  039D                     	;# 
   332  039E                     	;# 
   333  039F                     	;# 
   334  0411                     	;# 
   335  0411                     	;# 
   336  0412                     	;# 
   337  0413                     	;# 
   338  0414                     	;# 
   339  0415                     	;# 
   340  0416                     	;# 
   341  0417                     	;# 
   342  0418                     	;# 
   343  0418                     	;# 
   344  0419                     	;# 
   345  041A                     	;# 
   346  041B                     	;# 
   347  041C                     	;# 
   348  041D                     	;# 
   349  041E                     	;# 
   350  041F                     	;# 
   351  0498                     	;# 
   352  0498                     	;# 
   353  0499                     	;# 
   354  049A                     	;# 
   355  049B                     	;# 
   356  049B                     	;# 
   357  049C                     	;# 
   358  049D                     	;# 
   359  049E                     	;# 
   360  049F                     	;# 
   361  0617                     	;# 
   362  0618                     	;# 
   363  0619                     	;# 
   364  0619                     	;# 
   365  061A                     	;# 
   366  061B                     	;# 
   367  061C                     	;# 
   368  061C                     	;# 
   369  061F                     	;# 
   370  0691                     	;# 
   371  0692                     	;# 
   372  0693                     	;# 
   373  0694                     	;# 
   374  0695                     	;# 
   375  0696                     	;# 
   376  0697                     	;# 
   377  0698                     	;# 
   378  0699                     	;# 
   379  0711                     	;# 
   380  0712                     	;# 
   381  0713                     	;# 
   382  0714                     	;# 
   383  0715                     	;# 
   384  0716                     	;# 
   385  0717                     	;# 
   386  0718                     	;# 
   387  0719                     	;# 
   388  0891                     	;# 
   389  0891                     	;# 
   390  0891                     	;# 
   391  0891                     	;# 
   392  0891                     	;# 
   393  0891                     	;# 
   394  0892                     	;# 
   395  0892                     	;# 
   396  0892                     	;# 
   397  0893                     	;# 
   398  0893                     	;# 
   399  0893                     	;# 
   400  0893                     	;# 
   401  0893                     	;# 
   402  0893                     	;# 
   403  0894                     	;# 
   404  0894                     	;# 
   405  0894                     	;# 
   406  0895                     	;# 
   407  0895                     	;# 
   408  0895                     	;# 
   409  0896                     	;# 
   410  0896                     	;# 
   411  0896                     	;# 
   412  089B                     	;# 
   413  0911                     	;# 
   414  0912                     	;# 
   415  0913                     	;# 
   416  0914                     	;# 
   417  0915                     	;# 
   418  0916                     	;# 
   419  0918                     	;# 
   420  0919                     	;# 
   421  091A                     	;# 
   422  091B                     	;# 
   423  091C                     	;# 
   424  091D                     	;# 
   425  091E                     	;# 
   426  091F                     	;# 
   427  0E0F                     	;# 
   428  0E10                     	;# 
   429  0E11                     	;# 
   430  0E12                     	;# 
   431  0E13                     	;# 
   432  0E14                     	;# 
   433  0E15                     	;# 
   434  0E16                     	;# 
   435  0E17                     	;# 
   436  0E18                     	;# 
   437  0E19                     	;# 
   438  0E1A                     	;# 
   439  0E1B                     	;# 
   440  0E1C                     	;# 
   441  0E1D                     	;# 
   442  0E1E                     	;# 
   443  0E1F                     	;# 
   444  0E20                     	;# 
   445  0E21                     	;# 
   446  0E22                     	;# 
   447  0E24                     	;# 
   448  0E25                     	;# 
   449  0E28                     	;# 
   450  0E29                     	;# 
   451  0E2A                     	;# 
   452  0E2B                     	;# 
   453  0E2C                     	;# 
   454  0E2D                     	;# 
   455  0E2E                     	;# 
   456  0E2F                     	;# 
   457  0E90                     	;# 
   458  0E91                     	;# 
   459  0E92                     	;# 
   460  0E94                     	;# 
   461  0E95                     	;# 
   462  0E9C                     	;# 
   463  0E9D                     	;# 
   464  0E9E                     	;# 
   465  0E9F                     	;# 
   466  0EA0                     	;# 
   467  0EA1                     	;# 
   468  0EA2                     	;# 
   469  0EA3                     	;# 
   470  0EA4                     	;# 
   471  0EA5                     	;# 
   472  0EA6                     	;# 
   473  0EA7                     	;# 
   474  0F0F                     	;# 
   475  0F10                     	;# 
   476  0F11                     	;# 
   477  0F12                     	;# 
   478  0F13                     	;# 
   479  0F14                     	;# 
   480  0F15                     	;# 
   481  0F16                     	;# 
   482  0F17                     	;# 
   483  0F18                     	;# 
   484  0F19                     	;# 
   485  0F1A                     	;# 
   486  0F1B                     	;# 
   487  0F1C                     	;# 
   488  0F1D                     	;# 
   489  0F1E                     	;# 
   490  0F1F                     	;# 
   491  0F20                     	;# 
   492  0F21                     	;# 
   493  0F22                     	;# 
   494  0F23                     	;# 
   495  0F24                     	;# 
   496  0F25                     	;# 
   497  0F26                     	;# 
   498  0F27                     	;# 
   499  0F28                     	;# 
   500  0F29                     	;# 
   501  0F2A                     	;# 
   502  0F2B                     	;# 
   503  0F2C                     	;# 
   504  0F2D                     	;# 
   505  0F2E                     	;# 
   506  0F2F                     	;# 
   507  0F30                     	;# 
   508  0F31                     	;# 
   509  0F32                     	;# 
   510  0F33                     	;# 
   511  0F34                     	;# 
   512  0F35                     	;# 
   513  0F36                     	;# 
   514  0F37                     	;# 
   515  0FE4                     	;# 
   516  0FE5                     	;# 
   517  0FE6                     	;# 
   518  0FE7                     	;# 
   519  0FE8                     	;# 
   520  0FE9                     	;# 
   521  0FEA                     	;# 
   522  0FEB                     	;# 
   523  0FED                     	;# 
   524  0FEE                     	;# 
   525  0FEF                     	;# 
   526  0000                     	;# 
   527  0001                     	;# 
   528  0002                     	;# 
   529  0003                     	;# 
   530  0004                     	;# 
   531  0005                     	;# 
   532  0006                     	;# 
   533  0007                     	;# 
   534  0008                     	;# 
   535  0009                     	;# 
   536  000A                     	;# 
   537  000B                     	;# 
   538  000C                     	;# 
   539  000D                     	;# 
   540  000E                     	;# 
   541  0010                     	;# 
   542  0011                     	;# 
   543  0012                     	;# 
   544  0013                     	;# 
   545  0014                     	;# 
   546  0015                     	;# 
   547  0015                     	;# 
   548  0016                     	;# 
   549  0016                     	;# 
   550  0017                     	;# 
   551  0018                     	;# 
   552  0019                     	;# 
   553  0019                     	;# 
   554  001A                     	;# 
   555  001B                     	;# 
   556  001C                     	;# 
   557  001D                     	;# 
   558  001E                     	;# 
   559  001F                     	;# 
   560  008C                     	;# 
   561  008D                     	;# 
   562  008E                     	;# 
   563  0090                     	;# 
   564  0091                     	;# 
   565  0092                     	;# 
   566  0093                     	;# 
   567  0094                     	;# 
   568  0097                     	;# 
   569  009B                     	;# 
   570  009B                     	;# 
   571  009C                     	;# 
   572  009D                     	;# 
   573  009E                     	;# 
   574  009F                     	;# 
   575  010C                     	;# 
   576  010D                     	;# 
   577  010E                     	;# 
   578  0111                     	;# 
   579  0112                     	;# 
   580  0113                     	;# 
   581  0114                     	;# 
   582  0115                     	;# 
   583  0116                     	;# 
   584  0117                     	;# 
   585  0118                     	;# 
   586  0119                     	;# 
   587  018C                     	;# 
   588  018D                     	;# 
   589  018E                     	;# 
   590  0197                     	;# 
   591  0199                     	;# 
   592  0199                     	;# 
   593  0199                     	;# 
   594  019A                     	;# 
   595  019A                     	;# 
   596  019A                     	;# 
   597  019B                     	;# 
   598  019B                     	;# 
   599  019B                     	;# 
   600  019B                     	;# 
   601  019B                     	;# 
   602  019C                     	;# 
   603  019C                     	;# 
   604  019C                     	;# 
   605  019D                     	;# 
   606  019D                     	;# 
   607  019D                     	;# 
   608  019E                     	;# 
   609  019E                     	;# 
   610  019E                     	;# 
   611  019F                     	;# 
   612  019F                     	;# 
   613  019F                     	;# 
   614  019F                     	;# 
   615  019F                     	;# 
   616  020C                     	;# 
   617  020D                     	;# 
   618  020E                     	;# 
   619  0211                     	;# 
   620  0211                     	;# 
   621  0212                     	;# 
   622  0212                     	;# 
   623  0213                     	;# 
   624  0213                     	;# 
   625  0214                     	;# 
   626  0214                     	;# 
   627  0215                     	;# 
   628  0215                     	;# 
   629  0215                     	;# 
   630  0215                     	;# 
   631  0216                     	;# 
   632  0216                     	;# 
   633  0217                     	;# 
   634  0217                     	;# 
   635  0219                     	;# 
   636  021A                     	;# 
   637  021B                     	;# 
   638  021C                     	;# 
   639  021D                     	;# 
   640  021D                     	;# 
   641  021E                     	;# 
   642  021F                     	;# 
   643  028C                     	;# 
   644  028D                     	;# 
   645  028E                     	;# 
   646  0291                     	;# 
   647  0291                     	;# 
   648  0292                     	;# 
   649  0293                     	;# 
   650  0294                     	;# 
   651  0295                     	;# 
   652  0295                     	;# 
   653  0296                     	;# 
   654  0297                     	;# 
   655  0298                     	;# 
   656  029F                     	;# 
   657  030C                     	;# 
   658  030D                     	;# 
   659  030E                     	;# 
   660  0311                     	;# 
   661  0311                     	;# 
   662  0312                     	;# 
   663  0313                     	;# 
   664  0314                     	;# 
   665  0315                     	;# 
   666  0315                     	;# 
   667  0316                     	;# 
   668  0317                     	;# 
   669  0318                     	;# 
   670  038C                     	;# 
   671  038D                     	;# 
   672  038E                     	;# 
   673  0391                     	;# 
   674  0392                     	;# 
   675  0393                     	;# 
   676  0394                     	;# 
   677  0395                     	;# 
   678  0396                     	;# 
   679  0397                     	;# 
   680  0398                     	;# 
   681  0399                     	;# 
   682  039A                     	;# 
   683  039C                     	;# 
   684  039D                     	;# 
   685  039E                     	;# 
   686  039F                     	;# 
   687  0411                     	;# 
   688  0411                     	;# 
   689  0412                     	;# 
   690  0413                     	;# 
   691  0414                     	;# 
   692  0415                     	;# 
   693  0416                     	;# 
   694  0417                     	;# 
   695  0418                     	;# 
   696  0418                     	;# 
   697  0419                     	;# 
   698  041A                     	;# 
   699  041B                     	;# 
   700  041C                     	;# 
   701  041D                     	;# 
   702  041E                     	;# 
   703  041F                     	;# 
   704  0498                     	;# 
   705  0498                     	;# 
   706  0499                     	;# 
   707  049A                     	;# 
   708  049B                     	;# 
   709  049B                     	;# 
   710  049C                     	;# 
   711  049D                     	;# 
   712  049E                     	;# 
   713  049F                     	;# 
   714  0617                     	;# 
   715  0618                     	;# 
   716  0619                     	;# 
   717  0619                     	;# 
   718  061A                     	;# 
   719  061B                     	;# 
   720  061C                     	;# 
   721  061C                     	;# 
   722  061F                     	;# 
   723  0691                     	;# 
   724  0692                     	;# 
   725  0693                     	;# 
   726  0694                     	;# 
   727  0695                     	;# 
   728  0696                     	;# 
   729  0697                     	;# 
   730  0698                     	;# 
   731  0699                     	;# 
   732  0711                     	;# 
   733  0712                     	;# 
   734  0713                     	;# 
   735  0714                     	;# 
   736  0715                     	;# 
   737  0716                     	;# 
   738  0717                     	;# 
   739  0718                     	;# 
   740  0719                     	;# 
   741  0891                     	;# 
   742  0891                     	;# 
   743  0891                     	;# 
   744  0891                     	;# 
   745  0891                     	;# 
   746  0891                     	;# 
   747  0892                     	;# 
   748  0892                     	;# 
   749  0892                     	;# 
   750  0893                     	;# 
   751  0893                     	;# 
   752  0893                     	;# 
   753  0893                     	;# 
   754  0893                     	;# 
   755  0893                     	;# 
   756  0894                     	;# 
   757  0894                     	;# 
   758  0894                     	;# 
   759  0895                     	;# 
   760  0895                     	;# 
   761  0895                     	;# 
   762  0896                     	;# 
   763  0896                     	;# 
   764  0896                     	;# 
   765  089B                     	;# 
   766  0911                     	;# 
   767  0912                     	;# 
   768  0913                     	;# 
   769  0914                     	;# 
   770  0915                     	;# 
   771  0916                     	;# 
   772  0918                     	;# 
   773  0919                     	;# 
   774  091A                     	;# 
   775  091B                     	;# 
   776  091C                     	;# 
   777  091D                     	;# 
   778  091E                     	;# 
   779  091F                     	;# 
   780  0E0F                     	;# 
   781  0E10                     	;# 
   782  0E11                     	;# 
   783  0E12                     	;# 
   784  0E13                     	;# 
   785  0E14                     	;# 
   786  0E15                     	;# 
   787  0E16                     	;# 
   788  0E17                     	;# 
   789  0E18                     	;# 
   790  0E19                     	;# 
   791  0E1A                     	;# 
   792  0E1B                     	;# 
   793  0E1C                     	;# 
   794  0E1D                     	;# 
   795  0E1E                     	;# 
   796  0E1F                     	;# 
   797  0E20                     	;# 
   798  0E21                     	;# 
   799  0E22                     	;# 
   800  0E24                     	;# 
   801  0E25                     	;# 
   802  0E28                     	;# 
   803  0E29                     	;# 
   804  0E2A                     	;# 
   805  0E2B                     	;# 
   806  0E2C                     	;# 
   807  0E2D                     	;# 
   808  0E2E                     	;# 
   809  0E2F                     	;# 
   810  0E90                     	;# 
   811  0E91                     	;# 
   812  0E92                     	;# 
   813  0E94                     	;# 
   814  0E95                     	;# 
   815  0E9C                     	;# 
   816  0E9D                     	;# 
   817  0E9E                     	;# 
   818  0E9F                     	;# 
   819  0EA0                     	;# 
   820  0EA1                     	;# 
   821  0EA2                     	;# 
   822  0EA3                     	;# 
   823  0EA4                     	;# 
   824  0EA5                     	;# 
   825  0EA6                     	;# 
   826  0EA7                     	;# 
   827  0F0F                     	;# 
   828  0F10                     	;# 
   829  0F11                     	;# 
   830  0F12                     	;# 
   831  0F13                     	;# 
   832  0F14                     	;# 
   833  0F15                     	;# 
   834  0F16                     	;# 
   835  0F17                     	;# 
   836  0F18                     	;# 
   837  0F19                     	;# 
   838  0F1A                     	;# 
   839  0F1B                     	;# 
   840  0F1C                     	;# 
   841  0F1D                     	;# 
   842  0F1E                     	;# 
   843  0F1F                     	;# 
   844  0F20                     	;# 
   845  0F21                     	;# 
   846  0F22                     	;# 
   847  0F23                     	;# 
   848  0F24                     	;# 
   849  0F25                     	;# 
   850  0F26                     	;# 
   851  0F27                     	;# 
   852  0F28                     	;# 
   853  0F29                     	;# 
   854  0F2A                     	;# 
   855  0F2B                     	;# 
   856  0F2C                     	;# 
   857  0F2D                     	;# 
   858  0F2E                     	;# 
   859  0F2F                     	;# 
   860  0F30                     	;# 
   861  0F31                     	;# 
   862  0F32                     	;# 
   863  0F33                     	;# 
   864  0F34                     	;# 
   865  0F35                     	;# 
   866  0F36                     	;# 
   867  0F37                     	;# 
   868  0FE4                     	;# 
   869  0FE5                     	;# 
   870  0FE6                     	;# 
   871  0FE7                     	;# 
   872  0FE8                     	;# 
   873  0FE9                     	;# 
   874  0FEA                     	;# 
   875  0FEB                     	;# 
   876  0FED                     	;# 
   877  0FEE                     	;# 
   878  0FEF                     	;# 
   879  0000                     	;# 
   880  0001                     	;# 
   881  0002                     	;# 
   882  0003                     	;# 
   883  0004                     	;# 
   884  0005                     	;# 
   885  0006                     	;# 
   886  0007                     	;# 
   887  0008                     	;# 
   888  0009                     	;# 
   889  000A                     	;# 
   890  000B                     	;# 
   891  000C                     	;# 
   892  000D                     	;# 
   893  000E                     	;# 
   894  0010                     	;# 
   895  0011                     	;# 
   896  0012                     	;# 
   897  0013                     	;# 
   898  0014                     	;# 
   899  0015                     	;# 
   900  0015                     	;# 
   901  0016                     	;# 
   902  0016                     	;# 
   903  0017                     	;# 
   904  0018                     	;# 
   905  0019                     	;# 
   906  0019                     	;# 
   907  001A                     	;# 
   908  001B                     	;# 
   909  001C                     	;# 
   910  001D                     	;# 
   911  001E                     	;# 
   912  001F                     	;# 
   913  008C                     	;# 
   914  008D                     	;# 
   915  008E                     	;# 
   916  0090                     	;# 
   917  0091                     	;# 
   918  0092                     	;# 
   919  0093                     	;# 
   920  0094                     	;# 
   921  0097                     	;# 
   922  009B                     	;# 
   923  009B                     	;# 
   924  009C                     	;# 
   925  009D                     	;# 
   926  009E                     	;# 
   927  009F                     	;# 
   928  010C                     	;# 
   929  010D                     	;# 
   930  010E                     	;# 
   931  0111                     	;# 
   932  0112                     	;# 
   933  0113                     	;# 
   934  0114                     	;# 
   935  0115                     	;# 
   936  0116                     	;# 
   937  0117                     	;# 
   938  0118                     	;# 
   939  0119                     	;# 
   940  018C                     	;# 
   941  018D                     	;# 
   942  018E                     	;# 
   943  0197                     	;# 
   944  0199                     	;# 
   945  0199                     	;# 
   946  0199                     	;# 
   947  019A                     	;# 
   948  019A                     	;# 
   949  019A                     	;# 
   950  019B                     	;# 
   951  019B                     	;# 
   952  019B                     	;# 
   953  019B                     	;# 
   954  019B                     	;# 
   955  019C                     	;# 
   956  019C                     	;# 
   957  019C                     	;# 
   958  019D                     	;# 
   959  019D                     	;# 
   960  019D                     	;# 
   961  019E                     	;# 
   962  019E                     	;# 
   963  019E                     	;# 
   964  019F                     	;# 
   965  019F                     	;# 
   966  019F                     	;# 
   967  019F                     	;# 
   968  019F                     	;# 
   969  020C                     	;# 
   970  020D                     	;# 
   971  020E                     	;# 
   972  0211                     	;# 
   973  0211                     	;# 
   974  0212                     	;# 
   975  0212                     	;# 
   976  0213                     	;# 
   977  0213                     	;# 
   978  0214                     	;# 
   979  0214                     	;# 
   980  0215                     	;# 
   981  0215                     	;# 
   982  0215                     	;# 
   983  0215                     	;# 
   984  0216                     	;# 
   985  0216                     	;# 
   986  0217                     	;# 
   987  0217                     	;# 
   988  0219                     	;# 
   989  021A                     	;# 
   990  021B                     	;# 
   991  021C                     	;# 
   992  021D                     	;# 
   993  021D                     	;# 
   994  021E                     	;# 
   995  021F                     	;# 
   996  028C                     	;# 
   997  028D                     	;# 
   998  028E                     	;# 
   999  0291                     	;# 
  1000  0291                     	;# 
  1001  0292                     	;# 
  1002  0293                     	;# 
  1003  0294                     	;# 
  1004  0295                     	;# 
  1005  0295                     	;# 
  1006  0296                     	;# 
  1007  0297                     	;# 
  1008  0298                     	;# 
  1009  029F                     	;# 
  1010  030C                     	;# 
  1011  030D                     	;# 
  1012  030E                     	;# 
  1013  0311                     	;# 
  1014  0311                     	;# 
  1015  0312                     	;# 
  1016  0313                     	;# 
  1017  0314                     	;# 
  1018  0315                     	;# 
  1019  0315                     	;# 
  1020  0316                     	;# 
  1021  0317                     	;# 
  1022  0318                     	;# 
  1023  038C                     	;# 
  1024  038D                     	;# 
  1025  038E                     	;# 
  1026  0391                     	;# 
  1027  0392                     	;# 
  1028  0393                     	;# 
  1029  0394                     	;# 
  1030  0395                     	;# 
  1031  0396                     	;# 
  1032  0397                     	;# 
  1033  0398                     	;# 
  1034  0399                     	;# 
  1035  039A                     	;# 
  1036  039C                     	;# 
  1037  039D                     	;# 
  1038  039E                     	;# 
  1039  039F                     	;# 
  1040  0411                     	;# 
  1041  0411                     	;# 
  1042  0412                     	;# 
  1043  0413                     	;# 
  1044  0414                     	;# 
  1045  0415                     	;# 
  1046  0416                     	;# 
  1047  0417                     	;# 
  1048  0418                     	;# 
  1049  0418                     	;# 
  1050  0419                     	;# 
  1051  041A                     	;# 
  1052  041B                     	;# 
  1053  041C                     	;# 
  1054  041D                     	;# 
  1055  041E                     	;# 
  1056  041F                     	;# 
  1057  0498                     	;# 
  1058  0498                     	;# 
  1059  0499                     	;# 
  1060  049A                     	;# 
  1061  049B                     	;# 
  1062  049B                     	;# 
  1063  049C                     	;# 
  1064  049D                     	;# 
  1065  049E                     	;# 
  1066  049F                     	;# 
  1067  0617                     	;# 
  1068  0618                     	;# 
  1069  0619                     	;# 
  1070  0619                     	;# 
  1071  061A                     	;# 
  1072  061B                     	;# 
  1073  061C                     	;# 
  1074  061C                     	;# 
  1075  061F                     	;# 
  1076  0691                     	;# 
  1077  0692                     	;# 
  1078  0693                     	;# 
  1079  0694                     	;# 
  1080  0695                     	;# 
  1081  0696                     	;# 
  1082  0697                     	;# 
  1083  0698                     	;# 
  1084  0699                     	;# 
  1085  0711                     	;# 
  1086  0712                     	;# 
  1087  0713                     	;# 
  1088  0714                     	;# 
  1089  0715                     	;# 
  1090  0716                     	;# 
  1091  0717                     	;# 
  1092  0718                     	;# 
  1093  0719                     	;# 
  1094  0891                     	;# 
  1095  0891                     	;# 
  1096  0891                     	;# 
  1097  0891                     	;# 
  1098  0891                     	;# 
  1099  0891                     	;# 
  1100  0892                     	;# 
  1101  0892                     	;# 
  1102  0892                     	;# 
  1103  0893                     	;# 
  1104  0893                     	;# 
  1105  0893                     	;# 
  1106  0893                     	;# 
  1107  0893                     	;# 
  1108  0893                     	;# 
  1109  0894                     	;# 
  1110  0894                     	;# 
  1111  0894                     	;# 
  1112  0895                     	;# 
  1113  0895                     	;# 
  1114  0895                     	;# 
  1115  0896                     	;# 
  1116  0896                     	;# 
  1117  0896                     	;# 
  1118  089B                     	;# 
  1119  0911                     	;# 
  1120  0912                     	;# 
  1121  0913                     	;# 
  1122  0914                     	;# 
  1123  0915                     	;# 
  1124  0916                     	;# 
  1125  0918                     	;# 
  1126  0919                     	;# 
  1127  091A                     	;# 
  1128  091B                     	;# 
  1129  091C                     	;# 
  1130  091D                     	;# 
  1131  091E                     	;# 
  1132  091F                     	;# 
  1133  0E0F                     	;# 
  1134  0E10                     	;# 
  1135  0E11                     	;# 
  1136  0E12                     	;# 
  1137  0E13                     	;# 
  1138  0E14                     	;# 
  1139  0E15                     	;# 
  1140  0E16                     	;# 
  1141  0E17                     	;# 
  1142  0E18                     	;# 
  1143  0E19                     	;# 
  1144  0E1A                     	;# 
  1145  0E1B                     	;# 
  1146  0E1C                     	;# 
  1147  0E1D                     	;# 
  1148  0E1E                     	;# 
  1149  0E1F                     	;# 
  1150  0E20                     	;# 
  1151  0E21                     	;# 
  1152  0E22                     	;# 
  1153  0E24                     	;# 
  1154  0E25                     	;# 
  1155  0E28                     	;# 
  1156  0E29                     	;# 
  1157  0E2A                     	;# 
  1158  0E2B                     	;# 
  1159  0E2C                     	;# 
  1160  0E2D                     	;# 
  1161  0E2E                     	;# 
  1162  0E2F                     	;# 
  1163  0E90                     	;# 
  1164  0E91                     	;# 
  1165  0E92                     	;# 
  1166  0E94                     	;# 
  1167  0E95                     	;# 
  1168  0E9C                     	;# 
  1169  0E9D                     	;# 
  1170  0E9E                     	;# 
  1171  0E9F                     	;# 
  1172  0EA0                     	;# 
  1173  0EA1                     	;# 
  1174  0EA2                     	;# 
  1175  0EA3                     	;# 
  1176  0EA4                     	;# 
  1177  0EA5                     	;# 
  1178  0EA6                     	;# 
  1179  0EA7                     	;# 
  1180  0F0F                     	;# 
  1181  0F10                     	;# 
  1182  0F11                     	;# 
  1183  0F12                     	;# 
  1184  0F13                     	;# 
  1185  0F14                     	;# 
  1186  0F15                     	;# 
  1187  0F16                     	;# 
  1188  0F17                     	;# 
  1189  0F18                     	;# 
  1190  0F19                     	;# 
  1191  0F1A                     	;# 
  1192  0F1B                     	;# 
  1193  0F1C                     	;# 
  1194  0F1D                     	;# 
  1195  0F1E                     	;# 
  1196  0F1F                     	;# 
  1197  0F20                     	;# 
  1198  0F21                     	;# 
  1199  0F22                     	;# 
  1200  0F23                     	;# 
  1201  0F24                     	;# 
  1202  0F25                     	;# 
  1203  0F26                     	;# 
  1204  0F27                     	;# 
  1205  0F28                     	;# 
  1206  0F29                     	;# 
  1207  0F2A                     	;# 
  1208  0F2B                     	;# 
  1209  0F2C                     	;# 
  1210  0F2D                     	;# 
  1211  0F2E                     	;# 
  1212  0F2F                     	;# 
  1213  0F30                     	;# 
  1214  0F31                     	;# 
  1215  0F32                     	;# 
  1216  0F33                     	;# 
  1217  0F34                     	;# 
  1218  0F35                     	;# 
  1219  0F36                     	;# 
  1220  0F37                     	;# 
  1221  0FE4                     	;# 
  1222  0FE5                     	;# 
  1223  0FE6                     	;# 
  1224  0FE7                     	;# 
  1225  0FE8                     	;# 
  1226  0FE9                     	;# 
  1227  0FEA                     	;# 
  1228  0FEB                     	;# 
  1229  0FED                     	;# 
  1230  0FEE                     	;# 
  1231  0FEF                     	;# 
  1232  0000                     	;# 
  1233  0001                     	;# 
  1234  0002                     	;# 
  1235  0003                     	;# 
  1236  0004                     	;# 
  1237  0005                     	;# 
  1238  0006                     	;# 
  1239  0007                     	;# 
  1240  0008                     	;# 
  1241  0009                     	;# 
  1242  000A                     	;# 
  1243  000B                     	;# 
  1244  000C                     	;# 
  1245  000D                     	;# 
  1246  000E                     	;# 
  1247  0010                     	;# 
  1248  0011                     	;# 
  1249  0012                     	;# 
  1250  0013                     	;# 
  1251  0014                     	;# 
  1252  0015                     	;# 
  1253  0015                     	;# 
  1254  0016                     	;# 
  1255  0016                     	;# 
  1256  0017                     	;# 
  1257  0018                     	;# 
  1258  0019                     	;# 
  1259  0019                     	;# 
  1260  001A                     	;# 
  1261  001B                     	;# 
  1262  001C                     	;# 
  1263  001D                     	;# 
  1264  001E                     	;# 
  1265  001F                     	;# 
  1266  008C                     	;# 
  1267  008D                     	;# 
  1268  008E                     	;# 
  1269  0090                     	;# 
  1270  0091                     	;# 
  1271  0092                     	;# 
  1272  0093                     	;# 
  1273  0094                     	;# 
  1274  0097                     	;# 
  1275  009B                     	;# 
  1276  009B                     	;# 
  1277  009C                     	;# 
  1278  009D                     	;# 
  1279  009E                     	;# 
  1280  009F                     	;# 
  1281  010C                     	;# 
  1282  010D                     	;# 
  1283  010E                     	;# 
  1284  0111                     	;# 
  1285  0112                     	;# 
  1286  0113                     	;# 
  1287  0114                     	;# 
  1288  0115                     	;# 
  1289  0116                     	;# 
  1290  0117                     	;# 
  1291  0118                     	;# 
  1292  0119                     	;# 
  1293  018C                     	;# 
  1294  018D                     	;# 
  1295  018E                     	;# 
  1296  0197                     	;# 
  1297  0199                     	;# 
  1298  0199                     	;# 
  1299  0199                     	;# 
  1300  019A                     	;# 
  1301  019A                     	;# 
  1302  019A                     	;# 
  1303  019B                     	;# 
  1304  019B                     	;# 
  1305  019B                     	;# 
  1306  019B                     	;# 
  1307  019B                     	;# 
  1308  019C                     	;# 
  1309  019C                     	;# 
  1310  019C                     	;# 
  1311  019D                     	;# 
  1312  019D                     	;# 
  1313  019D                     	;# 
  1314  019E                     	;# 
  1315  019E                     	;# 
  1316  019E                     	;# 
  1317  019F                     	;# 
  1318  019F                     	;# 
  1319  019F                     	;# 
  1320  019F                     	;# 
  1321  019F                     	;# 
  1322  020C                     	;# 
  1323  020D                     	;# 
  1324  020E                     	;# 
  1325  0211                     	;# 
  1326  0211                     	;# 
  1327  0212                     	;# 
  1328  0212                     	;# 
  1329  0213                     	;# 
  1330  0213                     	;# 
  1331  0214                     	;# 
  1332  0214                     	;# 
  1333  0215                     	;# 
  1334  0215                     	;# 
  1335  0215                     	;# 
  1336  0215                     	;# 
  1337  0216                     	;# 
  1338  0216                     	;# 
  1339  0217                     	;# 
  1340  0217                     	;# 
  1341  0219                     	;# 
  1342  021A                     	;# 
  1343  021B                     	;# 
  1344  021C                     	;# 
  1345  021D                     	;# 
  1346  021D                     	;# 
  1347  021E                     	;# 
  1348  021F                     	;# 
  1349  028C                     	;# 
  1350  028D                     	;# 
  1351  028E                     	;# 
  1352  0291                     	;# 
  1353  0291                     	;# 
  1354  0292                     	;# 
  1355  0293                     	;# 
  1356  0294                     	;# 
  1357  0295                     	;# 
  1358  0295                     	;# 
  1359  0296                     	;# 
  1360  0297                     	;# 
  1361  0298                     	;# 
  1362  029F                     	;# 
  1363  030C                     	;# 
  1364  030D                     	;# 
  1365  030E                     	;# 
  1366  0311                     	;# 
  1367  0311                     	;# 
  1368  0312                     	;# 
  1369  0313                     	;# 
  1370  0314                     	;# 
  1371  0315                     	;# 
  1372  0315                     	;# 
  1373  0316                     	;# 
  1374  0317                     	;# 
  1375  0318                     	;# 
  1376  038C                     	;# 
  1377  038D                     	;# 
  1378  038E                     	;# 
  1379  0391                     	;# 
  1380  0392                     	;# 
  1381  0393                     	;# 
  1382  0394                     	;# 
  1383  0395                     	;# 
  1384  0396                     	;# 
  1385  0397                     	;# 
  1386  0398                     	;# 
  1387  0399                     	;# 
  1388  039A                     	;# 
  1389  039C                     	;# 
  1390  039D                     	;# 
  1391  039E                     	;# 
  1392  039F                     	;# 
  1393  0411                     	;# 
  1394  0411                     	;# 
  1395  0412                     	;# 
  1396  0413                     	;# 
  1397  0414                     	;# 
  1398  0415                     	;# 
  1399  0416                     	;# 
  1400  0417                     	;# 
  1401  0418                     	;# 
  1402  0418                     	;# 
  1403  0419                     	;# 
  1404  041A                     	;# 
  1405  041B                     	;# 
  1406  041C                     	;# 
  1407  041D                     	;# 
  1408  041E                     	;# 
  1409  041F                     	;# 
  1410  0498                     	;# 
  1411  0498                     	;# 
  1412  0499                     	;# 
  1413  049A                     	;# 
  1414  049B                     	;# 
  1415  049B                     	;# 
  1416  049C                     	;# 
  1417  049D                     	;# 
  1418  049E                     	;# 
  1419  049F                     	;# 
  1420  0617                     	;# 
  1421  0618                     	;# 
  1422  0619                     	;# 
  1423  0619                     	;# 
  1424  061A                     	;# 
  1425  061B                     	;# 
  1426  061C                     	;# 
  1427  061C                     	;# 
  1428  061F                     	;# 
  1429  0691                     	;# 
  1430  0692                     	;# 
  1431  0693                     	;# 
  1432  0694                     	;# 
  1433  0695                     	;# 
  1434  0696                     	;# 
  1435  0697                     	;# 
  1436  0698                     	;# 
  1437  0699                     	;# 
  1438  0711                     	;# 
  1439  0712                     	;# 
  1440  0713                     	;# 
  1441  0714                     	;# 
  1442  0715                     	;# 
  1443  0716                     	;# 
  1444  0717                     	;# 
  1445  0718                     	;# 
  1446  0719                     	;# 
  1447  0891                     	;# 
  1448  0891                     	;# 
  1449  0891                     	;# 
  1450  0891                     	;# 
  1451  0891                     	;# 
  1452  0891                     	;# 
  1453  0892                     	;# 
  1454  0892                     	;# 
  1455  0892                     	;# 
  1456  0893                     	;# 
  1457  0893                     	;# 
  1458  0893                     	;# 
  1459  0893                     	;# 
  1460  0893                     	;# 
  1461  0893                     	;# 
  1462  0894                     	;# 
  1463  0894                     	;# 
  1464  0894                     	;# 
  1465  0895                     	;# 
  1466  0895                     	;# 
  1467  0895                     	;# 
  1468  0896                     	;# 
  1469  0896                     	;# 
  1470  0896                     	;# 
  1471  089B                     	;# 
  1472  0911                     	;# 
  1473  0912                     	;# 
  1474  0913                     	;# 
  1475  0914                     	;# 
  1476  0915                     	;# 
  1477  0916                     	;# 
  1478  0918                     	;# 
  1479  0919                     	;# 
  1480  091A                     	;# 
  1481  091B                     	;# 
  1482  091C                     	;# 
  1483  091D                     	;# 
  1484  091E                     	;# 
  1485  091F                     	;# 
  1486  0E0F                     	;# 
  1487  0E10                     	;# 
  1488  0E11                     	;# 
  1489  0E12                     	;# 
  1490  0E13                     	;# 
  1491  0E14                     	;# 
  1492  0E15                     	;# 
  1493  0E16                     	;# 
  1494  0E17                     	;# 
  1495  0E18                     	;# 
  1496  0E19                     	;# 
  1497  0E1A                     	;# 
  1498  0E1B                     	;# 
  1499  0E1C                     	;# 
  1500  0E1D                     	;# 
  1501  0E1E                     	;# 
  1502  0E1F                     	;# 
  1503  0E20                     	;# 
  1504  0E21                     	;# 
  1505  0E22                     	;# 
  1506  0E24                     	;# 
  1507  0E25                     	;# 
  1508  0E28                     	;# 
  1509  0E29                     	;# 
  1510  0E2A                     	;# 
  1511  0E2B                     	;# 
  1512  0E2C                     	;# 
  1513  0E2D                     	;# 
  1514  0E2E                     	;# 
  1515  0E2F                     	;# 
  1516  0E90                     	;# 
  1517  0E91                     	;# 
  1518  0E92                     	;# 
  1519  0E94                     	;# 
  1520  0E95                     	;# 
  1521  0E9C                     	;# 
  1522  0E9D                     	;# 
  1523  0E9E                     	;# 
  1524  0E9F                     	;# 
  1525  0EA0                     	;# 
  1526  0EA1                     	;# 
  1527  0EA2                     	;# 
  1528  0EA3                     	;# 
  1529  0EA4                     	;# 
  1530  0EA5                     	;# 
  1531  0EA6                     	;# 
  1532  0EA7                     	;# 
  1533  0F0F                     	;# 
  1534  0F10                     	;# 
  1535  0F11                     	;# 
  1536  0F12                     	;# 
  1537  0F13                     	;# 
  1538  0F14                     	;# 
  1539  0F15                     	;# 
  1540  0F16                     	;# 
  1541  0F17                     	;# 
  1542  0F18                     	;# 
  1543  0F19                     	;# 
  1544  0F1A                     	;# 
  1545  0F1B                     	;# 
  1546  0F1C                     	;# 
  1547  0F1D                     	;# 
  1548  0F1E                     	;# 
  1549  0F1F                     	;# 
  1550  0F20                     	;# 
  1551  0F21                     	;# 
  1552  0F22                     	;# 
  1553  0F23                     	;# 
  1554  0F24                     	;# 
  1555  0F25                     	;# 
  1556  0F26                     	;# 
  1557  0F27                     	;# 
  1558  0F28                     	;# 
  1559  0F29                     	;# 
  1560  0F2A                     	;# 
  1561  0F2B                     	;# 
  1562  0F2C                     	;# 
  1563  0F2D                     	;# 
  1564  0F2E                     	;# 
  1565  0F2F                     	;# 
  1566  0F30                     	;# 
  1567  0F31                     	;# 
  1568  0F32                     	;# 
  1569  0F33                     	;# 
  1570  0F34                     	;# 
  1571  0F35                     	;# 
  1572  0F36                     	;# 
  1573  0F37                     	;# 
  1574  0FE4                     	;# 
  1575  0FE5                     	;# 
  1576  0FE6                     	;# 
  1577  0FE7                     	;# 
  1578  0FE8                     	;# 
  1579  0FE9                     	;# 
  1580  0FEA                     	;# 
  1581  0FEB                     	;# 
  1582  0FED                     	;# 
  1583  0FEE                     	;# 
  1584  0FEF                     	;# 
  1585  0000                     	;# 
  1586  0001                     	;# 
  1587  0002                     	;# 
  1588  0003                     	;# 
  1589  0004                     	;# 
  1590  0005                     	;# 
  1591  0006                     	;# 
  1592  0007                     	;# 
  1593  0008                     	;# 
  1594  0009                     	;# 
  1595  000A                     	;# 
  1596  000B                     	;# 
  1597  000C                     	;# 
  1598  000D                     	;# 
  1599  000E                     	;# 
  1600  0010                     	;# 
  1601  0011                     	;# 
  1602  0012                     	;# 
  1603  0013                     	;# 
  1604  0014                     	;# 
  1605  0015                     	;# 
  1606  0015                     	;# 
  1607  0016                     	;# 
  1608  0016                     	;# 
  1609  0017                     	;# 
  1610  0018                     	;# 
  1611  0019                     	;# 
  1612  0019                     	;# 
  1613  001A                     	;# 
  1614  001B                     	;# 
  1615  001C                     	;# 
  1616  001D                     	;# 
  1617  001E                     	;# 
  1618  001F                     	;# 
  1619  008C                     	;# 
  1620  008D                     	;# 
  1621  008E                     	;# 
  1622  0090                     	;# 
  1623  0091                     	;# 
  1624  0092                     	;# 
  1625  0093                     	;# 
  1626  0094                     	;# 
  1627  0097                     	;# 
  1628  009B                     	;# 
  1629  009B                     	;# 
  1630  009C                     	;# 
  1631  009D                     	;# 
  1632  009E                     	;# 
  1633  009F                     	;# 
  1634  010C                     	;# 
  1635  010D                     	;# 
  1636  010E                     	;# 
  1637  0111                     	;# 
  1638  0112                     	;# 
  1639  0113                     	;# 
  1640  0114                     	;# 
  1641  0115                     	;# 
  1642  0116                     	;# 
  1643  0117                     	;# 
  1644  0118                     	;# 
  1645  0119                     	;# 
  1646  018C                     	;# 
  1647  018D                     	;# 
  1648  018E                     	;# 
  1649  0197                     	;# 
  1650  0199                     	;# 
  1651  0199                     	;# 
  1652  0199                     	;# 
  1653  019A                     	;# 
  1654  019A                     	;# 
  1655  019A                     	;# 
  1656  019B                     	;# 
  1657  019B                     	;# 
  1658  019B                     	;# 
  1659  019B                     	;# 
  1660  019B                     	;# 
  1661  019C                     	;# 
  1662  019C                     	;# 
  1663  019C                     	;# 
  1664  019D                     	;# 
  1665  019D                     	;# 
  1666  019D                     	;# 
  1667  019E                     	;# 
  1668  019E                     	;# 
  1669  019E                     	;# 
  1670  019F                     	;# 
  1671  019F                     	;# 
  1672  019F                     	;# 
  1673  019F                     	;# 
  1674  019F                     	;# 
  1675  020C                     	;# 
  1676  020D                     	;# 
  1677  020E                     	;# 
  1678  0211                     	;# 
  1679  0211                     	;# 
  1680  0212                     	;# 
  1681  0212                     	;# 
  1682  0213                     	;# 
  1683  0213                     	;# 
  1684  0214                     	;# 
  1685  0214                     	;# 
  1686  0215                     	;# 
  1687  0215                     	;# 
  1688  0215                     	;# 
  1689  0215                     	;# 
  1690  0216                     	;# 
  1691  0216                     	;# 
  1692  0217                     	;# 
  1693  0217                     	;# 
  1694  0219                     	;# 
  1695  021A                     	;# 
  1696  021B                     	;# 
  1697  021C                     	;# 
  1698  021D                     	;# 
  1699  021D                     	;# 
  1700  021E                     	;# 
  1701  021F                     	;# 
  1702  028C                     	;# 
  1703  028D                     	;# 
  1704  028E                     	;# 
  1705  0291                     	;# 
  1706  0291                     	;# 
  1707  0292                     	;# 
  1708  0293                     	;# 
  1709  0294                     	;# 
  1710  0295                     	;# 
  1711  0295                     	;# 
  1712  0296                     	;# 
  1713  0297                     	;# 
  1714  0298                     	;# 
  1715  029F                     	;# 
  1716  030C                     	;# 
  1717  030D                     	;# 
  1718  030E                     	;# 
  1719  0311                     	;# 
  1720  0311                     	;# 
  1721  0312                     	;# 
  1722  0313                     	;# 
  1723  0314                     	;# 
  1724  0315                     	;# 
  1725  0315                     	;# 
  1726  0316                     	;# 
  1727  0317                     	;# 
  1728  0318                     	;# 
  1729  038C                     	;# 
  1730  038D                     	;# 
  1731  038E                     	;# 
  1732  0391                     	;# 
  1733  0392                     	;# 
  1734  0393                     	;# 
  1735  0394                     	;# 
  1736  0395                     	;# 
  1737  0396                     	;# 
  1738  0397                     	;# 
  1739  0398                     	;# 
  1740  0399                     	;# 
  1741  039A                     	;# 
  1742  039C                     	;# 
  1743  039D                     	;# 
  1744  039E                     	;# 
  1745  039F                     	;# 
  1746  0411                     	;# 
  1747  0411                     	;# 
  1748  0412                     	;# 
  1749  0413                     	;# 
  1750  0414                     	;# 
  1751  0415                     	;# 
  1752  0416                     	;# 
  1753  0417                     	;# 
  1754  0418                     	;# 
  1755  0418                     	;# 
  1756  0419                     	;# 
  1757  041A                     	;# 
  1758  041B                     	;# 
  1759  041C                     	;# 
  1760  041D                     	;# 
  1761  041E                     	;# 
  1762  041F                     	;# 
  1763  0498                     	;# 
  1764  0498                     	;# 
  1765  0499                     	;# 
  1766  049A                     	;# 
  1767  049B                     	;# 
  1768  049B                     	;# 
  1769  049C                     	;# 
  1770  049D                     	;# 
  1771  049E                     	;# 
  1772  049F                     	;# 
  1773  0617                     	;# 
  1774  0618                     	;# 
  1775  0619                     	;# 
  1776  0619                     	;# 
  1777  061A                     	;# 
  1778  061B                     	;# 
  1779  061C                     	;# 
  1780  061C                     	;# 
  1781  061F                     	;# 
  1782  0691                     	;# 
  1783  0692                     	;# 
  1784  0693                     	;# 
  1785  0694                     	;# 
  1786  0695                     	;# 
  1787  0696                     	;# 
  1788  0697                     	;# 
  1789  0698                     	;# 
  1790  0699                     	;# 
  1791  0711                     	;# 
  1792  0712                     	;# 
  1793  0713                     	;# 
  1794  0714                     	;# 
  1795  0715                     	;# 
  1796  0716                     	;# 
  1797  0717                     	;# 
  1798  0718                     	;# 
  1799  0719                     	;# 
  1800  0891                     	;# 
  1801  0891                     	;# 
  1802  0891                     	;# 
  1803  0891                     	;# 
  1804  0891                     	;# 
  1805  0891                     	;# 
  1806  0892                     	;# 
  1807  0892                     	;# 
  1808  0892                     	;# 
  1809  0893                     	;# 
  1810  0893                     	;# 
  1811  0893                     	;# 
  1812  0893                     	;# 
  1813  0893                     	;# 
  1814  0893                     	;# 
  1815  0894                     	;# 
  1816  0894                     	;# 
  1817  0894                     	;# 
  1818  0895                     	;# 
  1819  0895                     	;# 
  1820  0895                     	;# 
  1821  0896                     	;# 
  1822  0896                     	;# 
  1823  0896                     	;# 
  1824  089B                     	;# 
  1825  0911                     	;# 
  1826  0912                     	;# 
  1827  0913                     	;# 
  1828  0914                     	;# 
  1829  0915                     	;# 
  1830  0916                     	;# 
  1831  0918                     	;# 
  1832  0919                     	;# 
  1833  091A                     	;# 
  1834  091B                     	;# 
  1835  091C                     	;# 
  1836  091D                     	;# 
  1837  091E                     	;# 
  1838  091F                     	;# 
  1839  0E0F                     	;# 
  1840  0E10                     	;# 
  1841  0E11                     	;# 
  1842  0E12                     	;# 
  1843  0E13                     	;# 
  1844  0E14                     	;# 
  1845  0E15                     	;# 
  1846  0E16                     	;# 
  1847  0E17                     	;# 
  1848  0E18                     	;# 
  1849  0E19                     	;# 
  1850  0E1A                     	;# 
  1851  0E1B                     	;# 
  1852  0E1C                     	;# 
  1853  0E1D                     	;# 
  1854  0E1E                     	;# 
  1855  0E1F                     	;# 
  1856  0E20                     	;# 
  1857  0E21                     	;# 
  1858  0E22                     	;# 
  1859  0E24                     	;# 
  1860  0E25                     	;# 
  1861  0E28                     	;# 
  1862  0E29                     	;# 
  1863  0E2A                     	;# 
  1864  0E2B                     	;# 
  1865  0E2C                     	;# 
  1866  0E2D                     	;# 
  1867  0E2E                     	;# 
  1868  0E2F                     	;# 
  1869  0E90                     	;# 
  1870  0E91                     	;# 
  1871  0E92                     	;# 
  1872  0E94                     	;# 
  1873  0E95                     	;# 
  1874  0E9C                     	;# 
  1875  0E9D                     	;# 
  1876  0E9E                     	;# 
  1877  0E9F                     	;# 
  1878  0EA0                     	;# 
  1879  0EA1                     	;# 
  1880  0EA2                     	;# 
  1881  0EA3                     	;# 
  1882  0EA4                     	;# 
  1883  0EA5                     	;# 
  1884  0EA6                     	;# 
  1885  0EA7                     	;# 
  1886  0F0F                     	;# 
  1887  0F10                     	;# 
  1888  0F11                     	;# 
  1889  0F12                     	;# 
  1890  0F13                     	;# 
  1891  0F14                     	;# 
  1892  0F15                     	;# 
  1893  0F16                     	;# 
  1894  0F17                     	;# 
  1895  0F18                     	;# 
  1896  0F19                     	;# 
  1897  0F1A                     	;# 
  1898  0F1B                     	;# 
  1899  0F1C                     	;# 
  1900  0F1D                     	;# 
  1901  0F1E                     	;# 
  1902  0F1F                     	;# 
  1903  0F20                     	;# 
  1904  0F21                     	;# 
  1905  0F22                     	;# 
  1906  0F23                     	;# 
  1907  0F24                     	;# 
  1908  0F25                     	;# 
  1909  0F26                     	;# 
  1910  0F27                     	;# 
  1911  0F28                     	;# 
  1912  0F29                     	;# 
  1913  0F2A                     	;# 
  1914  0F2B                     	;# 
  1915  0F2C                     	;# 
  1916  0F2D                     	;# 
  1917  0F2E                     	;# 
  1918  0F2F                     	;# 
  1919  0F30                     	;# 
  1920  0F31                     	;# 
  1921  0F32                     	;# 
  1922  0F33                     	;# 
  1923  0F34                     	;# 
  1924  0F35                     	;# 
  1925  0F36                     	;# 
  1926  0F37                     	;# 
  1927  0FE4                     	;# 
  1928  0FE5                     	;# 
  1929  0FE6                     	;# 
  1930  0FE7                     	;# 
  1931  0FE8                     	;# 
  1932  0FE9                     	;# 
  1933  0FEA                     	;# 
  1934  0FEB                     	;# 
  1935  0FED                     	;# 
  1936  0FEE                     	;# 
  1937  0FEF                     	;# 
  1938  0000                     	;# 
  1939  0001                     	;# 
  1940  0002                     	;# 
  1941  0003                     	;# 
  1942  0004                     	;# 
  1943  0005                     	;# 
  1944  0006                     	;# 
  1945  0007                     	;# 
  1946  0008                     	;# 
  1947  0009                     	;# 
  1948  000A                     	;# 
  1949  000B                     	;# 
  1950  000C                     	;# 
  1951  000D                     	;# 
  1952  000E                     	;# 
  1953  0010                     	;# 
  1954  0011                     	;# 
  1955  0012                     	;# 
  1956  0013                     	;# 
  1957  0014                     	;# 
  1958  0015                     	;# 
  1959  0015                     	;# 
  1960  0016                     	;# 
  1961  0016                     	;# 
  1962  0017                     	;# 
  1963  0018                     	;# 
  1964  0019                     	;# 
  1965  0019                     	;# 
  1966  001A                     	;# 
  1967  001B                     	;# 
  1968  001C                     	;# 
  1969  001D                     	;# 
  1970  001E                     	;# 
  1971  001F                     	;# 
  1972  008C                     	;# 
  1973  008D                     	;# 
  1974  008E                     	;# 
  1975  0090                     	;# 
  1976  0091                     	;# 
  1977  0092                     	;# 
  1978  0093                     	;# 
  1979  0094                     	;# 
  1980  0097                     	;# 
  1981  009B                     	;# 
  1982  009B                     	;# 
  1983  009C                     	;# 
  1984  009D                     	;# 
  1985  009E                     	;# 
  1986  009F                     	;# 
  1987  010C                     	;# 
  1988  010D                     	;# 
  1989  010E                     	;# 
  1990  0111                     	;# 
  1991  0112                     	;# 
  1992  0113                     	;# 
  1993  0114                     	;# 
  1994  0115                     	;# 
  1995  0116                     	;# 
  1996  0117                     	;# 
  1997  0118                     	;# 
  1998  0119                     	;# 
  1999  018C                     	;# 
  2000  018D                     	;# 
  2001  018E                     	;# 
  2002  0197                     	;# 
  2003  0199                     	;# 
  2004  0199                     	;# 
  2005  0199                     	;# 
  2006  019A                     	;# 
  2007  019A                     	;# 
  2008  019A                     	;# 
  2009  019B                     	;# 
  2010  019B                     	;# 
  2011  019B                     	;# 
  2012  019B                     	;# 
  2013  019B                     	;# 
  2014  019C                     	;# 
  2015  019C                     	;# 
  2016  019C                     	;# 
  2017  019D                     	;# 
  2018  019D                     	;# 
  2019  019D                     	;# 
  2020  019E                     	;# 
  2021  019E                     	;# 
  2022  019E                     	;# 
  2023  019F                     	;# 
  2024  019F                     	;# 
  2025  019F                     	;# 
  2026  019F                     	;# 
  2027  019F                     	;# 
  2028  020C                     	;# 
  2029  020D                     	;# 
  2030  020E                     	;# 
  2031  0211                     	;# 
  2032  0211                     	;# 
  2033  0212                     	;# 
  2034  0212                     	;# 
  2035  0213                     	;# 
  2036  0213                     	;# 
  2037  0214                     	;# 
  2038  0214                     	;# 
  2039  0215                     	;# 
  2040  0215                     	;# 
  2041  0215                     	;# 
  2042  0215                     	;# 
  2043  0216                     	;# 
  2044  0216                     	;# 
  2045  0217                     	;# 
  2046  0217                     	;# 
  2047  0219                     	;# 
  2048  021A                     	;# 
  2049  021B                     	;# 
  2050  021C                     	;# 
  2051  021D                     	;# 
  2052  021D                     	;# 
  2053  021E                     	;# 
  2054  021F                     	;# 
  2055  028C                     	;# 
  2056  028D                     	;# 
  2057  028E                     	;# 
  2058  0291                     	;# 
  2059  0291                     	;# 
  2060  0292                     	;# 
  2061  0293                     	;# 
  2062  0294                     	;# 
  2063  0295                     	;# 
  2064  0295                     	;# 
  2065  0296                     	;# 
  2066  0297                     	;# 
  2067  0298                     	;# 
  2068  029F                     	;# 
  2069  030C                     	;# 
  2070  030D                     	;# 
  2071  030E                     	;# 
  2072  0311                     	;# 
  2073  0311                     	;# 
  2074  0312                     	;# 
  2075  0313                     	;# 
  2076  0314                     	;# 
  2077  0315                     	;# 
  2078  0315                     	;# 
  2079  0316                     	;# 
  2080  0317                     	;# 
  2081  0318                     	;# 
  2082  038C                     	;# 
  2083  038D                     	;# 
  2084  038E                     	;# 
  2085  0391                     	;# 
  2086  0392                     	;# 
  2087  0393                     	;# 
  2088  0394                     	;# 
  2089  0395                     	;# 
  2090  0396                     	;# 
  2091  0397                     	;# 
  2092  0398                     	;# 
  2093  0399                     	;# 
  2094  039A                     	;# 
  2095  039C                     	;# 
  2096  039D                     	;# 
  2097  039E                     	;# 
  2098  039F                     	;# 
  2099  0411                     	;# 
  2100  0411                     	;# 
  2101  0412                     	;# 
  2102  0413                     	;# 
  2103  0414                     	;# 
  2104  0415                     	;# 
  2105  0416                     	;# 
  2106  0417                     	;# 
  2107  0418                     	;# 
  2108  0418                     	;# 
  2109  0419                     	;# 
  2110  041A                     	;# 
  2111  041B                     	;# 
  2112  041C                     	;# 
  2113  041D                     	;# 
  2114  041E                     	;# 
  2115  041F                     	;# 
  2116  0498                     	;# 
  2117  0498                     	;# 
  2118  0499                     	;# 
  2119  049A                     	;# 
  2120  049B                     	;# 
  2121  049B                     	;# 
  2122  049C                     	;# 
  2123  049D                     	;# 
  2124  049E                     	;# 
  2125  049F                     	;# 
  2126  0617                     	;# 
  2127  0618                     	;# 
  2128  0619                     	;# 
  2129  0619                     	;# 
  2130  061A                     	;# 
  2131  061B                     	;# 
  2132  061C                     	;# 
  2133  061C                     	;# 
  2134  061F                     	;# 
  2135  0691                     	;# 
  2136  0692                     	;# 
  2137  0693                     	;# 
  2138  0694                     	;# 
  2139  0695                     	;# 
  2140  0696                     	;# 
  2141  0697                     	;# 
  2142  0698                     	;# 
  2143  0699                     	;# 
  2144  0711                     	;# 
  2145  0712                     	;# 
  2146  0713                     	;# 
  2147  0714                     	;# 
  2148  0715                     	;# 
  2149  0716                     	;# 
  2150  0717                     	;# 
  2151  0718                     	;# 
  2152  0719                     	;# 
  2153  0891                     	;# 
  2154  0891                     	;# 
  2155  0891                     	;# 
  2156  0891                     	;# 
  2157  0891                     	;# 
  2158  0891                     	;# 
  2159  0892                     	;# 
  2160  0892                     	;# 
  2161  0892                     	;# 
  2162  0893                     	;# 
  2163  0893                     	;# 
  2164  0893                     	;# 
  2165  0893                     	;# 
  2166  0893                     	;# 
  2167  0893                     	;# 
  2168  0894                     	;# 
  2169  0894                     	;# 
  2170  0894                     	;# 
  2171  0895                     	;# 
  2172  0895                     	;# 
  2173  0895                     	;# 
  2174  0896                     	;# 
  2175  0896                     	;# 
  2176  0896                     	;# 
  2177  089B                     	;# 
  2178  0911                     	;# 
  2179  0912                     	;# 
  2180  0913                     	;# 
  2181  0914                     	;# 
  2182  0915                     	;# 
  2183  0916                     	;# 
  2184  0918                     	;# 
  2185  0919                     	;# 
  2186  091A                     	;# 
  2187  091B                     	;# 
  2188  091C                     	;# 
  2189  091D                     	;# 
  2190  091E                     	;# 
  2191  091F                     	;# 
  2192  0E0F                     	;# 
  2193  0E10                     	;# 
  2194  0E11                     	;# 
  2195  0E12                     	;# 
  2196  0E13                     	;# 
  2197  0E14                     	;# 
  2198  0E15                     	;# 
  2199  0E16                     	;# 
  2200  0E17                     	;# 
  2201  0E18                     	;# 
  2202  0E19                     	;# 
  2203  0E1A                     	;# 
  2204  0E1B                     	;# 
  2205  0E1C                     	;# 
  2206  0E1D                     	;# 
  2207  0E1E                     	;# 
  2208  0E1F                     	;# 
  2209  0E20                     	;# 
  2210  0E21                     	;# 
  2211  0E22                     	;# 
  2212  0E24                     	;# 
  2213  0E25                     	;# 
  2214  0E28                     	;# 
  2215  0E29                     	;# 
  2216  0E2A                     	;# 
  2217  0E2B                     	;# 
  2218  0E2C                     	;# 
  2219  0E2D                     	;# 
  2220  0E2E                     	;# 
  2221  0E2F                     	;# 
  2222  0E90                     	;# 
  2223  0E91                     	;# 
  2224  0E92                     	;# 
  2225  0E94                     	;# 
  2226  0E95                     	;# 
  2227  0E9C                     	;# 
  2228  0E9D                     	;# 
  2229  0E9E                     	;# 
  2230  0E9F                     	;# 
  2231  0EA0                     	;# 
  2232  0EA1                     	;# 
  2233  0EA2                     	;# 
  2234  0EA3                     	;# 
  2235  0EA4                     	;# 
  2236  0EA5                     	;# 
  2237  0EA6                     	;# 
  2238  0EA7                     	;# 
  2239  0F0F                     	;# 
  2240  0F10                     	;# 
  2241  0F11                     	;# 
  2242  0F12                     	;# 
  2243  0F13                     	;# 
  2244  0F14                     	;# 
  2245  0F15                     	;# 
  2246  0F16                     	;# 
  2247  0F17                     	;# 
  2248  0F18                     	;# 
  2249  0F19                     	;# 
  2250  0F1A                     	;# 
  2251  0F1B                     	;# 
  2252  0F1C                     	;# 
  2253  0F1D                     	;# 
  2254  0F1E                     	;# 
  2255  0F1F                     	;# 
  2256  0F20                     	;# 
  2257  0F21                     	;# 
  2258  0F22                     	;# 
  2259  0F23                     	;# 
  2260  0F24                     	;# 
  2261  0F25                     	;# 
  2262  0F26                     	;# 
  2263  0F27                     	;# 
  2264  0F28                     	;# 
  2265  0F29                     	;# 
  2266  0F2A                     	;# 
  2267  0F2B                     	;# 
  2268  0F2C                     	;# 
  2269  0F2D                     	;# 
  2270  0F2E                     	;# 
  2271  0F2F                     	;# 
  2272  0F30                     	;# 
  2273  0F31                     	;# 
  2274  0F32                     	;# 
  2275  0F33                     	;# 
  2276  0F34                     	;# 
  2277  0F35                     	;# 
  2278  0F36                     	;# 
  2279  0F37                     	;# 
  2280  0FE4                     	;# 
  2281  0FE5                     	;# 
  2282  0FE6                     	;# 
  2283  0FE7                     	;# 
  2284  0FE8                     	;# 
  2285  0FE9                     	;# 
  2286  0FEA                     	;# 
  2287  0FEB                     	;# 
  2288  0FED                     	;# 
  2289  0FEE                     	;# 
  2290  0FEF                     	;# 
  2291  0000                     	;# 
  2292  0001                     	;# 
  2293  0002                     	;# 
  2294  0003                     	;# 
  2295  0004                     	;# 
  2296  0005                     	;# 
  2297  0006                     	;# 
  2298  0007                     	;# 
  2299  0008                     	;# 
  2300  0009                     	;# 
  2301  000A                     	;# 
  2302  000B                     	;# 
  2303  000C                     	;# 
  2304  000D                     	;# 
  2305  000E                     	;# 
  2306  0010                     	;# 
  2307  0011                     	;# 
  2308  0012                     	;# 
  2309  0013                     	;# 
  2310  0014                     	;# 
  2311  0015                     	;# 
  2312  0015                     	;# 
  2313  0016                     	;# 
  2314  0016                     	;# 
  2315  0017                     	;# 
  2316  0018                     	;# 
  2317  0019                     	;# 
  2318  0019                     	;# 
  2319  001A                     	;# 
  2320  001B                     	;# 
  2321  001C                     	;# 
  2322  001D                     	;# 
  2323  001E                     	;# 
  2324  001F                     	;# 
  2325  008C                     	;# 
  2326  008D                     	;# 
  2327  008E                     	;# 
  2328  0090                     	;# 
  2329  0091                     	;# 
  2330  0092                     	;# 
  2331  0093                     	;# 
  2332  0094                     	;# 
  2333  0097                     	;# 
  2334  009B                     	;# 
  2335  009B                     	;# 
  2336  009C                     	;# 
  2337  009D                     	;# 
  2338  009E                     	;# 
  2339  009F                     	;# 
  2340  010C                     	;# 
  2341  010D                     	;# 
  2342  010E                     	;# 
  2343  0111                     	;# 
  2344  0112                     	;# 
  2345  0113                     	;# 
  2346  0114                     	;# 
  2347  0115                     	;# 
  2348  0116                     	;# 
  2349  0117                     	;# 
  2350  0118                     	;# 
  2351  0119                     	;# 
  2352  018C                     	;# 
  2353  018D                     	;# 
  2354  018E                     	;# 
  2355  0197                     	;# 
  2356  0199                     	;# 
  2357  0199                     	;# 
  2358  0199                     	;# 
  2359  019A                     	;# 
  2360  019A                     	;# 
  2361  019A                     	;# 
  2362  019B                     	;# 
  2363  019B                     	;# 
  2364  019B                     	;# 
  2365  019B                     	;# 
  2366  019B                     	;# 
  2367  019C                     	;# 
  2368  019C                     	;# 
  2369  019C                     	;# 
  2370  019D                     	;# 
  2371  019D                     	;# 
  2372  019D                     	;# 
  2373  019E                     	;# 
  2374  019E                     	;# 
  2375  019E                     	;# 
  2376  019F                     	;# 
  2377  019F                     	;# 
  2378  019F                     	;# 
  2379  019F                     	;# 
  2380  019F                     	;# 
  2381  020C                     	;# 
  2382  020D                     	;# 
  2383  020E                     	;# 
  2384  0211                     	;# 
  2385  0211                     	;# 
  2386  0212                     	;# 
  2387  0212                     	;# 
  2388  0213                     	;# 
  2389  0213                     	;# 
  2390  0214                     	;# 
  2391  0214                     	;# 
  2392  0215                     	;# 
  2393  0215                     	;# 
  2394  0215                     	;# 
  2395  0215                     	;# 
  2396  0216                     	;# 
  2397  0216                     	;# 
  2398  0217                     	;# 
  2399  0217                     	;# 
  2400  0219                     	;# 
  2401  021A                     	;# 
  2402  021B                     	;# 
  2403  021C                     	;# 
  2404  021D                     	;# 
  2405  021D                     	;# 
  2406  021E                     	;# 
  2407  021F                     	;# 
  2408  028C                     	;# 
  2409  028D                     	;# 
  2410  028E                     	;# 
  2411  0291                     	;# 
  2412  0291                     	;# 
  2413  0292                     	;# 
  2414  0293                     	;# 
  2415  0294                     	;# 
  2416  0295                     	;# 
  2417  0295                     	;# 
  2418  0296                     	;# 
  2419  0297                     	;# 
  2420  0298                     	;# 
  2421  029F                     	;# 
  2422  030C                     	;# 
  2423  030D                     	;# 
  2424  030E                     	;# 
  2425  0311                     	;# 
  2426  0311                     	;# 
  2427  0312                     	;# 
  2428  0313                     	;# 
  2429  0314                     	;# 
  2430  0315                     	;# 
  2431  0315                     	;# 
  2432  0316                     	;# 
  2433  0317                     	;# 
  2434  0318                     	;# 
  2435  038C                     	;# 
  2436  038D                     	;# 
  2437  038E                     	;# 
  2438  0391                     	;# 
  2439  0392                     	;# 
  2440  0393                     	;# 
  2441  0394                     	;# 
  2442  0395                     	;# 
  2443  0396                     	;# 
  2444  0397                     	;# 
  2445  0398                     	;# 
  2446  0399                     	;# 
  2447  039A                     	;# 
  2448  039C                     	;# 
  2449  039D                     	;# 
  2450  039E                     	;# 
  2451  039F                     	;# 
  2452  0411                     	;# 
  2453  0411                     	;# 
  2454  0412                     	;# 
  2455  0413                     	;# 
  2456  0414                     	;# 
  2457  0415                     	;# 
  2458  0416                     	;# 
  2459  0417                     	;# 
  2460  0418                     	;# 
  2461  0418                     	;# 
  2462  0419                     	;# 
  2463  041A                     	;# 
  2464  041B                     	;# 
  2465  041C                     	;# 
  2466  041D                     	;# 
  2467  041E                     	;# 
  2468  041F                     	;# 
  2469  0498                     	;# 
  2470  0498                     	;# 
  2471  0499                     	;# 
  2472  049A                     	;# 
  2473  049B                     	;# 
  2474  049B                     	;# 
  2475  049C                     	;# 
  2476  049D                     	;# 
  2477  049E                     	;# 
  2478  049F                     	;# 
  2479  0617                     	;# 
  2480  0618                     	;# 
  2481  0619                     	;# 
  2482  0619                     	;# 
  2483  061A                     	;# 
  2484  061B                     	;# 
  2485  061C                     	;# 
  2486  061C                     	;# 
  2487  061F                     	;# 
  2488  0691                     	;# 
  2489  0692                     	;# 
  2490  0693                     	;# 
  2491  0694                     	;# 
  2492  0695                     	;# 
  2493  0696                     	;# 
  2494  0697                     	;# 
  2495  0698                     	;# 
  2496  0699                     	;# 
  2497  0711                     	;# 
  2498  0712                     	;# 
  2499  0713                     	;# 
  2500  0714                     	;# 
  2501  0715                     	;# 
  2502  0716                     	;# 
  2503  0717                     	;# 
  2504  0718                     	;# 
  2505  0719                     	;# 
  2506  0891                     	;# 
  2507  0891                     	;# 
  2508  0891                     	;# 
  2509  0891                     	;# 
  2510  0891                     	;# 
  2511  0891                     	;# 
  2512  0892                     	;# 
  2513  0892                     	;# 
  2514  0892                     	;# 
  2515  0893                     	;# 
  2516  0893                     	;# 
  2517  0893                     	;# 
  2518  0893                     	;# 
  2519  0893                     	;# 
  2520  0893                     	;# 
  2521  0894                     	;# 
  2522  0894                     	;# 
  2523  0894                     	;# 
  2524  0895                     	;# 
  2525  0895                     	;# 
  2526  0895                     	;# 
  2527  0896                     	;# 
  2528  0896                     	;# 
  2529  0896                     	;# 
  2530  089B                     	;# 
  2531  0911                     	;# 
  2532  0912                     	;# 
  2533  0913                     	;# 
  2534  0914                     	;# 
  2535  0915                     	;# 
  2536  0916                     	;# 
  2537  0918                     	;# 
  2538  0919                     	;# 
  2539  091A                     	;# 
  2540  091B                     	;# 
  2541  091C                     	;# 
  2542  091D                     	;# 
  2543  091E                     	;# 
  2544  091F                     	;# 
  2545  0E0F                     	;# 
  2546  0E10                     	;# 
  2547  0E11                     	;# 
  2548  0E12                     	;# 
  2549  0E13                     	;# 
  2550  0E14                     	;# 
  2551  0E15                     	;# 
  2552  0E16                     	;# 
  2553  0E17                     	;# 
  2554  0E18                     	;# 
  2555  0E19                     	;# 
  2556  0E1A                     	;# 
  2557  0E1B                     	;# 
  2558  0E1C                     	;# 
  2559  0E1D                     	;# 
  2560  0E1E                     	;# 
  2561  0E1F                     	;# 
  2562  0E20                     	;# 
  2563  0E21                     	;# 
  2564  0E22                     	;# 
  2565  0E24                     	;# 
  2566  0E25                     	;# 
  2567  0E28                     	;# 
  2568  0E29                     	;# 
  2569  0E2A                     	;# 
  2570  0E2B                     	;# 
  2571  0E2C                     	;# 
  2572  0E2D                     	;# 
  2573  0E2E                     	;# 
  2574  0E2F                     	;# 
  2575  0E90                     	;# 
  2576  0E91                     	;# 
  2577  0E92                     	;# 
  2578  0E94                     	;# 
  2579  0E95                     	;# 
  2580  0E9C                     	;# 
  2581  0E9D                     	;# 
  2582  0E9E                     	;# 
  2583  0E9F                     	;# 
  2584  0EA0                     	;# 
  2585  0EA1                     	;# 
  2586  0EA2                     	;# 
  2587  0EA3                     	;# 
  2588  0EA4                     	;# 
  2589  0EA5                     	;# 
  2590  0EA6                     	;# 
  2591  0EA7                     	;# 
  2592  0F0F                     	;# 
  2593  0F10                     	;# 
  2594  0F11                     	;# 
  2595  0F12                     	;# 
  2596  0F13                     	;# 
  2597  0F14                     	;# 
  2598  0F15                     	;# 
  2599  0F16                     	;# 
  2600  0F17                     	;# 
  2601  0F18                     	;# 
  2602  0F19                     	;# 
  2603  0F1A                     	;# 
  2604  0F1B                     	;# 
  2605  0F1C                     	;# 
  2606  0F1D                     	;# 
  2607  0F1E                     	;# 
  2608  0F1F                     	;# 
  2609  0F20                     	;# 
  2610  0F21                     	;# 
  2611  0F22                     	;# 
  2612  0F23                     	;# 
  2613  0F24                     	;# 
  2614  0F25                     	;# 
  2615  0F26                     	;# 
  2616  0F27                     	;# 
  2617  0F28                     	;# 
  2618  0F29                     	;# 
  2619  0F2A                     	;# 
  2620  0F2B                     	;# 
  2621  0F2C                     	;# 
  2622  0F2D                     	;# 
  2623  0F2E                     	;# 
  2624  0F2F                     	;# 
  2625  0F30                     	;# 
  2626  0F31                     	;# 
  2627  0F32                     	;# 
  2628  0F33                     	;# 
  2629  0F34                     	;# 
  2630  0F35                     	;# 
  2631  0F36                     	;# 
  2632  0F37                     	;# 
  2633  0FE4                     	;# 
  2634  0FE5                     	;# 
  2635  0FE6                     	;# 
  2636  0FE7                     	;# 
  2637  0FE8                     	;# 
  2638  0FE9                     	;# 
  2639  0FEA                     	;# 
  2640  0FEB                     	;# 
  2641  0FED                     	;# 
  2642  0FEE                     	;# 
  2643  0FEF                     	;# 
  2644  0000                     	;# 
  2645  0001                     	;# 
  2646  0002                     	;# 
  2647  0003                     	;# 
  2648  0004                     	;# 
  2649  0005                     	;# 
  2650  0006                     	;# 
  2651  0007                     	;# 
  2652  0008                     	;# 
  2653  0009                     	;# 
  2654  000A                     	;# 
  2655  000B                     	;# 
  2656  000C                     	;# 
  2657  000D                     	;# 
  2658  000E                     	;# 
  2659  0010                     	;# 
  2660  0011                     	;# 
  2661  0012                     	;# 
  2662  0013                     	;# 
  2663  0014                     	;# 
  2664  0015                     	;# 
  2665  0015                     	;# 
  2666  0016                     	;# 
  2667  0016                     	;# 
  2668  0017                     	;# 
  2669  0018                     	;# 
  2670  0019                     	;# 
  2671  0019                     	;# 
  2672  001A                     	;# 
  2673  001B                     	;# 
  2674  001C                     	;# 
  2675  001D                     	;# 
  2676  001E                     	;# 
  2677  001F                     	;# 
  2678  008C                     	;# 
  2679  008D                     	;# 
  2680  008E                     	;# 
  2681  0090                     	;# 
  2682  0091                     	;# 
  2683  0092                     	;# 
  2684  0093                     	;# 
  2685  0094                     	;# 
  2686  0097                     	;# 
  2687  009B                     	;# 
  2688  009B                     	;# 
  2689  009C                     	;# 
  2690  009D                     	;# 
  2691  009E                     	;# 
  2692  009F                     	;# 
  2693  010C                     	;# 
  2694  010D                     	;# 
  2695  010E                     	;# 
  2696  0111                     	;# 
  2697  0112                     	;# 
  2698  0113                     	;# 
  2699  0114                     	;# 
  2700  0115                     	;# 
  2701  0116                     	;# 
  2702  0117                     	;# 
  2703  0118                     	;# 
  2704  0119                     	;# 
  2705  018C                     	;# 
  2706  018D                     	;# 
  2707  018E                     	;# 
  2708  0197                     	;# 
  2709  0199                     	;# 
  2710  0199                     	;# 
  2711  0199                     	;# 
  2712  019A                     	;# 
  2713  019A                     	;# 
  2714  019A                     	;# 
  2715  019B                     	;# 
  2716  019B                     	;# 
  2717  019B                     	;# 
  2718  019B                     	;# 
  2719  019B                     	;# 
  2720  019C                     	;# 
  2721  019C                     	;# 
  2722  019C                     	;# 
  2723  019D                     	;# 
  2724  019D                     	;# 
  2725  019D                     	;# 
  2726  019E                     	;# 
  2727  019E                     	;# 
  2728  019E                     	;# 
  2729  019F                     	;# 
  2730  019F                     	;# 
  2731  019F                     	;# 
  2732  019F                     	;# 
  2733  019F                     	;# 
  2734  020C                     	;# 
  2735  020D                     	;# 
  2736  020E                     	;# 
  2737  0211                     	;# 
  2738  0211                     	;# 
  2739  0212                     	;# 
  2740  0212                     	;# 
  2741  0213                     	;# 
  2742  0213                     	;# 
  2743  0214                     	;# 
  2744  0214                     	;# 
  2745  0215                     	;# 
  2746  0215                     	;# 
  2747  0215                     	;# 
  2748  0215                     	;# 
  2749  0216                     	;# 
  2750  0216                     	;# 
  2751  0217                     	;# 
  2752  0217                     	;# 
  2753  0219                     	;# 
  2754  021A                     	;# 
  2755  021B                     	;# 
  2756  021C                     	;# 
  2757  021D                     	;# 
  2758  021D                     	;# 
  2759  021E                     	;# 
  2760  021F                     	;# 
  2761  028C                     	;# 
  2762  028D                     	;# 
  2763  028E                     	;# 
  2764  0291                     	;# 
  2765  0291                     	;# 
  2766  0292                     	;# 
  2767  0293                     	;# 
  2768  0294                     	;# 
  2769  0295                     	;# 
  2770  0295                     	;# 
  2771  0296                     	;# 
  2772  0297                     	;# 
  2773  0298                     	;# 
  2774  029F                     	;# 
  2775  030C                     	;# 
  2776  030D                     	;# 
  2777  030E                     	;# 
  2778  0311                     	;# 
  2779  0311                     	;# 
  2780  0312                     	;# 
  2781  0313                     	;# 
  2782  0314                     	;# 
  2783  0315                     	;# 
  2784  0315                     	;# 
  2785  0316                     	;# 
  2786  0317                     	;# 
  2787  0318                     	;# 
  2788  038C                     	;# 
  2789  038D                     	;# 
  2790  038E                     	;# 
  2791  0391                     	;# 
  2792  0392                     	;# 
  2793  0393                     	;# 
  2794  0394                     	;# 
  2795  0395                     	;# 
  2796  0396                     	;# 
  2797  0397                     	;# 
  2798  0398                     	;# 
  2799  0399                     	;# 
  2800  039A                     	;# 
  2801  039C                     	;# 
  2802  039D                     	;# 
  2803  039E                     	;# 
  2804  039F                     	;# 
  2805  0411                     	;# 
  2806  0411                     	;# 
  2807  0412                     	;# 
  2808  0413                     	;# 
  2809  0414                     	;# 
  2810  0415                     	;# 
  2811  0416                     	;# 
  2812  0417                     	;# 
  2813  0418                     	;# 
  2814  0418                     	;# 
  2815  0419                     	;# 
  2816  041A                     	;# 
  2817  041B                     	;# 
  2818  041C                     	;# 
  2819  041D                     	;# 
  2820  041E                     	;# 
  2821  041F                     	;# 
  2822  0498                     	;# 
  2823  0498                     	;# 
  2824  0499                     	;# 
  2825  049A                     	;# 
  2826  049B                     	;# 
  2827  049B                     	;# 
  2828  049C                     	;# 
  2829  049D                     	;# 
  2830  049E                     	;# 
  2831  049F                     	;# 
  2832  0617                     	;# 
  2833  0618                     	;# 
  2834  0619                     	;# 
  2835  0619                     	;# 
  2836  061A                     	;# 
  2837  061B                     	;# 
  2838  061C                     	;# 
  2839  061C                     	;# 
  2840  061F                     	;# 
  2841  0691                     	;# 
  2842  0692                     	;# 
  2843  0693                     	;# 
  2844  0694                     	;# 
  2845  0695                     	;# 
  2846  0696                     	;# 
  2847  0697                     	;# 
  2848  0698                     	;# 
  2849  0699                     	;# 
  2850  0711                     	;# 
  2851  0712                     	;# 
  2852  0713                     	;# 
  2853  0714                     	;# 
  2854  0715                     	;# 
  2855  0716                     	;# 
  2856  0717                     	;# 
  2857  0718                     	;# 
  2858  0719                     	;# 
  2859  0891                     	;# 
  2860  0891                     	;# 
  2861  0891                     	;# 
  2862  0891                     	;# 
  2863  0891                     	;# 
  2864  0891                     	;# 
  2865  0892                     	;# 
  2866  0892                     	;# 
  2867  0892                     	;# 
  2868  0893                     	;# 
  2869  0893                     	;# 
  2870  0893                     	;# 
  2871  0893                     	;# 
  2872  0893                     	;# 
  2873  0893                     	;# 
  2874  0894                     	;# 
  2875  0894                     	;# 
  2876  0894                     	;# 
  2877  0895                     	;# 
  2878  0895                     	;# 
  2879  0895                     	;# 
  2880  0896                     	;# 
  2881  0896                     	;# 
  2882  0896                     	;# 
  2883  089B                     	;# 
  2884  0911                     	;# 
  2885  0912                     	;# 
  2886  0913                     	;# 
  2887  0914                     	;# 
  2888  0915                     	;# 
  2889  0916                     	;# 
  2890  0918                     	;# 
  2891  0919                     	;# 
  2892  091A                     	;# 
  2893  091B                     	;# 
  2894  091C                     	;# 
  2895  091D                     	;# 
  2896  091E                     	;# 
  2897  091F                     	;# 
  2898  0E0F                     	;# 
  2899  0E10                     	;# 
  2900  0E11                     	;# 
  2901  0E12                     	;# 
  2902  0E13                     	;# 
  2903  0E14                     	;# 
  2904  0E15                     	;# 
  2905  0E16                     	;# 
  2906  0E17                     	;# 
  2907  0E18                     	;# 
  2908  0E19                     	;# 
  2909  0E1A                     	;# 
  2910  0E1B                     	;# 
  2911  0E1C                     	;# 
  2912  0E1D                     	;# 
  2913  0E1E                     	;# 
  2914  0E1F                     	;# 
  2915  0E20                     	;# 
  2916  0E21                     	;# 
  2917  0E22                     	;# 
  2918  0E24                     	;# 
  2919  0E25                     	;# 
  2920  0E28                     	;# 
  2921  0E29                     	;# 
  2922  0E2A                     	;# 
  2923  0E2B                     	;# 
  2924  0E2C                     	;# 
  2925  0E2D                     	;# 
  2926  0E2E                     	;# 
  2927  0E2F                     	;# 
  2928  0E90                     	;# 
  2929  0E91                     	;# 
  2930  0E92                     	;# 
  2931  0E94                     	;# 
  2932  0E95                     	;# 
  2933  0E9C                     	;# 
  2934  0E9D                     	;# 
  2935  0E9E                     	;# 
  2936  0E9F                     	;# 
  2937  0EA0                     	;# 
  2938  0EA1                     	;# 
  2939  0EA2                     	;# 
  2940  0EA3                     	;# 
  2941  0EA4                     	;# 
  2942  0EA5                     	;# 
  2943  0EA6                     	;# 
  2944  0EA7                     	;# 
  2945  0F0F                     	;# 
  2946  0F10                     	;# 
  2947  0F11                     	;# 
  2948  0F12                     	;# 
  2949  0F13                     	;# 
  2950  0F14                     	;# 
  2951  0F15                     	;# 
  2952  0F16                     	;# 
  2953  0F17                     	;# 
  2954  0F18                     	;# 
  2955  0F19                     	;# 
  2956  0F1A                     	;# 
  2957  0F1B                     	;# 
  2958  0F1C                     	;# 
  2959  0F1D                     	;# 
  2960  0F1E                     	;# 
  2961  0F1F                     	;# 
  2962  0F20                     	;# 
  2963  0F21                     	;# 
  2964  0F22                     	;# 
  2965  0F23                     	;# 
  2966  0F24                     	;# 
  2967  0F25                     	;# 
  2968  0F26                     	;# 
  2969  0F27                     	;# 
  2970  0F28                     	;# 
  2971  0F29                     	;# 
  2972  0F2A                     	;# 
  2973  0F2B                     	;# 
  2974  0F2C                     	;# 
  2975  0F2D                     	;# 
  2976  0F2E                     	;# 
  2977  0F2F                     	;# 
  2978  0F30                     	;# 
  2979  0F31                     	;# 
  2980  0F32                     	;# 
  2981  0F33                     	;# 
  2982  0F34                     	;# 
  2983  0F35                     	;# 
  2984  0F36                     	;# 
  2985  0F37                     	;# 
  2986  0FE4                     	;# 
  2987  0FE5                     	;# 
  2988  0FE6                     	;# 
  2989  0FE7                     	;# 
  2990  0FE8                     	;# 
  2991  0FE9                     	;# 
  2992  0FEA                     	;# 
  2993  0FEB                     	;# 
  2994  0FED                     	;# 
  2995  0FEE                     	;# 
  2996  0FEF                     	;# 
  2997  0000                     	;# 
  2998  0001                     	;# 
  2999  0002                     	;# 
  3000  0003                     	;# 
  3001  0004                     	;# 
  3002  0005                     	;# 
  3003  0006                     	;# 
  3004  0007                     	;# 
  3005  0008                     	;# 
  3006  0009                     	;# 
  3007  000A                     	;# 
  3008  000B                     	;# 
  3009  000C                     	;# 
  3010  000D                     	;# 
  3011  000E                     	;# 
  3012  0010                     	;# 
  3013  0011                     	;# 
  3014  0012                     	;# 
  3015  0013                     	;# 
  3016  0014                     	;# 
  3017  0015                     	;# 
  3018  0015                     	;# 
  3019  0016                     	;# 
  3020  0016                     	;# 
  3021  0017                     	;# 
  3022  0018                     	;# 
  3023  0019                     	;# 
  3024  0019                     	;# 
  3025  001A                     	;# 
  3026  001B                     	;# 
  3027  001C                     	;# 
  3028  001D                     	;# 
  3029  001E                     	;# 
  3030  001F                     	;# 
  3031  008C                     	;# 
  3032  008D                     	;# 
  3033  008E                     	;# 
  3034  0090                     	;# 
  3035  0091                     	;# 
  3036  0092                     	;# 
  3037  0093                     	;# 
  3038  0094                     	;# 
  3039  0097                     	;# 
  3040  009B                     	;# 
  3041  009B                     	;# 
  3042  009C                     	;# 
  3043  009D                     	;# 
  3044  009E                     	;# 
  3045  009F                     	;# 
  3046  010C                     	;# 
  3047  010D                     	;# 
  3048  010E                     	;# 
  3049  0111                     	;# 
  3050  0112                     	;# 
  3051  0113                     	;# 
  3052  0114                     	;# 
  3053  0115                     	;# 
  3054  0116                     	;# 
  3055  0117                     	;# 
  3056  0118                     	;# 
  3057  0119                     	;# 
  3058  018C                     	;# 
  3059  018D                     	;# 
  3060  018E                     	;# 
  3061  0197                     	;# 
  3062  0199                     	;# 
  3063  0199                     	;# 
  3064  0199                     	;# 
  3065  019A                     	;# 
  3066  019A                     	;# 
  3067  019A                     	;# 
  3068  019B                     	;# 
  3069  019B                     	;# 
  3070  019B                     	;# 
  3071  019B                     	;# 
  3072  019B                     	;# 
  3073  019C                     	;# 
  3074  019C                     	;# 
  3075  019C                     	;# 
  3076  019D                     	;# 
  3077  019D                     	;# 
  3078  019D                     	;# 
  3079  019E                     	;# 
  3080  019E                     	;# 
  3081  019E                     	;# 
  3082  019F                     	;# 
  3083  019F                     	;# 
  3084  019F                     	;# 
  3085  019F                     	;# 
  3086  019F                     	;# 
  3087  020C                     	;# 
  3088  020D                     	;# 
  3089  020E                     	;# 
  3090  0211                     	;# 
  3091  0211                     	;# 
  3092  0212                     	;# 
  3093  0212                     	;# 
  3094  0213                     	;# 
  3095  0213                     	;# 
  3096  0214                     	;# 
  3097  0214                     	;# 
  3098  0215                     	;# 
  3099  0215                     	;# 
  3100  0215                     	;# 
  3101  0215                     	;# 
  3102  0216                     	;# 
  3103  0216                     	;# 
  3104  0217                     	;# 
  3105  0217                     	;# 
  3106  0219                     	;# 
  3107  021A                     	;# 
  3108  021B                     	;# 
  3109  021C                     	;# 
  3110  021D                     	;# 
  3111  021D                     	;# 
  3112  021E                     	;# 
  3113  021F                     	;# 
  3114  028C                     	;# 
  3115  028D                     	;# 
  3116  028E                     	;# 
  3117  0291                     	;# 
  3118  0291                     	;# 
  3119  0292                     	;# 
  3120  0293                     	;# 
  3121  0294                     	;# 
  3122  0295                     	;# 
  3123  0295                     	;# 
  3124  0296                     	;# 
  3125  0297                     	;# 
  3126  0298                     	;# 
  3127  029F                     	;# 
  3128  030C                     	;# 
  3129  030D                     	;# 
  3130  030E                     	;# 
  3131  0311                     	;# 
  3132  0311                     	;# 
  3133  0312                     	;# 
  3134  0313                     	;# 
  3135  0314                     	;# 
  3136  0315                     	;# 
  3137  0315                     	;# 
  3138  0316                     	;# 
  3139  0317                     	;# 
  3140  0318                     	;# 
  3141  038C                     	;# 
  3142  038D                     	;# 
  3143  038E                     	;# 
  3144  0391                     	;# 
  3145  0392                     	;# 
  3146  0393                     	;# 
  3147  0394                     	;# 
  3148  0395                     	;# 
  3149  0396                     	;# 
  3150  0397                     	;# 
  3151  0398                     	;# 
  3152  0399                     	;# 
  3153  039A                     	;# 
  3154  039C                     	;# 
  3155  039D                     	;# 
  3156  039E                     	;# 
  3157  039F                     	;# 
  3158  0411                     	;# 
  3159  0411                     	;# 
  3160  0412                     	;# 
  3161  0413                     	;# 
  3162  0414                     	;# 
  3163  0415                     	;# 
  3164  0416                     	;# 
  3165  0417                     	;# 
  3166  0418                     	;# 
  3167  0418                     	;# 
  3168  0419                     	;# 
  3169  041A                     	;# 
  3170  041B                     	;# 
  3171  041C                     	;# 
  3172  041D                     	;# 
  3173  041E                     	;# 
  3174  041F                     	;# 
  3175  0498                     	;# 
  3176  0498                     	;# 
  3177  0499                     	;# 
  3178  049A                     	;# 
  3179  049B                     	;# 
  3180  049B                     	;# 
  3181  049C                     	;# 
  3182  049D                     	;# 
  3183  049E                     	;# 
  3184  049F                     	;# 
  3185  0617                     	;# 
  3186  0618                     	;# 
  3187  0619                     	;# 
  3188  0619                     	;# 
  3189  061A                     	;# 
  3190  061B                     	;# 
  3191  061C                     	;# 
  3192  061C                     	;# 
  3193  061F                     	;# 
  3194  0691                     	;# 
  3195  0692                     	;# 
  3196  0693                     	;# 
  3197  0694                     	;# 
  3198  0695                     	;# 
  3199  0696                     	;# 
  3200  0697                     	;# 
  3201  0698                     	;# 
  3202  0699                     	;# 
  3203  0711                     	;# 
  3204  0712                     	;# 
  3205  0713                     	;# 
  3206  0714                     	;# 
  3207  0715                     	;# 
  3208  0716                     	;# 
  3209  0717                     	;# 
  3210  0718                     	;# 
  3211  0719                     	;# 
  3212  0891                     	;# 
  3213  0891                     	;# 
  3214  0891                     	;# 
  3215  0891                     	;# 
  3216  0891                     	;# 
  3217  0891                     	;# 
  3218  0892                     	;# 
  3219  0892                     	;# 
  3220  0892                     	;# 
  3221  0893                     	;# 
  3222  0893                     	;# 
  3223  0893                     	;# 
  3224  0893                     	;# 
  3225  0893                     	;# 
  3226  0893                     	;# 
  3227  0894                     	;# 
  3228  0894                     	;# 
  3229  0894                     	;# 
  3230  0895                     	;# 
  3231  0895                     	;# 
  3232  0895                     	;# 
  3233  0896                     	;# 
  3234  0896                     	;# 
  3235  0896                     	;# 
  3236  089B                     	;# 
  3237  0911                     	;# 
  3238  0912                     	;# 
  3239  0913                     	;# 
  3240  0914                     	;# 
  3241  0915                     	;# 
  3242  0916                     	;# 
  3243  0918                     	;# 
  3244  0919                     	;# 
  3245  091A                     	;# 
  3246  091B                     	;# 
  3247  091C                     	;# 
  3248  091D                     	;# 
  3249  091E                     	;# 
  3250  091F                     	;# 
  3251  0E0F                     	;# 
  3252  0E10                     	;# 
  3253  0E11                     	;# 
  3254  0E12                     	;# 
  3255  0E13                     	;# 
  3256  0E14                     	;# 
  3257  0E15                     	;# 
  3258  0E16                     	;# 
  3259  0E17                     	;# 
  3260  0E18                     	;# 
  3261  0E19                     	;# 
  3262  0E1A                     	;# 
  3263  0E1B                     	;# 
  3264  0E1C                     	;# 
  3265  0E1D                     	;# 
  3266  0E1E                     	;# 
  3267  0E1F                     	;# 
  3268  0E20                     	;# 
  3269  0E21                     	;# 
  3270  0E22                     	;# 
  3271  0E24                     	;# 
  3272  0E25                     	;# 
  3273  0E28                     	;# 
  3274  0E29                     	;# 
  3275  0E2A                     	;# 
  3276  0E2B                     	;# 
  3277  0E2C                     	;# 
  3278  0E2D                     	;# 
  3279  0E2E                     	;# 
  3280  0E2F                     	;# 
  3281  0E90                     	;# 
  3282  0E91                     	;# 
  3283  0E92                     	;# 
  3284  0E94                     	;# 
  3285  0E95                     	;# 
  3286  0E9C                     	;# 
  3287  0E9D                     	;# 
  3288  0E9E                     	;# 
  3289  0E9F                     	;# 
  3290  0EA0                     	;# 
  3291  0EA1                     	;# 
  3292  0EA2                     	;# 
  3293  0EA3                     	;# 
  3294  0EA4                     	;# 
  3295  0EA5                     	;# 
  3296  0EA6                     	;# 
  3297  0EA7                     	;# 
  3298  0F0F                     	;# 
  3299  0F10                     	;# 
  3300  0F11                     	;# 
  3301  0F12                     	;# 
  3302  0F13                     	;# 
  3303  0F14                     	;# 
  3304  0F15                     	;# 
  3305  0F16                     	;# 
  3306  0F17                     	;# 
  3307  0F18                     	;# 
  3308  0F19                     	;# 
  3309  0F1A                     	;# 
  3310  0F1B                     	;# 
  3311  0F1C                     	;# 
  3312  0F1D                     	;# 
  3313  0F1E                     	;# 
  3314  0F1F                     	;# 
  3315  0F20                     	;# 
  3316  0F21                     	;# 
  3317  0F22                     	;# 
  3318  0F23                     	;# 
  3319  0F24                     	;# 
  3320  0F25                     	;# 
  3321  0F26                     	;# 
  3322  0F27                     	;# 
  3323  0F28                     	;# 
  3324  0F29                     	;# 
  3325  0F2A                     	;# 
  3326  0F2B                     	;# 
  3327  0F2C                     	;# 
  3328  0F2D                     	;# 
  3329  0F2E                     	;# 
  3330  0F2F                     	;# 
  3331  0F30                     	;# 
  3332  0F31                     	;# 
  3333  0F32                     	;# 
  3334  0F33                     	;# 
  3335  0F34                     	;# 
  3336  0F35                     	;# 
  3337  0F36                     	;# 
  3338  0F37                     	;# 
  3339  0FE4                     	;# 
  3340  0FE5                     	;# 
  3341  0FE6                     	;# 
  3342  0FE7                     	;# 
  3343  0FE8                     	;# 
  3344  0FE9                     	;# 
  3345  0FEA                     	;# 
  3346  0FEB                     	;# 
  3347  0FED                     	;# 
  3348  0FEE                     	;# 
  3349  0FEF                     	;# 
  3350                           
  3351                           	psect	idataBANK2
  3352  1D36                     __pidataBANK2:	
  3353                           
  3354                           ;initializer for main@F7272
  3355  1D36  34FF               	retlw	255
  3356  1D37  3400               	retlw	0
  3357  1D38  34FF               	retlw	255
  3358  1D39  3400               	retlw	0
  3359                           
  3360                           	psect	idataBANK5
  3361  1E82                     __pidataBANK5:	
  3362                           
  3363                           ;initializer for main@F7276
  3364  1E82  34FF               	retlw	255
  3365  1E83  3400               	retlw	0
  3366  1E84  34FF               	retlw	255
  3367  1E85  3400               	retlw	0
  3368  1E86  3416               	retlw	22
  3369  1E87  3448               	retlw	72
  3370  1E88  3445               	retlw	69
  3371  1E89  344C               	retlw	76
  3372  1E8A  344C               	retlw	76
  3373  1E8B  344F               	retlw	79
  3374  1E8C  3420               	retlw	32
  3375  1E8D  3453               	retlw	83
  3376  1E8E  3445               	retlw	69
  3377  1E8F  344E               	retlw	78
  3378  1E90  3453               	retlw	83
  3379  1E91  344F               	retlw	79
  3380  1E92  3452               	retlw	82
  3381  1E93  3453               	retlw	83
  3382  1E94  3417               	retlw	23
  3383  1E95  34FF               	retlw	255
  3384  1E96  3400               	retlw	0
  3385  1E97  34FF               	retlw	255
  3386  1E98  3400               	retlw	0
  3387                           
  3388                           	psect	stringtext1
  3389  2000                     __pstringtext1:	
  3390  2000                     _fsmStateTable:	
  3391  2000  343F               	retlw	low _I2C1_DO_IDLE
  3392  2001  341D               	retlw	high _I2C1_DO_IDLE
  3393  2002  3496               	retlw	low _I2C1_DO_SEND_ADR_READ
  3394  2003  341D               	retlw	high _I2C1_DO_SEND_ADR_READ
  3395  2004  347F               	retlw	low _I2C1_DO_SEND_ADR_WRITE
  3396  2005  341D               	retlw	high _I2C1_DO_SEND_ADR_WRITE
  3397  2006  3445               	retlw	low _I2C1_DO_TX
  3398  2007  3414               	retlw	high _I2C1_DO_TX
  3399  2008  34C6               	retlw	low _I2C1_DO_RX
  3400  2009  3412               	retlw	high _I2C1_DO_RX
  3401  200A  346D               	retlw	low _I2C1_DO_RCEN
  3402  200B  341D               	retlw	high _I2C1_DO_RCEN
  3403  200C  346B               	retlw	low _I2C1_DO_TX_EMPTY
  3404  200D  3410               	retlw	high _I2C1_DO_TX_EMPTY
  3405  200E  3412               	retlw	low _I2C1_DO_SEND_RESTART_READ
  3406  200F  341D               	retlw	high _I2C1_DO_SEND_RESTART_READ
  3407  2010  3416               	retlw	low _I2C1_DO_SEND_RESTART_WRITE
  3408  2011  341D               	retlw	high _I2C1_DO_SEND_RESTART_WRITE
  3409  2012  341A               	retlw	low _I2C1_DO_SEND_RESTART
  3410  2013  341D               	retlw	high _I2C1_DO_SEND_RESTART
  3411  2014  341E               	retlw	low _I2C1_DO_SEND_STOP
  3412  2015  341D               	retlw	high _I2C1_DO_SEND_STOP
  3413  2016  3422               	retlw	low _I2C1_DO_RX_ACK
  3414  2017  341D               	retlw	high _I2C1_DO_RX_ACK
  3415  2018  3426               	retlw	low _I2C1_DO_RX_NACK_STOP
  3416  2019  341D               	retlw	high _I2C1_DO_RX_NACK_STOP
  3417  201A  342A               	retlw	low _I2C1_DO_RX_NACK_RESTART
  3418  201B  341D               	retlw	high _I2C1_DO_RX_NACK_RESTART
  3419  201C  3444               	retlw	low _I2C1_DO_RESET
  3420  201D  341D               	retlw	high _I2C1_DO_RESET
  3421  201E  349A               	retlw	low _I2C1_DO_ADDRESS_NACK
  3422  201F  3410               	retlw	high _I2C1_DO_ADDRESS_NACK
  3423  2020                     __end_of_fsmStateTable:	
  3424                           
  3425                           	psect	nvBANK2
  3426  016C                     __pnvBANK2:	
  3427  016C                     _EUSART_TxDefaultInterruptHandler:	
  3428  016C                     	ds	2
  3429  016E                     _eusartTxBufferRemaining:	
  3430  016E                     	ds	1
  3431                           
  3432                           	psect	nvBANK3
  3433  01DE                     __pnvBANK3:	
  3434  01DE                     _EUSART_ErrorHandler:	
  3435  01DE                     	ds	2
  3436  01E0                     _EUSART_OverrunErrorHandler:	
  3437  01E0                     	ds	2
  3438  01E2                     _EUSART_FramingErrorHandler:	
  3439  01E2                     	ds	2
  3440  01E4                     _EUSART_RxDefaultInterruptHandler:	
  3441  01E4                     	ds	2
  3442  000C                     _PORTAbits	set	12
  3443  000B                     _INTCONbits	set	11
  3444  001F                     _T2CONbits	set	31
  3445  001F                     _T2CON	set	31
  3446  0011                     _PIR1bits	set	17
  3447  001D                     _TMR2	set	29
  3448  001E                     _PR2	set	30
  3449  008E                     _TRISC	set	142
  3450  008D                     _TRISB	set	141
  3451  008C                     _TRISA	set	140
  3452  0097                     _WDTCON	set	151
  3453  0091                     _PIE1bits	set	145
  3454  010C                     _LATAbits	set	268
  3455  010E                     _LATCbits	set	270
  3456  010E                     _LATC	set	270
  3457  010D                     _LATB	set	269
  3458  010C                     _LATA	set	268
  3459  018C                     _ANSELA	set	396
  3460  018D                     _ANSELB	set	397
  3461  018E                     _ANSELC	set	398
  3462  0199                     _RC1REG	set	409
  3463  019D                     _RC1STAbits	set	413
  3464  019A                     _TX1REG	set	410
  3465  019E                     _TX1STAbits	set	414
  3466  019C                     _SP1BRGH	set	412
  3467  019B                     _SP1BRGL	set	411
  3468  019E                     _TX1STA	set	414
  3469  019D                     _RC1STA	set	413
  3470  019F                     _BAUD1CON	set	415
  3471  0214                     _SSP1STATbits	set	532
  3472  0216                     _SSP1CON2bits	set	534
  3473  0211                     _SSP1BUF	set	529
  3474  0215                     _SSP1CON1bits	set	533
  3475  0212                     _SSP1ADD	set	530
  3476  0216                     _SSP1CON2	set	534
  3477  0215                     _SSP1CON1	set	533
  3478  0214                     _SSP1STAT	set	532
  3479  020E                     _WPUC	set	526
  3480  020C                     _WPUA	set	524
  3481  020D                     _WPUB	set	525
  3482  028E                     _ODCONC	set	654
  3483  028D                     _ODCONB	set	653
  3484  028C                     _ODCONA	set	652
  3485  030E                     _SLRCONC	set	782
  3486  030D                     _SLRCONB	set	781
  3487  030C                     _SLRCONA	set	780
  3488  038E                     _INLVLC	set	910
  3489  038D                     _INLVLB	set	909
  3490  038C                     _INLVLA	set	908
  3491  061F                     _PWMTMRSbits	set	1567
  3492  0617                     _PWM5DCL	set	1559
  3493  0618                     _PWM5DCH	set	1560
  3494  0619                     _PWM5CON	set	1561
  3495  0916                     _PMD5	set	2326
  3496  0915                     _PMD4	set	2325
  3497  0914                     _PMD3	set	2324
  3498  0913                     _PMD2	set	2323
  3499  0912                     _PMD1	set	2322
  3500  0911                     _PMD0	set	2321
  3501  091E                     _OSCTUNE	set	2334
  3502  091F                     _OSCFRQ	set	2335
  3503  091D                     _OSCEN	set	2333
  3504  091B                     _OSCCON3	set	2331
  3505  0919                     _OSCCON1	set	2329
  3506  0E21                     _SSP1DATPPS	set	3617
  3507  0E20                     _SSP1CLKPPS	set	3616
  3508  0E24                     _RXPPS	set	3620
  3509  0EA6                     _RC6PPS	set	3750
  3510  0E9C                     _RB4PPS	set	3740
  3511  0E9F                     _RB7PPS	set	3743
  3512  0E9E                     _RB6PPS	set	3742
  3513                           
  3514                           	psect	stringtext2
  3515  2020                     __pstringtext2:	
  3516  2020                     STR_2:	
  3517  2020  3454               	retlw	84	;'T'
  3518  2021  3465               	retlw	101	;'e'
  3519  2022  346D               	retlw	109	;'m'
  3520  2023  3470               	retlw	112	;'p'
  3521  2024  3465               	retlw	101	;'e'
  3522  2025  3472               	retlw	114	;'r'
  3523  2026  3461               	retlw	97	;'a'
  3524  2027  3474               	retlw	116	;'t'
  3525  2028  3475               	retlw	117	;'u'
  3526  2029  3472               	retlw	114	;'r'
  3527  202A  3465               	retlw	101	;'e'
  3528  202B  3420               	retlw	32	;' '
  3529  202C  343A               	retlw	58	;':'
  3530  202D  3420               	retlw	32	;' '
  3531  202E  3425               	retlw	37	;'%'
  3532  202F  3466               	retlw	102	;'f'
  3533  2030  340A               	retlw	10
  3534  2031  3400               	retlw	0
  3535                           
  3536                           	psect	stringtext3
  3537  2032                     __pstringtext3:	
  3538  2032                     STR_1:	
  3539  2032  3450               	retlw	80	;'P'
  3540  2033  3472               	retlw	114	;'r'
  3541  2034  3465               	retlw	101	;'e'
  3542  2035  3473               	retlw	115	;'s'
  3543  2036  3473               	retlw	115	;'s'
  3544  2037  3475               	retlw	117	;'u'
  3545  2038  3472               	retlw	114	;'r'
  3546  2039  3465               	retlw	101	;'e'
  3547  203A  3420               	retlw	32	;' '
  3548  203B  343A               	retlw	58	;':'
  3549  203C  3420               	retlw	32	;' '
  3550  203D  3425               	retlw	37	;'%'
  3551  203E  3466               	retlw	102	;'f'
  3552  203F  340A               	retlw	10
  3553  2040  3400               	retlw	0
  3554                           
  3555                           	psect	stringtext4
  3556  2041                     __pstringtext4:	
  3557  2041                     STR_3:	
  3558  2041  3449               	retlw	73	;'I'
  3559  2042  344E               	retlw	78	;'N'
  3560  2043  3446               	retlw	70	;'F'
  3561  2044  3400               	retlw	0
  3562                           
  3563                           	psect	stringtext5
  3564  2045                     __pstringtext5:	
  3565  2045                     STR_7:	
  3566  2045  344E               	retlw	78	;'N'
  3567  2046  3441               	retlw	65	;'A'
  3568  2047  344E               	retlw	78	;'N'
  3569  2048  3400               	retlw	0
  3570                           
  3571                           	psect	stringtext6
  3572  2049                     __pstringtext6:	
  3573  2049                     STR_4:	
  3574  2049  3469               	retlw	105	;'i'
  3575  204A  346E               	retlw	110	;'n'
  3576  204B  3466               	retlw	102	;'f'
  3577  204C  3400               	retlw	0
  3578                           
  3579                           	psect	stringtext7
  3580  204D                     __pstringtext7:	
  3581  204D                     STR_8:	
  3582  204D  346E               	retlw	110	;'n'
  3583  204E  3461               	retlw	97	;'a'
  3584  204F  346E               	retlw	110	;'n'
  3585  2050  3400               	retlw	0
  3586                           
  3587                           	psect	stringtext8
  3588  2051                     __pstringtext8:	
  3589  2051                     STR_11:	
  3590  2051  346C               	retlw	108	;'l'
  3591  2052  3466               	retlw	102	;'f'
  3592  2053  3400               	retlw	0
  3593                           
  3594                           	psect	stringtext9
  3595  0000                     __pstringtext9:	
  3596  2051                     
  3597                           ; #config settings
  3598  0000                     
  3599                           	psect	cinit
  3600  0025                     start_initialization:	
  3601  0025                     __initialization:	
  3602                           
  3603                           ; Initialize objects allocated to BANK2
  3604  0025  3036               	movlw	low __pidataBANK2
  3605  0026  0084               	movwf	4
  3606  0027  309D               	movlw	(high __pidataBANK2)| (0+128)
  3607  0028  0085               	movwf	5
  3608  0029  3068               	movlw	low __pdataBANK2
  3609  002A  0086               	movwf	6
  3610  002B  3001               	movlw	high __pdataBANK2
  3611  002C  0087               	movwf	7
  3612  002D  3004               	movlw	4
  3613  002E  319D  2579  3180   	fcall	init_ram
  3614                           
  3615                           ; Initialize objects allocated to BANK5
  3616  0031  3082               	movlw	low __pidataBANK5
  3617  0032  0084               	movwf	4
  3618  0033  309E               	movlw	(high __pidataBANK5)| (0+128)
  3619  0034  0085               	movwf	5
  3620  0035  30A0               	movlw	low __pdataBANK5
  3621  0036  0086               	movwf	6
  3622  0037  3002               	movlw	high __pdataBANK5
  3623  0038  0087               	movwf	7
  3624  0039  3017               	movlw	23
  3625  003A  319D  2579  3180   	fcall	init_ram
  3626                           
  3627                           ; Clear objects allocated to COMMON
  3628  003D  01FC               	clrf	__pbssCOMMON& (0+127)
  3629                           
  3630                           ; Clear objects allocated to BANK1
  3631  003E  0021               	movlb	1	; select bank1
  3632  003F  01ED               	clrf	__pbssBANK1& (0+127)
  3633  0040  01EE               	clrf	(__pbssBANK1+1)& (0+127)
  3634  0041  01EF               	clrf	(__pbssBANK1+2)& (0+127)
  3635                           
  3636                           ; Clear objects allocated to BANK2
  3637  0042  3047               	movlw	low __pbssBANK2
  3638  0043  0084               	movwf	4
  3639  0044  3001               	movlw	high __pbssBANK2
  3640  0045  0085               	movwf	5
  3641  0046  3021               	movlw	33
  3642  0047  319D  2573  3180   	fcall	clear_ram0
  3643                           
  3644                           ; Clear objects allocated to BANK3
  3645  004A  30A0               	movlw	low __pbssBANK3
  3646  004B  0084               	movwf	4
  3647  004C  3001               	movlw	high __pbssBANK3
  3648  004D  0085               	movwf	5
  3649  004E  303E               	movlw	62
  3650  004F  319D  2573  3180   	fcall	clear_ram0
  3651                           
  3652                           ; Clear objects allocated to BANK4
  3653  0052  3020               	movlw	low __pbssBANK4
  3654  0053  0084               	movwf	4
  3655  0054  3002               	movlw	high __pbssBANK4
  3656  0055  0085               	movwf	5
  3657  0056  3050               	movlw	80
  3658  0057  319D  2573         	fcall	clear_ram0
  3659  0059                     end_of_initialization:	
  3660                           ;End of C runtime variable initialization code
  3661                           
  3662  0059                     __end_of__initialization:	
  3663  0059  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3664  005A  0020               	movlb	0
  3665  005B  3188  2816         	ljmp	_main	;jump to C main() function
  3666                           
  3667                           	psect	bssCOMMON
  3668  007C                     __pbssCOMMON:	
  3669  007C                     _eusartRxHead:	
  3670  007C                     	ds	1
  3671                           
  3672                           	psect	bssBANK1
  3673  00ED                     __pbssBANK1:	
  3674  00ED                     _value:	
  3675  00ED                     	ds	1
  3676  00EE                     _eusartRxTail:	
  3677  00EE                     	ds	1
  3678  00EF                     _eusartTxHead:	
  3679  00EF                     	ds	1
  3680                           
  3681                           	psect	bssBANK2
  3682  0147                     __pbssBANK2:	
  3683  0147                     floorf@F524:	
  3684  0147                     	ds	4
  3685  014B                     ___fpclassifyf@F463:	
  3686  014B                     	ds	4
  3687  014F                     _temperature:	
  3688  014F                     	ds	4
  3689  0153                     _pressure:	
  3690  0153                     	ds	4
  3691  0157                     _nout:	
  3692  0157                     	ds	2
  3693  0159                     _width:	
  3694  0159                     	ds	2
  3695  015B                     _prec:	
  3696  015B                     	ds	2
  3697  015D                     _flags:	
  3698  015D                     	ds	2
  3699  015F                     _raw_temperature:	
  3700  015F                     	ds	2
  3701  0161                     _eusartRxLastError:	
  3702  0161                     	ds	1
  3703  0162                     _eusartRxCount:	
  3704  0162                     	ds	1
  3705  0163                     _eusartTxTail:	
  3706  0163                     	ds	1
  3707  0164                     _raw_pressure:	
  3708  0164                     	ds	4
  3709                           
  3710                           	psect	dataBANK2
  3711  0168                     __pdataBANK2:	
  3712  0168                     main@F7272:	
  3713  0168                     	ds	4
  3714                           
  3715                           	psect	bssBANK3
  3716  01A0                     __pbssBANK3:	
  3717  01A0                     _I2C1_Status:	
  3718  01A0                     	ds	29
  3719  01BD                     _eusartRxStatusBuffer:	
  3720  01BD                     	ds	8
  3721  01C5                     _eusartRxBuffer:	
  3722  01C5                     	ds	8
  3723  01CD                     _eusartTxBuffer:	
  3724  01CD                     	ds	8
  3725  01D5                     _packet:	
  3726  01D5                     	ds	9
  3727                           
  3728                           	psect	bssBANK4
  3729  0220                     __pbssBANK4:	
  3730  0220                     _dbuf:	
  3731  0220                     	ds	80
  3732                           
  3733                           	psect	dataBANK5
  3734  02A0                     __pdataBANK5:	
  3735  02A0                     main@F7276:	
  3736  02A0                     	ds	23
  3737                           
  3738                           	psect	inittext
  3739  1D79                     init_ram:	
  3740  1D79  00FE               	movwf	126
  3741  1D7A                     initloop:	
  3742  1D7A  0012               	moviw fsr0++
  3743  1D7B  001E               	movwi fsr1++
  3744  1D7C  0BFE               	decfsz	126,f
  3745  1D7D  2D7A               	goto	initloop
  3746  1D7E  3400               	retlw	0
  3747                           
  3748                           	psect	clrtext
  3749  1D73                     clear_ram0:	
  3750                           ;	Called with FSR0 containing the base address, and
  3751                           ;	WREG with the size to clear
  3752                           
  3753  1D73  0064               	clrwdt	;clear the watchdog before getting into this loop
  3754  1D74                     clrloop0:	
  3755  1D74  0180               	clrf	0	;clear RAM location pointed to by FSR
  3756  1D75  3101               	addfsr 0,1
  3757  1D76  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3758  1D77  2D74               	goto	clrloop0	;have we reached the end yet?
  3759  1D78  3400               	retlw	0	;all done for this memory range, return
  3760                           
  3761                           	psect	cstackBANK2
  3762  0120                     __pcstackBANK2:	
  3763  0120                     ??_readPressureSensor:	
  3764                           
  3765                           ; 1 bytes @ 0x0
  3766  0120                     	ds	8
  3767  0128                     main@dummy_data:	
  3768                           
  3769                           ; 23 bytes @ 0x8
  3770  0128                     	ds	23
  3771  013F                     main@hdr_trl:	
  3772                           
  3773                           ; 4 bytes @ 0x1F
  3774  013F                     	ds	5
  3775  0144                     main@SOC:	
  3776                           
  3777                           ; 1 bytes @ 0x24
  3778  0144                     	ds	1
  3779  0145                     main@EOC:	
  3780                           
  3781                           ; 1 bytes @ 0x25
  3782  0145                     	ds	1
  3783  0146                     main@i:	
  3784                           
  3785                           ; 1 bytes @ 0x26
  3786  0146                     	ds	1
  3787                           
  3788                           	psect	cstackBANK1
  3789  00A0                     __pcstackBANK1:	
  3790  00A0                     efgtoa@ou:	
  3791                           
  3792                           ; 4 bytes @ 0x0
  3793  00A0                     	ds	4
  3794  00A4                     _efgtoa$1521:	
  3795                           
  3796                           ; 2 bytes @ 0x4
  3797  00A4                     	ds	2
  3798  00A6                     _efgtoa$1522:	
  3799                           
  3800                           ; 2 bytes @ 0x6
  3801  00A6                     	ds	2
  3802  00A8                     _efgtoa$1527:	
  3803                           
  3804                           ; 2 bytes @ 0x8
  3805  00A8                     	ds	2
  3806  00AA                     _efgtoa$1531:	
  3807                           
  3808                           ; 2 bytes @ 0xA
  3809  00AA                     	ds	2
  3810  00AC                     _efgtoa$1532:	
  3811                           
  3812                           ; 2 bytes @ 0xC
  3813  00AC                     	ds	2
  3814  00AE                     _efgtoa$1533:	
  3815                           
  3816                           ; 2 bytes @ 0xE
  3817  00AE                     	ds	2
  3818  00B0                     efgtoa@t:	
  3819                           
  3820                           ; 2 bytes @ 0x10
  3821  00B0                     	ds	2
  3822  00B2                     efgtoa@pp:	
  3823                           
  3824                           ; 2 bytes @ 0x12
  3825  00B2                     	ds	2
  3826  00B4                     efgtoa@m:	
  3827                           
  3828                           ; 2 bytes @ 0x14
  3829  00B4                     	ds	2
  3830  00B6                     efgtoa@ne:	
  3831                           
  3832                           ; 2 bytes @ 0x16
  3833  00B6                     	ds	2
  3834  00B8                     efgtoa@d:	
  3835                           
  3836                           ; 2 bytes @ 0x18
  3837  00B8                     	ds	2
  3838  00BA                     efgtoa@sign:	
  3839                           
  3840                           ; 2 bytes @ 0x1A
  3841  00BA                     	ds	2
  3842  00BC                     efgtoa@fp:	
  3843                           
  3844                           ; 1 bytes @ 0x1C
  3845  00BC                     	ds	1
  3846  00BD                     efgtoa@p:	
  3847                           
  3848                           ; 2 bytes @ 0x1D
  3849  00BD                     	ds	2
  3850  00BF                     efgtoa@nmode:	
  3851                           
  3852                           ; 1 bytes @ 0x1F
  3853  00BF                     	ds	1
  3854  00C0                     efgtoa@w:	
  3855                           
  3856                           ; 2 bytes @ 0x20
  3857  00C0                     	ds	2
  3858  00C2                     efgtoa@mode:	
  3859                           
  3860                           ; 1 bytes @ 0x22
  3861  00C2                     	ds	1
  3862  00C3                     efgtoa@h:	
  3863                           
  3864                           ; 4 bytes @ 0x23
  3865  00C3                     	ds	4
  3866  00C7                     efgtoa@l:	
  3867                           
  3868                           ; 4 bytes @ 0x27
  3869  00C7                     	ds	4
  3870  00CB                     efgtoa@i:	
  3871                           
  3872                           ; 2 bytes @ 0x2B
  3873  00CB                     	ds	2
  3874  00CD                     efgtoa@g:	
  3875                           
  3876                           ; 4 bytes @ 0x2D
  3877  00CD                     	ds	4
  3878  00D1                     efgtoa@e:	
  3879                           
  3880                           ; 2 bytes @ 0x31
  3881  00D1                     	ds	2
  3882  00D3                     efgtoa@n:	
  3883                           
  3884                           ; 2 bytes @ 0x33
  3885  00D3                     	ds	2
  3886  00D5                     efgtoa@u:	
  3887                           
  3888                           ; 4 bytes @ 0x35
  3889  00D5                     	ds	4
  3890  00D9                     ?_vfprintf:	
  3891  00D9                     vfprintf@fmt:	
  3892                           ; 2 bytes @ 0x39
  3893                           
  3894                           
  3895                           ; 2 bytes @ 0x39
  3896  00D9                     	ds	2
  3897  00DB                     vfprintf@ap:	
  3898                           
  3899                           ; 1 bytes @ 0x3B
  3900  00DB                     	ds	1
  3901  00DC                     ??_vfprintf:	
  3902                           
  3903                           ; 1 bytes @ 0x3C
  3904  00DC                     	ds	2
  3905  00DE                     vfprintf@fp:	
  3906                           
  3907                           ; 1 bytes @ 0x3E
  3908  00DE                     	ds	1
  3909  00DF                     vfprintf@cfmt:	
  3910                           
  3911                           ; 2 bytes @ 0x3F
  3912  00DF                     	ds	2
  3913  00E1                     ?_printf:	
  3914  00E1                     printf@fmt:	
  3915                           ; 2 bytes @ 0x41
  3916                           
  3917                           
  3918                           ; 2 bytes @ 0x41
  3919  00E1                     	ds	6
  3920  00E7                     ??_printf:	
  3921                           
  3922                           ; 1 bytes @ 0x47
  3923  00E7                     	ds	3
  3924  00EA                     printf@ap:	
  3925                           
  3926                           ; 1 bytes @ 0x4A
  3927  00EA                     	ds	1
  3928  00EB                     ??_main:	
  3929                           
  3930                           ; 1 bytes @ 0x4B
  3931  00EB                     	ds	2
  3932                           
  3933                           	psect	cstackCOMMON
  3934  0070                     __pcstackCOMMON:	
  3935  0070                     ?_I2C1_Open:	
  3936  0070                     ?_I2C1_MasterWrite:	
  3937                           ; 1 bytes @ 0x0
  3938                           
  3939  0070                     ?_I2C1_Close:	
  3940                           ; 1 bytes @ 0x0
  3941                           
  3942  0070                     ?_EUSART_Receive_ISR:	
  3943                           ; 1 bytes @ 0x0
  3944                           
  3945  0070                     ?_EUSART_Transmit_ISR:	
  3946                           ; 1 bytes @ 0x0
  3947                           
  3948  0070                     ??_EUSART_Transmit_ISR:	
  3949                           ; 1 bytes @ 0x0
  3950                           
  3951  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  3952                           ; 1 bytes @ 0x0
  3953                           
  3954  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  3955                           ; 1 bytes @ 0x0
  3956                           
  3957  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  3958                           ; 1 bytes @ 0x0
  3959                           
  3960  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  3961                           ; 1 bytes @ 0x0
  3962                           
  3963  0070                     ?_EUSART_DefaultErrorHandler:	
  3964                           ; 1 bytes @ 0x0
  3965                           
  3966  0070                     ?_EUSART_RxDataHandler:	
  3967                           ; 1 bytes @ 0x0
  3968                           
  3969  0070                     ??_EUSART_RxDataHandler:	
  3970                           ; 1 bytes @ 0x0
  3971                           
  3972  0070                     ?_PMD_Initialize:	
  3973                           ; 1 bytes @ 0x0
  3974                           
  3975  0070                     ?_I2C1_Initialize:	
  3976                           ; 1 bytes @ 0x0
  3977                           
  3978  0070                     ?_PIN_MANAGER_Initialize:	
  3979                           ; 1 bytes @ 0x0
  3980                           
  3981  0070                     ?_OSCILLATOR_Initialize:	
  3982                           ; 1 bytes @ 0x0
  3983                           
  3984  0070                     ?_WDT_Initialize:	
  3985                           ; 1 bytes @ 0x0
  3986                           
  3987  0070                     ?_I2C1_DO_IDLE:	
  3988                           ; 1 bytes @ 0x0
  3989                           
  3990  0070                     ?_I2C1_DO_SEND_ADR_READ:	
  3991                           ; 1 bytes @ 0x0
  3992                           
  3993  0070                     ?_I2C1_DO_SEND_ADR_WRITE:	
  3994                           ; 1 bytes @ 0x0
  3995                           
  3996  0070                     ?_I2C1_DO_TX:	
  3997                           ; 1 bytes @ 0x0
  3998                           
  3999  0070                     ?_I2C1_DO_RX:	
  4000                           ; 1 bytes @ 0x0
  4001                           
  4002  0070                     ?_I2C1_DO_RCEN:	
  4003                           ; 1 bytes @ 0x0
  4004                           
  4005  0070                     ?_I2C1_DO_TX_EMPTY:	
  4006                           ; 1 bytes @ 0x0
  4007                           
  4008  0070                     ?_I2C1_DO_SEND_RESTART_READ:	
  4009                           ; 1 bytes @ 0x0
  4010                           
  4011  0070                     ?_I2C1_DO_SEND_RESTART_WRITE:	
  4012                           ; 1 bytes @ 0x0
  4013                           
  4014  0070                     ?_I2C1_DO_SEND_RESTART:	
  4015                           ; 1 bytes @ 0x0
  4016                           
  4017  0070                     ?_I2C1_DO_SEND_STOP:	
  4018                           ; 1 bytes @ 0x0
  4019                           
  4020  0070                     ?_I2C1_DO_RX_ACK:	
  4021                           ; 1 bytes @ 0x0
  4022                           
  4023  0070                     ?_I2C1_DO_RX_NACK_STOP:	
  4024                           ; 1 bytes @ 0x0
  4025                           
  4026  0070                     ?_I2C1_DO_RX_NACK_RESTART:	
  4027                           ; 1 bytes @ 0x0
  4028                           
  4029  0070                     ?_I2C1_DO_RESET:	
  4030                           ; 1 bytes @ 0x0
  4031                           
  4032  0070                     ?_I2C1_DO_ADDRESS_NACK:	
  4033                           ; 1 bytes @ 0x0
  4034                           
  4035  0070                     ?_I2C1_MasterClearIrq:	
  4036                           ; 1 bytes @ 0x0
  4037                           
  4038  0070                     ?_I2C1_MasterOpen:	
  4039                           ; 1 bytes @ 0x0
  4040                           
  4041  0070                     ?_I2C1_MasterDisableIrq:	
  4042                           ; 1 bytes @ 0x0
  4043                           
  4044  0070                     ?_I2C1_MasterClose:	
  4045                           ; 1 bytes @ 0x0
  4046                           
  4047  0070                     ?_I2C1_MasterStart:	
  4048                           ; 1 bytes @ 0x0
  4049                           
  4050  0070                     ?_I2C1_Poller:	
  4051                           ; 1 bytes @ 0x0
  4052                           
  4053  0070                     ?_I2C1_MasterWaitForEvent:	
  4054                           ; 1 bytes @ 0x0
  4055                           
  4056  0070                     ?_I2C1_MasterFsm:	
  4057                           ; 1 bytes @ 0x0
  4058                           
  4059  0070                     ?_I2C1_MasterIsNack:	
  4060                           ; 1 bytes @ 0x0
  4061                           
  4062  0070                     ?_I2C1_MasterSendTxData:	
  4063                           ; 1 bytes @ 0x0
  4064                           
  4065  0070                     ?_I2C1_MasterGetRxData:	
  4066                           ; 1 bytes @ 0x0
  4067                           
  4068  0070                     ?_I2C1_MasterSendAck:	
  4069                           ; 1 bytes @ 0x0
  4070                           
  4071  0070                     ?_I2C1_MasterStartRx:	
  4072                           ; 1 bytes @ 0x0
  4073                           
  4074  0070                     ?_I2C1_MasterSetIrq:	
  4075                           ; 1 bytes @ 0x0
  4076                           
  4077  0070                     ?_I2C1_MasterEnableRestart:	
  4078                           ; 1 bytes @ 0x0
  4079                           
  4080  0070                     ?_I2C1_MasterStop:	
  4081                           ; 1 bytes @ 0x0
  4082                           
  4083  0070                     ?_I2C1_MasterSendNack:	
  4084                           ; 1 bytes @ 0x0
  4085                           
  4086  0070                     ?_PWM5_Initialize:	
  4087                           ; 1 bytes @ 0x0
  4088                           
  4089  0070                     ?_EUSART_Initialize:	
  4090                           ; 1 bytes @ 0x0
  4091                           
  4092  0070                     ?_EUSART_Write:	
  4093                           ; 1 bytes @ 0x0
  4094                           
  4095  0070                     ?_putch:	
  4096                           ; 1 bytes @ 0x0
  4097                           
  4098  0070                     ?_TMR2_Initialize:	
  4099                           ; 1 bytes @ 0x0
  4100                           
  4101  0070                     ?_INTERRUPT_InterruptManager:	
  4102                           ; 1 bytes @ 0x0
  4103                           
  4104  0070                     ?_SYSTEM_Initialize:	
  4105                           ; 1 bytes @ 0x0
  4106                           
  4107  0070                     ?_I2C1_MasterOperation:	
  4108                           ; 1 bytes @ 0x0
  4109                           
  4110  0070                     ?_setHigh:	
  4111                           ; 1 bytes @ 0x0
  4112                           
  4113  0070                     ?_setLow:	
  4114                           ; 1 bytes @ 0x0
  4115                           
  4116  0070                     ?_setZero:	
  4117                           ; 1 bytes @ 0x0
  4118                           
  4119  0070                     ?_sendPWM:	
  4120                           ; 1 bytes @ 0x0
  4121                           
  4122  0070                     ?_readPressureSensor:	
  4123                           ; 1 bytes @ 0x0
  4124                           
  4125  0070                     ?_initializePressureSensor:	
  4126                           ; 1 bytes @ 0x0
  4127                           
  4128  0070                     ?_main:	
  4129                           ; 1 bytes @ 0x0
  4130                           
  4131                           
  4132                           ; 1 bytes @ 0x0
  4133  0070                     	ds	1
  4134  0071                     ?___fleq:	
  4135  0071                     ??_I2C1_Open:	
  4136                           ; 1 bit 
  4137                           
  4138  0071                     ?_I2C1_SetBuffer:	
  4139                           ; 1 bytes @ 0x1
  4140                           
  4141  0071                     ??_I2C1_Close:	
  4142                           ; 1 bytes @ 0x1
  4143                           
  4144  0071                     ?_EUSART_SetRxInterruptHandler:	
  4145                           ; 1 bytes @ 0x1
  4146                           
  4147  0071                     ??_EUSART_Receive_ISR:	
  4148                           ; 1 bytes @ 0x1
  4149                           
  4150  0071                     ?_EUSART_SetTxInterruptHandler:	
  4151                           ; 1 bytes @ 0x1
  4152                           
  4153  0071                     ?_EUSART_SetFramingErrorHandler:	
  4154                           ; 1 bytes @ 0x1
  4155                           
  4156  0071                     ?_EUSART_SetOverrunErrorHandler:	
  4157                           ; 1 bytes @ 0x1
  4158                           
  4159  0071                     ?_EUSART_SetErrorHandler:	
  4160                           ; 1 bytes @ 0x1
  4161                           
  4162  0071                     ??_EUSART_DefaultErrorHandler:	
  4163                           ; 1 bytes @ 0x1
  4164                           
  4165  0071                     ??_PMD_Initialize:	
  4166                           ; 1 bytes @ 0x1
  4167                           
  4168  0071                     ??_I2C1_Initialize:	
  4169                           ; 1 bytes @ 0x1
  4170                           
  4171  0071                     ??_PIN_MANAGER_Initialize:	
  4172                           ; 1 bytes @ 0x1
  4173                           
  4174  0071                     ??_OSCILLATOR_Initialize:	
  4175                           ; 1 bytes @ 0x1
  4176                           
  4177  0071                     ??_WDT_Initialize:	
  4178                           ; 1 bytes @ 0x1
  4179                           
  4180  0071                     ??_I2C1_DO_IDLE:	
  4181                           ; 1 bytes @ 0x1
  4182                           
  4183  0071                     ??_I2C1_DO_SEND_ADR_READ:	
  4184                           ; 1 bytes @ 0x1
  4185                           
  4186  0071                     ??_I2C1_DO_RCEN:	
  4187                           ; 1 bytes @ 0x1
  4188                           
  4189  0071                     ??_I2C1_DO_SEND_RESTART_READ:	
  4190                           ; 1 bytes @ 0x1
  4191                           
  4192  0071                     ??_I2C1_DO_SEND_RESTART_WRITE:	
  4193                           ; 1 bytes @ 0x1
  4194                           
  4195  0071                     ??_I2C1_DO_SEND_RESTART:	
  4196                           ; 1 bytes @ 0x1
  4197                           
  4198  0071                     ??_I2C1_DO_SEND_STOP:	
  4199                           ; 1 bytes @ 0x1
  4200                           
  4201  0071                     ??_I2C1_DO_RX_ACK:	
  4202                           ; 1 bytes @ 0x1
  4203                           
  4204  0071                     ??_I2C1_DO_RX_NACK_STOP:	
  4205                           ; 1 bytes @ 0x1
  4206                           
  4207  0071                     ??_I2C1_DO_RX_NACK_RESTART:	
  4208                           ; 1 bytes @ 0x1
  4209                           
  4210  0071                     ??_I2C1_DO_RESET:	
  4211                           ; 1 bytes @ 0x1
  4212                           
  4213  0071                     ??_I2C1_MasterClearIrq:	
  4214                           ; 1 bytes @ 0x1
  4215                           
  4216  0071                     ??_I2C1_MasterOpen:	
  4217                           ; 1 bytes @ 0x1
  4218                           
  4219  0071                     ??_I2C1_MasterDisableIrq:	
  4220                           ; 1 bytes @ 0x1
  4221                           
  4222  0071                     ??_I2C1_MasterClose:	
  4223                           ; 1 bytes @ 0x1
  4224                           
  4225  0071                     ??_I2C1_MasterStart:	
  4226                           ; 1 bytes @ 0x1
  4227                           
  4228  0071                     ?_I2C1_SetCallback:	
  4229                           ; 1 bytes @ 0x1
  4230                           
  4231  0071                     ??_I2C1_MasterWaitForEvent:	
  4232                           ; 1 bytes @ 0x1
  4233                           
  4234  0071                     ??_I2C1_MasterIsNack:	
  4235                           ; 1 bytes @ 0x1
  4236                           
  4237  0071                     ??_I2C1_MasterSendTxData:	
  4238                           ; 1 bytes @ 0x1
  4239                           
  4240  0071                     ??_I2C1_MasterGetRxData:	
  4241                           ; 1 bytes @ 0x1
  4242                           
  4243  0071                     ??_I2C1_MasterSendAck:	
  4244                           ; 1 bytes @ 0x1
  4245                           
  4246  0071                     ??_I2C1_MasterStartRx:	
  4247                           ; 1 bytes @ 0x1
  4248                           
  4249  0071                     ??_I2C1_MasterSetIrq:	
  4250                           ; 1 bytes @ 0x1
  4251                           
  4252  0071                     ??_I2C1_MasterEnableRestart:	
  4253                           ; 1 bytes @ 0x1
  4254                           
  4255  0071                     ??_I2C1_MasterStop:	
  4256                           ; 1 bytes @ 0x1
  4257                           
  4258  0071                     ??_I2C1_MasterSendNack:	
  4259                           ; 1 bytes @ 0x1
  4260                           
  4261  0071                     ?_strcpy:	
  4262                           ; 1 bytes @ 0x1
  4263                           
  4264  0071                     ??_PWM5_Initialize:	
  4265                           ; 1 bytes @ 0x1
  4266                           
  4267  0071                     ??_EUSART_Write:	
  4268                           ; 1 bytes @ 0x1
  4269                           
  4270  0071                     ??_TMR2_Initialize:	
  4271                           ; 1 bytes @ 0x1
  4272                           
  4273  0071                     ??_INTERRUPT_InterruptManager:	
  4274                           ; 1 bytes @ 0x1
  4275                           
  4276  0071                     ??_setHigh:	
  4277                           ; 1 bytes @ 0x1
  4278                           
  4279  0071                     ??_setLow:	
  4280                           ; 1 bytes @ 0x1
  4281                           
  4282  0071                     ??_setZero:	
  4283                           ; 1 bytes @ 0x1
  4284                           
  4285  0071                     ??_sendPWM:	
  4286                           ; 1 bytes @ 0x1
  4287                           
  4288  0071                     ?_strlen:	
  4289                           ; 1 bytes @ 0x1
  4290                           
  4291  0071                     ?___fpclassifyf:	
  4292                           ; 2 bytes @ 0x1
  4293                           
  4294  0071                     ?_isupper:	
  4295                           ; 2 bytes @ 0x1
  4296                           
  4297  0071                     ?_strncmp:	
  4298                           ; 2 bytes @ 0x1
  4299                           
  4300  0071                     ?__Umul8_16:	
  4301                           ; 2 bytes @ 0x1
  4302                           
  4303  0071                     ?___awdiv:	
  4304                           ; 2 bytes @ 0x1
  4305                           
  4306  0071                     ?___awmod:	
  4307                           ; 2 bytes @ 0x1
  4308                           
  4309  0071                     ?___flneg:	
  4310                           ; 2 bytes @ 0x1
  4311                           
  4312  0071                     ?___fltol:	
  4313                           ; 4 bytes @ 0x1
  4314                           
  4315  0071                     ?___fladd:	
  4316                           ; 4 bytes @ 0x1
  4317                           
  4318  0071                     ?___xxtofl:	
  4319                           ; 4 bytes @ 0x1
  4320                           
  4321  0071                     I2C1_MasterSendTxData@data:	
  4322                           ; 4 bytes @ 0x1
  4323                           
  4324  0071                     __Umul8_16@multiplicand:	
  4325                           ; 1 bytes @ 0x1
  4326                           
  4327  0071                     EUSART_SetFramingErrorHandler@interruptHandler:	
  4328                           ; 1 bytes @ 0x1
  4329                           
  4330  0071                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  4331                           ; 2 bytes @ 0x1
  4332                           
  4333  0071                     EUSART_SetErrorHandler@interruptHandler:	
  4334                           ; 2 bytes @ 0x1
  4335                           
  4336  0071                     EUSART_SetTxInterruptHandler@interruptHandler:	
  4337                           ; 2 bytes @ 0x1
  4338                           
  4339  0071                     EUSART_SetRxInterruptHandler@interruptHandler:	
  4340                           ; 2 bytes @ 0x1
  4341                           
  4342  0071                     I2C1_SetBuffer@bufferSize:	
  4343                           ; 2 bytes @ 0x1
  4344                           
  4345  0071                     I2C1_SetCallback@cb:	
  4346                           ; 2 bytes @ 0x1
  4347                           
  4348  0071                     ___awdiv@divisor:	
  4349                           ; 2 bytes @ 0x1
  4350                           
  4351  0071                     ___awmod@divisor:	
  4352                           ; 2 bytes @ 0x1
  4353                           
  4354  0071                     isupper@c:	
  4355                           ; 2 bytes @ 0x1
  4356                           
  4357  0071                     strcpy@src:	
  4358                           ; 2 bytes @ 0x1
  4359                           
  4360  0071                     strncmp@_r:	
  4361                           ; 2 bytes @ 0x1
  4362                           
  4363  0071                     ___fleq@ff1:	
  4364                           ; 2 bytes @ 0x1
  4365                           
  4366  0071                     ___flneg@f1:	
  4367                           ; 4 bytes @ 0x1
  4368                           
  4369  0071                     ___fltol@f1:	
  4370                           ; 4 bytes @ 0x1
  4371                           
  4372  0071                     ___fladd@b:	
  4373                           ; 4 bytes @ 0x1
  4374                           
  4375  0071                     ___xxtofl@val:	
  4376                           ; 4 bytes @ 0x1
  4377                           
  4378  0071                     ___fpclassifyf@x:	
  4379                           ; 4 bytes @ 0x1
  4380                           
  4381                           
  4382                           ; 4 bytes @ 0x1
  4383  0071                     	ds	1
  4384  0072                     ??_I2C1_DO_SEND_ADR_WRITE:	
  4385  0072                     EUSART_Write@txData:	
  4386                           ; 1 bytes @ 0x2
  4387                           
  4388  0072                     I2C1_Open@address:	
  4389                           ; 1 bytes @ 0x2
  4390                           
  4391  0072                     I2C1_Close@returnValue:	
  4392                           ; 1 bytes @ 0x2
  4393                           
  4394  0072                     sendPWM@j:	
  4395                           ; 1 bytes @ 0x2
  4396                           
  4397                           
  4398                           ; 1 bytes @ 0x2
  4399  0072                     	ds	1
  4400  0073                     ??_I2C1_SetBuffer:	
  4401  0073                     ??_EUSART_SetRxInterruptHandler:	
  4402                           ; 1 bytes @ 0x3
  4403                           
  4404  0073                     ??_EUSART_SetTxInterruptHandler:	
  4405                           ; 1 bytes @ 0x3
  4406                           
  4407  0073                     ??_EUSART_SetFramingErrorHandler:	
  4408                           ; 1 bytes @ 0x3
  4409                           
  4410  0073                     ??_EUSART_SetOverrunErrorHandler:	
  4411                           ; 1 bytes @ 0x3
  4412                           
  4413  0073                     ??_EUSART_SetErrorHandler:	
  4414                           ; 1 bytes @ 0x3
  4415                           
  4416  0073                     ??_strlen:	
  4417                           ; 1 bytes @ 0x3
  4418                           
  4419  0073                     ??_isupper:	
  4420                           ; 1 bytes @ 0x3
  4421                           
  4422  0073                     ??_strcpy:	
  4423                           ; 1 bytes @ 0x3
  4424                           
  4425  0073                     ??__Umul8_16:	
  4426                           ; 1 bytes @ 0x3
  4427                           
  4428  0073                     ??_EUSART_Initialize:	
  4429                           ; 1 bytes @ 0x3
  4430                           
  4431  0073                     ??_putch:	
  4432                           ; 1 bytes @ 0x3
  4433                           
  4434  0073                     putch@txData:	
  4435                           ; 1 bytes @ 0x3
  4436                           
  4437  0073                     I2C1_Open@returnValue:	
  4438                           ; 1 bytes @ 0x3
  4439                           
  4440  0073                     I2C1_SetCallback@ptr:	
  4441                           ; 1 bytes @ 0x3
  4442                           
  4443  0073                     sendPWM@data:	
  4444                           ; 1 bytes @ 0x3
  4445                           
  4446  0073                     ___awdiv@dividend:	
  4447                           ; 1 bytes @ 0x3
  4448                           
  4449  0073                     ___awmod@dividend:	
  4450                           ; 2 bytes @ 0x3
  4451                           
  4452  0073                     strncmp@n:	
  4453                           ; 2 bytes @ 0x3
  4454                           
  4455                           
  4456                           ; 2 bytes @ 0x3
  4457  0073                     	ds	1
  4458  0074                     ??_I2C1_SetCallback:	
  4459  0074                     ??_SYSTEM_Initialize:	
  4460                           ; 1 bytes @ 0x4
  4461                           
  4462  0074                     ?_fputc:	
  4463                           ; 1 bytes @ 0x4
  4464                           
  4465  0074                     I2C1_SetBuffer@buffer:	
  4466                           ; 2 bytes @ 0x4
  4467                           
  4468  0074                     strlen@a:	
  4469                           ; 1 bytes @ 0x4
  4470                           
  4471  0074                     fputc@c:	
  4472                           ; 1 bytes @ 0x4
  4473                           
  4474                           
  4475                           ; 2 bytes @ 0x4
  4476  0074                     	ds	1
  4477  0075                     ??___fpclassifyf:	
  4478  0075                     ??_strncmp:	
  4479                           ; 1 bytes @ 0x5
  4480                           
  4481  0075                     ??___awdiv:	
  4482                           ; 1 bytes @ 0x5
  4483                           
  4484  0075                     ??___awmod:	
  4485                           ; 1 bytes @ 0x5
  4486                           
  4487  0075                     ??___flneg:	
  4488                           ; 1 bytes @ 0x5
  4489                           
  4490  0075                     ??___fltol:	
  4491                           ; 1 bytes @ 0x5
  4492                           
  4493  0075                     ??___xxtofl:	
  4494                           ; 1 bytes @ 0x5
  4495                           
  4496  0075                     I2C1_SetCallback@idx:	
  4497                           ; 1 bytes @ 0x5
  4498                           
  4499  0075                     strlen@s:	
  4500                           ; 1 bytes @ 0x5
  4501                           
  4502  0075                     strcpy@s:	
  4503                           ; 1 bytes @ 0x5
  4504                           
  4505  0075                     __Umul8_16@product:	
  4506                           ; 2 bytes @ 0x5
  4507                           
  4508  0075                     ___fleq@ff2:	
  4509                           ; 2 bytes @ 0x5
  4510                           
  4511  0075                     ___fladd@a:	
  4512                           ; 4 bytes @ 0x5
  4513                           
  4514                           
  4515                           ; 4 bytes @ 0x5
  4516  0075                     	ds	1
  4517  0076                     ?_I2C1_SetDataCompleteCallback:	
  4518  0076                     ?_I2C1_SetAddressNackCallback:	
  4519                           ; 1 bytes @ 0x6
  4520                           
  4521  0076                     ___awdiv@counter:	
  4522                           ; 1 bytes @ 0x6
  4523                           
  4524  0076                     ___awmod@counter:	
  4525                           ; 1 bytes @ 0x6
  4526                           
  4527  0076                     fputc@fp:	
  4528                           ; 1 bytes @ 0x6
  4529                           
  4530  0076                     strncmp@_l:	
  4531                           ; 1 bytes @ 0x6
  4532                           
  4533  0076                     I2C1_SetDataCompleteCallback@cb:	
  4534                           ; 1 bytes @ 0x6
  4535                           
  4536  0076                     I2C1_SetAddressNackCallback@cb:	
  4537                           ; 2 bytes @ 0x6
  4538                           
  4539                           
  4540                           ; 2 bytes @ 0x6
  4541  0076                     	ds	1
  4542  0077                     ??_fputc:	
  4543  0077                     ?_tolower:	
  4544                           ; 1 bytes @ 0x7
  4545                           
  4546  0077                     ___awdiv@sign:	
  4547                           ; 2 bytes @ 0x7
  4548                           
  4549  0077                     ___awmod@sign:	
  4550                           ; 1 bytes @ 0x7
  4551                           
  4552  0077                     strcpy@d:	
  4553                           ; 1 bytes @ 0x7
  4554                           
  4555  0077                     strncmp@r:	
  4556                           ; 1 bytes @ 0x7
  4557                           
  4558  0077                     tolower@c:	
  4559                           ; 2 bytes @ 0x7
  4560                           
  4561  0077                     __Umul8_16@word_mpld:	
  4562                           ; 2 bytes @ 0x7
  4563                           
  4564                           
  4565                           ; 2 bytes @ 0x7
  4566  0077                     	ds	1
  4567  0078                     I2C1_SetDataCompleteCallback@ptr:	
  4568  0078                     I2C1_SetAddressNackCallback@ptr:	
  4569                           ; 1 bytes @ 0x8
  4570                           
  4571  0078                     strcpy@dest:	
  4572                           ; 1 bytes @ 0x8
  4573                           
  4574  0078                     ___awdiv@quotient:	
  4575                           ; 1 bytes @ 0x8
  4576                           
  4577                           
  4578                           ; 2 bytes @ 0x8
  4579  0078                     	ds	1
  4580  0079                     ??_I2C1_SetDataCompleteCallback:	
  4581  0079                     ??_I2C1_SetAddressNackCallback:	
  4582                           ; 1 bytes @ 0x9
  4583                           
  4584  0079                     strncmp@l:	
  4585                           ; 1 bytes @ 0x9
  4586                           
  4587  0079                     __Umul8_16@multiplier:	
  4588                           ; 1 bytes @ 0x9
  4589                           
  4590  0079                     _tolower$1931:	
  4591                           ; 1 bytes @ 0x9
  4592                           
  4593                           
  4594                           ; 2 bytes @ 0x9
  4595  0079                     	ds	1
  4596  007A                     ?_rd1RegCompleteHandler:	
  4597  007A                     ?_rd2RegCompleteHandler:	
  4598                           ; 1 bytes @ 0xA
  4599                           
  4600  007A                     ?_wr1RegCompleteHandler:	
  4601                           ; 1 bytes @ 0xA
  4602                           
  4603  007A                     ?_wr2RegCompleteHandler:	
  4604                           ; 1 bytes @ 0xA
  4605                           
  4606  007A                     ?_rdBlkRegCompleteHandler:	
  4607                           ; 1 bytes @ 0xA
  4608                           
  4609  007A                     ?_I2C1_CallbackReturnStop:	
  4610                           ; 1 bytes @ 0xA
  4611                           
  4612  007A                     ?_I2C1_CallbackReturnReset:	
  4613                           ; 1 bytes @ 0xA
  4614                           
  4615  007A                     ??___flsub:	
  4616                           ; 1 bytes @ 0xA
  4617                           
  4618  007A                     rd1RegCompleteHandler@ptr:	
  4619                           ; 1 bytes @ 0xA
  4620                           
  4621  007A                     rd2RegCompleteHandler@ptr:	
  4622                           ; 1 bytes @ 0xA
  4623                           
  4624  007A                     wr1RegCompleteHandler@ptr:	
  4625                           ; 1 bytes @ 0xA
  4626                           
  4627  007A                     wr2RegCompleteHandler@ptr:	
  4628                           ; 1 bytes @ 0xA
  4629                           
  4630  007A                     rdBlkRegCompleteHandler@ptr:	
  4631                           ; 1 bytes @ 0xA
  4632                           
  4633  007A                     I2C1_CallbackReturnStop@funPtr:	
  4634                           ; 1 bytes @ 0xA
  4635                           
  4636  007A                     I2C1_CallbackReturnReset@funPtr:	
  4637                           ; 1 bytes @ 0xA
  4638                           
  4639  007A                     ___fltol@sign1:	
  4640                           ; 1 bytes @ 0xA
  4641                           
  4642                           
  4643                           ; 1 bytes @ 0xA
  4644  007A                     	ds	1
  4645  007B                     ??_rd1RegCompleteHandler:	
  4646  007B                     ??_rd2RegCompleteHandler:	
  4647                           ; 1 bytes @ 0xB
  4648                           
  4649  007B                     ??_wr1RegCompleteHandler:	
  4650                           ; 1 bytes @ 0xB
  4651                           
  4652  007B                     ??_wr2RegCompleteHandler:	
  4653                           ; 1 bytes @ 0xB
  4654                           
  4655  007B                     ??_rdBlkRegCompleteHandler:	
  4656                           ; 1 bytes @ 0xB
  4657                           
  4658  007B                     ??_I2C1_CallbackReturnStop:	
  4659                           ; 1 bytes @ 0xB
  4660                           
  4661  007B                     ??_I2C1_CallbackReturnReset:	
  4662                           ; 1 bytes @ 0xB
  4663                           
  4664  007B                     ??_I2C1_Poller:	
  4665                           ; 1 bytes @ 0xB
  4666                           
  4667  007B                     ??_I2C1_MasterOperation:	
  4668                           ; 1 bytes @ 0xB
  4669                           
  4670  007B                     ___fltol@exp1:	
  4671                           ; 1 bytes @ 0xB
  4672                           
  4673                           
  4674                           ; 1 bytes @ 0xB
  4675  007B                     	ds	1
  4676  007C                     ??_I2C1_MasterWrite:	
  4677                           
  4678                           	psect	cstackBANK0
  4679  0020                     __pcstackBANK0:	
  4680                           ; 1 bytes @ 0xC
  4681                           
  4682  0020                     ??_I2C1_DO_TX:	
  4683  0020                     ??_I2C1_DO_RX:	
  4684                           ; 1 bytes @ 0x0
  4685                           
  4686  0020                     ??_I2C1_DO_TX_EMPTY:	
  4687                           ; 1 bytes @ 0x0
  4688                           
  4689  0020                     ??_I2C1_DO_ADDRESS_NACK:	
  4690                           ; 1 bytes @ 0x0
  4691                           
  4692  0020                     ??_tolower:	
  4693                           ; 1 bytes @ 0x0
  4694                           
  4695  0020                     ??___fleq:	
  4696                           ; 1 bytes @ 0x0
  4697                           
  4698  0020                     ??___fladd:	
  4699                           ; 1 bytes @ 0x0
  4700                           
  4701  0020                     ?_fputs:	
  4702                           ; 1 bytes @ 0x0
  4703                           
  4704  0020                     ?___flmul:	
  4705                           ; 2 bytes @ 0x0
  4706                           
  4707  0020                     ___xxtofl@sign:	
  4708                           ; 4 bytes @ 0x0
  4709                           
  4710  0020                     fputs@fp:	
  4711                           ; 1 bytes @ 0x0
  4712                           
  4713  0020                     ___fpclassifyf@e:	
  4714                           ; 1 bytes @ 0x0
  4715                           
  4716  0020                     ___flmul@b:	
  4717                           ; 2 bytes @ 0x0
  4718                           
  4719                           
  4720                           ; 4 bytes @ 0x0
  4721  0020                     	ds	1
  4722  0021                     ??_fputs:	
  4723  0021                     ___xxtofl@exp:	
  4724                           ; 1 bytes @ 0x1
  4725                           
  4726                           
  4727                           ; 1 bytes @ 0x1
  4728  0021                     	ds	1
  4729  0022                     ___xxtofl@arg:	
  4730  0022                     ___fpclassifyf@u:	
  4731                           ; 4 bytes @ 0x2
  4732                           
  4733                           
  4734                           ; 4 bytes @ 0x2
  4735  0022                     	ds	1
  4736  0023                     ??_I2C1_MasterFsm:	
  4737                           
  4738                           ; 1 bytes @ 0x3
  4739  0023                     	ds	1
  4740  0024                     fputs@c:	
  4741  0024                     ___flmul@a:	
  4742                           ; 1 bytes @ 0x4
  4743                           
  4744                           
  4745                           ; 4 bytes @ 0x4
  4746  0024                     	ds	1
  4747  0025                     fputs@i:	
  4748                           
  4749                           ; 2 bytes @ 0x5
  4750  0025                     	ds	1
  4751  0026                     ?___fldiv:	
  4752  0026                     I2C1_MasterOperation@read:	
  4753                           ; 4 bytes @ 0x6
  4754                           
  4755  0026                     ___fldiv@a:	
  4756                           ; 1 bytes @ 0x6
  4757                           
  4758                           
  4759                           ; 4 bytes @ 0x6
  4760  0026                     	ds	1
  4761  0027                     I2C1_MasterOperation@returnValue:	
  4762  0027                     fputs@s:	
  4763                           ; 1 bytes @ 0x7
  4764                           
  4765                           
  4766                           ; 1 bytes @ 0x7
  4767  0027                     	ds	1
  4768  0028                     ?_I2C1_Read1ByteRegister:	
  4769  0028                     ?_I2C1_Write1ByteRegister:	
  4770                           ; 1 bytes @ 0x8
  4771                           
  4772  0028                     ??___flmul:	
  4773                           ; 1 bytes @ 0x8
  4774                           
  4775  0028                     ?_pad:	
  4776                           ; 1 bytes @ 0x8
  4777                           
  4778  0028                     I2C1_Read1ByteRegister@reg:	
  4779                           ; 2 bytes @ 0x8
  4780                           
  4781  0028                     I2C1_Write1ByteRegister@reg:	
  4782                           ; 1 bytes @ 0x8
  4783                           
  4784  0028                     pad@buf:	
  4785                           ; 1 bytes @ 0x8
  4786                           
  4787  0028                     ___fladd@signs:	
  4788                           ; 1 bytes @ 0x8
  4789                           
  4790                           
  4791                           ; 1 bytes @ 0x8
  4792  0028                     	ds	1
  4793  0029                     ??_I2C1_Read1ByteRegister:	
  4794  0029                     I2C1_Write1ByteRegister@data:	
  4795                           ; 1 bytes @ 0x9
  4796                           
  4797  0029                     ___fladd@aexp:	
  4798                           ; 1 bytes @ 0x9
  4799                           
  4800  0029                     pad@p:	
  4801                           ; 1 bytes @ 0x9
  4802                           
  4803                           
  4804                           ; 2 bytes @ 0x9
  4805  0029                     	ds	1
  4806  002A                     ??_I2C1_Write1ByteRegister:	
  4807  002A                     I2C1_Read1ByteRegister@address:	
  4808                           ; 1 bytes @ 0xA
  4809                           
  4810  002A                     ___fladd@bexp:	
  4811                           ; 1 bytes @ 0xA
  4812                           
  4813  002A                     ___fldiv@b:	
  4814                           ; 1 bytes @ 0xA
  4815                           
  4816                           
  4817                           ; 4 bytes @ 0xA
  4818  002A                     	ds	1
  4819  002B                     ??_pad:	
  4820  002B                     I2C1_Read1ByteRegister@returnValue:	
  4821                           ; 1 bytes @ 0xB
  4822                           
  4823  002B                     I2C1_Write1ByteRegister@address:	
  4824                           ; 1 bytes @ 0xB
  4825                           
  4826  002B                     ___fladd@grs:	
  4827                           ; 1 bytes @ 0xB
  4828                           
  4829                           
  4830                           ; 1 bytes @ 0xB
  4831  002B                     	ds	1
  4832  002C                     ??_initializePressureSensor:	
  4833  002C                     pad@i:	
  4834                           ; 1 bytes @ 0xC
  4835                           
  4836                           
  4837                           ; 2 bytes @ 0xC
  4838  002C                     	ds	1
  4839  002D                     ___flmul@sign:	
  4840                           
  4841                           ; 1 bytes @ 0xD
  4842  002D                     	ds	1
  4843  002E                     ??___fldiv:	
  4844  002E                     pad@w:	
  4845                           ; 1 bytes @ 0xE
  4846                           
  4847  002E                     ___flmul@grs:	
  4848                           ; 2 bytes @ 0xE
  4849                           
  4850                           
  4851                           ; 4 bytes @ 0xE
  4852  002E                     	ds	2
  4853  0030                     pad@fp:	
  4854                           
  4855                           ; 1 bytes @ 0x10
  4856  0030                     	ds	2
  4857  0032                     ___flmul@aexp:	
  4858                           
  4859                           ; 1 bytes @ 0x12
  4860  0032                     	ds	1
  4861  0033                     ___flmul@bexp:	
  4862  0033                     ___fldiv@rem:	
  4863                           ; 1 bytes @ 0x13
  4864                           
  4865                           
  4866                           ; 4 bytes @ 0x13
  4867  0033                     	ds	1
  4868  0034                     ___flmul@prod:	
  4869                           
  4870                           ; 4 bytes @ 0x14
  4871  0034                     	ds	3
  4872  0037                     ___fldiv@sign:	
  4873                           
  4874                           ; 1 bytes @ 0x17
  4875  0037                     	ds	1
  4876  0038                     ___fldiv@new_exp:	
  4877  0038                     ___flmul@temp:	
  4878                           ; 2 bytes @ 0x18
  4879                           
  4880                           
  4881                           ; 2 bytes @ 0x18
  4882  0038                     	ds	2
  4883  003A                     ?___flge:	
  4884  003A                     ?___flsub:	
  4885                           ; 1 bit 
  4886                           
  4887  003A                     ___flge@ff1:	
  4888                           ; 4 bytes @ 0x1A
  4889                           
  4890  003A                     ___flsub@a:	
  4891                           ; 4 bytes @ 0x1A
  4892                           
  4893  003A                     ___fldiv@grs:	
  4894                           ; 4 bytes @ 0x1A
  4895                           
  4896                           
  4897                           ; 4 bytes @ 0x1A
  4898  003A                     	ds	4
  4899  003E                     ___fldiv@bexp:	
  4900  003E                     ___flge@ff2:	
  4901                           ; 1 bytes @ 0x1E
  4902                           
  4903  003E                     ___flsub@b:	
  4904                           ; 4 bytes @ 0x1E
  4905                           
  4906                           
  4907                           ; 4 bytes @ 0x1E
  4908  003E                     	ds	1
  4909  003F                     ___fldiv@aexp:	
  4910                           
  4911                           ; 1 bytes @ 0x1F
  4912  003F                     	ds	1
  4913  0040                     ?_floorf:	
  4914  0040                     floorf@x:	
  4915                           ; 4 bytes @ 0x20
  4916                           
  4917                           
  4918                           ; 4 bytes @ 0x20
  4919  0040                     	ds	2
  4920  0042                     ??___flge:	
  4921                           
  4922                           ; 1 bytes @ 0x22
  4923  0042                     	ds	2
  4924  0044                     ??_floorf:	
  4925                           
  4926                           ; 1 bytes @ 0x24
  4927  0044                     	ds	6
  4928  004A                     floorf@m:	
  4929                           
  4930                           ; 4 bytes @ 0x2A
  4931  004A                     	ds	4
  4932  004E                     floorf@e:	
  4933                           
  4934                           ; 2 bytes @ 0x2E
  4935  004E                     	ds	2
  4936  0050                     floorf@u:	
  4937                           
  4938                           ; 4 bytes @ 0x30
  4939  0050                     	ds	4
  4940  0054                     ?_efgtoa:	
  4941  0054                     efgtoa@f:	
  4942                           ; 2 bytes @ 0x34
  4943                           
  4944                           
  4945                           ; 4 bytes @ 0x34
  4946  0054                     	ds	4
  4947  0058                     efgtoa@c:	
  4948                           
  4949                           ; 1 bytes @ 0x38
  4950  0058                     	ds	1
  4951  0059                     ??_efgtoa:	
  4952                           
  4953                           ; 1 bytes @ 0x39
  4954  0059                     	ds	4
  4955  005D                     ?_vfpfcnvrt:	
  4956  005D                     vfpfcnvrt@fmt:	
  4957                           ; 2 bytes @ 0x3D
  4958                           
  4959                           
  4960                           ; 1 bytes @ 0x3D
  4961  005D                     	ds	1
  4962  005E                     vfpfcnvrt@ap:	
  4963                           
  4964                           ; 1 bytes @ 0x3E
  4965  005E                     	ds	1
  4966  005F                     ??_vfpfcnvrt:	
  4967                           
  4968                           ; 1 bytes @ 0x3F
  4969  005F                     	ds	6
  4970  0065                     _vfpfcnvrt$1550:	
  4971                           
  4972                           ; 2 bytes @ 0x45
  4973  0065                     	ds	2
  4974  0067                     vfpfcnvrt@ct:	
  4975                           
  4976                           ; 3 bytes @ 0x47
  4977  0067                     	ds	3
  4978  006A                     vfpfcnvrt@f:	
  4979                           
  4980                           ; 4 bytes @ 0x4A
  4981  006A                     	ds	4
  4982  006E                     vfpfcnvrt@c:	
  4983                           
  4984                           ; 1 bytes @ 0x4E
  4985  006E                     	ds	1
  4986  006F                     vfpfcnvrt@fp:	
  4987                           
  4988                           ; 1 bytes @ 0x4F
  4989  006F                     	ds	1
  4990                           
  4991                           	psect	maintext
  4992  0816                     __pmaintext:	
  4993 ;;
  4994 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4995 ;;
  4996 ;; *************** function _main *****************
  4997 ;; Defined at:
  4998 ;;		line 181 in file "main.c"
  4999 ;; Parameters:    Size  Location     Type
  5000 ;;		None
  5001 ;; Auto vars:     Size  Location     Type
  5002 ;;  dummy_data     23    8[BANK2 ] unsigned char [23]
  5003 ;;  hdr_trl         4   31[BANK2 ] unsigned char [4]
  5004 ;;  i               1   38[BANK2 ] unsigned char 
  5005 ;;  EOC             1   37[BANK2 ] unsigned char 
  5006 ;;  SOC             1   36[BANK2 ] unsigned char 
  5007 ;;  n               1    0        unsigned char 
  5008 ;; Return value:  Size  Location     Type
  5009 ;;                  1    wreg      void 
  5010 ;; Registers used:
  5011 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5012 ;; Tracked objects:
  5013 ;;		On entry : B1F/0
  5014 ;;		On exit  : 0/0
  5015 ;;		Unchanged: 0/0
  5016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5018 ;;      Locals:         0       0       0      31       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5019 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5020 ;;      Totals:         0       0       2      31       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5021 ;;Total ram usage:       33 bytes
  5022 ;; Hardware stack levels required when called:   14
  5023 ;; This function calls:
  5024 ;;		_SYSTEM_Initialize
  5025 ;;		_initializePressureSensor
  5026 ;;		_readPressureSensor
  5027 ;;		_sendPWM
  5028 ;;		_setZero
  5029 ;; This function is called by:
  5030 ;;		Startup code after reset
  5031 ;; This function uses a non-reentrant model
  5032 ;;
  5033                           
  5034                           
  5035                           ;psect for function _main
  5036  0816                     _main:	
  5037                           
  5038                           ;main.c: 183:     char hdr_trl[] = {0xFF, 0x00, 0xFF, 0x00};
  5039                           
  5040                           ;incstack = 0
  5041                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5042  0816  0022               	movlb	2	; select bank2
  5043  0817  086B               	movf	(main@F7272+3)^(0+256),w
  5044  0818  00C2               	movwf	(main@hdr_trl+3)^(0+256)
  5045  0819  086A               	movf	(main@F7272+2)^(0+256),w
  5046  081A  00C1               	movwf	(main@hdr_trl+2)^(0+256)
  5047  081B  0869               	movf	(main@F7272+1)^(0+256),w
  5048  081C  00C0               	movwf	(main@hdr_trl+1)^(0+256)
  5049  081D  0868               	movf	main@F7272^(0+256),w
  5050  081E  00BF               	movwf	main@hdr_trl^(0+256)
  5051                           
  5052                           ;main.c: 184:     char SOC = 0x16;
  5053  081F  3016               	movlw	22
  5054  0820  0021               	movlb	1	; select bank1
  5055  0821  00EB               	movwf	??_main^(0+128)
  5056  0822  086B               	movf	??_main^(0+128),w
  5057  0823  0022               	movlb	2	; select bank2
  5058  0824  00C4               	movwf	main@SOC^(0+256)
  5059                           
  5060                           ;main.c: 185:     char EOC = 0x17;
  5061  0825  3017               	movlw	23
  5062  0826  0021               	movlb	1	; select bank1
  5063  0827  00EB               	movwf	??_main^(0+128)
  5064  0828  086B               	movf	??_main^(0+128),w
  5065  0829  0022               	movlb	2	; select bank2
  5066  082A  00C5               	movwf	main@EOC^(0+256)
  5067                           
  5068                           ;main.c: 187:     SYSTEM_Initialize();
  5069  082B  319E  26B1  3188   	fcall	_SYSTEM_Initialize
  5070                           
  5071                           ;main.c: 188:     setZero();
  5072  082E  319C  24FF  3188   	fcall	_setZero
  5073  0831  0022               	movlb	2	; select bank2
  5074  0832  148E               	bsf	14,1	;volatile
  5075  0833  168E               	bsf	14,5	;volatile
  5076                           
  5077                           ;main.c: 191:     initializePressureSensor();
  5078  0834  319E  26E1  3188   	fcall	_initializePressureSensor
  5079                           
  5080                           ;main.c: 192:     pressure = 1013.134;
  5081  0837  3044               	movlw	68
  5082  0838  0022               	movlb	2	; select bank2
  5083  0839  00D6               	movwf	(_pressure+3)^(0+256)
  5084  083A  307D               	movlw	125
  5085  083B  00D5               	movwf	(_pressure+2)^(0+256)
  5086  083C  3048               	movlw	72
  5087  083D  00D4               	movwf	(_pressure+1)^(0+256)
  5088  083E  3093               	movlw	147
  5089  083F  00D3               	movwf	_pressure^(0+256)
  5090                           
  5091                           ;main.c: 193:     temperature = 24.76;
  5092  0840  3041               	movlw	65
  5093  0841  00D2               	movwf	(_temperature+3)^(0+256)
  5094  0842  30C6               	movlw	198
  5095  0843  00D1               	movwf	(_temperature+2)^(0+256)
  5096  0844  3014               	movlw	20
  5097  0845  00D0               	movwf	(_temperature+1)^(0+256)
  5098  0846  307B               	movlw	123
  5099  0847  00CF               	movwf	_temperature^(0+256)
  5100                           
  5101                           ;main.c: 198:     (INTCONbits.GIE = 1);
  5102  0848  178B               	bsf	11,7	;volatile
  5103                           
  5104                           ;main.c: 201:     (INTCONbits.PEIE = 1);
  5105  0849  170B               	bsf	11,6	;volatile
  5106                           
  5107                           ;main.c: 208:     char dummy_data[] = {0xFF, 0x00, 0xFF, 0x00, 0x16, 'H', 'E', 'L', 'L',
      +                           'O', ' ', 'S', 'E', 'N', 'S', 'O', 'R', 'S', 0x17, 0xFF, 0x00, 0xFF, 0x00};
  5108  084A  30A0               	movlw	low main@F7276
  5109  084B  0086               	movwf	6
  5110  084C  3002               	movlw	high main@F7276
  5111  084D  0087               	movwf	7
  5112  084E  3028               	movlw	low main@dummy_data
  5113  084F  0084               	movwf	4
  5114  0850  3001               	movlw	high main@dummy_data
  5115  0851  0085               	movwf	5
  5116  0852  3017               	movlw	23
  5117  0853  0021               	movlb	1	; select bank1
  5118  0854  00EB               	movwf	??_main^(0+128)
  5119  0855                     u7500:	
  5120  0855  0016               	moviw fsr1++
  5121  0856  001A               	movwi fsr0++
  5122  0857  0BEB               	decfsz	??_main^(0+128),f
  5123  0858  2855               	goto	u7500
  5124                           
  5125                           ;main.c: 211:     packet[5] = 'D';
  5126  0859  3044               	movlw	68
  5127  085A  00EB               	movwf	??_main^(0+128)
  5128  085B  086B               	movf	??_main^(0+128),w
  5129  085C  0023               	movlb	3	; select bank3
  5130  085D  00DA               	movwf	(_packet^(0+384)+5)
  5131                           
  5132                           ;main.c: 212:     packet[6] = 'A';
  5133  085E  3041               	movlw	65
  5134  085F  0021               	movlb	1	; select bank1
  5135  0860  00EB               	movwf	??_main^(0+128)
  5136  0861  086B               	movf	??_main^(0+128),w
  5137  0862  0023               	movlb	3	; select bank3
  5138  0863  00DB               	movwf	(_packet^(0+384)+6)
  5139                           
  5140                           ;main.c: 213:     packet[7] = 'T';
  5141  0864  3054               	movlw	84
  5142  0865  0021               	movlb	1	; select bank1
  5143  0866  00EB               	movwf	??_main^(0+128)
  5144  0867  086B               	movf	??_main^(0+128),w
  5145  0868  0023               	movlb	3	; select bank3
  5146  0869  00DC               	movwf	(_packet^(0+384)+7)
  5147                           
  5148                           ;main.c: 214:     packet[8] = 'A';
  5149  086A  3041               	movlw	65
  5150  086B  0021               	movlb	1	; select bank1
  5151  086C  00EB               	movwf	??_main^(0+128)
  5152  086D  086B               	movf	??_main^(0+128),w
  5153  086E  0023               	movlb	3	; select bank3
  5154  086F  00DD               	movwf	(_packet^(0+384)+8)
  5155  0870                     l6974:	
  5156                           
  5157                           ;main.c: 220:         TRISC = 0xDD;
  5158  0870  30DD               	movlw	221
  5159  0871  0021               	movlb	1	; select bank1
  5160  0872  008E               	movwf	14	;volatile
  5161                           
  5162                           ;main.c: 221:         if (PORTAbits.RA4 == 1) {
  5163  0873  0020               	movlb	0	; select bank0
  5164  0874  1A0C               	btfsc	12,4	;volatile
  5165  0875  2870               	goto	l6974
  5166                           
  5167                           ;main.c: 225:             readPressureSensor();
  5168  0876  3188  20C8  3188   	fcall	_readPressureSensor
  5169                           
  5170                           ;main.c: 226:             _delay((unsigned long)((500)*(16000000/4000.0)));
  5171  0879  300B               	movlw	11
  5172  087A  0021               	movlb	1	; select bank1
  5173  087B  00EC               	movwf	(??_main^(0+128)+1)
  5174  087C  3026               	movlw	38
  5175  087D  00EB               	movwf	??_main^(0+128)
  5176  087E  305D               	movlw	93
  5177  087F                     u7557:	
  5178  087F  0B89               	decfsz	9,f
  5179  0880  287F               	goto	u7557
  5180  0881  0BEB               	decfsz	??_main^(0+128),f
  5181  0882  287F               	goto	u7557
  5182  0883  0BEC               	decfsz	(??_main^(0+128)+1),f
  5183  0884  287F               	goto	u7557
  5184  0885  3200               	nop2
  5185  0886  0022               	movlb	2	; select bank2
  5186  0887  150C               	bsf	12,2	;volatile
  5187                           
  5188                           ;main.c: 228:             TRISC = 0x9D;
  5189  0888  309D               	movlw	157
  5190  0889  0021               	movlb	1	; select bank1
  5191  088A  008E               	movwf	14	;volatile
  5192                           
  5193                           ;main.c: 235:             for(i=0;i<4;++i){
  5194  088B  0022               	movlb	2	; select bank2
  5195  088C  01C6               	clrf	main@i^(0+256)
  5196  088D                     l6994:	
  5197                           
  5198                           ;main.c: 236:                 sendPWM(&hdr_trl[i]);
  5199  088D  0846               	movf	main@i^(0+256),w
  5200  088E  3E3F               	addlw	(low (main@hdr_trl| (0+256)))& (0+255)
  5201  088F  3192  2201  3188   	fcall	_sendPWM
  5202                           
  5203                           ;main.c: 237:             }
  5204  0892  3001               	movlw	1
  5205  0893  0021               	movlb	1	; select bank1
  5206  0894  00EB               	movwf	??_main^(0+128)
  5207  0895  086B               	movf	??_main^(0+128),w
  5208  0896  0022               	movlb	2	; select bank2
  5209  0897  07C6               	addwf	main@i^(0+256),f
  5210  0898  3004               	movlw	4
  5211  0899  0246               	subwf	main@i^(0+256),w
  5212  089A  1C03               	skipc
  5213  089B  288D               	goto	l6994
  5214                           
  5215                           ;main.c: 238:             sendPWM(&SOC);
  5216  089C  3044               	movlw	(low (main@SOC| (0+256)))& (0+255)
  5217  089D  3192  2201  3188   	fcall	_sendPWM
  5218                           
  5219                           ;main.c: 240:             for (i=0;i<9;++i){
  5220  08A0  0022               	movlb	2	; select bank2
  5221  08A1  01C6               	clrf	main@i^(0+256)
  5222  08A2                     l7008:	
  5223                           
  5224                           ;main.c: 241:                 sendPWM(&packet[i]);
  5225  08A2  0846               	movf	main@i^(0+256),w
  5226  08A3  3ED5               	addlw	(low (_packet| (0+256)))& (0+255)
  5227  08A4  3192  2201  3188   	fcall	_sendPWM
  5228                           
  5229                           ;main.c: 242:             }
  5230  08A7  3001               	movlw	1
  5231  08A8  0021               	movlb	1	; select bank1
  5232  08A9  00EB               	movwf	??_main^(0+128)
  5233  08AA  086B               	movf	??_main^(0+128),w
  5234  08AB  0022               	movlb	2	; select bank2
  5235  08AC  07C6               	addwf	main@i^(0+256),f
  5236  08AD  3009               	movlw	9
  5237  08AE  0246               	subwf	main@i^(0+256),w
  5238  08AF  1C03               	skipc
  5239  08B0  28A2               	goto	l7008
  5240                           
  5241                           ;main.c: 243:             sendPWM(&EOC);
  5242  08B1  3045               	movlw	(low (main@EOC| (0+256)))& (0+255)
  5243  08B2  3192  2201  3188   	fcall	_sendPWM
  5244                           
  5245                           ;main.c: 244:             for(i=0;i<4;++i){
  5246  08B5  0022               	movlb	2	; select bank2
  5247  08B6  01C6               	clrf	main@i^(0+256)
  5248  08B7                     l7022:	
  5249                           
  5250                           ;main.c: 245:                 sendPWM(&hdr_trl[i]);
  5251  08B7  0846               	movf	main@i^(0+256),w
  5252  08B8  3E3F               	addlw	(low (main@hdr_trl| (0+256)))& (0+255)
  5253  08B9  3192  2201  3188   	fcall	_sendPWM
  5254                           
  5255                           ;main.c: 246:             }
  5256  08BC  3001               	movlw	1
  5257  08BD  0021               	movlb	1	; select bank1
  5258  08BE  00EB               	movwf	??_main^(0+128)
  5259  08BF  086B               	movf	??_main^(0+128),w
  5260  08C0  0022               	movlb	2	; select bank2
  5261  08C1  07C6               	addwf	main@i^(0+256),f
  5262  08C2  3004               	movlw	4
  5263  08C3  0246               	subwf	main@i^(0+256),w
  5264  08C4  1C03               	skipc
  5265  08C5  28B7               	goto	l7022
  5266                           
  5267                           ;main.c: 249:             do { LATAbits.LATA2 = 0; } while(0);
  5268  08C6  110C               	bcf	12,2	;volatile
  5269  08C7  2870               	goto	l6974
  5270  08C8                     __end_of_main:	
  5271                           
  5272                           	psect	text1
  5273  1CFF                     __ptext1:	
  5274 ;; *************** function _setZero *****************
  5275 ;; Defined at:
  5276 ;;		line 87 in file "main.c"
  5277 ;; Parameters:    Size  Location     Type
  5278 ;;		None
  5279 ;; Auto vars:     Size  Location     Type
  5280 ;;		None
  5281 ;; Return value:  Size  Location     Type
  5282 ;;                  1    wreg      void 
  5283 ;; Registers used:
  5284 ;;		status,2
  5285 ;; Tracked objects:
  5286 ;;		On entry : 0/0
  5287 ;;		On exit  : 0/0
  5288 ;;		Unchanged: 0/0
  5289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5294 ;;Total ram usage:        0 bytes
  5295 ;; Hardware stack levels used:    1
  5296 ;; Hardware stack levels required when called:    4
  5297 ;; This function calls:
  5298 ;;		Nothing
  5299 ;; This function is called by:
  5300 ;;		_main
  5301 ;; This function uses a non-reentrant model
  5302 ;;
  5303                           
  5304                           
  5305                           ;psect for function _setZero
  5306  1CFF                     _setZero:	
  5307                           
  5308                           ;main.c: 89:     PWM5CON = 0x00;
  5309                           
  5310                           ;incstack = 0
  5311                           ; Regs used in _setZero: [status,2]
  5312  1CFF  002C               	movlb	12	; select bank12
  5313  1D00  0199               	clrf	25	;volatile
  5314  1D01  0008               	return
  5315  1D02                     __end_of_setZero:	
  5316                           
  5317                           	psect	text2
  5318  1201                     __ptext2:	
  5319 ;; *************** function _sendPWM *****************
  5320 ;; Defined at:
  5321 ;;		line 92 in file "main.c"
  5322 ;; Parameters:    Size  Location     Type
  5323 ;;  data            1    wreg     PTR unsigned char 
  5324 ;;		 -> main@EOC(1), main@SOC(1), main@hdr_trl(4), packet(9), 
  5325 ;; Auto vars:     Size  Location     Type
  5326 ;;  data            1    3[COMMON] PTR unsigned char 
  5327 ;;		 -> main@EOC(1), main@SOC(1), main@hdr_trl(4), packet(9), 
  5328 ;;  j               1    2[COMMON] unsigned char 
  5329 ;; Return value:  Size  Location     Type
  5330 ;;                  1    wreg      _Bool 
  5331 ;; Registers used:
  5332 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5333 ;; Tracked objects:
  5334 ;;		On entry : 0/0
  5335 ;;		On exit  : 0/0
  5336 ;;		Unchanged: 0/0
  5337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5339 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5340 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5341 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5342 ;;Total ram usage:        3 bytes
  5343 ;; Hardware stack levels used:    1
  5344 ;; Hardware stack levels required when called:    5
  5345 ;; This function calls:
  5346 ;;		_setHigh
  5347 ;;		_setLow
  5348 ;; This function is called by:
  5349 ;;		_main
  5350 ;;		_sendFloat
  5351 ;; This function uses a non-reentrant model
  5352 ;;
  5353                           
  5354                           
  5355                           ;psect for function _sendPWM
  5356  1201                     _sendPWM:	
  5357                           
  5358                           ;incstack = 0
  5359                           ; Regs used in _sendPWM: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5360                           ;sendPWM@data stored from wreg
  5361  1201  00F3               	movwf	sendPWM@data
  5362                           
  5363                           ;main.c: 95:     setLow();
  5364  1202  319D  25CD  3192   	fcall	_setLow
  5365                           
  5366                           ;main.c: 96:     _delay((unsigned long)((13.3333333333)*(16000000/4000.0)));
  5367  1205  3046               	movlw	70
  5368  1206  00F1               	movwf	??_sendPWM
  5369  1207  3042               	movlw	66
  5370  1208                     u7567:	
  5371  1208  0B89               	decfsz	9,f
  5372  1209  2A08               	goto	u7567
  5373  120A  0BF1               	decfsz	??_sendPWM,f
  5374  120B  2A08               	goto	u7567
  5375  120C  0000               	nop
  5376                           
  5377                           ;main.c: 98:     for (j = 0; j < 8; j++) {
  5378  120D  01F2               	clrf	sendPWM@j
  5379  120E                     l5866:	
  5380                           
  5381                           ;main.c: 99:         (!!((*data >> j)&0x01)) ? setHigh() : setLow();
  5382  120E  0873               	movf	sendPWM@data,w
  5383  120F  0086               	movwf	6
  5384  1210  3001               	movlw	1	; select bank2/3
  5385  1211  0087               	movwf	7
  5386  1212  0801               	movf	1,w
  5387  1213  00F1               	movwf	??_sendPWM
  5388  1214  0A72               	incf	sendPWM@j,w
  5389  1215  2A17               	goto	u5984
  5390  1216                     u5985:	
  5391  1216  36F1               	lsrf	??_sendPWM,f
  5392  1217                     u5984:	
  5393  1217  0B89               	decfsz	9,f
  5394  1218  2A16               	goto	u5985
  5395  1219  1C71               	btfss	??_sendPWM,0
  5396  121A  2A1F               	goto	l5870
  5397  121B  319D  25C3  3192   	fcall	_setHigh
  5398  121E  2A22               	goto	l5872
  5399  121F                     l5870:	
  5400  121F  319D  25CD  3192   	fcall	_setLow
  5401  1222                     l5872:	
  5402                           
  5403                           ;main.c: 100:         _delay((unsigned long)((13.3333333333)*(16000000/4000.0)));
  5404  1222  3046               	movlw	70
  5405  1223  00F1               	movwf	??_sendPWM
  5406  1224  3042               	movlw	66
  5407  1225                     u7577:	
  5408  1225  0B89               	decfsz	9,f
  5409  1226  2A25               	goto	u7577
  5410  1227  0BF1               	decfsz	??_sendPWM,f
  5411  1228  2A25               	goto	u7577
  5412  1229  0000               	nop
  5413                           
  5414                           ;main.c: 101:     }
  5415  122A  3001               	movlw	1
  5416  122B  00F1               	movwf	??_sendPWM
  5417  122C  0871               	movf	??_sendPWM,w
  5418  122D  07F2               	addwf	sendPWM@j,f
  5419  122E  3008               	movlw	8
  5420  122F  0272               	subwf	sendPWM@j,w
  5421  1230  1C03               	skipc
  5422  1231  2A0E               	goto	l5866
  5423                           
  5424                           ;main.c: 103:     setHigh();
  5425  1232  319D  25C3  3192   	fcall	_setHigh
  5426                           
  5427                           ;main.c: 104:     _delay((unsigned long)((13.3333333333)*(16000000/4000.0)));
  5428  1235  3046               	movlw	70
  5429  1236  00F1               	movwf	??_sendPWM
  5430  1237  3042               	movlw	66
  5431  1238                     u7587:	
  5432  1238  0B89               	decfsz	9,f
  5433  1239  2A38               	goto	u7587
  5434  123A  0BF1               	decfsz	??_sendPWM,f
  5435  123B  2A38               	goto	u7587
  5436  123C  0000               	nop
  5437  123D  0008               	return
  5438  123E                     __end_of_sendPWM:	
  5439                           
  5440                           	psect	text3
  5441  1DCD                     __ptext3:	
  5442 ;; *************** function _setLow *****************
  5443 ;; Defined at:
  5444 ;;		line 80 in file "main.c"
  5445 ;; Parameters:    Size  Location     Type
  5446 ;;		None
  5447 ;; Auto vars:     Size  Location     Type
  5448 ;;		None
  5449 ;; Return value:  Size  Location     Type
  5450 ;;                  1    wreg      void 
  5451 ;; Registers used:
  5452 ;;		wreg
  5453 ;; Tracked objects:
  5454 ;;		On entry : 0/0
  5455 ;;		On exit  : 0/0
  5456 ;;		Unchanged: 0/0
  5457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5462 ;;Total ram usage:        0 bytes
  5463 ;; Hardware stack levels used:    1
  5464 ;; Hardware stack levels required when called:    4
  5465 ;; This function calls:
  5466 ;;		Nothing
  5467 ;; This function is called by:
  5468 ;;		_sendPWM
  5469 ;; This function uses a non-reentrant model
  5470 ;;
  5471                           
  5472                           
  5473                           ;psect for function _setLow
  5474  1DCD                     _setLow:	
  5475                           
  5476                           ;main.c: 82:     PWM5CON = 0x80;
  5477                           
  5478                           ;incstack = 0
  5479                           ; Regs used in _setLow: [wreg]
  5480  1DCD  3080               	movlw	128
  5481  1DCE  002C               	movlb	12	; select bank12
  5482  1DCF  0099               	movwf	25	;volatile
  5483                           
  5484                           ;main.c: 83:     PR2 = 0x74;
  5485  1DD0  3074               	movlw	116
  5486  1DD1  0020               	movlb	0	; select bank0
  5487  1DD2  009E               	movwf	30	;volatile
  5488                           
  5489                           ;main.c: 84:     PWM5DCH = 0x3A;
  5490  1DD3  303A               	movlw	58
  5491  1DD4  002C               	movlb	12	; select bank12
  5492  1DD5  0098               	movwf	24	;volatile
  5493  1DD6  0008               	return
  5494  1DD7                     __end_of_setLow:	
  5495                           
  5496                           	psect	text4
  5497  1DC3                     __ptext4:	
  5498 ;; *************** function _setHigh *****************
  5499 ;; Defined at:
  5500 ;;		line 72 in file "main.c"
  5501 ;; Parameters:    Size  Location     Type
  5502 ;;		None
  5503 ;; Auto vars:     Size  Location     Type
  5504 ;;		None
  5505 ;; Return value:  Size  Location     Type
  5506 ;;                  1    wreg      void 
  5507 ;; Registers used:
  5508 ;;		wreg
  5509 ;; Tracked objects:
  5510 ;;		On entry : 0/0
  5511 ;;		On exit  : 0/0
  5512 ;;		Unchanged: 0/0
  5513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5518 ;;Total ram usage:        0 bytes
  5519 ;; Hardware stack levels used:    1
  5520 ;; Hardware stack levels required when called:    4
  5521 ;; This function calls:
  5522 ;;		Nothing
  5523 ;; This function is called by:
  5524 ;;		_sendPWM
  5525 ;; This function uses a non-reentrant model
  5526 ;;
  5527                           
  5528                           
  5529                           ;psect for function _setHigh
  5530  1DC3                     _setHigh:	
  5531                           
  5532                           ;main.c: 74:     PWM5CON = 0x80;
  5533                           
  5534                           ;incstack = 0
  5535                           ; Regs used in _setHigh: [wreg]
  5536  1DC3  3080               	movlw	128
  5537  1DC4  002C               	movlb	12	; select bank12
  5538  1DC5  0099               	movwf	25	;volatile
  5539                           
  5540                           ;main.c: 75:     PR2 = 0x68;
  5541  1DC6  3068               	movlw	104
  5542  1DC7  0020               	movlb	0	; select bank0
  5543  1DC8  009E               	movwf	30	;volatile
  5544                           
  5545                           ;main.c: 76:     PWM5DCH = 0x34;
  5546  1DC9  3034               	movlw	52
  5547  1DCA  002C               	movlb	12	; select bank12
  5548  1DCB  0098               	movwf	24	;volatile
  5549  1DCC  0008               	return
  5550  1DCD                     __end_of_setHigh:	
  5551                           
  5552                           	psect	text5
  5553  08C8                     __ptext5:	
  5554 ;; *************** function _readPressureSensor *****************
  5555 ;; Defined at:
  5556 ;;		line 110 in file "main.c"
  5557 ;; Parameters:    Size  Location     Type
  5558 ;;		None
  5559 ;; Auto vars:     Size  Location     Type
  5560 ;;		None
  5561 ;; Return value:  Size  Location     Type
  5562 ;;                  1    wreg      void 
  5563 ;; Registers used:
  5564 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5565 ;; Tracked objects:
  5566 ;;		On entry : 0/0
  5567 ;;		On exit  : 0/0
  5568 ;;		Unchanged: 0/0
  5569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5572 ;;      Temps:          0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5573 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5574 ;;Total ram usage:        8 bytes
  5575 ;; Hardware stack levels used:    1
  5576 ;; Hardware stack levels required when called:   13
  5577 ;; This function calls:
  5578 ;;		_I2C1_Read1ByteRegister
  5579 ;;		___fldiv
  5580 ;;		___xxtofl
  5581 ;;		_printf
  5582 ;; This function is called by:
  5583 ;;		_main
  5584 ;; This function uses a non-reentrant model
  5585 ;;
  5586                           
  5587                           
  5588                           ;psect for function _readPressureSensor
  5589  08C8                     _readPressureSensor:	
  5590                           
  5591                           ;main.c: 113:     value = I2C1_Read1ByteRegister(0x5D, 0x2A);
  5592                           
  5593                           ;incstack = 0
  5594                           ; Regs used in _readPressureSensor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5595  08C8  302A               	movlw	42
  5596  08C9  0022               	movlb	2	; select bank2
  5597  08CA  00A0               	movwf	??_readPressureSensor^(0+256)
  5598  08CB  0820               	movf	??_readPressureSensor^(0+256),w
  5599  08CC  0020               	movlb	0	; select bank0
  5600  08CD  00A8               	movwf	I2C1_Read1ByteRegister@reg
  5601  08CE  305D               	movlw	93
  5602  08CF  3190  20F8  3188   	fcall	_I2C1_Read1ByteRegister
  5603  08D2  0022               	movlb	2	; select bank2
  5604  08D3  00A1               	movwf	(??_readPressureSensor+1)^(0+256)
  5605  08D4  0821               	movf	(??_readPressureSensor+1)^(0+256),w
  5606  08D5  0021               	movlb	1	; select bank1
  5607  08D6  00ED               	movwf	_value^(0+128)
  5608                           
  5609                           ;main.c: 114:     raw_pressure = value;
  5610  08D7  086D               	movf	_value^(0+128),w
  5611  08D8  0022               	movlb	2	; select bank2
  5612  08D9  00A0               	movwf	??_readPressureSensor^(0+256)
  5613  08DA  01A1               	clrf	(??_readPressureSensor^(0+256)+1)
  5614  08DB  01A2               	clrf	(??_readPressureSensor^(0+256)+2)
  5615  08DC  01A3               	clrf	(??_readPressureSensor^(0+256)+3)
  5616  08DD  0823               	movf	(??_readPressureSensor+3)^(0+256),w
  5617  08DE  00E7               	movwf	(_raw_pressure+3)^(0+256)
  5618  08DF  0822               	movf	(??_readPressureSensor+2)^(0+256),w
  5619  08E0  00E6               	movwf	(_raw_pressure+2)^(0+256)
  5620  08E1  0821               	movf	(??_readPressureSensor+1)^(0+256),w
  5621  08E2  00E5               	movwf	(_raw_pressure+1)^(0+256)
  5622  08E3  0820               	movf	??_readPressureSensor^(0+256),w
  5623  08E4  00E4               	movwf	_raw_pressure^(0+256)
  5624                           
  5625                           ;main.c: 117:     packet[0] = value;
  5626  08E5  0021               	movlb	1	; select bank1
  5627  08E6  086D               	movf	_value^(0+128),w
  5628  08E7  0022               	movlb	2	; select bank2
  5629  08E8  00A0               	movwf	??_readPressureSensor^(0+256)
  5630  08E9  0820               	movf	??_readPressureSensor^(0+256),w
  5631  08EA  0023               	movlb	3	; select bank3
  5632  08EB  00D5               	movwf	_packet^(0+384)
  5633                           
  5634                           ;main.c: 120:     value = (I2C1_Read1ByteRegister(0x5D, 0x29));
  5635  08EC  3029               	movlw	41
  5636  08ED  0022               	movlb	2	; select bank2
  5637  08EE  00A0               	movwf	??_readPressureSensor^(0+256)
  5638  08EF  0820               	movf	??_readPressureSensor^(0+256),w
  5639  08F0  0020               	movlb	0	; select bank0
  5640  08F1  00A8               	movwf	I2C1_Read1ByteRegister@reg
  5641  08F2  305D               	movlw	93
  5642  08F3  3190  20F8  3188   	fcall	_I2C1_Read1ByteRegister
  5643  08F6  0022               	movlb	2	; select bank2
  5644  08F7  00A1               	movwf	(??_readPressureSensor+1)^(0+256)
  5645  08F8  0821               	movf	(??_readPressureSensor+1)^(0+256),w
  5646  08F9  0021               	movlb	1	; select bank1
  5647  08FA  00ED               	movwf	_value^(0+128)
  5648                           
  5649                           ;main.c: 121:     raw_pressure = (raw_pressure << 8) | value;
  5650  08FB  086D               	movf	_value^(0+128),w
  5651  08FC  0022               	movlb	2	; select bank2
  5652  08FD  00A0               	movwf	??_readPressureSensor^(0+256)
  5653  08FE  01A1               	clrf	(??_readPressureSensor^(0+256)+1)
  5654  08FF  01A2               	clrf	(??_readPressureSensor^(0+256)+2)
  5655  0900  01A3               	clrf	(??_readPressureSensor^(0+256)+3)
  5656  0901  0864               	movf	_raw_pressure^(0+256),w
  5657  0902  00A4               	movwf	(??_readPressureSensor+4)^(0+256)
  5658  0903  0865               	movf	(_raw_pressure+1)^(0+256),w
  5659  0904  00A5               	movwf	((??_readPressureSensor+4)^(0+256)+1)
  5660  0905  0866               	movf	(_raw_pressure+2)^(0+256),w
  5661  0906  00A6               	movwf	((??_readPressureSensor+4)^(0+256)+2)
  5662  0907  0867               	movf	(_raw_pressure+3)^(0+256),w
  5663  0908  00A7               	movwf	((??_readPressureSensor+4)^(0+256)+3)
  5664  0909  3008               	movlw	8
  5665  090A                     u7475:	
  5666  090A  35A4               	lslf	(??_readPressureSensor+4)^(0+256),f
  5667  090B  0DA5               	rlf	((??_readPressureSensor+4)^(0+256)+1),f
  5668  090C  0DA6               	rlf	((??_readPressureSensor+4)^(0+256)+2),f
  5669  090D  0DA7               	rlf	((??_readPressureSensor+4)^(0+256)+3),f
  5670  090E  0B89               	decfsz	9,f
  5671  090F  290A               	goto	u7475
  5672  0910  0824               	movf	(??_readPressureSensor+4)^(0+256),w
  5673  0911  04A0               	iorwf	??_readPressureSensor^(0+256),f
  5674  0912  0825               	movf	(??_readPressureSensor+5)^(0+256),w
  5675  0913  04A1               	iorwf	(??_readPressureSensor^(0+256)+1),f
  5676  0914  0826               	movf	(??_readPressureSensor+6)^(0+256),w
  5677  0915  04A2               	iorwf	(??_readPressureSensor^(0+256)+2),f
  5678  0916  0827               	movf	(??_readPressureSensor+7)^(0+256),w
  5679  0917  04A3               	iorwf	(??_readPressureSensor^(0+256)+3),f
  5680  0918  0823               	movf	(??_readPressureSensor+3)^(0+256),w
  5681  0919  00E7               	movwf	(_raw_pressure+3)^(0+256)
  5682  091A  0822               	movf	(??_readPressureSensor+2)^(0+256),w
  5683  091B  00E6               	movwf	(_raw_pressure+2)^(0+256)
  5684  091C  0821               	movf	(??_readPressureSensor+1)^(0+256),w
  5685  091D  00E5               	movwf	(_raw_pressure+1)^(0+256)
  5686  091E  0820               	movf	??_readPressureSensor^(0+256),w
  5687  091F  00E4               	movwf	_raw_pressure^(0+256)
  5688                           
  5689                           ;main.c: 124:     packet[1] = value;
  5690  0920  0021               	movlb	1	; select bank1
  5691  0921  086D               	movf	_value^(0+128),w
  5692  0922  0022               	movlb	2	; select bank2
  5693  0923  00A0               	movwf	??_readPressureSensor^(0+256)
  5694  0924  0820               	movf	??_readPressureSensor^(0+256),w
  5695  0925  0023               	movlb	3	; select bank3
  5696  0926  00D6               	movwf	(_packet^(0+384)+1)
  5697                           
  5698                           ;main.c: 127:     value = (I2C1_Read1ByteRegister(0x5D, 0x28));
  5699  0927  3028               	movlw	40
  5700  0928  0022               	movlb	2	; select bank2
  5701  0929  00A0               	movwf	??_readPressureSensor^(0+256)
  5702  092A  0820               	movf	??_readPressureSensor^(0+256),w
  5703  092B  0020               	movlb	0	; select bank0
  5704  092C  00A8               	movwf	I2C1_Read1ByteRegister@reg
  5705  092D  305D               	movlw	93
  5706  092E  3190  20F8  3188   	fcall	_I2C1_Read1ByteRegister
  5707  0931  0022               	movlb	2	; select bank2
  5708  0932  00A1               	movwf	(??_readPressureSensor+1)^(0+256)
  5709  0933  0821               	movf	(??_readPressureSensor+1)^(0+256),w
  5710  0934  0021               	movlb	1	; select bank1
  5711  0935  00ED               	movwf	_value^(0+128)
  5712                           
  5713                           ;main.c: 128:     raw_pressure = (raw_pressure << 8) | value;
  5714  0936  086D               	movf	_value^(0+128),w
  5715  0937  0022               	movlb	2	; select bank2
  5716  0938  00A0               	movwf	??_readPressureSensor^(0+256)
  5717  0939  01A1               	clrf	(??_readPressureSensor^(0+256)+1)
  5718  093A  01A2               	clrf	(??_readPressureSensor^(0+256)+2)
  5719  093B  01A3               	clrf	(??_readPressureSensor^(0+256)+3)
  5720  093C  0864               	movf	_raw_pressure^(0+256),w
  5721  093D  00A4               	movwf	(??_readPressureSensor+4)^(0+256)
  5722  093E  0865               	movf	(_raw_pressure+1)^(0+256),w
  5723  093F  00A5               	movwf	((??_readPressureSensor+4)^(0+256)+1)
  5724  0940  0866               	movf	(_raw_pressure+2)^(0+256),w
  5725  0941  00A6               	movwf	((??_readPressureSensor+4)^(0+256)+2)
  5726  0942  0867               	movf	(_raw_pressure+3)^(0+256),w
  5727  0943  00A7               	movwf	((??_readPressureSensor+4)^(0+256)+3)
  5728  0944  3008               	movlw	8
  5729  0945                     u7485:	
  5730  0945  35A4               	lslf	(??_readPressureSensor+4)^(0+256),f
  5731  0946  0DA5               	rlf	((??_readPressureSensor+4)^(0+256)+1),f
  5732  0947  0DA6               	rlf	((??_readPressureSensor+4)^(0+256)+2),f
  5733  0948  0DA7               	rlf	((??_readPressureSensor+4)^(0+256)+3),f
  5734  0949  0B89               	decfsz	9,f
  5735  094A  2945               	goto	u7485
  5736  094B  0824               	movf	(??_readPressureSensor+4)^(0+256),w
  5737  094C  04A0               	iorwf	??_readPressureSensor^(0+256),f
  5738  094D  0825               	movf	(??_readPressureSensor+5)^(0+256),w
  5739  094E  04A1               	iorwf	(??_readPressureSensor^(0+256)+1),f
  5740  094F  0826               	movf	(??_readPressureSensor+6)^(0+256),w
  5741  0950  04A2               	iorwf	(??_readPressureSensor^(0+256)+2),f
  5742  0951  0827               	movf	(??_readPressureSensor+7)^(0+256),w
  5743  0952  04A3               	iorwf	(??_readPressureSensor^(0+256)+3),f
  5744  0953  0823               	movf	(??_readPressureSensor+3)^(0+256),w
  5745  0954  00E7               	movwf	(_raw_pressure+3)^(0+256)
  5746  0955  0822               	movf	(??_readPressureSensor+2)^(0+256),w
  5747  0956  00E6               	movwf	(_raw_pressure+2)^(0+256)
  5748  0957  0821               	movf	(??_readPressureSensor+1)^(0+256),w
  5749  0958  00E5               	movwf	(_raw_pressure+1)^(0+256)
  5750  0959  0820               	movf	??_readPressureSensor^(0+256),w
  5751  095A  00E4               	movwf	_raw_pressure^(0+256)
  5752                           
  5753                           ;main.c: 131:     packet[2] = value;
  5754  095B  0021               	movlb	1	; select bank1
  5755  095C  086D               	movf	_value^(0+128),w
  5756  095D  0022               	movlb	2	; select bank2
  5757  095E  00A0               	movwf	??_readPressureSensor^(0+256)
  5758  095F  0820               	movf	??_readPressureSensor^(0+256),w
  5759  0960  0023               	movlb	3	; select bank3
  5760  0961  00D7               	movwf	(_packet^(0+384)+2)
  5761                           
  5762                           ;main.c: 134:     if (raw_pressure & 0x800000) {
  5763  0962  0022               	movlb	2	; select bank2
  5764  0963  1FE6               	btfss	(_raw_pressure+2)^(0+256),7
  5765  0964  2979               	goto	l6920
  5766                           
  5767                           ;main.c: 135:         raw_pressure = (0xff000000 | raw_pressure);
  5768  0965  3000               	movlw	0
  5769  0966  0464               	iorwf	_raw_pressure^(0+256),w
  5770  0967  00A0               	movwf	??_readPressureSensor^(0+256)
  5771  0968  3000               	movlw	0
  5772  0969  0465               	iorwf	(_raw_pressure+1)^(0+256),w
  5773  096A  00A1               	movwf	(??_readPressureSensor^(0+256)+1)
  5774  096B  3000               	movlw	0
  5775  096C  0466               	iorwf	(_raw_pressure+2)^(0+256),w
  5776  096D  00A2               	movwf	(??_readPressureSensor^(0+256)+2)
  5777  096E  30FF               	movlw	255
  5778  096F  0467               	iorwf	(_raw_pressure+3)^(0+256),w
  5779  0970  00A3               	movwf	(??_readPressureSensor^(0+256)+3)
  5780  0971  0823               	movf	(??_readPressureSensor+3)^(0+256),w
  5781  0972  00E7               	movwf	(_raw_pressure+3)^(0+256)
  5782  0973  0822               	movf	(??_readPressureSensor+2)^(0+256),w
  5783  0974  00E6               	movwf	(_raw_pressure+2)^(0+256)
  5784  0975  0821               	movf	(??_readPressureSensor+1)^(0+256),w
  5785  0976  00E5               	movwf	(_raw_pressure+1)^(0+256)
  5786  0977  0820               	movf	??_readPressureSensor^(0+256),w
  5787  0978  00E4               	movwf	_raw_pressure^(0+256)
  5788  0979                     l6920:	
  5789                           
  5790                           ;main.c: 137:     pressure = (float) (raw_pressure) / 4096.0;
  5791  0979  3045               	movlw	69
  5792  097A  0020               	movlb	0	; select bank0
  5793  097B  00A9               	movwf	___fldiv@a+3
  5794  097C  3080               	movlw	128
  5795  097D  00A8               	movwf	___fldiv@a+2
  5796  097E  3000               	movlw	0
  5797  097F  00A7               	movwf	___fldiv@a+1
  5798  0980  3000               	movlw	0
  5799  0981  00A6               	movwf	___fldiv@a
  5800  0982  0022               	movlb	2	; select bank2
  5801  0983  0867               	movf	(_raw_pressure+3)^(0+256),w
  5802  0984  00F4               	movwf	___xxtofl@val+3
  5803  0985  0866               	movf	(_raw_pressure+2)^(0+256),w
  5804  0986  00F3               	movwf	___xxtofl@val+2
  5805  0987  0865               	movf	(_raw_pressure+1)^(0+256),w
  5806  0988  00F2               	movwf	___xxtofl@val+1
  5807  0989  0864               	movf	_raw_pressure^(0+256),w
  5808  098A  00F1               	movwf	___xxtofl@val
  5809  098B  3000               	movlw	0
  5810  098C  3195  25F0  3188   	fcall	___xxtofl
  5811  098F  0874               	movf	?___xxtofl+3,w
  5812  0990  0020               	movlb	0	; select bank0
  5813  0991  00AD               	movwf	___fldiv@b+3
  5814  0992  0873               	movf	?___xxtofl+2,w
  5815  0993  00AC               	movwf	___fldiv@b+2
  5816  0994  0872               	movf	?___xxtofl+1,w
  5817  0995  00AB               	movwf	___fldiv@b+1
  5818  0996  0871               	movf	?___xxtofl,w
  5819  0997  00AA               	movwf	___fldiv@b
  5820  0998  3196  2686  3188   	fcall	___fldiv
  5821  099B  0020               	movlb	0	; select bank0
  5822  099C  0829               	movf	?___fldiv+3,w
  5823  099D  0022               	movlb	2	; select bank2
  5824  099E  00D6               	movwf	(_pressure+3)^(0+256)
  5825  099F  0020               	movlb	0	; select bank0
  5826  09A0  0828               	movf	?___fldiv+2,w
  5827  09A1  0022               	movlb	2	; select bank2
  5828  09A2  00D5               	movwf	(_pressure+2)^(0+256)
  5829  09A3  0020               	movlb	0	; select bank0
  5830  09A4  0827               	movf	?___fldiv+1,w
  5831  09A5  0022               	movlb	2	; select bank2
  5832  09A6  00D4               	movwf	(_pressure+1)^(0+256)
  5833  09A7  0020               	movlb	0	; select bank0
  5834  09A8  0826               	movf	?___fldiv,w
  5835  09A9  0022               	movlb	2	; select bank2
  5836  09AA  00D3               	movwf	_pressure^(0+256)
  5837                           
  5838                           ;main.c: 138:     _delay((unsigned long)((50)*(16000000/4000.0)));
  5839  09AB  3002               	movlw	2
  5840  09AC  0022               	movlb	2	; select bank2
  5841  09AD  00A1               	movwf	(??_readPressureSensor^(0+256)+1)
  5842  09AE  3004               	movlw	4
  5843  09AF  00A0               	movwf	??_readPressureSensor^(0+256)
  5844  09B0  30BA               	movlw	186
  5845  09B1                     u7597:	
  5846  09B1  0B89               	decfsz	9,f
  5847  09B2  29B1               	goto	u7597
  5848  09B3  0BA0               	decfsz	??_readPressureSensor^(0+256),f
  5849  09B4  29B1               	goto	u7597
  5850  09B5  0BA1               	decfsz	(??_readPressureSensor^(0+256)+1),f
  5851  09B6  29B1               	goto	u7597
  5852  09B7  0000               	nop
  5853                           
  5854                           ;main.c: 141:     value = I2C1_Read1ByteRegister(0x5D, 0x2C);
  5855  09B8  302C               	movlw	44
  5856  09B9  0022               	movlb	2	; select bank2
  5857  09BA  00A0               	movwf	??_readPressureSensor^(0+256)
  5858  09BB  0820               	movf	??_readPressureSensor^(0+256),w
  5859  09BC  0020               	movlb	0	; select bank0
  5860  09BD  00A8               	movwf	I2C1_Read1ByteRegister@reg
  5861  09BE  305D               	movlw	93
  5862  09BF  3190  20F8  3188   	fcall	_I2C1_Read1ByteRegister
  5863  09C2  0022               	movlb	2	; select bank2
  5864  09C3  00A1               	movwf	(??_readPressureSensor+1)^(0+256)
  5865  09C4  0821               	movf	(??_readPressureSensor+1)^(0+256),w
  5866  09C5  0021               	movlb	1	; select bank1
  5867  09C6  00ED               	movwf	_value^(0+128)
  5868                           
  5869                           ;main.c: 142:     raw_temperature = value;
  5870  09C7  086D               	movf	_value^(0+128),w
  5871  09C8  0022               	movlb	2	; select bank2
  5872  09C9  00A0               	movwf	??_readPressureSensor^(0+256)
  5873  09CA  01A1               	clrf	(??_readPressureSensor^(0+256)+1)
  5874  09CB  0820               	movf	??_readPressureSensor^(0+256),w
  5875  09CC  00DF               	movwf	_raw_temperature^(0+256)
  5876  09CD  0821               	movf	(??_readPressureSensor+1)^(0+256),w
  5877  09CE  00E0               	movwf	(_raw_temperature+1)^(0+256)
  5878                           
  5879                           ;main.c: 145:     packet[3] = value;
  5880  09CF  0021               	movlb	1	; select bank1
  5881  09D0  086D               	movf	_value^(0+128),w
  5882  09D1  0022               	movlb	2	; select bank2
  5883  09D2  00A0               	movwf	??_readPressureSensor^(0+256)
  5884  09D3  0820               	movf	??_readPressureSensor^(0+256),w
  5885  09D4  0023               	movlb	3	; select bank3
  5886  09D5  00D8               	movwf	(_packet^(0+384)+3)
  5887                           
  5888                           ;main.c: 148:     value = (I2C1_Read1ByteRegister(0x5D, 0x2B));
  5889  09D6  302B               	movlw	43
  5890  09D7  0022               	movlb	2	; select bank2
  5891  09D8  00A0               	movwf	??_readPressureSensor^(0+256)
  5892  09D9  0820               	movf	??_readPressureSensor^(0+256),w
  5893  09DA  0020               	movlb	0	; select bank0
  5894  09DB  00A8               	movwf	I2C1_Read1ByteRegister@reg
  5895  09DC  305D               	movlw	93
  5896  09DD  3190  20F8  3188   	fcall	_I2C1_Read1ByteRegister
  5897  09E0  0022               	movlb	2	; select bank2
  5898  09E1  00A1               	movwf	(??_readPressureSensor+1)^(0+256)
  5899  09E2  0821               	movf	(??_readPressureSensor+1)^(0+256),w
  5900  09E3  0021               	movlb	1	; select bank1
  5901  09E4  00ED               	movwf	_value^(0+128)
  5902                           
  5903                           ;main.c: 149:     raw_temperature = (raw_temperature << 8) | value;
  5904  09E5  086D               	movf	_value^(0+128),w
  5905  09E6  0022               	movlb	2	; select bank2
  5906  09E7  00A0               	movwf	??_readPressureSensor^(0+256)
  5907  09E8  01A1               	clrf	(??_readPressureSensor^(0+256)+1)
  5908  09E9  085F               	movf	_raw_temperature^(0+256),w
  5909  09EA  00A3               	movwf	((??_readPressureSensor+2)^(0+256)+1)
  5910  09EB  01A2               	clrf	(??_readPressureSensor+2)^(0+256)
  5911  09EC  0820               	movf	??_readPressureSensor^(0+256),w
  5912  09ED  0422               	iorwf	(??_readPressureSensor+2)^(0+256),w
  5913  09EE  00DF               	movwf	_raw_temperature^(0+256)
  5914  09EF  0821               	movf	(??_readPressureSensor+1)^(0+256),w
  5915  09F0  0423               	iorwf	(??_readPressureSensor+3)^(0+256),w
  5916  09F1  00E0               	movwf	(_raw_temperature+1)^(0+256)
  5917                           
  5918                           ;main.c: 152:     packet[4] = value;
  5919  09F2  0021               	movlb	1	; select bank1
  5920  09F3  086D               	movf	_value^(0+128),w
  5921  09F4  0022               	movlb	2	; select bank2
  5922  09F5  00A0               	movwf	??_readPressureSensor^(0+256)
  5923  09F6  0820               	movf	??_readPressureSensor^(0+256),w
  5924  09F7  0023               	movlb	3	; select bank3
  5925  09F8  00D9               	movwf	(_packet^(0+384)+4)
  5926                           
  5927                           ;main.c: 155:     temperature = (float) (raw_temperature) / 100.00;
  5928  09F9  3042               	movlw	66
  5929  09FA  0020               	movlb	0	; select bank0
  5930  09FB  00A9               	movwf	___fldiv@a+3
  5931  09FC  30C8               	movlw	200
  5932  09FD  00A8               	movwf	___fldiv@a+2
  5933  09FE  3000               	movlw	0
  5934  09FF  00A7               	movwf	___fldiv@a+1
  5935  0A00  3000               	movlw	0
  5936  0A01  00A6               	movwf	___fldiv@a
  5937  0A02  0022               	movlb	2	; select bank2
  5938  0A03  085F               	movf	_raw_temperature^(0+256),w
  5939  0A04  00F1               	movwf	___xxtofl@val
  5940  0A05  0860               	movf	(_raw_temperature+1)^(0+256),w
  5941  0A06  00F2               	movwf	___xxtofl@val+1
  5942  0A07  01F3               	clrf	___xxtofl@val+2
  5943  0A08  01F4               	clrf	___xxtofl@val+3
  5944  0A09  3000               	movlw	0
  5945  0A0A  3195  25F0  3188   	fcall	___xxtofl
  5946  0A0D  0874               	movf	?___xxtofl+3,w
  5947  0A0E  0020               	movlb	0	; select bank0
  5948  0A0F  00AD               	movwf	___fldiv@b+3
  5949  0A10  0873               	movf	?___xxtofl+2,w
  5950  0A11  00AC               	movwf	___fldiv@b+2
  5951  0A12  0872               	movf	?___xxtofl+1,w
  5952  0A13  00AB               	movwf	___fldiv@b+1
  5953  0A14  0871               	movf	?___xxtofl,w
  5954  0A15  00AA               	movwf	___fldiv@b
  5955  0A16  3196  2686  3188   	fcall	___fldiv
  5956  0A19  0020               	movlb	0	; select bank0
  5957  0A1A  0829               	movf	?___fldiv+3,w
  5958  0A1B  0022               	movlb	2	; select bank2
  5959  0A1C  00D2               	movwf	(_temperature+3)^(0+256)
  5960  0A1D  0020               	movlb	0	; select bank0
  5961  0A1E  0828               	movf	?___fldiv+2,w
  5962  0A1F  0022               	movlb	2	; select bank2
  5963  0A20  00D1               	movwf	(_temperature+2)^(0+256)
  5964  0A21  0020               	movlb	0	; select bank0
  5965  0A22  0827               	movf	?___fldiv+1,w
  5966  0A23  0022               	movlb	2	; select bank2
  5967  0A24  00D0               	movwf	(_temperature+1)^(0+256)
  5968  0A25  0020               	movlb	0	; select bank0
  5969  0A26  0826               	movf	?___fldiv,w
  5970  0A27  0022               	movlb	2	; select bank2
  5971  0A28  00CF               	movwf	_temperature^(0+256)
  5972                           
  5973                           ;main.c: 158:     printf("Pressure : %f\n", pressure);
  5974  0A29  3032               	movlw	low (STR_1| (0+32768))
  5975  0A2A  0021               	movlb	1	; select bank1
  5976  0A2B  00E1               	movwf	printf@fmt^(0+128)
  5977  0A2C  30A0               	movlw	high (STR_1| (0+32768))
  5978  0A2D  00E2               	movwf	(printf@fmt^(0+128)+1)
  5979  0A2E  0022               	movlb	2	; select bank2
  5980  0A2F  0856               	movf	(_pressure+3)^(0+256),w
  5981  0A30  0021               	movlb	1	; select bank1
  5982  0A31  00E6               	movwf	((?_printf+3)^(0+128)+2)
  5983  0A32  0022               	movlb	2	; select bank2
  5984  0A33  0855               	movf	(_pressure+2)^(0+256),w
  5985  0A34  0021               	movlb	1	; select bank1
  5986  0A35  00E5               	movwf	((?_printf+2)^(0+128)+2)
  5987  0A36  0022               	movlb	2	; select bank2
  5988  0A37  0854               	movf	(_pressure+1)^(0+256),w
  5989  0A38  0021               	movlb	1	; select bank1
  5990  0A39  00E4               	movwf	((?_printf+1)^(0+128)+2)
  5991  0A3A  0022               	movlb	2	; select bank2
  5992  0A3B  0853               	movf	_pressure^(0+256),w
  5993  0A3C  0021               	movlb	1	; select bank1
  5994  0A3D  00E3               	movwf	(?_printf^(0+128)+2)
  5995  0A3E  3188  2005  3188   	fcall	_printf
  5996                           
  5997                           ;main.c: 159:     printf("Temperature : %f\n", temperature);
  5998  0A41  3020               	movlw	low (STR_2| (0+32768))
  5999  0A42  0021               	movlb	1	; select bank1
  6000  0A43  00E1               	movwf	printf@fmt^(0+128)
  6001  0A44  30A0               	movlw	high (STR_2| (0+32768))
  6002  0A45  00E2               	movwf	(printf@fmt^(0+128)+1)
  6003  0A46  0022               	movlb	2	; select bank2
  6004  0A47  0852               	movf	(_temperature+3)^(0+256),w
  6005  0A48  0021               	movlb	1	; select bank1
  6006  0A49  00E6               	movwf	((?_printf+3)^(0+128)+2)
  6007  0A4A  0022               	movlb	2	; select bank2
  6008  0A4B  0851               	movf	(_temperature+2)^(0+256),w
  6009  0A4C  0021               	movlb	1	; select bank1
  6010  0A4D  00E5               	movwf	((?_printf+2)^(0+128)+2)
  6011  0A4E  0022               	movlb	2	; select bank2
  6012  0A4F  0850               	movf	(_temperature+1)^(0+256),w
  6013  0A50  0021               	movlb	1	; select bank1
  6014  0A51  00E4               	movwf	((?_printf+1)^(0+128)+2)
  6015  0A52  0022               	movlb	2	; select bank2
  6016  0A53  084F               	movf	_temperature^(0+256),w
  6017  0A54  0021               	movlb	1	; select bank1
  6018  0A55  00E3               	movwf	(?_printf^(0+128)+2)
  6019  0A56  3188  2005         	fcall	_printf
  6020  0A58  0008               	return
  6021  0A59                     __end_of_readPressureSensor:	
  6022                           
  6023                           	psect	text6
  6024  0805                     __ptext6:	
  6025 ;; *************** function _printf *****************
  6026 ;; Defined at:
  6027 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  6028 ;; Parameters:    Size  Location     Type
  6029 ;;  fmt             2   65[BANK1 ] PTR const unsigned char 
  6030 ;;		 -> STR_2(18), STR_1(15), 
  6031 ;; Auto vars:     Size  Location     Type
  6032 ;;  ret             2    0        int 
  6033 ;;  ap              1   74[BANK1 ] PTR void [1]
  6034 ;;		 -> ?_printf(2), 
  6035 ;; Return value:  Size  Location     Type
  6036 ;;                  2   65[BANK1 ] int 
  6037 ;; Registers used:
  6038 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6039 ;; Tracked objects:
  6040 ;;		On entry : 0/0
  6041 ;;		On exit  : 0/0
  6042 ;;		Unchanged: 0/0
  6043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6044 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6045 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6046 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6047 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6048 ;;Total ram usage:       10 bytes
  6049 ;; Hardware stack levels used:    1
  6050 ;; Hardware stack levels required when called:   12
  6051 ;; This function calls:
  6052 ;;		_vfprintf
  6053 ;; This function is called by:
  6054 ;;		_readPressureSensor
  6055 ;; This function uses a non-reentrant model
  6056 ;;
  6057                           
  6058                           
  6059                           ;psect for function _printf
  6060  0805                     _printf:	
  6061                           
  6062                           ;incstack = 0
  6063                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6064  0805  30E3               	movlw	(low ((?_printf| 0+2)))& (0+255)
  6065  0806  0021               	movlb	1	; select bank1
  6066  0807  00E7               	movwf	??_printf^(0+128)
  6067  0808  0867               	movf	??_printf^(0+128),w
  6068  0809  00EA               	movwf	printf@ap^(0+128)
  6069  080A  0862               	movf	(printf@fmt+1)^(0+128),w
  6070  080B  00DA               	movwf	(vfprintf@fmt+1)^(0+128)
  6071  080C  0861               	movf	printf@fmt^(0+128),w
  6072  080D  00D9               	movwf	vfprintf@fmt^(0+128)
  6073  080E  30EA               	movlw	(low (printf@ap| 0))& (0+255)
  6074  080F  00E7               	movwf	??_printf^(0+128)
  6075  0810  0867               	movf	??_printf^(0+128),w
  6076  0811  00DB               	movwf	vfprintf@ap^(0+128)
  6077  0812  3000               	movlw	0
  6078  0813  3191  212A         	fcall	_vfprintf
  6079  0815  0008               	return
  6080  0816                     __end_of_printf:	
  6081                           
  6082                           	psect	text7
  6083  112A                     __ptext7:	
  6084 ;; *************** function _vfprintf *****************
  6085 ;; Defined at:
  6086 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6087 ;; Parameters:    Size  Location     Type
  6088 ;;  fp              1    wreg     PTR struct _IO_FILE
  6089 ;;		 -> NULL(0), 
  6090 ;;  fmt             2   57[BANK1 ] PTR const unsigned char 
  6091 ;;		 -> STR_2(18), STR_1(15), 
  6092 ;;  ap              1   59[BANK1 ] PTR PTR void 
  6093 ;;		 -> printf@ap(1), 
  6094 ;; Auto vars:     Size  Location     Type
  6095 ;;  fp              1   62[BANK1 ] PTR struct _IO_FILE
  6096 ;;		 -> NULL(0), 
  6097 ;;  cfmt            2   63[BANK1 ] PTR unsigned char 
  6098 ;;		 -> STR_2(18), STR_1(15), 
  6099 ;; Return value:  Size  Location     Type
  6100 ;;                  2   57[BANK1 ] int 
  6101 ;; Registers used:
  6102 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6103 ;; Tracked objects:
  6104 ;;		On entry : 0/0
  6105 ;;		On exit  : 0/0
  6106 ;;		Unchanged: 0/0
  6107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6108 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6109 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6110 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6111 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6112 ;;Total ram usage:        8 bytes
  6113 ;; Hardware stack levels used:    1
  6114 ;; Hardware stack levels required when called:   11
  6115 ;; This function calls:
  6116 ;;		_vfpfcnvrt
  6117 ;; This function is called by:
  6118 ;;		_printf
  6119 ;; This function uses a non-reentrant model
  6120 ;;
  6121                           
  6122                           
  6123                           ;psect for function _vfprintf
  6124  112A                     _vfprintf:	
  6125                           
  6126                           ;incstack = 0
  6127                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6128                           ;vfprintf@fp stored from wreg
  6129  112A  0021               	movlb	1	; select bank1
  6130  112B  00DE               	movwf	vfprintf@fp^(0+128)
  6131                           
  6132                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6133  112C  085A               	movf	(vfprintf@fmt+1)^(0+128),w
  6134  112D  00E0               	movwf	(vfprintf@cfmt+1)^(0+128)
  6135  112E  0859               	movf	vfprintf@fmt^(0+128),w
  6136  112F  00DF               	movwf	vfprintf@cfmt^(0+128)
  6137                           
  6138                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  6139  1130  0022               	movlb	2	; select bank2
  6140  1131  01D7               	clrf	_nout^(0+256)
  6141  1132  01D8               	clrf	(_nout+1)^(0+256)
  6142  1133                     l6858:	
  6143                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6144                           
  6145                           
  6146                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6147  1133  0021               	movlb	1	; select bank1
  6148  1134  085F               	movf	vfprintf@cfmt^(0+128),w
  6149  1135  0084               	movwf	4
  6150  1136  0860               	movf	(vfprintf@cfmt+1)^(0+128),w
  6151  1137  0085               	movwf	5
  6152  1138  0012               	moviw fsr0++
  6153  1139  1903               	btfsc	3,2
  6154  113A  2954               	goto	l6860
  6155                           
  6156                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  6157  113B  30DF               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  6158  113C  00DC               	movwf	??_vfprintf^(0+128)
  6159  113D  085C               	movf	??_vfprintf^(0+128),w
  6160  113E  0020               	movlb	0	; select bank0
  6161  113F  00DD               	movwf	vfpfcnvrt@fmt
  6162  1140  0021               	movlb	1	; select bank1
  6163  1141  085B               	movf	vfprintf@ap^(0+128),w
  6164  1142  00DD               	movwf	(??_vfprintf+1)^(0+128)
  6165  1143  085D               	movf	(??_vfprintf+1)^(0+128),w
  6166  1144  0020               	movlb	0	; select bank0
  6167  1145  00DE               	movwf	vfpfcnvrt@ap
  6168  1146  0021               	movlb	1	; select bank1
  6169  1147  085E               	movf	vfprintf@fp^(0+128),w
  6170  1148  318A  2259  3191   	fcall	_vfpfcnvrt
  6171  114B  0020               	movlb	0	; select bank0
  6172  114C  085D               	movf	?_vfpfcnvrt,w
  6173  114D  0022               	movlb	2	; select bank2
  6174  114E  07D7               	addwf	_nout^(0+256),f
  6175  114F  0020               	movlb	0	; select bank0
  6176  1150  085E               	movf	?_vfpfcnvrt+1,w
  6177  1151  0022               	movlb	2	; select bank2
  6178  1152  3DD8               	addwfc	(_nout+1)^(0+256),f
  6179  1153  2933               	goto	l6858
  6180  1154                     l6860:	
  6181                           
  6182                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  6183  1154  0022               	movlb	2	; select bank2
  6184  1155  0858               	movf	(_nout+1)^(0+256),w
  6185  1156  0021               	movlb	1	; select bank1
  6186  1157  00DA               	movwf	(?_vfprintf+1)^(0+128)
  6187  1158  0022               	movlb	2	; select bank2
  6188  1159  0857               	movf	_nout^(0+256),w
  6189  115A  0021               	movlb	1	; select bank1
  6190  115B  00D9               	movwf	?_vfprintf^(0+128)
  6191  115C  0008               	return
  6192  115D                     __end_of_vfprintf:	
  6193                           
  6194                           	psect	text8
  6195  0A59                     __ptext8:	
  6196 ;; *************** function _vfpfcnvrt *****************
  6197 ;; Defined at:
  6198 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6199 ;; Parameters:    Size  Location     Type
  6200 ;;  fp              1    wreg     PTR struct _IO_FILE
  6201 ;;		 -> NULL(0), 
  6202 ;;  fmt             1   61[BANK0 ] PTR PTR unsigned char 
  6203 ;;		 -> vfprintf@cfmt(2), 
  6204 ;;  ap              1   62[BANK0 ] PTR PTR void 
  6205 ;;		 -> printf@ap(1), 
  6206 ;; Auto vars:     Size  Location     Type
  6207 ;;  fp              1   79[BANK0 ] PTR struct _IO_FILE
  6208 ;;		 -> NULL(0), 
  6209 ;;  llu             8    0        unsigned long long 
  6210 ;;  ll              8    0        long long 
  6211 ;;  f               4   74[BANK0 ] long long 
  6212 ;;  ct              3   71[BANK0 ] unsigned char [3]
  6213 ;;  vp              2    0        PTR void 
  6214 ;;  i               2    0        int 
  6215 ;;  done            2    0        int 
  6216 ;;  cp              2    0        PTR unsigned char 
  6217 ;;  c               1   78[BANK0 ] unsigned char 
  6218 ;; Return value:  Size  Location     Type
  6219 ;;                  2   61[BANK0 ] int 
  6220 ;; Registers used:
  6221 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6222 ;; Tracked objects:
  6223 ;;		On entry : 0/0
  6224 ;;		On exit  : 0/0
  6225 ;;		Unchanged: 0/0
  6226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6227 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6228 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6229 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6230 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6231 ;;Total ram usage:       19 bytes
  6232 ;; Hardware stack levels used:    1
  6233 ;; Hardware stack levels required when called:   10
  6234 ;; This function calls:
  6235 ;;		_efgtoa
  6236 ;;		_fputc
  6237 ;;		_isupper
  6238 ;;		_strncmp
  6239 ;;		_tolower
  6240 ;; This function is called by:
  6241 ;;		_vfprintf
  6242 ;; This function uses a non-reentrant model
  6243 ;;
  6244                           
  6245                           
  6246                           ;psect for function _vfpfcnvrt
  6247  0A59                     _vfpfcnvrt:	
  6248                           
  6249                           ;incstack = 0
  6250                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6251                           ;vfpfcnvrt@fp stored from wreg
  6252  0A59  0020               	movlb	0	; select bank0
  6253  0A5A  00EF               	movwf	vfpfcnvrt@fp
  6254                           
  6255                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  6256  0A5B  085D               	movf	vfpfcnvrt@fmt,w
  6257  0A5C  0086               	movwf	6
  6258  0A5D  0187               	clrf	7
  6259  0A5E  3F40               	moviw [0]fsr1
  6260  0A5F  00DF               	movwf	??_vfpfcnvrt
  6261  0A60  3F41               	moviw [1]fsr1
  6262  0A61  00E0               	movwf	??_vfpfcnvrt+1
  6263  0A62  085F               	movf	??_vfpfcnvrt,w
  6264  0A63  0084               	movwf	4
  6265  0A64  0860               	movf	??_vfpfcnvrt+1,w
  6266  0A65  0085               	movwf	5
  6267  0A66  0012               	moviw fsr0++
  6268  0A67  3A25               	xorlw	37
  6269  0A68  1D03               	btfss	3,2
  6270  0A69  2BCF               	goto	l6844
  6271                           
  6272                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  6273  0A6A  085D               	movf	vfpfcnvrt@fmt,w
  6274  0A6B  0086               	movwf	6
  6275  0A6C  0187               	clrf	7
  6276  0A6D  3001               	movlw	1
  6277  0A6E  0781               	addwf	1,f
  6278  0A6F  3141               	addfsr 1,1
  6279  0A70  1803               	skipnc
  6280  0A71  0A81               	incf	1,f
  6281                           
  6282                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  6283  0A72  0022               	movlb	2	; select bank2
  6284  0A73  01D9               	clrf	_width^(0+256)
  6285  0A74  01DA               	clrf	(_width+1)^(0+256)
  6286  0A75  01DD               	clrf	_flags^(0+256)
  6287  0A76  01DE               	clrf	(_flags+1)^(0+256)
  6288                           
  6289                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  6290  0A77  30FF               	movlw	255
  6291  0A78  00DB               	movwf	_prec^(0+256)
  6292  0A79  30FF               	movlw	255
  6293  0A7A  00DC               	movwf	(_prec^(0+256)+1)
  6294                           
  6295                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  6296  0A7B  0020               	movlb	0	; select bank0
  6297  0A7C  085D               	movf	vfpfcnvrt@fmt,w
  6298  0A7D  0086               	movwf	6
  6299  0A7E  0187               	clrf	7
  6300  0A7F  3F40               	moviw [0]fsr1
  6301  0A80  00DF               	movwf	??_vfpfcnvrt
  6302  0A81  3F41               	moviw [1]fsr1
  6303  0A82  00E0               	movwf	??_vfpfcnvrt+1
  6304  0A83  085F               	movf	??_vfpfcnvrt,w
  6305  0A84  0084               	movwf	4
  6306  0A85  0860               	movf	??_vfpfcnvrt+1,w
  6307  0A86  0085               	movwf	5
  6308  0A87  0800               	movf	0,w	;code access
  6309  0A88  00E1               	movwf	??_vfpfcnvrt+2
  6310  0A89  01E2               	clrf	??_vfpfcnvrt+3
  6311  0A8A  0861               	movf	??_vfpfcnvrt+2,w
  6312  0A8B  00F7               	movwf	tolower@c
  6313  0A8C  0862               	movf	??_vfpfcnvrt+3,w
  6314  0A8D  00F8               	movwf	tolower@c+1
  6315  0A8E  319F  2794  318A   	fcall	_tolower
  6316  0A91  0877               	movf	?_tolower,w
  6317  0A92  0020               	movlb	0	; select bank0
  6318  0A93  00E3               	movwf	??_vfpfcnvrt+4
  6319  0A94  0863               	movf	??_vfpfcnvrt+4,w
  6320  0A95  00E7               	movwf	vfpfcnvrt@ct
  6321                           
  6322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  6323  0A96  0867               	movf	vfpfcnvrt@ct,w
  6324  0A97  1903               	btfsc	3,2
  6325  0A98  2AD6               	goto	l6798
  6326                           
  6327                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  6328  0A99  085D               	movf	vfpfcnvrt@fmt,w
  6329  0A9A  0086               	movwf	6
  6330  0A9B  0187               	clrf	7
  6331  0A9C  3F40               	moviw [0]fsr1
  6332  0A9D  00DF               	movwf	??_vfpfcnvrt
  6333  0A9E  3F41               	moviw [1]fsr1
  6334  0A9F  00E0               	movwf	??_vfpfcnvrt+1
  6335  0AA0  3001               	movlw	1
  6336  0AA1  075F               	addwf	??_vfpfcnvrt,w
  6337  0AA2  0084               	movwf	4
  6338  0AA3  0860               	movf	??_vfpfcnvrt+1,w
  6339  0AA4  1803               	skipnc
  6340  0AA5  0A60               	incf	??_vfpfcnvrt+1,w
  6341  0AA6  0085               	movwf	5
  6342  0AA7  0800               	movf	0,w	;code access
  6343  0AA8  00E1               	movwf	??_vfpfcnvrt+2
  6344  0AA9  01E2               	clrf	??_vfpfcnvrt+3
  6345  0AAA  0861               	movf	??_vfpfcnvrt+2,w
  6346  0AAB  00F7               	movwf	tolower@c
  6347  0AAC  0862               	movf	??_vfpfcnvrt+3,w
  6348  0AAD  00F8               	movwf	tolower@c+1
  6349  0AAE  319F  2794  318A   	fcall	_tolower
  6350  0AB1  0877               	movf	?_tolower,w
  6351  0AB2  0020               	movlb	0	; select bank0
  6352  0AB3  00E3               	movwf	??_vfpfcnvrt+4
  6353  0AB4  0863               	movf	??_vfpfcnvrt+4,w
  6354  0AB5  00E8               	movwf	vfpfcnvrt@ct+1
  6355                           
  6356                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  6357  0AB6  0868               	movf	vfpfcnvrt@ct+1,w
  6358  0AB7  1903               	btfsc	3,2
  6359  0AB8  2AD6               	goto	l6798
  6360                           
  6361                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  6362  0AB9  085D               	movf	vfpfcnvrt@fmt,w
  6363  0ABA  0086               	movwf	6
  6364  0ABB  0187               	clrf	7
  6365  0ABC  3F40               	moviw [0]fsr1
  6366  0ABD  00DF               	movwf	??_vfpfcnvrt
  6367  0ABE  3F41               	moviw [1]fsr1
  6368  0ABF  00E0               	movwf	??_vfpfcnvrt+1
  6369  0AC0  3002               	movlw	2
  6370  0AC1  075F               	addwf	??_vfpfcnvrt,w
  6371  0AC2  0084               	movwf	4
  6372  0AC3  0860               	movf	??_vfpfcnvrt+1,w
  6373  0AC4  1803               	skipnc
  6374  0AC5  0A60               	incf	??_vfpfcnvrt+1,w
  6375  0AC6  0085               	movwf	5
  6376  0AC7  0800               	movf	0,w	;code access
  6377  0AC8  00E1               	movwf	??_vfpfcnvrt+2
  6378  0AC9  01E2               	clrf	??_vfpfcnvrt+3
  6379  0ACA  0861               	movf	??_vfpfcnvrt+2,w
  6380  0ACB  00F7               	movwf	tolower@c
  6381  0ACC  0862               	movf	??_vfpfcnvrt+3,w
  6382  0ACD  00F8               	movwf	tolower@c+1
  6383  0ACE  319F  2794  318A   	fcall	_tolower
  6384  0AD1  0877               	movf	?_tolower,w
  6385  0AD2  0020               	movlb	0	; select bank0
  6386  0AD3  00E3               	movwf	??_vfpfcnvrt+4
  6387  0AD4  0863               	movf	??_vfpfcnvrt+4,w
  6388  0AD5  00E9               	movwf	vfpfcnvrt@ct+2
  6389  0AD6                     l6798:	
  6390                           
  6391                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  6392  0AD6  3066               	movlw	102
  6393  0AD7  0667               	xorwf	vfpfcnvrt@ct,w
  6394  0AD8  1D03               	btfss	3,2
  6395  0AD9  2B16               	goto	l6810
  6396                           
  6397                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  6398  0ADA  085D               	movf	vfpfcnvrt@fmt,w
  6399  0ADB  0086               	movwf	6
  6400  0ADC  0187               	clrf	7
  6401  0ADD  3F40               	moviw [0]fsr1
  6402  0ADE  00DF               	movwf	??_vfpfcnvrt
  6403  0ADF  3F41               	moviw [1]fsr1
  6404  0AE0  00E0               	movwf	??_vfpfcnvrt+1
  6405  0AE1  085F               	movf	??_vfpfcnvrt,w
  6406  0AE2  0084               	movwf	4
  6407  0AE3  0860               	movf	??_vfpfcnvrt+1,w
  6408  0AE4  0085               	movwf	5
  6409  0AE5  0800               	movf	0,w	;code access
  6410  0AE6  00E1               	movwf	??_vfpfcnvrt+2
  6411  0AE7  0861               	movf	??_vfpfcnvrt+2,w
  6412  0AE8  00EE               	movwf	vfpfcnvrt@c
  6413                           
  6414                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  6415  0AE9  085D               	movf	vfpfcnvrt@fmt,w
  6416  0AEA  0086               	movwf	6
  6417  0AEB  0187               	clrf	7
  6418  0AEC  3001               	movlw	1
  6419  0AED  0781               	addwf	1,f
  6420  0AEE  3141               	addfsr 1,1
  6421  0AEF  1803               	skipnc
  6422  0AF0  0A81               	incf	1,f
  6423                           
  6424                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6425  0AF1  085E               	movf	vfpfcnvrt@ap,w
  6426  0AF2  0086               	movwf	6
  6427  0AF3  0187               	clrf	7
  6428  0AF4  0801               	movf	1,w
  6429  0AF5  0084               	movwf	4
  6430  0AF6  0185               	clrf	5
  6431  0AF7  3004               	movlw	4
  6432  0AF8  0781               	addwf	1,f
  6433  0AF9  3F00               	moviw [0]fsr0
  6434  0AFA  00EA               	movwf	vfpfcnvrt@f
  6435  0AFB  3F01               	moviw [1]fsr0
  6436  0AFC  00EB               	movwf	vfpfcnvrt@f+1
  6437  0AFD  3F02               	moviw [2]fsr0
  6438  0AFE  00EC               	movwf	vfpfcnvrt@f+2
  6439  0AFF  3F03               	moviw [3]fsr0
  6440  0B00  00ED               	movwf	vfpfcnvrt@f+3
  6441                           
  6442                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  6443  0B01  086D               	movf	vfpfcnvrt@f+3,w
  6444  0B02  00D7               	movwf	efgtoa@f+3
  6445  0B03  086C               	movf	vfpfcnvrt@f+2,w
  6446  0B04  00D6               	movwf	efgtoa@f+2
  6447  0B05  086B               	movf	vfpfcnvrt@f+1,w
  6448  0B06  00D5               	movwf	efgtoa@f+1
  6449  0B07  086A               	movf	vfpfcnvrt@f,w
  6450  0B08  00D4               	movwf	efgtoa@f
  6451  0B09  086E               	movf	vfpfcnvrt@c,w
  6452  0B0A  00DF               	movwf	??_vfpfcnvrt
  6453  0B0B  085F               	movf	??_vfpfcnvrt,w
  6454  0B0C  00D8               	movwf	efgtoa@c
  6455  0B0D  086F               	movf	vfpfcnvrt@fp,w
  6456  0B0E  3180  205D         	fcall	_efgtoa
  6457  0B10  0020               	movlb	0	; select bank0
  6458  0B11  0855               	movf	?_efgtoa+1,w
  6459  0B12  00DE               	movwf	?_vfpfcnvrt+1
  6460  0B13  0854               	movf	?_efgtoa,w
  6461  0B14  00DD               	movwf	?_vfpfcnvrt
  6462  0B15  0008               	return
  6463  0B16                     l6810:	
  6464                           
  6465                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  6466  0B16  3051               	movlw	low (STR_11| (0+32768))
  6467  0B17  00F1               	movwf	strncmp@_r
  6468  0B18  30A0               	movlw	high (STR_11| (0+32768))
  6469  0B19  00F2               	movwf	strncmp@_r+1
  6470  0B1A  3002               	movlw	2
  6471  0B1B  00F3               	movwf	strncmp@n
  6472  0B1C  3000               	movlw	0
  6473  0B1D  00F4               	movwf	strncmp@n+1
  6474  0B1E  3067               	movlw	(low (vfpfcnvrt@ct| 0))& (0+255)
  6475  0B1F  3193  2356  318A   	fcall	_strncmp
  6476  0B22  0871               	movf	?_strncmp,w
  6477  0B23  0472               	iorwf	?_strncmp+1,w
  6478  0B24  1D03               	btfss	3,2
  6479  0B25  2B9C               	goto	l6828
  6480                           
  6481                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  6482  0B26  0020               	movlb	0	; select bank0
  6483  0B27  085D               	movf	vfpfcnvrt@fmt,w
  6484  0B28  0086               	movwf	6
  6485  0B29  0187               	clrf	7
  6486  0B2A  3F40               	moviw [0]fsr1
  6487  0B2B  00DF               	movwf	??_vfpfcnvrt
  6488  0B2C  3F41               	moviw [1]fsr1
  6489  0B2D  00E0               	movwf	??_vfpfcnvrt+1
  6490  0B2E  3001               	movlw	1
  6491  0B2F  075F               	addwf	??_vfpfcnvrt,w
  6492  0B30  0084               	movwf	4
  6493  0B31  0860               	movf	??_vfpfcnvrt+1,w
  6494  0B32  1803               	skipnc
  6495  0B33  0A60               	incf	??_vfpfcnvrt+1,w
  6496  0B34  0085               	movwf	5
  6497  0B35  0800               	movf	0,w	;code access
  6498  0B36  00E1               	movwf	??_vfpfcnvrt+2
  6499  0B37  0861               	movf	??_vfpfcnvrt+2,w
  6500  0B38  00EE               	movwf	vfpfcnvrt@c
  6501  0B39  085D               	movf	vfpfcnvrt@fmt,w
  6502  0B3A  0086               	movwf	6
  6503  0B3B  0187               	clrf	7
  6504  0B3C  3F40               	moviw [0]fsr1
  6505  0B3D  00DF               	movwf	??_vfpfcnvrt
  6506  0B3E  3F41               	moviw [1]fsr1
  6507  0B3F  00E0               	movwf	??_vfpfcnvrt+1
  6508  0B40  085F               	movf	??_vfpfcnvrt,w
  6509  0B41  0084               	movwf	4
  6510  0B42  0860               	movf	??_vfpfcnvrt+1,w
  6511  0B43  0085               	movwf	5
  6512  0B44  0800               	movf	0,w	;code access
  6513  0B45  3EBF               	addlw	191
  6514  0B46  00E1               	movwf	??_vfpfcnvrt+2
  6515  0B47  30FF               	movlw	255
  6516  0B48  1803               	skipnc
  6517  0B49  3000               	movlw	0
  6518  0B4A  00E2               	movwf	??_vfpfcnvrt+3
  6519  0B4B  3000               	movlw	0
  6520  0B4C  0262               	subwf	??_vfpfcnvrt+3,w
  6521  0B4D  301A               	movlw	26
  6522  0B4E  1903               	skipnz
  6523  0B4F  0261               	subwf	??_vfpfcnvrt+2,w
  6524  0B50  1803               	btfsc	3,0
  6525  0B51  2B54               	goto	u7380
  6526  0B52  3001               	movlw	1
  6527  0B53  2B55               	goto	u7390
  6528  0B54                     u7380:	
  6529  0B54  3000               	movlw	0
  6530  0B55                     u7390:	
  6531  0B55  00E3               	movwf	??_vfpfcnvrt+4
  6532  0B56  01E4               	clrf	??_vfpfcnvrt+5
  6533  0B57  0863               	movf	??_vfpfcnvrt+4,w
  6534  0B58  00E5               	movwf	_vfpfcnvrt$1550
  6535  0B59  0864               	movf	??_vfpfcnvrt+5,w
  6536  0B5A  00E6               	movwf	_vfpfcnvrt$1550+1
  6537  0B5B  0865               	movf	_vfpfcnvrt$1550,w
  6538  0B5C  0466               	iorwf	_vfpfcnvrt$1550+1,w
  6539  0B5D  1903               	btfsc	3,2
  6540  0B5E  2B6F               	goto	l6820
  6541                           
  6542                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  6543  0B5F  085E               	movf	vfpfcnvrt@ap,w
  6544  0B60  0086               	movwf	6
  6545  0B61  0187               	clrf	7
  6546  0B62  0801               	movf	1,w
  6547  0B63  0084               	movwf	4
  6548  0B64  0185               	clrf	5
  6549  0B65  3004               	movlw	4
  6550  0B66  0781               	addwf	1,f
  6551  0B67  3F00               	moviw [0]fsr0
  6552  0B68  00EA               	movwf	vfpfcnvrt@f
  6553  0B69  3F01               	moviw [1]fsr0
  6554  0B6A  00EB               	movwf	vfpfcnvrt@f+1
  6555  0B6B  3F02               	moviw [2]fsr0
  6556  0B6C  00EC               	movwf	vfpfcnvrt@f+2
  6557  0B6D  3F03               	moviw [3]fsr0
  6558  0B6E  2B7E               	goto	L1
  6559  0B6F                     l6820:	
  6560                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  6561                           
  6562                           
  6563                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6564  0B6F  085E               	movf	vfpfcnvrt@ap,w
  6565  0B70  0086               	movwf	6
  6566  0B71  0187               	clrf	7
  6567  0B72  0801               	movf	1,w
  6568  0B73  0084               	movwf	4
  6569  0B74  0185               	clrf	5
  6570  0B75  3004               	movlw	4
  6571  0B76  0781               	addwf	1,f
  6572  0B77  3F00               	moviw [0]fsr0
  6573  0B78  00EA               	movwf	vfpfcnvrt@f
  6574  0B79  3F01               	moviw [1]fsr0
  6575  0B7A  00EB               	movwf	vfpfcnvrt@f+1
  6576  0B7B  3F02               	moviw [2]fsr0
  6577  0B7C  00EC               	movwf	vfpfcnvrt@f+2
  6578  0B7D  3F03               	moviw [3]fsr0
  6579  0B7E                     L1:	
  6580  0B7E  00ED               	movwf	vfpfcnvrt@f+3
  6581                           
  6582                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  6583  0B7F  085D               	movf	vfpfcnvrt@fmt,w
  6584  0B80  0086               	movwf	6
  6585  0B81  0187               	clrf	7
  6586  0B82  3002               	movlw	2
  6587  0B83  0781               	addwf	1,f
  6588  0B84  3141               	addfsr 1,1
  6589  0B85  1803               	skipnc
  6590  0B86  0A81               	incf	1,f
  6591                           
  6592                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 938:       
      +                                return efgtoa(fp, f, c);
  6593  0B87  086D               	movf	vfpfcnvrt@f+3,w
  6594  0B88  00D7               	movwf	efgtoa@f+3
  6595  0B89  086C               	movf	vfpfcnvrt@f+2,w
  6596  0B8A  00D6               	movwf	efgtoa@f+2
  6597  0B8B  086B               	movf	vfpfcnvrt@f+1,w
  6598  0B8C  00D5               	movwf	efgtoa@f+1
  6599  0B8D  086A               	movf	vfpfcnvrt@f,w
  6600  0B8E  00D4               	movwf	efgtoa@f
  6601  0B8F  086E               	movf	vfpfcnvrt@c,w
  6602  0B90  00DF               	movwf	??_vfpfcnvrt
  6603  0B91  085F               	movf	??_vfpfcnvrt,w
  6604  0B92  00D8               	movwf	efgtoa@c
  6605  0B93  086F               	movf	vfpfcnvrt@fp,w
  6606  0B94  3180  205D         	fcall	_efgtoa
  6607  0B96  0020               	movlb	0	; select bank0
  6608  0B97  0855               	movf	?_efgtoa+1,w
  6609  0B98  00DE               	movwf	?_vfpfcnvrt+1
  6610  0B99  0854               	movf	?_efgtoa,w
  6611  0B9A  00DD               	movwf	?_vfpfcnvrt
  6612  0B9B  0008               	return
  6613  0B9C                     l6828:	
  6614                           
  6615                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  6616  0B9C  0020               	movlb	0	; select bank0
  6617  0B9D  085D               	movf	vfpfcnvrt@fmt,w
  6618  0B9E  0086               	movwf	6
  6619  0B9F  0187               	clrf	7
  6620  0BA0  3F40               	moviw [0]fsr1
  6621  0BA1  00DF               	movwf	??_vfpfcnvrt
  6622  0BA2  3F41               	moviw [1]fsr1
  6623  0BA3  00E0               	movwf	??_vfpfcnvrt+1
  6624  0BA4  085F               	movf	??_vfpfcnvrt,w
  6625  0BA5  0084               	movwf	4
  6626  0BA6  0860               	movf	??_vfpfcnvrt+1,w
  6627  0BA7  0085               	movwf	5
  6628  0BA8  0012               	moviw fsr0++
  6629  0BA9  3A25               	xorlw	37
  6630  0BAA  1D03               	btfss	3,2
  6631  0BAB  2BC4               	goto	l6838
  6632                           
  6633                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  6634  0BAC  085D               	movf	vfpfcnvrt@fmt,w
  6635  0BAD  0086               	movwf	6
  6636  0BAE  0187               	clrf	7
  6637  0BAF  3001               	movlw	1
  6638  0BB0  0781               	addwf	1,f
  6639  0BB1  3141               	addfsr 1,1
  6640  0BB2  1803               	skipnc
  6641  0BB3  0A81               	incf	1,f
  6642                           
  6643                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  6644  0BB4  3025               	movlw	37
  6645  0BB5  00F4               	movwf	fputc@c
  6646  0BB6  3000               	movlw	0
  6647  0BB7  00F5               	movwf	fputc@c+1
  6648  0BB8  086F               	movf	vfpfcnvrt@fp,w
  6649  0BB9  00DF               	movwf	??_vfpfcnvrt
  6650  0BBA  085F               	movf	??_vfpfcnvrt,w
  6651  0BBB  00F6               	movwf	fputc@fp
  6652  0BBC  3191  2191         	fcall	_fputc
  6653  0BBE                     l6834:	
  6654                           
  6655                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  6656  0BBE  3001               	movlw	1
  6657  0BBF  0020               	movlb	0	; select bank0
  6658  0BC0  00DD               	movwf	?_vfpfcnvrt
  6659  0BC1  3000               	movlw	0
  6660  0BC2  00DE               	movwf	?_vfpfcnvrt+1
  6661  0BC3  0008               	return
  6662  0BC4                     l6838:	
  6663                           
  6664                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  6665  0BC4  085D               	movf	vfpfcnvrt@fmt,w
  6666  0BC5  0086               	movwf	6
  6667  0BC6  0187               	clrf	7
  6668  0BC7  3001               	movlw	1
  6669  0BC8  0781               	addwf	1,f
  6670  0BC9  3141               	addfsr 1,1
  6671  0BCA  1803               	skipnc
  6672  0BCB  0A81               	incf	1,f
  6673                           
  6674                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  6675  0BCC  01DD               	clrf	?_vfpfcnvrt
  6676  0BCD  01DE               	clrf	?_vfpfcnvrt+1
  6677  0BCE  0008               	return
  6678  0BCF                     l6844:	
  6679                           
  6680                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  6681  0BCF  085D               	movf	vfpfcnvrt@fmt,w
  6682  0BD0  0086               	movwf	6
  6683  0BD1  0187               	clrf	7
  6684  0BD2  3F40               	moviw [0]fsr1
  6685  0BD3  00DF               	movwf	??_vfpfcnvrt
  6686  0BD4  3F41               	moviw [1]fsr1
  6687  0BD5  00E0               	movwf	??_vfpfcnvrt+1
  6688  0BD6  085F               	movf	??_vfpfcnvrt,w
  6689  0BD7  0084               	movwf	4
  6690  0BD8  0860               	movf	??_vfpfcnvrt+1,w
  6691  0BD9  0085               	movwf	5
  6692  0BDA  0800               	movf	0,w	;code access
  6693  0BDB  00E1               	movwf	??_vfpfcnvrt+2
  6694  0BDC  01E2               	clrf	??_vfpfcnvrt+3
  6695  0BDD  0861               	movf	??_vfpfcnvrt+2,w
  6696  0BDE  00F4               	movwf	fputc@c
  6697  0BDF  0862               	movf	??_vfpfcnvrt+3,w
  6698  0BE0  00F5               	movwf	fputc@c+1
  6699  0BE1  086F               	movf	vfpfcnvrt@fp,w
  6700  0BE2  00E3               	movwf	??_vfpfcnvrt+4
  6701  0BE3  0863               	movf	??_vfpfcnvrt+4,w
  6702  0BE4  00F6               	movwf	fputc@fp
  6703  0BE5  3191  2191  318A   	fcall	_fputc
  6704                           
  6705                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  6706  0BE8  0020               	movlb	0	; select bank0
  6707  0BE9  085D               	movf	vfpfcnvrt@fmt,w
  6708  0BEA  0086               	movwf	6
  6709  0BEB  0187               	clrf	7
  6710  0BEC  3001               	movlw	1
  6711  0BED  0781               	addwf	1,f
  6712  0BEE  3141               	addfsr 1,1
  6713  0BEF  1803               	skipnc
  6714  0BF0  0A81               	incf	1,f
  6715  0BF1  2BBE               	goto	l6834
  6716  0BF2                     __end_of_vfpfcnvrt:	
  6717                           
  6718                           	psect	text9
  6719  1356                     __ptext9:	
  6720 ;; *************** function _strncmp *****************
  6721 ;; Defined at:
  6722 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  6723 ;; Parameters:    Size  Location     Type
  6724 ;;  _l              1    wreg     PTR const unsigned char 
  6725 ;;		 -> vfpfcnvrt@ct(3), 
  6726 ;;  _r              2    1[COMMON] PTR const unsigned char 
  6727 ;;		 -> STR_13(3), 
  6728 ;;  n               2    3[COMMON] unsigned int 
  6729 ;; Auto vars:     Size  Location     Type
  6730 ;;  _l              1    6[COMMON] PTR const unsigned char 
  6731 ;;		 -> vfpfcnvrt@ct(3), 
  6732 ;;  r               2    7[COMMON] PTR const unsigned char 
  6733 ;;		 -> STR_13(3), 
  6734 ;;  l               1    9[COMMON] PTR const unsigned char 
  6735 ;;		 -> vfpfcnvrt@ct(3), 
  6736 ;; Return value:  Size  Location     Type
  6737 ;;                  2    1[COMMON] int 
  6738 ;; Registers used:
  6739 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  6740 ;; Tracked objects:
  6741 ;;		On entry : 0/0
  6742 ;;		On exit  : 0/0
  6743 ;;		Unchanged: 0/0
  6744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6745 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6746 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6747 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6748 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6749 ;;Total ram usage:        9 bytes
  6750 ;; Hardware stack levels used:    1
  6751 ;; Hardware stack levels required when called:    4
  6752 ;; This function calls:
  6753 ;;		Nothing
  6754 ;; This function is called by:
  6755 ;;		_vfpfcnvrt
  6756 ;; This function uses a non-reentrant model
  6757 ;;
  6758                           
  6759                           
  6760                           ;psect for function _strncmp
  6761  1356                     _strncmp:	
  6762                           
  6763                           ;incstack = 0
  6764                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  6765                           ;strncmp@_l stored from wreg
  6766  1356  00F6               	movwf	strncmp@_l
  6767  1357  0876               	movf	strncmp@_l,w
  6768  1358  00F5               	movwf	??_strncmp
  6769  1359  0875               	movf	??_strncmp,w
  6770  135A  00F9               	movwf	strncmp@l
  6771  135B  0872               	movf	strncmp@_r+1,w
  6772  135C  00F8               	movwf	strncmp@r+1
  6773  135D  0871               	movf	strncmp@_r,w
  6774  135E  00F7               	movwf	strncmp@r
  6775  135F  3001               	movlw	1
  6776  1360  02F3               	subwf	strncmp@n,f
  6777  1361  3000               	movlw	0
  6778  1362  3BF4               	subwfb	strncmp@n+1,f
  6779  1363  0A73               	incf	strncmp@n,w
  6780  1364  1D03               	skipz
  6781  1365  2B90               	goto	l5394
  6782  1366  0A74               	incf	strncmp@n+1,w
  6783  1367  1D03               	btfss	3,2
  6784  1368  2B90               	goto	l5394
  6785  1369  01F1               	clrf	?_strncmp
  6786  136A  01F2               	clrf	?_strncmp+1
  6787  136B  0008               	return
  6788  136C                     l5396:	
  6789  136C  0877               	movf	strncmp@r,w
  6790  136D  0084               	movwf	4
  6791  136E  0878               	movf	strncmp@r+1,w
  6792  136F  0085               	movwf	5
  6793  1370  0012               	moviw fsr0++
  6794  1371  1903               	btfsc	3,2
  6795  1372  2B96               	goto	l5402
  6796  1373  0873               	movf	strncmp@n,w
  6797  1374  0474               	iorwf	strncmp@n+1,w
  6798  1375  1903               	btfsc	3,2
  6799  1376  2B96               	goto	l5402
  6800  1377  0877               	movf	strncmp@r,w
  6801  1378  0084               	movwf	4
  6802  1379  0878               	movf	strncmp@r+1,w
  6803  137A  0085               	movwf	5
  6804  137B  0800               	movf	0,w	;code access
  6805  137C  00F5               	movwf	??_strncmp
  6806  137D  0879               	movf	strncmp@l,w
  6807  137E  0086               	movwf	6
  6808  137F  0187               	clrf	7
  6809  1380  0801               	movf	1,w
  6810  1381  0675               	xorwf	??_strncmp,w
  6811  1382  1D03               	btfss	3,2
  6812  1383  2B96               	goto	l5402
  6813  1384  3001               	movlw	1
  6814  1385  00F5               	movwf	??_strncmp
  6815  1386  0875               	movf	??_strncmp,w
  6816  1387  07F9               	addwf	strncmp@l,f
  6817  1388  3001               	movlw	1
  6818  1389  07F7               	addwf	strncmp@r,f
  6819  138A  3000               	movlw	0
  6820  138B  3DF8               	addwfc	strncmp@r+1,f
  6821  138C  3001               	movlw	1
  6822  138D  02F3               	subwf	strncmp@n,f
  6823  138E  3000               	movlw	0
  6824  138F  3BF4               	subwfb	strncmp@n+1,f
  6825  1390                     l5394:	
  6826  1390  0879               	movf	strncmp@l,w
  6827  1391  0086               	movwf	6
  6828  1392  0187               	clrf	7
  6829  1393  0801               	movf	1,w
  6830  1394  1D03               	btfss	3,2
  6831  1395  2B6C               	goto	l5396
  6832  1396                     l5402:	
  6833  1396  0879               	movf	strncmp@l,w
  6834  1397  0086               	movwf	6
  6835  1398  0187               	clrf	7
  6836  1399  0877               	movf	strncmp@r,w
  6837  139A  0084               	movwf	4
  6838  139B  0878               	movf	strncmp@r+1,w
  6839  139C  0085               	movwf	5
  6840  139D  0800               	movf	0,w	;code access
  6841  139E  0201               	subwf	1,w
  6842  139F  00F1               	movwf	?_strncmp
  6843  13A0  01F2               	clrf	?_strncmp+1
  6844  13A1  1C03               	skipc
  6845  13A2  03F2               	decf	?_strncmp+1,f
  6846  13A3  0008               	return
  6847  13A4                     __end_of_strncmp:	
  6848                           
  6849                           	psect	text10
  6850  005D                     __ptext10:	
  6851 ;; *************** function _efgtoa *****************
  6852 ;; Defined at:
  6853 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6854 ;; Parameters:    Size  Location     Type
  6855 ;;  fp              1    wreg     PTR struct _IO_FILE
  6856 ;;		 -> NULL(0), 
  6857 ;;  f               4   52[BANK0 ] PTR struct _IO_FILE
  6858 ;;  c               1   56[BANK0 ] unsigned char 
  6859 ;; Auto vars:     Size  Location     Type
  6860 ;;  fp              1   28[BANK1 ] PTR struct _IO_FILE
  6861 ;;		 -> NULL(0), 
  6862 ;;  u               4   53[BANK1 ] PTR struct _IO_FILE
  6863 ;;  g               4   45[BANK1 ] PTR struct _IO_FILE
  6864 ;;  l               4   39[BANK1 ] PTR struct _IO_FILE
  6865 ;;  h               4   35[BANK1 ] PTR struct _IO_FILE
  6866 ;;  ou              4    0[BANK1 ] PTR struct _IO_FILE
  6867 ;;  n               2   51[BANK1 ] int 
  6868 ;;  e               2   49[BANK1 ] int 
  6869 ;;  i               2   43[BANK1 ] int 
  6870 ;;  w               2   32[BANK1 ] int 
  6871 ;;  p               2   29[BANK1 ] int 
  6872 ;;  sign            2   26[BANK1 ] int 
  6873 ;;  d               2   24[BANK1 ] int 
  6874 ;;  ne              2   22[BANK1 ] int 
  6875 ;;  m               2   20[BANK1 ] int 
  6876 ;;  pp              2   18[BANK1 ] int 
  6877 ;;  t               2   16[BANK1 ] int 
  6878 ;;  mode            1   34[BANK1 ] unsigned char 
  6879 ;;  nmode           1   31[BANK1 ] unsigned char 
  6880 ;; Return value:  Size  Location     Type
  6881 ;;                  2   52[BANK0 ] int 
  6882 ;; Registers used:
  6883 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6884 ;; Tracked objects:
  6885 ;;		On entry : 0/0
  6886 ;;		On exit  : 0/0
  6887 ;;		Unchanged: 0/0
  6888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6889 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6890 ;;      Locals:         0       0      57       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6891 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6892 ;;      Totals:         0       9      57       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6893 ;;Total ram usage:       66 bytes
  6894 ;; Hardware stack levels used:    1
  6895 ;; Hardware stack levels required when called:    9
  6896 ;; This function calls:
  6897 ;;		___awdiv
  6898 ;;		___awmod
  6899 ;;		___fladd
  6900 ;;		___fldiv
  6901 ;;		___fleq
  6902 ;;		___flge
  6903 ;;		___flmul
  6904 ;;		___flneg
  6905 ;;		___flsub
  6906 ;;		___fltol
  6907 ;;		___fpclassifyf
  6908 ;;		_floorf
  6909 ;;		_isupper
  6910 ;;		_pad
  6911 ;;		_strcpy
  6912 ;;		_tolower
  6913 ;; This function is called by:
  6914 ;;		_vfpfcnvrt
  6915 ;; This function uses a non-reentrant model
  6916 ;;
  6917                           
  6918                           
  6919                           ;psect for function _efgtoa
  6920  005D                     _efgtoa:	
  6921                           
  6922                           ;incstack = 0
  6923                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6924                           ;efgtoa@fp stored from wreg
  6925  005D  0021               	movlb	1	; select bank1
  6926  005E  00BC               	movwf	efgtoa@fp^(0+128)
  6927                           
  6928                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  6929  005F  01BA               	clrf	efgtoa@sign^(0+128)
  6930  0060  01BB               	clrf	(efgtoa@sign+1)^(0+128)
  6931                           
  6932                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  6933  0061  0020               	movlb	0	; select bank0
  6934  0062  0857               	movf	efgtoa@f+3,w
  6935  0063  0021               	movlb	1	; select bank1
  6936  0064  00D0               	movwf	(efgtoa@g+3)^(0+128)
  6937  0065  0020               	movlb	0	; select bank0
  6938  0066  0856               	movf	efgtoa@f+2,w
  6939  0067  0021               	movlb	1	; select bank1
  6940  0068  00CF               	movwf	(efgtoa@g+2)^(0+128)
  6941  0069  0020               	movlb	0	; select bank0
  6942  006A  0855               	movf	efgtoa@f+1,w
  6943  006B  0021               	movlb	1	; select bank1
  6944  006C  00CE               	movwf	(efgtoa@g+1)^(0+128)
  6945  006D  0020               	movlb	0	; select bank0
  6946  006E  0854               	movf	efgtoa@f,w
  6947  006F  0021               	movlb	1	; select bank1
  6948  0070  00CD               	movwf	efgtoa@g^(0+128)
  6949                           
  6950                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  6951  0071  0850               	movf	(efgtoa@g+3)^(0+128),w
  6952  0072  0020               	movlb	0	; select bank0
  6953  0073  00BD               	movwf	___flge@ff1+3
  6954  0074  0021               	movlb	1	; select bank1
  6955  0075  084F               	movf	(efgtoa@g+2)^(0+128),w
  6956  0076  0020               	movlb	0	; select bank0
  6957  0077  00BC               	movwf	___flge@ff1+2
  6958  0078  0021               	movlb	1	; select bank1
  6959  0079  084E               	movf	(efgtoa@g+1)^(0+128),w
  6960  007A  0020               	movlb	0	; select bank0
  6961  007B  00BB               	movwf	___flge@ff1+1
  6962  007C  0021               	movlb	1	; select bank1
  6963  007D  084D               	movf	efgtoa@g^(0+128),w
  6964  007E  0020               	movlb	0	; select bank0
  6965  007F  00BA               	movwf	___flge@ff1
  6966  0080  3000               	movlw	0
  6967  0081  00C1               	movwf	___flge@ff2+3
  6968  0082  3000               	movlw	0
  6969  0083  00C0               	movwf	___flge@ff2+2
  6970  0084  3000               	movlw	0
  6971  0085  00BF               	movwf	___flge@ff2+1
  6972  0086  3000               	movlw	0
  6973  0087  00BE               	movwf	___flge@ff2
  6974  0088  3195  2574  3180   	fcall	___flge
  6975  008B  1803               	btfsc	3,0
  6976  008C  28A6               	goto	l6498
  6977                           
  6978                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  6979  008D  3001               	movlw	1
  6980  008E  0021               	movlb	1	; select bank1
  6981  008F  00BA               	movwf	efgtoa@sign^(0+128)
  6982  0090  3000               	movlw	0
  6983  0091  00BB               	movwf	(efgtoa@sign^(0+128)+1)
  6984                           
  6985                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  6986  0092  0850               	movf	(efgtoa@g+3)^(0+128),w
  6987  0093  00F4               	movwf	___flneg@f1+3
  6988  0094  084F               	movf	(efgtoa@g+2)^(0+128),w
  6989  0095  00F3               	movwf	___flneg@f1+2
  6990  0096  084E               	movf	(efgtoa@g+1)^(0+128),w
  6991  0097  00F2               	movwf	___flneg@f1+1
  6992  0098  084D               	movf	efgtoa@g^(0+128),w
  6993  0099  00F1               	movwf	___flneg@f1
  6994  009A  319D  25B0  3180   	fcall	___flneg
  6995  009D  0874               	movf	?___flneg+3,w
  6996  009E  0021               	movlb	1	; select bank1
  6997  009F  00D0               	movwf	(efgtoa@g+3)^(0+128)
  6998  00A0  0873               	movf	?___flneg+2,w
  6999  00A1  00CF               	movwf	(efgtoa@g+2)^(0+128)
  7000  00A2  0872               	movf	?___flneg+1,w
  7001  00A3  00CE               	movwf	(efgtoa@g+1)^(0+128)
  7002  00A4  0871               	movf	?___flneg,w
  7003  00A5  00CD               	movwf	efgtoa@g^(0+128)
  7004  00A6                     l6498:	
  7005                           
  7006                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  7007  00A6  0021               	movlb	1	; select bank1
  7008  00A7  01D3               	clrf	efgtoa@n^(0+128)
  7009  00A8  01D4               	clrf	(efgtoa@n+1)^(0+128)
  7010                           
  7011                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  7012  00A9  0022               	movlb	2	; select bank2
  7013  00AA  085A               	movf	(_width+1)^(0+256),w
  7014  00AB  0021               	movlb	1	; select bank1
  7015  00AC  00C1               	movwf	(efgtoa@w+1)^(0+128)
  7016  00AD  0022               	movlb	2	; select bank2
  7017  00AE  0859               	movf	_width^(0+256),w
  7018  00AF  0021               	movlb	1	; select bank1
  7019  00B0  00C0               	movwf	efgtoa@w^(0+128)
  7020                           
  7021                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  7022  00B1  083A               	movf	efgtoa@sign^(0+128),w
  7023  00B2  043B               	iorwf	(efgtoa@sign+1)^(0+128),w
  7024  00B3  1D03               	btfss	3,2
  7025  00B4  28B8               	goto	l6506
  7026  00B5  0022               	movlb	2	; select bank2
  7027  00B6  1D5D               	btfss	_flags^(0+256),2
  7028  00B7  28D2               	goto	l6518
  7029  00B8                     l6506:	
  7030                           
  7031                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  7032  00B8  0021               	movlb	1	; select bank1
  7033  00B9  083A               	movf	efgtoa@sign^(0+128),w
  7034  00BA  043B               	iorwf	(efgtoa@sign+1)^(0+128),w
  7035  00BB  1D03               	btfss	3,2
  7036  00BC  28BF               	goto	l6510
  7037  00BD  302B               	movlw	43
  7038  00BE  28C0               	goto	L2
  7039  00BF                     l6510:	
  7040  00BF  302D               	movlw	45
  7041  00C0                     L2:	
  7042  00C0  00A4               	movwf	_efgtoa$1521^(0+128)
  7043  00C1  3000               	movlw	0
  7044  00C2  00A5               	movwf	(_efgtoa$1521^(0+128)+1)
  7045  00C3  0824               	movf	_efgtoa$1521^(0+128),w
  7046  00C4  0020               	movlb	0	; select bank0
  7047  00C5  00D9               	movwf	??_efgtoa
  7048  00C6  0859               	movf	??_efgtoa,w
  7049  00C7  0024               	movlb	4	; select bank4
  7050  00C8  00A0               	movwf	_dbuf^(0+512)
  7051                           
  7052                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  7053  00C9  3001               	movlw	1
  7054  00CA  0021               	movlb	1	; select bank1
  7055  00CB  07D3               	addwf	efgtoa@n^(0+128),f
  7056  00CC  3000               	movlw	0
  7057  00CD  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  7058                           
  7059                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  7060  00CE  30FF               	movlw	255
  7061  00CF  07C0               	addwf	efgtoa@w^(0+128),f
  7062  00D0  30FF               	movlw	255
  7063  00D1  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  7064  00D2                     l6518:	
  7065                           
  7066                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  7067  00D2  0021               	movlb	1	; select bank1
  7068  00D3  0850               	movf	(efgtoa@g+3)^(0+128),w
  7069  00D4  00F4               	movwf	___fpclassifyf@x+3
  7070  00D5  084F               	movf	(efgtoa@g+2)^(0+128),w
  7071  00D6  00F3               	movwf	___fpclassifyf@x+2
  7072  00D7  084E               	movf	(efgtoa@g+1)^(0+128),w
  7073  00D8  00F2               	movwf	___fpclassifyf@x+1
  7074  00D9  084D               	movf	efgtoa@g^(0+128),w
  7075  00DA  00F1               	movwf	___fpclassifyf@x
  7076  00DB  3194  24FC  3180   	fcall	___fpclassifyf
  7077  00DE  0371               	decf	?___fpclassifyf,w
  7078  00DF  0472               	iorwf	?___fpclassifyf+1,w
  7079  00E0  1D03               	btfss	3,2
  7080  00E1  292A               	goto	l6536
  7081  00E2  0020               	movlb	0	; select bank0
  7082  00E3  0858               	movf	efgtoa@c,w
  7083  00E4  3EBF               	addlw	191
  7084  00E5  00D9               	movwf	??_efgtoa
  7085  00E6  30FF               	movlw	255
  7086  00E7  1803               	skipnc
  7087  00E8  3000               	movlw	0
  7088  00E9  00DA               	movwf	??_efgtoa+1
  7089  00EA  3000               	movlw	0
  7090  00EB  025A               	subwf	??_efgtoa+1,w
  7091  00EC  301A               	movlw	26
  7092  00ED  1903               	skipnz
  7093  00EE  0259               	subwf	??_efgtoa,w
  7094  00EF  1803               	btfsc	3,0
  7095  00F0  28F3               	goto	u6860
  7096  00F1  3001               	movlw	1
  7097  00F2  28F4               	goto	u6870
  7098  00F3                     u6860:	
  7099  00F3  3000               	movlw	0
  7100  00F4                     u6870:	
  7101  00F4  00DB               	movwf	??_efgtoa+2
  7102  00F5  01DC               	clrf	??_efgtoa+3
  7103  00F6  085B               	movf	??_efgtoa+2,w
  7104  00F7  0021               	movlb	1	; select bank1
  7105  00F8  00A6               	movwf	_efgtoa$1522^(0+128)
  7106  00F9  0020               	movlb	0	; select bank0
  7107  00FA  085C               	movf	??_efgtoa+3,w
  7108  00FB  0021               	movlb	1	; select bank1
  7109  00FC  00A7               	movwf	(_efgtoa$1522+1)^(0+128)
  7110  00FD  0826               	movf	_efgtoa$1522^(0+128),w
  7111  00FE  0427               	iorwf	(_efgtoa$1522+1)^(0+128),w
  7112  00FF  1903               	btfsc	3,2
  7113  0100  2905               	goto	l6528
  7114                           
  7115                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  7116  0101  3041               	movlw	low (STR_3| (0+32768))
  7117  0102  00F1               	movwf	strcpy@src
  7118  0103  30A0               	movlw	high (STR_3| (0+32768))
  7119  0104  2908               	goto	L3
  7120  0105                     l6528:	
  7121                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  7122                           
  7123                           
  7124                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  7125  0105  3049               	movlw	low (STR_4| (0+32768))
  7126  0106  00F1               	movwf	strcpy@src
  7127  0107  30A0               	movlw	high (STR_4| (0+32768))
  7128  0108                     L3:	
  7129  0108  00F2               	movwf	strcpy@src+1
  7130  0109  0853               	movf	efgtoa@n^(0+128),w
  7131  010A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7132  010B  319F  2775  3180   	fcall	_strcpy
  7133                           
  7134                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  7135  010E  30FD               	movlw	253
  7136  010F  0021               	movlb	1	; select bank1
  7137  0110  07C0               	addwf	efgtoa@w^(0+128),f
  7138  0111  30FF               	movlw	255
  7139  0112  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  7140                           
  7141                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  7142  0113  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  7143  0114  0020               	movlb	0	; select bank0
  7144  0115  00D9               	movwf	??_efgtoa
  7145  0116  0859               	movf	??_efgtoa,w
  7146  0117  00A8               	movwf	pad@buf
  7147  0118  0021               	movlb	1	; select bank1
  7148  0119  0841               	movf	(efgtoa@w+1)^(0+128),w
  7149  011A  0020               	movlb	0	; select bank0
  7150  011B  00AA               	movwf	pad@p+1
  7151  011C  0021               	movlb	1	; select bank1
  7152  011D  0840               	movf	efgtoa@w^(0+128),w
  7153  011E  0020               	movlb	0	; select bank0
  7154  011F  00A9               	movwf	pad@p
  7155  0120  0021               	movlb	1	; select bank1
  7156  0121  083C               	movf	efgtoa@fp^(0+128),w
  7157  0122  3193  23A4         	fcall	_pad
  7158  0124  0020               	movlb	0	; select bank0
  7159  0125  0829               	movf	?_pad+1,w
  7160  0126  00D5               	movwf	?_efgtoa+1
  7161  0127  0828               	movf	?_pad,w
  7162  0128  00D4               	movwf	?_efgtoa
  7163  0129  0008               	return
  7164  012A                     l6536:	
  7165                           
  7166                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  7167  012A  0021               	movlb	1	; select bank1
  7168  012B  0850               	movf	(efgtoa@g+3)^(0+128),w
  7169  012C  00F4               	movwf	___fpclassifyf@x+3
  7170  012D  084F               	movf	(efgtoa@g+2)^(0+128),w
  7171  012E  00F3               	movwf	___fpclassifyf@x+2
  7172  012F  084E               	movf	(efgtoa@g+1)^(0+128),w
  7173  0130  00F2               	movwf	___fpclassifyf@x+1
  7174  0131  084D               	movf	efgtoa@g^(0+128),w
  7175  0132  00F1               	movwf	___fpclassifyf@x
  7176  0133  3194  24FC  3180   	fcall	___fpclassifyf
  7177  0136  0871               	movf	?___fpclassifyf,w
  7178  0137  0472               	iorwf	?___fpclassifyf+1,w
  7179  0138  1D03               	btfss	3,2
  7180  0139  2982               	goto	l6554
  7181  013A  0020               	movlb	0	; select bank0
  7182  013B  0858               	movf	efgtoa@c,w
  7183  013C  3EBF               	addlw	191
  7184  013D  00D9               	movwf	??_efgtoa
  7185  013E  30FF               	movlw	255
  7186  013F  1803               	skipnc
  7187  0140  3000               	movlw	0
  7188  0141  00DA               	movwf	??_efgtoa+1
  7189  0142  3000               	movlw	0
  7190  0143  025A               	subwf	??_efgtoa+1,w
  7191  0144  301A               	movlw	26
  7192  0145  1903               	skipnz
  7193  0146  0259               	subwf	??_efgtoa,w
  7194  0147  1803               	btfsc	3,0
  7195  0148  294B               	goto	u6900
  7196  0149  3001               	movlw	1
  7197  014A  294C               	goto	u6910
  7198  014B                     u6900:	
  7199  014B  3000               	movlw	0
  7200  014C                     u6910:	
  7201  014C  00DB               	movwf	??_efgtoa+2
  7202  014D  01DC               	clrf	??_efgtoa+3
  7203  014E  085B               	movf	??_efgtoa+2,w
  7204  014F  0021               	movlb	1	; select bank1
  7205  0150  00A8               	movwf	_efgtoa$1527^(0+128)
  7206  0151  0020               	movlb	0	; select bank0
  7207  0152  085C               	movf	??_efgtoa+3,w
  7208  0153  0021               	movlb	1	; select bank1
  7209  0154  00A9               	movwf	(_efgtoa$1527+1)^(0+128)
  7210  0155  0828               	movf	_efgtoa$1527^(0+128),w
  7211  0156  0429               	iorwf	(_efgtoa$1527+1)^(0+128),w
  7212  0157  1903               	btfsc	3,2
  7213  0158  295D               	goto	l6546
  7214                           
  7215                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  7216  0159  3045               	movlw	low (STR_7| (0+32768))
  7217  015A  00F1               	movwf	strcpy@src
  7218  015B  30A0               	movlw	high (STR_7| (0+32768))
  7219  015C  2960               	goto	L4
  7220  015D                     l6546:	
  7221                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  7222                           
  7223                           
  7224                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  7225  015D  304D               	movlw	low (STR_8| (0+32768))
  7226  015E  00F1               	movwf	strcpy@src
  7227  015F  30A0               	movlw	high (STR_8| (0+32768))
  7228  0160                     L4:	
  7229  0160  00F2               	movwf	strcpy@src+1
  7230  0161  0853               	movf	efgtoa@n^(0+128),w
  7231  0162  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7232  0163  319F  2775  3180   	fcall	_strcpy
  7233                           
  7234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 358:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  7235  0166  30FD               	movlw	253
  7236  0167  0021               	movlb	1	; select bank1
  7237  0168  07C0               	addwf	efgtoa@w^(0+128),f
  7238  0169  30FF               	movlw	255
  7239  016A  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  7240                           
  7241                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 359:       
      +                            return pad(fp, &dbuf[0], w);
  7242  016B  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  7243  016C  0020               	movlb	0	; select bank0
  7244  016D  00D9               	movwf	??_efgtoa
  7245  016E  0859               	movf	??_efgtoa,w
  7246  016F  00A8               	movwf	pad@buf
  7247  0170  0021               	movlb	1	; select bank1
  7248  0171  0841               	movf	(efgtoa@w+1)^(0+128),w
  7249  0172  0020               	movlb	0	; select bank0
  7250  0173  00AA               	movwf	pad@p+1
  7251  0174  0021               	movlb	1	; select bank1
  7252  0175  0840               	movf	efgtoa@w^(0+128),w
  7253  0176  0020               	movlb	0	; select bank0
  7254  0177  00A9               	movwf	pad@p
  7255  0178  0021               	movlb	1	; select bank1
  7256  0179  083C               	movf	efgtoa@fp^(0+128),w
  7257  017A  3193  23A4         	fcall	_pad
  7258  017C  0020               	movlb	0	; select bank0
  7259  017D  0829               	movf	?_pad+1,w
  7260  017E  00D5               	movwf	?_efgtoa+1
  7261  017F  0828               	movf	?_pad,w
  7262  0180  00D4               	movwf	?_efgtoa
  7263  0181  0008               	return
  7264  0182                     l6554:	
  7265                           
  7266                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  7267  0182  303F               	movlw	63
  7268  0183  0021               	movlb	1	; select bank1
  7269  0184  00D8               	movwf	(efgtoa@u+3)^(0+128)
  7270  0185  3080               	movlw	128
  7271  0186  00D7               	movwf	(efgtoa@u+2)^(0+128)
  7272  0187  3000               	movlw	0
  7273  0188  00D6               	movwf	(efgtoa@u+1)^(0+128)
  7274  0189  3000               	movlw	0
  7275  018A  00D5               	movwf	efgtoa@u^(0+128)
  7276                           
  7277                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  7278  018B  01D1               	clrf	efgtoa@e^(0+128)
  7279  018C  01D2               	clrf	(efgtoa@e+1)^(0+128)
  7280                           
  7281                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  7282  018D  0850               	movf	(efgtoa@g+3)^(0+128),w
  7283  018E  00F4               	movwf	___fleq@ff1+3
  7284  018F  084F               	movf	(efgtoa@g+2)^(0+128),w
  7285  0190  00F3               	movwf	___fleq@ff1+2
  7286  0191  084E               	movf	(efgtoa@g+1)^(0+128),w
  7287  0192  00F2               	movwf	___fleq@ff1+1
  7288  0193  084D               	movf	efgtoa@g^(0+128),w
  7289  0194  00F1               	movwf	___fleq@ff1
  7290  0195  3000               	movlw	0
  7291  0196  00F8               	movwf	___fleq@ff2+3
  7292  0197  3000               	movlw	0
  7293  0198  00F7               	movwf	___fleq@ff2+2
  7294  0199  3000               	movlw	0
  7295  019A  00F6               	movwf	___fleq@ff2+1
  7296  019B  3000               	movlw	0
  7297  019C  00F5               	movwf	___fleq@ff2
  7298  019D  3193  230D  3180   	fcall	___fleq
  7299  01A0  1C03               	btfss	3,0
  7300  01A1  29D3               	goto	l6566
  7301  01A2  2A62               	goto	l6574
  7302  01A3                     l6562:	
  7303                           
  7304                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  7305  01A3  3041               	movlw	65
  7306  01A4  0020               	movlb	0	; select bank0
  7307  01A5  00A3               	movwf	___flmul@b+3
  7308  01A6  3020               	movlw	32
  7309  01A7  00A2               	movwf	___flmul@b+2
  7310  01A8  3000               	movlw	0
  7311  01A9  00A1               	movwf	___flmul@b+1
  7312  01AA  3000               	movlw	0
  7313  01AB  00A0               	movwf	___flmul@b
  7314  01AC  0021               	movlb	1	; select bank1
  7315  01AD  0858               	movf	(efgtoa@u+3)^(0+128),w
  7316  01AE  0020               	movlb	0	; select bank0
  7317  01AF  00A7               	movwf	___flmul@a+3
  7318  01B0  0021               	movlb	1	; select bank1
  7319  01B1  0857               	movf	(efgtoa@u+2)^(0+128),w
  7320  01B2  0020               	movlb	0	; select bank0
  7321  01B3  00A6               	movwf	___flmul@a+2
  7322  01B4  0021               	movlb	1	; select bank1
  7323  01B5  0856               	movf	(efgtoa@u+1)^(0+128),w
  7324  01B6  0020               	movlb	0	; select bank0
  7325  01B7  00A5               	movwf	___flmul@a+1
  7326  01B8  0021               	movlb	1	; select bank1
  7327  01B9  0855               	movf	efgtoa@u^(0+128),w
  7328  01BA  0020               	movlb	0	; select bank0
  7329  01BB  00A4               	movwf	___flmul@a
  7330  01BC  318D  25D4  3180   	fcall	___flmul
  7331  01BF  0020               	movlb	0	; select bank0
  7332  01C0  0823               	movf	?___flmul+3,w
  7333  01C1  0021               	movlb	1	; select bank1
  7334  01C2  00D8               	movwf	(efgtoa@u+3)^(0+128)
  7335  01C3  0020               	movlb	0	; select bank0
  7336  01C4  0822               	movf	?___flmul+2,w
  7337  01C5  0021               	movlb	1	; select bank1
  7338  01C6  00D7               	movwf	(efgtoa@u+2)^(0+128)
  7339  01C7  0020               	movlb	0	; select bank0
  7340  01C8  0821               	movf	?___flmul+1,w
  7341  01C9  0021               	movlb	1	; select bank1
  7342  01CA  00D6               	movwf	(efgtoa@u+1)^(0+128)
  7343  01CB  0020               	movlb	0	; select bank0
  7344  01CC  0820               	movf	?___flmul,w
  7345  01CD  0021               	movlb	1	; select bank1
  7346  01CE  00D5               	movwf	efgtoa@u^(0+128)
  7347                           
  7348                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  7349  01CF  3001               	movlw	1
  7350  01D0  07D1               	addwf	efgtoa@e^(0+128),f
  7351  01D1  3000               	movlw	0
  7352  01D2  3DD2               	addwfc	(efgtoa@e+1)^(0+128),f
  7353  01D3                     l6566:	
  7354                           
  7355                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  7356  01D3  0021               	movlb	1	; select bank1
  7357  01D4  0850               	movf	(efgtoa@g+3)^(0+128),w
  7358  01D5  0020               	movlb	0	; select bank0
  7359  01D6  00BD               	movwf	___flge@ff1+3
  7360  01D7  0021               	movlb	1	; select bank1
  7361  01D8  084F               	movf	(efgtoa@g+2)^(0+128),w
  7362  01D9  0020               	movlb	0	; select bank0
  7363  01DA  00BC               	movwf	___flge@ff1+2
  7364  01DB  0021               	movlb	1	; select bank1
  7365  01DC  084E               	movf	(efgtoa@g+1)^(0+128),w
  7366  01DD  0020               	movlb	0	; select bank0
  7367  01DE  00BB               	movwf	___flge@ff1+1
  7368  01DF  0021               	movlb	1	; select bank1
  7369  01E0  084D               	movf	efgtoa@g^(0+128),w
  7370  01E1  0020               	movlb	0	; select bank0
  7371  01E2  00BA               	movwf	___flge@ff1
  7372  01E3  3041               	movlw	65
  7373  01E4  00A3               	movwf	___flmul@b+3
  7374  01E5  3020               	movlw	32
  7375  01E6  00A2               	movwf	___flmul@b+2
  7376  01E7  3000               	movlw	0
  7377  01E8  00A1               	movwf	___flmul@b+1
  7378  01E9  3000               	movlw	0
  7379  01EA  00A0               	movwf	___flmul@b
  7380  01EB  0021               	movlb	1	; select bank1
  7381  01EC  0858               	movf	(efgtoa@u+3)^(0+128),w
  7382  01ED  0020               	movlb	0	; select bank0
  7383  01EE  00A7               	movwf	___flmul@a+3
  7384  01EF  0021               	movlb	1	; select bank1
  7385  01F0  0857               	movf	(efgtoa@u+2)^(0+128),w
  7386  01F1  0020               	movlb	0	; select bank0
  7387  01F2  00A6               	movwf	___flmul@a+2
  7388  01F3  0021               	movlb	1	; select bank1
  7389  01F4  0856               	movf	(efgtoa@u+1)^(0+128),w
  7390  01F5  0020               	movlb	0	; select bank0
  7391  01F6  00A5               	movwf	___flmul@a+1
  7392  01F7  0021               	movlb	1	; select bank1
  7393  01F8  0855               	movf	efgtoa@u^(0+128),w
  7394  01F9  0020               	movlb	0	; select bank0
  7395  01FA  00A4               	movwf	___flmul@a
  7396  01FB  318D  25D4  3180   	fcall	___flmul
  7397  01FE  0020               	movlb	0	; select bank0
  7398  01FF  0823               	movf	?___flmul+3,w
  7399  0200  00C1               	movwf	___flge@ff2+3
  7400  0201  0822               	movf	?___flmul+2,w
  7401  0202  00C0               	movwf	___flge@ff2+2
  7402  0203  0821               	movf	?___flmul+1,w
  7403  0204  00BF               	movwf	___flge@ff2+1
  7404  0205  0820               	movf	?___flmul,w
  7405  0206  00BE               	movwf	___flge@ff2
  7406  0207  3195  2574  3180   	fcall	___flge
  7407  020A  1C03               	btfss	3,0
  7408  020B  2A3D               	goto	l6572
  7409  020C  29A3               	goto	l6562
  7410  020D                     l6568:	
  7411                           
  7412                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  7413  020D  3041               	movlw	65
  7414  020E  0020               	movlb	0	; select bank0
  7415  020F  00A9               	movwf	___fldiv@a+3
  7416  0210  3020               	movlw	32
  7417  0211  00A8               	movwf	___fldiv@a+2
  7418  0212  3000               	movlw	0
  7419  0213  00A7               	movwf	___fldiv@a+1
  7420  0214  3000               	movlw	0
  7421  0215  00A6               	movwf	___fldiv@a
  7422  0216  0021               	movlb	1	; select bank1
  7423  0217  0858               	movf	(efgtoa@u+3)^(0+128),w
  7424  0218  0020               	movlb	0	; select bank0
  7425  0219  00AD               	movwf	___fldiv@b+3
  7426  021A  0021               	movlb	1	; select bank1
  7427  021B  0857               	movf	(efgtoa@u+2)^(0+128),w
  7428  021C  0020               	movlb	0	; select bank0
  7429  021D  00AC               	movwf	___fldiv@b+2
  7430  021E  0021               	movlb	1	; select bank1
  7431  021F  0856               	movf	(efgtoa@u+1)^(0+128),w
  7432  0220  0020               	movlb	0	; select bank0
  7433  0221  00AB               	movwf	___fldiv@b+1
  7434  0222  0021               	movlb	1	; select bank1
  7435  0223  0855               	movf	efgtoa@u^(0+128),w
  7436  0224  0020               	movlb	0	; select bank0
  7437  0225  00AA               	movwf	___fldiv@b
  7438  0226  3196  2686  3180   	fcall	___fldiv
  7439  0229  0020               	movlb	0	; select bank0
  7440  022A  0829               	movf	?___fldiv+3,w
  7441  022B  0021               	movlb	1	; select bank1
  7442  022C  00D8               	movwf	(efgtoa@u+3)^(0+128)
  7443  022D  0020               	movlb	0	; select bank0
  7444  022E  0828               	movf	?___fldiv+2,w
  7445  022F  0021               	movlb	1	; select bank1
  7446  0230  00D7               	movwf	(efgtoa@u+2)^(0+128)
  7447  0231  0020               	movlb	0	; select bank0
  7448  0232  0827               	movf	?___fldiv+1,w
  7449  0233  0021               	movlb	1	; select bank1
  7450  0234  00D6               	movwf	(efgtoa@u+1)^(0+128)
  7451  0235  0020               	movlb	0	; select bank0
  7452  0236  0826               	movf	?___fldiv,w
  7453  0237  0021               	movlb	1	; select bank1
  7454  0238  00D5               	movwf	efgtoa@u^(0+128)
  7455                           
  7456                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  7457  0239  30FF               	movlw	255
  7458  023A  07D1               	addwf	efgtoa@e^(0+128),f
  7459  023B  30FF               	movlw	255
  7460  023C  3DD2               	addwfc	(efgtoa@e+1)^(0+128),f
  7461  023D                     l6572:	
  7462                           
  7463                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  7464  023D  0021               	movlb	1	; select bank1
  7465  023E  0850               	movf	(efgtoa@g+3)^(0+128),w
  7466  023F  0020               	movlb	0	; select bank0
  7467  0240  00BD               	movwf	___flge@ff1+3
  7468  0241  0021               	movlb	1	; select bank1
  7469  0242  084F               	movf	(efgtoa@g+2)^(0+128),w
  7470  0243  0020               	movlb	0	; select bank0
  7471  0244  00BC               	movwf	___flge@ff1+2
  7472  0245  0021               	movlb	1	; select bank1
  7473  0246  084E               	movf	(efgtoa@g+1)^(0+128),w
  7474  0247  0020               	movlb	0	; select bank0
  7475  0248  00BB               	movwf	___flge@ff1+1
  7476  0249  0021               	movlb	1	; select bank1
  7477  024A  084D               	movf	efgtoa@g^(0+128),w
  7478  024B  0020               	movlb	0	; select bank0
  7479  024C  00BA               	movwf	___flge@ff1
  7480  024D  0021               	movlb	1	; select bank1
  7481  024E  0858               	movf	(efgtoa@u+3)^(0+128),w
  7482  024F  0020               	movlb	0	; select bank0
  7483  0250  00C1               	movwf	___flge@ff2+3
  7484  0251  0021               	movlb	1	; select bank1
  7485  0252  0857               	movf	(efgtoa@u+2)^(0+128),w
  7486  0253  0020               	movlb	0	; select bank0
  7487  0254  00C0               	movwf	___flge@ff2+2
  7488  0255  0021               	movlb	1	; select bank1
  7489  0256  0856               	movf	(efgtoa@u+1)^(0+128),w
  7490  0257  0020               	movlb	0	; select bank0
  7491  0258  00BF               	movwf	___flge@ff2+1
  7492  0259  0021               	movlb	1	; select bank1
  7493  025A  0855               	movf	efgtoa@u^(0+128),w
  7494  025B  0020               	movlb	0	; select bank0
  7495  025C  00BE               	movwf	___flge@ff2
  7496  025D  3195  2574  3180   	fcall	___flge
  7497  0260  1C03               	btfss	3,0
  7498  0261  2A0D               	goto	l6568
  7499  0262                     l6574:	
  7500                           
  7501                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  7502  0262  0020               	movlb	0	; select bank0
  7503  0263  0858               	movf	efgtoa@c,w
  7504  0264  00D9               	movwf	??_efgtoa
  7505  0265  01DA               	clrf	??_efgtoa+1
  7506  0266  0859               	movf	??_efgtoa,w
  7507  0267  00F7               	movwf	tolower@c
  7508  0268  085A               	movf	??_efgtoa+1,w
  7509  0269  00F8               	movwf	tolower@c+1
  7510  026A  319F  2794  3180   	fcall	_tolower
  7511  026D  0877               	movf	?_tolower,w
  7512  026E  0020               	movlb	0	; select bank0
  7513  026F  00DB               	movwf	??_efgtoa+2
  7514  0270  085B               	movf	??_efgtoa+2,w
  7515  0271  0021               	movlb	1	; select bank1
  7516  0272  00C2               	movwf	efgtoa@mode^(0+128)
  7517                           
  7518                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  7519  0273  0842               	movf	efgtoa@mode^(0+128),w
  7520  0274  0020               	movlb	0	; select bank0
  7521  0275  00D9               	movwf	??_efgtoa
  7522  0276  0859               	movf	??_efgtoa,w
  7523  0277  0021               	movlb	1	; select bank1
  7524  0278  00BF               	movwf	efgtoa@nmode^(0+128)
  7525                           
  7526                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  7527  0279  3067               	movlw	103
  7528  027A  0642               	xorwf	efgtoa@mode^(0+128),w
  7529  027B  1D03               	btfss	3,2
  7530  027C  2A99               	goto	l1086
  7531                           
  7532                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  7533  027D  0022               	movlb	2	; select bank2
  7534  027E  085B               	movf	_prec^(0+256),w
  7535  027F  045C               	iorwf	(_prec+1)^(0+256),w
  7536  0280  1D03               	btfss	3,2
  7537  0281  2A86               	goto	l1087
  7538                           
  7539                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  7540  0282  3001               	movlw	1
  7541  0283  00DB               	movwf	_prec^(0+256)
  7542  0284  3000               	movlw	0
  7543  0285  00DC               	movwf	(_prec^(0+256)+1)
  7544  0286                     l1087:	
  7545                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 382:   }
  7546                           
  7547                           
  7548                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  7549  0286  085C               	movf	(_prec+1)^(0+256),w
  7550  0287  3A80               	xorlw	128
  7551  0288  0020               	movlb	0	; select bank0
  7552  0289  00D9               	movwf	??_efgtoa
  7553  028A  3080               	movlw	128
  7554  028B  0259               	subwf	??_efgtoa,w
  7555  028C  1D03               	skipz
  7556  028D  2A91               	goto	u6985
  7557  028E  3001               	movlw	1
  7558  028F  0022               	movlb	2	; select bank2
  7559  0290  025B               	subwf	_prec^(0+256),w
  7560  0291                     u6985:	
  7561  0291  1803               	skipnc
  7562  0292  2A9C               	goto	l6586
  7563  0293                     l6584:	
  7564  0293  3006               	movlw	6
  7565  0294  0021               	movlb	1	; select bank1
  7566  0295  00BD               	movwf	efgtoa@p^(0+128)
  7567  0296  3000               	movlw	0
  7568  0297  00BE               	movwf	(efgtoa@p^(0+128)+1)
  7569  0298  2AA4               	goto	l6592
  7570  0299                     l1086:	
  7571                           
  7572                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  7573  0299  0022               	movlb	2	; select bank2
  7574  029A  1BDC               	btfsc	(_prec+1)^(0+256),7
  7575  029B  2A93               	goto	l6584
  7576  029C                     l6586:	
  7577  029C  0022               	movlb	2	; select bank2
  7578  029D  085C               	movf	(_prec+1)^(0+256),w
  7579  029E  0021               	movlb	1	; select bank1
  7580  029F  00BE               	movwf	(efgtoa@p+1)^(0+128)
  7581  02A0  0022               	movlb	2	; select bank2
  7582  02A1  085B               	movf	_prec^(0+256),w
  7583  02A2  0021               	movlb	1	; select bank1
  7584  02A3  00BD               	movwf	efgtoa@p^(0+128)
  7585  02A4                     l6592:	
  7586                           
  7587                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  7588  02A4  3067               	movlw	103
  7589  02A5  0642               	xorwf	efgtoa@mode^(0+128),w
  7590  02A6  1D03               	btfss	3,2
  7591  02A7  2AD7               	goto	l1097
  7592                           
  7593                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  7594  02A8  0852               	movf	(efgtoa@e+1)^(0+128),w
  7595  02A9  3A80               	xorlw	128
  7596  02AA  0020               	movlb	0	; select bank0
  7597  02AB  00D9               	movwf	??_efgtoa
  7598  02AC  307F               	movlw	127
  7599  02AD  0259               	subwf	??_efgtoa,w
  7600  02AE  1D03               	skipz
  7601  02AF  2AB3               	goto	u7015
  7602  02B0  30FC               	movlw	252
  7603  02B1  0021               	movlb	1	; select bank1
  7604  02B2  0251               	subwf	efgtoa@e^(0+128),w
  7605  02B3                     u7015:	
  7606  02B3  1C03               	skipc
  7607  02B4  2AD1               	goto	l6600
  7608  02B5  0021               	movlb	1	; select bank1
  7609  02B6  083D               	movf	efgtoa@p^(0+128),w
  7610  02B7  3EFF               	addlw	255
  7611  02B8  0020               	movlb	0	; select bank0
  7612  02B9  00D9               	movwf	??_efgtoa
  7613  02BA  30FF               	movlw	255
  7614  02BB  0021               	movlb	1	; select bank1
  7615  02BC  3D3E               	addwfc	(efgtoa@p+1)^(0+128),w
  7616  02BD  0020               	movlb	0	; select bank0
  7617  02BE  00DA               	movwf	??_efgtoa+1
  7618  02BF  085A               	movf	??_efgtoa+1,w
  7619  02C0  3A80               	xorlw	128
  7620  02C1  00DB               	movwf	??_efgtoa+2
  7621  02C2  0021               	movlb	1	; select bank1
  7622  02C3  0852               	movf	(efgtoa@e+1)^(0+128),w
  7623  02C4  3A80               	xorlw	128
  7624  02C5  0020               	movlb	0	; select bank0
  7625  02C6  025B               	subwf	??_efgtoa+2,w
  7626  02C7  1D03               	skipz
  7627  02C8  2ACD               	goto	u7025
  7628  02C9  0021               	movlb	1	; select bank1
  7629  02CA  0851               	movf	efgtoa@e^(0+128),w
  7630  02CB  0020               	movlb	0	; select bank0
  7631  02CC  0259               	subwf	??_efgtoa,w
  7632  02CD                     u7025:	
  7633  02CD  1C03               	skipc
  7634  02CE  2AD1               	goto	l6600
  7635                           
  7636                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  7637  02CF  3066               	movlw	102
  7638  02D0  2AD2               	goto	L5
  7639  02D1                     l6600:	
  7640                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  7641                           
  7642                           
  7643                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  7644  02D1  3065               	movlw	101
  7645  02D2                     L5:	
  7646  02D2  0020               	movlb	0	; select bank0
  7647  02D3  00D9               	movwf	??_efgtoa
  7648  02D4  0859               	movf	??_efgtoa,w
  7649  02D5  0021               	movlb	1	; select bank1
  7650  02D6  00BF               	movwf	efgtoa@nmode^(0+128)
  7651  02D7                     l1097:	
  7652                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 395:     }
  7653                           
  7654                           
  7655                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  7656  02D7  083E               	movf	(efgtoa@p+1)^(0+128),w
  7657  02D8  00B5               	movwf	(efgtoa@m+1)^(0+128)
  7658  02D9  083D               	movf	efgtoa@p^(0+128),w
  7659  02DA  00B4               	movwf	efgtoa@m^(0+128)
  7660                           
  7661                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  7662  02DB  3067               	movlw	103
  7663  02DC  0642               	xorwf	efgtoa@mode^(0+128),w
  7664  02DD  1D03               	btfss	3,2
  7665  02DE  2AE4               	goto	l6608
  7666  02DF  3066               	movlw	102
  7667  02E0  063F               	xorwf	efgtoa@nmode^(0+128),w
  7668  02E1  1903               	btfsc	3,2
  7669  02E2  1FD2               	btfss	(efgtoa@e+1)^(0+128),7
  7670  02E3  2AE8               	goto	l6610
  7671  02E4                     l6608:	
  7672                           
  7673                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  7674  02E4  3001               	movlw	1
  7675  02E5  07B4               	addwf	efgtoa@m^(0+128),f
  7676  02E6  3000               	movlw	0
  7677  02E7  3DB5               	addwfc	(efgtoa@m+1)^(0+128),f
  7678  02E8                     l6610:	
  7679                           
  7680                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  7681  02E8  3066               	movlw	102
  7682  02E9  063F               	xorwf	efgtoa@nmode^(0+128),w
  7683  02EA  1D03               	btfss	3,2
  7684  02EB  2B00               	goto	l6622
  7685                           
  7686                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  7687  02EC  1FD2               	btfss	(efgtoa@e+1)^(0+128),7
  7688  02ED  2AF8               	goto	l6618
  7689                           
  7690                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  7691  02EE  303F               	movlw	63
  7692  02EF  00D8               	movwf	(efgtoa@u+3)^(0+128)
  7693  02F0  3080               	movlw	128
  7694  02F1  00D7               	movwf	(efgtoa@u+2)^(0+128)
  7695  02F2  3000               	movlw	0
  7696  02F3  00D6               	movwf	(efgtoa@u+1)^(0+128)
  7697  02F4  3000               	movlw	0
  7698  02F5  00D5               	movwf	efgtoa@u^(0+128)
  7699                           
  7700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  7701  02F6  01D1               	clrf	efgtoa@e^(0+128)
  7702  02F7  01D2               	clrf	(efgtoa@e+1)^(0+128)
  7703  02F8                     l6618:	
  7704                           
  7705                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  7706  02F8  3067               	movlw	103
  7707  02F9  0642               	xorwf	efgtoa@mode^(0+128),w
  7708  02FA  1903               	btfsc	3,2
  7709  02FB  2B00               	goto	l6622
  7710                           
  7711                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  7712  02FC  0851               	movf	efgtoa@e^(0+128),w
  7713  02FD  07B4               	addwf	efgtoa@m^(0+128),f
  7714  02FE  0852               	movf	(efgtoa@e+1)^(0+128),w
  7715  02FF  3DB5               	addwfc	(efgtoa@m+1)^(0+128),f
  7716  0300                     l6622:	
  7717                           
  7718                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  7719  0300  01CB               	clrf	efgtoa@i^(0+128)
  7720  0301  01CC               	clrf	(efgtoa@i+1)^(0+128)
  7721                           
  7722                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  7723  0302  0850               	movf	(efgtoa@g+3)^(0+128),w
  7724  0303  00C6               	movwf	(efgtoa@h+3)^(0+128)
  7725  0304  084F               	movf	(efgtoa@g+2)^(0+128),w
  7726  0305  00C5               	movwf	(efgtoa@h+2)^(0+128)
  7727  0306  084E               	movf	(efgtoa@g+1)^(0+128),w
  7728  0307  00C4               	movwf	(efgtoa@h+1)^(0+128)
  7729  0308  084D               	movf	efgtoa@g^(0+128),w
  7730  0309  00C3               	movwf	efgtoa@h^(0+128)
  7731                           
  7732                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  7733  030A  0858               	movf	(efgtoa@u+3)^(0+128),w
  7734  030B  00A3               	movwf	(efgtoa@ou+3)^(0+128)
  7735  030C  0857               	movf	(efgtoa@u+2)^(0+128),w
  7736  030D  00A2               	movwf	(efgtoa@ou+2)^(0+128)
  7737  030E  0856               	movf	(efgtoa@u+1)^(0+128),w
  7738  030F  00A1               	movwf	(efgtoa@ou+1)^(0+128)
  7739  0310  0855               	movf	efgtoa@u^(0+128),w
  7740  0311  00A0               	movwf	efgtoa@ou^(0+128)
  7741  0312                     l6632:	
  7742                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  7743                           
  7744                           
  7745                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  7746  0312  084C               	movf	(efgtoa@i+1)^(0+128),w
  7747  0313  3A80               	xorlw	128
  7748  0314  0020               	movlb	0	; select bank0
  7749  0315  00D9               	movwf	??_efgtoa
  7750  0316  0021               	movlb	1	; select bank1
  7751  0317  0835               	movf	(efgtoa@m+1)^(0+128),w
  7752  0318  3A80               	xorlw	128
  7753  0319  0020               	movlb	0	; select bank0
  7754  031A  0259               	subwf	??_efgtoa,w
  7755  031B  1D03               	skipz
  7756  031C  2B20               	goto	u7095
  7757  031D  0021               	movlb	1	; select bank1
  7758  031E  0834               	movf	efgtoa@m^(0+128),w
  7759  031F  024B               	subwf	efgtoa@i^(0+128),w
  7760  0320                     u7095:	
  7761  0320  1803               	btfsc	3,0
  7762  0321  2BF0               	goto	l6634
  7763                           
  7764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  7765  0322  0021               	movlb	1	; select bank1
  7766  0323  0858               	movf	(efgtoa@u+3)^(0+128),w
  7767  0324  0020               	movlb	0	; select bank0
  7768  0325  00A9               	movwf	___fldiv@a+3
  7769  0326  0021               	movlb	1	; select bank1
  7770  0327  0857               	movf	(efgtoa@u+2)^(0+128),w
  7771  0328  0020               	movlb	0	; select bank0
  7772  0329  00A8               	movwf	___fldiv@a+2
  7773  032A  0021               	movlb	1	; select bank1
  7774  032B  0856               	movf	(efgtoa@u+1)^(0+128),w
  7775  032C  0020               	movlb	0	; select bank0
  7776  032D  00A7               	movwf	___fldiv@a+1
  7777  032E  0021               	movlb	1	; select bank1
  7778  032F  0855               	movf	efgtoa@u^(0+128),w
  7779  0330  0020               	movlb	0	; select bank0
  7780  0331  00A6               	movwf	___fldiv@a
  7781  0332  0021               	movlb	1	; select bank1
  7782  0333  0846               	movf	(efgtoa@h+3)^(0+128),w
  7783  0334  0020               	movlb	0	; select bank0
  7784  0335  00AD               	movwf	___fldiv@b+3
  7785  0336  0021               	movlb	1	; select bank1
  7786  0337  0845               	movf	(efgtoa@h+2)^(0+128),w
  7787  0338  0020               	movlb	0	; select bank0
  7788  0339  00AC               	movwf	___fldiv@b+2
  7789  033A  0021               	movlb	1	; select bank1
  7790  033B  0844               	movf	(efgtoa@h+1)^(0+128),w
  7791  033C  0020               	movlb	0	; select bank0
  7792  033D  00AB               	movwf	___fldiv@b+1
  7793  033E  0021               	movlb	1	; select bank1
  7794  033F  0843               	movf	efgtoa@h^(0+128),w
  7795  0340  0020               	movlb	0	; select bank0
  7796  0341  00AA               	movwf	___fldiv@b
  7797  0342  3196  2686  3180   	fcall	___fldiv
  7798  0345  0020               	movlb	0	; select bank0
  7799  0346  0829               	movf	?___fldiv+3,w
  7800  0347  00C3               	movwf	floorf@x+3
  7801  0348  0828               	movf	?___fldiv+2,w
  7802  0349  00C2               	movwf	floorf@x+2
  7803  034A  0827               	movf	?___fldiv+1,w
  7804  034B  00C1               	movwf	floorf@x+1
  7805  034C  0826               	movf	?___fldiv,w
  7806  034D  00C0               	movwf	floorf@x
  7807  034E  3186  26F1  3180   	fcall	_floorf
  7808  0351  0020               	movlb	0	; select bank0
  7809  0352  0843               	movf	?_floorf+3,w
  7810  0353  0021               	movlb	1	; select bank1
  7811  0354  00CA               	movwf	(efgtoa@l+3)^(0+128)
  7812  0355  0020               	movlb	0	; select bank0
  7813  0356  0842               	movf	?_floorf+2,w
  7814  0357  0021               	movlb	1	; select bank1
  7815  0358  00C9               	movwf	(efgtoa@l+2)^(0+128)
  7816  0359  0020               	movlb	0	; select bank0
  7817  035A  0841               	movf	?_floorf+1,w
  7818  035B  0021               	movlb	1	; select bank1
  7819  035C  00C8               	movwf	(efgtoa@l+1)^(0+128)
  7820  035D  0020               	movlb	0	; select bank0
  7821  035E  0840               	movf	?_floorf,w
  7822  035F  0021               	movlb	1	; select bank1
  7823  0360  00C7               	movwf	efgtoa@l^(0+128)
  7824                           
  7825                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  7826  0361  084A               	movf	(efgtoa@l+3)^(0+128),w
  7827  0362  00F4               	movwf	___fltol@f1+3
  7828  0363  0849               	movf	(efgtoa@l+2)^(0+128),w
  7829  0364  00F3               	movwf	___fltol@f1+2
  7830  0365  0848               	movf	(efgtoa@l+1)^(0+128),w
  7831  0366  00F2               	movwf	___fltol@f1+1
  7832  0367  0847               	movf	efgtoa@l^(0+128),w
  7833  0368  00F1               	movwf	___fltol@f1
  7834  0369  3194  2497  3180   	fcall	___fltol
  7835  036C  0872               	movf	?___fltol+1,w
  7836  036D  0021               	movlb	1	; select bank1
  7837  036E  00B9               	movwf	(efgtoa@d+1)^(0+128)
  7838  036F  0871               	movf	?___fltol,w
  7839  0370  00B8               	movwf	efgtoa@d^(0+128)
  7840                           
  7841                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  7842  0371  084A               	movf	(efgtoa@l+3)^(0+128),w
  7843  0372  0020               	movlb	0	; select bank0
  7844  0373  00A7               	movwf	___flmul@a+3
  7845  0374  0021               	movlb	1	; select bank1
  7846  0375  0849               	movf	(efgtoa@l+2)^(0+128),w
  7847  0376  0020               	movlb	0	; select bank0
  7848  0377  00A6               	movwf	___flmul@a+2
  7849  0378  0021               	movlb	1	; select bank1
  7850  0379  0848               	movf	(efgtoa@l+1)^(0+128),w
  7851  037A  0020               	movlb	0	; select bank0
  7852  037B  00A5               	movwf	___flmul@a+1
  7853  037C  0021               	movlb	1	; select bank1
  7854  037D  0847               	movf	efgtoa@l^(0+128),w
  7855  037E  0020               	movlb	0	; select bank0
  7856  037F  00A4               	movwf	___flmul@a
  7857  0380  0021               	movlb	1	; select bank1
  7858  0381  0858               	movf	(efgtoa@u+3)^(0+128),w
  7859  0382  0020               	movlb	0	; select bank0
  7860  0383  00A3               	movwf	___flmul@b+3
  7861  0384  0021               	movlb	1	; select bank1
  7862  0385  0857               	movf	(efgtoa@u+2)^(0+128),w
  7863  0386  0020               	movlb	0	; select bank0
  7864  0387  00A2               	movwf	___flmul@b+2
  7865  0388  0021               	movlb	1	; select bank1
  7866  0389  0856               	movf	(efgtoa@u+1)^(0+128),w
  7867  038A  0020               	movlb	0	; select bank0
  7868  038B  00A1               	movwf	___flmul@b+1
  7869  038C  0021               	movlb	1	; select bank1
  7870  038D  0855               	movf	efgtoa@u^(0+128),w
  7871  038E  0020               	movlb	0	; select bank0
  7872  038F  00A0               	movwf	___flmul@b
  7873  0390  318D  25D4  3180   	fcall	___flmul
  7874  0393  0020               	movlb	0	; select bank0
  7875  0394  0823               	movf	?___flmul+3,w
  7876  0395  00BD               	movwf	___flsub@a+3
  7877  0396  0822               	movf	?___flmul+2,w
  7878  0397  00BC               	movwf	___flsub@a+2
  7879  0398  0821               	movf	?___flmul+1,w
  7880  0399  00BB               	movwf	___flsub@a+1
  7881  039A  0820               	movf	?___flmul,w
  7882  039B  00BA               	movwf	___flsub@a
  7883  039C  0021               	movlb	1	; select bank1
  7884  039D  0846               	movf	(efgtoa@h+3)^(0+128),w
  7885  039E  0020               	movlb	0	; select bank0
  7886  039F  00C1               	movwf	___flsub@b+3
  7887  03A0  0021               	movlb	1	; select bank1
  7888  03A1  0845               	movf	(efgtoa@h+2)^(0+128),w
  7889  03A2  0020               	movlb	0	; select bank0
  7890  03A3  00C0               	movwf	___flsub@b+2
  7891  03A4  0021               	movlb	1	; select bank1
  7892  03A5  0844               	movf	(efgtoa@h+1)^(0+128),w
  7893  03A6  0020               	movlb	0	; select bank0
  7894  03A7  00BF               	movwf	___flsub@b+1
  7895  03A8  0021               	movlb	1	; select bank1
  7896  03A9  0843               	movf	efgtoa@h^(0+128),w
  7897  03AA  0020               	movlb	0	; select bank0
  7898  03AB  00BE               	movwf	___flsub@b
  7899  03AC  319F  2756  3180   	fcall	___flsub
  7900  03AF  0020               	movlb	0	; select bank0
  7901  03B0  083D               	movf	?___flsub+3,w
  7902  03B1  0021               	movlb	1	; select bank1
  7903  03B2  00C6               	movwf	(efgtoa@h+3)^(0+128)
  7904  03B3  0020               	movlb	0	; select bank0
  7905  03B4  083C               	movf	?___flsub+2,w
  7906  03B5  0021               	movlb	1	; select bank1
  7907  03B6  00C5               	movwf	(efgtoa@h+2)^(0+128)
  7908  03B7  0020               	movlb	0	; select bank0
  7909  03B8  083B               	movf	?___flsub+1,w
  7910  03B9  0021               	movlb	1	; select bank1
  7911  03BA  00C4               	movwf	(efgtoa@h+1)^(0+128)
  7912  03BB  0020               	movlb	0	; select bank0
  7913  03BC  083A               	movf	?___flsub,w
  7914  03BD  0021               	movlb	1	; select bank1
  7915  03BE  00C3               	movwf	efgtoa@h^(0+128)
  7916                           
  7917                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  7918  03BF  3041               	movlw	65
  7919  03C0  0020               	movlb	0	; select bank0
  7920  03C1  00A9               	movwf	___fldiv@a+3
  7921  03C2  3020               	movlw	32
  7922  03C3  00A8               	movwf	___fldiv@a+2
  7923  03C4  3000               	movlw	0
  7924  03C5  00A7               	movwf	___fldiv@a+1
  7925  03C6  3000               	movlw	0
  7926  03C7  00A6               	movwf	___fldiv@a
  7927  03C8  0021               	movlb	1	; select bank1
  7928  03C9  0858               	movf	(efgtoa@u+3)^(0+128),w
  7929  03CA  0020               	movlb	0	; select bank0
  7930  03CB  00AD               	movwf	___fldiv@b+3
  7931  03CC  0021               	movlb	1	; select bank1
  7932  03CD  0857               	movf	(efgtoa@u+2)^(0+128),w
  7933  03CE  0020               	movlb	0	; select bank0
  7934  03CF  00AC               	movwf	___fldiv@b+2
  7935  03D0  0021               	movlb	1	; select bank1
  7936  03D1  0856               	movf	(efgtoa@u+1)^(0+128),w
  7937  03D2  0020               	movlb	0	; select bank0
  7938  03D3  00AB               	movwf	___fldiv@b+1
  7939  03D4  0021               	movlb	1	; select bank1
  7940  03D5  0855               	movf	efgtoa@u^(0+128),w
  7941  03D6  0020               	movlb	0	; select bank0
  7942  03D7  00AA               	movwf	___fldiv@b
  7943  03D8  3196  2686  3180   	fcall	___fldiv
  7944  03DB  0020               	movlb	0	; select bank0
  7945  03DC  0829               	movf	?___fldiv+3,w
  7946  03DD  0021               	movlb	1	; select bank1
  7947  03DE  00D8               	movwf	(efgtoa@u+3)^(0+128)
  7948  03DF  0020               	movlb	0	; select bank0
  7949  03E0  0828               	movf	?___fldiv+2,w
  7950  03E1  0021               	movlb	1	; select bank1
  7951  03E2  00D7               	movwf	(efgtoa@u+2)^(0+128)
  7952  03E3  0020               	movlb	0	; select bank0
  7953  03E4  0827               	movf	?___fldiv+1,w
  7954  03E5  0021               	movlb	1	; select bank1
  7955  03E6  00D6               	movwf	(efgtoa@u+1)^(0+128)
  7956  03E7  0020               	movlb	0	; select bank0
  7957  03E8  0826               	movf	?___fldiv,w
  7958  03E9  0021               	movlb	1	; select bank1
  7959  03EA  00D5               	movwf	efgtoa@u^(0+128)
  7960                           
  7961                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  7962  03EB  3001               	movlw	1
  7963  03EC  07CB               	addwf	efgtoa@i^(0+128),f
  7964  03ED  3000               	movlw	0
  7965  03EE  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  7966  03EF  2B12               	goto	l6632
  7967  03F0                     l6634:	
  7968                           
  7969                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  7970  03F0  3040               	movlw	64
  7971  03F1  0020               	movlb	0	; select bank0
  7972  03F2  00A3               	movwf	___flmul@b+3
  7973  03F3  30A0               	movlw	160
  7974  03F4  00A2               	movwf	___flmul@b+2
  7975  03F5  3000               	movlw	0
  7976  03F6  00A1               	movwf	___flmul@b+1
  7977  03F7  3000               	movlw	0
  7978  03F8  00A0               	movwf	___flmul@b
  7979  03F9  0021               	movlb	1	; select bank1
  7980  03FA  0858               	movf	(efgtoa@u+3)^(0+128),w
  7981  03FB  0020               	movlb	0	; select bank0
  7982  03FC  00A7               	movwf	___flmul@a+3
  7983  03FD  0021               	movlb	1	; select bank1
  7984  03FE  0857               	movf	(efgtoa@u+2)^(0+128),w
  7985  03FF  0020               	movlb	0	; select bank0
  7986  0400  00A6               	movwf	___flmul@a+2
  7987  0401  0021               	movlb	1	; select bank1
  7988  0402  0856               	movf	(efgtoa@u+1)^(0+128),w
  7989  0403  0020               	movlb	0	; select bank0
  7990  0404  00A5               	movwf	___flmul@a+1
  7991  0405  0021               	movlb	1	; select bank1
  7992  0406  0855               	movf	efgtoa@u^(0+128),w
  7993  0407  0020               	movlb	0	; select bank0
  7994  0408  00A4               	movwf	___flmul@a
  7995  0409  318D  25D4  3180   	fcall	___flmul
  7996  040C  0020               	movlb	0	; select bank0
  7997  040D  0823               	movf	?___flmul+3,w
  7998  040E  0021               	movlb	1	; select bank1
  7999  040F  00CA               	movwf	(efgtoa@l+3)^(0+128)
  8000  0410  0020               	movlb	0	; select bank0
  8001  0411  0822               	movf	?___flmul+2,w
  8002  0412  0021               	movlb	1	; select bank1
  8003  0413  00C9               	movwf	(efgtoa@l+2)^(0+128)
  8004  0414  0020               	movlb	0	; select bank0
  8005  0415  0821               	movf	?___flmul+1,w
  8006  0416  0021               	movlb	1	; select bank1
  8007  0417  00C8               	movwf	(efgtoa@l+1)^(0+128)
  8008  0418  0020               	movlb	0	; select bank0
  8009  0419  0820               	movf	?___flmul,w
  8010  041A  0021               	movlb	1	; select bank1
  8011  041B  00C7               	movwf	efgtoa@l^(0+128)
  8012                           
  8013                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  8014  041C  0846               	movf	(efgtoa@h+3)^(0+128),w
  8015  041D  0020               	movlb	0	; select bank0
  8016  041E  00BD               	movwf	___flge@ff1+3
  8017  041F  0021               	movlb	1	; select bank1
  8018  0420  0845               	movf	(efgtoa@h+2)^(0+128),w
  8019  0421  0020               	movlb	0	; select bank0
  8020  0422  00BC               	movwf	___flge@ff1+2
  8021  0423  0021               	movlb	1	; select bank1
  8022  0424  0844               	movf	(efgtoa@h+1)^(0+128),w
  8023  0425  0020               	movlb	0	; select bank0
  8024  0426  00BB               	movwf	___flge@ff1+1
  8025  0427  0021               	movlb	1	; select bank1
  8026  0428  0843               	movf	efgtoa@h^(0+128),w
  8027  0429  0020               	movlb	0	; select bank0
  8028  042A  00BA               	movwf	___flge@ff1
  8029  042B  0021               	movlb	1	; select bank1
  8030  042C  084A               	movf	(efgtoa@l+3)^(0+128),w
  8031  042D  0020               	movlb	0	; select bank0
  8032  042E  00C1               	movwf	___flge@ff2+3
  8033  042F  0021               	movlb	1	; select bank1
  8034  0430  0849               	movf	(efgtoa@l+2)^(0+128),w
  8035  0431  0020               	movlb	0	; select bank0
  8036  0432  00C0               	movwf	___flge@ff2+2
  8037  0433  0021               	movlb	1	; select bank1
  8038  0434  0848               	movf	(efgtoa@l+1)^(0+128),w
  8039  0435  0020               	movlb	0	; select bank0
  8040  0436  00BF               	movwf	___flge@ff2+1
  8041  0437  0021               	movlb	1	; select bank1
  8042  0438  0847               	movf	efgtoa@l^(0+128),w
  8043  0439  0020               	movlb	0	; select bank0
  8044  043A  00BE               	movwf	___flge@ff2
  8045  043B  3195  2574  3180   	fcall	___flge
  8046  043E  1803               	btfsc	3,0
  8047  043F  2C43               	goto	l6638
  8048                           
  8049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  8050  0440  3000               	movlw	0
  8051  0441  0021               	movlb	1	; select bank1
  8052  0442  2C5D               	goto	L6
  8053  0443                     l6638:	
  8054                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  8055                           
  8056                           
  8057                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  8058  0443  0021               	movlb	1	; select bank1
  8059  0444  0846               	movf	(efgtoa@h+3)^(0+128),w
  8060  0445  00F4               	movwf	___fleq@ff1+3
  8061  0446  0845               	movf	(efgtoa@h+2)^(0+128),w
  8062  0447  00F3               	movwf	___fleq@ff1+2
  8063  0448  0844               	movf	(efgtoa@h+1)^(0+128),w
  8064  0449  00F2               	movwf	___fleq@ff1+1
  8065  044A  0843               	movf	efgtoa@h^(0+128),w
  8066  044B  00F1               	movwf	___fleq@ff1
  8067  044C  084A               	movf	(efgtoa@l+3)^(0+128),w
  8068  044D  00F8               	movwf	___fleq@ff2+3
  8069  044E  0849               	movf	(efgtoa@l+2)^(0+128),w
  8070  044F  00F7               	movwf	___fleq@ff2+2
  8071  0450  0848               	movf	(efgtoa@l+1)^(0+128),w
  8072  0451  00F6               	movwf	___fleq@ff2+1
  8073  0452  0847               	movf	efgtoa@l^(0+128),w
  8074  0453  00F5               	movwf	___fleq@ff2
  8075  0454  3193  230D  3180   	fcall	___fleq
  8076  0457  1C03               	btfss	3,0
  8077  0458  2C64               	goto	l6644
  8078  0459  0021               	movlb	1	; select bank1
  8079  045A  1838               	btfsc	efgtoa@d^(0+128),0
  8080  045B  2C64               	goto	l6644
  8081                           
  8082                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  8083  045C  3000               	movlw	0
  8084  045D                     L6:	
  8085  045D  00CA               	movwf	(efgtoa@l+3)^(0+128)
  8086  045E  3000               	movlw	0
  8087  045F  00C9               	movwf	(efgtoa@l+2)^(0+128)
  8088  0460  3000               	movlw	0
  8089  0461  00C8               	movwf	(efgtoa@l+1)^(0+128)
  8090  0462  3000               	movlw	0
  8091  0463  00C7               	movwf	efgtoa@l^(0+128)
  8092  0464                     l6644:	
  8093                           
  8094                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  8095  0464  0021               	movlb	1	; select bank1
  8096  0465  084A               	movf	(efgtoa@l+3)^(0+128),w
  8097  0466  00F4               	movwf	___fladd@b+3
  8098  0467  0849               	movf	(efgtoa@l+2)^(0+128),w
  8099  0468  00F3               	movwf	___fladd@b+2
  8100  0469  0848               	movf	(efgtoa@l+1)^(0+128),w
  8101  046A  00F2               	movwf	___fladd@b+1
  8102  046B  0847               	movf	efgtoa@l^(0+128),w
  8103  046C  00F1               	movwf	___fladd@b
  8104  046D  0850               	movf	(efgtoa@g+3)^(0+128),w
  8105  046E  00F8               	movwf	___fladd@a+3
  8106  046F  084F               	movf	(efgtoa@g+2)^(0+128),w
  8107  0470  00F7               	movwf	___fladd@a+2
  8108  0471  084E               	movf	(efgtoa@g+1)^(0+128),w
  8109  0472  00F6               	movwf	___fladd@a+1
  8110  0473  084D               	movf	efgtoa@g^(0+128),w
  8111  0474  00F5               	movwf	___fladd@a
  8112  0475  318B  23F2  3180   	fcall	___fladd
  8113  0478  0874               	movf	?___fladd+3,w
  8114  0479  0021               	movlb	1	; select bank1
  8115  047A  00C6               	movwf	(efgtoa@h+3)^(0+128)
  8116  047B  0873               	movf	?___fladd+2,w
  8117  047C  00C5               	movwf	(efgtoa@h+2)^(0+128)
  8118  047D  0872               	movf	?___fladd+1,w
  8119  047E  00C4               	movwf	(efgtoa@h+1)^(0+128)
  8120  047F  0871               	movf	?___fladd,w
  8121  0480  00C3               	movwf	efgtoa@h^(0+128)
  8122                           
  8123                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  8124  0481  0823               	movf	(efgtoa@ou+3)^(0+128),w
  8125  0482  00D8               	movwf	(efgtoa@u+3)^(0+128)
  8126  0483  0822               	movf	(efgtoa@ou+2)^(0+128),w
  8127  0484  00D7               	movwf	(efgtoa@u+2)^(0+128)
  8128  0485  0821               	movf	(efgtoa@ou+1)^(0+128),w
  8129  0486  00D6               	movwf	(efgtoa@u+1)^(0+128)
  8130  0487  0820               	movf	efgtoa@ou^(0+128),w
  8131  0488  00D5               	movwf	efgtoa@u^(0+128)
  8132                           
  8133                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  8134  0489  3065               	movlw	101
  8135  048A  063F               	xorwf	efgtoa@nmode^(0+128),w
  8136  048B  1903               	btfsc	3,2
  8137  048C  2C92               	goto	l6652
  8138  048D  0852               	movf	(efgtoa@e+1)^(0+128),w
  8139  048E  00B7               	movwf	(efgtoa@ne+1)^(0+128)
  8140  048F  0851               	movf	efgtoa@e^(0+128),w
  8141  0490  00B6               	movwf	efgtoa@ne^(0+128)
  8142  0491  2C94               	goto	l1115
  8143  0492                     l6652:	
  8144  0492  01B6               	clrf	efgtoa@ne^(0+128)
  8145  0493  01B7               	clrf	(efgtoa@ne+1)^(0+128)
  8146  0494                     l1115:	
  8147                           
  8148                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  8149  0494  01B2               	clrf	efgtoa@pp^(0+128)
  8150  0495  01B3               	clrf	(efgtoa@pp+1)^(0+128)
  8151                           
  8152                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  8153  0496  01B0               	clrf	efgtoa@t^(0+128)
  8154  0497  01B1               	clrf	(efgtoa@t+1)^(0+128)
  8155                           
  8156                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  8157  0498  01CB               	clrf	efgtoa@i^(0+128)
  8158  0499  01CC               	clrf	(efgtoa@i+1)^(0+128)
  8159                           
  8160                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  8161  049A  2DD1               	goto	l6702
  8162  049B                     l6654:	
  8163                           
  8164                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  8165  049B  0021               	movlb	1	; select bank1
  8166  049C  0858               	movf	(efgtoa@u+3)^(0+128),w
  8167  049D  0020               	movlb	0	; select bank0
  8168  049E  00A9               	movwf	___fldiv@a+3
  8169  049F  0021               	movlb	1	; select bank1
  8170  04A0  0857               	movf	(efgtoa@u+2)^(0+128),w
  8171  04A1  0020               	movlb	0	; select bank0
  8172  04A2  00A8               	movwf	___fldiv@a+2
  8173  04A3  0021               	movlb	1	; select bank1
  8174  04A4  0856               	movf	(efgtoa@u+1)^(0+128),w
  8175  04A5  0020               	movlb	0	; select bank0
  8176  04A6  00A7               	movwf	___fldiv@a+1
  8177  04A7  0021               	movlb	1	; select bank1
  8178  04A8  0855               	movf	efgtoa@u^(0+128),w
  8179  04A9  0020               	movlb	0	; select bank0
  8180  04AA  00A6               	movwf	___fldiv@a
  8181  04AB  0021               	movlb	1	; select bank1
  8182  04AC  0846               	movf	(efgtoa@h+3)^(0+128),w
  8183  04AD  0020               	movlb	0	; select bank0
  8184  04AE  00AD               	movwf	___fldiv@b+3
  8185  04AF  0021               	movlb	1	; select bank1
  8186  04B0  0845               	movf	(efgtoa@h+2)^(0+128),w
  8187  04B1  0020               	movlb	0	; select bank0
  8188  04B2  00AC               	movwf	___fldiv@b+2
  8189  04B3  0021               	movlb	1	; select bank1
  8190  04B4  0844               	movf	(efgtoa@h+1)^(0+128),w
  8191  04B5  0020               	movlb	0	; select bank0
  8192  04B6  00AB               	movwf	___fldiv@b+1
  8193  04B7  0021               	movlb	1	; select bank1
  8194  04B8  0843               	movf	efgtoa@h^(0+128),w
  8195  04B9  0020               	movlb	0	; select bank0
  8196  04BA  00AA               	movwf	___fldiv@b
  8197  04BB  3196  2686  3180   	fcall	___fldiv
  8198  04BE  0020               	movlb	0	; select bank0
  8199  04BF  0829               	movf	?___fldiv+3,w
  8200  04C0  00C3               	movwf	floorf@x+3
  8201  04C1  0828               	movf	?___fldiv+2,w
  8202  04C2  00C2               	movwf	floorf@x+2
  8203  04C3  0827               	movf	?___fldiv+1,w
  8204  04C4  00C1               	movwf	floorf@x+1
  8205  04C5  0826               	movf	?___fldiv,w
  8206  04C6  00C0               	movwf	floorf@x
  8207  04C7  3186  26F1  3180   	fcall	_floorf
  8208  04CA  0020               	movlb	0	; select bank0
  8209  04CB  0843               	movf	?_floorf+3,w
  8210  04CC  0021               	movlb	1	; select bank1
  8211  04CD  00CA               	movwf	(efgtoa@l+3)^(0+128)
  8212  04CE  0020               	movlb	0	; select bank0
  8213  04CF  0842               	movf	?_floorf+2,w
  8214  04D0  0021               	movlb	1	; select bank1
  8215  04D1  00C9               	movwf	(efgtoa@l+2)^(0+128)
  8216  04D2  0020               	movlb	0	; select bank0
  8217  04D3  0841               	movf	?_floorf+1,w
  8218  04D4  0021               	movlb	1	; select bank1
  8219  04D5  00C8               	movwf	(efgtoa@l+1)^(0+128)
  8220  04D6  0020               	movlb	0	; select bank0
  8221  04D7  0840               	movf	?_floorf,w
  8222  04D8  0021               	movlb	1	; select bank1
  8223  04D9  00C7               	movwf	efgtoa@l^(0+128)
  8224                           
  8225                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  8226  04DA  084A               	movf	(efgtoa@l+3)^(0+128),w
  8227  04DB  00F4               	movwf	___fltol@f1+3
  8228  04DC  0849               	movf	(efgtoa@l+2)^(0+128),w
  8229  04DD  00F3               	movwf	___fltol@f1+2
  8230  04DE  0848               	movf	(efgtoa@l+1)^(0+128),w
  8231  04DF  00F2               	movwf	___fltol@f1+1
  8232  04E0  0847               	movf	efgtoa@l^(0+128),w
  8233  04E1  00F1               	movwf	___fltol@f1
  8234  04E2  3194  2497  3180   	fcall	___fltol
  8235  04E5  0872               	movf	?___fltol+1,w
  8236  04E6  0021               	movlb	1	; select bank1
  8237  04E7  00B9               	movwf	(efgtoa@d+1)^(0+128)
  8238  04E8  0871               	movf	?___fltol,w
  8239  04E9  00B8               	movwf	efgtoa@d^(0+128)
  8240                           
  8241                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  8242  04EA  0022               	movlb	2	; select bank2
  8243  04EB  1A5D               	btfsc	_flags^(0+256),4
  8244  04EC  2CFC               	goto	l6666
  8245  04ED  0021               	movlb	1	; select bank1
  8246  04EE  0838               	movf	efgtoa@d^(0+128),w
  8247  04EF  0439               	iorwf	(efgtoa@d+1)^(0+128),w
  8248  04F0  1D03               	btfss	3,2
  8249  04F1  2CFC               	goto	l6666
  8250  04F2  3067               	movlw	103
  8251  04F3  0642               	xorwf	efgtoa@mode^(0+128),w
  8252  04F4  1903               	btfsc	3,2
  8253  04F5  1FB7               	btfss	(efgtoa@ne+1)^(0+128),7
  8254  04F6  2CFC               	goto	l6666
  8255                           
  8256                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  8257  04F7  3001               	movlw	1
  8258  04F8  07B0               	addwf	efgtoa@t^(0+128),f
  8259  04F9  3000               	movlw	0
  8260  04FA  3DB1               	addwfc	(efgtoa@t+1)^(0+128),f
  8261                           
  8262                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  8263  04FB  2D4F               	goto	l6694
  8264  04FC                     l6666:	
  8265                           
  8266                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  8267  04FC  0021               	movlb	1	; select bank1
  8268  04FD  0832               	movf	efgtoa@pp^(0+128),w
  8269  04FE  0433               	iorwf	(efgtoa@pp+1)^(0+128),w
  8270  04FF  1903               	btfsc	3,2
  8271  0500  1FB7               	btfss	(efgtoa@ne+1)^(0+128),7
  8272  0501  2D1B               	goto	l6686
  8273                           
  8274                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  8275  0502  302E               	movlw	46
  8276  0503  0020               	movlb	0	; select bank0
  8277  0504  00D9               	movwf	??_efgtoa
  8278  0505  0021               	movlb	1	; select bank1
  8279  0506  0853               	movf	efgtoa@n^(0+128),w
  8280  0507  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8281  0508  0086               	movwf	6
  8282  0509  3002               	movlw	2	; select bank4/5
  8283  050A  0087               	movwf	7
  8284  050B  0020               	movlb	0	; select bank0
  8285  050C  0859               	movf	??_efgtoa,w
  8286  050D  0081               	movwf	1
  8287  050E  3001               	movlw	1
  8288  050F  0021               	movlb	1	; select bank1
  8289  0510  07D3               	addwf	efgtoa@n^(0+128),f
  8290  0511  3000               	movlw	0
  8291  0512  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  8292                           
  8293                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  8294  0513  30FF               	movlw	255
  8295  0514  07C0               	addwf	efgtoa@w^(0+128),f
  8296  0515  30FF               	movlw	255
  8297  0516  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  8298                           
  8299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  8300  0517  3001               	movlw	1
  8301  0518  00B2               	movwf	efgtoa@pp^(0+128)
  8302  0519  3000               	movlw	0
  8303  051A  00B3               	movwf	(efgtoa@pp^(0+128)+1)
  8304  051B                     l6686:	
  8305                           
  8306                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  8307  051B  0830               	movf	efgtoa@t^(0+128),w
  8308  051C  0431               	iorwf	(efgtoa@t+1)^(0+128),w
  8309  051D  1903               	btfsc	3,2
  8310  051E  2D39               	goto	l6688
  8311                           
  8312                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  8313  051F  3030               	movlw	48
  8314  0520  0020               	movlb	0	; select bank0
  8315  0521  00D9               	movwf	??_efgtoa
  8316  0522  0021               	movlb	1	; select bank1
  8317  0523  0853               	movf	efgtoa@n^(0+128),w
  8318  0524  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8319  0525  0086               	movwf	6
  8320  0526  3002               	movlw	2	; select bank4/5
  8321  0527  0087               	movwf	7
  8322  0528  0020               	movlb	0	; select bank0
  8323  0529  0859               	movf	??_efgtoa,w
  8324  052A  0081               	movwf	1
  8325  052B  3001               	movlw	1
  8326  052C  0021               	movlb	1	; select bank1
  8327  052D  07D3               	addwf	efgtoa@n^(0+128),f
  8328  052E  3000               	movlw	0
  8329  052F  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  8330                           
  8331                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  8332  0530  30FF               	movlw	255
  8333  0531  07C0               	addwf	efgtoa@w^(0+128),f
  8334  0532  30FF               	movlw	255
  8335  0533  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  8336                           
  8337                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  8338  0534  30FF               	movlw	255
  8339  0535  07B0               	addwf	efgtoa@t^(0+128),f
  8340  0536  30FF               	movlw	255
  8341  0537  3DB1               	addwfc	(efgtoa@t+1)^(0+128),f
  8342  0538  2D1B               	goto	l6686
  8343  0539                     l6688:	
  8344                           
  8345                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  8346  0539  0838               	movf	efgtoa@d^(0+128),w
  8347  053A  3E30               	addlw	48
  8348  053B  0020               	movlb	0	; select bank0
  8349  053C  00D9               	movwf	??_efgtoa
  8350  053D  0021               	movlb	1	; select bank1
  8351  053E  0853               	movf	efgtoa@n^(0+128),w
  8352  053F  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8353  0540  0086               	movwf	6
  8354  0541  3002               	movlw	2	; select bank4/5
  8355  0542  0087               	movwf	7
  8356  0543  0020               	movlb	0	; select bank0
  8357  0544  0859               	movf	??_efgtoa,w
  8358  0545  0081               	movwf	1
  8359  0546  3001               	movlw	1
  8360  0547  0021               	movlb	1	; select bank1
  8361  0548  07D3               	addwf	efgtoa@n^(0+128),f
  8362  0549  3000               	movlw	0
  8363  054A  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  8364                           
  8365                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  8366  054B  30FF               	movlw	255
  8367  054C  07C0               	addwf	efgtoa@w^(0+128),f
  8368  054D  30FF               	movlw	255
  8369  054E  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  8370  054F                     l6694:	
  8371                           
  8372                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  8373  054F  084A               	movf	(efgtoa@l+3)^(0+128),w
  8374  0550  0020               	movlb	0	; select bank0
  8375  0551  00A7               	movwf	___flmul@a+3
  8376  0552  0021               	movlb	1	; select bank1
  8377  0553  0849               	movf	(efgtoa@l+2)^(0+128),w
  8378  0554  0020               	movlb	0	; select bank0
  8379  0555  00A6               	movwf	___flmul@a+2
  8380  0556  0021               	movlb	1	; select bank1
  8381  0557  0848               	movf	(efgtoa@l+1)^(0+128),w
  8382  0558  0020               	movlb	0	; select bank0
  8383  0559  00A5               	movwf	___flmul@a+1
  8384  055A  0021               	movlb	1	; select bank1
  8385  055B  0847               	movf	efgtoa@l^(0+128),w
  8386  055C  0020               	movlb	0	; select bank0
  8387  055D  00A4               	movwf	___flmul@a
  8388  055E  0021               	movlb	1	; select bank1
  8389  055F  0858               	movf	(efgtoa@u+3)^(0+128),w
  8390  0560  0020               	movlb	0	; select bank0
  8391  0561  00A3               	movwf	___flmul@b+3
  8392  0562  0021               	movlb	1	; select bank1
  8393  0563  0857               	movf	(efgtoa@u+2)^(0+128),w
  8394  0564  0020               	movlb	0	; select bank0
  8395  0565  00A2               	movwf	___flmul@b+2
  8396  0566  0021               	movlb	1	; select bank1
  8397  0567  0856               	movf	(efgtoa@u+1)^(0+128),w
  8398  0568  0020               	movlb	0	; select bank0
  8399  0569  00A1               	movwf	___flmul@b+1
  8400  056A  0021               	movlb	1	; select bank1
  8401  056B  0855               	movf	efgtoa@u^(0+128),w
  8402  056C  0020               	movlb	0	; select bank0
  8403  056D  00A0               	movwf	___flmul@b
  8404  056E  318D  25D4  3180   	fcall	___flmul
  8405  0571  0020               	movlb	0	; select bank0
  8406  0572  0823               	movf	?___flmul+3,w
  8407  0573  00BD               	movwf	___flsub@a+3
  8408  0574  0822               	movf	?___flmul+2,w
  8409  0575  00BC               	movwf	___flsub@a+2
  8410  0576  0821               	movf	?___flmul+1,w
  8411  0577  00BB               	movwf	___flsub@a+1
  8412  0578  0820               	movf	?___flmul,w
  8413  0579  00BA               	movwf	___flsub@a
  8414  057A  0021               	movlb	1	; select bank1
  8415  057B  0846               	movf	(efgtoa@h+3)^(0+128),w
  8416  057C  0020               	movlb	0	; select bank0
  8417  057D  00C1               	movwf	___flsub@b+3
  8418  057E  0021               	movlb	1	; select bank1
  8419  057F  0845               	movf	(efgtoa@h+2)^(0+128),w
  8420  0580  0020               	movlb	0	; select bank0
  8421  0581  00C0               	movwf	___flsub@b+2
  8422  0582  0021               	movlb	1	; select bank1
  8423  0583  0844               	movf	(efgtoa@h+1)^(0+128),w
  8424  0584  0020               	movlb	0	; select bank0
  8425  0585  00BF               	movwf	___flsub@b+1
  8426  0586  0021               	movlb	1	; select bank1
  8427  0587  0843               	movf	efgtoa@h^(0+128),w
  8428  0588  0020               	movlb	0	; select bank0
  8429  0589  00BE               	movwf	___flsub@b
  8430  058A  319F  2756  3180   	fcall	___flsub
  8431  058D  0020               	movlb	0	; select bank0
  8432  058E  083D               	movf	?___flsub+3,w
  8433  058F  0021               	movlb	1	; select bank1
  8434  0590  00C6               	movwf	(efgtoa@h+3)^(0+128)
  8435  0591  0020               	movlb	0	; select bank0
  8436  0592  083C               	movf	?___flsub+2,w
  8437  0593  0021               	movlb	1	; select bank1
  8438  0594  00C5               	movwf	(efgtoa@h+2)^(0+128)
  8439  0595  0020               	movlb	0	; select bank0
  8440  0596  083B               	movf	?___flsub+1,w
  8441  0597  0021               	movlb	1	; select bank1
  8442  0598  00C4               	movwf	(efgtoa@h+1)^(0+128)
  8443  0599  0020               	movlb	0	; select bank0
  8444  059A  083A               	movf	?___flsub,w
  8445  059B  0021               	movlb	1	; select bank1
  8446  059C  00C3               	movwf	efgtoa@h^(0+128)
  8447                           
  8448                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  8449  059D  3041               	movlw	65
  8450  059E  0020               	movlb	0	; select bank0
  8451  059F  00A9               	movwf	___fldiv@a+3
  8452  05A0  3020               	movlw	32
  8453  05A1  00A8               	movwf	___fldiv@a+2
  8454  05A2  3000               	movlw	0
  8455  05A3  00A7               	movwf	___fldiv@a+1
  8456  05A4  3000               	movlw	0
  8457  05A5  00A6               	movwf	___fldiv@a
  8458  05A6  0021               	movlb	1	; select bank1
  8459  05A7  0858               	movf	(efgtoa@u+3)^(0+128),w
  8460  05A8  0020               	movlb	0	; select bank0
  8461  05A9  00AD               	movwf	___fldiv@b+3
  8462  05AA  0021               	movlb	1	; select bank1
  8463  05AB  0857               	movf	(efgtoa@u+2)^(0+128),w
  8464  05AC  0020               	movlb	0	; select bank0
  8465  05AD  00AC               	movwf	___fldiv@b+2
  8466  05AE  0021               	movlb	1	; select bank1
  8467  05AF  0856               	movf	(efgtoa@u+1)^(0+128),w
  8468  05B0  0020               	movlb	0	; select bank0
  8469  05B1  00AB               	movwf	___fldiv@b+1
  8470  05B2  0021               	movlb	1	; select bank1
  8471  05B3  0855               	movf	efgtoa@u^(0+128),w
  8472  05B4  0020               	movlb	0	; select bank0
  8473  05B5  00AA               	movwf	___fldiv@b
  8474  05B6  3196  2686  3180   	fcall	___fldiv
  8475  05B9  0020               	movlb	0	; select bank0
  8476  05BA  0829               	movf	?___fldiv+3,w
  8477  05BB  0021               	movlb	1	; select bank1
  8478  05BC  00D8               	movwf	(efgtoa@u+3)^(0+128)
  8479  05BD  0020               	movlb	0	; select bank0
  8480  05BE  0828               	movf	?___fldiv+2,w
  8481  05BF  0021               	movlb	1	; select bank1
  8482  05C0  00D7               	movwf	(efgtoa@u+2)^(0+128)
  8483  05C1  0020               	movlb	0	; select bank0
  8484  05C2  0827               	movf	?___fldiv+1,w
  8485  05C3  0021               	movlb	1	; select bank1
  8486  05C4  00D6               	movwf	(efgtoa@u+1)^(0+128)
  8487  05C5  0020               	movlb	0	; select bank0
  8488  05C6  0826               	movf	?___fldiv,w
  8489  05C7  0021               	movlb	1	; select bank1
  8490  05C8  00D5               	movwf	efgtoa@u^(0+128)
  8491                           
  8492                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  8493  05C9  30FF               	movlw	255
  8494  05CA  07B6               	addwf	efgtoa@ne^(0+128),f
  8495  05CB  30FF               	movlw	255
  8496  05CC  3DB7               	addwfc	(efgtoa@ne+1)^(0+128),f
  8497                           
  8498                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  8499  05CD  3001               	movlw	1
  8500  05CE  07CB               	addwf	efgtoa@i^(0+128),f
  8501  05CF  3000               	movlw	0
  8502  05D0  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  8503  05D1                     l6702:	
  8504                           
  8505                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  8506  05D1  084C               	movf	(efgtoa@i+1)^(0+128),w
  8507  05D2  3A80               	xorlw	128
  8508  05D3  0020               	movlb	0	; select bank0
  8509  05D4  00D9               	movwf	??_efgtoa
  8510  05D5  0021               	movlb	1	; select bank1
  8511  05D6  0835               	movf	(efgtoa@m+1)^(0+128),w
  8512  05D7  3A80               	xorlw	128
  8513  05D8  0020               	movlb	0	; select bank0
  8514  05D9  0259               	subwf	??_efgtoa,w
  8515  05DA  1D03               	skipz
  8516  05DB  2DDF               	goto	u7215
  8517  05DC  0021               	movlb	1	; select bank1
  8518  05DD  0834               	movf	efgtoa@m^(0+128),w
  8519  05DE  024B               	subwf	efgtoa@i^(0+128),w
  8520  05DF                     u7215:	
  8521  05DF  1803               	skipnc
  8522  05E0  2DEF               	goto	l6706
  8523  05E1  0021               	movlb	1	; select bank1
  8524  05E2  0854               	movf	(efgtoa@n+1)^(0+128),w
  8525  05E3  3A80               	xorlw	128
  8526  05E4  0020               	movlb	0	; select bank0
  8527  05E5  00D9               	movwf	??_efgtoa
  8528  05E6  3080               	movlw	128
  8529  05E7  0259               	subwf	??_efgtoa,w
  8530  05E8  1D03               	skipz
  8531  05E9  2DED               	goto	u7225
  8532  05EA  304B               	movlw	75
  8533  05EB  0021               	movlb	1	; select bank1
  8534  05EC  0253               	subwf	efgtoa@n^(0+128),w
  8535  05ED                     u7225:	
  8536  05ED  1C03               	skipc
  8537  05EE  2C9B               	goto	l6654
  8538  05EF                     l6706:	
  8539                           
  8540                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  8541  05EF  0021               	movlb	1	; select bank1
  8542  05F0  0832               	movf	efgtoa@pp^(0+128),w
  8543  05F1  0433               	iorwf	(efgtoa@pp+1)^(0+128),w
  8544  05F2  1D03               	btfss	3,2
  8545  05F3  2E08               	goto	l6714
  8546  05F4  0022               	movlb	2	; select bank2
  8547  05F5  1E5D               	btfss	_flags^(0+256),4
  8548  05F6  2E08               	goto	l6714
  8549                           
  8550                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  8551  05F7  302E               	movlw	46
  8552  05F8  0020               	movlb	0	; select bank0
  8553  05F9  00D9               	movwf	??_efgtoa
  8554  05FA  0021               	movlb	1	; select bank1
  8555  05FB  0853               	movf	efgtoa@n^(0+128),w
  8556  05FC  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8557  05FD  0086               	movwf	6
  8558  05FE  3002               	movlw	2	; select bank4/5
  8559  05FF  0087               	movwf	7
  8560  0600  0020               	movlb	0	; select bank0
  8561  0601  0859               	movf	??_efgtoa,w
  8562  0602  0081               	movwf	1
  8563  0603  3001               	movlw	1
  8564  0604  0021               	movlb	1	; select bank1
  8565  0605  07D3               	addwf	efgtoa@n^(0+128),f
  8566  0606  3000               	movlw	0
  8567  0607  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  8568  0608                     l6714:	
  8569                           
  8570                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  8571  0608  0021               	movlb	1	; select bank1
  8572  0609  0853               	movf	efgtoa@n^(0+128),w
  8573  060A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8574  060B  0086               	movwf	6
  8575  060C  3002               	movlw	2	; select bank4/5
  8576  060D  0087               	movwf	7
  8577  060E  0181               	clrf	1
  8578                           
  8579                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  8580  060F  3065               	movlw	101
  8581  0610  063F               	xorwf	efgtoa@nmode^(0+128),w
  8582  0611  1D03               	btfss	3,2
  8583  0612  2EDA               	goto	l6776
  8584                           
  8585                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  8586  0613  304F               	movlw	79
  8587  0614  00CB               	movwf	efgtoa@i^(0+128)
  8588  0615  3000               	movlw	0
  8589  0616  00CC               	movwf	(efgtoa@i^(0+128)+1)
  8590                           
  8591                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  8592  0617  084B               	movf	efgtoa@i^(0+128),w
  8593  0618  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8594  0619  0086               	movwf	6
  8595  061A  3002               	movlw	2	; select bank4/5
  8596  061B  0087               	movwf	7
  8597  061C  0181               	clrf	1
  8598                           
  8599                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  8600  061D  01BA               	clrf	efgtoa@sign^(0+128)
  8601  061E  01BB               	clrf	(efgtoa@sign+1)^(0+128)
  8602                           
  8603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  8604  061F  1FD2               	btfss	(efgtoa@e+1)^(0+128),7
  8605  0620  2E2A               	goto	l6730
  8606                           
  8607                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  8608  0621  3001               	movlw	1
  8609  0622  00BA               	movwf	efgtoa@sign^(0+128)
  8610  0623  3000               	movlw	0
  8611  0624  00BB               	movwf	(efgtoa@sign^(0+128)+1)
  8612                           
  8613                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  8614  0625  09D1               	comf	efgtoa@e^(0+128),f
  8615  0626  09D2               	comf	(efgtoa@e+1)^(0+128),f
  8616  0627  0AD1               	incf	efgtoa@e^(0+128),f
  8617  0628  1903               	skipnz
  8618  0629  0AD2               	incf	(efgtoa@e+1)^(0+128),f
  8619  062A                     l6730:	
  8620                           
  8621                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  8622  062A  3002               	movlw	2
  8623  062B  00BD               	movwf	efgtoa@p^(0+128)
  8624  062C  3000               	movlw	0
  8625  062D  00BE               	movwf	(efgtoa@p^(0+128)+1)
  8626  062E                     l6742:	
  8627                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  8628                           
  8629                           
  8630                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  8631  062E  0851               	movf	efgtoa@e^(0+128),w
  8632  062F  0452               	iorwf	(efgtoa@e+1)^(0+128),w
  8633  0630  1903               	btfsc	3,2
  8634  0631  2E69               	goto	l6744
  8635  0632                     l6732:	
  8636                           
  8637                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  8638  0632  30FF               	movlw	255
  8639  0633  0021               	movlb	1	; select bank1
  8640  0634  07CB               	addwf	efgtoa@i^(0+128),f
  8641  0635  30FF               	movlw	255
  8642  0636  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  8643                           
  8644                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  8645  0637  300A               	movlw	10
  8646  0638  00F1               	movwf	___awmod@divisor
  8647  0639  3000               	movlw	0
  8648  063A  00F2               	movwf	___awmod@divisor+1
  8649  063B  0852               	movf	(efgtoa@e+1)^(0+128),w
  8650  063C  00F4               	movwf	___awmod@dividend+1
  8651  063D  0851               	movf	efgtoa@e^(0+128),w
  8652  063E  00F3               	movwf	___awmod@dividend
  8653  063F  3192  2281  3180   	fcall	___awmod
  8654  0642  0871               	movf	?___awmod,w
  8655  0643  3E30               	addlw	48
  8656  0644  0020               	movlb	0	; select bank0
  8657  0645  00D9               	movwf	??_efgtoa
  8658  0646  0021               	movlb	1	; select bank1
  8659  0647  084B               	movf	efgtoa@i^(0+128),w
  8660  0648  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8661  0649  0086               	movwf	6
  8662  064A  3002               	movlw	2	; select bank4/5
  8663  064B  0087               	movwf	7
  8664  064C  0020               	movlb	0	; select bank0
  8665  064D  0859               	movf	??_efgtoa,w
  8666  064E  0081               	movwf	1
  8667                           
  8668                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  8669  064F  300A               	movlw	10
  8670  0650  00F1               	movwf	___awdiv@divisor
  8671  0651  3000               	movlw	0
  8672  0652  00F2               	movwf	___awdiv@divisor+1
  8673  0653  0021               	movlb	1	; select bank1
  8674  0654  0852               	movf	(efgtoa@e+1)^(0+128),w
  8675  0655  00F4               	movwf	___awdiv@dividend+1
  8676  0656  0851               	movf	efgtoa@e^(0+128),w
  8677  0657  00F3               	movwf	___awdiv@dividend
  8678  0658  3193  23F4  3180   	fcall	___awdiv
  8679  065B  0872               	movf	?___awdiv+1,w
  8680  065C  0021               	movlb	1	; select bank1
  8681  065D  00D2               	movwf	(efgtoa@e+1)^(0+128)
  8682  065E  0871               	movf	?___awdiv,w
  8683  065F  00D1               	movwf	efgtoa@e^(0+128)
  8684                           
  8685                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  8686  0660  30FF               	movlw	255
  8687  0661  07BD               	addwf	efgtoa@p^(0+128),f
  8688  0662  30FF               	movlw	255
  8689  0663  3DBE               	addwfc	(efgtoa@p+1)^(0+128),f
  8690                           
  8691                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  8692  0664  30FF               	movlw	255
  8693  0665  07C0               	addwf	efgtoa@w^(0+128),f
  8694  0666  30FF               	movlw	255
  8695  0667  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  8696  0668  2E2E               	goto	l6742
  8697  0669                     l6744:	
  8698  0669  083E               	movf	(efgtoa@p+1)^(0+128),w
  8699  066A  3A80               	xorlw	128
  8700  066B  0020               	movlb	0	; select bank0
  8701  066C  00D9               	movwf	??_efgtoa
  8702  066D  3080               	movlw	128
  8703  066E  0259               	subwf	??_efgtoa,w
  8704  066F  1D03               	skipz
  8705  0670  2E74               	goto	u7285
  8706  0671  3001               	movlw	1
  8707  0672  0021               	movlb	1	; select bank1
  8708  0673  023D               	subwf	efgtoa@p^(0+128),w
  8709  0674                     u7285:	
  8710  0674  1803               	skipnc
  8711  0675  2E32               	goto	l6732
  8712                           
  8713                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  8714  0676  30FF               	movlw	255
  8715  0677  0021               	movlb	1	; select bank1
  8716  0678  07CB               	addwf	efgtoa@i^(0+128),f
  8717  0679  30FF               	movlw	255
  8718  067A  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  8719                           
  8720                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  8721  067B  083A               	movf	efgtoa@sign^(0+128),w
  8722  067C  043B               	iorwf	(efgtoa@sign+1)^(0+128),w
  8723  067D  1D03               	btfss	3,2
  8724  067E  2E81               	goto	l6752
  8725  067F  302B               	movlw	43
  8726  0680  2E82               	goto	L7
  8727  0681                     l6752:	
  8728  0681  302D               	movlw	45
  8729  0682                     L7:	
  8730  0682  00AA               	movwf	_efgtoa$1531^(0+128)
  8731  0683  3000               	movlw	0
  8732  0684  00AB               	movwf	(_efgtoa$1531^(0+128)+1)
  8733  0685  082A               	movf	_efgtoa$1531^(0+128),w
  8734  0686  0020               	movlb	0	; select bank0
  8735  0687  00D9               	movwf	??_efgtoa
  8736  0688  0021               	movlb	1	; select bank1
  8737  0689  084B               	movf	efgtoa@i^(0+128),w
  8738  068A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8739  068B  0086               	movwf	6
  8740  068C  3002               	movlw	2	; select bank4/5
  8741  068D  0087               	movwf	7
  8742  068E  0020               	movlb	0	; select bank0
  8743  068F  0859               	movf	??_efgtoa,w
  8744  0690  0081               	movwf	1
  8745                           
  8746                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  8747  0691  30FF               	movlw	255
  8748  0692  0021               	movlb	1	; select bank1
  8749  0693  07C0               	addwf	efgtoa@w^(0+128),f
  8750  0694  30FF               	movlw	255
  8751  0695  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  8752                           
  8753                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  8754  0696  30FF               	movlw	255
  8755  0697  07CB               	addwf	efgtoa@i^(0+128),f
  8756  0698  30FF               	movlw	255
  8757  0699  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  8758  069A  0020               	movlb	0	; select bank0
  8759  069B  0858               	movf	efgtoa@c,w
  8760  069C  3EBF               	addlw	191
  8761  069D  00D9               	movwf	??_efgtoa
  8762  069E  30FF               	movlw	255
  8763  069F  1803               	skipnc
  8764  06A0  3000               	movlw	0
  8765  06A1  00DA               	movwf	??_efgtoa+1
  8766  06A2  3000               	movlw	0
  8767  06A3  025A               	subwf	??_efgtoa+1,w
  8768  06A4  301A               	movlw	26
  8769  06A5  1903               	skipnz
  8770  06A6  0259               	subwf	??_efgtoa,w
  8771  06A7  1803               	btfsc	3,0
  8772  06A8  2EAB               	goto	u7300
  8773  06A9  3001               	movlw	1
  8774  06AA  2EAC               	goto	u7310
  8775  06AB                     u7300:	
  8776  06AB  3000               	movlw	0
  8777  06AC                     u7310:	
  8778  06AC  00DB               	movwf	??_efgtoa+2
  8779  06AD  01DC               	clrf	??_efgtoa+3
  8780  06AE  085B               	movf	??_efgtoa+2,w
  8781  06AF  0021               	movlb	1	; select bank1
  8782  06B0  00AE               	movwf	_efgtoa$1533^(0+128)
  8783  06B1  0020               	movlb	0	; select bank0
  8784  06B2  085C               	movf	??_efgtoa+3,w
  8785  06B3  0021               	movlb	1	; select bank1
  8786  06B4  00AF               	movwf	(_efgtoa$1533+1)^(0+128)
  8787  06B5  082E               	movf	_efgtoa$1533^(0+128),w
  8788  06B6  042F               	iorwf	(_efgtoa$1533+1)^(0+128),w
  8789  06B7  1D03               	btfss	3,2
  8790  06B8  2EBB               	goto	l6768
  8791  06B9  3065               	movlw	101
  8792  06BA  2EBC               	goto	L8
  8793  06BB                     l6768:	
  8794  06BB  3045               	movlw	69
  8795  06BC                     L8:	
  8796  06BC  00AC               	movwf	_efgtoa$1532^(0+128)
  8797  06BD  3000               	movlw	0
  8798  06BE  00AD               	movwf	(_efgtoa$1532^(0+128)+1)
  8799  06BF  082C               	movf	_efgtoa$1532^(0+128),w
  8800  06C0  0020               	movlb	0	; select bank0
  8801  06C1  00D9               	movwf	??_efgtoa
  8802  06C2  0021               	movlb	1	; select bank1
  8803  06C3  084B               	movf	efgtoa@i^(0+128),w
  8804  06C4  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8805  06C5  0086               	movwf	6
  8806  06C6  3002               	movlw	2	; select bank4/5
  8807  06C7  0087               	movwf	7
  8808  06C8  0020               	movlb	0	; select bank0
  8809  06C9  0859               	movf	??_efgtoa,w
  8810  06CA  0081               	movwf	1
  8811                           
  8812                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  8813  06CB  30FF               	movlw	255
  8814  06CC  0021               	movlb	1	; select bank1
  8815  06CD  07C0               	addwf	efgtoa@w^(0+128),f
  8816  06CE  30FF               	movlw	255
  8817  06CF  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  8818                           
  8819                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  8820  06D0  084B               	movf	efgtoa@i^(0+128),w
  8821  06D1  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8822  06D2  00F1               	movwf	strcpy@src
  8823  06D3  3002               	movlw	2
  8824  06D4  00F2               	movwf	strcpy@src+1
  8825  06D5  0853               	movf	efgtoa@n^(0+128),w
  8826  06D6  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8827  06D7  319F  2775  3180   	fcall	_strcpy
  8828  06DA                     l6776:	
  8829                           
  8830                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 502:     re
      +                          turn pad(fp, &dbuf[0], w);
  8831  06DA  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  8832  06DB  0020               	movlb	0	; select bank0
  8833  06DC  00D9               	movwf	??_efgtoa
  8834  06DD  0859               	movf	??_efgtoa,w
  8835  06DE  00A8               	movwf	pad@buf
  8836  06DF  0021               	movlb	1	; select bank1
  8837  06E0  0841               	movf	(efgtoa@w+1)^(0+128),w
  8838  06E1  0020               	movlb	0	; select bank0
  8839  06E2  00AA               	movwf	pad@p+1
  8840  06E3  0021               	movlb	1	; select bank1
  8841  06E4  0840               	movf	efgtoa@w^(0+128),w
  8842  06E5  0020               	movlb	0	; select bank0
  8843  06E6  00A9               	movwf	pad@p
  8844  06E7  0021               	movlb	1	; select bank1
  8845  06E8  083C               	movf	efgtoa@fp^(0+128),w
  8846  06E9  3193  23A4         	fcall	_pad
  8847  06EB  0020               	movlb	0	; select bank0
  8848  06EC  0829               	movf	?_pad+1,w
  8849  06ED  00D5               	movwf	?_efgtoa+1
  8850  06EE  0828               	movf	?_pad,w
  8851  06EF  00D4               	movwf	?_efgtoa
  8852  06F0  0008               	return
  8853  06F1                     __end_of_efgtoa:	
  8854                           
  8855                           	psect	text11
  8856  1F94                     __ptext11:	
  8857 ;; *************** function _tolower *****************
  8858 ;; Defined at:
  8859 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
  8860 ;; Parameters:    Size  Location     Type
  8861 ;;  c               2    7[COMMON] int 
  8862 ;; Auto vars:     Size  Location     Type
  8863 ;;		None
  8864 ;; Return value:  Size  Location     Type
  8865 ;;                  2    7[COMMON] int 
  8866 ;; Registers used:
  8867 ;;		wreg, status,2, status,0
  8868 ;; Tracked objects:
  8869 ;;		On entry : 0/0
  8870 ;;		On exit  : 0/0
  8871 ;;		Unchanged: 0/0
  8872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8873 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8874 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8875 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8876 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8877 ;;Total ram usage:        8 bytes
  8878 ;; Hardware stack levels used:    1
  8879 ;; Hardware stack levels required when called:    5
  8880 ;; This function calls:
  8881 ;;		_isupper
  8882 ;; This function is called by:
  8883 ;;		_efgtoa
  8884 ;;		_vfpfcnvrt
  8885 ;; This function uses a non-reentrant model
  8886 ;;
  8887                           
  8888                           
  8889                           ;psect for function _tolower
  8890  1F94                     _tolower:	
  8891                           
  8892                           ;incstack = 0
  8893                           ; Regs used in _tolower: [wreg+status,2+status,0]
  8894  1F94  0877               	movf	tolower@c,w
  8895  1F95  3EBF               	addlw	191
  8896  1F96  0020               	movlb	0	; select bank0
  8897  1F97  00A0               	movwf	??_tolower
  8898  1F98  30FF               	movlw	255
  8899  1F99  3D78               	addwfc	tolower@c+1,w
  8900  1F9A  00A1               	movwf	??_tolower+1
  8901  1F9B  3000               	movlw	0
  8902  1F9C  0221               	subwf	??_tolower+1,w
  8903  1F9D  301A               	movlw	26
  8904  1F9E  1903               	skipnz
  8905  1F9F  0220               	subwf	??_tolower,w
  8906  1FA0  1803               	btfsc	3,0
  8907  1FA1  2FA4               	goto	u6750
  8908  1FA2  3001               	movlw	1
  8909  1FA3  2FA5               	goto	u6760
  8910  1FA4                     u6750:	
  8911  1FA4  3000               	movlw	0
  8912  1FA5                     u6760:	
  8913  1FA5  00A2               	movwf	??_tolower+2
  8914  1FA6  01A3               	clrf	??_tolower+3
  8915  1FA7  0822               	movf	??_tolower+2,w
  8916  1FA8  00F9               	movwf	_tolower$1931
  8917  1FA9  0823               	movf	??_tolower+3,w
  8918  1FAA  00FA               	movwf	_tolower$1931+1
  8919  1FAB  0879               	movf	_tolower$1931,w
  8920  1FAC  047A               	iorwf	_tolower$1931+1,w
  8921  1FAD  1903               	btfsc	3,2
  8922  1FAE  0008               	return
  8923  1FAF  3020               	movlw	32
  8924  1FB0  0477               	iorwf	tolower@c,w
  8925  1FB1  00F7               	movwf	?_tolower
  8926  1FB2  3000               	movlw	0
  8927  1FB3  0478               	iorwf	tolower@c+1,w
  8928  1FB4  00F8               	movwf	?_tolower+1
  8929  1FB5  0008               	return
  8930  1FB6                     __end_of_tolower:	
  8931                           
  8932                           	psect	text12
  8933  1E6B                     __ptext12:	
  8934 ;; *************** function _isupper *****************
  8935 ;; Defined at:
  8936 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  8937 ;; Parameters:    Size  Location     Type
  8938 ;;  c               2    1[COMMON] int 
  8939 ;; Auto vars:     Size  Location     Type
  8940 ;;		None
  8941 ;; Return value:  Size  Location     Type
  8942 ;;                  2    1[COMMON] int 
  8943 ;; Registers used:
  8944 ;;		wreg, status,2, status,0
  8945 ;; Tracked objects:
  8946 ;;		On entry : 0/0
  8947 ;;		On exit  : 0/0
  8948 ;;		Unchanged: 0/0
  8949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8950 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8952 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8953 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8954 ;;Total ram usage:        6 bytes
  8955 ;; Hardware stack levels used:    1
  8956 ;; Hardware stack levels required when called:    4
  8957 ;; This function calls:
  8958 ;;		Nothing
  8959 ;; This function is called by:
  8960 ;;		_efgtoa
  8961 ;;		_vfpfcnvrt
  8962 ;;		_tolower
  8963 ;; This function uses a non-reentrant model
  8964 ;;
  8965                           
  8966                           
  8967                           ;psect for function _isupper
  8968  1E6B                     _isupper:	
  8969                           
  8970                           ;incstack = 0
  8971                           ; Regs used in _isupper: [wreg+status,2+status,0]
  8972  1E6B  0871               	movf	isupper@c,w
  8973  1E6C  3EBF               	addlw	191
  8974  1E6D  00F3               	movwf	??_isupper
  8975  1E6E  30FF               	movlw	255
  8976  1E6F  3D72               	addwfc	isupper@c+1,w
  8977  1E70  00F4               	movwf	??_isupper+1
  8978  1E71  3000               	movlw	0
  8979  1E72  0274               	subwf	??_isupper+1,w
  8980  1E73  301A               	movlw	26
  8981  1E74  1903               	skipnz
  8982  1E75  0273               	subwf	??_isupper,w
  8983  1E76  1803               	btfsc	3,0
  8984  1E77  2E7A               	goto	u6260
  8985  1E78  3001               	movlw	1
  8986  1E79  2E7B               	goto	u6270
  8987  1E7A                     u6260:	
  8988  1E7A  3000               	movlw	0
  8989  1E7B                     u6270:	
  8990  1E7B  00F5               	movwf	??_isupper+2
  8991  1E7C  01F6               	clrf	??_isupper+3
  8992  1E7D  0875               	movf	??_isupper+2,w
  8993  1E7E  00F1               	movwf	?_isupper
  8994  1E7F  0876               	movf	??_isupper+3,w
  8995  1E80  00F2               	movwf	?_isupper+1
  8996  1E81  0008               	return
  8997  1E82                     __end_of_isupper:	
  8998                           
  8999                           	psect	text13
  9000  1F75                     __ptext13:	
  9001 ;; *************** function _strcpy *****************
  9002 ;; Defined at:
  9003 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
  9004 ;; Parameters:    Size  Location     Type
  9005 ;;  dest            1    wreg     PTR unsigned char 
  9006 ;;		 -> dbuf(80), 
  9007 ;;  src             2    1[COMMON] PTR const unsigned char 
  9008 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  9009 ;;		 -> dbuf(80), 
  9010 ;; Auto vars:     Size  Location     Type
  9011 ;;  dest            1    8[COMMON] PTR unsigned char 
  9012 ;;		 -> dbuf(80), 
  9013 ;;  s               2    5[COMMON] PTR const unsigned char 
  9014 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  9015 ;;		 -> dbuf(80), 
  9016 ;;  d               1    7[COMMON] PTR unsigned char 
  9017 ;;		 -> dbuf(80), 
  9018 ;; Return value:  Size  Location     Type
  9019 ;;                  1    wreg      PTR unsigned char 
  9020 ;; Registers used:
  9021 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  9022 ;; Tracked objects:
  9023 ;;		On entry : 0/0
  9024 ;;		On exit  : 0/0
  9025 ;;		Unchanged: 0/0
  9026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9027 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9028 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9029 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9030 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9031 ;;Total ram usage:        8 bytes
  9032 ;; Hardware stack levels used:    1
  9033 ;; Hardware stack levels required when called:    4
  9034 ;; This function calls:
  9035 ;;		Nothing
  9036 ;; This function is called by:
  9037 ;;		_efgtoa
  9038 ;; This function uses a non-reentrant model
  9039 ;;
  9040                           
  9041                           
  9042                           ;psect for function _strcpy
  9043  1F75                     _strcpy:	
  9044                           
  9045                           ;incstack = 0
  9046                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  9047                           ;strcpy@dest stored from wreg
  9048  1F75  00F8               	movwf	strcpy@dest
  9049  1F76  0872               	movf	strcpy@src+1,w
  9050  1F77  00F6               	movwf	strcpy@s+1
  9051  1F78  0871               	movf	strcpy@src,w
  9052  1F79  00F5               	movwf	strcpy@s
  9053  1F7A  0878               	movf	strcpy@dest,w
  9054  1F7B  00F3               	movwf	??_strcpy
  9055  1F7C  0873               	movf	??_strcpy,w
  9056  1F7D  00F7               	movwf	strcpy@d
  9057  1F7E                     l4592:	
  9058  1F7E  0877               	movf	strcpy@d,w
  9059  1F7F  0086               	movwf	6
  9060  1F80  3002               	movlw	2	; select bank4/5
  9061  1F81  0087               	movwf	7
  9062  1F82  0AF7               	incf	strcpy@d,f
  9063  1F83  0876               	movf	strcpy@s+1,w
  9064  1F84  00F4               	movwf	??_strcpy+1
  9065  1F85  0875               	movf	strcpy@s,w
  9066  1F86  00F3               	movwf	??_strcpy
  9067  1F87  0AF5               	incf	strcpy@s,f
  9068  1F88  1903               	skipnz
  9069  1F89  0AF6               	incf	strcpy@s+1,f
  9070  1F8A  0873               	movf	??_strcpy,w
  9071  1F8B  0084               	movwf	4
  9072  1F8C  0874               	movf	??_strcpy+1,w
  9073  1F8D  0085               	movwf	5
  9074  1F8E  0800               	movf	0,w	;code access
  9075  1F8F  3FC0               	movwi [0]fsr1
  9076  1F90  0889               	movf	9,f
  9077  1F91  1903               	btfsc	3,2
  9078  1F92  0008               	return
  9079  1F93  2F7E               	goto	l4592
  9080  1F94                     __end_of_strcpy:	
  9081                           
  9082                           	psect	text14
  9083  13A4                     __ptext14:	
  9084 ;; *************** function _pad *****************
  9085 ;; Defined at:
  9086 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9087 ;; Parameters:    Size  Location     Type
  9088 ;;  fp              1    wreg     PTR struct _IO_FILE
  9089 ;;		 -> NULL(0), 
  9090 ;;  buf             1    8[BANK0 ] PTR unsigned char 
  9091 ;;		 -> dbuf(80), 
  9092 ;;  p               2    9[BANK0 ] int 
  9093 ;; Auto vars:     Size  Location     Type
  9094 ;;  fp              1   16[BANK0 ] PTR struct _IO_FILE
  9095 ;;		 -> NULL(0), 
  9096 ;;  w               2   14[BANK0 ] int 
  9097 ;;  i               2   12[BANK0 ] int 
  9098 ;; Return value:  Size  Location     Type
  9099 ;;                  2    8[BANK0 ] int 
  9100 ;; Registers used:
  9101 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9102 ;; Tracked objects:
  9103 ;;		On entry : 0/0
  9104 ;;		On exit  : 0/0
  9105 ;;		Unchanged: 0/0
  9106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9107 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9108 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9109 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9110 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9111 ;;Total ram usage:        9 bytes
  9112 ;; Hardware stack levels used:    1
  9113 ;; Hardware stack levels required when called:    8
  9114 ;; This function calls:
  9115 ;;		_fputc
  9116 ;;		_fputs
  9117 ;;		_strlen
  9118 ;; This function is called by:
  9119 ;;		_efgtoa
  9120 ;; This function uses a non-reentrant model
  9121 ;;
  9122                           
  9123                           
  9124                           ;psect for function _pad
  9125  13A4                     _pad:	
  9126                           
  9127                           ;incstack = 0
  9128                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9129                           ;pad@fp stored from wreg
  9130  13A4  0020               	movlb	0	; select bank0
  9131  13A5  00B0               	movwf	pad@fp
  9132                           
  9133                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  9134  13A6  0022               	movlb	2	; select bank2
  9135  13A7  1C5D               	btfss	_flags^(0+256),0
  9136  13A8  2BB2               	goto	l6444
  9137                           
  9138                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  9139  13A9  0020               	movlb	0	; select bank0
  9140  13AA  0830               	movf	pad@fp,w
  9141  13AB  00AB               	movwf	??_pad
  9142  13AC  082B               	movf	??_pad,w
  9143  13AD  00A0               	movwf	fputs@fp
  9144  13AE  0828               	movf	pad@buf,w
  9145  13AF  319F  27DA  3193   	fcall	_fputs
  9146  13B2                     l6444:	
  9147                           
  9148                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  9149  13B2  0020               	movlb	0	; select bank0
  9150  13B3  1BAA               	btfsc	pad@p+1,7
  9151  13B4  2BBA               	goto	l6448
  9152  13B5  082A               	movf	pad@p+1,w
  9153  13B6  00AF               	movwf	pad@w+1
  9154  13B7  0829               	movf	pad@p,w
  9155  13B8  00AE               	movwf	pad@w
  9156  13B9  2BBC               	goto	l1048
  9157  13BA                     l6448:	
  9158  13BA  01AE               	clrf	pad@w
  9159  13BB  01AF               	clrf	pad@w+1
  9160  13BC                     l1048:	
  9161                           
  9162                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  9163  13BC  01AC               	clrf	pad@i
  9164  13BD  01AD               	clrf	pad@i+1
  9165  13BE                     l6454:	
  9166                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9167                           
  9168                           
  9169                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9170  13BE  082D               	movf	pad@i+1,w
  9171  13BF  3A80               	xorlw	128
  9172  13C0  00AB               	movwf	??_pad
  9173  13C1  082F               	movf	pad@w+1,w
  9174  13C2  3A80               	xorlw	128
  9175  13C3  022B               	subwf	??_pad,w
  9176  13C4  1D03               	skipz
  9177  13C5  2BC8               	goto	u6735
  9178  13C6  082E               	movf	pad@w,w
  9179  13C7  022C               	subwf	pad@i,w
  9180  13C8                     u6735:	
  9181  13C8  1803               	btfsc	3,0
  9182  13C9  2BDC               	goto	l1051
  9183                           
  9184                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  9185  13CA  3020               	movlw	32
  9186  13CB  00F4               	movwf	fputc@c
  9187  13CC  3000               	movlw	0
  9188  13CD  00F5               	movwf	fputc@c+1
  9189  13CE  0020               	movlb	0	; select bank0
  9190  13CF  0830               	movf	pad@fp,w
  9191  13D0  00AB               	movwf	??_pad
  9192  13D1  082B               	movf	??_pad,w
  9193  13D2  00F6               	movwf	fputc@fp
  9194  13D3  3191  2191  3193   	fcall	_fputc
  9195                           
  9196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  9197  13D6  3001               	movlw	1
  9198  13D7  0020               	movlb	0	; select bank0
  9199  13D8  07AC               	addwf	pad@i,f
  9200  13D9  3000               	movlw	0
  9201  13DA  3DAD               	addwfc	pad@i+1,f
  9202  13DB  2BBE               	goto	l6454
  9203  13DC                     l1051:	
  9204                           
  9205                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  9206  13DC  0022               	movlb	2	; select bank2
  9207  13DD  185D               	btfsc	_flags^(0+256),0
  9208  13DE  2BE8               	goto	l1052
  9209                           
  9210                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  9211  13DF  0020               	movlb	0	; select bank0
  9212  13E0  0830               	movf	pad@fp,w
  9213  13E1  00AB               	movwf	??_pad
  9214  13E2  082B               	movf	??_pad,w
  9215  13E3  00A0               	movwf	fputs@fp
  9216  13E4  0828               	movf	pad@buf,w
  9217  13E5  319F  27DA  3193   	fcall	_fputs
  9218  13E8                     l1052:	
  9219                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 92:     }
  9220                           
  9221                           
  9222                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  9223  13E8  0020               	movlb	0	; select bank0
  9224  13E9  0828               	movf	pad@buf,w
  9225  13EA  319E  26C9         	fcall	_strlen
  9226  13EC  0020               	movlb	0	; select bank0
  9227  13ED  082E               	movf	pad@w,w
  9228  13EE  0771               	addwf	?_strlen,w
  9229  13EF  00A8               	movwf	?_pad
  9230  13F0  082F               	movf	pad@w+1,w
  9231  13F1  3D72               	addwfc	?_strlen+1,w
  9232  13F2  00A9               	movwf	?_pad+1
  9233  13F3  0008               	return
  9234  13F4                     __end_of_pad:	
  9235                           
  9236                           	psect	text15
  9237  1EC9                     __ptext15:	
  9238 ;; *************** function _strlen *****************
  9239 ;; Defined at:
  9240 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  9241 ;; Parameters:    Size  Location     Type
  9242 ;;  s               1    wreg     PTR const unsigned char 
  9243 ;;		 -> dbuf(80), 
  9244 ;; Auto vars:     Size  Location     Type
  9245 ;;  s               1    5[COMMON] PTR const unsigned char 
  9246 ;;		 -> dbuf(80), 
  9247 ;;  a               1    4[COMMON] PTR const unsigned char 
  9248 ;;		 -> dbuf(80), 
  9249 ;; Return value:  Size  Location     Type
  9250 ;;                  2    1[COMMON] unsigned int 
  9251 ;; Registers used:
  9252 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9253 ;; Tracked objects:
  9254 ;;		On entry : 0/0
  9255 ;;		On exit  : 0/0
  9256 ;;		Unchanged: 0/0
  9257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9258 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9259 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9260 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9261 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9262 ;;Total ram usage:        5 bytes
  9263 ;; Hardware stack levels used:    1
  9264 ;; Hardware stack levels required when called:    4
  9265 ;; This function calls:
  9266 ;;		Nothing
  9267 ;; This function is called by:
  9268 ;;		_pad
  9269 ;; This function uses a non-reentrant model
  9270 ;;
  9271                           
  9272                           
  9273                           ;psect for function _strlen
  9274  1EC9                     _strlen:	
  9275                           
  9276                           ;incstack = 0
  9277                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  9278                           ;strlen@s stored from wreg
  9279  1EC9  00F5               	movwf	strlen@s
  9280  1ECA  0875               	movf	strlen@s,w
  9281  1ECB  00F3               	movwf	??_strlen
  9282  1ECC  0873               	movf	??_strlen,w
  9283  1ECD  00F4               	movwf	strlen@a
  9284  1ECE                     l4316:	
  9285  1ECE  0875               	movf	strlen@s,w
  9286  1ECF  0086               	movwf	6
  9287  1ED0  3002               	movlw	2	; select bank4/5
  9288  1ED1  0087               	movwf	7
  9289  1ED2  0801               	movf	1,w
  9290  1ED3  1903               	btfsc	3,2
  9291  1ED4  2EDA               	goto	l4318
  9292  1ED5  3001               	movlw	1
  9293  1ED6  00F3               	movwf	??_strlen
  9294  1ED7  0873               	movf	??_strlen,w
  9295  1ED8  07F5               	addwf	strlen@s,f
  9296  1ED9  2ECE               	goto	l4316
  9297  1EDA                     l4318:	
  9298  1EDA  0874               	movf	strlen@a,w
  9299  1EDB  0275               	subwf	strlen@s,w
  9300  1EDC  00F1               	movwf	?_strlen
  9301  1EDD  01F2               	clrf	?_strlen+1
  9302  1EDE  1BF1               	btfsc	?_strlen,7
  9303  1EDF  03F2               	decf	?_strlen+1,f
  9304  1EE0  0008               	return
  9305  1EE1                     __end_of_strlen:	
  9306                           
  9307                           	psect	text16
  9308  1FDA                     __ptext16:	
  9309 ;; *************** function _fputs *****************
  9310 ;; Defined at:
  9311 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  9312 ;; Parameters:    Size  Location     Type
  9313 ;;  s               1    wreg     PTR const unsigned char 
  9314 ;;		 -> dbuf(80), 
  9315 ;;  fp              1    0[BANK0 ] PTR struct _IO_FILE
  9316 ;;		 -> NULL(0), 
  9317 ;; Auto vars:     Size  Location     Type
  9318 ;;  s               1    7[BANK0 ] PTR const unsigned char 
  9319 ;;		 -> dbuf(80), 
  9320 ;;  i               2    5[BANK0 ] int 
  9321 ;;  c               1    4[BANK0 ] unsigned char 
  9322 ;; Return value:  Size  Location     Type
  9323 ;;                  2    0[BANK0 ] int 
  9324 ;; Registers used:
  9325 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9326 ;; Tracked objects:
  9327 ;;		On entry : 0/0
  9328 ;;		On exit  : 0/0
  9329 ;;		Unchanged: 0/0
  9330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9331 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9332 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9333 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9334 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9335 ;;Total ram usage:        8 bytes
  9336 ;; Hardware stack levels used:    1
  9337 ;; Hardware stack levels required when called:    7
  9338 ;; This function calls:
  9339 ;;		_fputc
  9340 ;; This function is called by:
  9341 ;;		_pad
  9342 ;; This function uses a non-reentrant model
  9343 ;;
  9344                           
  9345                           
  9346                           ;psect for function _fputs
  9347  1FDA                     _fputs:	
  9348                           
  9349                           ;incstack = 0
  9350                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9351                           ;fputs@s stored from wreg
  9352  1FDA  0020               	movlb	0	; select bank0
  9353  1FDB  00A7               	movwf	fputs@s
  9354  1FDC  01A5               	clrf	fputs@i
  9355  1FDD  01A6               	clrf	fputs@i+1
  9356  1FDE                     l6240:	
  9357  1FDE  0825               	movf	fputs@i,w
  9358  1FDF  0727               	addwf	fputs@s,w
  9359  1FE0  00A1               	movwf	??_fputs
  9360  1FE1  0821               	movf	??_fputs,w
  9361  1FE2  0086               	movwf	6
  9362  1FE3  3002               	movlw	2	; select bank4/5
  9363  1FE4  0087               	movwf	7
  9364  1FE5  0801               	movf	1,w
  9365  1FE6  00A2               	movwf	??_fputs+1
  9366  1FE7  0822               	movf	??_fputs+1,w
  9367  1FE8  00A4               	movwf	fputs@c
  9368  1FE9  0824               	movf	fputs@c,w
  9369  1FEA  1903               	btfsc	3,2
  9370  1FEB  0008               	return
  9371  1FEC  0824               	movf	fputs@c,w
  9372  1FED  00A1               	movwf	??_fputs
  9373  1FEE  01A2               	clrf	??_fputs+1
  9374  1FEF  0821               	movf	??_fputs,w
  9375  1FF0  00F4               	movwf	fputc@c
  9376  1FF1  0822               	movf	??_fputs+1,w
  9377  1FF2  00F5               	movwf	fputc@c+1
  9378  1FF3  0820               	movf	fputs@fp,w
  9379  1FF4  00A3               	movwf	??_fputs+2
  9380  1FF5  0823               	movf	??_fputs+2,w
  9381  1FF6  00F6               	movwf	fputc@fp
  9382  1FF7  3191  2191  319F   	fcall	_fputc
  9383  1FFA  3001               	movlw	1
  9384  1FFB  0020               	movlb	0	; select bank0
  9385  1FFC  07A5               	addwf	fputs@i,f
  9386  1FFD  3000               	movlw	0
  9387  1FFE  3DA6               	addwfc	fputs@i+1,f
  9388  1FFF  2FDE               	goto	l6240
  9389  2000                     __end_of_fputs:	
  9390                           
  9391                           	psect	text17
  9392  1191                     __ptext17:	
  9393 ;; *************** function _fputc *****************
  9394 ;; Defined at:
  9395 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  9396 ;; Parameters:    Size  Location     Type
  9397 ;;  c               2    4[COMMON] int 
  9398 ;;  fp              1    6[COMMON] PTR struct _IO_FILE
  9399 ;;		 -> NULL(0), 
  9400 ;; Auto vars:     Size  Location     Type
  9401 ;;		None
  9402 ;; Return value:  Size  Location     Type
  9403 ;;                  2    4[COMMON] int 
  9404 ;; Registers used:
  9405 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9406 ;; Tracked objects:
  9407 ;;		On entry : 0/0
  9408 ;;		On exit  : 0/0
  9409 ;;		Unchanged: 0/0
  9410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9411 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9413 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9414 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9415 ;;Total ram usage:        8 bytes
  9416 ;; Hardware stack levels used:    1
  9417 ;; Hardware stack levels required when called:    6
  9418 ;; This function calls:
  9419 ;;		_putch
  9420 ;; This function is called by:
  9421 ;;		_pad
  9422 ;;		_vfpfcnvrt
  9423 ;;		_fputs
  9424 ;; This function uses a non-reentrant model
  9425 ;;
  9426                           
  9427                           
  9428                           ;psect for function _fputc
  9429  1191                     _fputc:	
  9430                           
  9431                           ;incstack = 0
  9432                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9433  1191  0876               	movf	fputc@fp,w
  9434  1192  1D03               	btfss	3,2
  9435  1193  0876               	movf	fputc@fp,w
  9436  1194  1D03               	btfss	3,2
  9437  1195  299A               	goto	l4140
  9438  1196  0874               	movf	fputc@c,w
  9439  1197  3188  2000         	fcall	_putch
  9440  1199  0008               	return
  9441  119A                     l4140:	
  9442  119A  0876               	movf	fputc@fp,w
  9443  119B  3E03               	addlw	3
  9444  119C  0086               	movwf	6
  9445  119D  0187               	clrf	7
  9446  119E  0016               	moviw fsr1++
  9447  119F  0401               	iorwf	1,w
  9448  11A0  1903               	btfsc	3,2
  9449  11A1  29BD               	goto	l4144
  9450  11A2  0876               	movf	fputc@fp,w
  9451  11A3  3E03               	addlw	3
  9452  11A4  0086               	movwf	6
  9453  11A5  0187               	clrf	7
  9454  11A6  3F40               	moviw [0]fsr1
  9455  11A7  00F7               	movwf	??_fputc
  9456  11A8  3F41               	moviw [1]fsr1
  9457  11A9  00F8               	movwf	??_fputc+1
  9458  11AA  0A76               	incf	fputc@fp,w
  9459  11AB  0086               	movwf	6
  9460  11AC  0187               	clrf	7
  9461  11AD  3F40               	moviw [0]fsr1
  9462  11AE  00F9               	movwf	??_fputc+2
  9463  11AF  3F41               	moviw [1]fsr1
  9464  11B0  00FA               	movwf	??_fputc+3
  9465  11B1  087A               	movf	??_fputc+3,w
  9466  11B2  3A80               	xorlw	128
  9467  11B3  00FB               	movwf	??_fputc+4
  9468  11B4  0878               	movf	??_fputc+1,w
  9469  11B5  3A80               	xorlw	128
  9470  11B6  027B               	subwf	??_fputc+4,w
  9471  11B7  1D03               	skipz
  9472  11B8  29BB               	goto	u3225
  9473  11B9  0877               	movf	??_fputc,w
  9474  11BA  0279               	subwf	??_fputc+2,w
  9475  11BB                     u3225:	
  9476  11BB  1803               	skipnc
  9477  11BC  0008               	return
  9478  11BD                     l4144:	
  9479  11BD  0A76               	incf	fputc@fp,w
  9480  11BE  0086               	movwf	6
  9481  11BF  0187               	clrf	7
  9482  11C0  3001               	movlw	1
  9483  11C1  0781               	addwf	1,f
  9484  11C2  3141               	addfsr 1,1
  9485  11C3  1803               	skipnc
  9486  11C4  0A81               	incf	1,f
  9487  11C5  0008               	return
  9488  11C6                     __end_of_fputc:	
  9489                           
  9490                           	psect	text18
  9491  0800                     __ptext18:	
  9492 ;; *************** function _putch *****************
  9493 ;; Defined at:
  9494 ;;		line 201 in file "mcc_generated_files/eusart.c"
  9495 ;; Parameters:    Size  Location     Type
  9496 ;;  txData          1    wreg     unsigned char 
  9497 ;; Auto vars:     Size  Location     Type
  9498 ;;  txData          1    3[COMMON] unsigned char 
  9499 ;; Return value:  Size  Location     Type
  9500 ;;                  1    wreg      void 
  9501 ;; Registers used:
  9502 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9503 ;; Tracked objects:
  9504 ;;		On entry : 0/0
  9505 ;;		On exit  : 0/0
  9506 ;;		Unchanged: 0/0
  9507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9509 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9511 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9512 ;;Total ram usage:        1 bytes
  9513 ;; Hardware stack levels used:    1
  9514 ;; Hardware stack levels required when called:    5
  9515 ;; This function calls:
  9516 ;;		_EUSART_Write
  9517 ;; This function is called by:
  9518 ;;		_fputc
  9519 ;; This function uses a non-reentrant model
  9520 ;;
  9521                           
  9522                           
  9523                           ;psect for function _putch
  9524  0800                     _putch:	
  9525                           
  9526                           ;incstack = 0
  9527                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9528                           ;putch@txData stored from wreg
  9529  0800  00F3               	movwf	putch@txData
  9530                           
  9531                           ;mcc_generated_files/eusart.c: 201: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 202: {;mcc_generated_files/eusart.c: 203:     EUSART_Write(txData);
  9532  0801  0873               	movf	putch@txData,w
  9533  0802  319F  27B6         	fcall	_EUSART_Write
  9534  0804  0008               	return
  9535  0805                     __end_of_putch:	
  9536                           
  9537                           	psect	text19
  9538  1FB6                     __ptext19:	
  9539 ;; *************** function _EUSART_Write *****************
  9540 ;; Defined at:
  9541 ;;		line 173 in file "mcc_generated_files/eusart.c"
  9542 ;; Parameters:    Size  Location     Type
  9543 ;;  txData          1    wreg     unsigned char 
  9544 ;; Auto vars:     Size  Location     Type
  9545 ;;  txData          1    2[COMMON] unsigned char 
  9546 ;; Return value:  Size  Location     Type
  9547 ;;                  1    wreg      void 
  9548 ;; Registers used:
  9549 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9550 ;; Tracked objects:
  9551 ;;		On entry : 0/0
  9552 ;;		On exit  : 0/0
  9553 ;;		Unchanged: 0/0
  9554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9556 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9557 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9558 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9559 ;;Total ram usage:        2 bytes
  9560 ;; Hardware stack levels used:    1
  9561 ;; Hardware stack levels required when called:    4
  9562 ;; This function calls:
  9563 ;;		Nothing
  9564 ;; This function is called by:
  9565 ;;		_putch
  9566 ;; This function uses a non-reentrant model
  9567 ;;
  9568                           
  9569                           
  9570                           ;psect for function _EUSART_Write
  9571  1FB6                     _EUSART_Write:	
  9572                           
  9573                           ;incstack = 0
  9574                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  9575                           ;EUSART_Write@txData stored from wreg
  9576  1FB6  00F2               	movwf	EUSART_Write@txData
  9577  1FB7                     l3998:	
  9578                           ;mcc_generated_files/eusart.c: 173: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 174: {;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemai
      +                          ning)
  9579                           
  9580                           
  9581                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
  9582  1FB7  0022               	movlb	2	; select bank2
  9583  1FB8  086E               	movf	_eusartTxBufferRemaining^(0+256),w	;volatile
  9584  1FB9  1903               	btfsc	3,2
  9585  1FBA  2FB7               	goto	l3998
  9586                           
  9587                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TXIE)
  9588  1FBB  0021               	movlb	1	; select bank1
  9589  1FBC  1A11               	btfsc	17,4	;volatile
  9590  1FBD  2FC2               	goto	l216
  9591                           
  9592                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TX1
      +                          REG = txData;
  9593  1FBE  0872               	movf	EUSART_Write@txData,w
  9594  1FBF  0023               	movlb	3	; select bank3
  9595  1FC0  009A               	movwf	26	;volatile
  9596                           
  9597                           ;mcc_generated_files/eusart.c: 182:     }
  9598  1FC1  2FD7               	goto	l4012
  9599  1FC2                     l216:	
  9600                           ;mcc_generated_files/eusart.c: 183:     else
  9601                           
  9602                           
  9603                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TXIE = 0;
  9604  1FC2  1211               	bcf	17,4	;volatile
  9605                           
  9606                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
  9607  1FC3  0872               	movf	EUSART_Write@txData,w
  9608  1FC4  00F1               	movwf	??_EUSART_Write
  9609  1FC5  086F               	movf	_eusartTxHead^(0+128),w
  9610  1FC6  3ECD               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
  9611  1FC7  0086               	movwf	6
  9612  1FC8  3001               	movlw	1	; select bank3/4
  9613  1FC9  0087               	movwf	7
  9614  1FCA  0871               	movf	??_EUSART_Write,w
  9615  1FCB  0081               	movwf	1
  9616  1FCC  3001               	movlw	1
  9617  1FCD  00F1               	movwf	??_EUSART_Write
  9618  1FCE  0871               	movf	??_EUSART_Write,w
  9619  1FCF  07EF               	addwf	_eusartTxHead^(0+128),f	;volatile
  9620                           
  9621                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  9622  1FD0  3008               	movlw	8
  9623  1FD1  026F               	subwf	_eusartTxHead^(0+128),w	;volatile
  9624  1FD2  1803               	btfsc	3,0
  9625                           
  9626                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
  9627  1FD3  01EF               	clrf	_eusartTxHead^(0+128)	;volatile
  9628                           
  9629                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
  9630  1FD4  3001               	movlw	1
  9631  1FD5  0022               	movlb	2	; select bank2
  9632  1FD6  02EE               	subwf	_eusartTxBufferRemaining^(0+256),f	;volatile
  9633  1FD7                     l4012:	
  9634                           
  9635                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TXIE = 1;
  9636  1FD7  0021               	movlb	1	; select bank1
  9637  1FD8  1611               	bsf	17,4	;volatile
  9638  1FD9  0008               	return
  9639  1FDA                     __end_of_EUSART_Write:	
  9640                           
  9641                           	psect	text20
  9642  06F1                     __ptext20:	
  9643 ;; *************** function _floorf *****************
  9644 ;; Defined at:
  9645 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
  9646 ;; Parameters:    Size  Location     Type
  9647 ;;  x               4   32[BANK0 ] float 
  9648 ;; Auto vars:     Size  Location     Type
  9649 ;;  u               4   48[BANK0 ] struct .
  9650 ;;  m               4   42[BANK0 ] unsigned long 
  9651 ;;  e               2   46[BANK0 ] int 
  9652 ;; Return value:  Size  Location     Type
  9653 ;;                  4   32[BANK0 ] float 
  9654 ;; Registers used:
  9655 ;;		wreg, status,2, status,0
  9656 ;; Tracked objects:
  9657 ;;		On entry : 0/0
  9658 ;;		On exit  : 0/0
  9659 ;;		Unchanged: 0/0
  9660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9661 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9662 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9663 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9664 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9665 ;;Total ram usage:       20 bytes
  9666 ;; Hardware stack levels used:    1
  9667 ;; Hardware stack levels required when called:    4
  9668 ;; This function calls:
  9669 ;;		Nothing
  9670 ;; This function is called by:
  9671 ;;		_efgtoa
  9672 ;; This function uses a non-reentrant model
  9673 ;;
  9674                           
  9675                           
  9676                           ;psect for function _floorf
  9677  06F1                     _floorf:	
  9678                           
  9679                           ;incstack = 0
  9680                           ; Regs used in _floorf: [wreg+status,2+status,0]
  9681  06F1  0022               	movlb	2	; select bank2
  9682  06F2  084A               	movf	(floorf@F524+3)^(0+256),w
  9683  06F3  0020               	movlb	0	; select bank0
  9684  06F4  00D3               	movwf	floorf@u+3
  9685  06F5  0022               	movlb	2	; select bank2
  9686  06F6  0849               	movf	(floorf@F524+2)^(0+256),w
  9687  06F7  0020               	movlb	0	; select bank0
  9688  06F8  00D2               	movwf	floorf@u+2
  9689  06F9  0022               	movlb	2	; select bank2
  9690  06FA  0848               	movf	(floorf@F524+1)^(0+256),w
  9691  06FB  0020               	movlb	0	; select bank0
  9692  06FC  00D1               	movwf	floorf@u+1
  9693  06FD  0022               	movlb	2	; select bank2
  9694  06FE  0847               	movf	floorf@F524^(0+256),w
  9695  06FF  0020               	movlb	0	; select bank0
  9696  0700  00D0               	movwf	floorf@u
  9697  0701  0843               	movf	floorf@x+3,w
  9698  0702  00D3               	movwf	floorf@u+3
  9699  0703  0842               	movf	floorf@x+2,w
  9700  0704  00D2               	movwf	floorf@u+2
  9701  0705  0841               	movf	floorf@x+1,w
  9702  0706  00D1               	movwf	floorf@u+1
  9703  0707  0840               	movf	floorf@x,w
  9704  0708  00D0               	movwf	floorf@u
  9705  0709  0850               	movf	floorf@u,w
  9706  070A  00C4               	movwf	??_floorf
  9707  070B  0851               	movf	floorf@u+1,w
  9708  070C  00C5               	movwf	??_floorf+1
  9709  070D  0852               	movf	floorf@u+2,w
  9710  070E  00C6               	movwf	??_floorf+2
  9711  070F  0853               	movf	floorf@u+3,w
  9712  0710  00C7               	movwf	??_floorf+3
  9713  0711  3017               	movlw	23
  9714  0712                     u3955:	
  9715  0712  36C7               	lsrf	??_floorf+3,f
  9716  0713  0CC6               	rrf	??_floorf+2,f
  9717  0714  0CC5               	rrf	??_floorf+1,f
  9718  0715  0CC4               	rrf	??_floorf,f
  9719  0716  0B89               	decfsz	9,f
  9720  0717  2F12               	goto	u3955
  9721  0718  30FF               	movlw	255
  9722  0719  0544               	andwf	??_floorf,w
  9723  071A  00C8               	movwf	??_floorf+4
  9724  071B  3000               	movlw	0
  9725  071C  0545               	andwf	??_floorf+1,w
  9726  071D  00C9               	movwf	??_floorf+5
  9727  071E  0848               	movf	??_floorf+4,w
  9728  071F  3E81               	addlw	129
  9729  0720  00CE               	movwf	floorf@e
  9730  0721  30FF               	movlw	255
  9731  0722  3D49               	addwfc	??_floorf+5,w
  9732  0723  00CF               	movwf	floorf@e+1
  9733  0724  084F               	movf	floorf@e+1,w
  9734  0725  3A80               	xorlw	128
  9735  0726  00C4               	movwf	??_floorf
  9736  0727  3080               	movlw	128
  9737  0728  0244               	subwf	??_floorf,w
  9738  0729  1D03               	skipz
  9739  072A  2F2D               	goto	u3965
  9740  072B  3017               	movlw	23
  9741  072C  024E               	subwf	floorf@e,w
  9742  072D                     u3965:	
  9743  072D  1803               	btfsc	3,0
  9744  072E  0008               	return
  9745  072F  0020               	movlb	0	; select bank0
  9746  0730  1BCF               	btfsc	floorf@e+1,7
  9747  0731  2F8A               	goto	l4624
  9748  0732  30FF               	movlw	255
  9749  0733  00C4               	movwf	??_floorf
  9750  0734  30FF               	movlw	255
  9751  0735  00C5               	movwf	??_floorf+1
  9752  0736  307F               	movlw	127
  9753  0737  00C6               	movwf	??_floorf+2
  9754  0738  3000               	movlw	0
  9755  0739  00C7               	movwf	??_floorf+3
  9756  073A  0A4E               	incf	floorf@e,w
  9757  073B  2F40               	goto	u3980
  9758  073C                     u3985:	
  9759  073C  37C7               	asrf	??_floorf+3,f
  9760  073D  0CC6               	rrf	??_floorf+2,f
  9761  073E  0CC5               	rrf	??_floorf+1,f
  9762  073F  0CC4               	rrf	??_floorf,f
  9763  0740                     u3980:	
  9764  0740  0B89               	decfsz	9,f
  9765  0741  2F3C               	goto	u3985
  9766  0742  0847               	movf	??_floorf+3,w
  9767  0743  00CD               	movwf	floorf@m+3
  9768  0744  0846               	movf	??_floorf+2,w
  9769  0745  00CC               	movwf	floorf@m+2
  9770  0746  0845               	movf	??_floorf+1,w
  9771  0747  00CB               	movwf	floorf@m+1
  9772  0748  0844               	movf	??_floorf,w
  9773  0749  00CA               	movwf	floorf@m
  9774  074A  0850               	movf	floorf@u,w
  9775  074B  054A               	andwf	floorf@m,w
  9776  074C  00C4               	movwf	??_floorf
  9777  074D  0851               	movf	floorf@u+1,w
  9778  074E  054B               	andwf	floorf@m+1,w
  9779  074F  00C5               	movwf	??_floorf+1
  9780  0750  0852               	movf	floorf@u+2,w
  9781  0751  054C               	andwf	floorf@m+2,w
  9782  0752  00C6               	movwf	??_floorf+2
  9783  0753  0853               	movf	floorf@u+3,w
  9784  0754  054D               	andwf	floorf@m+3,w
  9785  0755  00C7               	movwf	??_floorf+3
  9786  0756  0847               	movf	??_floorf+3,w
  9787  0757  0446               	iorwf	??_floorf+2,w
  9788  0758  0445               	iorwf	??_floorf+1,w
  9789  0759  0444               	iorwf	??_floorf,w
  9790  075A  1903               	btfsc	3,2
  9791  075B  0008               	return
  9792  075C  0850               	movf	floorf@u,w
  9793  075D  00C4               	movwf	??_floorf
  9794  075E  0851               	movf	floorf@u+1,w
  9795  075F  00C5               	movwf	??_floorf+1
  9796  0760  0852               	movf	floorf@u+2,w
  9797  0761  00C6               	movwf	??_floorf+2
  9798  0762  0853               	movf	floorf@u+3,w
  9799  0763  00C7               	movwf	??_floorf+3
  9800  0764  301F               	movlw	31
  9801  0765                     u4005:	
  9802  0765  36C7               	lsrf	??_floorf+3,f
  9803  0766  0CC6               	rrf	??_floorf+2,f
  9804  0767  0CC5               	rrf	??_floorf+1,f
  9805  0768  0CC4               	rrf	??_floorf,f
  9806  0769  0B89               	decfsz	9,f
  9807  076A  2F65               	goto	u4005
  9808  076B  0847               	movf	??_floorf+3,w
  9809  076C  0446               	iorwf	??_floorf+2,w
  9810  076D  0445               	iorwf	??_floorf+1,w
  9811  076E  0444               	iorwf	??_floorf,w
  9812  076F  1903               	skipnz
  9813  0770  2F79               	goto	l4622
  9814  0771  084A               	movf	floorf@m,w
  9815  0772  07D0               	addwf	floorf@u,f
  9816  0773  084B               	movf	floorf@m+1,w
  9817  0774  3DD1               	addwfc	floorf@u+1,f
  9818  0775  084C               	movf	floorf@m+2,w
  9819  0776  3DD2               	addwfc	floorf@u+2,f
  9820  0777  084D               	movf	floorf@m+3,w
  9821  0778  3DD3               	addwfc	floorf@u+3,f
  9822  0779                     l4622:	
  9823  0779  094A               	comf	floorf@m,w
  9824  077A  00C4               	movwf	??_floorf
  9825  077B  094B               	comf	floorf@m+1,w
  9826  077C  00C5               	movwf	??_floorf+1
  9827  077D  094C               	comf	floorf@m+2,w
  9828  077E  00C6               	movwf	??_floorf+2
  9829  077F  094D               	comf	floorf@m+3,w
  9830  0780  00C7               	movwf	??_floorf+3
  9831  0781  0844               	movf	??_floorf,w
  9832  0782  05D0               	andwf	floorf@u,f
  9833  0783  0845               	movf	??_floorf+1,w
  9834  0784  05D1               	andwf	floorf@u+1,f
  9835  0785  0846               	movf	??_floorf+2,w
  9836  0786  05D2               	andwf	floorf@u+2,f
  9837  0787  0847               	movf	??_floorf+3,w
  9838  0788  05D3               	andwf	floorf@u+3,f
  9839  0789  2FC0               	goto	l1640
  9840  078A                     l4624:	
  9841  078A  0850               	movf	floorf@u,w
  9842  078B  00C4               	movwf	??_floorf
  9843  078C  0851               	movf	floorf@u+1,w
  9844  078D  00C5               	movwf	??_floorf+1
  9845  078E  0852               	movf	floorf@u+2,w
  9846  078F  00C6               	movwf	??_floorf+2
  9847  0790  0853               	movf	floorf@u+3,w
  9848  0791  00C7               	movwf	??_floorf+3
  9849  0792  301F               	movlw	31
  9850  0793                     u4025:	
  9851  0793  36C7               	lsrf	??_floorf+3,f
  9852  0794  0CC6               	rrf	??_floorf+2,f
  9853  0795  0CC5               	rrf	??_floorf+1,f
  9854  0796  0CC4               	rrf	??_floorf,f
  9855  0797  0B89               	decfsz	9,f
  9856  0798  2F93               	goto	u4025
  9857  0799  0847               	movf	??_floorf+3,w
  9858  079A  0446               	iorwf	??_floorf+2,w
  9859  079B  0445               	iorwf	??_floorf+1,w
  9860  079C  0444               	iorwf	??_floorf,w
  9861  079D  1D03               	skipz
  9862  079E  2FA3               	goto	l4628
  9863  079F  3000               	movlw	0
  9864  07A0  00D3               	movwf	floorf@u+3
  9865  07A1  3000               	movlw	0
  9866  07A2  2FBB               	goto	L9
  9867  07A3                     l4628:	
  9868  07A3  0850               	movf	floorf@u,w
  9869  07A4  00C4               	movwf	??_floorf
  9870  07A5  0851               	movf	floorf@u+1,w
  9871  07A6  00C5               	movwf	??_floorf+1
  9872  07A7  0852               	movf	floorf@u+2,w
  9873  07A8  00C6               	movwf	??_floorf+2
  9874  07A9  0853               	movf	floorf@u+3,w
  9875  07AA  00C7               	movwf	??_floorf+3
  9876  07AB  3001               	movlw	1
  9877  07AC                     u4045:	
  9878  07AC  35C4               	lslf	??_floorf,f
  9879  07AD  0DC5               	rlf	??_floorf+1,f
  9880  07AE  0DC6               	rlf	??_floorf+2,f
  9881  07AF  0DC7               	rlf	??_floorf+3,f
  9882  07B0  0B89               	decfsz	9,f
  9883  07B1  2FAC               	goto	u4045
  9884  07B2  0847               	movf	??_floorf+3,w
  9885  07B3  0446               	iorwf	??_floorf+2,w
  9886  07B4  0445               	iorwf	??_floorf+1,w
  9887  07B5  0444               	iorwf	??_floorf,w
  9888  07B6  1903               	skipnz
  9889  07B7  2FC0               	goto	l1640
  9890  07B8  30BF               	movlw	191
  9891  07B9  00D3               	movwf	floorf@u+3
  9892  07BA  3080               	movlw	128
  9893  07BB                     L9:	
  9894  07BB  00D2               	movwf	floorf@u+2
  9895  07BC  3000               	movlw	0
  9896  07BD  00D1               	movwf	floorf@u+1
  9897  07BE  3000               	movlw	0
  9898  07BF  00D0               	movwf	floorf@u
  9899  07C0                     l1640:	
  9900  07C0  0853               	movf	floorf@u+3,w
  9901  07C1  00C3               	movwf	?_floorf+3
  9902  07C2  0852               	movf	floorf@u+2,w
  9903  07C3  00C2               	movwf	?_floorf+2
  9904  07C4  0851               	movf	floorf@u+1,w
  9905  07C5  00C1               	movwf	?_floorf+1
  9906  07C6  0850               	movf	floorf@u,w
  9907  07C7  00C0               	movwf	?_floorf
  9908  07C8  0008               	return
  9909  07C9                     __end_of_floorf:	
  9910                           
  9911                           	psect	text21
  9912  14FC                     __ptext21:	
  9913 ;; *************** function ___fpclassifyf *****************
  9914 ;; Defined at:
  9915 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
  9916 ;; Parameters:    Size  Location     Type
  9917 ;;  x               4    1[COMMON] float 
  9918 ;; Auto vars:     Size  Location     Type
  9919 ;;  u               4    2[BANK0 ] struct .
  9920 ;;  e               2    0[BANK0 ] int 
  9921 ;; Return value:  Size  Location     Type
  9922 ;;                  2    1[COMMON] int 
  9923 ;; Registers used:
  9924 ;;		wreg, status,2, status,0
  9925 ;; Tracked objects:
  9926 ;;		On entry : 0/0
  9927 ;;		On exit  : 0/0
  9928 ;;		Unchanged: 0/0
  9929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9930 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9931 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9932 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9933 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9934 ;;Total ram usage:       16 bytes
  9935 ;; Hardware stack levels used:    1
  9936 ;; Hardware stack levels required when called:    4
  9937 ;; This function calls:
  9938 ;;		Nothing
  9939 ;; This function is called by:
  9940 ;;		_efgtoa
  9941 ;; This function uses a non-reentrant model
  9942 ;;
  9943                           
  9944                           
  9945                           ;psect for function ___fpclassifyf
  9946  14FC                     ___fpclassifyf:	
  9947                           
  9948                           ;incstack = 0
  9949                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  9950  14FC  0022               	movlb	2	; select bank2
  9951  14FD  084E               	movf	(___fpclassifyf@F463+3)^(0+256),w
  9952  14FE  0020               	movlb	0	; select bank0
  9953  14FF  00A5               	movwf	___fpclassifyf@u+3
  9954  1500  0022               	movlb	2	; select bank2
  9955  1501  084D               	movf	(___fpclassifyf@F463+2)^(0+256),w
  9956  1502  0020               	movlb	0	; select bank0
  9957  1503  00A4               	movwf	___fpclassifyf@u+2
  9958  1504  0022               	movlb	2	; select bank2
  9959  1505  084C               	movf	(___fpclassifyf@F463+1)^(0+256),w
  9960  1506  0020               	movlb	0	; select bank0
  9961  1507  00A3               	movwf	___fpclassifyf@u+1
  9962  1508  0022               	movlb	2	; select bank2
  9963  1509  084B               	movf	___fpclassifyf@F463^(0+256),w
  9964  150A  0020               	movlb	0	; select bank0
  9965  150B  00A2               	movwf	___fpclassifyf@u
  9966  150C  0874               	movf	___fpclassifyf@x+3,w
  9967  150D  00A5               	movwf	___fpclassifyf@u+3
  9968  150E  0873               	movf	___fpclassifyf@x+2,w
  9969  150F  00A4               	movwf	___fpclassifyf@u+2
  9970  1510  0872               	movf	___fpclassifyf@x+1,w
  9971  1511  00A3               	movwf	___fpclassifyf@u+1
  9972  1512  0871               	movf	___fpclassifyf@x,w
  9973  1513  00A2               	movwf	___fpclassifyf@u
  9974  1514  0822               	movf	___fpclassifyf@u,w
  9975  1515  00F5               	movwf	??___fpclassifyf
  9976  1516  0823               	movf	___fpclassifyf@u+1,w
  9977  1517  00F6               	movwf	??___fpclassifyf+1
  9978  1518  0824               	movf	___fpclassifyf@u+2,w
  9979  1519  00F7               	movwf	??___fpclassifyf+2
  9980  151A  0825               	movf	___fpclassifyf@u+3,w
  9981  151B  00F8               	movwf	??___fpclassifyf+3
  9982  151C  3017               	movlw	23
  9983  151D                     u3835:	
  9984  151D  36F8               	lsrf	??___fpclassifyf+3,f
  9985  151E  0CF7               	rrf	??___fpclassifyf+2,f
  9986  151F  0CF6               	rrf	??___fpclassifyf+1,f
  9987  1520  0CF5               	rrf	??___fpclassifyf,f
  9988  1521  0B89               	decfsz	9,f
  9989  1522  2D1D               	goto	u3835
  9990  1523  30FF               	movlw	255
  9991  1524  0575               	andwf	??___fpclassifyf,w
  9992  1525  00A0               	movwf	___fpclassifyf@e
  9993  1526  3000               	movlw	0
  9994  1527  0576               	andwf	??___fpclassifyf+1,w
  9995  1528  00A1               	movwf	___fpclassifyf@e+1
  9996  1529  0820               	movf	___fpclassifyf@e,w
  9997  152A  0421               	iorwf	___fpclassifyf@e+1,w
  9998  152B  1D03               	btfss	3,2
  9999  152C  2D4C               	goto	l4580
 10000  152D  0822               	movf	___fpclassifyf@u,w
 10001  152E  00F5               	movwf	??___fpclassifyf
 10002  152F  0823               	movf	___fpclassifyf@u+1,w
 10003  1530  00F6               	movwf	??___fpclassifyf+1
 10004  1531  0824               	movf	___fpclassifyf@u+2,w
 10005  1532  00F7               	movwf	??___fpclassifyf+2
 10006  1533  0825               	movf	___fpclassifyf@u+3,w
 10007  1534  00F8               	movwf	??___fpclassifyf+3
 10008  1535  3001               	movlw	1
 10009  1536                     u3855:	
 10010  1536  35F5               	lslf	??___fpclassifyf,f
 10011  1537  0DF6               	rlf	??___fpclassifyf+1,f
 10012  1538  0DF7               	rlf	??___fpclassifyf+2,f
 10013  1539  0DF8               	rlf	??___fpclassifyf+3,f
 10014  153A  0B89               	decfsz	9,f
 10015  153B  2D36               	goto	u3855
 10016  153C  0878               	movf	??___fpclassifyf+3,w
 10017  153D  0477               	iorwf	??___fpclassifyf+2,w
 10018  153E  0476               	iorwf	??___fpclassifyf+1,w
 10019  153F  0475               	iorwf	??___fpclassifyf,w
 10020  1540  1D03               	skipz
 10021  1541  2D47               	goto	l4576
 10022  1542  3002               	movlw	2
 10023  1543  00F1               	movwf	?___fpclassifyf
 10024  1544  3000               	movlw	0
 10025  1545  00F2               	movwf	?___fpclassifyf+1
 10026  1546  0008               	return
 10027  1547                     l4576:	
 10028  1547  3003               	movlw	3
 10029  1548  00F1               	movwf	?___fpclassifyf
 10030  1549  3000               	movlw	0
 10031  154A  00F2               	movwf	?___fpclassifyf+1
 10032  154B  0008               	return
 10033  154C                     l4580:	
 10034  154C  0A20               	incf	___fpclassifyf@e,w
 10035  154D  0421               	iorwf	___fpclassifyf@e+1,w
 10036  154E  1D03               	btfss	3,2
 10037  154F  2D6F               	goto	l4586
 10038  1550  0822               	movf	___fpclassifyf@u,w
 10039  1551  00F5               	movwf	??___fpclassifyf
 10040  1552  0823               	movf	___fpclassifyf@u+1,w
 10041  1553  00F6               	movwf	??___fpclassifyf+1
 10042  1554  0824               	movf	___fpclassifyf@u+2,w
 10043  1555  00F7               	movwf	??___fpclassifyf+2
 10044  1556  0825               	movf	___fpclassifyf@u+3,w
 10045  1557  00F8               	movwf	??___fpclassifyf+3
 10046  1558  3009               	movlw	9
 10047  1559                     u3885:	
 10048  1559  35F5               	lslf	??___fpclassifyf,f
 10049  155A  0DF6               	rlf	??___fpclassifyf+1,f
 10050  155B  0DF7               	rlf	??___fpclassifyf+2,f
 10051  155C  0DF8               	rlf	??___fpclassifyf+3,f
 10052  155D  0B89               	decfsz	9,f
 10053  155E  2D59               	goto	u3885
 10054  155F  0878               	movf	??___fpclassifyf+3,w
 10055  1560  0477               	iorwf	??___fpclassifyf+2,w
 10056  1561  0476               	iorwf	??___fpclassifyf+1,w
 10057  1562  0475               	iorwf	??___fpclassifyf,w
 10058  1563  1D03               	btfss	3,2
 10059  1564  2D67               	goto	u3890
 10060  1565  3001               	movlw	1
 10061  1566  2D68               	goto	u3900
 10062  1567                     u3890:	
 10063  1567  3000               	movlw	0
 10064  1568                     u3900:	
 10065  1568  00F9               	movwf	??___fpclassifyf+4
 10066  1569  01FA               	clrf	??___fpclassifyf+5
 10067  156A  0879               	movf	??___fpclassifyf+4,w
 10068  156B  00F1               	movwf	?___fpclassifyf
 10069  156C  087A               	movf	??___fpclassifyf+5,w
 10070  156D  00F2               	movwf	?___fpclassifyf+1
 10071  156E  0008               	return
 10072  156F                     l4586:	
 10073  156F  3004               	movlw	4
 10074  1570  00F1               	movwf	?___fpclassifyf
 10075  1571  3000               	movlw	0
 10076  1572  00F2               	movwf	?___fpclassifyf+1
 10077  1573  0008               	return
 10078  1574                     __end_of___fpclassifyf:	
 10079                           
 10080                           	psect	text22
 10081  1497                     __ptext22:	
 10082 ;; *************** function ___fltol *****************
 10083 ;; Defined at:
 10084 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 10085 ;; Parameters:    Size  Location     Type
 10086 ;;  f1              4    1[COMMON] int 
 10087 ;; Auto vars:     Size  Location     Type
 10088 ;;  exp1            1   11[COMMON] unsigned char 
 10089 ;;  sign1           1   10[COMMON] unsigned char 
 10090 ;; Return value:  Size  Location     Type
 10091 ;;                  4    1[COMMON] long 
 10092 ;; Registers used:
 10093 ;;		wreg, status,2, status,0
 10094 ;; Tracked objects:
 10095 ;;		On entry : 0/0
 10096 ;;		On exit  : 0/0
 10097 ;;		Unchanged: 0/0
 10098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10099 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10100 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10101 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10102 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10103 ;;Total ram usage:       11 bytes
 10104 ;; Hardware stack levels used:    1
 10105 ;; Hardware stack levels required when called:    4
 10106 ;; This function calls:
 10107 ;;		Nothing
 10108 ;; This function is called by:
 10109 ;;		_efgtoa
 10110 ;; This function uses a non-reentrant model
 10111 ;;
 10112                           
 10113                           
 10114                           ;psect for function ___fltol
 10115  1497                     ___fltol:	
 10116                           
 10117                           ;incstack = 0
 10118                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 10119  1497  1003               	clrc
 10120  1498  0D73               	rlf	___fltol@f1+2,w
 10121  1499  0D74               	rlf	___fltol@f1+3,w
 10122  149A  00F5               	movwf	??___fltol
 10123  149B  0875               	movf	??___fltol,w
 10124  149C  00FB               	movwf	___fltol@exp1
 10125  149D  087B               	movf	___fltol@exp1,w
 10126  149E  1D03               	btfss	3,2
 10127  149F  2CA9               	goto	l4762
 10128  14A0                     l4758:	
 10129  14A0  3000               	movlw	0
 10130  14A1  00F4               	movwf	?___fltol+3
 10131  14A2  3000               	movlw	0
 10132  14A3  00F3               	movwf	?___fltol+2
 10133  14A4  3000               	movlw	0
 10134  14A5  00F2               	movwf	?___fltol+1
 10135  14A6  3000               	movlw	0
 10136  14A7  00F1               	movwf	?___fltol
 10137  14A8  0008               	return
 10138  14A9                     l4762:	
 10139  14A9  0871               	movf	___fltol@f1,w
 10140  14AA  00F5               	movwf	??___fltol
 10141  14AB  0872               	movf	___fltol@f1+1,w
 10142  14AC  00F6               	movwf	??___fltol+1
 10143  14AD  0873               	movf	___fltol@f1+2,w
 10144  14AE  00F7               	movwf	??___fltol+2
 10145  14AF  0874               	movf	___fltol@f1+3,w
 10146  14B0  00F8               	movwf	??___fltol+3
 10147  14B1  301F               	movlw	31
 10148  14B2                     u4355:	
 10149  14B2  36F8               	lsrf	??___fltol+3,f
 10150  14B3  0CF7               	rrf	??___fltol+2,f
 10151  14B4  0CF6               	rrf	??___fltol+1,f
 10152  14B5  0CF5               	rrf	??___fltol,f
 10153  14B6  0B89               	decfsz	9,f
 10154  14B7  2CB2               	goto	u4355
 10155  14B8  0875               	movf	??___fltol,w
 10156  14B9  00F9               	movwf	??___fltol+4
 10157  14BA  0879               	movf	??___fltol+4,w
 10158  14BB  00FA               	movwf	___fltol@sign1
 10159  14BC  17F3               	bsf	___fltol@f1+2,7
 10160  14BD  30FF               	movlw	255
 10161  14BE  05F1               	andwf	___fltol@f1,f
 10162  14BF  30FF               	movlw	255
 10163  14C0  05F2               	andwf	___fltol@f1+1,f
 10164  14C1  30FF               	movlw	255
 10165  14C2  05F3               	andwf	___fltol@f1+2,f
 10166  14C3  3000               	movlw	0
 10167  14C4  05F4               	andwf	___fltol@f1+3,f
 10168  14C5  3096               	movlw	150
 10169  14C6  02FB               	subwf	___fltol@exp1,f
 10170  14C7  1FFB               	btfss	___fltol@exp1,7
 10171  14C8  2CDC               	goto	l4780
 10172  14C9  087B               	movf	___fltol@exp1,w
 10173  14CA  3A80               	xorlw	128
 10174  14CB  3E97               	addlw	151
 10175  14CC  1C03               	btfss	3,0
 10176  14CD  2CA0               	goto	l4758
 10177  14CE                     l4778:	
 10178  14CE  3001               	movlw	1
 10179  14CF                     u4385:	
 10180  14CF  36F4               	lsrf	___fltol@f1+3,f
 10181  14D0  0CF3               	rrf	___fltol@f1+2,f
 10182  14D1  0CF2               	rrf	___fltol@f1+1,f
 10183  14D2  0CF1               	rrf	___fltol@f1,f
 10184  14D3  0B89               	decfsz	9,f
 10185  14D4  2CCF               	goto	u4385
 10186  14D5  3001               	movlw	1
 10187  14D6  00F5               	movwf	??___fltol
 10188  14D7  0875               	movf	??___fltol,w
 10189  14D8  07FB               	addwf	___fltol@exp1,f
 10190  14D9  1903               	btfsc	3,2
 10191  14DA  2CED               	goto	l4788
 10192  14DB  2CCE               	goto	l4778
 10193  14DC                     l4780:	
 10194  14DC  3020               	movlw	32
 10195  14DD  027B               	subwf	___fltol@exp1,w
 10196  14DE  1803               	btfsc	3,0
 10197  14DF  2CA0               	goto	l4758
 10198  14E0                     l1370:	
 10199  14E0  087B               	movf	___fltol@exp1,w
 10200  14E1  1903               	btfsc	3,2
 10201  14E2  2CED               	goto	l4788
 10202  14E3  3001               	movlw	1
 10203  14E4                     u4415:	
 10204  14E4  35F1               	lslf	___fltol@f1,f
 10205  14E5  0DF2               	rlf	___fltol@f1+1,f
 10206  14E6  0DF3               	rlf	___fltol@f1+2,f
 10207  14E7  0DF4               	rlf	___fltol@f1+3,f
 10208  14E8  0B89               	decfsz	9,f
 10209  14E9  2CE4               	goto	u4415
 10210  14EA  3001               	movlw	1
 10211  14EB  02FB               	subwf	___fltol@exp1,f
 10212  14EC  2CE0               	goto	l1370
 10213  14ED                     l4788:	
 10214  14ED  087A               	movf	___fltol@sign1,w
 10215  14EE  1903               	btfsc	3,2
 10216  14EF  0008               	return
 10217  14F0  09F1               	comf	___fltol@f1,f
 10218  14F1  09F2               	comf	___fltol@f1+1,f
 10219  14F2  09F3               	comf	___fltol@f1+2,f
 10220  14F3  09F4               	comf	___fltol@f1+3,f
 10221  14F4  0AF1               	incf	___fltol@f1,f
 10222  14F5  1903               	skipnz
 10223  14F6  0AF2               	incf	___fltol@f1+1,f
 10224  14F7  1903               	skipnz
 10225  14F8  0AF3               	incf	___fltol@f1+2,f
 10226  14F9  1903               	skipnz
 10227  14FA  0AF4               	incf	___fltol@f1+3,f
 10228  14FB  0008               	return
 10229  14FC                     __end_of___fltol:	
 10230                           
 10231                           	psect	text23
 10232  1F56                     __ptext23:	
 10233 ;; *************** function ___flsub *****************
 10234 ;; Defined at:
 10235 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 10236 ;; Parameters:    Size  Location     Type
 10237 ;;  a               4   26[BANK0 ] long 
 10238 ;;  b               4   30[BANK0 ] long 
 10239 ;; Auto vars:     Size  Location     Type
 10240 ;;		None
 10241 ;; Return value:  Size  Location     Type
 10242 ;;                  4   26[BANK0 ] long 
 10243 ;; Registers used:
 10244 ;;		wreg, status,2, status,0, pclath, cstack
 10245 ;; Tracked objects:
 10246 ;;		On entry : 0/0
 10247 ;;		On exit  : 0/0
 10248 ;;		Unchanged: 0/0
 10249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10250 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10253 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10254 ;;Total ram usage:        8 bytes
 10255 ;; Hardware stack levels used:    1
 10256 ;; Hardware stack levels required when called:    5
 10257 ;; This function calls:
 10258 ;;		___fladd
 10259 ;; This function is called by:
 10260 ;;		_efgtoa
 10261 ;; This function uses a non-reentrant model
 10262 ;;
 10263                           
 10264                           
 10265                           ;psect for function ___flsub
 10266  1F56                     ___flsub:	
 10267                           
 10268                           ;incstack = 0
 10269                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 10270  1F56  3080               	movlw	128
 10271  1F57  0020               	movlb	0	; select bank0
 10272  1F58  06BD               	xorwf	___flsub@a+3,f
 10273  1F59  0841               	movf	___flsub@b+3,w
 10274  1F5A  00F4               	movwf	___fladd@b+3
 10275  1F5B  0840               	movf	___flsub@b+2,w
 10276  1F5C  00F3               	movwf	___fladd@b+2
 10277  1F5D  083F               	movf	___flsub@b+1,w
 10278  1F5E  00F2               	movwf	___fladd@b+1
 10279  1F5F  083E               	movf	___flsub@b,w
 10280  1F60  00F1               	movwf	___fladd@b
 10281  1F61  083D               	movf	___flsub@a+3,w
 10282  1F62  00F8               	movwf	___fladd@a+3
 10283  1F63  083C               	movf	___flsub@a+2,w
 10284  1F64  00F7               	movwf	___fladd@a+2
 10285  1F65  083B               	movf	___flsub@a+1,w
 10286  1F66  00F6               	movwf	___fladd@a+1
 10287  1F67  083A               	movf	___flsub@a,w
 10288  1F68  00F5               	movwf	___fladd@a
 10289  1F69  318B  23F2         	fcall	___fladd
 10290  1F6B  0874               	movf	?___fladd+3,w
 10291  1F6C  0020               	movlb	0	; select bank0
 10292  1F6D  00BD               	movwf	?___flsub+3
 10293  1F6E  0873               	movf	?___fladd+2,w
 10294  1F6F  00BC               	movwf	?___flsub+2
 10295  1F70  0872               	movf	?___fladd+1,w
 10296  1F71  00BB               	movwf	?___flsub+1
 10297  1F72  0871               	movf	?___fladd,w
 10298  1F73  00BA               	movwf	?___flsub
 10299  1F74  0008               	return
 10300  1F75                     __end_of___flsub:	
 10301                           
 10302                           	psect	text24
 10303  0BF2                     __ptext24:	
 10304 ;; *************** function ___fladd *****************
 10305 ;; Defined at:
 10306 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 10307 ;; Parameters:    Size  Location     Type
 10308 ;;  b               4    1[COMMON] long 
 10309 ;;  a               4    5[COMMON] long 
 10310 ;; Auto vars:     Size  Location     Type
 10311 ;;  grs             1   11[BANK0 ] unsigned char 
 10312 ;;  bexp            1   10[BANK0 ] unsigned char 
 10313 ;;  aexp            1    9[BANK0 ] unsigned char 
 10314 ;;  signs           1    8[BANK0 ] unsigned char 
 10315 ;; Return value:  Size  Location     Type
 10316 ;;                  4    1[COMMON] unsigned char 
 10317 ;; Registers used:
 10318 ;;		wreg, status,2, status,0
 10319 ;; Tracked objects:
 10320 ;;		On entry : 0/0
 10321 ;;		On exit  : 0/0
 10322 ;;		Unchanged: 0/0
 10323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10324 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10325 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10326 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10327 ;;      Totals:         8      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10328 ;;Total ram usage:       20 bytes
 10329 ;; Hardware stack levels used:    1
 10330 ;; Hardware stack levels required when called:    4
 10331 ;; This function calls:
 10332 ;;		Nothing
 10333 ;; This function is called by:
 10334 ;;		_efgtoa
 10335 ;;		___flsub
 10336 ;; This function uses a non-reentrant model
 10337 ;;
 10338                           
 10339                           
 10340                           ;psect for function ___fladd
 10341  0BF2                     ___fladd:	
 10342                           
 10343                           ;incstack = 0
 10344                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 10345  0BF2  0874               	movf	___fladd@b+3,w
 10346  0BF3  3980               	andlw	128
 10347  0BF4  0020               	movlb	0	; select bank0
 10348  0BF5  00A0               	movwf	??___fladd
 10349  0BF6  0820               	movf	??___fladd,w
 10350  0BF7  00A8               	movwf	___fladd@signs
 10351  0BF8  3574               	lslf	___fladd@b+3,w
 10352  0BF9  00A0               	movwf	??___fladd
 10353  0BFA  0820               	movf	??___fladd,w
 10354  0BFB  00AA               	movwf	___fladd@bexp
 10355  0BFC  1BF3               	btfsc	___fladd@b+2,7
 10356  0BFD  142A               	bsf	___fladd@bexp,0
 10357  0BFE  082A               	movf	___fladd@bexp,w
 10358  0BFF  1903               	btfsc	3,2
 10359  0C00  2C0F               	goto	l6264
 10360  0C01  0A2A               	incf	___fladd@bexp,w
 10361  0C02  1D03               	btfss	3,2
 10362  0C03  2C0C               	goto	l6260
 10363  0C04  3000               	movlw	0
 10364  0C05  00F4               	movwf	___fladd@b+3
 10365  0C06  3000               	movlw	0
 10366  0C07  00F3               	movwf	___fladd@b+2
 10367  0C08  3000               	movlw	0
 10368  0C09  00F2               	movwf	___fladd@b+1
 10369  0C0A  3000               	movlw	0
 10370  0C0B  00F1               	movwf	___fladd@b
 10371  0C0C                     l6260:	
 10372  0C0C  17F3               	bsf	___fladd@b+2,7
 10373  0C0D  01F4               	clrf	___fladd@b+3
 10374  0C0E  2C17               	goto	l6266
 10375  0C0F                     l6264:	
 10376  0C0F  3000               	movlw	0
 10377  0C10  00F4               	movwf	___fladd@b+3
 10378  0C11  3000               	movlw	0
 10379  0C12  00F3               	movwf	___fladd@b+2
 10380  0C13  3000               	movlw	0
 10381  0C14  00F2               	movwf	___fladd@b+1
 10382  0C15  3000               	movlw	0
 10383  0C16  00F1               	movwf	___fladd@b
 10384  0C17                     l6266:	
 10385  0C17  0878               	movf	___fladd@a+3,w
 10386  0C18  3980               	andlw	128
 10387  0C19  00A0               	movwf	??___fladd
 10388  0C1A  0820               	movf	??___fladd,w
 10389  0C1B  00A9               	movwf	___fladd@aexp
 10390  0C1C  0829               	movf	___fladd@aexp,w
 10391  0C1D  0628               	xorwf	___fladd@signs,w
 10392  0C1E  1D03               	btfss	3,2
 10393  0C1F  1728               	bsf	___fladd@signs,6
 10394  0C20  3578               	lslf	___fladd@a+3,w
 10395  0C21  00A0               	movwf	??___fladd
 10396  0C22  0820               	movf	??___fladd,w
 10397  0C23  00A9               	movwf	___fladd@aexp
 10398  0C24  1BF7               	btfsc	___fladd@a+2,7
 10399  0C25  1429               	bsf	___fladd@aexp,0
 10400  0C26  0829               	movf	___fladd@aexp,w
 10401  0C27  1903               	btfsc	3,2
 10402  0C28  2C37               	goto	l6288
 10403  0C29  0A29               	incf	___fladd@aexp,w
 10404  0C2A  1D03               	btfss	3,2
 10405  0C2B  2C34               	goto	l6284
 10406  0C2C  3000               	movlw	0
 10407  0C2D  00F8               	movwf	___fladd@a+3
 10408  0C2E  3000               	movlw	0
 10409  0C2F  00F7               	movwf	___fladd@a+2
 10410  0C30  3000               	movlw	0
 10411  0C31  00F6               	movwf	___fladd@a+1
 10412  0C32  3000               	movlw	0
 10413  0C33  00F5               	movwf	___fladd@a
 10414  0C34                     l6284:	
 10415  0C34  17F7               	bsf	___fladd@a+2,7
 10416  0C35  01F8               	clrf	___fladd@a+3
 10417  0C36  2C3F               	goto	l1470
 10418  0C37                     l6288:	
 10419  0C37  3000               	movlw	0
 10420  0C38  00F8               	movwf	___fladd@a+3
 10421  0C39  3000               	movlw	0
 10422  0C3A  00F7               	movwf	___fladd@a+2
 10423  0C3B  3000               	movlw	0
 10424  0C3C  00F6               	movwf	___fladd@a+1
 10425  0C3D  3000               	movlw	0
 10426  0C3E  00F5               	movwf	___fladd@a
 10427  0C3F                     l1470:	
 10428  0C3F  082A               	movf	___fladd@bexp,w
 10429  0C40  0229               	subwf	___fladd@aexp,w
 10430  0C41  1803               	skipnc
 10431  0C42  2C85               	goto	l6324
 10432  0C43  1F28               	btfss	___fladd@signs,6
 10433  0C44  2C49               	goto	l6294
 10434  0C45  3080               	movlw	128
 10435  0C46  00A0               	movwf	??___fladd
 10436  0C47  0820               	movf	??___fladd,w
 10437  0C48  06A8               	xorwf	___fladd@signs,f
 10438  0C49                     l6294:	
 10439  0C49  082A               	movf	___fladd@bexp,w
 10440  0C4A  00A0               	movwf	??___fladd
 10441  0C4B  0820               	movf	??___fladd,w
 10442  0C4C  00AB               	movwf	___fladd@grs
 10443  0C4D  0829               	movf	___fladd@aexp,w
 10444  0C4E  00A0               	movwf	??___fladd
 10445  0C4F  0820               	movf	??___fladd,w
 10446  0C50  00AA               	movwf	___fladd@bexp
 10447  0C51  082B               	movf	___fladd@grs,w
 10448  0C52  00A0               	movwf	??___fladd
 10449  0C53  0820               	movf	??___fladd,w
 10450  0C54  00A9               	movwf	___fladd@aexp
 10451  0C55  0871               	movf	___fladd@b,w
 10452  0C56  00A0               	movwf	??___fladd
 10453  0C57  0820               	movf	??___fladd,w
 10454  0C58  00AB               	movwf	___fladd@grs
 10455  0C59  0875               	movf	___fladd@a,w
 10456  0C5A  00A0               	movwf	??___fladd
 10457  0C5B  0820               	movf	??___fladd,w
 10458  0C5C  00F1               	movwf	___fladd@b
 10459  0C5D  082B               	movf	___fladd@grs,w
 10460  0C5E  00A0               	movwf	??___fladd
 10461  0C5F  0820               	movf	??___fladd,w
 10462  0C60  00F5               	movwf	___fladd@a
 10463  0C61  0872               	movf	___fladd@b+1,w
 10464  0C62  00A0               	movwf	??___fladd
 10465  0C63  0820               	movf	??___fladd,w
 10466  0C64  00AB               	movwf	___fladd@grs
 10467  0C65  0876               	movf	___fladd@a+1,w
 10468  0C66  00A0               	movwf	??___fladd
 10469  0C67  0820               	movf	??___fladd,w
 10470  0C68  00F2               	movwf	___fladd@b+1
 10471  0C69  082B               	movf	___fladd@grs,w
 10472  0C6A  00A0               	movwf	??___fladd
 10473  0C6B  0820               	movf	??___fladd,w
 10474  0C6C  00F6               	movwf	___fladd@a+1
 10475  0C6D  0873               	movf	___fladd@b+2,w
 10476  0C6E  00A0               	movwf	??___fladd
 10477  0C6F  0820               	movf	??___fladd,w
 10478  0C70  00AB               	movwf	___fladd@grs
 10479  0C71  0877               	movf	___fladd@a+2,w
 10480  0C72  00A0               	movwf	??___fladd
 10481  0C73  0820               	movf	??___fladd,w
 10482  0C74  00F3               	movwf	___fladd@b+2
 10483  0C75  082B               	movf	___fladd@grs,w
 10484  0C76  00A0               	movwf	??___fladd
 10485  0C77  0820               	movf	??___fladd,w
 10486  0C78  00F7               	movwf	___fladd@a+2
 10487  0C79  0874               	movf	___fladd@b+3,w
 10488  0C7A  00A0               	movwf	??___fladd
 10489  0C7B  0820               	movf	??___fladd,w
 10490  0C7C  00AB               	movwf	___fladd@grs
 10491  0C7D  0878               	movf	___fladd@a+3,w
 10492  0C7E  00A0               	movwf	??___fladd
 10493  0C7F  0820               	movf	??___fladd,w
 10494  0C80  00F4               	movwf	___fladd@b+3
 10495  0C81  082B               	movf	___fladd@grs,w
 10496  0C82  00A0               	movwf	??___fladd
 10497  0C83  0820               	movf	??___fladd,w
 10498  0C84  00F8               	movwf	___fladd@a+3
 10499  0C85                     l6324:	
 10500  0C85  01AB               	clrf	___fladd@grs
 10501  0C86  0829               	movf	___fladd@aexp,w
 10502  0C87  00A0               	movwf	??___fladd
 10503  0C88  01A1               	clrf	??___fladd+1
 10504  0C89  0821               	movf	??___fladd+1,w
 10505  0C8A  00A3               	movwf	??___fladd+3
 10506  0C8B  082A               	movf	___fladd@bexp,w
 10507  0C8C  0220               	subwf	??___fladd,w
 10508  0C8D  00A2               	movwf	??___fladd+2
 10509  0C8E  1C03               	skipc
 10510  0C8F  03A3               	decf	??___fladd+3,f
 10511  0C90  0823               	movf	??___fladd+3,w
 10512  0C91  3A80               	xorlw	128
 10513  0C92  00A4               	movwf	??___fladd+4
 10514  0C93  3080               	movlw	128
 10515  0C94  0224               	subwf	??___fladd+4,w
 10516  0C95  1D03               	skipz
 10517  0C96  2C99               	goto	u6375
 10518  0C97  301A               	movlw	26
 10519  0C98  0222               	subwf	??___fladd+2,w
 10520  0C99                     u6375:	
 10521  0C99  1C03               	skipc
 10522  0C9A  2CCD               	goto	l6342
 10523  0C9B  0874               	movf	___fladd@b+3,w
 10524  0C9C  0473               	iorwf	___fladd@b+2,w
 10525  0C9D  0472               	iorwf	___fladd@b+1,w
 10526  0C9E  0471               	iorwf	___fladd@b,w
 10527  0C9F  1903               	btfsc	3,2
 10528  0CA0  2CA3               	goto	u6380
 10529  0CA1  3001               	movlw	1
 10530  0CA2  2CA4               	goto	u6390
 10531  0CA3                     u6380:	
 10532  0CA3  3000               	movlw	0
 10533  0CA4                     u6390:	
 10534  0CA4  0020               	movlb	0	; select bank0
 10535  0CA5  00A0               	movwf	??___fladd
 10536  0CA6  0820               	movf	??___fladd,w
 10537  0CA7  00AB               	movwf	___fladd@grs
 10538  0CA8  3000               	movlw	0
 10539  0CA9  00F4               	movwf	___fladd@b+3
 10540  0CAA  3000               	movlw	0
 10541  0CAB  00F3               	movwf	___fladd@b+2
 10542  0CAC  3000               	movlw	0
 10543  0CAD  00F2               	movwf	___fladd@b+1
 10544  0CAE  3000               	movlw	0
 10545  0CAF  00F1               	movwf	___fladd@b
 10546  0CB0  0829               	movf	___fladd@aexp,w
 10547  0CB1  00A0               	movwf	??___fladd
 10548  0CB2  0820               	movf	??___fladd,w
 10549  0CB3  00AA               	movwf	___fladd@bexp
 10550  0CB4  2CD2               	goto	l1474
 10551  0CB5                     l1476:	
 10552  0CB5  1C2B               	btfss	___fladd@grs,0
 10553  0CB6  2CBD               	goto	l6332
 10554  0CB7  362B               	lsrf	___fladd@grs,w
 10555  0CB8  3801               	iorlw	1
 10556  0CB9  00A0               	movwf	??___fladd
 10557  0CBA  0820               	movf	??___fladd,w
 10558  0CBB  00AB               	movwf	___fladd@grs
 10559  0CBC  2CBF               	goto	l6334
 10560  0CBD                     l6332:	
 10561  0CBD  1003               	clrc
 10562  0CBE  0CAB               	rrf	___fladd@grs,f
 10563  0CBF                     l6334:	
 10564  0CBF  1871               	btfsc	___fladd@b,0
 10565  0CC0  17AB               	bsf	___fladd@grs,7
 10566  0CC1  3001               	movlw	1
 10567  0CC2  00A0               	movwf	??___fladd
 10568  0CC3                     u6425:	
 10569  0CC3  37F4               	asrf	___fladd@b+3,f
 10570  0CC4  0CF3               	rrf	___fladd@b+2,f
 10571  0CC5  0CF2               	rrf	___fladd@b+1,f
 10572  0CC6  0CF1               	rrf	___fladd@b,f
 10573  0CC7  0BA0               	decfsz	??___fladd& (0+127),f
 10574  0CC8  2CC3               	goto	u6425
 10575  0CC9  3001               	movlw	1
 10576  0CCA  00A0               	movwf	??___fladd
 10577  0CCB  0820               	movf	??___fladd,w
 10578  0CCC  07AA               	addwf	___fladd@bexp,f
 10579  0CCD                     l6342:	
 10580  0CCD  0020               	movlb	0	; select bank0
 10581  0CCE  0829               	movf	___fladd@aexp,w
 10582  0CCF  022A               	subwf	___fladd@bexp,w
 10583  0CD0  1C03               	skipc
 10584  0CD1  2CB5               	goto	l1476
 10585  0CD2                     l1474:	
 10586  0CD2  1B28               	btfsc	___fladd@signs,6
 10587  0CD3  2D03               	goto	l6368
 10588  0CD4  082A               	movf	___fladd@bexp,w
 10589  0CD5  1D03               	btfss	3,2
 10590  0CD6  2CE0               	goto	l6350
 10591  0CD7  3000               	movlw	0
 10592  0CD8  00F4               	movwf	?___fladd+3
 10593  0CD9  3000               	movlw	0
 10594  0CDA  00F3               	movwf	?___fladd+2
 10595  0CDB  3000               	movlw	0
 10596  0CDC  00F2               	movwf	?___fladd+1
 10597  0CDD  3000               	movlw	0
 10598  0CDE  00F1               	movwf	?___fladd
 10599  0CDF  0008               	return
 10600  0CE0                     l6350:	
 10601  0CE0  0875               	movf	___fladd@a,w
 10602  0CE1  07F1               	addwf	___fladd@b,f
 10603  0CE2  0876               	movf	___fladd@a+1,w
 10604  0CE3  3DF2               	addwfc	___fladd@b+1,f
 10605  0CE4  0877               	movf	___fladd@a+2,w
 10606  0CE5  3DF3               	addwfc	___fladd@b+2,f
 10607  0CE6  0878               	movf	___fladd@a+3,w
 10608  0CE7  3DF4               	addwfc	___fladd@b+3,f
 10609  0CE8  1C74               	btfss	___fladd@b+3,0
 10610  0CE9  2D7D               	goto	l6402
 10611  0CEA  1C2B               	btfss	___fladd@grs,0
 10612  0CEB  2CF2               	goto	l6358
 10613  0CEC  362B               	lsrf	___fladd@grs,w
 10614  0CED  3801               	iorlw	1
 10615  0CEE  00A0               	movwf	??___fladd
 10616  0CEF  0820               	movf	??___fladd,w
 10617  0CF0  00AB               	movwf	___fladd@grs
 10618  0CF1  2CF4               	goto	l6360
 10619  0CF2                     l6358:	
 10620  0CF2  1003               	clrc
 10621  0CF3  0CAB               	rrf	___fladd@grs,f
 10622  0CF4                     l6360:	
 10623  0CF4  1871               	btfsc	___fladd@b,0
 10624  0CF5  17AB               	bsf	___fladd@grs,7
 10625  0CF6  3001               	movlw	1
 10626  0CF7  00A0               	movwf	??___fladd
 10627  0CF8                     u6495:	
 10628  0CF8  37F4               	asrf	___fladd@b+3,f
 10629  0CF9  0CF3               	rrf	___fladd@b+2,f
 10630  0CFA  0CF2               	rrf	___fladd@b+1,f
 10631  0CFB  0CF1               	rrf	___fladd@b,f
 10632  0CFC  0BA0               	decfsz	??___fladd& (0+127),f
 10633  0CFD  2CF8               	goto	u6495
 10634  0CFE  3001               	movlw	1
 10635  0CFF  00A0               	movwf	??___fladd
 10636  0D00  0820               	movf	??___fladd,w
 10637  0D01  07AA               	addwf	___fladd@bexp,f
 10638  0D02  2D7D               	goto	l6402
 10639  0D03                     l6368:	
 10640  0D03  0874               	movf	___fladd@b+3,w
 10641  0D04  3A80               	xorlw	128
 10642  0D05  00A0               	movwf	??___fladd
 10643  0D06  0878               	movf	___fladd@a+3,w
 10644  0D07  3A80               	xorlw	128
 10645  0D08  0220               	subwf	??___fladd,w
 10646  0D09  1D03               	skipz
 10647  0D0A  2D15               	goto	u6503
 10648  0D0B  0877               	movf	___fladd@a+2,w
 10649  0D0C  0273               	subwf	___fladd@b+2,w
 10650  0D0D  1D03               	skipz
 10651  0D0E  2D15               	goto	u6503
 10652  0D0F  0876               	movf	___fladd@a+1,w
 10653  0D10  0272               	subwf	___fladd@b+1,w
 10654  0D11  1D03               	skipz
 10655  0D12  2D15               	goto	u6503
 10656  0D13  0875               	movf	___fladd@a,w
 10657  0D14  0271               	subwf	___fladd@b,w
 10658  0D15                     u6503:	
 10659  0D15  1803               	skipnc
 10660  0D16  2D4D               	goto	l6378
 10661  0D17  30FF               	movlw	255
 10662  0D18  00A0               	movwf	??___fladd
 10663  0D19  30FF               	movlw	255
 10664  0D1A  00A1               	movwf	??___fladd+1
 10665  0D1B  30FF               	movlw	255
 10666  0D1C  00A2               	movwf	??___fladd+2
 10667  0D1D  30FF               	movlw	255
 10668  0D1E  00A3               	movwf	??___fladd+3
 10669  0D1F  0871               	movf	___fladd@b,w
 10670  0D20  0275               	subwf	___fladd@a,w
 10671  0D21  00A4               	movwf	??___fladd+4
 10672  0D22  0872               	movf	___fladd@b+1,w
 10673  0D23  3B76               	subwfb	___fladd@a+1,w
 10674  0D24  00A5               	movwf	??___fladd+5
 10675  0D25  0873               	movf	___fladd@b+2,w
 10676  0D26  3B77               	subwfb	___fladd@a+2,w
 10677  0D27  00A6               	movwf	??___fladd+6
 10678  0D28  0874               	movf	___fladd@b+3,w
 10679  0D29  3B78               	subwfb	___fladd@a+3,w
 10680  0D2A  00A7               	movwf	??___fladd+7
 10681  0D2B  0824               	movf	??___fladd+4,w
 10682  0D2C  07A0               	addwf	??___fladd,f
 10683  0D2D  0825               	movf	??___fladd+5,w
 10684  0D2E  3DA1               	addwfc	??___fladd+1,f
 10685  0D2F  0826               	movf	??___fladd+6,w
 10686  0D30  3DA2               	addwfc	??___fladd+2,f
 10687  0D31  0827               	movf	??___fladd+7,w
 10688  0D32  3DA3               	addwfc	??___fladd+3,f
 10689  0D33  0823               	movf	??___fladd+3,w
 10690  0D34  00F4               	movwf	___fladd@b+3
 10691  0D35  0822               	movf	??___fladd+2,w
 10692  0D36  00F3               	movwf	___fladd@b+2
 10693  0D37  0821               	movf	??___fladd+1,w
 10694  0D38  00F2               	movwf	___fladd@b+1
 10695  0D39  0820               	movf	??___fladd,w
 10696  0D3A  00F1               	movwf	___fladd@b
 10697  0D3B  3080               	movlw	128
 10698  0D3C  00A0               	movwf	??___fladd
 10699  0D3D  0820               	movf	??___fladd,w
 10700  0D3E  06A8               	xorwf	___fladd@signs,f
 10701  0D3F  09AB               	comf	___fladd@grs,f
 10702  0D40  0AAB               	incf	___fladd@grs,f
 10703  0D41  082B               	movf	___fladd@grs,w
 10704  0D42  1D03               	btfss	3,2
 10705  0D43  2D55               	goto	l1491
 10706  0D44  3001               	movlw	1
 10707  0D45  07F1               	addwf	___fladd@b,f
 10708  0D46  3000               	movlw	0
 10709  0D47  3DF2               	addwfc	___fladd@b+1,f
 10710  0D48  3000               	movlw	0
 10711  0D49  3DF3               	addwfc	___fladd@b+2,f
 10712  0D4A  3000               	movlw	0
 10713  0D4B  3DF4               	addwfc	___fladd@b+3,f
 10714  0D4C  2D55               	goto	l1491
 10715  0D4D                     l6378:	
 10716  0D4D  0875               	movf	___fladd@a,w
 10717  0D4E  02F1               	subwf	___fladd@b,f
 10718  0D4F  0876               	movf	___fladd@a+1,w
 10719  0D50  3BF2               	subwfb	___fladd@b+1,f
 10720  0D51  0877               	movf	___fladd@a+2,w
 10721  0D52  3BF3               	subwfb	___fladd@b+2,f
 10722  0D53  0878               	movf	___fladd@a+3,w
 10723  0D54  3BF4               	subwfb	___fladd@b+3,f
 10724  0D55                     l1491:	
 10725  0D55  0874               	movf	___fladd@b+3,w
 10726  0D56  0473               	iorwf	___fladd@b+2,w
 10727  0D57  0472               	iorwf	___fladd@b+1,w
 10728  0D58  0471               	iorwf	___fladd@b,w
 10729  0D59  1D03               	skipz
 10730  0D5A  2D7B               	goto	l6400
 10731  0D5B  082B               	movf	___fladd@grs,w
 10732  0D5C  1D03               	btfss	3,2
 10733  0D5D  2D7B               	goto	l6400
 10734  0D5E  3000               	movlw	0
 10735  0D5F  00F4               	movwf	?___fladd+3
 10736  0D60  3000               	movlw	0
 10737  0D61  00F3               	movwf	?___fladd+2
 10738  0D62  3000               	movlw	0
 10739  0D63  00F2               	movwf	?___fladd+1
 10740  0D64  3000               	movlw	0
 10741  0D65  00F1               	movwf	?___fladd
 10742  0D66  0008               	return
 10743  0D67                     l6386:	
 10744  0D67  3001               	movlw	1
 10745  0D68                     u6545:	
 10746  0D68  35F1               	lslf	___fladd@b,f
 10747  0D69  0DF2               	rlf	___fladd@b+1,f
 10748  0D6A  0DF3               	rlf	___fladd@b+2,f
 10749  0D6B  0DF4               	rlf	___fladd@b+3,f
 10750  0D6C  0B89               	decfsz	9,f
 10751  0D6D  2D68               	goto	u6545
 10752  0D6E  1BAB               	btfsc	___fladd@grs,7
 10753  0D6F  1471               	bsf	___fladd@b,0
 10754  0D70  1C2B               	btfss	___fladd@grs,0
 10755  0D71  2D74               	goto	l6394
 10756  0D72  1403               	setc
 10757  0D73  2D75               	goto	L10
 10758  0D74                     l6394:	
 10759  0D74  1003               	clrc
 10760  0D75                     L10:	
 10761  0D75  0DAB               	rlf	___fladd@grs,f
 10762  0D76  082A               	movf	___fladd@bexp,w
 10763  0D77  1903               	btfsc	3,2
 10764  0D78  2D7B               	goto	l6400
 10765  0D79  3001               	movlw	1
 10766  0D7A  02AA               	subwf	___fladd@bexp,f
 10767  0D7B                     l6400:	
 10768  0D7B  1FF3               	btfss	___fladd@b+2,7
 10769  0D7C  2D67               	goto	l6386
 10770  0D7D                     l6402:	
 10771  0D7D  01A9               	clrf	___fladd@aexp
 10772  0D7E  1FAB               	btfss	___fladd@grs,7
 10773  0D7F  2D88               	goto	l6412
 10774  0D80  082B               	movf	___fladd@grs,w
 10775  0D81  397F               	andlw	127
 10776  0D82  1903               	btfsc	3,2
 10777  0D83  1871               	btfsc	___fladd@b,0
 10778  0D84  2D86               	goto	l6408
 10779  0D85  2D88               	goto	l6412
 10780  0D86                     l6408:	
 10781  0D86  01A9               	clrf	___fladd@aexp
 10782  0D87  0AA9               	incf	___fladd@aexp,f
 10783  0D88                     l6412:	
 10784  0D88  0829               	movf	___fladd@aexp,w
 10785  0D89  1903               	btfsc	3,2
 10786  0D8A  2DB4               	goto	l1504
 10787  0D8B  3001               	movlw	1
 10788  0D8C  07F1               	addwf	___fladd@b,f
 10789  0D8D  3000               	movlw	0
 10790  0D8E  3DF2               	addwfc	___fladd@b+1,f
 10791  0D8F  3000               	movlw	0
 10792  0D90  3DF3               	addwfc	___fladd@b+2,f
 10793  0D91  3000               	movlw	0
 10794  0D92  3DF4               	addwfc	___fladd@b+3,f
 10795  0D93  1C74               	btfss	___fladd@b+3,0
 10796  0D94  2DB4               	goto	l1504
 10797  0D95  0871               	movf	___fladd@b,w
 10798  0D96  00A0               	movwf	??___fladd
 10799  0D97  0872               	movf	___fladd@b+1,w
 10800  0D98  00A1               	movwf	??___fladd+1
 10801  0D99  0873               	movf	___fladd@b+2,w
 10802  0D9A  00A2               	movwf	??___fladd+2
 10803  0D9B  0874               	movf	___fladd@b+3,w
 10804  0D9C  00A3               	movwf	??___fladd+3
 10805  0D9D  3001               	movlw	1
 10806  0D9E  00A4               	movwf	??___fladd+4
 10807  0D9F                     u6645:	
 10808  0D9F  37A3               	asrf	??___fladd+3,f
 10809  0DA0  0CA2               	rrf	??___fladd+2,f
 10810  0DA1  0CA1               	rrf	??___fladd+1,f
 10811  0DA2  0CA0               	rrf	??___fladd,f
 10812  0DA3  0BA4               	decfsz	??___fladd+4,f
 10813  0DA4  2D9F               	goto	u6645
 10814  0DA5  0823               	movf	??___fladd+3,w
 10815  0DA6  00F4               	movwf	___fladd@b+3
 10816  0DA7  0822               	movf	??___fladd+2,w
 10817  0DA8  00F3               	movwf	___fladd@b+2
 10818  0DA9  0821               	movf	??___fladd+1,w
 10819  0DAA  00F2               	movwf	___fladd@b+1
 10820  0DAB  0820               	movf	??___fladd,w
 10821  0DAC  00F1               	movwf	___fladd@b
 10822  0DAD  0A2A               	incf	___fladd@bexp,w
 10823  0DAE  1903               	btfsc	3,2
 10824  0DAF  2DB4               	goto	l1504
 10825  0DB0  3001               	movlw	1
 10826  0DB1  00A0               	movwf	??___fladd
 10827  0DB2  0820               	movf	??___fladd,w
 10828  0DB3  07AA               	addwf	___fladd@bexp,f
 10829  0DB4                     l1504:	
 10830  0DB4  0A2A               	incf	___fladd@bexp,w
 10831  0DB5  1D03               	btfss	3,2
 10832  0DB6  082A               	movf	___fladd@bexp,w
 10833  0DB7  1D03               	btfss	3,2
 10834  0DB8  2DC4               	goto	l6430
 10835  0DB9  3000               	movlw	0
 10836  0DBA  00F4               	movwf	___fladd@b+3
 10837  0DBB  3000               	movlw	0
 10838  0DBC  00F3               	movwf	___fladd@b+2
 10839  0DBD  3000               	movlw	0
 10840  0DBE  00F2               	movwf	___fladd@b+1
 10841  0DBF  3000               	movlw	0
 10842  0DC0  00F1               	movwf	___fladd@b
 10843  0DC1  082A               	movf	___fladd@bexp,w
 10844  0DC2  1903               	btfsc	3,2
 10845  0DC3  01A8               	clrf	___fladd@signs
 10846  0DC4                     l6430:	
 10847  0DC4  1C2A               	btfss	___fladd@bexp,0
 10848  0DC5  2DC8               	goto	l6434
 10849  0DC6  17F3               	bsf	___fladd@b+2,7
 10850  0DC7  2DCC               	goto	l1512
 10851  0DC8                     l6434:	
 10852  0DC8  307F               	movlw	127
 10853  0DC9  00A0               	movwf	??___fladd
 10854  0DCA  0820               	movf	??___fladd,w
 10855  0DCB  05F3               	andwf	___fladd@b+2,f
 10856  0DCC                     l1512:	
 10857  0DCC  362A               	lsrf	___fladd@bexp,w
 10858  0DCD  00A0               	movwf	??___fladd
 10859  0DCE  0820               	movf	??___fladd,w
 10860  0DCF  00F4               	movwf	___fladd@b+3
 10861  0DD0  1FA8               	btfss	___fladd@signs,7
 10862  0DD1  0008               	return
 10863  0DD2  17F4               	bsf	___fladd@b+3,7
 10864  0DD3  0008               	return
 10865  0DD4                     __end_of___fladd:	
 10866                           
 10867                           	psect	text25
 10868  1DB0                     __ptext25:	
 10869 ;; *************** function ___flneg *****************
 10870 ;; Defined at:
 10871 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
 10872 ;; Parameters:    Size  Location     Type
 10873 ;;  f1              4    1[COMMON] unsigned char 
 10874 ;; Auto vars:     Size  Location     Type
 10875 ;;		None
 10876 ;; Return value:  Size  Location     Type
 10877 ;;                  4    1[COMMON] unsigned char 
 10878 ;; Registers used:
 10879 ;;		wreg
 10880 ;; Tracked objects:
 10881 ;;		On entry : 0/0
 10882 ;;		On exit  : 0/0
 10883 ;;		Unchanged: 0/0
 10884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10885 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10888 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10889 ;;Total ram usage:        4 bytes
 10890 ;; Hardware stack levels used:    1
 10891 ;; Hardware stack levels required when called:    4
 10892 ;; This function calls:
 10893 ;;		Nothing
 10894 ;; This function is called by:
 10895 ;;		_efgtoa
 10896 ;; This function uses a non-reentrant model
 10897 ;;
 10898                           
 10899                           
 10900                           ;psect for function ___flneg
 10901  1DB0                     ___flneg:	
 10902                           
 10903                           ;incstack = 0
 10904                           ; Regs used in ___flneg: [wreg]
 10905  1DB0  0874               	movf	___flneg@f1+3,w
 10906  1DB1  0473               	iorwf	___flneg@f1+2,w
 10907  1DB2  0472               	iorwf	___flneg@f1+1,w
 10908  1DB3  0471               	iorwf	___flneg@f1,w
 10909  1DB4  1903               	skipnz
 10910  1DB5  0008               	return
 10911  1DB6  3080               	movlw	128
 10912  1DB7  06F4               	xorwf	___flneg@f1+3,f
 10913  1DB8  0008               	return
 10914  1DB9                     __end_of___flneg:	
 10915                           
 10916                           	psect	text26
 10917  0DD4                     __ptext26:	
 10918 ;; *************** function ___flmul *****************
 10919 ;; Defined at:
 10920 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 10921 ;; Parameters:    Size  Location     Type
 10922 ;;  b               4    0[BANK0 ] unsigned char 
 10923 ;;  a               4    4[BANK0 ] unsigned char 
 10924 ;; Auto vars:     Size  Location     Type
 10925 ;;  prod            4   20[BANK0 ] struct .
 10926 ;;  grs             4   14[BANK0 ] unsigned long 
 10927 ;;  temp            2   24[BANK0 ] struct .
 10928 ;;  bexp            1   19[BANK0 ] unsigned char 
 10929 ;;  aexp            1   18[BANK0 ] unsigned char 
 10930 ;;  sign            1   13[BANK0 ] unsigned char 
 10931 ;; Return value:  Size  Location     Type
 10932 ;;                  4    0[BANK0 ] unsigned char 
 10933 ;; Registers used:
 10934 ;;		wreg, status,2, status,0, pclath, cstack
 10935 ;; Tracked objects:
 10936 ;;		On entry : 0/0
 10937 ;;		On exit  : 0/0
 10938 ;;		Unchanged: 0/0
 10939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10940 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10941 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10942 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10943 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10944 ;;Total ram usage:       26 bytes
 10945 ;; Hardware stack levels used:    1
 10946 ;; Hardware stack levels required when called:    5
 10947 ;; This function calls:
 10948 ;;		__Umul8_16
 10949 ;; This function is called by:
 10950 ;;		_efgtoa
 10951 ;; This function uses a non-reentrant model
 10952 ;;
 10953                           
 10954                           
 10955                           ;psect for function ___flmul
 10956  0DD4                     ___flmul:	
 10957                           
 10958                           ;incstack = 0
 10959                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 10960  0DD4  0020               	movlb	0	; select bank0
 10961  0DD5  0823               	movf	___flmul@b+3,w
 10962  0DD6  3980               	andlw	128
 10963  0DD7  00A8               	movwf	??___flmul
 10964  0DD8  0828               	movf	??___flmul,w
 10965  0DD9  00AD               	movwf	___flmul@sign
 10966  0DDA  3523               	lslf	___flmul@b+3,w
 10967  0DDB  00A8               	movwf	??___flmul
 10968  0DDC  0828               	movf	??___flmul,w
 10969  0DDD  00B3               	movwf	___flmul@bexp
 10970  0DDE  1BA2               	btfsc	___flmul@b+2,7
 10971  0DDF  1433               	bsf	___flmul@bexp,0
 10972  0DE0  0833               	movf	___flmul@bexp,w
 10973  0DE1  1903               	btfsc	3,2
 10974  0DE2  2DF0               	goto	l4954
 10975  0DE3  0A33               	incf	___flmul@bexp,w
 10976  0DE4  1D03               	btfss	3,2
 10977  0DE5  2DEE               	goto	l4952
 10978  0DE6  3000               	movlw	0
 10979  0DE7  00A3               	movwf	___flmul@b+3
 10980  0DE8  3000               	movlw	0
 10981  0DE9  00A2               	movwf	___flmul@b+2
 10982  0DEA  3000               	movlw	0
 10983  0DEB  00A1               	movwf	___flmul@b+1
 10984  0DEC  3000               	movlw	0
 10985  0DED  00A0               	movwf	___flmul@b
 10986  0DEE                     l4952:	
 10987  0DEE  17A2               	bsf	___flmul@b+2,7
 10988  0DEF  2DF8               	goto	l4956
 10989  0DF0                     l4954:	
 10990  0DF0  3000               	movlw	0
 10991  0DF1  00A3               	movwf	___flmul@b+3
 10992  0DF2  3000               	movlw	0
 10993  0DF3  00A2               	movwf	___flmul@b+2
 10994  0DF4  3000               	movlw	0
 10995  0DF5  00A1               	movwf	___flmul@b+1
 10996  0DF6  3000               	movlw	0
 10997  0DF7  00A0               	movwf	___flmul@b
 10998  0DF8                     l4956:	
 10999  0DF8  0827               	movf	___flmul@a+3,w
 11000  0DF9  3980               	andlw	128
 11001  0DFA  00A8               	movwf	??___flmul
 11002  0DFB  0828               	movf	??___flmul,w
 11003  0DFC  06AD               	xorwf	___flmul@sign,f
 11004  0DFD  3527               	lslf	___flmul@a+3,w
 11005  0DFE  00A8               	movwf	??___flmul
 11006  0DFF  0828               	movf	??___flmul,w
 11007  0E00  00B2               	movwf	___flmul@aexp
 11008  0E01  1BA6               	btfsc	___flmul@a+2,7
 11009  0E02  1432               	bsf	___flmul@aexp,0
 11010  0E03  0832               	movf	___flmul@aexp,w
 11011  0E04  1903               	btfsc	3,2
 11012  0E05  2E13               	goto	l4972
 11013  0E06  0A32               	incf	___flmul@aexp,w
 11014  0E07  1D03               	btfss	3,2
 11015  0E08  2E11               	goto	l4970
 11016  0E09  3000               	movlw	0
 11017  0E0A  00A7               	movwf	___flmul@a+3
 11018  0E0B  3000               	movlw	0
 11019  0E0C  00A6               	movwf	___flmul@a+2
 11020  0E0D  3000               	movlw	0
 11021  0E0E  00A5               	movwf	___flmul@a+1
 11022  0E0F  3000               	movlw	0
 11023  0E10  00A4               	movwf	___flmul@a
 11024  0E11                     l4970:	
 11025  0E11  17A6               	bsf	___flmul@a+2,7
 11026  0E12  2E1B               	goto	l4974
 11027  0E13                     l4972:	
 11028  0E13  3000               	movlw	0
 11029  0E14  00A7               	movwf	___flmul@a+3
 11030  0E15  3000               	movlw	0
 11031  0E16  00A6               	movwf	___flmul@a+2
 11032  0E17  3000               	movlw	0
 11033  0E18  00A5               	movwf	___flmul@a+1
 11034  0E19  3000               	movlw	0
 11035  0E1A  00A4               	movwf	___flmul@a
 11036  0E1B                     l4974:	
 11037  0E1B  0832               	movf	___flmul@aexp,w
 11038  0E1C  1D03               	btfss	3,2
 11039  0E1D  0833               	movf	___flmul@bexp,w
 11040  0E1E  1D03               	btfss	3,2
 11041  0E1F  2E29               	goto	l4982
 11042  0E20  3000               	movlw	0
 11043  0E21  00A3               	movwf	?___flmul+3
 11044  0E22  3000               	movlw	0
 11045  0E23  00A2               	movwf	?___flmul+2
 11046  0E24  3000               	movlw	0
 11047  0E25  00A1               	movwf	?___flmul+1
 11048  0E26  3000               	movlw	0
 11049  0E27  00A0               	movwf	?___flmul
 11050  0E28  0008               	return
 11051  0E29                     l4982:	
 11052  0E29  0820               	movf	___flmul@b,w
 11053  0E2A  00A8               	movwf	??___flmul
 11054  0E2B  0828               	movf	??___flmul,w
 11055  0E2C  00F1               	movwf	__Umul8_16@multiplicand
 11056  0E2D  0826               	movf	___flmul@a+2,w
 11057  0E2E  319F  2737  318D   	fcall	__Umul8_16
 11058  0E31  0872               	movf	?__Umul8_16+1,w
 11059  0E32  0020               	movlb	0	; select bank0
 11060  0E33  00B9               	movwf	___flmul@temp+1
 11061  0E34  0871               	movf	?__Umul8_16,w
 11062  0E35  00B8               	movwf	___flmul@temp
 11063  0E36  0838               	movf	___flmul@temp,w
 11064  0E37  00A8               	movwf	??___flmul
 11065  0E38  01A9               	clrf	??___flmul+1
 11066  0E39  01AA               	clrf	??___flmul+2
 11067  0E3A  01AB               	clrf	??___flmul+3
 11068  0E3B  082B               	movf	??___flmul+3,w
 11069  0E3C  00B1               	movwf	___flmul@grs+3
 11070  0E3D  082A               	movf	??___flmul+2,w
 11071  0E3E  00B0               	movwf	___flmul@grs+2
 11072  0E3F  0829               	movf	??___flmul+1,w
 11073  0E40  00AF               	movwf	___flmul@grs+1
 11074  0E41  0828               	movf	??___flmul,w
 11075  0E42  00AE               	movwf	___flmul@grs
 11076  0E43  0839               	movf	___flmul@temp+1,w
 11077  0E44  00A8               	movwf	??___flmul
 11078  0E45  01A9               	clrf	??___flmul+1
 11079  0E46  01AA               	clrf	??___flmul+2
 11080  0E47  01AB               	clrf	??___flmul+3
 11081  0E48  082B               	movf	??___flmul+3,w
 11082  0E49  00B7               	movwf	___flmul@prod+3
 11083  0E4A  082A               	movf	??___flmul+2,w
 11084  0E4B  00B6               	movwf	___flmul@prod+2
 11085  0E4C  0829               	movf	??___flmul+1,w
 11086  0E4D  00B5               	movwf	___flmul@prod+1
 11087  0E4E  0828               	movf	??___flmul,w
 11088  0E4F  00B4               	movwf	___flmul@prod
 11089  0E50  0821               	movf	___flmul@b+1,w
 11090  0E51  00A8               	movwf	??___flmul
 11091  0E52  0828               	movf	??___flmul,w
 11092  0E53  00F1               	movwf	__Umul8_16@multiplicand
 11093  0E54  0825               	movf	___flmul@a+1,w
 11094  0E55  319F  2737  318D   	fcall	__Umul8_16
 11095  0E58  0872               	movf	?__Umul8_16+1,w
 11096  0E59  0020               	movlb	0	; select bank0
 11097  0E5A  00B9               	movwf	___flmul@temp+1
 11098  0E5B  0871               	movf	?__Umul8_16,w
 11099  0E5C  00B8               	movwf	___flmul@temp
 11100  0E5D  0838               	movf	___flmul@temp,w
 11101  0E5E  00A8               	movwf	??___flmul
 11102  0E5F  01A9               	clrf	??___flmul+1
 11103  0E60  01AA               	clrf	??___flmul+2
 11104  0E61  01AB               	clrf	??___flmul+3
 11105  0E62  0828               	movf	??___flmul,w
 11106  0E63  07AE               	addwf	___flmul@grs,f
 11107  0E64  0829               	movf	??___flmul+1,w
 11108  0E65  3DAF               	addwfc	___flmul@grs+1,f
 11109  0E66  082A               	movf	??___flmul+2,w
 11110  0E67  3DB0               	addwfc	___flmul@grs+2,f
 11111  0E68  082B               	movf	??___flmul+3,w
 11112  0E69  3DB1               	addwfc	___flmul@grs+3,f
 11113  0E6A  0839               	movf	___flmul@temp+1,w
 11114  0E6B  00A8               	movwf	??___flmul
 11115  0E6C  01A9               	clrf	??___flmul+1
 11116  0E6D  01AA               	clrf	??___flmul+2
 11117  0E6E  01AB               	clrf	??___flmul+3
 11118  0E6F  0828               	movf	??___flmul,w
 11119  0E70  07B4               	addwf	___flmul@prod,f
 11120  0E71  0829               	movf	??___flmul+1,w
 11121  0E72  3DB5               	addwfc	___flmul@prod+1,f
 11122  0E73  082A               	movf	??___flmul+2,w
 11123  0E74  3DB6               	addwfc	___flmul@prod+2,f
 11124  0E75  082B               	movf	??___flmul+3,w
 11125  0E76  3DB7               	addwfc	___flmul@prod+3,f
 11126  0E77  0822               	movf	___flmul@b+2,w
 11127  0E78  00A8               	movwf	??___flmul
 11128  0E79  0828               	movf	??___flmul,w
 11129  0E7A  00F1               	movwf	__Umul8_16@multiplicand
 11130  0E7B  0824               	movf	___flmul@a,w
 11131  0E7C  319F  2737  318D   	fcall	__Umul8_16
 11132  0E7F  0872               	movf	?__Umul8_16+1,w
 11133  0E80  0020               	movlb	0	; select bank0
 11134  0E81  00B9               	movwf	___flmul@temp+1
 11135  0E82  0871               	movf	?__Umul8_16,w
 11136  0E83  00B8               	movwf	___flmul@temp
 11137  0E84  0838               	movf	___flmul@temp,w
 11138  0E85  00A8               	movwf	??___flmul
 11139  0E86  01A9               	clrf	??___flmul+1
 11140  0E87  01AA               	clrf	??___flmul+2
 11141  0E88  01AB               	clrf	??___flmul+3
 11142  0E89  0828               	movf	??___flmul,w
 11143  0E8A  07AE               	addwf	___flmul@grs,f
 11144  0E8B  0829               	movf	??___flmul+1,w
 11145  0E8C  3DAF               	addwfc	___flmul@grs+1,f
 11146  0E8D  082A               	movf	??___flmul+2,w
 11147  0E8E  3DB0               	addwfc	___flmul@grs+2,f
 11148  0E8F  082B               	movf	??___flmul+3,w
 11149  0E90  3DB1               	addwfc	___flmul@grs+3,f
 11150  0E91  0839               	movf	___flmul@temp+1,w
 11151  0E92  00A8               	movwf	??___flmul
 11152  0E93  01A9               	clrf	??___flmul+1
 11153  0E94  01AA               	clrf	??___flmul+2
 11154  0E95  01AB               	clrf	??___flmul+3
 11155  0E96  0828               	movf	??___flmul,w
 11156  0E97  07B4               	addwf	___flmul@prod,f
 11157  0E98  0829               	movf	??___flmul+1,w
 11158  0E99  3DB5               	addwfc	___flmul@prod+1,f
 11159  0E9A  082A               	movf	??___flmul+2,w
 11160  0E9B  3DB6               	addwfc	___flmul@prod+2,f
 11161  0E9C  082B               	movf	??___flmul+3,w
 11162  0E9D  3DB7               	addwfc	___flmul@prod+3,f
 11163  0E9E  3008               	movlw	8
 11164  0E9F                     u4815:	
 11165  0E9F  35AE               	lslf	___flmul@grs,f
 11166  0EA0  0DAF               	rlf	___flmul@grs+1,f
 11167  0EA1  0DB0               	rlf	___flmul@grs+2,f
 11168  0EA2  0DB1               	rlf	___flmul@grs+3,f
 11169  0EA3  0B89               	decfsz	9,f
 11170  0EA4  2E9F               	goto	u4815
 11171  0EA5  0821               	movf	___flmul@b+1,w
 11172  0EA6  00A8               	movwf	??___flmul
 11173  0EA7  0828               	movf	??___flmul,w
 11174  0EA8  00F1               	movwf	__Umul8_16@multiplicand
 11175  0EA9  0824               	movf	___flmul@a,w
 11176  0EAA  319F  2737  318D   	fcall	__Umul8_16
 11177  0EAD  0872               	movf	?__Umul8_16+1,w
 11178  0EAE  0020               	movlb	0	; select bank0
 11179  0EAF  00B9               	movwf	___flmul@temp+1
 11180  0EB0  0871               	movf	?__Umul8_16,w
 11181  0EB1  00B8               	movwf	___flmul@temp
 11182  0EB2  0838               	movf	___flmul@temp,w
 11183  0EB3  07AE               	addwf	___flmul@grs,f
 11184  0EB4  0839               	movf	___flmul@temp+1,w
 11185  0EB5  3DAF               	addwfc	___flmul@grs+1,f
 11186  0EB6  3000               	movlw	0
 11187  0EB7  3DB0               	addwfc	___flmul@grs+2,f
 11188  0EB8  3DB1               	addwfc	___flmul@grs+3,f
 11189  0EB9  0820               	movf	___flmul@b,w
 11190  0EBA  00A8               	movwf	??___flmul
 11191  0EBB  0828               	movf	??___flmul,w
 11192  0EBC  00F1               	movwf	__Umul8_16@multiplicand
 11193  0EBD  0825               	movf	___flmul@a+1,w
 11194  0EBE  319F  2737  318D   	fcall	__Umul8_16
 11195  0EC1  0872               	movf	?__Umul8_16+1,w
 11196  0EC2  0020               	movlb	0	; select bank0
 11197  0EC3  00B9               	movwf	___flmul@temp+1
 11198  0EC4  0871               	movf	?__Umul8_16,w
 11199  0EC5  00B8               	movwf	___flmul@temp
 11200  0EC6  0838               	movf	___flmul@temp,w
 11201  0EC7  07AE               	addwf	___flmul@grs,f
 11202  0EC8  0839               	movf	___flmul@temp+1,w
 11203  0EC9  3DAF               	addwfc	___flmul@grs+1,f
 11204  0ECA  3000               	movlw	0
 11205  0ECB  3DB0               	addwfc	___flmul@grs+2,f
 11206  0ECC  3DB1               	addwfc	___flmul@grs+3,f
 11207  0ECD  3008               	movlw	8
 11208  0ECE                     u4825:	
 11209  0ECE  35AE               	lslf	___flmul@grs,f
 11210  0ECF  0DAF               	rlf	___flmul@grs+1,f
 11211  0ED0  0DB0               	rlf	___flmul@grs+2,f
 11212  0ED1  0DB1               	rlf	___flmul@grs+3,f
 11213  0ED2  0B89               	decfsz	9,f
 11214  0ED3  2ECE               	goto	u4825
 11215  0ED4  0820               	movf	___flmul@b,w
 11216  0ED5  00A8               	movwf	??___flmul
 11217  0ED6  0828               	movf	??___flmul,w
 11218  0ED7  00F1               	movwf	__Umul8_16@multiplicand
 11219  0ED8  0824               	movf	___flmul@a,w
 11220  0ED9  319F  2737  318D   	fcall	__Umul8_16
 11221  0EDC  0872               	movf	?__Umul8_16+1,w
 11222  0EDD  0020               	movlb	0	; select bank0
 11223  0EDE  00B9               	movwf	___flmul@temp+1
 11224  0EDF  0871               	movf	?__Umul8_16,w
 11225  0EE0  00B8               	movwf	___flmul@temp
 11226  0EE1  0838               	movf	___flmul@temp,w
 11227  0EE2  07AE               	addwf	___flmul@grs,f
 11228  0EE3  0839               	movf	___flmul@temp+1,w
 11229  0EE4  3DAF               	addwfc	___flmul@grs+1,f
 11230  0EE5  3000               	movlw	0
 11231  0EE6  3DB0               	addwfc	___flmul@grs+2,f
 11232  0EE7  3DB1               	addwfc	___flmul@grs+3,f
 11233  0EE8  0821               	movf	___flmul@b+1,w
 11234  0EE9  00A8               	movwf	??___flmul
 11235  0EEA  0828               	movf	??___flmul,w
 11236  0EEB  00F1               	movwf	__Umul8_16@multiplicand
 11237  0EEC  0826               	movf	___flmul@a+2,w
 11238  0EED  319F  2737  318D   	fcall	__Umul8_16
 11239  0EF0  0872               	movf	?__Umul8_16+1,w
 11240  0EF1  0020               	movlb	0	; select bank0
 11241  0EF2  00B9               	movwf	___flmul@temp+1
 11242  0EF3  0871               	movf	?__Umul8_16,w
 11243  0EF4  00B8               	movwf	___flmul@temp
 11244  0EF5  0838               	movf	___flmul@temp,w
 11245  0EF6  07B4               	addwf	___flmul@prod,f
 11246  0EF7  0839               	movf	___flmul@temp+1,w
 11247  0EF8  3DB5               	addwfc	___flmul@prod+1,f
 11248  0EF9  3000               	movlw	0
 11249  0EFA  3DB6               	addwfc	___flmul@prod+2,f
 11250  0EFB  3DB7               	addwfc	___flmul@prod+3,f
 11251  0EFC  0822               	movf	___flmul@b+2,w
 11252  0EFD  00A8               	movwf	??___flmul
 11253  0EFE  0828               	movf	??___flmul,w
 11254  0EFF  00F1               	movwf	__Umul8_16@multiplicand
 11255  0F00  0825               	movf	___flmul@a+1,w
 11256  0F01  319F  2737  318D   	fcall	__Umul8_16
 11257  0F04  0872               	movf	?__Umul8_16+1,w
 11258  0F05  0020               	movlb	0	; select bank0
 11259  0F06  00B9               	movwf	___flmul@temp+1
 11260  0F07  0871               	movf	?__Umul8_16,w
 11261  0F08  00B8               	movwf	___flmul@temp
 11262  0F09  0838               	movf	___flmul@temp,w
 11263  0F0A  07B4               	addwf	___flmul@prod,f
 11264  0F0B  0839               	movf	___flmul@temp+1,w
 11265  0F0C  3DB5               	addwfc	___flmul@prod+1,f
 11266  0F0D  3000               	movlw	0
 11267  0F0E  3DB6               	addwfc	___flmul@prod+2,f
 11268  0F0F  3DB7               	addwfc	___flmul@prod+3,f
 11269  0F10  0822               	movf	___flmul@b+2,w
 11270  0F11  00A8               	movwf	??___flmul
 11271  0F12  0828               	movf	??___flmul,w
 11272  0F13  00F1               	movwf	__Umul8_16@multiplicand
 11273  0F14  0826               	movf	___flmul@a+2,w
 11274  0F15  319F  2737  318D   	fcall	__Umul8_16
 11275  0F18  0872               	movf	?__Umul8_16+1,w
 11276  0F19  0020               	movlb	0	; select bank0
 11277  0F1A  00B9               	movwf	___flmul@temp+1
 11278  0F1B  0871               	movf	?__Umul8_16,w
 11279  0F1C  00B8               	movwf	___flmul@temp
 11280  0F1D  0838               	movf	___flmul@temp,w
 11281  0F1E  00A8               	movwf	??___flmul
 11282  0F1F  0839               	movf	___flmul@temp+1,w
 11283  0F20  00A9               	movwf	??___flmul+1
 11284  0F21  01AA               	clrf	??___flmul+2
 11285  0F22  01AB               	clrf	??___flmul+3
 11286  0F23  3008               	movlw	8
 11287  0F24                     u4835:	
 11288  0F24  35A8               	lslf	??___flmul,f
 11289  0F25  0DA9               	rlf	??___flmul+1,f
 11290  0F26  0DAA               	rlf	??___flmul+2,f
 11291  0F27  0DAB               	rlf	??___flmul+3,f
 11292  0F28  0B89               	decfsz	9,f
 11293  0F29  2F24               	goto	u4835
 11294  0F2A  0828               	movf	??___flmul,w
 11295  0F2B  07B4               	addwf	___flmul@prod,f
 11296  0F2C  0829               	movf	??___flmul+1,w
 11297  0F2D  3DB5               	addwfc	___flmul@prod+1,f
 11298  0F2E  082A               	movf	??___flmul+2,w
 11299  0F2F  3DB6               	addwfc	___flmul@prod+2,f
 11300  0F30  082B               	movf	??___flmul+3,w
 11301  0F31  3DB7               	addwfc	___flmul@prod+3,f
 11302  0F32  082E               	movf	___flmul@grs,w
 11303  0F33  00A8               	movwf	??___flmul
 11304  0F34  082F               	movf	___flmul@grs+1,w
 11305  0F35  00A9               	movwf	??___flmul+1
 11306  0F36  0830               	movf	___flmul@grs+2,w
 11307  0F37  00AA               	movwf	??___flmul+2
 11308  0F38  0831               	movf	___flmul@grs+3,w
 11309  0F39  00AB               	movwf	??___flmul+3
 11310  0F3A  3018               	movlw	24
 11311  0F3B                     u4845:	
 11312  0F3B  36AB               	lsrf	??___flmul+3,f
 11313  0F3C  0CAA               	rrf	??___flmul+2,f
 11314  0F3D  0CA9               	rrf	??___flmul+1,f
 11315  0F3E  0CA8               	rrf	??___flmul,f
 11316  0F3F  0B89               	decfsz	9,f
 11317  0F40  2F3B               	goto	u4845
 11318  0F41  0828               	movf	??___flmul,w
 11319  0F42  07B4               	addwf	___flmul@prod,f
 11320  0F43  0829               	movf	??___flmul+1,w
 11321  0F44  3DB5               	addwfc	___flmul@prod+1,f
 11322  0F45  082A               	movf	??___flmul+2,w
 11323  0F46  3DB6               	addwfc	___flmul@prod+2,f
 11324  0F47  082B               	movf	??___flmul+3,w
 11325  0F48  3DB7               	addwfc	___flmul@prod+3,f
 11326  0F49  3008               	movlw	8
 11327  0F4A                     u4855:	
 11328  0F4A  35AE               	lslf	___flmul@grs,f
 11329  0F4B  0DAF               	rlf	___flmul@grs+1,f
 11330  0F4C  0DB0               	rlf	___flmul@grs+2,f
 11331  0F4D  0DB1               	rlf	___flmul@grs+3,f
 11332  0F4E  0B89               	decfsz	9,f
 11333  0F4F  2F4A               	goto	u4855
 11334  0F50  0833               	movf	___flmul@bexp,w
 11335  0F51  0732               	addwf	___flmul@aexp,w
 11336  0F52  00A8               	movwf	??___flmul
 11337  0F53  01A9               	clrf	??___flmul+1
 11338  0F54  0DA9               	rlf	??___flmul+1,f
 11339  0F55  0828               	movf	??___flmul,w
 11340  0F56  3E82               	addlw	130
 11341  0F57  00B8               	movwf	___flmul@temp
 11342  0F58  30FF               	movlw	255
 11343  0F59  3D29               	addwfc	??___flmul+1,w
 11344  0F5A  00B9               	movwf	___flmul@temp+1
 11345  0F5B                     l5034:	
 11346  0F5B  1BB6               	btfsc	___flmul@prod+2,7
 11347  0F5C  2F72               	goto	l5036
 11348  0F5D  3001               	movlw	1
 11349  0F5E                     u4865:	
 11350  0F5E  35B4               	lslf	___flmul@prod,f
 11351  0F5F  0DB5               	rlf	___flmul@prod+1,f
 11352  0F60  0DB6               	rlf	___flmul@prod+2,f
 11353  0F61  0DB7               	rlf	___flmul@prod+3,f
 11354  0F62  0B89               	decfsz	9,f
 11355  0F63  2F5E               	goto	u4865
 11356  0F64  1BB1               	btfsc	___flmul@grs+3,7
 11357  0F65  1434               	bsf	___flmul@prod,0
 11358  0F66  3001               	movlw	1
 11359  0F67                     u4885:	
 11360  0F67  35AE               	lslf	___flmul@grs,f
 11361  0F68  0DAF               	rlf	___flmul@grs+1,f
 11362  0F69  0DB0               	rlf	___flmul@grs+2,f
 11363  0F6A  0DB1               	rlf	___flmul@grs+3,f
 11364  0F6B  0B89               	decfsz	9,f
 11365  0F6C  2F67               	goto	u4885
 11366  0F6D  30FF               	movlw	255
 11367  0F6E  07B8               	addwf	___flmul@temp,f
 11368  0F6F  30FF               	movlw	255
 11369  0F70  3DB9               	addwfc	___flmul@temp+1,f
 11370  0F71  2F5B               	goto	l5034
 11371  0F72                     l5036:	
 11372  0F72  01B2               	clrf	___flmul@aexp
 11373  0F73  1FB1               	btfss	___flmul@grs+3,7
 11374  0F74  2F8B               	goto	l5046
 11375  0F75  30FF               	movlw	255
 11376  0F76  052E               	andwf	___flmul@grs,w
 11377  0F77  00A8               	movwf	??___flmul
 11378  0F78  30FF               	movlw	255
 11379  0F79  052F               	andwf	___flmul@grs+1,w
 11380  0F7A  00A9               	movwf	??___flmul+1
 11381  0F7B  30FF               	movlw	255
 11382  0F7C  0530               	andwf	___flmul@grs+2,w
 11383  0F7D  00AA               	movwf	??___flmul+2
 11384  0F7E  307F               	movlw	127
 11385  0F7F  0531               	andwf	___flmul@grs+3,w
 11386  0F80  00AB               	movwf	??___flmul+3
 11387  0F81  082B               	movf	??___flmul+3,w
 11388  0F82  042A               	iorwf	??___flmul+2,w
 11389  0F83  0429               	iorwf	??___flmul+1,w
 11390  0F84  0428               	iorwf	??___flmul,w
 11391  0F85  1903               	skipnz
 11392  0F86  1834               	btfsc	___flmul@prod,0
 11393  0F87  2F89               	goto	l5042
 11394  0F88  2F8B               	goto	l5046
 11395  0F89                     l5042:	
 11396  0F89  01B2               	clrf	___flmul@aexp
 11397  0F8A  0AB2               	incf	___flmul@aexp,f
 11398  0F8B                     l5046:	
 11399  0F8B  0832               	movf	___flmul@aexp,w
 11400  0F8C  1903               	btfsc	3,2
 11401  0F8D  2FB4               	goto	l5056
 11402  0F8E  3001               	movlw	1
 11403  0F8F  07B4               	addwf	___flmul@prod,f
 11404  0F90  3000               	movlw	0
 11405  0F91  3DB5               	addwfc	___flmul@prod+1,f
 11406  0F92  3000               	movlw	0
 11407  0F93  3DB6               	addwfc	___flmul@prod+2,f
 11408  0F94  3000               	movlw	0
 11409  0F95  3DB7               	addwfc	___flmul@prod+3,f
 11410  0F96  1C37               	btfss	___flmul@prod+3,0
 11411  0F97  2FB4               	goto	l5056
 11412  0F98  0834               	movf	___flmul@prod,w
 11413  0F99  00A8               	movwf	??___flmul
 11414  0F9A  0835               	movf	___flmul@prod+1,w
 11415  0F9B  00A9               	movwf	??___flmul+1
 11416  0F9C  0836               	movf	___flmul@prod+2,w
 11417  0F9D  00AA               	movwf	??___flmul+2
 11418  0F9E  0837               	movf	___flmul@prod+3,w
 11419  0F9F  00AB               	movwf	??___flmul+3
 11420  0FA0  3001               	movlw	1
 11421  0FA1  00AC               	movwf	??___flmul+4
 11422  0FA2                     u4955:	
 11423  0FA2  37AB               	asrf	??___flmul+3,f
 11424  0FA3  0CAA               	rrf	??___flmul+2,f
 11425  0FA4  0CA9               	rrf	??___flmul+1,f
 11426  0FA5  0CA8               	rrf	??___flmul,f
 11427  0FA6  0BAC               	decfsz	??___flmul+4,f
 11428  0FA7  2FA2               	goto	u4955
 11429  0FA8  082B               	movf	??___flmul+3,w
 11430  0FA9  00B7               	movwf	___flmul@prod+3
 11431  0FAA  082A               	movf	??___flmul+2,w
 11432  0FAB  00B6               	movwf	___flmul@prod+2
 11433  0FAC  0829               	movf	??___flmul+1,w
 11434  0FAD  00B5               	movwf	___flmul@prod+1
 11435  0FAE  0828               	movf	??___flmul,w
 11436  0FAF  00B4               	movwf	___flmul@prod
 11437  0FB0  3001               	movlw	1
 11438  0FB1  07B8               	addwf	___flmul@temp,f
 11439  0FB2  3000               	movlw	0
 11440  0FB3  3DB9               	addwfc	___flmul@temp+1,f
 11441  0FB4                     l5056:	
 11442  0FB4  0839               	movf	___flmul@temp+1,w
 11443  0FB5  3A80               	xorlw	128
 11444  0FB6  00A8               	movwf	??___flmul
 11445  0FB7  3080               	movlw	128
 11446  0FB8  0228               	subwf	??___flmul,w
 11447  0FB9  1D03               	skipz
 11448  0FBA  2FBD               	goto	u4965
 11449  0FBB  30FF               	movlw	255
 11450  0FBC  0238               	subwf	___flmul@temp,w
 11451  0FBD                     u4965:	
 11452  0FBD  1C03               	skipc
 11453  0FBE  2FC9               	goto	l5060
 11454  0FBF  307F               	movlw	127
 11455  0FC0  0020               	movlb	0	; select bank0
 11456  0FC1  00B7               	movwf	___flmul@prod+3
 11457  0FC2  3080               	movlw	128
 11458  0FC3  00B6               	movwf	___flmul@prod+2
 11459  0FC4  3000               	movlw	0
 11460  0FC5  00B5               	movwf	___flmul@prod+1
 11461  0FC6  3000               	movlw	0
 11462  0FC7  00B4               	movwf	___flmul@prod
 11463  0FC8  2FF3               	goto	l1578
 11464  0FC9                     l5060:	
 11465  0FC9  0020               	movlb	0	; select bank0
 11466  0FCA  0839               	movf	___flmul@temp+1,w
 11467  0FCB  3A80               	xorlw	128
 11468  0FCC  00A8               	movwf	??___flmul
 11469  0FCD  3080               	movlw	128
 11470  0FCE  0228               	subwf	??___flmul,w
 11471  0FCF  1D03               	skipz
 11472  0FD0  2FD3               	goto	u4975
 11473  0FD1  3001               	movlw	1
 11474  0FD2  0238               	subwf	___flmul@temp,w
 11475  0FD3                     u4975:	
 11476  0FD3  1803               	skipnc
 11477  0FD4  2FE0               	goto	l5066
 11478  0FD5  3000               	movlw	0
 11479  0FD6  0020               	movlb	0	; select bank0
 11480  0FD7  00B7               	movwf	___flmul@prod+3
 11481  0FD8  3000               	movlw	0
 11482  0FD9  00B6               	movwf	___flmul@prod+2
 11483  0FDA  3000               	movlw	0
 11484  0FDB  00B5               	movwf	___flmul@prod+1
 11485  0FDC  3000               	movlw	0
 11486  0FDD  00B4               	movwf	___flmul@prod
 11487  0FDE  01AD               	clrf	___flmul@sign
 11488  0FDF  2FF3               	goto	l1578
 11489  0FE0                     l5066:	
 11490  0FE0  0020               	movlb	0	; select bank0
 11491  0FE1  0838               	movf	___flmul@temp,w
 11492  0FE2  00A8               	movwf	??___flmul
 11493  0FE3  0828               	movf	??___flmul,w
 11494  0FE4  00B3               	movwf	___flmul@bexp
 11495  0FE5  30FF               	movlw	255
 11496  0FE6  05B4               	andwf	___flmul@prod,f
 11497  0FE7  30FF               	movlw	255
 11498  0FE8  05B5               	andwf	___flmul@prod+1,f
 11499  0FE9  307F               	movlw	127
 11500  0FEA  05B6               	andwf	___flmul@prod+2,f
 11501  0FEB  3000               	movlw	0
 11502  0FEC  05B7               	andwf	___flmul@prod+3,f
 11503  0FED  1833               	btfsc	___flmul@bexp,0
 11504  0FEE  17B6               	bsf	___flmul@prod+2,7
 11505  0FEF  3633               	lsrf	___flmul@bexp,w
 11506  0FF0  00A8               	movwf	??___flmul
 11507  0FF1  0828               	movf	??___flmul,w
 11508  0FF2  00B7               	movwf	___flmul@prod+3
 11509  0FF3                     l1578:	
 11510  0FF3  082D               	movf	___flmul@sign,w
 11511  0FF4  00A8               	movwf	??___flmul
 11512  0FF5  0828               	movf	??___flmul,w
 11513  0FF6  04B7               	iorwf	___flmul@prod+3,f
 11514  0FF7  0837               	movf	___flmul@prod+3,w
 11515  0FF8  00A3               	movwf	?___flmul+3
 11516  0FF9  0836               	movf	___flmul@prod+2,w
 11517  0FFA  00A2               	movwf	?___flmul+2
 11518  0FFB  0835               	movf	___flmul@prod+1,w
 11519  0FFC  00A1               	movwf	?___flmul+1
 11520  0FFD  0834               	movf	___flmul@prod,w
 11521  0FFE  00A0               	movwf	?___flmul
 11522  0FFF  0008               	return
 11523  1000                     __end_of___flmul:	
 11524                           
 11525                           	psect	text27
 11526  1F37                     __ptext27:	
 11527 ;; *************** function __Umul8_16 *****************
 11528 ;; Defined at:
 11529 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 11530 ;; Parameters:    Size  Location     Type
 11531 ;;  multiplier      1    wreg     unsigned char 
 11532 ;;  multiplicand    1    1[COMMON] unsigned char 
 11533 ;; Auto vars:     Size  Location     Type
 11534 ;;  multiplier      1    9[COMMON] unsigned char 
 11535 ;;  word_mpld       2    7[COMMON] unsigned int 
 11536 ;;  product         2    5[COMMON] unsigned int 
 11537 ;; Return value:  Size  Location     Type
 11538 ;;                  2    1[COMMON] unsigned int 
 11539 ;; Registers used:
 11540 ;;		wreg, status,2, status,0
 11541 ;; Tracked objects:
 11542 ;;		On entry : 0/0
 11543 ;;		On exit  : 0/0
 11544 ;;		Unchanged: 0/0
 11545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11546 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11547 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11548 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11549 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11550 ;;Total ram usage:        9 bytes
 11551 ;; Hardware stack levels used:    1
 11552 ;; Hardware stack levels required when called:    4
 11553 ;; This function calls:
 11554 ;;		Nothing
 11555 ;; This function is called by:
 11556 ;;		___flmul
 11557 ;; This function uses a non-reentrant model
 11558 ;;
 11559                           
 11560                           
 11561                           ;psect for function __Umul8_16
 11562  1F37                     __Umul8_16:	
 11563                           
 11564                           ;incstack = 0
 11565                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 11566                           ;__Umul8_16@multiplier stored from wreg
 11567  1F37  00F9               	movwf	__Umul8_16@multiplier
 11568  1F38  01F5               	clrf	__Umul8_16@product
 11569  1F39  01F6               	clrf	__Umul8_16@product+1
 11570  1F3A  0871               	movf	__Umul8_16@multiplicand,w
 11571  1F3B  00F3               	movwf	??__Umul8_16
 11572  1F3C  01F4               	clrf	??__Umul8_16+1
 11573  1F3D  0873               	movf	??__Umul8_16,w
 11574  1F3E  00F7               	movwf	__Umul8_16@word_mpld
 11575  1F3F  0874               	movf	??__Umul8_16+1,w
 11576  1F40  00F8               	movwf	__Umul8_16@word_mpld+1
 11577  1F41                     l4524:	
 11578  1F41  1C79               	btfss	__Umul8_16@multiplier,0
 11579  1F42  2F47               	goto	l1714
 11580  1F43  0877               	movf	__Umul8_16@word_mpld,w
 11581  1F44  07F5               	addwf	__Umul8_16@product,f
 11582  1F45  0878               	movf	__Umul8_16@word_mpld+1,w
 11583  1F46  3DF6               	addwfc	__Umul8_16@product+1,f
 11584  1F47                     l1714:	
 11585  1F47  3001               	movlw	1
 11586  1F48                     u3745:	
 11587  1F48  35F7               	lslf	__Umul8_16@word_mpld,f
 11588  1F49  0DF8               	rlf	__Umul8_16@word_mpld+1,f
 11589  1F4A  0B89               	decfsz	9,f
 11590  1F4B  2F48               	goto	u3745
 11591  1F4C  1003               	clrc
 11592  1F4D  0CF9               	rrf	__Umul8_16@multiplier,f
 11593  1F4E  0879               	movf	__Umul8_16@multiplier,w
 11594  1F4F  1D03               	btfss	3,2
 11595  1F50  2F41               	goto	l4524
 11596  1F51  0876               	movf	__Umul8_16@product+1,w
 11597  1F52  00F2               	movwf	?__Umul8_16+1
 11598  1F53  0875               	movf	__Umul8_16@product,w
 11599  1F54  00F1               	movwf	?__Umul8_16
 11600  1F55  0008               	return
 11601  1F56                     __end_of__Umul8_16:	
 11602                           
 11603                           	psect	text28
 11604  1574                     __ptext28:	
 11605 ;; *************** function ___flge *****************
 11606 ;; Defined at:
 11607 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 11608 ;; Parameters:    Size  Location     Type
 11609 ;;  ff1             4   26[BANK0 ] unsigned int 
 11610 ;;  ff2             4   30[BANK0 ] unsigned int 
 11611 ;; Auto vars:     Size  Location     Type
 11612 ;;		None
 11613 ;; Return value:  Size  Location     Type
 11614 ;;		None               void
 11615 ;; Registers used:
 11616 ;;		wreg, status,2, status,0
 11617 ;; Tracked objects:
 11618 ;;		On entry : 0/0
 11619 ;;		On exit  : 0/0
 11620 ;;		Unchanged: 0/0
 11621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11622 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11624 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11625 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11626 ;;Total ram usage:       12 bytes
 11627 ;; Hardware stack levels used:    1
 11628 ;; Hardware stack levels required when called:    4
 11629 ;; This function calls:
 11630 ;;		Nothing
 11631 ;; This function is called by:
 11632 ;;		_efgtoa
 11633 ;; This function uses a non-reentrant model
 11634 ;;
 11635                           
 11636                           
 11637                           ;psect for function ___flge
 11638  1574                     ___flge:	
 11639                           
 11640                           ;incstack = 0
 11641                           ; Regs used in ___flge: [wreg+status,2+status,0]
 11642  1574  3000               	movlw	0
 11643  1575  0020               	movlb	0	; select bank0
 11644  1576  053A               	andwf	___flge@ff1,w
 11645  1577  00C2               	movwf	??___flge
 11646  1578  3000               	movlw	0
 11647  1579  053B               	andwf	___flge@ff1+1,w
 11648  157A  00C3               	movwf	??___flge+1
 11649  157B  3080               	movlw	128
 11650  157C  053C               	andwf	___flge@ff1+2,w
 11651  157D  00C4               	movwf	??___flge+2
 11652  157E  307F               	movlw	127
 11653  157F  053D               	andwf	___flge@ff1+3,w
 11654  1580  00C5               	movwf	??___flge+3
 11655  1581  0845               	movf	??___flge+3,w
 11656  1582  0444               	iorwf	??___flge+2,w
 11657  1583  0443               	iorwf	??___flge+1,w
 11658  1584  0442               	iorwf	??___flge,w
 11659  1585  1D03               	skipz
 11660  1586  2D8F               	goto	l1347
 11661  1587  3000               	movlw	0
 11662  1588  00BD               	movwf	___flge@ff1+3
 11663  1589  3000               	movlw	0
 11664  158A  00BC               	movwf	___flge@ff1+2
 11665  158B  3000               	movlw	0
 11666  158C  00BB               	movwf	___flge@ff1+1
 11667  158D  3000               	movlw	0
 11668  158E  00BA               	movwf	___flge@ff1
 11669  158F                     l1347:	
 11670  158F  3000               	movlw	0
 11671  1590  053E               	andwf	___flge@ff2,w
 11672  1591  00C2               	movwf	??___flge
 11673  1592  3000               	movlw	0
 11674  1593  053F               	andwf	___flge@ff2+1,w
 11675  1594  00C3               	movwf	??___flge+1
 11676  1595  3080               	movlw	128
 11677  1596  0540               	andwf	___flge@ff2+2,w
 11678  1597  00C4               	movwf	??___flge+2
 11679  1598  307F               	movlw	127
 11680  1599  0541               	andwf	___flge@ff2+3,w
 11681  159A  00C5               	movwf	??___flge+3
 11682  159B  0845               	movf	??___flge+3,w
 11683  159C  0444               	iorwf	??___flge+2,w
 11684  159D  0443               	iorwf	??___flge+1,w
 11685  159E  0442               	iorwf	??___flge,w
 11686  159F  1D03               	skipz
 11687  15A0  2DA9               	goto	l4734
 11688  15A1  3000               	movlw	0
 11689  15A2  00C1               	movwf	___flge@ff2+3
 11690  15A3  3000               	movlw	0
 11691  15A4  00C0               	movwf	___flge@ff2+2
 11692  15A5  3000               	movlw	0
 11693  15A6  00BF               	movwf	___flge@ff2+1
 11694  15A7  3000               	movlw	0
 11695  15A8  00BE               	movwf	___flge@ff2
 11696  15A9                     l4734:	
 11697  15A9  1FBD               	btfss	___flge@ff1+3,7
 11698  15AA  2DC3               	goto	l4738
 11699  15AB  3000               	movlw	0
 11700  15AC  00C2               	movwf	??___flge
 11701  15AD  3000               	movlw	0
 11702  15AE  00C3               	movwf	??___flge+1
 11703  15AF  3000               	movlw	0
 11704  15B0  00C4               	movwf	??___flge+2
 11705  15B1  3080               	movlw	128
 11706  15B2  00C5               	movwf	??___flge+3
 11707  15B3  083A               	movf	___flge@ff1,w
 11708  15B4  02C2               	subwf	??___flge,f
 11709  15B5  083B               	movf	___flge@ff1+1,w
 11710  15B6  3BC3               	subwfb	??___flge+1,f
 11711  15B7  083C               	movf	___flge@ff1+2,w
 11712  15B8  3BC4               	subwfb	??___flge+2,f
 11713  15B9  083D               	movf	___flge@ff1+3,w
 11714  15BA  3BC5               	subwfb	??___flge+3,f
 11715  15BB  0845               	movf	??___flge+3,w
 11716  15BC  00BD               	movwf	___flge@ff1+3
 11717  15BD  0844               	movf	??___flge+2,w
 11718  15BE  00BC               	movwf	___flge@ff1+2
 11719  15BF  0843               	movf	??___flge+1,w
 11720  15C0  00BB               	movwf	___flge@ff1+1
 11721  15C1  0842               	movf	??___flge,w
 11722  15C2  00BA               	movwf	___flge@ff1
 11723  15C3                     l4738:	
 11724  15C3  1FC1               	btfss	___flge@ff2+3,7
 11725  15C4  2DDD               	goto	l1350
 11726  15C5  3000               	movlw	0
 11727  15C6  00C2               	movwf	??___flge
 11728  15C7  3000               	movlw	0
 11729  15C8  00C3               	movwf	??___flge+1
 11730  15C9  3000               	movlw	0
 11731  15CA  00C4               	movwf	??___flge+2
 11732  15CB  3080               	movlw	128
 11733  15CC  00C5               	movwf	??___flge+3
 11734  15CD  083E               	movf	___flge@ff2,w
 11735  15CE  02C2               	subwf	??___flge,f
 11736  15CF  083F               	movf	___flge@ff2+1,w
 11737  15D0  3BC3               	subwfb	??___flge+1,f
 11738  15D1  0840               	movf	___flge@ff2+2,w
 11739  15D2  3BC4               	subwfb	??___flge+2,f
 11740  15D3  0841               	movf	___flge@ff2+3,w
 11741  15D4  3BC5               	subwfb	??___flge+3,f
 11742  15D5  0845               	movf	??___flge+3,w
 11743  15D6  00C1               	movwf	___flge@ff2+3
 11744  15D7  0844               	movf	??___flge+2,w
 11745  15D8  00C0               	movwf	___flge@ff2+2
 11746  15D9  0843               	movf	??___flge+1,w
 11747  15DA  00BF               	movwf	___flge@ff2+1
 11748  15DB  0842               	movf	??___flge,w
 11749  15DC  00BE               	movwf	___flge@ff2
 11750  15DD                     l1350:	
 11751  15DD  3080               	movlw	128
 11752  15DE  06BD               	xorwf	___flge@ff1+3,f
 11753  15DF  3080               	movlw	128
 11754  15E0  06C1               	xorwf	___flge@ff2+3,f
 11755  15E1  0841               	movf	___flge@ff2+3,w
 11756  15E2  023D               	subwf	___flge@ff1+3,w
 11757  15E3  1D03               	skipz
 11758  15E4  0008               	return
 11759  15E5  0840               	movf	___flge@ff2+2,w
 11760  15E6  023C               	subwf	___flge@ff1+2,w
 11761  15E7  1D03               	skipz
 11762  15E8  0008               	return
 11763  15E9  083F               	movf	___flge@ff2+1,w
 11764  15EA  023B               	subwf	___flge@ff1+1,w
 11765  15EB  1D03               	skipz
 11766  15EC  0008               	return
 11767  15ED  083E               	movf	___flge@ff2,w
 11768  15EE  023A               	subwf	___flge@ff1,w
 11769  15EF  0008               	return
 11770  15F0                     __end_of___flge:	
 11771                           
 11772                           	psect	text29
 11773  130D                     __ptext29:	
 11774 ;; *************** function ___fleq *****************
 11775 ;; Defined at:
 11776 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
 11777 ;; Parameters:    Size  Location     Type
 11778 ;;  ff1             4    1[COMMON] unsigned int 
 11779 ;;  ff2             4    5[COMMON] unsigned int 
 11780 ;; Auto vars:     Size  Location     Type
 11781 ;;		None
 11782 ;; Return value:  Size  Location     Type
 11783 ;;		None               void
 11784 ;; Registers used:
 11785 ;;		wreg, status,2, status,0
 11786 ;; Tracked objects:
 11787 ;;		On entry : 0/0
 11788 ;;		On exit  : 0/0
 11789 ;;		Unchanged: 0/0
 11790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11791 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11793 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11794 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11795 ;;Total ram usage:       12 bytes
 11796 ;; Hardware stack levels used:    1
 11797 ;; Hardware stack levels required when called:    4
 11798 ;; This function calls:
 11799 ;;		Nothing
 11800 ;; This function is called by:
 11801 ;;		_efgtoa
 11802 ;; This function uses a non-reentrant model
 11803 ;;
 11804                           
 11805                           
 11806                           ;psect for function ___fleq
 11807  130D                     ___fleq:	
 11808                           
 11809                           ;incstack = 0
 11810                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 11811  130D  3000               	movlw	0
 11812  130E  0571               	andwf	___fleq@ff1,w
 11813  130F  0020               	movlb	0	; select bank0
 11814  1310  00A0               	movwf	??___fleq
 11815  1311  3000               	movlw	0
 11816  1312  0572               	andwf	___fleq@ff1+1,w
 11817  1313  00A1               	movwf	??___fleq+1
 11818  1314  3080               	movlw	128
 11819  1315  0573               	andwf	___fleq@ff1+2,w
 11820  1316  00A2               	movwf	??___fleq+2
 11821  1317  307F               	movlw	127
 11822  1318  0574               	andwf	___fleq@ff1+3,w
 11823  1319  00A3               	movwf	??___fleq+3
 11824  131A  0823               	movf	??___fleq+3,w
 11825  131B  0422               	iorwf	??___fleq+2,w
 11826  131C  0421               	iorwf	??___fleq+1,w
 11827  131D  0420               	iorwf	??___fleq,w
 11828  131E  1D03               	skipz
 11829  131F  2B28               	goto	l1338
 11830  1320  3000               	movlw	0
 11831  1321  00F4               	movwf	___fleq@ff1+3
 11832  1322  3000               	movlw	0
 11833  1323  00F3               	movwf	___fleq@ff1+2
 11834  1324  3000               	movlw	0
 11835  1325  00F2               	movwf	___fleq@ff1+1
 11836  1326  3000               	movlw	0
 11837  1327  00F1               	movwf	___fleq@ff1
 11838  1328                     l1338:	
 11839  1328  3000               	movlw	0
 11840  1329  0575               	andwf	___fleq@ff2,w
 11841  132A  00A0               	movwf	??___fleq
 11842  132B  3000               	movlw	0
 11843  132C  0576               	andwf	___fleq@ff2+1,w
 11844  132D  00A1               	movwf	??___fleq+1
 11845  132E  3080               	movlw	128
 11846  132F  0577               	andwf	___fleq@ff2+2,w
 11847  1330  00A2               	movwf	??___fleq+2
 11848  1331  307F               	movlw	127
 11849  1332  0578               	andwf	___fleq@ff2+3,w
 11850  1333  00A3               	movwf	??___fleq+3
 11851  1334  0823               	movf	??___fleq+3,w
 11852  1335  0422               	iorwf	??___fleq+2,w
 11853  1336  0421               	iorwf	??___fleq+1,w
 11854  1337  0420               	iorwf	??___fleq,w
 11855  1338  1D03               	skipz
 11856  1339  2B42               	goto	l1339
 11857  133A  3000               	movlw	0
 11858  133B  00F8               	movwf	___fleq@ff2+3
 11859  133C  3000               	movlw	0
 11860  133D  00F7               	movwf	___fleq@ff2+2
 11861  133E  3000               	movlw	0
 11862  133F  00F6               	movwf	___fleq@ff2+1
 11863  1340  3000               	movlw	0
 11864  1341  00F5               	movwf	___fleq@ff2
 11865  1342                     l1339:	
 11866  1342  0878               	movf	___fleq@ff2+3,w
 11867  1343  0674               	xorwf	___fleq@ff1+3,w
 11868  1344  1D03               	skipz
 11869  1345  2B50               	goto	u6805
 11870  1346  0877               	movf	___fleq@ff2+2,w
 11871  1347  0673               	xorwf	___fleq@ff1+2,w
 11872  1348  1D03               	skipz
 11873  1349  2B50               	goto	u6805
 11874  134A  0876               	movf	___fleq@ff2+1,w
 11875  134B  0672               	xorwf	___fleq@ff1+1,w
 11876  134C  1D03               	skipz
 11877  134D  2B50               	goto	u6805
 11878  134E  0875               	movf	___fleq@ff2,w
 11879  134F  0671               	xorwf	___fleq@ff1,w
 11880  1350                     u6805:	
 11881  1350  1903               	skipnz
 11882  1351  2B54               	goto	l6478
 11883  1352  1003               	clrc
 11884  1353  0008               	return
 11885  1354                     l6478:	
 11886  1354  1403               	setc
 11887  1355  0008               	return
 11888  1356                     __end_of___fleq:	
 11889                           
 11890                           	psect	text30
 11891  1686                     __ptext30:	
 11892 ;; *************** function ___fldiv *****************
 11893 ;; Defined at:
 11894 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 11895 ;; Parameters:    Size  Location     Type
 11896 ;;  a               4    6[BANK0 ] unsigned int 
 11897 ;;  b               4   10[BANK0 ] unsigned int 
 11898 ;; Auto vars:     Size  Location     Type
 11899 ;;  grs             4   26[BANK0 ] unsigned long 
 11900 ;;  rem             4   19[BANK0 ] unsigned long 
 11901 ;;  new_exp         2   24[BANK0 ] int 
 11902 ;;  aexp            1   31[BANK0 ] unsigned char 
 11903 ;;  bexp            1   30[BANK0 ] unsigned char 
 11904 ;;  sign            1   23[BANK0 ] unsigned char 
 11905 ;; Return value:  Size  Location     Type
 11906 ;;                  4    6[BANK0 ] unsigned char 
 11907 ;; Registers used:
 11908 ;;		wreg, status,2, status,0
 11909 ;; Tracked objects:
 11910 ;;		On entry : 0/0
 11911 ;;		On exit  : 0/0
 11912 ;;		Unchanged: 0/0
 11913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11914 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11915 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11916 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11917 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11918 ;;Total ram usage:       26 bytes
 11919 ;; Hardware stack levels used:    1
 11920 ;; Hardware stack levels required when called:    4
 11921 ;; This function calls:
 11922 ;;		Nothing
 11923 ;; This function is called by:
 11924 ;;		_readPressureSensor
 11925 ;;		_efgtoa
 11926 ;; This function uses a non-reentrant model
 11927 ;;
 11928                           
 11929                           
 11930                           ;psect for function ___fldiv
 11931  1686                     ___fldiv:	
 11932                           
 11933                           ;incstack = 0
 11934                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 11935  1686  0020               	movlb	0	; select bank0
 11936  1687  082D               	movf	___fldiv@b+3,w
 11937  1688  3980               	andlw	128
 11938  1689  00AE               	movwf	??___fldiv
 11939  168A  082E               	movf	??___fldiv,w
 11940  168B  00B7               	movwf	___fldiv@sign
 11941  168C  352D               	lslf	___fldiv@b+3,w
 11942  168D  00AE               	movwf	??___fldiv
 11943  168E  082E               	movf	??___fldiv,w
 11944  168F  00BE               	movwf	___fldiv@bexp
 11945  1690  1BAC               	btfsc	___fldiv@b+2,7
 11946  1691  143E               	bsf	___fldiv@bexp,0
 11947  1692  083E               	movf	___fldiv@bexp,w
 11948  1693  1903               	btfsc	3,2
 11949  1694  2EA3               	goto	l4816
 11950  1695  0A3E               	incf	___fldiv@bexp,w
 11951  1696  1D03               	btfss	3,2
 11952  1697  2EA0               	goto	l4812
 11953  1698  3000               	movlw	0
 11954  1699  00AD               	movwf	___fldiv@b+3
 11955  169A  3000               	movlw	0
 11956  169B  00AC               	movwf	___fldiv@b+2
 11957  169C  3000               	movlw	0
 11958  169D  00AB               	movwf	___fldiv@b+1
 11959  169E  3000               	movlw	0
 11960  169F  00AA               	movwf	___fldiv@b
 11961  16A0                     l4812:	
 11962  16A0  17AC               	bsf	___fldiv@b+2,7
 11963  16A1  01AD               	clrf	___fldiv@b+3
 11964  16A2  2EAB               	goto	l4818
 11965  16A3                     l4816:	
 11966  16A3  3000               	movlw	0
 11967  16A4  00AD               	movwf	___fldiv@b+3
 11968  16A5  3000               	movlw	0
 11969  16A6  00AC               	movwf	___fldiv@b+2
 11970  16A7  3000               	movlw	0
 11971  16A8  00AB               	movwf	___fldiv@b+1
 11972  16A9  3000               	movlw	0
 11973  16AA  00AA               	movwf	___fldiv@b
 11974  16AB                     l4818:	
 11975  16AB  0829               	movf	___fldiv@a+3,w
 11976  16AC  3980               	andlw	128
 11977  16AD  00AE               	movwf	??___fldiv
 11978  16AE  082E               	movf	??___fldiv,w
 11979  16AF  06B7               	xorwf	___fldiv@sign,f
 11980  16B0  3529               	lslf	___fldiv@a+3,w
 11981  16B1  00AE               	movwf	??___fldiv
 11982  16B2  082E               	movf	??___fldiv,w
 11983  16B3  00BF               	movwf	___fldiv@aexp
 11984  16B4  1BA8               	btfsc	___fldiv@a+2,7
 11985  16B5  143F               	bsf	___fldiv@aexp,0
 11986  16B6  083F               	movf	___fldiv@aexp,w
 11987  16B7  1903               	btfsc	3,2
 11988  16B8  2EC7               	goto	l4836
 11989  16B9  0A3F               	incf	___fldiv@aexp,w
 11990  16BA  1D03               	btfss	3,2
 11991  16BB  2EC4               	goto	l4832
 11992  16BC  3000               	movlw	0
 11993  16BD  00A9               	movwf	___fldiv@a+3
 11994  16BE  3000               	movlw	0
 11995  16BF  00A8               	movwf	___fldiv@a+2
 11996  16C0  3000               	movlw	0
 11997  16C1  00A7               	movwf	___fldiv@a+1
 11998  16C2  3000               	movlw	0
 11999  16C3  00A6               	movwf	___fldiv@a
 12000  16C4                     l4832:	
 12001  16C4  17A8               	bsf	___fldiv@a+2,7
 12002  16C5  01A9               	clrf	___fldiv@a+3
 12003  16C6  2ECF               	goto	l1526
 12004  16C7                     l4836:	
 12005  16C7  3000               	movlw	0
 12006  16C8  00A9               	movwf	___fldiv@a+3
 12007  16C9  3000               	movlw	0
 12008  16CA  00A8               	movwf	___fldiv@a+2
 12009  16CB  3000               	movlw	0
 12010  16CC  00A7               	movwf	___fldiv@a+1
 12011  16CD  3000               	movlw	0
 12012  16CE  00A6               	movwf	___fldiv@a
 12013  16CF                     l1526:	
 12014  16CF  0829               	movf	___fldiv@a+3,w
 12015  16D0  0428               	iorwf	___fldiv@a+2,w
 12016  16D1  0427               	iorwf	___fldiv@a+1,w
 12017  16D2  0426               	iorwf	___fldiv@a,w
 12018  16D3  1D03               	skipz
 12019  16D4  2EEE               	goto	l4846
 12020  16D5  3000               	movlw	0
 12021  16D6  00AD               	movwf	___fldiv@b+3
 12022  16D7  3000               	movlw	0
 12023  16D8  00AC               	movwf	___fldiv@b+2
 12024  16D9  3000               	movlw	0
 12025  16DA  00AB               	movwf	___fldiv@b+1
 12026  16DB  3000               	movlw	0
 12027  16DC  00AA               	movwf	___fldiv@b
 12028  16DD  3080               	movlw	128
 12029  16DE  04AC               	iorwf	___fldiv@b+2,f
 12030  16DF  307F               	movlw	127
 12031  16E0  04AD               	iorwf	___fldiv@b+3,f
 12032  16E1                     L12:	
 12033  16E1  0837               	movf	___fldiv@sign,w
 12034  16E2  00AE               	movwf	??___fldiv
 12035  16E3  082E               	movf	??___fldiv,w
 12036  16E4  04AD               	iorwf	___fldiv@b+3,f
 12037  16E5  082D               	movf	___fldiv@b+3,w
 12038  16E6  00A9               	movwf	?___fldiv+3
 12039  16E7  082C               	movf	___fldiv@b+2,w
 12040  16E8  00A8               	movwf	?___fldiv+2
 12041  16E9  082B               	movf	___fldiv@b+1,w
 12042  16EA  00A7               	movwf	?___fldiv+1
 12043  16EB  082A               	movf	___fldiv@b,w
 12044  16EC  00A6               	movwf	?___fldiv
 12045  16ED  0008               	return
 12046  16EE                     l4846:	
 12047  16EE  083E               	movf	___fldiv@bexp,w
 12048  16EF  1D03               	btfss	3,2
 12049  16F0  2EFA               	goto	l4852
 12050  16F1  3000               	movlw	0
 12051  16F2  00A9               	movwf	?___fldiv+3
 12052  16F3  3000               	movlw	0
 12053  16F4  00A8               	movwf	?___fldiv+2
 12054  16F5  3000               	movlw	0
 12055  16F6  00A7               	movwf	?___fldiv+1
 12056  16F7  3000               	movlw	0
 12057  16F8  00A6               	movwf	?___fldiv
 12058  16F9  0008               	return
 12059  16FA                     l4852:	
 12060  16FA  083E               	movf	___fldiv@bexp,w
 12061  16FB  00AE               	movwf	??___fldiv
 12062  16FC  01AF               	clrf	??___fldiv+1
 12063  16FD  082F               	movf	??___fldiv+1,w
 12064  16FE  00B1               	movwf	??___fldiv+3
 12065  16FF  083F               	movf	___fldiv@aexp,w
 12066  1700  022E               	subwf	??___fldiv,w
 12067  1701  00B0               	movwf	??___fldiv+2
 12068  1702  1C03               	skipc
 12069  1703  03B1               	decf	??___fldiv+3,f
 12070  1704  0830               	movf	??___fldiv+2,w
 12071  1705  3E7F               	addlw	127
 12072  1706  00B8               	movwf	___fldiv@new_exp
 12073  1707  3000               	movlw	0
 12074  1708  3D31               	addwfc	??___fldiv+3,w
 12075  1709  00B9               	movwf	___fldiv@new_exp+1
 12076  170A  082D               	movf	___fldiv@b+3,w
 12077  170B  00B6               	movwf	___fldiv@rem+3
 12078  170C  082C               	movf	___fldiv@b+2,w
 12079  170D  00B5               	movwf	___fldiv@rem+2
 12080  170E  082B               	movf	___fldiv@b+1,w
 12081  170F  00B4               	movwf	___fldiv@rem+1
 12082  1710  082A               	movf	___fldiv@b,w
 12083  1711  00B3               	movwf	___fldiv@rem
 12084  1712  3000               	movlw	0
 12085  1713  00AD               	movwf	___fldiv@b+3
 12086  1714  3000               	movlw	0
 12087  1715  00AC               	movwf	___fldiv@b+2
 12088  1716  3000               	movlw	0
 12089  1717  00AB               	movwf	___fldiv@b+1
 12090  1718  3000               	movlw	0
 12091  1719  00AA               	movwf	___fldiv@b
 12092  171A  3000               	movlw	0
 12093  171B  00BD               	movwf	___fldiv@grs+3
 12094  171C  3000               	movlw	0
 12095  171D  00BC               	movwf	___fldiv@grs+2
 12096  171E  3000               	movlw	0
 12097  171F  00BB               	movwf	___fldiv@grs+1
 12098  1720  3000               	movlw	0
 12099  1721  00BA               	movwf	___fldiv@grs
 12100  1722  01BF               	clrf	___fldiv@aexp
 12101  1723                     l4880:	
 12102  1723  301A               	movlw	26
 12103  1724  023F               	subwf	___fldiv@aexp,w
 12104  1725  1803               	btfsc	3,0
 12105  1726  2F5F               	goto	l4882
 12106  1727  083F               	movf	___fldiv@aexp,w
 12107  1728  1903               	btfsc	3,2
 12108  1729  2F41               	goto	l4872
 12109  172A  3001               	movlw	1
 12110  172B                     u4535:	
 12111  172B  35B3               	lslf	___fldiv@rem,f
 12112  172C  0DB4               	rlf	___fldiv@rem+1,f
 12113  172D  0DB5               	rlf	___fldiv@rem+2,f
 12114  172E  0DB6               	rlf	___fldiv@rem+3,f
 12115  172F  0B89               	decfsz	9,f
 12116  1730  2F2B               	goto	u4535
 12117  1731  3001               	movlw	1
 12118  1732                     u4545:	
 12119  1732  35AA               	lslf	___fldiv@b,f
 12120  1733  0DAB               	rlf	___fldiv@b+1,f
 12121  1734  0DAC               	rlf	___fldiv@b+2,f
 12122  1735  0DAD               	rlf	___fldiv@b+3,f
 12123  1736  0B89               	decfsz	9,f
 12124  1737  2F32               	goto	u4545
 12125  1738  1BBD               	btfsc	___fldiv@grs+3,7
 12126  1739  142A               	bsf	___fldiv@b,0
 12127  173A  3001               	movlw	1
 12128  173B                     u4565:	
 12129  173B  35BA               	lslf	___fldiv@grs,f
 12130  173C  0DBB               	rlf	___fldiv@grs+1,f
 12131  173D  0DBC               	rlf	___fldiv@grs+2,f
 12132  173E  0DBD               	rlf	___fldiv@grs+3,f
 12133  173F  0B89               	decfsz	9,f
 12134  1740  2F3B               	goto	u4565
 12135  1741                     l4872:	
 12136  1741  0829               	movf	___fldiv@a+3,w
 12137  1742  0236               	subwf	___fldiv@rem+3,w
 12138  1743  1D03               	skipz
 12139  1744  2F4F               	goto	u4575
 12140  1745  0828               	movf	___fldiv@a+2,w
 12141  1746  0235               	subwf	___fldiv@rem+2,w
 12142  1747  1D03               	skipz
 12143  1748  2F4F               	goto	u4575
 12144  1749  0827               	movf	___fldiv@a+1,w
 12145  174A  0234               	subwf	___fldiv@rem+1,w
 12146  174B  1D03               	skipz
 12147  174C  2F4F               	goto	u4575
 12148  174D  0826               	movf	___fldiv@a,w
 12149  174E  0233               	subwf	___fldiv@rem,w
 12150  174F                     u4575:	
 12151  174F  1C03               	skipc
 12152  1750  2F5A               	goto	l4878
 12153  1751  173D               	bsf	___fldiv@grs+3,6
 12154  1752  0826               	movf	___fldiv@a,w
 12155  1753  02B3               	subwf	___fldiv@rem,f
 12156  1754  0827               	movf	___fldiv@a+1,w
 12157  1755  3BB4               	subwfb	___fldiv@rem+1,f
 12158  1756  0828               	movf	___fldiv@a+2,w
 12159  1757  3BB5               	subwfb	___fldiv@rem+2,f
 12160  1758  0829               	movf	___fldiv@a+3,w
 12161  1759  3BB6               	subwfb	___fldiv@rem+3,f
 12162  175A                     l4878:	
 12163  175A  3001               	movlw	1
 12164  175B  00AE               	movwf	??___fldiv
 12165  175C  082E               	movf	??___fldiv,w
 12166  175D  07BF               	addwf	___fldiv@aexp,f
 12167  175E  2F23               	goto	l4880
 12168  175F                     l4882:	
 12169  175F  0836               	movf	___fldiv@rem+3,w
 12170  1760  0435               	iorwf	___fldiv@rem+2,w
 12171  1761  0434               	iorwf	___fldiv@rem+1,w
 12172  1762  0433               	iorwf	___fldiv@rem,w
 12173  1763  1D03               	btfss	3,2
 12174  1764  143A               	bsf	___fldiv@grs,0
 12175  1765                     l4896:	
 12176  1765  1BAC               	btfsc	___fldiv@b+2,7
 12177  1766  2F7C               	goto	l4898
 12178  1767  3001               	movlw	1
 12179  1768                     u4605:	
 12180  1768  35AA               	lslf	___fldiv@b,f
 12181  1769  0DAB               	rlf	___fldiv@b+1,f
 12182  176A  0DAC               	rlf	___fldiv@b+2,f
 12183  176B  0DAD               	rlf	___fldiv@b+3,f
 12184  176C  0B89               	decfsz	9,f
 12185  176D  2F68               	goto	u4605
 12186  176E  1BBD               	btfsc	___fldiv@grs+3,7
 12187  176F  142A               	bsf	___fldiv@b,0
 12188  1770  3001               	movlw	1
 12189  1771                     u4625:	
 12190  1771  35BA               	lslf	___fldiv@grs,f
 12191  1772  0DBB               	rlf	___fldiv@grs+1,f
 12192  1773  0DBC               	rlf	___fldiv@grs+2,f
 12193  1774  0DBD               	rlf	___fldiv@grs+3,f
 12194  1775  0B89               	decfsz	9,f
 12195  1776  2F71               	goto	u4625
 12196  1777  30FF               	movlw	255
 12197  1778  07B8               	addwf	___fldiv@new_exp,f
 12198  1779  30FF               	movlw	255
 12199  177A  3DB9               	addwfc	___fldiv@new_exp+1,f
 12200  177B  2F65               	goto	l4896
 12201  177C                     l4898:	
 12202  177C  01BF               	clrf	___fldiv@aexp
 12203  177D  1FBD               	btfss	___fldiv@grs+3,7
 12204  177E  2F95               	goto	l4908
 12205  177F  30FF               	movlw	255
 12206  1780  053A               	andwf	___fldiv@grs,w
 12207  1781  00AE               	movwf	??___fldiv
 12208  1782  30FF               	movlw	255
 12209  1783  053B               	andwf	___fldiv@grs+1,w
 12210  1784  00AF               	movwf	??___fldiv+1
 12211  1785  30FF               	movlw	255
 12212  1786  053C               	andwf	___fldiv@grs+2,w
 12213  1787  00B0               	movwf	??___fldiv+2
 12214  1788  307F               	movlw	127
 12215  1789  053D               	andwf	___fldiv@grs+3,w
 12216  178A  00B1               	movwf	??___fldiv+3
 12217  178B  0831               	movf	??___fldiv+3,w
 12218  178C  0430               	iorwf	??___fldiv+2,w
 12219  178D  042F               	iorwf	??___fldiv+1,w
 12220  178E  042E               	iorwf	??___fldiv,w
 12221  178F  1903               	skipnz
 12222  1790  182A               	btfsc	___fldiv@b,0
 12223  1791  2F93               	goto	l4904
 12224  1792  2F95               	goto	l4908
 12225  1793                     l4904:	
 12226  1793  01BF               	clrf	___fldiv@aexp
 12227  1794  0ABF               	incf	___fldiv@aexp,f
 12228  1795                     l4908:	
 12229  1795  083F               	movf	___fldiv@aexp,w
 12230  1796  1903               	btfsc	3,2
 12231  1797  2FBE               	goto	l4918
 12232  1798  3001               	movlw	1
 12233  1799  07AA               	addwf	___fldiv@b,f
 12234  179A  3000               	movlw	0
 12235  179B  3DAB               	addwfc	___fldiv@b+1,f
 12236  179C  3000               	movlw	0
 12237  179D  3DAC               	addwfc	___fldiv@b+2,f
 12238  179E  3000               	movlw	0
 12239  179F  3DAD               	addwfc	___fldiv@b+3,f
 12240  17A0  1C2D               	btfss	___fldiv@b+3,0
 12241  17A1  2FBE               	goto	l4918
 12242  17A2  082A               	movf	___fldiv@b,w
 12243  17A3  00AE               	movwf	??___fldiv
 12244  17A4  082B               	movf	___fldiv@b+1,w
 12245  17A5  00AF               	movwf	??___fldiv+1
 12246  17A6  082C               	movf	___fldiv@b+2,w
 12247  17A7  00B0               	movwf	??___fldiv+2
 12248  17A8  082D               	movf	___fldiv@b+3,w
 12249  17A9  00B1               	movwf	??___fldiv+3
 12250  17AA  3001               	movlw	1
 12251  17AB  00B2               	movwf	??___fldiv+4
 12252  17AC                     u4695:	
 12253  17AC  37B1               	asrf	??___fldiv+3,f
 12254  17AD  0CB0               	rrf	??___fldiv+2,f
 12255  17AE  0CAF               	rrf	??___fldiv+1,f
 12256  17AF  0CAE               	rrf	??___fldiv,f
 12257  17B0  0BB2               	decfsz	??___fldiv+4,f
 12258  17B1  2FAC               	goto	u4695
 12259  17B2  0831               	movf	??___fldiv+3,w
 12260  17B3  00AD               	movwf	___fldiv@b+3
 12261  17B4  0830               	movf	??___fldiv+2,w
 12262  17B5  00AC               	movwf	___fldiv@b+2
 12263  17B6  082F               	movf	??___fldiv+1,w
 12264  17B7  00AB               	movwf	___fldiv@b+1
 12265  17B8  082E               	movf	??___fldiv,w
 12266  17B9  00AA               	movwf	___fldiv@b
 12267  17BA  3001               	movlw	1
 12268  17BB  07B8               	addwf	___fldiv@new_exp,f
 12269  17BC  3000               	movlw	0
 12270  17BD  3DB9               	addwfc	___fldiv@new_exp+1,f
 12271  17BE                     l4918:	
 12272  17BE  0839               	movf	___fldiv@new_exp+1,w
 12273  17BF  3A80               	xorlw	128
 12274  17C0  00AE               	movwf	??___fldiv
 12275  17C1  3080               	movlw	128
 12276  17C2  022E               	subwf	??___fldiv,w
 12277  17C3  1D03               	skipz
 12278  17C4  2FC7               	goto	u4705
 12279  17C5  30FF               	movlw	255
 12280  17C6  0238               	subwf	___fldiv@new_exp,w
 12281  17C7                     u4705:	
 12282  17C7  1C03               	skipc
 12283  17C8  2FD6               	goto	l1547
 12284  17C9  30FF               	movlw	255
 12285  17CA  0020               	movlb	0	; select bank0
 12286  17CB  00B8               	movwf	___fldiv@new_exp
 12287  17CC  3000               	movlw	0
 12288  17CD  00B9               	movwf	___fldiv@new_exp+1
 12289  17CE  3000               	movlw	0
 12290  17CF  00AD               	movwf	___fldiv@b+3
 12291  17D0  3000               	movlw	0
 12292  17D1  00AC               	movwf	___fldiv@b+2
 12293  17D2  3000               	movlw	0
 12294  17D3  00AB               	movwf	___fldiv@b+1
 12295  17D4  3000               	movlw	0
 12296  17D5  00AA               	movwf	___fldiv@b
 12297  17D6                     l1547:	
 12298  17D6  0020               	movlb	0	; select bank0
 12299  17D7  0839               	movf	___fldiv@new_exp+1,w
 12300  17D8  3A80               	xorlw	128
 12301  17D9  00AE               	movwf	??___fldiv
 12302  17DA  3080               	movlw	128
 12303  17DB  022E               	subwf	??___fldiv,w
 12304  17DC  1D03               	skipz
 12305  17DD  2FE0               	goto	u4715
 12306  17DE  3001               	movlw	1
 12307  17DF  0238               	subwf	___fldiv@new_exp,w
 12308  17E0                     u4715:	
 12309  17E0  1803               	skipnc
 12310  17E1  2FEE               	goto	l1548
 12311  17E2  0020               	movlb	0	; select bank0
 12312  17E3  01B8               	clrf	___fldiv@new_exp
 12313  17E4  01B9               	clrf	___fldiv@new_exp+1
 12314  17E5  3000               	movlw	0
 12315  17E6  00AD               	movwf	___fldiv@b+3
 12316  17E7  3000               	movlw	0
 12317  17E8  00AC               	movwf	___fldiv@b+2
 12318  17E9  3000               	movlw	0
 12319  17EA  00AB               	movwf	___fldiv@b+1
 12320  17EB  3000               	movlw	0
 12321  17EC  00AA               	movwf	___fldiv@b
 12322  17ED  01B7               	clrf	___fldiv@sign
 12323  17EE                     l1548:	
 12324  17EE  0020               	movlb	0	; select bank0
 12325  17EF  0838               	movf	___fldiv@new_exp,w
 12326  17F0  00AE               	movwf	??___fldiv
 12327  17F1  082E               	movf	??___fldiv,w
 12328  17F2  00BE               	movwf	___fldiv@bexp
 12329  17F3  1C3E               	btfss	___fldiv@bexp,0
 12330  17F4  2FF7               	goto	l4932
 12331  17F5  17AC               	bsf	___fldiv@b+2,7
 12332  17F6  2FFB               	goto	l1550
 12333  17F7                     l4932:	
 12334  17F7  307F               	movlw	127
 12335  17F8  00AE               	movwf	??___fldiv
 12336  17F9  082E               	movf	??___fldiv,w
 12337  17FA  05AC               	andwf	___fldiv@b+2,f
 12338  17FB                     l1550:	
 12339  17FB  363E               	lsrf	___fldiv@bexp,w
 12340  17FC  00AE               	movwf	??___fldiv
 12341  17FD  082E               	movf	??___fldiv,w
 12342  17FE  00AD               	movwf	___fldiv@b+3
 12343  17FF  2EE1               	goto	L12
 12344  1800                     __end_of___fldiv:	
 12345                           
 12346                           	psect	text31
 12347  1281                     __ptext31:	
 12348 ;; *************** function ___awmod *****************
 12349 ;; Defined at:
 12350 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
 12351 ;; Parameters:    Size  Location     Type
 12352 ;;  divisor         2    1[COMMON] int 
 12353 ;;  dividend        2    3[COMMON] int 
 12354 ;; Auto vars:     Size  Location     Type
 12355 ;;  sign            1    7[COMMON] unsigned char 
 12356 ;;  counter         1    6[COMMON] unsigned char 
 12357 ;; Return value:  Size  Location     Type
 12358 ;;                  2    1[COMMON] int 
 12359 ;; Registers used:
 12360 ;;		wreg, status,2, status,0
 12361 ;; Tracked objects:
 12362 ;;		On entry : 0/0
 12363 ;;		On exit  : 0/0
 12364 ;;		Unchanged: 0/0
 12365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12366 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12367 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12368 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12369 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12370 ;;Total ram usage:        7 bytes
 12371 ;; Hardware stack levels used:    1
 12372 ;; Hardware stack levels required when called:    4
 12373 ;; This function calls:
 12374 ;;		Nothing
 12375 ;; This function is called by:
 12376 ;;		_efgtoa
 12377 ;; This function uses a non-reentrant model
 12378 ;;
 12379                           
 12380                           
 12381                           ;psect for function ___awmod
 12382  1281                     ___awmod:	
 12383                           
 12384                           ;incstack = 0
 12385                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 12386  1281  01F7               	clrf	___awmod@sign
 12387  1282  1FF4               	btfss	___awmod@dividend+1,7
 12388  1283  2A8B               	goto	l4686
 12389  1284  09F3               	comf	___awmod@dividend,f
 12390  1285  09F4               	comf	___awmod@dividend+1,f
 12391  1286  0AF3               	incf	___awmod@dividend,f
 12392  1287  1903               	skipnz
 12393  1288  0AF4               	incf	___awmod@dividend+1,f
 12394  1289  01F7               	clrf	___awmod@sign
 12395  128A  0AF7               	incf	___awmod@sign,f
 12396  128B                     l4686:	
 12397  128B  1FF2               	btfss	___awmod@divisor+1,7
 12398  128C  2A92               	goto	l4690
 12399  128D  09F1               	comf	___awmod@divisor,f
 12400  128E  09F2               	comf	___awmod@divisor+1,f
 12401  128F  0AF1               	incf	___awmod@divisor,f
 12402  1290  1903               	skipnz
 12403  1291  0AF2               	incf	___awmod@divisor+1,f
 12404  1292                     l4690:	
 12405  1292  0871               	movf	___awmod@divisor,w
 12406  1293  0472               	iorwf	___awmod@divisor+1,w
 12407  1294  1903               	btfsc	3,2
 12408  1295  2AB9               	goto	l4708
 12409  1296  01F6               	clrf	___awmod@counter
 12410  1297  0AF6               	incf	___awmod@counter,f
 12411  1298                     l4698:	
 12412  1298  1BF2               	btfsc	___awmod@divisor+1,7
 12413  1299  2AA4               	goto	l4700
 12414  129A  3001               	movlw	1
 12415  129B                     u4195:	
 12416  129B  35F1               	lslf	___awmod@divisor,f
 12417  129C  0DF2               	rlf	___awmod@divisor+1,f
 12418  129D  0B89               	decfsz	9,f
 12419  129E  2A9B               	goto	u4195
 12420  129F  3001               	movlw	1
 12421  12A0  00F5               	movwf	??___awmod
 12422  12A1  0875               	movf	??___awmod,w
 12423  12A2  07F6               	addwf	___awmod@counter,f
 12424  12A3  2A98               	goto	l4698
 12425  12A4                     l4700:	
 12426  12A4  0872               	movf	___awmod@divisor+1,w
 12427  12A5  0274               	subwf	___awmod@dividend+1,w
 12428  12A6  1D03               	skipz
 12429  12A7  2AAA               	goto	u4215
 12430  12A8  0871               	movf	___awmod@divisor,w
 12431  12A9  0273               	subwf	___awmod@dividend,w
 12432  12AA                     u4215:	
 12433  12AA  1C03               	skipc
 12434  12AB  2AB0               	goto	l4704
 12435  12AC  0871               	movf	___awmod@divisor,w
 12436  12AD  02F3               	subwf	___awmod@dividend,f
 12437  12AE  0872               	movf	___awmod@divisor+1,w
 12438  12AF  3BF4               	subwfb	___awmod@dividend+1,f
 12439  12B0                     l4704:	
 12440  12B0  3001               	movlw	1
 12441  12B1                     u4225:	
 12442  12B1  36F2               	lsrf	___awmod@divisor+1,f
 12443  12B2  0CF1               	rrf	___awmod@divisor,f
 12444  12B3  0B89               	decfsz	9,f
 12445  12B4  2AB1               	goto	u4225
 12446  12B5  3001               	movlw	1
 12447  12B6  02F6               	subwf	___awmod@counter,f
 12448  12B7  1D03               	btfss	3,2
 12449  12B8  2AA4               	goto	l4700
 12450  12B9                     l4708:	
 12451  12B9  0877               	movf	___awmod@sign,w
 12452  12BA  1903               	btfsc	3,2
 12453  12BB  2AC1               	goto	l4712
 12454  12BC  09F3               	comf	___awmod@dividend,f
 12455  12BD  09F4               	comf	___awmod@dividend+1,f
 12456  12BE  0AF3               	incf	___awmod@dividend,f
 12457  12BF  1903               	skipnz
 12458  12C0  0AF4               	incf	___awmod@dividend+1,f
 12459  12C1                     l4712:	
 12460  12C1  0874               	movf	___awmod@dividend+1,w
 12461  12C2  00F2               	movwf	?___awmod+1
 12462  12C3  0873               	movf	___awmod@dividend,w
 12463  12C4  00F1               	movwf	?___awmod
 12464  12C5  0008               	return
 12465  12C6                     __end_of___awmod:	
 12466                           
 12467                           	psect	text32
 12468  13F4                     __ptext32:	
 12469 ;; *************** function ___awdiv *****************
 12470 ;; Defined at:
 12471 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 12472 ;; Parameters:    Size  Location     Type
 12473 ;;  divisor         2    1[COMMON] int 
 12474 ;;  dividend        2    3[COMMON] int 
 12475 ;; Auto vars:     Size  Location     Type
 12476 ;;  quotient        2    8[COMMON] int 
 12477 ;;  sign            1    7[COMMON] unsigned char 
 12478 ;;  counter         1    6[COMMON] unsigned char 
 12479 ;; Return value:  Size  Location     Type
 12480 ;;                  2    1[COMMON] int 
 12481 ;; Registers used:
 12482 ;;		wreg, status,2, status,0
 12483 ;; Tracked objects:
 12484 ;;		On entry : 0/0
 12485 ;;		On exit  : 0/0
 12486 ;;		Unchanged: 0/0
 12487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12488 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12489 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12490 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12491 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12492 ;;Total ram usage:        9 bytes
 12493 ;; Hardware stack levels used:    1
 12494 ;; Hardware stack levels required when called:    4
 12495 ;; This function calls:
 12496 ;;		Nothing
 12497 ;; This function is called by:
 12498 ;;		_efgtoa
 12499 ;; This function uses a non-reentrant model
 12500 ;;
 12501                           
 12502                           
 12503                           ;psect for function ___awdiv
 12504  13F4                     ___awdiv:	
 12505                           
 12506                           ;incstack = 0
 12507                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 12508  13F4  01F7               	clrf	___awdiv@sign
 12509  13F5  1FF2               	btfss	___awdiv@divisor+1,7
 12510  13F6  2BFE               	goto	l4642
 12511  13F7  09F1               	comf	___awdiv@divisor,f
 12512  13F8  09F2               	comf	___awdiv@divisor+1,f
 12513  13F9  0AF1               	incf	___awdiv@divisor,f
 12514  13FA  1903               	skipnz
 12515  13FB  0AF2               	incf	___awdiv@divisor+1,f
 12516  13FC  01F7               	clrf	___awdiv@sign
 12517  13FD  0AF7               	incf	___awdiv@sign,f
 12518  13FE                     l4642:	
 12519  13FE  1FF4               	btfss	___awdiv@dividend+1,7
 12520  13FF  2C09               	goto	l4648
 12521  1400  09F3               	comf	___awdiv@dividend,f
 12522  1401  09F4               	comf	___awdiv@dividend+1,f
 12523  1402  0AF3               	incf	___awdiv@dividend,f
 12524  1403  1903               	skipnz
 12525  1404  0AF4               	incf	___awdiv@dividend+1,f
 12526  1405  3001               	movlw	1
 12527  1406  00F5               	movwf	??___awdiv
 12528  1407  0875               	movf	??___awdiv,w
 12529  1408  06F7               	xorwf	___awdiv@sign,f
 12530  1409                     l4648:	
 12531  1409  01F8               	clrf	___awdiv@quotient
 12532  140A  01F9               	clrf	___awdiv@quotient+1
 12533  140B  0871               	movf	___awdiv@divisor,w
 12534  140C  0472               	iorwf	___awdiv@divisor+1,w
 12535  140D  1903               	btfsc	3,2
 12536  140E  2C38               	goto	l4670
 12537  140F  01F6               	clrf	___awdiv@counter
 12538  1410  0AF6               	incf	___awdiv@counter,f
 12539  1411                     l4658:	
 12540  1411  1BF2               	btfsc	___awdiv@divisor+1,7
 12541  1412  2C1D               	goto	l4660
 12542  1413  3001               	movlw	1
 12543  1414                     u4095:	
 12544  1414  35F1               	lslf	___awdiv@divisor,f
 12545  1415  0DF2               	rlf	___awdiv@divisor+1,f
 12546  1416  0B89               	decfsz	9,f
 12547  1417  2C14               	goto	u4095
 12548  1418  3001               	movlw	1
 12549  1419  00F5               	movwf	??___awdiv
 12550  141A  0875               	movf	??___awdiv,w
 12551  141B  07F6               	addwf	___awdiv@counter,f
 12552  141C  2C11               	goto	l4658
 12553  141D                     l4660:	
 12554  141D  3001               	movlw	1
 12555  141E                     u4115:	
 12556  141E  35F8               	lslf	___awdiv@quotient,f
 12557  141F  0DF9               	rlf	___awdiv@quotient+1,f
 12558  1420  0B89               	decfsz	9,f
 12559  1421  2C1E               	goto	u4115
 12560  1422  0872               	movf	___awdiv@divisor+1,w
 12561  1423  0274               	subwf	___awdiv@dividend+1,w
 12562  1424  1D03               	skipz
 12563  1425  2C28               	goto	u4125
 12564  1426  0871               	movf	___awdiv@divisor,w
 12565  1427  0273               	subwf	___awdiv@dividend,w
 12566  1428                     u4125:	
 12567  1428  1C03               	skipc
 12568  1429  2C2F               	goto	l4666
 12569  142A  0871               	movf	___awdiv@divisor,w
 12570  142B  02F3               	subwf	___awdiv@dividend,f
 12571  142C  0872               	movf	___awdiv@divisor+1,w
 12572  142D  3BF4               	subwfb	___awdiv@dividend+1,f
 12573  142E  1478               	bsf	___awdiv@quotient,0
 12574  142F                     l4666:	
 12575  142F  3001               	movlw	1
 12576  1430                     u4135:	
 12577  1430  36F2               	lsrf	___awdiv@divisor+1,f
 12578  1431  0CF1               	rrf	___awdiv@divisor,f
 12579  1432  0B89               	decfsz	9,f
 12580  1433  2C30               	goto	u4135
 12581  1434  3001               	movlw	1
 12582  1435  02F6               	subwf	___awdiv@counter,f
 12583  1436  1D03               	btfss	3,2
 12584  1437  2C1D               	goto	l4660
 12585  1438                     l4670:	
 12586  1438  0877               	movf	___awdiv@sign,w
 12587  1439  1903               	btfsc	3,2
 12588  143A  2C40               	goto	l4674
 12589  143B  09F8               	comf	___awdiv@quotient,f
 12590  143C  09F9               	comf	___awdiv@quotient+1,f
 12591  143D  0AF8               	incf	___awdiv@quotient,f
 12592  143E  1903               	skipnz
 12593  143F  0AF9               	incf	___awdiv@quotient+1,f
 12594  1440                     l4674:	
 12595  1440  0879               	movf	___awdiv@quotient+1,w
 12596  1441  00F2               	movwf	?___awdiv+1
 12597  1442  0878               	movf	___awdiv@quotient,w
 12598  1443  00F1               	movwf	?___awdiv
 12599  1444  0008               	return
 12600  1445                     __end_of___awdiv:	
 12601                           
 12602                           	psect	text33
 12603  15F0                     __ptext33:	
 12604 ;; *************** function ___xxtofl *****************
 12605 ;; Defined at:
 12606 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 12607 ;; Parameters:    Size  Location     Type
 12608 ;;  sign            1    wreg     unsigned char 
 12609 ;;  val             4    1[COMMON] long 
 12610 ;; Auto vars:     Size  Location     Type
 12611 ;;  sign            1    0[BANK0 ] unsigned char 
 12612 ;;  arg             4    2[BANK0 ] unsigned long 
 12613 ;;  exp             1    1[BANK0 ] unsigned char 
 12614 ;; Return value:  Size  Location     Type
 12615 ;;                  4    1[COMMON] unsigned char 
 12616 ;; Registers used:
 12617 ;;		wreg, status,2, status,0
 12618 ;; Tracked objects:
 12619 ;;		On entry : 0/0
 12620 ;;		On exit  : 0/0
 12621 ;;		Unchanged: 0/0
 12622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12623 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12624 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12625 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12626 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12627 ;;Total ram usage:       14 bytes
 12628 ;; Hardware stack levels used:    1
 12629 ;; Hardware stack levels required when called:    4
 12630 ;; This function calls:
 12631 ;;		Nothing
 12632 ;; This function is called by:
 12633 ;;		_readPressureSensor
 12634 ;; This function uses a non-reentrant model
 12635 ;;
 12636                           
 12637                           
 12638                           ;psect for function ___xxtofl
 12639  15F0                     ___xxtofl:	
 12640                           
 12641                           ;incstack = 0
 12642                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 12643                           ;___xxtofl@sign stored from wreg
 12644  15F0  0020               	movlb	0	; select bank0
 12645  15F1  00A0               	movwf	___xxtofl@sign
 12646  15F2  0820               	movf	___xxtofl@sign,w
 12647  15F3  1D03               	btfss	3,2
 12648  15F4  1FF4               	btfss	___xxtofl@val+3,7
 12649  15F5  2E06               	goto	l5744
 12650  15F6  0971               	comf	___xxtofl@val,w
 12651  15F7  00A2               	movwf	___xxtofl@arg
 12652  15F8  0972               	comf	___xxtofl@val+1,w
 12653  15F9  00A3               	movwf	___xxtofl@arg+1
 12654  15FA  0973               	comf	___xxtofl@val+2,w
 12655  15FB  00A4               	movwf	___xxtofl@arg+2
 12656  15FC  0974               	comf	___xxtofl@val+3,w
 12657  15FD  00A5               	movwf	___xxtofl@arg+3
 12658  15FE  0AA2               	incf	___xxtofl@arg,f
 12659  15FF  1903               	skipnz
 12660  1600  0AA3               	incf	___xxtofl@arg+1,f
 12661  1601  1903               	skipnz
 12662  1602  0AA4               	incf	___xxtofl@arg+2,f
 12663  1603  1903               	skipnz
 12664  1604  0AA5               	incf	___xxtofl@arg+3,f
 12665  1605  2E0E               	goto	l1604
 12666  1606                     l5744:	
 12667  1606  0874               	movf	___xxtofl@val+3,w
 12668  1607  00A5               	movwf	___xxtofl@arg+3
 12669  1608  0873               	movf	___xxtofl@val+2,w
 12670  1609  00A4               	movwf	___xxtofl@arg+2
 12671  160A  0872               	movf	___xxtofl@val+1,w
 12672  160B  00A3               	movwf	___xxtofl@arg+1
 12673  160C  0871               	movf	___xxtofl@val,w
 12674  160D  00A2               	movwf	___xxtofl@arg
 12675  160E                     l1604:	
 12676  160E  0874               	movf	___xxtofl@val+3,w
 12677  160F  0473               	iorwf	___xxtofl@val+2,w
 12678  1610  0472               	iorwf	___xxtofl@val+1,w
 12679  1611  0471               	iorwf	___xxtofl@val,w
 12680  1612  1D03               	skipz
 12681  1613  2E1D               	goto	l5750
 12682  1614  3000               	movlw	0
 12683  1615  00F4               	movwf	?___xxtofl+3
 12684  1616  3000               	movlw	0
 12685  1617  00F3               	movwf	?___xxtofl+2
 12686  1618  3000               	movlw	0
 12687  1619  00F2               	movwf	?___xxtofl+1
 12688  161A  3000               	movlw	0
 12689  161B  00F1               	movwf	?___xxtofl
 12690  161C  0008               	return
 12691  161D                     l5750:	
 12692  161D  3096               	movlw	150
 12693  161E  00F5               	movwf	??___xxtofl
 12694  161F  0875               	movf	??___xxtofl,w
 12695  1620  00A1               	movwf	___xxtofl@exp
 12696  1621                     l5754:	
 12697  1621  30FE               	movlw	254
 12698  1622  0525               	andwf	___xxtofl@arg+3,w
 12699  1623  1903               	btfsc	3,2
 12700  1624  2E44               	goto	l1610
 12701  1625  3001               	movlw	1
 12702  1626  00F5               	movwf	??___xxtofl
 12703  1627  0875               	movf	??___xxtofl,w
 12704  1628  07A1               	addwf	___xxtofl@exp,f
 12705  1629  3001               	movlw	1
 12706  162A                     u5805:	
 12707  162A  36A5               	lsrf	___xxtofl@arg+3,f
 12708  162B  0CA4               	rrf	___xxtofl@arg+2,f
 12709  162C  0CA3               	rrf	___xxtofl@arg+1,f
 12710  162D  0CA2               	rrf	___xxtofl@arg,f
 12711  162E  0B89               	decfsz	9,f
 12712  162F  2E2A               	goto	u5805
 12713  1630  2E21               	goto	l5754
 12714  1631                     l5756:	
 12715  1631  3001               	movlw	1
 12716  1632  00F5               	movwf	??___xxtofl
 12717  1633  0875               	movf	??___xxtofl,w
 12718  1634  07A1               	addwf	___xxtofl@exp,f
 12719  1635  3001               	movlw	1
 12720  1636  07A2               	addwf	___xxtofl@arg,f
 12721  1637  3000               	movlw	0
 12722  1638  3DA3               	addwfc	___xxtofl@arg+1,f
 12723  1639  3000               	movlw	0
 12724  163A  3DA4               	addwfc	___xxtofl@arg+2,f
 12725  163B  3000               	movlw	0
 12726  163C  3DA5               	addwfc	___xxtofl@arg+3,f
 12727  163D  3001               	movlw	1
 12728  163E                     u5825:	
 12729  163E  36A5               	lsrf	___xxtofl@arg+3,f
 12730  163F  0CA4               	rrf	___xxtofl@arg+2,f
 12731  1640  0CA3               	rrf	___xxtofl@arg+1,f
 12732  1641  0CA2               	rrf	___xxtofl@arg,f
 12733  1642  0B89               	decfsz	9,f
 12734  1643  2E3E               	goto	u5825
 12735  1644                     l1610:	
 12736  1644  30FF               	movlw	255
 12737  1645  0525               	andwf	___xxtofl@arg+3,w
 12738  1646  1903               	btfsc	3,2
 12739  1647  2E56               	goto	l5764
 12740  1648  2E31               	goto	l5756
 12741  1649                     l5766:	
 12742  1649  3002               	movlw	2
 12743  164A  0221               	subwf	___xxtofl@exp,w
 12744  164B  1C03               	btfss	3,0
 12745  164C  2E58               	goto	l1617
 12746  164D  3001               	movlw	1
 12747  164E  02A1               	subwf	___xxtofl@exp,f
 12748  164F  3001               	movlw	1
 12749  1650                     u5845:	
 12750  1650  35A2               	lslf	___xxtofl@arg,f
 12751  1651  0DA3               	rlf	___xxtofl@arg+1,f
 12752  1652  0DA4               	rlf	___xxtofl@arg+2,f
 12753  1653  0DA5               	rlf	___xxtofl@arg+3,f
 12754  1654  0B89               	decfsz	9,f
 12755  1655  2E50               	goto	u5845
 12756  1656                     l5764:	
 12757  1656  1FA4               	btfss	___xxtofl@arg+2,7
 12758  1657  2E49               	goto	l5766
 12759  1658                     l1617:	
 12760  1658  1821               	btfsc	___xxtofl@exp,0
 12761  1659  2E62               	goto	l1618
 12762  165A  30FF               	movlw	255
 12763  165B  05A2               	andwf	___xxtofl@arg,f
 12764  165C  30FF               	movlw	255
 12765  165D  05A3               	andwf	___xxtofl@arg+1,f
 12766  165E  307F               	movlw	127
 12767  165F  05A4               	andwf	___xxtofl@arg+2,f
 12768  1660  30FF               	movlw	255
 12769  1661  05A5               	andwf	___xxtofl@arg+3,f
 12770  1662                     l1618:	
 12771  1662  1003               	clrc
 12772  1663  0CA1               	rrf	___xxtofl@exp,f
 12773  1664  0821               	movf	___xxtofl@exp,w
 12774  1665  00F5               	movwf	??___xxtofl
 12775  1666  01F6               	clrf	??___xxtofl+1
 12776  1667  01F7               	clrf	??___xxtofl+2
 12777  1668  01F8               	clrf	??___xxtofl+3
 12778  1669  3018               	movlw	24
 12779  166A                     u5885:	
 12780  166A  35F5               	lslf	??___xxtofl,f
 12781  166B  0DF6               	rlf	??___xxtofl+1,f
 12782  166C  0DF7               	rlf	??___xxtofl+2,f
 12783  166D  0DF8               	rlf	??___xxtofl+3,f
 12784  166E  0B89               	decfsz	9,f
 12785  166F  2E6A               	goto	u5885
 12786  1670  0875               	movf	??___xxtofl,w
 12787  1671  04A2               	iorwf	___xxtofl@arg,f
 12788  1672  0876               	movf	??___xxtofl+1,w
 12789  1673  04A3               	iorwf	___xxtofl@arg+1,f
 12790  1674  0877               	movf	??___xxtofl+2,w
 12791  1675  04A4               	iorwf	___xxtofl@arg+2,f
 12792  1676  0878               	movf	??___xxtofl+3,w
 12793  1677  04A5               	iorwf	___xxtofl@arg+3,f
 12794  1678  0820               	movf	___xxtofl@sign,w
 12795  1679  1D03               	btfss	3,2
 12796  167A  1FF4               	btfss	___xxtofl@val+3,7
 12797  167B  2E7D               	goto	l5778
 12798  167C  17A5               	bsf	___xxtofl@arg+3,7
 12799  167D                     l5778:	
 12800  167D  0825               	movf	___xxtofl@arg+3,w
 12801  167E  00F4               	movwf	?___xxtofl+3
 12802  167F  0824               	movf	___xxtofl@arg+2,w
 12803  1680  00F3               	movwf	?___xxtofl+2
 12804  1681  0823               	movf	___xxtofl@arg+1,w
 12805  1682  00F2               	movwf	?___xxtofl+1
 12806  1683  0822               	movf	___xxtofl@arg,w
 12807  1684  00F1               	movwf	?___xxtofl
 12808  1685  0008               	return
 12809  1686                     __end_of___xxtofl:	
 12810                           
 12811                           	psect	text34
 12812  10F8                     __ptext34:	
 12813 ;; *************** function _I2C1_Read1ByteRegister *****************
 12814 ;; Defined at:
 12815 ;;		line 63 in file "mcc_generated_files/examples/i2c1_master_example.c"
 12816 ;; Parameters:    Size  Location     Type
 12817 ;;  address         1    wreg     unsigned char 
 12818 ;;  reg             1    8[BANK0 ] unsigned char 
 12819 ;; Auto vars:     Size  Location     Type
 12820 ;;  address         1   10[BANK0 ] unsigned char 
 12821 ;;  returnValue     1   11[BANK0 ] unsigned char 
 12822 ;; Return value:  Size  Location     Type
 12823 ;;                  1    wreg      unsigned char 
 12824 ;; Registers used:
 12825 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12826 ;; Tracked objects:
 12827 ;;		On entry : 0/0
 12828 ;;		On exit  : 0/0
 12829 ;;		Unchanged: 0/0
 12830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12831 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12832 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12833 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12834 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12835 ;;Total ram usage:        4 bytes
 12836 ;; Hardware stack levels used:    1
 12837 ;; Hardware stack levels required when called:   12
 12838 ;; This function calls:
 12839 ;;		_I2C1_Close
 12840 ;;		_I2C1_MasterWrite
 12841 ;;		_I2C1_Open
 12842 ;;		_I2C1_SetAddressNackCallback
 12843 ;;		_I2C1_SetBuffer
 12844 ;;		_I2C1_SetDataCompleteCallback
 12845 ;; This function is called by:
 12846 ;;		_readPressureSensor
 12847 ;; This function uses a non-reentrant model
 12848 ;;
 12849                           
 12850                           
 12851                           ;psect for function _I2C1_Read1ByteRegister
 12852  10F8                     _I2C1_Read1ByteRegister:	
 12853                           
 12854                           ;incstack = 0
 12855                           ; Regs used in _I2C1_Read1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12856                           ;I2C1_Read1ByteRegister@address stored from wreg
 12857  10F8  0020               	movlb	0	; select bank0
 12858  10F9  00AA               	movwf	I2C1_Read1ByteRegister@address
 12859                           
 12860                           ;mcc_generated_files/examples/i2c1_master_example.c: 63: uint8_t I2C1_Read1ByteRegister(
      +                          i2c1_address_t address, uint8_t reg);mcc_generated_files/examples/i2c1_master_example.c:
      +                           64: {;mcc_generated_files/examples/i2c1_master_example.c: 65:     uint8_t returnValue =
      +                           0x00;
 12861  10FA  01AB               	clrf	I2C1_Read1ByteRegister@returnValue
 12862  10FB                     l6866:	
 12863                           ;mcc_generated_files/examples/i2c1_master_example.c: 67:     while(!I2C1_Open(address));
 12864                           
 12865  10FB  0020               	movlb	0	; select bank0
 12866  10FC  082A               	movf	I2C1_Read1ByteRegister@address,w
 12867  10FD  3187  27C9  3190   	fcall	_I2C1_Open
 12868  1100  3A00               	xorlw	0
 12869  1101  1903               	skipnz
 12870  1102  28FB               	goto	l6866
 12871                           
 12872                           ;mcc_generated_files/examples/i2c1_master_example.c: 68:     I2C1_SetDataCompleteCallbac
      +                          k(rd1RegCompleteHandler,&returnValue);
 12873  1103  3024               	movlw	low _rd1RegCompleteHandler
 12874  1104  00F6               	movwf	I2C1_SetDataCompleteCallback@cb
 12875  1105  301E               	movlw	high _rd1RegCompleteHandler
 12876  1106  00F7               	movwf	I2C1_SetDataCompleteCallback@cb+1
 12877  1107  302B               	movlw	(low (I2C1_Read1ByteRegister@returnValue| 0))& (0+255)
 12878  1108  0020               	movlb	0	; select bank0
 12879  1109  00A9               	movwf	??_I2C1_Read1ByteRegister
 12880  110A  0829               	movf	??_I2C1_Read1ByteRegister,w
 12881  110B  00F8               	movwf	I2C1_SetDataCompleteCallback@ptr
 12882  110C  319D  25EE  3190   	fcall	_I2C1_SetDataCompleteCallback
 12883                           
 12884                           ;mcc_generated_files/examples/i2c1_master_example.c: 69:     I2C1_SetBuffer(&reg,1);
 12885  110F  3001               	movlw	1
 12886  1110  00F1               	movwf	I2C1_SetBuffer@bufferSize
 12887  1111  3000               	movlw	0
 12888  1112  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 12889  1113  3028               	movlw	(low (I2C1_Read1ByteRegister@reg| 0))& (0+255)
 12890  1114  319E  2606  3190   	fcall	_I2C1_SetBuffer
 12891                           
 12892                           ;mcc_generated_files/examples/i2c1_master_example.c: 70:     I2C1_SetAddressNackCallback
      +                          (((void*)0),((void*)0));
 12893  1117  3000               	movlw	0
 12894  1118  00F6               	movwf	I2C1_SetAddressNackCallback@cb
 12895  1119  00F7               	movwf	I2C1_SetAddressNackCallback@cb+1
 12896  111A  01F8               	clrf	I2C1_SetAddressNackCallback@ptr
 12897  111B  319D  25FA  3190   	fcall	_I2C1_SetAddressNackCallback
 12898                           
 12899                           ;mcc_generated_files/examples/i2c1_master_example.c: 71:     I2C1_MasterWrite();
 12900  111E  319D  2532  3190   	fcall	_I2C1_MasterWrite
 12901  1121                     l6876:	
 12902                           ;mcc_generated_files/examples/i2c1_master_example.c: 72:     while(I2C1_BUSY == I2C1_Clo
      +                          se());
 12903                           
 12904  1121  3190  2000  3190   	fcall	_I2C1_Close
 12905  1124  3A01               	xorlw	1
 12906  1125  1903               	skipnz
 12907  1126  2921               	goto	l6876
 12908                           
 12909                           ;mcc_generated_files/examples/i2c1_master_example.c: 74:     return returnValue;
 12910  1127  0020               	movlb	0	; select bank0
 12911  1128  082B               	movf	I2C1_Read1ByteRegister@returnValue,w
 12912  1129  0008               	return
 12913  112A                     __end_of_I2C1_Read1ByteRegister:	
 12914                           
 12915                           	psect	text35
 12916  1EE1                     __ptext35:	
 12917 ;; *************** function _initializePressureSensor *****************
 12918 ;; Defined at:
 12919 ;;		line 170 in file "main.c"
 12920 ;; Parameters:    Size  Location     Type
 12921 ;;		None
 12922 ;; Auto vars:     Size  Location     Type
 12923 ;;		None
 12924 ;; Return value:  Size  Location     Type
 12925 ;;                  1    wreg      void 
 12926 ;; Registers used:
 12927 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12928 ;; Tracked objects:
 12929 ;;		On entry : 0/0
 12930 ;;		On exit  : 0/0
 12931 ;;		Unchanged: 0/0
 12932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12935 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12936 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12937 ;;Total ram usage:        2 bytes
 12938 ;; Hardware stack levels used:    1
 12939 ;; Hardware stack levels required when called:   13
 12940 ;; This function calls:
 12941 ;;		_I2C1_Write1ByteRegister
 12942 ;; This function is called by:
 12943 ;;		_main
 12944 ;; This function uses a non-reentrant model
 12945 ;;
 12946                           
 12947                           
 12948                           ;psect for function _initializePressureSensor
 12949  1EE1                     _initializePressureSensor:	
 12950                           
 12951                           ;main.c: 171:     I2C1_Write1ByteRegister(0x5D, 0x11, 0x14);
 12952                           
 12953                           ;incstack = 0
 12954                           ; Regs used in _initializePressureSensor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12955  1EE1  3011               	movlw	17
 12956  1EE2  0020               	movlb	0	; select bank0
 12957  1EE3  00AC               	movwf	??_initializePressureSensor
 12958  1EE4  082C               	movf	??_initializePressureSensor,w
 12959  1EE5  00A8               	movwf	I2C1_Write1ByteRegister@reg
 12960  1EE6  3014               	movlw	20
 12961  1EE7  00AD               	movwf	??_initializePressureSensor+1
 12962  1EE8  082D               	movf	??_initializePressureSensor+1,w
 12963  1EE9  00A9               	movwf	I2C1_Write1ByteRegister@data
 12964  1EEA  305D               	movlw	93
 12965  1EEB  3190  20C9  319E   	fcall	_I2C1_Write1ByteRegister
 12966                           
 12967                           ;main.c: 173:     I2C1_Write1ByteRegister(0x5D, 0x10, 0x52);
 12968  1EEE  3010               	movlw	16
 12969  1EEF  0020               	movlb	0	; select bank0
 12970  1EF0  00AC               	movwf	??_initializePressureSensor
 12971  1EF1  082C               	movf	??_initializePressureSensor,w
 12972  1EF2  00A8               	movwf	I2C1_Write1ByteRegister@reg
 12973  1EF3  3052               	movlw	82
 12974  1EF4  00AD               	movwf	??_initializePressureSensor+1
 12975  1EF5  082D               	movf	??_initializePressureSensor+1,w
 12976  1EF6  00A9               	movwf	I2C1_Write1ByteRegister@data
 12977  1EF7  305D               	movlw	93
 12978  1EF8  3190  20C9         	fcall	_I2C1_Write1ByteRegister
 12979  1EFA  0008               	return
 12980  1EFB                     __end_of_initializePressureSensor:	
 12981                           
 12982                           	psect	text36
 12983  10C9                     __ptext36:	
 12984 ;; *************** function _I2C1_Write1ByteRegister *****************
 12985 ;; Defined at:
 12986 ;;		line 91 in file "mcc_generated_files/examples/i2c1_master_example.c"
 12987 ;; Parameters:    Size  Location     Type
 12988 ;;  address         1    wreg     unsigned char 
 12989 ;;  reg             1    8[BANK0 ] unsigned char 
 12990 ;;  data            1    9[BANK0 ] unsigned char 
 12991 ;; Auto vars:     Size  Location     Type
 12992 ;;  address         1   11[BANK0 ] unsigned char 
 12993 ;; Return value:  Size  Location     Type
 12994 ;;                  1    wreg      void 
 12995 ;; Registers used:
 12996 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12997 ;; Tracked objects:
 12998 ;;		On entry : 0/0
 12999 ;;		On exit  : 0/0
 13000 ;;		Unchanged: 0/0
 13001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13002 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13003 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13004 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13005 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13006 ;;Total ram usage:        4 bytes
 13007 ;; Hardware stack levels used:    1
 13008 ;; Hardware stack levels required when called:   12
 13009 ;; This function calls:
 13010 ;;		_I2C1_Close
 13011 ;;		_I2C1_MasterWrite
 13012 ;;		_I2C1_Open
 13013 ;;		_I2C1_SetAddressNackCallback
 13014 ;;		_I2C1_SetBuffer
 13015 ;;		_I2C1_SetDataCompleteCallback
 13016 ;; This function is called by:
 13017 ;;		_initializePressureSensor
 13018 ;; This function uses a non-reentrant model
 13019 ;;
 13020                           
 13021                           
 13022                           ;psect for function _I2C1_Write1ByteRegister
 13023  10C9                     _I2C1_Write1ByteRegister:	
 13024                           
 13025                           ;incstack = 0
 13026                           ; Regs used in _I2C1_Write1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13027                           ;I2C1_Write1ByteRegister@address stored from wreg
 13028  10C9  0020               	movlb	0	; select bank0
 13029  10CA  00AB               	movwf	I2C1_Write1ByteRegister@address
 13030  10CB                     l6884:	
 13031                           ;mcc_generated_files/examples/i2c1_master_example.c: 91: void I2C1_Write1ByteRegister(i2
      +                          c1_address_t address, uint8_t reg, uint8_t data);mcc_generated_files/examples/i2c1_maste
      +                          r_example.c: 92: {;mcc_generated_files/examples/i2c1_master_example.c: 93:     while(!I2
      +                          C1_Open(address));
 13032                           
 13033  10CB  0020               	movlb	0	; select bank0
 13034  10CC  082B               	movf	I2C1_Write1ByteRegister@address,w
 13035  10CD  3187  27C9  3190   	fcall	_I2C1_Open
 13036  10D0  3A00               	xorlw	0
 13037  10D1  1903               	skipnz
 13038  10D2  28CB               	goto	l6884
 13039                           
 13040                           ;mcc_generated_files/examples/i2c1_master_example.c: 94:     I2C1_SetDataCompleteCallbac
      +                          k(wr1RegCompleteHandler,&data);
 13041  10D3  3044               	movlw	low _wr1RegCompleteHandler
 13042  10D4  00F6               	movwf	I2C1_SetDataCompleteCallback@cb
 13043  10D5  301E               	movlw	high _wr1RegCompleteHandler
 13044  10D6  00F7               	movwf	I2C1_SetDataCompleteCallback@cb+1
 13045  10D7  3029               	movlw	(low (I2C1_Write1ByteRegister@data| 0))& (0+255)
 13046  10D8  0020               	movlb	0	; select bank0
 13047  10D9  00AA               	movwf	??_I2C1_Write1ByteRegister
 13048  10DA  082A               	movf	??_I2C1_Write1ByteRegister,w
 13049  10DB  00F8               	movwf	I2C1_SetDataCompleteCallback@ptr
 13050  10DC  319D  25EE  3190   	fcall	_I2C1_SetDataCompleteCallback
 13051                           
 13052                           ;mcc_generated_files/examples/i2c1_master_example.c: 95:     I2C1_SetBuffer(&reg,1);
 13053  10DF  3001               	movlw	1
 13054  10E0  00F1               	movwf	I2C1_SetBuffer@bufferSize
 13055  10E1  3000               	movlw	0
 13056  10E2  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 13057  10E3  3028               	movlw	(low (I2C1_Write1ByteRegister@reg| 0))& (0+255)
 13058  10E4  319E  2606  3190   	fcall	_I2C1_SetBuffer
 13059                           
 13060                           ;mcc_generated_files/examples/i2c1_master_example.c: 96:     I2C1_SetAddressNackCallback
      +                          (((void*)0),((void*)0));
 13061  10E7  3000               	movlw	0
 13062  10E8  00F6               	movwf	I2C1_SetAddressNackCallback@cb
 13063  10E9  00F7               	movwf	I2C1_SetAddressNackCallback@cb+1
 13064  10EA  01F8               	clrf	I2C1_SetAddressNackCallback@ptr
 13065  10EB  319D  25FA  3190   	fcall	_I2C1_SetAddressNackCallback
 13066                           
 13067                           ;mcc_generated_files/examples/i2c1_master_example.c: 97:     I2C1_MasterWrite();
 13068  10EE  319D  2532  3190   	fcall	_I2C1_MasterWrite
 13069  10F1                     l6894:	
 13070                           ;mcc_generated_files/examples/i2c1_master_example.c: 98:     while(I2C1_BUSY == I2C1_Clo
      +                          se());
 13071                           
 13072  10F1  3190  2000  3190   	fcall	_I2C1_Close
 13073  10F4  3A01               	xorlw	1
 13074  10F5  1D03               	btfss	3,2
 13075  10F6  0008               	return
 13076  10F7  28F1               	goto	l6894
 13077  10F8                     __end_of_I2C1_Write1ByteRegister:	
 13078                           
 13079                           	psect	text37
 13080  1DFA                     __ptext37:	
 13081 ;; *************** function _I2C1_SetAddressNackCallback *****************
 13082 ;; Defined at:
 13083 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 13084 ;; Parameters:    Size  Location     Type
 13085 ;;  cb              2    6[COMMON] PTR FTN(PTR void ,)enum 
 13086 ;;		 -> Absolute function(1), 
 13087 ;;  ptr             1    8[COMMON] PTR void 
 13088 ;;		 -> NULL(0), 
 13089 ;; Auto vars:     Size  Location     Type
 13090 ;;		None
 13091 ;; Return value:  Size  Location     Type
 13092 ;;                  1    wreg      void 
 13093 ;; Registers used:
 13094 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13095 ;; Tracked objects:
 13096 ;;		On entry : 0/0
 13097 ;;		On exit  : 0/0
 13098 ;;		Unchanged: 0/0
 13099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13100 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13102 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13103 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13104 ;;Total ram usage:        4 bytes
 13105 ;; Hardware stack levels used:    1
 13106 ;; Hardware stack levels required when called:    5
 13107 ;; This function calls:
 13108 ;;		_I2C1_SetCallback
 13109 ;; This function is called by:
 13110 ;;		_I2C1_Read1ByteRegister
 13111 ;;		_I2C1_Write1ByteRegister
 13112 ;;		_I2C1_Read2ByteRegister
 13113 ;;		_I2C1_Write2ByteRegister
 13114 ;;		_I2C1_WriteNBytes
 13115 ;;		_I2C1_ReadDataBlock
 13116 ;; This function uses a non-reentrant model
 13117 ;;
 13118                           
 13119                           
 13120                           ;psect for function _I2C1_SetAddressNackCallback
 13121  1DFA                     _I2C1_SetAddressNackCallback:	
 13122                           
 13123                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 13124                           
 13125                           ;incstack = 0
 13126                           ; Regs used in _I2C1_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 13127  1DFA  0877               	movf	I2C1_SetAddressNackCallback@cb+1,w
 13128  1DFB  00F2               	movwf	I2C1_SetCallback@cb+1
 13129  1DFC  0876               	movf	I2C1_SetAddressNackCallback@cb,w
 13130  1DFD  00F1               	movwf	I2C1_SetCallback@cb
 13131  1DFE  0878               	movf	I2C1_SetAddressNackCallback@ptr,w
 13132  1DFF  00F9               	movwf	??_I2C1_SetAddressNackCallback
 13133  1E00  0879               	movf	??_I2C1_SetAddressNackCallback,w
 13134  1E01  00F3               	movwf	I2C1_SetCallback@ptr
 13135  1E02  3002               	movlw	2
 13136  1E03  3190  2019         	fcall	_I2C1_SetCallback
 13137  1E05  0008               	return
 13138  1E06                     __end_of_I2C1_SetAddressNackCallback:	
 13139                           
 13140                           	psect	text38
 13141  07C9                     __ptext38:	
 13142 ;; *************** function _I2C1_Open *****************
 13143 ;; Defined at:
 13144 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 13145 ;; Parameters:    Size  Location     Type
 13146 ;;  address         1    wreg     unsigned char 
 13147 ;; Auto vars:     Size  Location     Type
 13148 ;;  address         1    2[COMMON] unsigned char 
 13149 ;;  returnValue     1    3[COMMON] enum E353
 13150 ;; Return value:  Size  Location     Type
 13151 ;;                  1    wreg      enum E353
 13152 ;; Registers used:
 13153 ;;		wreg, status,2, status,0, pclath, cstack
 13154 ;; Tracked objects:
 13155 ;;		On entry : 0/0
 13156 ;;		On exit  : 0/0
 13157 ;;		Unchanged: 0/0
 13158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13160 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13161 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13162 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13163 ;;Total ram usage:        3 bytes
 13164 ;; Hardware stack levels used:    1
 13165 ;; Hardware stack levels required when called:    5
 13166 ;; This function calls:
 13167 ;;		_I2C1_MasterClearIrq
 13168 ;;		_I2C1_MasterOpen
 13169 ;; This function is called by:
 13170 ;;		_I2C1_Read1ByteRegister
 13171 ;;		_I2C1_Write1ByteRegister
 13172 ;;		_I2C1_Read2ByteRegister
 13173 ;;		_I2C1_Write2ByteRegister
 13174 ;;		_I2C1_WriteNBytes
 13175 ;;		_I2C1_ReadNBytes
 13176 ;;		_I2C1_ReadDataBlock
 13177 ;; This function uses a non-reentrant model
 13178 ;;
 13179                           
 13180                           
 13181                           ;psect for function _I2C1_Open
 13182  07C9                     _I2C1_Open:	
 13183                           
 13184                           ;incstack = 0
 13185                           ; Regs used in _I2C1_Open: [wreg+status,2+status,0+pclath+cstack]
 13186                           ;I2C1_Open@address stored from wreg
 13187  07C9  00F2               	movwf	I2C1_Open@address
 13188                           
 13189                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 13190  07CA  01F3               	clrf	I2C1_Open@returnValue
 13191  07CB  0AF3               	incf	I2C1_Open@returnValue,f
 13192                           
 13193                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 13194  07CC  0023               	movlb	3	; select bank3
 13195  07CD  193C               	btfsc	(_I2C1_Status^(0+384)+28),2
 13196  07CE  2FFE               	goto	l541
 13197                           
 13198                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 13199  07CF  0872               	movf	I2C1_Open@address,w
 13200  07D0  00F1               	movwf	??_I2C1_Open
 13201  07D1  0871               	movf	??_I2C1_Open,w
 13202  07D2  00B6               	movwf	(_I2C1_Status^(0+384)+22)
 13203                           
 13204                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 13205  07D3  10BC               	bcf	(_I2C1_Status^(0+384)+28),1
 13206                           
 13207                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 13208  07D4  153C               	bsf	(_I2C1_Status^(0+384)+28),2
 13209                           
 13210                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 13211  07D5  103C               	bcf	(_I2C1_Status^(0+384)+28),0
 13212                           
 13213                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 13214  07D6  300E               	movlw	14
 13215  07D7  00F1               	movwf	??_I2C1_Open
 13216  07D8  0871               	movf	??_I2C1_Open,w
 13217  07D9  00BA               	movwf	(_I2C1_Status^(0+384)+26)
 13218                           
 13219                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 13220  07DA  30F4               	movlw	244
 13221  07DB  00B4               	movwf	(_I2C1_Status^(0+384)+20)
 13222  07DC  3001               	movlw	1
 13223  07DD  00B5               	movwf	(_I2C1_Status^(0+384)+21)
 13224                           
 13225                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 13226  07DE  15BC               	bsf	(_I2C1_Status^(0+384)+28),3
 13227                           
 13228                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 13229  07DF  30DF               	movlw	low _I2C1_CallbackReturnStop
 13230  07E0  00A0               	movwf	_I2C1_Status^(0+384)
 13231  07E1  301C               	movlw	high _I2C1_CallbackReturnStop
 13232  07E2  00A1               	movwf	(_I2C1_Status^(0+384)+1)
 13233                           
 13234                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 13235  07E3  01AC               	clrf	(low ((_I2C1_Status| (0+256)+12)))^(0+128)
 13236                           
 13237                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 13238  07E4  30DF               	movlw	low _I2C1_CallbackReturnStop
 13239  07E5  00A2               	movwf	(low ((_I2C1_Status| (0+256)+2)))^(0+128)
 13240  07E6  301C               	movlw	high _I2C1_CallbackReturnStop
 13241  07E7  00A3               	movwf	((low ((_I2C1_Status| (0+256)+2)))^(0+128)+1)
 13242                           
 13243                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 13244  07E8  01AD               	clrf	(low ((_I2C1_Status| (0+256)+13)))^(0+128)
 13245                           
 13246                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 13247  07E9  30DF               	movlw	low _I2C1_CallbackReturnStop
 13248  07EA  00A4               	movwf	(low ((_I2C1_Status| (0+256)+4)))^(0+128)
 13249  07EB  301C               	movlw	high _I2C1_CallbackReturnStop
 13250  07EC  00A5               	movwf	((low ((_I2C1_Status| (0+256)+4)))^(0+128)+1)
 13251                           
 13252                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 13253  07ED  01AE               	clrf	(low ((_I2C1_Status| (0+256)+14)))^(0+128)
 13254                           
 13255                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 13256  07EE  30DF               	movlw	low _I2C1_CallbackReturnStop
 13257  07EF  00A6               	movwf	(low ((_I2C1_Status| (0+256)+6)))^(0+128)
 13258  07F0  301C               	movlw	high _I2C1_CallbackReturnStop
 13259  07F1  00A7               	movwf	((low ((_I2C1_Status| (0+256)+6)))^(0+128)+1)
 13260                           
 13261                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 13262  07F2  01AF               	clrf	(low ((_I2C1_Status| (0+256)+15)))^(0+128)
 13263                           
 13264                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 13265  07F3  3002               	movlw	low _I2C1_CallbackReturnReset
 13266  07F4  00A8               	movwf	(low ((_I2C1_Status| (0+256)+8)))^(0+128)
 13267  07F5  3000               	movlw	high _I2C1_CallbackReturnReset
 13268  07F6  00A9               	movwf	((low ((_I2C1_Status| (0+256)+8)))^(0+128)+1)
 13269                           
 13270                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 13271  07F7  01B0               	clrf	(low ((_I2C1_Status| (0+256)+16)))^(0+128)
 13272                           
 13273                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 13274  07F8  319C  24E4  3187   	fcall	_I2C1_MasterClearIrq
 13275                           
 13276                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 13277  07FB  319D  25D7         	fcall	_I2C1_MasterOpen
 13278                           
 13279                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 13280  07FD  01F3               	clrf	I2C1_Open@returnValue
 13281  07FE                     l541:	
 13282                           ;mcc_generated_files/i2c1_master.c: 205:     }
 13283                           
 13284                           
 13285                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 13286  07FE  0873               	movf	I2C1_Open@returnValue,w
 13287  07FF  0008               	return
 13288  0800                     __end_of_I2C1_Open:	
 13289                           
 13290                           	psect	text39
 13291  1DD7                     __ptext39:	
 13292 ;; *************** function _I2C1_MasterOpen *****************
 13293 ;; Defined at:
 13294 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 13295 ;; Parameters:    Size  Location     Type
 13296 ;;		None
 13297 ;; Auto vars:     Size  Location     Type
 13298 ;;		None
 13299 ;; Return value:  Size  Location     Type
 13300 ;;                  1    wreg      _Bool 
 13301 ;; Registers used:
 13302 ;;		wreg, status,2
 13303 ;; Tracked objects:
 13304 ;;		On entry : 0/0
 13305 ;;		On exit  : 0/0
 13306 ;;		Unchanged: 0/0
 13307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13312 ;;Total ram usage:        0 bytes
 13313 ;; Hardware stack levels used:    1
 13314 ;; Hardware stack levels required when called:    4
 13315 ;; This function calls:
 13316 ;;		Nothing
 13317 ;; This function is called by:
 13318 ;;		_I2C1_Open
 13319 ;; This function uses a non-reentrant model
 13320 ;;
 13321                           
 13322                           
 13323                           ;psect for function _I2C1_MasterOpen
 13324  1DD7                     _I2C1_MasterOpen:	
 13325                           
 13326                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 13327                           
 13328                           ;incstack = 0
 13329                           ; Regs used in _I2C1_MasterOpen: [wreg+status,2]
 13330  1DD7  0024               	movlb	4	; select bank4
 13331  1DD8  1A95               	btfsc	21,5	;volatile
 13332  1DD9  0008               	return
 13333                           
 13334                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x00;
 13335  1DDA  0194               	clrf	20	;volatile
 13336                           
 13337                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 13338  1DDB  3008               	movlw	8
 13339  1DDC  0095               	movwf	21	;volatile
 13340                           
 13341                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 13342  1DDD  0196               	clrf	22	;volatile
 13343                           
 13344                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x27;
 13345  1DDE  3027               	movlw	39
 13346  1DDF  0092               	movwf	18	;volatile
 13347                           
 13348                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 13349  1DE0  1695               	bsf	21,5	;volatile
 13350  1DE1  0008               	return
 13351  1DE2                     __end_of_I2C1_MasterOpen:	
 13352                           
 13353                           	psect	text40
 13354  1D32                     __ptext40:	
 13355 ;; *************** function _I2C1_MasterWrite *****************
 13356 ;; Defined at:
 13357 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 13358 ;; Parameters:    Size  Location     Type
 13359 ;;		None
 13360 ;; Auto vars:     Size  Location     Type
 13361 ;;		None
 13362 ;; Return value:  Size  Location     Type
 13363 ;;                  1    wreg      enum E353
 13364 ;; Registers used:
 13365 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13366 ;; Tracked objects:
 13367 ;;		On entry : 0/0
 13368 ;;		On exit  : 0/0
 13369 ;;		Unchanged: 0/0
 13370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13375 ;;Total ram usage:        0 bytes
 13376 ;; Hardware stack levels used:    1
 13377 ;; Hardware stack levels required when called:   11
 13378 ;; This function calls:
 13379 ;;		_I2C1_MasterOperation
 13380 ;; This function is called by:
 13381 ;;		_I2C1_Read1ByteRegister
 13382 ;;		_I2C1_Write1ByteRegister
 13383 ;;		_I2C1_Read2ByteRegister
 13384 ;;		_I2C1_Write2ByteRegister
 13385 ;;		_I2C1_WriteNBytes
 13386 ;;		_I2C1_ReadDataBlock
 13387 ;; This function uses a non-reentrant model
 13388 ;;
 13389                           
 13390                           
 13391                           ;psect for function _I2C1_MasterWrite
 13392  1D32                     _I2C1_MasterWrite:	
 13393                           
 13394                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 13395                           
 13396                           ;incstack = 0
 13397                           ; Regs used in _I2C1_MasterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13398  1D32  3000               	movlw	0
 13399  1D33  319F  2719         	fcall	_I2C1_MasterOperation
 13400  1D35  0008               	return
 13401  1D36                     __end_of_I2C1_MasterWrite:	
 13402                           
 13403                           	psect	text41
 13404  1F19                     __ptext41:	
 13405 ;; *************** function _I2C1_MasterOperation *****************
 13406 ;; Defined at:
 13407 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 13408 ;; Parameters:    Size  Location     Type
 13409 ;;  read            1    wreg     _Bool 
 13410 ;; Auto vars:     Size  Location     Type
 13411 ;;  read            1    6[BANK0 ] _Bool 
 13412 ;;  returnValue     1    7[BANK0 ] enum E353
 13413 ;; Return value:  Size  Location     Type
 13414 ;;                  1    wreg      enum E353
 13415 ;; Registers used:
 13416 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13417 ;; Tracked objects:
 13418 ;;		On entry : 0/0
 13419 ;;		On exit  : 0/0
 13420 ;;		Unchanged: 0/0
 13421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13423 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13424 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13425 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13426 ;;Total ram usage:        3 bytes
 13427 ;; Hardware stack levels used:    1
 13428 ;; Hardware stack levels required when called:   10
 13429 ;; This function calls:
 13430 ;;		_I2C1_MasterStart
 13431 ;;		_I2C1_Poller
 13432 ;; This function is called by:
 13433 ;;		_I2C1_MasterWrite
 13434 ;;		_I2C1_MasterRead
 13435 ;; This function uses a non-reentrant model
 13436 ;;
 13437                           
 13438                           
 13439                           ;psect for function _I2C1_MasterOperation
 13440  1F19                     _I2C1_MasterOperation:	
 13441                           
 13442                           ;incstack = 0
 13443                           ; Regs used in _I2C1_MasterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13444                           ;I2C1_MasterOperation@read stored from wreg
 13445  1F19  0020               	movlb	0	; select bank0
 13446  1F1A  00A6               	movwf	I2C1_MasterOperation@read
 13447                           
 13448                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 13449  1F1B  01A7               	clrf	I2C1_MasterOperation@returnValue
 13450  1F1C  0AA7               	incf	I2C1_MasterOperation@returnValue,f
 13451                           
 13452                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 13453  1F1D  0023               	movlb	3	; select bank3
 13454  1F1E  18BC               	btfsc	(_I2C1_Status^(0+384)+28),1
 13455  1F1F  2F34               	goto	l5438
 13456                           
 13457                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 13458  1F20  14BC               	bsf	(_I2C1_Status^(0+384)+28),1
 13459                           
 13460                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 13461  1F21  0020               	movlb	0	; select bank0
 13462  1F22  01A7               	clrf	I2C1_MasterOperation@returnValue
 13463                           
 13464                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 13465  1F23  0826               	movf	I2C1_MasterOperation@read,w
 13466  1F24  1903               	btfsc	3,2
 13467  1F25  2F2A               	goto	l5432
 13468                           
 13469                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 13470  1F26  0023               	movlb	3	; select bank3
 13471  1F27  01BA               	clrf	(_I2C1_Status^(0+384)+26)
 13472  1F28  0ABA               	incf	(_I2C1_Status^(0+384)+26),f
 13473                           
 13474                           ;mcc_generated_files/i2c1_master.c: 235:         }
 13475  1F29  2F2F               	goto	l5434
 13476  1F2A                     l5432:	
 13477                           
 13478                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 13479  1F2A  3002               	movlw	2
 13480  1F2B  00FB               	movwf	??_I2C1_MasterOperation
 13481  1F2C  087B               	movf	??_I2C1_MasterOperation,w
 13482  1F2D  0023               	movlb	3	; select bank3
 13483  1F2E  00BA               	movwf	(_I2C1_Status^(0+384)+26)
 13484  1F2F                     l5434:	
 13485                           
 13486                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 13487  1F2F  319C  24ED  319F   	fcall	_I2C1_MasterStart
 13488                           
 13489                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 13490  1F32  319D  25B9         	fcall	_I2C1_Poller
 13491  1F34                     l5438:	
 13492                           
 13493                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 13494  1F34  0020               	movlb	0	; select bank0
 13495  1F35  0827               	movf	I2C1_MasterOperation@returnValue,w
 13496  1F36  0008               	return
 13497  1F37                     __end_of_I2C1_MasterOperation:	
 13498                           
 13499                           	psect	text42
 13500  1DB9                     __ptext42:	
 13501 ;; *************** function _I2C1_Poller *****************
 13502 ;; Defined at:
 13503 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 13504 ;; Parameters:    Size  Location     Type
 13505 ;;		None
 13506 ;; Auto vars:     Size  Location     Type
 13507 ;;		None
 13508 ;; Return value:  Size  Location     Type
 13509 ;;                  1    wreg      void 
 13510 ;; Registers used:
 13511 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13512 ;; Tracked objects:
 13513 ;;		On entry : 0/0
 13514 ;;		On exit  : 0/0
 13515 ;;		Unchanged: 0/0
 13516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13521 ;;Total ram usage:        0 bytes
 13522 ;; Hardware stack levels used:    1
 13523 ;; Hardware stack levels required when called:    9
 13524 ;; This function calls:
 13525 ;;		_I2C1_MasterFsm
 13526 ;;		_I2C1_MasterWaitForEvent
 13527 ;; This function is called by:
 13528 ;;		_I2C1_MasterOperation
 13529 ;; This function uses a non-reentrant model
 13530 ;;
 13531                           
 13532                           
 13533                           ;psect for function _I2C1_Poller
 13534  1DB9                     _I2C1_Poller:	
 13535  1DB9                     l5086:	
 13536                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 13537                           
 13538                           ;incstack = 0
 13539                           ; Regs used in _I2C1_Poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13540                           
 13541                           
 13542                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 13543  1DB9  0023               	movlb	3	; select bank3
 13544  1DBA  1CBC               	btfss	(_I2C1_Status^(0+384)+28),1
 13545  1DBB  0008               	return
 13546                           
 13547                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 13548  1DBC  319D  252E  319D   	fcall	_I2C1_MasterWaitForEvent
 13549                           
 13550                           ;mcc_generated_files/i2c1_master.c: 317:         I2C1_MasterFsm();
 13551  1DBF  3190  2041  319D   	fcall	_I2C1_MasterFsm
 13552  1DC2  2DB9               	goto	l5086
 13553  1DC3                     __end_of_I2C1_Poller:	
 13554                           
 13555                           	psect	text43
 13556  1D2E                     __ptext43:	
 13557 ;; *************** function _I2C1_MasterWaitForEvent *****************
 13558 ;; Defined at:
 13559 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 13560 ;; Parameters:    Size  Location     Type
 13561 ;;		None
 13562 ;; Auto vars:     Size  Location     Type
 13563 ;;		None
 13564 ;; Return value:  Size  Location     Type
 13565 ;;                  1    wreg      void 
 13566 ;; Registers used:
 13567 ;;		None
 13568 ;; Tracked objects:
 13569 ;;		On entry : 0/0
 13570 ;;		On exit  : 0/0
 13571 ;;		Unchanged: 0/0
 13572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13577 ;;Total ram usage:        0 bytes
 13578 ;; Hardware stack levels used:    1
 13579 ;; Hardware stack levels required when called:    4
 13580 ;; This function calls:
 13581 ;;		Nothing
 13582 ;; This function is called by:
 13583 ;;		_I2C1_Poller
 13584 ;; This function uses a non-reentrant model
 13585 ;;
 13586                           
 13587                           
 13588                           ;psect for function _I2C1_MasterWaitForEvent
 13589  1D2E                     _I2C1_MasterWaitForEvent:	
 13590  1D2E                     l764:	
 13591                           ;incstack = 0
 13592                           ; Regs used in _I2C1_MasterWaitForEvent: []
 13593                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 13594                           
 13595                           
 13596                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR1bits.SSP1IF)
 13597  1D2E  0020               	movlb	0	; select bank0
 13598  1D2F  1991               	btfsc	17,3	;volatile
 13599  1D30  0008               	return
 13600  1D31  2D2E               	goto	l764
 13601  1D32                     __end_of_I2C1_MasterWaitForEvent:	
 13602                           
 13603                           	psect	text44
 13604  1041                     __ptext44:	
 13605 ;; *************** function _I2C1_MasterFsm *****************
 13606 ;; Defined at:
 13607 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 13608 ;; Parameters:    Size  Location     Type
 13609 ;;		None
 13610 ;; Auto vars:     Size  Location     Type
 13611 ;;		None
 13612 ;; Return value:  Size  Location     Type
 13613 ;;                  1    wreg      void 
 13614 ;; Registers used:
 13615 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13616 ;; Tracked objects:
 13617 ;;		On entry : 0/0
 13618 ;;		On exit  : 0/0
 13619 ;;		Unchanged: 0/0
 13620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13623 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13624 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13625 ;;Total ram usage:        3 bytes
 13626 ;; Hardware stack levels used:    1
 13627 ;; Hardware stack levels required when called:    8
 13628 ;; This function calls:
 13629 ;;		_I2C1_DO_ADDRESS_NACK
 13630 ;;		_I2C1_DO_IDLE
 13631 ;;		_I2C1_DO_RCEN
 13632 ;;		_I2C1_DO_RESET
 13633 ;;		_I2C1_DO_RX
 13634 ;;		_I2C1_DO_RX_ACK
 13635 ;;		_I2C1_DO_RX_NACK_RESTART
 13636 ;;		_I2C1_DO_RX_NACK_STOP
 13637 ;;		_I2C1_DO_SEND_ADR_READ
 13638 ;;		_I2C1_DO_SEND_ADR_WRITE
 13639 ;;		_I2C1_DO_SEND_RESTART
 13640 ;;		_I2C1_DO_SEND_RESTART_READ
 13641 ;;		_I2C1_DO_SEND_RESTART_WRITE
 13642 ;;		_I2C1_DO_SEND_STOP
 13643 ;;		_I2C1_DO_TX
 13644 ;;		_I2C1_DO_TX_EMPTY
 13645 ;;		_I2C1_MasterClearIrq
 13646 ;;		_I2C1_MasterIsNack
 13647 ;; This function is called by:
 13648 ;;		_I2C1_Poller
 13649 ;; This function uses a non-reentrant model
 13650 ;;
 13651                           
 13652                           
 13653                           ;psect for function _I2C1_MasterFsm
 13654  1041                     _I2C1_MasterFsm:	
 13655                           
 13656                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 13657                           
 13658                           ;incstack = 0
 13659                           ; Regs used in _I2C1_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13660  1041  319C  24E4  3190   	fcall	_I2C1_MasterClearIrq
 13661                           
 13662                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 13663  1044  0023               	movlb	3	; select bank3
 13664  1045  1C3C               	btfss	(_I2C1_Status^(0+384)+28),0
 13665  1046  2853               	goto	l4544
 13666  1047  319D  2567  3190   	fcall	_I2C1_MasterIsNack
 13667  104A  3A00               	xorlw	0
 13668  104B  1903               	skipnz
 13669  104C  2853               	goto	l4544
 13670                           
 13671                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 13672  104D  300F               	movlw	15
 13673  104E  0020               	movlb	0	; select bank0
 13674  104F  00A3               	movwf	??_I2C1_MasterFsm
 13675  1050  0823               	movf	??_I2C1_MasterFsm,w
 13676  1051  0023               	movlb	3	; select bank3
 13677  1052  00BA               	movwf	(_I2C1_Status^(0+384)+26)
 13678  1053                     l4544:	
 13679                           
 13680                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = fsmStateTable[I2C1_Stat
      +                          us.state]();
 13681  1053  0023               	movlb	3	; select bank3
 13682  1054  083A               	movf	(_I2C1_Status^(0+384)+26),w
 13683  1055  0020               	movlb	0	; select bank0
 13684  1056  00A3               	movwf	??_I2C1_MasterFsm
 13685  1057  01A4               	clrf	??_I2C1_MasterFsm+1
 13686  1058  35A3               	lslf	??_I2C1_MasterFsm,f
 13687  1059  0DA4               	rlf	??_I2C1_MasterFsm+1,f
 13688  105A  3000               	movlw	low (_fsmStateTable| (0+32768))
 13689  105B  0723               	addwf	??_I2C1_MasterFsm,w
 13690  105C  0084               	movwf	4
 13691  105D  30A0               	movlw	high (_fsmStateTable| (0+32768))
 13692  105E  3D24               	addwfc	??_I2C1_MasterFsm+1,w
 13693  105F  0085               	movwf	5
 13694  1060  3F01               	moviw [1]fsr0
 13695  1061  008A               	movwf	10
 13696  1062  3F00               	moviw [0]fsr0
 13697  1063  000A               	callw
 13698  1064  3190               	pagesel	$
 13699  1065  0020               	movlb	0	; select bank0
 13700  1066  00A5               	movwf	??_I2C1_MasterFsm+2
 13701  1067  0825               	movf	??_I2C1_MasterFsm+2,w
 13702  1068  0023               	movlb	3	; select bank3
 13703  1069  00BA               	movwf	(_I2C1_Status^(0+384)+26)
 13704  106A  0008               	return
 13705  106B                     __end_of_I2C1_MasterFsm:	
 13706                           
 13707                           	psect	text45
 13708  109A                     __ptext45:	
 13709 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 13710 ;; Defined at:
 13711 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 13712 ;; Parameters:    Size  Location     Type
 13713 ;;		None
 13714 ;; Auto vars:     Size  Location     Type
 13715 ;;		None
 13716 ;; Return value:  Size  Location     Type
 13717 ;;                  1    wreg      enum E7150
 13718 ;; Registers used:
 13719 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13720 ;; Tracked objects:
 13721 ;;		On entry : 0/0
 13722 ;;		On exit  : 0/0
 13723 ;;		Unchanged: 0/0
 13724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13727 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13728 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13729 ;;Total ram usage:        3 bytes
 13730 ;; Hardware stack levels used:    1
 13731 ;; Hardware stack levels required when called:    7
 13732 ;; This function calls:
 13733 ;;		Absolute function
 13734 ;;		_I2C1_CallbackReturnReset
 13735 ;;		_I2C1_CallbackReturnStop
 13736 ;;		_I2C1_DO_SEND_RESTART
 13737 ;;		_I2C1_DO_SEND_STOP
 13738 ;;		_rd1RegCompleteHandler
 13739 ;;		_rd2RegCompleteHandler
 13740 ;;		_rdBlkRegCompleteHandler
 13741 ;;		_wr1RegCompleteHandler
 13742 ;;		_wr2RegCompleteHandler
 13743 ;; This function is called by:
 13744 ;;		_I2C1_MasterFsm
 13745 ;; This function uses a non-reentrant model
 13746 ;;
 13747                           
 13748                           
 13749                           ;psect for function _I2C1_DO_ADDRESS_NACK
 13750  109A                     _I2C1_DO_ADDRESS_NACK:	
 13751                           
 13752                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 13753                           
 13754                           ;incstack = 0
 13755                           ; Regs used in _I2C1_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13756  109A  0023               	movlb	3	; select bank3
 13757  109B  103C               	bcf	(_I2C1_Status^(0+384)+28),0
 13758                           
 13759                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 13760  109C  3002               	movlw	2
 13761  109D  0020               	movlb	0	; select bank0
 13762  109E  00A0               	movwf	??_I2C1_DO_ADDRESS_NACK
 13763  109F  0820               	movf	??_I2C1_DO_ADDRESS_NACK,w
 13764  10A0  0023               	movlb	3	; select bank3
 13765  10A1  00BB               	movwf	(_I2C1_Status^(0+384)+27)
 13766                           
 13767                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 13768  10A2  28A9               	goto	l4298
 13769  10A3                     l4288:	
 13770                           
 13771                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 13772  10A3  319D  251A         	fcall	_I2C1_DO_SEND_RESTART
 13773  10A5  0008               	return
 13774  10A6                     l4292:	
 13775                           
 13776                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 13777  10A6  319D  251E         	fcall	_I2C1_DO_SEND_STOP
 13778  10A8  0008               	return
 13779  10A9                     l4298:	
 13780  10A9  082E               	movf	(low ((_I2C1_Status| (0+256)+14)))^(0+128),w
 13781  10AA  0020               	movlb	0	; select bank0
 13782  10AB  00A0               	movwf	??_I2C1_DO_ADDRESS_NACK
 13783  10AC  0820               	movf	??_I2C1_DO_ADDRESS_NACK,w
 13784  10AD  00FA               	movwf	I2C1_CallbackReturnReset@funPtr
 13785  10AE  3004               	movlw	4
 13786  10AF  3EA0               	addlw	(low (_I2C1_Status| (0+256)))& (0+255)
 13787  10B0  0086               	movwf	6
 13788  10B1  3001               	movlw	1	; select bank3/4
 13789  10B2  0087               	movwf	7
 13790  10B3  3F41               	moviw [1]fsr1
 13791  10B4  008A               	movwf	10
 13792  10B5  3F40               	moviw [0]fsr1
 13793  10B6  000A               	callw
 13794  10B7  3190               	pagesel	$
 13795  10B8  0020               	movlb	0	; select bank0
 13796  10B9  00A1               	movwf	??_I2C1_DO_ADDRESS_NACK+1
 13797  10BA  01A2               	clrf	??_I2C1_DO_ADDRESS_NACK+2
 13798                           
 13799                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13800                           ; Switch size 1, requested type "simple"
 13801                           ; Number of cases is 1, Range of values is 0 to 0
 13802                           ; switch strategies available:
 13803                           ; Name         Instructions Cycles
 13804                           ; simple_byte            4     3 (average)
 13805                           ; direct_byte            8     6 (fixed)
 13806                           ; jumptable            260     6 (fixed)
 13807                           ;	Chosen strategy is simple_byte
 13808  10BB  0822               	movf	??_I2C1_DO_ADDRESS_NACK+2,w
 13809  10BC  3A00               	xorlw	0	; case 0
 13810  10BD  1903               	skipnz
 13811  10BE  28C0               	goto	l7108
 13812  10BF  28A6               	goto	l4292
 13813  10C0                     l7108:	
 13814                           
 13815                           ; Switch size 1, requested type "simple"
 13816                           ; Number of cases is 2, Range of values is 2 to 3
 13817                           ; switch strategies available:
 13818                           ; Name         Instructions Cycles
 13819                           ; simple_byte            7     4 (average)
 13820                           ; direct_byte           13     9 (fixed)
 13821                           ; jumptable            263     9 (fixed)
 13822                           ;	Chosen strategy is simple_byte
 13823  10C0  0821               	movf	??_I2C1_DO_ADDRESS_NACK+1,w
 13824  10C1  3A02               	xorlw	2	; case 2
 13825  10C2  1903               	skipnz
 13826  10C3  28A3               	goto	l4288
 13827  10C4  3A01               	xorlw	1	; case 3
 13828  10C5  1903               	skipnz
 13829  10C6  28A3               	goto	l4288
 13830  10C7  28A6               	goto	l4292
 13831  10C8  0008               	return
 13832  10C9                     __end_of_I2C1_DO_ADDRESS_NACK:	
 13833                           
 13834                           	psect	text46
 13835  1D44                     __ptext46:	
 13836 ;; *************** function _I2C1_DO_RESET *****************
 13837 ;; Defined at:
 13838 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 13839 ;; Parameters:    Size  Location     Type
 13840 ;;		None
 13841 ;; Auto vars:     Size  Location     Type
 13842 ;;		None
 13843 ;; Return value:  Size  Location     Type
 13844 ;;                  1    wreg      enum E7150
 13845 ;; Registers used:
 13846 ;;		wreg, status,2
 13847 ;; Tracked objects:
 13848 ;;		On entry : 0/0
 13849 ;;		On exit  : 0/0
 13850 ;;		Unchanged: 0/0
 13851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13856 ;;Total ram usage:        0 bytes
 13857 ;; Hardware stack levels used:    1
 13858 ;; Hardware stack levels required when called:    4
 13859 ;; This function calls:
 13860 ;;		Nothing
 13861 ;; This function is called by:
 13862 ;;		_I2C1_MasterFsm
 13863 ;; This function uses a non-reentrant model
 13864 ;;
 13865                           
 13866                           
 13867                           ;psect for function _I2C1_DO_RESET
 13868  1D44                     _I2C1_DO_RESET:	
 13869                           
 13870                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 13871                           
 13872                           ;incstack = 0
 13873                           ; Regs used in _I2C1_DO_RESET: [wreg+status,2]
 13874  1D44  0023               	movlb	3	; select bank3
 13875  1D45  10BC               	bcf	(_I2C1_Status^(0+384)+28),1
 13876                           
 13877                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 13878  1D46  01BB               	clrf	(_I2C1_Status^(0+384)+27)
 13879                           
 13880                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 13881  1D47  300E               	movlw	14
 13882  1D48  0008               	return
 13883  1D49                     __end_of_I2C1_DO_RESET:	
 13884                           
 13885                           	psect	text47
 13886  1D2A                     __ptext47:	
 13887 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 13888 ;; Defined at:
 13889 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 13890 ;; Parameters:    Size  Location     Type
 13891 ;;		None
 13892 ;; Auto vars:     Size  Location     Type
 13893 ;;		None
 13894 ;; Return value:  Size  Location     Type
 13895 ;;                  1    wreg      enum E7150
 13896 ;; Registers used:
 13897 ;;		wreg, status,2, status,0, pclath, cstack
 13898 ;; Tracked objects:
 13899 ;;		On entry : 0/0
 13900 ;;		On exit  : 0/0
 13901 ;;		Unchanged: 0/0
 13902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13907 ;;Total ram usage:        0 bytes
 13908 ;; Hardware stack levels used:    1
 13909 ;; Hardware stack levels required when called:    5
 13910 ;; This function calls:
 13911 ;;		_I2C1_MasterSendNack
 13912 ;; This function is called by:
 13913 ;;		_I2C1_DO_RX
 13914 ;;		_I2C1_MasterFsm
 13915 ;; This function uses a non-reentrant model
 13916 ;;
 13917                           
 13918                           
 13919                           ;psect for function _I2C1_DO_RX_NACK_RESTART
 13920  1D2A                     _I2C1_DO_RX_NACK_RESTART:	
 13921                           
 13922                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 13923                           
 13924                           ;incstack = 0
 13925                           ; Regs used in _I2C1_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 13926  1D2A  319D  250A         	fcall	_I2C1_MasterSendNack
 13927                           
 13928                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 13929  1D2C  3009               	movlw	9
 13930  1D2D  0008               	return
 13931  1D2E                     __end_of_I2C1_DO_RX_NACK_RESTART:	
 13932                           
 13933                           	psect	text48
 13934  1D26                     __ptext48:	
 13935 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 13936 ;; Defined at:
 13937 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 13938 ;; Parameters:    Size  Location     Type
 13939 ;;		None
 13940 ;; Auto vars:     Size  Location     Type
 13941 ;;		None
 13942 ;; Return value:  Size  Location     Type
 13943 ;;                  1    wreg      enum E7150
 13944 ;; Registers used:
 13945 ;;		wreg, status,2, status,0, pclath, cstack
 13946 ;; Tracked objects:
 13947 ;;		On entry : 0/0
 13948 ;;		On exit  : 0/0
 13949 ;;		Unchanged: 0/0
 13950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13955 ;;Total ram usage:        0 bytes
 13956 ;; Hardware stack levels used:    1
 13957 ;; Hardware stack levels required when called:    5
 13958 ;; This function calls:
 13959 ;;		_I2C1_MasterSendNack
 13960 ;; This function is called by:
 13961 ;;		_I2C1_DO_RX
 13962 ;;		_I2C1_MasterFsm
 13963 ;; This function uses a non-reentrant model
 13964 ;;
 13965                           
 13966                           
 13967                           ;psect for function _I2C1_DO_RX_NACK_STOP
 13968  1D26                     _I2C1_DO_RX_NACK_STOP:	
 13969                           
 13970                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 13971                           
 13972                           ;incstack = 0
 13973                           ; Regs used in _I2C1_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 13974  1D26  319D  250A         	fcall	_I2C1_MasterSendNack
 13975                           
 13976                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 13977  1D28  300A               	movlw	10
 13978  1D29  0008               	return
 13979  1D2A                     __end_of_I2C1_DO_RX_NACK_STOP:	
 13980                           
 13981                           	psect	text49
 13982  1D22                     __ptext49:	
 13983 ;; *************** function _I2C1_DO_RX_ACK *****************
 13984 ;; Defined at:
 13985 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 13986 ;; Parameters:    Size  Location     Type
 13987 ;;		None
 13988 ;; Auto vars:     Size  Location     Type
 13989 ;;		None
 13990 ;; Return value:  Size  Location     Type
 13991 ;;                  1    wreg      enum E7150
 13992 ;; Registers used:
 13993 ;;		wreg, status,2, status,0, pclath, cstack
 13994 ;; Tracked objects:
 13995 ;;		On entry : 0/0
 13996 ;;		On exit  : 0/0
 13997 ;;		Unchanged: 0/0
 13998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14003 ;;Total ram usage:        0 bytes
 14004 ;; Hardware stack levels used:    1
 14005 ;; Hardware stack levels required when called:    5
 14006 ;; This function calls:
 14007 ;;		_I2C1_MasterSendAck
 14008 ;; This function is called by:
 14009 ;;		_I2C1_MasterFsm
 14010 ;; This function uses a non-reentrant model
 14011 ;;
 14012                           
 14013                           
 14014                           ;psect for function _I2C1_DO_RX_ACK
 14015  1D22                     _I2C1_DO_RX_ACK:	
 14016                           
 14017                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 14018                           
 14019                           ;incstack = 0
 14020                           ; Regs used in _I2C1_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
 14021  1D22  319D  250E         	fcall	_I2C1_MasterSendAck
 14022                           
 14023                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 14024  1D24  3005               	movlw	5
 14025  1D25  0008               	return
 14026  1D26                     __end_of_I2C1_DO_RX_ACK:	
 14027                           
 14028                           	psect	text50
 14029  1D1E                     __ptext50:	
 14030 ;; *************** function _I2C1_DO_SEND_STOP *****************
 14031 ;; Defined at:
 14032 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 14033 ;; Parameters:    Size  Location     Type
 14034 ;;		None
 14035 ;; Auto vars:     Size  Location     Type
 14036 ;;		None
 14037 ;; Return value:  Size  Location     Type
 14038 ;;                  1    wreg      enum E7150
 14039 ;; Registers used:
 14040 ;;		wreg, status,2, status,0, pclath, cstack
 14041 ;; Tracked objects:
 14042 ;;		On entry : 0/0
 14043 ;;		On exit  : 0/0
 14044 ;;		Unchanged: 0/0
 14045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14050 ;;Total ram usage:        0 bytes
 14051 ;; Hardware stack levels used:    1
 14052 ;; Hardware stack levels required when called:    5
 14053 ;; This function calls:
 14054 ;;		_I2C1_MasterStop
 14055 ;; This function is called by:
 14056 ;;		_I2C1_DO_TX
 14057 ;;		_I2C1_DO_TX_EMPTY
 14058 ;;		_I2C1_DO_ADDRESS_NACK
 14059 ;;		_I2C1_MasterFsm
 14060 ;; This function uses a non-reentrant model
 14061 ;;
 14062                           
 14063                           
 14064                           ;psect for function _I2C1_DO_SEND_STOP
 14065  1D1E                     _I2C1_DO_SEND_STOP:	
 14066                           
 14067                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 14068                           
 14069                           ;incstack = 0
 14070                           ; Regs used in _I2C1_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 14071  1D1E  319C  24F3         	fcall	_I2C1_MasterStop
 14072                           
 14073                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 14074  1D20  3000               	movlw	0
 14075  1D21  0008               	return
 14076  1D22                     __end_of_I2C1_DO_SEND_STOP:	
 14077                           
 14078                           	psect	text51
 14079  1D1A                     __ptext51:	
 14080 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 14081 ;; Defined at:
 14082 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 14083 ;; Parameters:    Size  Location     Type
 14084 ;;		None
 14085 ;; Auto vars:     Size  Location     Type
 14086 ;;		None
 14087 ;; Return value:  Size  Location     Type
 14088 ;;                  1    wreg      enum E7150
 14089 ;; Registers used:
 14090 ;;		wreg, status,2, status,0, pclath, cstack
 14091 ;; Tracked objects:
 14092 ;;		On entry : 0/0
 14093 ;;		On exit  : 0/0
 14094 ;;		Unchanged: 0/0
 14095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14100 ;;Total ram usage:        0 bytes
 14101 ;; Hardware stack levels used:    1
 14102 ;; Hardware stack levels required when called:    5
 14103 ;; This function calls:
 14104 ;;		_I2C1_MasterEnableRestart
 14105 ;; This function is called by:
 14106 ;;		_I2C1_DO_TX_EMPTY
 14107 ;;		_I2C1_DO_ADDRESS_NACK
 14108 ;;		_I2C1_MasterFsm
 14109 ;; This function uses a non-reentrant model
 14110 ;;
 14111                           
 14112                           
 14113                           ;psect for function _I2C1_DO_SEND_RESTART
 14114  1D1A                     _I2C1_DO_SEND_RESTART:	
 14115                           
 14116                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 14117                           
 14118                           ;incstack = 0
 14119                           ; Regs used in _I2C1_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 14120  1D1A  319C  24F0         	fcall	_I2C1_MasterEnableRestart
 14121                           
 14122                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 14123  1D1C  3001               	movlw	1
 14124  1D1D  0008               	return
 14125  1D1E                     __end_of_I2C1_DO_SEND_RESTART:	
 14126                           
 14127                           	psect	text52
 14128  1D16                     __ptext52:	
 14129 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 14130 ;; Defined at:
 14131 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 14132 ;; Parameters:    Size  Location     Type
 14133 ;;		None
 14134 ;; Auto vars:     Size  Location     Type
 14135 ;;		None
 14136 ;; Return value:  Size  Location     Type
 14137 ;;                  1    wreg      enum E7150
 14138 ;; Registers used:
 14139 ;;		wreg, status,2, status,0, pclath, cstack
 14140 ;; Tracked objects:
 14141 ;;		On entry : 0/0
 14142 ;;		On exit  : 0/0
 14143 ;;		Unchanged: 0/0
 14144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14149 ;;Total ram usage:        0 bytes
 14150 ;; Hardware stack levels used:    1
 14151 ;; Hardware stack levels required when called:    5
 14152 ;; This function calls:
 14153 ;;		_I2C1_MasterEnableRestart
 14154 ;; This function is called by:
 14155 ;;		_I2C1_DO_TX
 14156 ;;		_I2C1_MasterFsm
 14157 ;; This function uses a non-reentrant model
 14158 ;;
 14159                           
 14160                           
 14161                           ;psect for function _I2C1_DO_SEND_RESTART_WRITE
 14162  1D16                     _I2C1_DO_SEND_RESTART_WRITE:	
 14163                           
 14164                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 14165                           
 14166                           ;incstack = 0
 14167                           ; Regs used in _I2C1_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 14168  1D16  319C  24F0         	fcall	_I2C1_MasterEnableRestart
 14169                           
 14170                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 14171  1D18  3002               	movlw	2
 14172  1D19  0008               	return
 14173  1D1A                     __end_of_I2C1_DO_SEND_RESTART_WRITE:	
 14174                           
 14175                           	psect	text53
 14176  1D12                     __ptext53:	
 14177 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 14178 ;; Defined at:
 14179 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 14180 ;; Parameters:    Size  Location     Type
 14181 ;;		None
 14182 ;; Auto vars:     Size  Location     Type
 14183 ;;		None
 14184 ;; Return value:  Size  Location     Type
 14185 ;;                  1    wreg      enum E7150
 14186 ;; Registers used:
 14187 ;;		wreg, status,2, status,0, pclath, cstack
 14188 ;; Tracked objects:
 14189 ;;		On entry : 0/0
 14190 ;;		On exit  : 0/0
 14191 ;;		Unchanged: 0/0
 14192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14197 ;;Total ram usage:        0 bytes
 14198 ;; Hardware stack levels used:    1
 14199 ;; Hardware stack levels required when called:    5
 14200 ;; This function calls:
 14201 ;;		_I2C1_MasterEnableRestart
 14202 ;; This function is called by:
 14203 ;;		_I2C1_DO_TX
 14204 ;;		_I2C1_MasterFsm
 14205 ;; This function uses a non-reentrant model
 14206 ;;
 14207                           
 14208                           
 14209                           ;psect for function _I2C1_DO_SEND_RESTART_READ
 14210  1D12                     _I2C1_DO_SEND_RESTART_READ:	
 14211                           
 14212                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 14213                           
 14214                           ;incstack = 0
 14215                           ; Regs used in _I2C1_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 14216  1D12  319C  24F0         	fcall	_I2C1_MasterEnableRestart
 14217                           
 14218                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 14219  1D14  3001               	movlw	1
 14220  1D15  0008               	return
 14221  1D16                     __end_of_I2C1_DO_SEND_RESTART_READ:	
 14222                           
 14223                           	psect	text54
 14224  1D6D                     __ptext54:	
 14225 ;; *************** function _I2C1_DO_RCEN *****************
 14226 ;; Defined at:
 14227 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 14228 ;; Parameters:    Size  Location     Type
 14229 ;;		None
 14230 ;; Auto vars:     Size  Location     Type
 14231 ;;		None
 14232 ;; Return value:  Size  Location     Type
 14233 ;;                  1    wreg      enum E7150
 14234 ;; Registers used:
 14235 ;;		wreg, status,2, status,0, pclath, cstack
 14236 ;; Tracked objects:
 14237 ;;		On entry : 0/0
 14238 ;;		On exit  : 0/0
 14239 ;;		Unchanged: 0/0
 14240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14245 ;;Total ram usage:        0 bytes
 14246 ;; Hardware stack levels used:    1
 14247 ;; Hardware stack levels required when called:    5
 14248 ;; This function calls:
 14249 ;;		_I2C1_MasterStartRx
 14250 ;; This function is called by:
 14251 ;;		_I2C1_MasterFsm
 14252 ;; This function uses a non-reentrant model
 14253 ;;
 14254                           
 14255                           
 14256                           ;psect for function _I2C1_DO_RCEN
 14257  1D6D                     _I2C1_DO_RCEN:	
 14258                           
 14259                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 14260                           
 14261                           ;incstack = 0
 14262                           ; Regs used in _I2C1_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
 14263  1D6D  0023               	movlb	3	; select bank3
 14264  1D6E  103C               	bcf	(_I2C1_Status^(0+384)+28),0
 14265                           
 14266                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 14267  1D6F  319C  24F6         	fcall	_I2C1_MasterStartRx
 14268                           
 14269                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 14270  1D71  3004               	movlw	4
 14271  1D72  0008               	return
 14272  1D73                     __end_of_I2C1_DO_RCEN:	
 14273                           
 14274                           	psect	text55
 14275  12C6                     __ptext55:	
 14276 ;; *************** function _I2C1_DO_RX *****************
 14277 ;; Defined at:
 14278 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 14279 ;; Parameters:    Size  Location     Type
 14280 ;;		None
 14281 ;; Auto vars:     Size  Location     Type
 14282 ;;		None
 14283 ;; Return value:  Size  Location     Type
 14284 ;;                  1    wreg      enum E7150
 14285 ;; Registers used:
 14286 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14287 ;; Tracked objects:
 14288 ;;		On entry : 0/0
 14289 ;;		On exit  : 0/0
 14290 ;;		Unchanged: 0/0
 14291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14294 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14295 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14296 ;;Total ram usage:        3 bytes
 14297 ;; Hardware stack levels used:    1
 14298 ;; Hardware stack levels required when called:    7
 14299 ;; This function calls:
 14300 ;;		Absolute function
 14301 ;;		_I2C1_CallbackReturnReset
 14302 ;;		_I2C1_CallbackReturnStop
 14303 ;;		_I2C1_DO_RX_NACK_RESTART
 14304 ;;		_I2C1_DO_RX_NACK_STOP
 14305 ;;		_I2C1_MasterGetRxData
 14306 ;;		_I2C1_MasterSendAck
 14307 ;;		_rd1RegCompleteHandler
 14308 ;;		_rd2RegCompleteHandler
 14309 ;;		_rdBlkRegCompleteHandler
 14310 ;;		_wr1RegCompleteHandler
 14311 ;;		_wr2RegCompleteHandler
 14312 ;; This function is called by:
 14313 ;;		_I2C1_MasterFsm
 14314 ;; This function uses a non-reentrant model
 14315 ;;
 14316                           
 14317                           
 14318                           ;psect for function _I2C1_DO_RX
 14319  12C6                     _I2C1_DO_RX:	
 14320                           
 14321                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 14322                           
 14323                           ;incstack = 0
 14324                           ; Regs used in _I2C1_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14325  12C6  319C  24F9  3192   	fcall	_I2C1_MasterGetRxData
 14326  12C9  0020               	movlb	0	; select bank0
 14327  12CA  00A0               	movwf	??_I2C1_DO_RX
 14328  12CB  0023               	movlb	3	; select bank3
 14329  12CC  0837               	movf	(low ((_I2C1_Status| (0+256)+23)))^(0+128),w
 14330  12CD  0086               	movwf	6
 14331  12CE  0187               	clrf	7
 14332  12CF  0020               	movlb	0	; select bank0
 14333  12D0  0820               	movf	??_I2C1_DO_RX,w
 14334  12D1  0081               	movwf	1
 14335  12D2  3001               	movlw	1
 14336  12D3  00A0               	movwf	??_I2C1_DO_RX
 14337  12D4  0820               	movf	??_I2C1_DO_RX,w
 14338  12D5  0023               	movlb	3	; select bank3
 14339  12D6  07B7               	addwf	(low ((_I2C1_Status| (0+256)+23)))^(0+128),f
 14340                           
 14341                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 14342  12D7  3001               	movlw	1
 14343  12D8  02B8               	subwf	(_I2C1_Status^(0+384)+24),f
 14344  12D9  3000               	movlw	0
 14345  12DA  3BB9               	subwfb	((_I2C1_Status+1)^(0+384)+24),f
 14346  12DB  0838               	movf	(_I2C1_Status^(0+384)+24),w
 14347  12DC  0439               	iorwf	((_I2C1_Status+1)^(0+384)+24),w
 14348  12DD  1903               	btfsc	3,2
 14349  12DE  2AE3               	goto	l623
 14350                           
 14351                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 14352  12DF  319D  250E         	fcall	_I2C1_MasterSendAck
 14353                           
 14354                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 14355  12E1  3005               	movlw	5
 14356  12E2  0008               	return
 14357  12E3                     l623:	
 14358                           ;mcc_generated_files/i2c1_master.c: 386:     else
 14359                           
 14360                           
 14361                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 14362  12E3  15BC               	bsf	(_I2C1_Status^(0+384)+28),3
 14363                           
 14364                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 14365  12E4  2AEB               	goto	l4232
 14366  12E5                     l4222:	
 14367                           
 14368                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 14369  12E5  319D  252A         	fcall	_I2C1_DO_RX_NACK_RESTART
 14370  12E7  0008               	return
 14371  12E8                     l4226:	
 14372                           
 14373                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 14374  12E8  319D  2526         	fcall	_I2C1_DO_RX_NACK_STOP
 14375  12EA  0008               	return
 14376  12EB                     l4232:	
 14377  12EB  082C               	movf	(low ((_I2C1_Status| (0+256)+12)))^(0+128),w
 14378  12EC  0020               	movlb	0	; select bank0
 14379  12ED  00A0               	movwf	??_I2C1_DO_RX
 14380  12EE  0820               	movf	??_I2C1_DO_RX,w
 14381  12EF  00FA               	movwf	I2C1_CallbackReturnReset@funPtr
 14382  12F0  0023               	movlb	3	; select bank3
 14383  12F1  0821               	movf	(_I2C1_Status+1)^(0+384),w
 14384  12F2  008A               	movwf	10
 14385  12F3  0820               	movf	_I2C1_Status^(0+384),w
 14386  12F4  000A               	callw
 14387  12F5  3192               	pagesel	$
 14388  12F6  0020               	movlb	0	; select bank0
 14389  12F7  00A1               	movwf	??_I2C1_DO_RX+1
 14390  12F8  01A2               	clrf	??_I2C1_DO_RX+2
 14391                           
 14392                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14393                           ; Switch size 1, requested type "simple"
 14394                           ; Number of cases is 1, Range of values is 0 to 0
 14395                           ; switch strategies available:
 14396                           ; Name         Instructions Cycles
 14397                           ; simple_byte            4     3 (average)
 14398                           ; direct_byte            8     6 (fixed)
 14399                           ; jumptable            260     6 (fixed)
 14400                           ;	Chosen strategy is simple_byte
 14401  12F9  0822               	movf	??_I2C1_DO_RX+2,w
 14402  12FA  3A00               	xorlw	0	; case 0
 14403  12FB  1903               	skipnz
 14404  12FC  2AFE               	goto	l7110
 14405  12FD  2AE8               	goto	l4226
 14406  12FE                     l7110:	
 14407                           
 14408                           ; Switch size 1, requested type "simple"
 14409                           ; Number of cases is 4, Range of values is 1 to 4
 14410                           ; switch strategies available:
 14411                           ; Name         Instructions Cycles
 14412                           ; simple_byte           13     7 (average)
 14413                           ; direct_byte           17     9 (fixed)
 14414                           ; jumptable            263     9 (fixed)
 14415                           ;	Chosen strategy is simple_byte
 14416  12FE  0821               	movf	??_I2C1_DO_RX+1,w
 14417  12FF  3A01               	xorlw	1	; case 1
 14418  1300  1903               	skipnz
 14419  1301  2AE8               	goto	l4226
 14420  1302  3A03               	xorlw	3	; case 2
 14421  1303  1903               	skipnz
 14422  1304  2AE5               	goto	l4222
 14423  1305  3A01               	xorlw	1	; case 3
 14424  1306  1903               	skipnz
 14425  1307  2AE5               	goto	l4222
 14426  1308  3A07               	xorlw	7	; case 4
 14427  1309  1903               	skipnz
 14428  130A  2AE8               	goto	l4226
 14429  130B  2AE8               	goto	l4226
 14430  130C  0008               	return
 14431  130D                     __end_of_I2C1_DO_RX:	
 14432                           
 14433                           	psect	text56
 14434  1445                     __ptext56:	
 14435 ;; *************** function _I2C1_DO_TX *****************
 14436 ;; Defined at:
 14437 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 14438 ;; Parameters:    Size  Location     Type
 14439 ;;		None
 14440 ;; Auto vars:     Size  Location     Type
 14441 ;;		None
 14442 ;; Return value:  Size  Location     Type
 14443 ;;                  1    wreg      enum E7150
 14444 ;; Registers used:
 14445 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14446 ;; Tracked objects:
 14447 ;;		On entry : 0/0
 14448 ;;		On exit  : 0/0
 14449 ;;		Unchanged: 0/0
 14450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14453 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14454 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14455 ;;Total ram usage:        3 bytes
 14456 ;; Hardware stack levels used:    1
 14457 ;; Hardware stack levels required when called:    7
 14458 ;; This function calls:
 14459 ;;		Absolute function
 14460 ;;		_I2C1_CallbackReturnReset
 14461 ;;		_I2C1_CallbackReturnStop
 14462 ;;		_I2C1_DO_SEND_RESTART_READ
 14463 ;;		_I2C1_DO_SEND_RESTART_WRITE
 14464 ;;		_I2C1_DO_SEND_STOP
 14465 ;;		_I2C1_MasterIsNack
 14466 ;;		_I2C1_MasterSendTxData
 14467 ;;		_rd1RegCompleteHandler
 14468 ;;		_rd2RegCompleteHandler
 14469 ;;		_rdBlkRegCompleteHandler
 14470 ;;		_wr1RegCompleteHandler
 14471 ;;		_wr2RegCompleteHandler
 14472 ;; This function is called by:
 14473 ;;		_I2C1_MasterFsm
 14474 ;; This function uses a non-reentrant model
 14475 ;;
 14476                           
 14477                           
 14478                           ;psect for function _I2C1_DO_TX
 14479  1445                     _I2C1_DO_TX:	
 14480                           
 14481                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 14482                           
 14483                           ;incstack = 0
 14484                           ; Regs used in _I2C1_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14485  1445  319D  2567  3194   	fcall	_I2C1_MasterIsNack
 14486  1448  3A00               	xorlw	0
 14487  1449  1D03               	btfss	3,2
 14488  144A  2C55               	goto	l4192
 14489  144B  2C7B               	goto	l607
 14490  144C                     l4178:	
 14491                           
 14492                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 14493  144C  319D  2512         	fcall	_I2C1_DO_SEND_RESTART_READ
 14494  144E  0008               	return
 14495  144F                     l4182:	
 14496                           
 14497                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 14498  144F  319D  2516         	fcall	_I2C1_DO_SEND_RESTART_WRITE
 14499  1451  0008               	return
 14500  1452                     l4186:	
 14501                           
 14502                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 14503  1452  319D  251E         	fcall	_I2C1_DO_SEND_STOP
 14504  1454  0008               	return
 14505  1455                     l4192:	
 14506  1455  0023               	movlb	3	; select bank3
 14507  1456  082F               	movf	(low ((_I2C1_Status| (0+256)+15)))^(0+128),w
 14508  1457  0020               	movlb	0	; select bank0
 14509  1458  00A0               	movwf	??_I2C1_DO_TX
 14510  1459  0820               	movf	??_I2C1_DO_TX,w
 14511  145A  00FA               	movwf	I2C1_CallbackReturnReset@funPtr
 14512  145B  3006               	movlw	6
 14513  145C  3EA0               	addlw	(low (_I2C1_Status| (0+256)))& (0+255)
 14514  145D  0086               	movwf	6
 14515  145E  3001               	movlw	1	; select bank3/4
 14516  145F  0087               	movwf	7
 14517  1460  3F41               	moviw [1]fsr1
 14518  1461  008A               	movwf	10
 14519  1462  3F40               	moviw [0]fsr1
 14520  1463  000A               	callw
 14521  1464  3194               	pagesel	$
 14522  1465  0020               	movlb	0	; select bank0
 14523  1466  00A1               	movwf	??_I2C1_DO_TX+1
 14524  1467  01A2               	clrf	??_I2C1_DO_TX+2
 14525                           
 14526                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14527                           ; Switch size 1, requested type "simple"
 14528                           ; Number of cases is 1, Range of values is 0 to 0
 14529                           ; switch strategies available:
 14530                           ; Name         Instructions Cycles
 14531                           ; simple_byte            4     3 (average)
 14532                           ; direct_byte            8     6 (fixed)
 14533                           ; jumptable            260     6 (fixed)
 14534                           ;	Chosen strategy is simple_byte
 14535  1468  0822               	movf	??_I2C1_DO_TX+2,w
 14536  1469  3A00               	xorlw	0	; case 0
 14537  146A  1903               	skipnz
 14538  146B  2C6D               	goto	l7112
 14539  146C  2C52               	goto	l4186
 14540  146D                     l7112:	
 14541                           
 14542                           ; Switch size 1, requested type "simple"
 14543                           ; Number of cases is 4, Range of values is 1 to 4
 14544                           ; switch strategies available:
 14545                           ; Name         Instructions Cycles
 14546                           ; simple_byte           13     7 (average)
 14547                           ; direct_byte           17     9 (fixed)
 14548                           ; jumptable            263     9 (fixed)
 14549                           ;	Chosen strategy is simple_byte
 14550  146D  0821               	movf	??_I2C1_DO_TX+1,w
 14551  146E  3A01               	xorlw	1	; case 1
 14552  146F  1903               	skipnz
 14553  1470  2C52               	goto	l4186
 14554  1471  3A03               	xorlw	3	; case 2
 14555  1472  1903               	skipnz
 14556  1473  2C4C               	goto	l4178
 14557  1474  3A01               	xorlw	1	; case 3
 14558  1475  1903               	skipnz
 14559  1476  2C4F               	goto	l4182
 14560  1477  3A07               	xorlw	7	; case 4
 14561  1478  1903               	skipnz
 14562  1479  2C52               	goto	l4186
 14563  147A  2C52               	goto	l4186
 14564  147B                     l607:	
 14565                           ;mcc_generated_files/i2c1_master.c: 370:     else
 14566                           
 14567                           
 14568                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 14569  147B  0023               	movlb	3	; select bank3
 14570  147C  103C               	bcf	(_I2C1_Status^(0+384)+28),0
 14571                           
 14572                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 14573  147D  3017               	movlw	23
 14574  147E  3EA0               	addlw	(low (_I2C1_Status| (0+256)))& (0+255)
 14575  147F  0086               	movwf	6
 14576  1480  3001               	movlw	1	; select bank3/4
 14577  1481  0087               	movwf	7
 14578  1482  3F40               	moviw [0]fsr1
 14579  1483  0084               	movwf	4
 14580  1484  0185               	clrf	5
 14581  1485  0A81               	incf	1,f
 14582  1486  0800               	movf	0,w
 14583  1487  319D  253A  3194   	fcall	_I2C1_MasterSendTxData
 14584                           
 14585                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 14586  148A  3001               	movlw	1
 14587  148B  0023               	movlb	3	; select bank3
 14588  148C  02B8               	subwf	(_I2C1_Status^(0+384)+24),f
 14589  148D  3000               	movlw	0
 14590  148E  3BB9               	subwfb	((_I2C1_Status+1)^(0+384)+24),f
 14591  148F  0838               	movf	(_I2C1_Status^(0+384)+24),w
 14592  1490  0439               	iorwf	((_I2C1_Status+1)^(0+384)+24),w
 14593  1491  1D03               	btfss	3,2
 14594  1492  2C95               	goto	l4200
 14595  1493  3006               	movlw	6
 14596  1494  0008               	return
 14597  1495                     l4200:	
 14598  1495  3003               	movlw	3
 14599  1496  0008               	return
 14600  1497                     __end_of_I2C1_DO_TX:	
 14601                           
 14602                           	psect	text57
 14603  1D7F                     __ptext57:	
 14604 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 14605 ;; Defined at:
 14606 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 14607 ;; Parameters:    Size  Location     Type
 14608 ;;		None
 14609 ;; Auto vars:     Size  Location     Type
 14610 ;;		None
 14611 ;; Return value:  Size  Location     Type
 14612 ;;                  1    wreg      enum E7150
 14613 ;; Registers used:
 14614 ;;		wreg, status,2, status,0, pclath, cstack
 14615 ;; Tracked objects:
 14616 ;;		On entry : 0/0
 14617 ;;		On exit  : 0/0
 14618 ;;		Unchanged: 0/0
 14619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14624 ;;Total ram usage:        0 bytes
 14625 ;; Hardware stack levels used:    1
 14626 ;; Hardware stack levels required when called:    5
 14627 ;; This function calls:
 14628 ;;		_I2C1_MasterSendTxData
 14629 ;; This function is called by:
 14630 ;;		_I2C1_MasterFsm
 14631 ;; This function uses a non-reentrant model
 14632 ;;
 14633                           
 14634                           
 14635                           ;psect for function _I2C1_DO_SEND_ADR_WRITE
 14636  1D7F                     _I2C1_DO_SEND_ADR_WRITE:	
 14637                           
 14638                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 14639                           
 14640                           ;incstack = 0
 14641                           ; Regs used in _I2C1_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 14642  1D7F  0023               	movlb	3	; select bank3
 14643  1D80  143C               	bsf	(_I2C1_Status^(0+384)+28),0
 14644                           
 14645                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData(I2C1_Status.address <
      +                          < 1);
 14646  1D81  3536               	lslf	(_I2C1_Status^(0+384)+22),w
 14647  1D82  319D  253A         	fcall	_I2C1_MasterSendTxData
 14648                           
 14649                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 14650  1D84  3003               	movlw	3
 14651  1D85  0008               	return
 14652  1D86                     __end_of_I2C1_DO_SEND_ADR_WRITE:	
 14653                           
 14654                           	psect	text58
 14655  1D96                     __ptext58:	
 14656 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 14657 ;; Defined at:
 14658 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 14659 ;; Parameters:    Size  Location     Type
 14660 ;;		None
 14661 ;; Auto vars:     Size  Location     Type
 14662 ;;		None
 14663 ;; Return value:  Size  Location     Type
 14664 ;;                  1    wreg      enum E7150
 14665 ;; Registers used:
 14666 ;;		wreg, status,2, status,0, pclath, cstack
 14667 ;; Tracked objects:
 14668 ;;		On entry : 0/0
 14669 ;;		On exit  : 0/0
 14670 ;;		Unchanged: 0/0
 14671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14676 ;;Total ram usage:        0 bytes
 14677 ;; Hardware stack levels used:    1
 14678 ;; Hardware stack levels required when called:    5
 14679 ;; This function calls:
 14680 ;;		_I2C1_MasterSendTxData
 14681 ;; This function is called by:
 14682 ;;		_I2C1_MasterFsm
 14683 ;; This function uses a non-reentrant model
 14684 ;;
 14685                           
 14686                           
 14687                           ;psect for function _I2C1_DO_SEND_ADR_READ
 14688  1D96                     _I2C1_DO_SEND_ADR_READ:	
 14689                           
 14690                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 14691                           
 14692                           ;incstack = 0
 14693                           ; Regs used in _I2C1_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 14694  1D96  0023               	movlb	3	; select bank3
 14695  1D97  143C               	bsf	(_I2C1_Status^(0+384)+28),0
 14696                           
 14697                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData(I2C1_Status.address <
      +                          < 1 | 1);
 14698  1D98  1403               	setc
 14699  1D99  0D36               	rlf	(_I2C1_Status^(0+384)+22),w
 14700  1D9A  319D  253A         	fcall	_I2C1_MasterSendTxData
 14701                           
 14702                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 14703  1D9C  3005               	movlw	5
 14704  1D9D  0008               	return
 14705  1D9E                     __end_of_I2C1_DO_SEND_ADR_READ:	
 14706                           
 14707                           	psect	text59
 14708  1D3F                     __ptext59:	
 14709 ;; *************** function _I2C1_DO_IDLE *****************
 14710 ;; Defined at:
 14711 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 14712 ;; Parameters:    Size  Location     Type
 14713 ;;		None
 14714 ;; Auto vars:     Size  Location     Type
 14715 ;;		None
 14716 ;; Return value:  Size  Location     Type
 14717 ;;                  1    wreg      enum E7150
 14718 ;; Registers used:
 14719 ;;		wreg, status,2
 14720 ;; Tracked objects:
 14721 ;;		On entry : 0/0
 14722 ;;		On exit  : 0/0
 14723 ;;		Unchanged: 0/0
 14724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14729 ;;Total ram usage:        0 bytes
 14730 ;; Hardware stack levels used:    1
 14731 ;; Hardware stack levels required when called:    4
 14732 ;; This function calls:
 14733 ;;		Nothing
 14734 ;; This function is called by:
 14735 ;;		_I2C1_MasterFsm
 14736 ;; This function uses a non-reentrant model
 14737 ;;
 14738                           
 14739                           
 14740                           ;psect for function _I2C1_DO_IDLE
 14741  1D3F                     _I2C1_DO_IDLE:	
 14742                           
 14743                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 14744                           
 14745                           ;incstack = 0
 14746                           ; Regs used in _I2C1_DO_IDLE: [wreg+status,2]
 14747  1D3F  0023               	movlb	3	; select bank3
 14748  1D40  10BC               	bcf	(_I2C1_Status^(0+384)+28),1
 14749                           
 14750                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 14751  1D41  01BB               	clrf	(_I2C1_Status^(0+384)+27)
 14752                           
 14753                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 14754  1D42  300E               	movlw	14
 14755  1D43  0008               	return
 14756  1D44                     __end_of_I2C1_DO_IDLE:	
 14757                           
 14758                           	psect	text60
 14759  106B                     __ptext60:	
 14760 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 14761 ;; Defined at:
 14762 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 14763 ;; Parameters:    Size  Location     Type
 14764 ;;		None
 14765 ;; Auto vars:     Size  Location     Type
 14766 ;;		None
 14767 ;; Return value:  Size  Location     Type
 14768 ;;                  1    wreg      enum E7150
 14769 ;; Registers used:
 14770 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14771 ;; Tracked objects:
 14772 ;;		On entry : 0/0
 14773 ;;		On exit  : 0/0
 14774 ;;		Unchanged: 0/0
 14775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14778 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14779 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14780 ;;Total ram usage:        3 bytes
 14781 ;; Hardware stack levels used:    1
 14782 ;; Hardware stack levels required when called:    7
 14783 ;; This function calls:
 14784 ;;		Absolute function
 14785 ;;		_I2C1_CallbackReturnReset
 14786 ;;		_I2C1_CallbackReturnStop
 14787 ;;		_I2C1_DO_SEND_RESTART
 14788 ;;		_I2C1_DO_SEND_STOP
 14789 ;;		_I2C1_MasterSetIrq
 14790 ;;		_rd1RegCompleteHandler
 14791 ;;		_rd2RegCompleteHandler
 14792 ;;		_rdBlkRegCompleteHandler
 14793 ;;		_wr1RegCompleteHandler
 14794 ;;		_wr2RegCompleteHandler
 14795 ;; This function is called by:
 14796 ;;		_I2C1_MasterFsm
 14797 ;; This function uses a non-reentrant model
 14798 ;;
 14799                           
 14800                           
 14801                           ;psect for function _I2C1_DO_TX_EMPTY
 14802  106B                     _I2C1_DO_TX_EMPTY:	
 14803                           
 14804                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 14805                           
 14806                           ;incstack = 0
 14807                           ; Regs used in _I2C1_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14808  106B  0023               	movlb	3	; select bank3
 14809  106C  15BC               	bsf	(_I2C1_Status^(0+384)+28),3
 14810                           
 14811                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 14812  106D  2878               	goto	l4264
 14813  106E                     l4248:	
 14814                           
 14815                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 14816  106E  319D  251A         	fcall	_I2C1_DO_SEND_RESTART
 14817  1070  0008               	return
 14818  1071                     l4252:	
 14819                           
 14820                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 14821  1071  319C  24FC         	fcall	_I2C1_MasterSetIrq
 14822                           
 14823                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 14824  1073  3003               	movlw	3
 14825  1074  0008               	return
 14826  1075                     l4258:	
 14827                           
 14828                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 14829  1075  319D  251E         	fcall	_I2C1_DO_SEND_STOP
 14830  1077  0008               	return
 14831  1078                     l4264:	
 14832  1078  082C               	movf	(low ((_I2C1_Status| (0+256)+12)))^(0+128),w
 14833  1079  0020               	movlb	0	; select bank0
 14834  107A  00A0               	movwf	??_I2C1_DO_TX_EMPTY
 14835  107B  0820               	movf	??_I2C1_DO_TX_EMPTY,w
 14836  107C  00FA               	movwf	I2C1_CallbackReturnReset@funPtr
 14837  107D  0023               	movlb	3	; select bank3
 14838  107E  0821               	movf	(_I2C1_Status+1)^(0+384),w
 14839  107F  008A               	movwf	10
 14840  1080  0820               	movf	_I2C1_Status^(0+384),w
 14841  1081  000A               	callw
 14842  1082  3190               	pagesel	$
 14843  1083  0020               	movlb	0	; select bank0
 14844  1084  00A1               	movwf	??_I2C1_DO_TX_EMPTY+1
 14845  1085  01A2               	clrf	??_I2C1_DO_TX_EMPTY+2
 14846                           
 14847                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14848                           ; Switch size 1, requested type "simple"
 14849                           ; Number of cases is 1, Range of values is 0 to 0
 14850                           ; switch strategies available:
 14851                           ; Name         Instructions Cycles
 14852                           ; simple_byte            4     3 (average)
 14853                           ; direct_byte            8     6 (fixed)
 14854                           ; jumptable            260     6 (fixed)
 14855                           ;	Chosen strategy is simple_byte
 14856  1086  0822               	movf	??_I2C1_DO_TX_EMPTY+2,w
 14857  1087  3A00               	xorlw	0	; case 0
 14858  1088  1903               	skipnz
 14859  1089  288B               	goto	l7114
 14860  108A  2875               	goto	l4258
 14861  108B                     l7114:	
 14862                           
 14863                           ; Switch size 1, requested type "simple"
 14864                           ; Number of cases is 4, Range of values is 1 to 4
 14865                           ; switch strategies available:
 14866                           ; Name         Instructions Cycles
 14867                           ; simple_byte           13     7 (average)
 14868                           ; direct_byte           17     9 (fixed)
 14869                           ; jumptable            263     9 (fixed)
 14870                           ;	Chosen strategy is simple_byte
 14871  108B  0821               	movf	??_I2C1_DO_TX_EMPTY+1,w
 14872  108C  3A01               	xorlw	1	; case 1
 14873  108D  1903               	skipnz
 14874  108E  2875               	goto	l4258
 14875  108F  3A03               	xorlw	3	; case 2
 14876  1090  1903               	skipnz
 14877  1091  286E               	goto	l4248
 14878  1092  3A01               	xorlw	1	; case 3
 14879  1093  1903               	skipnz
 14880  1094  286E               	goto	l4248
 14881  1095  3A07               	xorlw	7	; case 4
 14882  1096  1903               	skipnz
 14883  1097  2871               	goto	l4252
 14884  1098  2875               	goto	l4258
 14885  1099  0008               	return
 14886  109A                     __end_of_I2C1_DO_TX_EMPTY:	
 14887                           
 14888                           	psect	text61
 14889  1CFC                     __ptext61:	
 14890 ;; *************** function _I2C1_MasterSetIrq *****************
 14891 ;; Defined at:
 14892 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 14893 ;; Parameters:    Size  Location     Type
 14894 ;;		None
 14895 ;; Auto vars:     Size  Location     Type
 14896 ;;		None
 14897 ;; Return value:  Size  Location     Type
 14898 ;;                  1    wreg      void 
 14899 ;; Registers used:
 14900 ;;		None
 14901 ;; Tracked objects:
 14902 ;;		On entry : 0/0
 14903 ;;		On exit  : 0/0
 14904 ;;		Unchanged: 0/0
 14905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14910 ;;Total ram usage:        0 bytes
 14911 ;; Hardware stack levels used:    1
 14912 ;; Hardware stack levels required when called:    4
 14913 ;; This function calls:
 14914 ;;		Nothing
 14915 ;; This function is called by:
 14916 ;;		_I2C1_DO_TX_EMPTY
 14917 ;; This function uses a non-reentrant model
 14918 ;;
 14919                           
 14920                           
 14921                           ;psect for function _I2C1_MasterSetIrq
 14922  1CFC                     _I2C1_MasterSetIrq:	
 14923                           
 14924                           ;mcc_generated_files/i2c1_master.c: 647:     PIR1bits.SSP1IF = 1;
 14925                           
 14926                           ;incstack = 0
 14927                           ; Regs used in _I2C1_MasterSetIrq: []
 14928  1CFC  0020               	movlb	0	; select bank0
 14929  1CFD  1591               	bsf	17,3	;volatile
 14930  1CFE  0008               	return
 14931  1CFF                     __end_of_I2C1_MasterSetIrq:	
 14932                           
 14933                           	psect	text62
 14934  1D67                     __ptext62:	
 14935 ;; *************** function _I2C1_MasterIsNack *****************
 14936 ;; Defined at:
 14937 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 14938 ;; Parameters:    Size  Location     Type
 14939 ;;		None
 14940 ;; Auto vars:     Size  Location     Type
 14941 ;;		None
 14942 ;; Return value:  Size  Location     Type
 14943 ;;                  1    wreg      _Bool 
 14944 ;; Registers used:
 14945 ;;		wreg, status,2, status,0
 14946 ;; Tracked objects:
 14947 ;;		On entry : 0/0
 14948 ;;		On exit  : 0/0
 14949 ;;		Unchanged: 0/0
 14950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14955 ;;Total ram usage:        0 bytes
 14956 ;; Hardware stack levels used:    1
 14957 ;; Hardware stack levels required when called:    4
 14958 ;; This function calls:
 14959 ;;		Nothing
 14960 ;; This function is called by:
 14961 ;;		_I2C1_MasterFsm
 14962 ;;		_I2C1_DO_TX
 14963 ;; This function uses a non-reentrant model
 14964 ;;
 14965                           
 14966                           
 14967                           ;psect for function _I2C1_MasterIsNack
 14968  1D67                     _I2C1_MasterIsNack:	
 14969                           
 14970                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 14971                           
 14972                           ;incstack = 0
 14973                           ; Regs used in _I2C1_MasterIsNack: [wreg+status,2+status,0]
 14974  1D67  0024               	movlb	4	; select bank4
 14975  1D68  0E16               	swapf	22,w	;volatile
 14976  1D69  0C89               	rrf	9,f
 14977  1D6A  0C89               	rrf	9,f
 14978  1D6B  3901               	andlw	1
 14979  1D6C  0008               	return
 14980  1D6D                     __end_of_I2C1_MasterIsNack:	
 14981                           
 14982                           	psect	text63
 14983  1D3A                     __ptext63:	
 14984 ;; *************** function _I2C1_MasterSendTxData *****************
 14985 ;; Defined at:
 14986 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 14987 ;; Parameters:    Size  Location     Type
 14988 ;;  data            1    wreg     unsigned char 
 14989 ;; Auto vars:     Size  Location     Type
 14990 ;;  data            1    1[COMMON] unsigned char 
 14991 ;; Return value:  Size  Location     Type
 14992 ;;                  1    wreg      void 
 14993 ;; Registers used:
 14994 ;;		wreg
 14995 ;; Tracked objects:
 14996 ;;		On entry : 0/0
 14997 ;;		On exit  : 0/0
 14998 ;;		Unchanged: 0/0
 14999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15001 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15003 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15004 ;;Total ram usage:        1 bytes
 15005 ;; Hardware stack levels used:    1
 15006 ;; Hardware stack levels required when called:    4
 15007 ;; This function calls:
 15008 ;;		Nothing
 15009 ;; This function is called by:
 15010 ;;		_I2C1_DO_SEND_ADR_READ
 15011 ;;		_I2C1_DO_SEND_ADR_WRITE
 15012 ;;		_I2C1_DO_TX
 15013 ;; This function uses a non-reentrant model
 15014 ;;
 15015                           
 15016                           
 15017                           ;psect for function _I2C1_MasterSendTxData
 15018  1D3A                     _I2C1_MasterSendTxData:	
 15019                           
 15020                           ;incstack = 0
 15021                           ; Regs used in _I2C1_MasterSendTxData: [wreg]
 15022                           ;I2C1_MasterSendTxData@data stored from wreg
 15023  1D3A  00F1               	movwf	I2C1_MasterSendTxData@data
 15024                           
 15025                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 15026  1D3B  0871               	movf	I2C1_MasterSendTxData@data,w
 15027  1D3C  0024               	movlb	4	; select bank4
 15028  1D3D  0091               	movwf	17	;volatile
 15029  1D3E  0008               	return
 15030  1D3F                     __end_of_I2C1_MasterSendTxData:	
 15031                           
 15032                           	psect	text64
 15033  1D0E                     __ptext64:	
 15034 ;; *************** function _I2C1_MasterSendAck *****************
 15035 ;; Defined at:
 15036 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 15037 ;; Parameters:    Size  Location     Type
 15038 ;;		None
 15039 ;; Auto vars:     Size  Location     Type
 15040 ;;		None
 15041 ;; Return value:  Size  Location     Type
 15042 ;;                  1    wreg      void 
 15043 ;; Registers used:
 15044 ;;		None
 15045 ;; Tracked objects:
 15046 ;;		On entry : 0/0
 15047 ;;		On exit  : 0/0
 15048 ;;		Unchanged: 0/0
 15049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15054 ;;Total ram usage:        0 bytes
 15055 ;; Hardware stack levels used:    1
 15056 ;; Hardware stack levels required when called:    4
 15057 ;; This function calls:
 15058 ;;		Nothing
 15059 ;; This function is called by:
 15060 ;;		_I2C1_DO_RX
 15061 ;;		_I2C1_DO_RX_ACK
 15062 ;; This function uses a non-reentrant model
 15063 ;;
 15064                           
 15065                           
 15066                           ;psect for function _I2C1_MasterSendAck
 15067  1D0E                     _I2C1_MasterSendAck:	
 15068                           
 15069                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 15070                           
 15071                           ;incstack = 0
 15072                           ; Regs used in _I2C1_MasterSendAck: []
 15073  1D0E  0024               	movlb	4	; select bank4
 15074  1D0F  1296               	bcf	22,5	;volatile
 15075                           
 15076                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 15077  1D10  1616               	bsf	22,4	;volatile
 15078  1D11  0008               	return
 15079  1D12                     __end_of_I2C1_MasterSendAck:	
 15080                           
 15081                           	psect	text65
 15082  1CF9                     __ptext65:	
 15083 ;; *************** function _I2C1_MasterGetRxData *****************
 15084 ;; Defined at:
 15085 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 15086 ;; Parameters:    Size  Location     Type
 15087 ;;		None
 15088 ;; Auto vars:     Size  Location     Type
 15089 ;;		None
 15090 ;; Return value:  Size  Location     Type
 15091 ;;                  1    wreg      unsigned char 
 15092 ;; Registers used:
 15093 ;;		wreg
 15094 ;; Tracked objects:
 15095 ;;		On entry : 0/0
 15096 ;;		On exit  : 0/0
 15097 ;;		Unchanged: 0/0
 15098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15103 ;;Total ram usage:        0 bytes
 15104 ;; Hardware stack levels used:    1
 15105 ;; Hardware stack levels required when called:    4
 15106 ;; This function calls:
 15107 ;;		Nothing
 15108 ;; This function is called by:
 15109 ;;		_I2C1_DO_RX
 15110 ;; This function uses a non-reentrant model
 15111 ;;
 15112                           
 15113                           
 15114                           ;psect for function _I2C1_MasterGetRxData
 15115  1CF9                     _I2C1_MasterGetRxData:	
 15116                           
 15117                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 15118                           
 15119                           ;incstack = 0
 15120                           ; Regs used in _I2C1_MasterGetRxData: [wreg]
 15121  1CF9  0024               	movlb	4	; select bank4
 15122  1CFA  0811               	movf	17,w	;volatile
 15123  1CFB  0008               	return
 15124  1CFC                     __end_of_I2C1_MasterGetRxData:	
 15125                           
 15126                           	psect	text66
 15127  1D0A                     __ptext66:	
 15128 ;; *************** function _I2C1_MasterSendNack *****************
 15129 ;; Defined at:
 15130 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 15131 ;; Parameters:    Size  Location     Type
 15132 ;;		None
 15133 ;; Auto vars:     Size  Location     Type
 15134 ;;		None
 15135 ;; Return value:  Size  Location     Type
 15136 ;;                  1    wreg      void 
 15137 ;; Registers used:
 15138 ;;		None
 15139 ;; Tracked objects:
 15140 ;;		On entry : 0/0
 15141 ;;		On exit  : 0/0
 15142 ;;		Unchanged: 0/0
 15143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15148 ;;Total ram usage:        0 bytes
 15149 ;; Hardware stack levels used:    1
 15150 ;; Hardware stack levels required when called:    4
 15151 ;; This function calls:
 15152 ;;		Nothing
 15153 ;; This function is called by:
 15154 ;;		_I2C1_DO_RX_NACK_STOP
 15155 ;;		_I2C1_DO_RX_NACK_RESTART
 15156 ;; This function uses a non-reentrant model
 15157 ;;
 15158                           
 15159                           
 15160                           ;psect for function _I2C1_MasterSendNack
 15161  1D0A                     _I2C1_MasterSendNack:	
 15162                           
 15163                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 15164                           
 15165                           ;incstack = 0
 15166                           ; Regs used in _I2C1_MasterSendNack: []
 15167  1D0A  0024               	movlb	4	; select bank4
 15168  1D0B  1696               	bsf	22,5	;volatile
 15169                           
 15170                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 15171  1D0C  1616               	bsf	22,4	;volatile
 15172  1D0D  0008               	return
 15173  1D0E                     __end_of_I2C1_MasterSendNack:	
 15174                           
 15175                           	psect	text67
 15176  1CF6                     __ptext67:	
 15177 ;; *************** function _I2C1_MasterStartRx *****************
 15178 ;; Defined at:
 15179 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 15180 ;; Parameters:    Size  Location     Type
 15181 ;;		None
 15182 ;; Auto vars:     Size  Location     Type
 15183 ;;		None
 15184 ;; Return value:  Size  Location     Type
 15185 ;;                  1    wreg      void 
 15186 ;; Registers used:
 15187 ;;		None
 15188 ;; Tracked objects:
 15189 ;;		On entry : 0/0
 15190 ;;		On exit  : 0/0
 15191 ;;		Unchanged: 0/0
 15192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15197 ;;Total ram usage:        0 bytes
 15198 ;; Hardware stack levels used:    1
 15199 ;; Hardware stack levels required when called:    4
 15200 ;; This function calls:
 15201 ;;		Nothing
 15202 ;; This function is called by:
 15203 ;;		_I2C1_DO_RCEN
 15204 ;; This function uses a non-reentrant model
 15205 ;;
 15206                           
 15207                           
 15208                           ;psect for function _I2C1_MasterStartRx
 15209  1CF6                     _I2C1_MasterStartRx:	
 15210                           
 15211                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 15212                           
 15213                           ;incstack = 0
 15214                           ; Regs used in _I2C1_MasterStartRx: []
 15215  1CF6  0024               	movlb	4	; select bank4
 15216  1CF7  1596               	bsf	22,3	;volatile
 15217  1CF8  0008               	return
 15218  1CF9                     __end_of_I2C1_MasterStartRx:	
 15219                           
 15220                           	psect	text68
 15221  0002                     __ptext68:	
 15222 ;; *************** function _I2C1_CallbackReturnReset *****************
 15223 ;; Defined at:
 15224 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 15225 ;; Parameters:    Size  Location     Type
 15226 ;;  funPtr          1   10[COMMON] PTR void 
 15227 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 15228 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 15229 ;; Auto vars:     Size  Location     Type
 15230 ;;		None
 15231 ;; Return value:  Size  Location     Type
 15232 ;;                  1    wreg      enum E358
 15233 ;; Registers used:
 15234 ;;		wreg
 15235 ;; Tracked objects:
 15236 ;;		On entry : 0/0
 15237 ;;		On exit  : 0/0
 15238 ;;		Unchanged: 0/0
 15239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15240 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15243 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15244 ;;Total ram usage:        1 bytes
 15245 ;; Hardware stack levels used:    1
 15246 ;; Hardware stack levels required when called:    4
 15247 ;; This function calls:
 15248 ;;		Nothing
 15249 ;; This function is called by:
 15250 ;;		_I2C1_Open
 15251 ;;		_I2C1_DO_TX
 15252 ;;		_I2C1_DO_RX
 15253 ;;		_I2C1_DO_TX_EMPTY
 15254 ;;		_I2C1_DO_ADDRESS_NACK
 15255 ;;		_I2C1_DO_RX_EMPTY
 15256 ;; This function uses a non-reentrant model
 15257 ;;
 15258                           
 15259                           
 15260                           ;psect for function _I2C1_CallbackReturnReset
 15261  0002                     _I2C1_CallbackReturnReset:	
 15262                           
 15263                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 15264                           
 15265                           ;incstack = 0
 15266                           ; Regs used in _I2C1_CallbackReturnReset: [wreg]
 15267  0002  3005               	movlw	5
 15268  0003  0008               	return
 15269  0004                     __end_of_I2C1_CallbackReturnReset:	
 15270                           
 15271                           	psect	text69
 15272  1CDF                     __ptext69:	
 15273 ;; *************** function _I2C1_CallbackReturnStop *****************
 15274 ;; Defined at:
 15275 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 15276 ;; Parameters:    Size  Location     Type
 15277 ;;  funPtr          1   10[COMMON] PTR void 
 15278 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 15279 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 15280 ;; Auto vars:     Size  Location     Type
 15281 ;;		None
 15282 ;; Return value:  Size  Location     Type
 15283 ;;                  1    wreg      enum E358
 15284 ;; Registers used:
 15285 ;;		wreg
 15286 ;; Tracked objects:
 15287 ;;		On entry : 0/0
 15288 ;;		On exit  : 0/0
 15289 ;;		Unchanged: 0/0
 15290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15291 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15294 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15295 ;;Total ram usage:        1 bytes
 15296 ;; Hardware stack levels used:    1
 15297 ;; Hardware stack levels required when called:    4
 15298 ;; This function calls:
 15299 ;;		Nothing
 15300 ;; This function is called by:
 15301 ;;		_I2C1_Open
 15302 ;;		_I2C1_SetCallback
 15303 ;;		_I2C1_DO_TX
 15304 ;;		_I2C1_DO_RX
 15305 ;;		_I2C1_DO_TX_EMPTY
 15306 ;;		_I2C1_DO_ADDRESS_NACK
 15307 ;;		_I2C1_DO_RX_EMPTY
 15308 ;; This function uses a non-reentrant model
 15309 ;;
 15310                           
 15311                           
 15312                           ;psect for function _I2C1_CallbackReturnStop
 15313  1CDF                     _I2C1_CallbackReturnStop:	
 15314                           
 15315                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 15316                           
 15317                           ;incstack = 0
 15318                           ; Regs used in _I2C1_CallbackReturnStop: [wreg]
 15319  1CDF  3001               	movlw	1
 15320  1CE0  0008               	return
 15321  1CE1                     __end_of_I2C1_CallbackReturnStop:	
 15322                           
 15323                           	psect	text70
 15324  1E54                     __ptext70:	
 15325 ;; *************** function _rdBlkRegCompleteHandler *****************
 15326 ;; Defined at:
 15327 ;;		line 170 in file "mcc_generated_files/examples/i2c1_master_example.c"
 15328 ;; Parameters:    Size  Location     Type
 15329 ;;  ptr             1   10[COMMON] PTR void 
 15330 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 15331 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 15332 ;; Auto vars:     Size  Location     Type
 15333 ;;		None
 15334 ;; Return value:  Size  Location     Type
 15335 ;;                  1    wreg      enum E358
 15336 ;; Registers used:
 15337 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15338 ;; Tracked objects:
 15339 ;;		On entry : 0/0
 15340 ;;		On exit  : 0/0
 15341 ;;		Unchanged: 0/0
 15342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15343 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15346 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15347 ;;Total ram usage:        1 bytes
 15348 ;; Hardware stack levels used:    1
 15349 ;; Hardware stack levels required when called:    6
 15350 ;; This function calls:
 15351 ;;		_I2C1_SetBuffer
 15352 ;;		_I2C1_SetDataCompleteCallback
 15353 ;; This function is called by:
 15354 ;;		_I2C1_ReadDataBlock
 15355 ;;		_I2C1_DO_TX
 15356 ;;		_I2C1_DO_RX
 15357 ;;		_I2C1_DO_TX_EMPTY
 15358 ;;		_I2C1_DO_ADDRESS_NACK
 15359 ;;		_I2C1_DO_RX_EMPTY
 15360 ;; This function uses a non-reentrant model
 15361 ;;
 15362                           
 15363                           
 15364                           ;psect for function _rdBlkRegCompleteHandler
 15365  1E54                     _rdBlkRegCompleteHandler:	
 15366                           
 15367                           ;mcc_generated_files/examples/i2c1_master_example.c: 170: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 171: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 15368                           
 15369                           ;incstack = 0
 15370                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 15371  1E54  087A               	movf	rdBlkRegCompleteHandler@ptr,w
 15372  1E55  0086               	movwf	6
 15373  1E56  0187               	clrf	7
 15374  1E57  3F40               	moviw [0]fsr1
 15375  1E58  00F1               	movwf	I2C1_SetBuffer@bufferSize
 15376  1E59  3F41               	moviw [1]fsr1
 15377  1E5A  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 15378  1E5B  087A               	movf	rdBlkRegCompleteHandler@ptr,w
 15379  1E5C  3E02               	addlw	2
 15380  1E5D  0086               	movwf	6
 15381  1E5E  0187               	clrf	7
 15382  1E5F  0801               	movf	1,w
 15383  1E60  319E  2606  319E   	fcall	_I2C1_SetBuffer
 15384                           
 15385                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 15386  1E63  3000               	movlw	0
 15387  1E64  00F6               	movwf	I2C1_SetDataCompleteCallback@cb
 15388  1E65  00F7               	movwf	I2C1_SetDataCompleteCallback@cb+1
 15389  1E66  01F8               	clrf	I2C1_SetDataCompleteCallback@ptr
 15390  1E67  319D  25EE         	fcall	_I2C1_SetDataCompleteCallback
 15391                           
 15392                           ;mcc_generated_files/examples/i2c1_master_example.c: 174:     return I2C1_RESTART_READ;
 15393  1E69  3002               	movlw	2
 15394  1E6A  0008               	return
 15395  1E6B                     __end_of_rdBlkRegCompleteHandler:	
 15396                           
 15397                           	psect	text71
 15398  1E44                     __ptext71:	
 15399 ;; *************** function _wr1RegCompleteHandler *****************
 15400 ;; Defined at:
 15401 ;;		line 156 in file "mcc_generated_files/examples/i2c1_master_example.c"
 15402 ;; Parameters:    Size  Location     Type
 15403 ;;  ptr             1   10[COMMON] PTR void 
 15404 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 15405 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 15406 ;; Auto vars:     Size  Location     Type
 15407 ;;		None
 15408 ;; Return value:  Size  Location     Type
 15409 ;;                  1    wreg      enum E358
 15410 ;; Registers used:
 15411 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15412 ;; Tracked objects:
 15413 ;;		On entry : 0/0
 15414 ;;		On exit  : 0/0
 15415 ;;		Unchanged: 0/0
 15416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15417 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15420 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15421 ;;Total ram usage:        1 bytes
 15422 ;; Hardware stack levels used:    1
 15423 ;; Hardware stack levels required when called:    6
 15424 ;; This function calls:
 15425 ;;		_I2C1_SetBuffer
 15426 ;;		_I2C1_SetDataCompleteCallback
 15427 ;; This function is called by:
 15428 ;;		_I2C1_Write1ByteRegister
 15429 ;;		_I2C1_DO_TX
 15430 ;;		_I2C1_DO_RX
 15431 ;;		_I2C1_DO_TX_EMPTY
 15432 ;;		_I2C1_DO_ADDRESS_NACK
 15433 ;;		_I2C1_DO_RX_EMPTY
 15434 ;; This function uses a non-reentrant model
 15435 ;;
 15436                           
 15437                           
 15438                           ;psect for function _wr1RegCompleteHandler
 15439  1E44                     _wr1RegCompleteHandler:	
 15440                           
 15441                           ;mcc_generated_files/examples/i2c1_master_example.c: 156: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 157: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetBuffer(ptr,1);
 15442                           
 15443                           ;incstack = 0
 15444                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15445  1E44  3001               	movlw	1
 15446  1E45  00F1               	movwf	I2C1_SetBuffer@bufferSize
 15447  1E46  3000               	movlw	0
 15448  1E47  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 15449  1E48  087A               	movf	wr1RegCompleteHandler@ptr,w
 15450  1E49  319E  2606  319E   	fcall	_I2C1_SetBuffer
 15451                           
 15452                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 15453  1E4C  3000               	movlw	0
 15454  1E4D  00F6               	movwf	I2C1_SetDataCompleteCallback@cb
 15455  1E4E  00F7               	movwf	I2C1_SetDataCompleteCallback@cb+1
 15456  1E4F  01F8               	clrf	I2C1_SetDataCompleteCallback@ptr
 15457  1E50  319D  25EE         	fcall	_I2C1_SetDataCompleteCallback
 15458                           
 15459                           ;mcc_generated_files/examples/i2c1_master_example.c: 160:     return I2C1_CONTINUE;
 15460  1E52  3004               	movlw	4
 15461  1E53  0008               	return
 15462  1E54                     __end_of_wr1RegCompleteHandler:	
 15463                           
 15464                           	psect	text72
 15465  1E34                     __ptext72:	
 15466 ;; *************** function _rd2RegCompleteHandler *****************
 15467 ;; Defined at:
 15468 ;;		line 149 in file "mcc_generated_files/examples/i2c1_master_example.c"
 15469 ;; Parameters:    Size  Location     Type
 15470 ;;  ptr             1   10[COMMON] PTR void 
 15471 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 15472 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 15473 ;; Auto vars:     Size  Location     Type
 15474 ;;		None
 15475 ;; Return value:  Size  Location     Type
 15476 ;;                  1    wreg      enum E358
 15477 ;; Registers used:
 15478 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15479 ;; Tracked objects:
 15480 ;;		On entry : 0/0
 15481 ;;		On exit  : 0/0
 15482 ;;		Unchanged: 0/0
 15483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15484 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15487 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15488 ;;Total ram usage:        1 bytes
 15489 ;; Hardware stack levels used:    1
 15490 ;; Hardware stack levels required when called:    6
 15491 ;; This function calls:
 15492 ;;		_I2C1_SetBuffer
 15493 ;;		_I2C1_SetDataCompleteCallback
 15494 ;; This function is called by:
 15495 ;;		_I2C1_Read2ByteRegister
 15496 ;;		_I2C1_DO_TX
 15497 ;;		_I2C1_DO_RX
 15498 ;;		_I2C1_DO_TX_EMPTY
 15499 ;;		_I2C1_DO_ADDRESS_NACK
 15500 ;;		_I2C1_DO_RX_EMPTY
 15501 ;; This function uses a non-reentrant model
 15502 ;;
 15503                           
 15504                           
 15505                           ;psect for function _rd2RegCompleteHandler
 15506  1E34                     _rd2RegCompleteHandler:	
 15507                           
 15508                           ;mcc_generated_files/examples/i2c1_master_example.c: 149: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 150: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetBuffer(ptr,2);
 15509                           
 15510                           ;incstack = 0
 15511                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15512  1E34  3002               	movlw	2
 15513  1E35  00F1               	movwf	I2C1_SetBuffer@bufferSize
 15514  1E36  3000               	movlw	0
 15515  1E37  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 15516  1E38  087A               	movf	rd2RegCompleteHandler@ptr,w
 15517  1E39  319E  2606  319E   	fcall	_I2C1_SetBuffer
 15518                           
 15519                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 15520  1E3C  3000               	movlw	0
 15521  1E3D  00F6               	movwf	I2C1_SetDataCompleteCallback@cb
 15522  1E3E  00F7               	movwf	I2C1_SetDataCompleteCallback@cb+1
 15523  1E3F  01F8               	clrf	I2C1_SetDataCompleteCallback@ptr
 15524  1E40  319D  25EE         	fcall	_I2C1_SetDataCompleteCallback
 15525                           
 15526                           ;mcc_generated_files/examples/i2c1_master_example.c: 153:     return I2C1_RESTART_READ;
 15527  1E42  3002               	movlw	2
 15528  1E43  0008               	return
 15529  1E44                     __end_of_rd2RegCompleteHandler:	
 15530                           
 15531                           	psect	text73
 15532  1E24                     __ptext73:	
 15533 ;; *************** function _rd1RegCompleteHandler *****************
 15534 ;; Defined at:
 15535 ;;		line 142 in file "mcc_generated_files/examples/i2c1_master_example.c"
 15536 ;; Parameters:    Size  Location     Type
 15537 ;;  ptr             1   10[COMMON] PTR void 
 15538 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 15539 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 15540 ;; Auto vars:     Size  Location     Type
 15541 ;;		None
 15542 ;; Return value:  Size  Location     Type
 15543 ;;                  1    wreg      enum E358
 15544 ;; Registers used:
 15545 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15546 ;; Tracked objects:
 15547 ;;		On entry : 0/0
 15548 ;;		On exit  : 0/0
 15549 ;;		Unchanged: 0/0
 15550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15551 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15554 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15555 ;;Total ram usage:        1 bytes
 15556 ;; Hardware stack levels used:    1
 15557 ;; Hardware stack levels required when called:    6
 15558 ;; This function calls:
 15559 ;;		_I2C1_SetBuffer
 15560 ;;		_I2C1_SetDataCompleteCallback
 15561 ;; This function is called by:
 15562 ;;		_I2C1_Read1ByteRegister
 15563 ;;		_I2C1_DO_TX
 15564 ;;		_I2C1_DO_RX
 15565 ;;		_I2C1_DO_TX_EMPTY
 15566 ;;		_I2C1_DO_ADDRESS_NACK
 15567 ;;		_I2C1_DO_RX_EMPTY
 15568 ;; This function uses a non-reentrant model
 15569 ;;
 15570                           
 15571                           
 15572                           ;psect for function _rd1RegCompleteHandler
 15573  1E24                     _rd1RegCompleteHandler:	
 15574                           
 15575                           ;mcc_generated_files/examples/i2c1_master_example.c: 142: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 143: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 144:     I2C1_SetBuffer(ptr,1);
 15576                           
 15577                           ;incstack = 0
 15578                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15579  1E24  3001               	movlw	1
 15580  1E25  00F1               	movwf	I2C1_SetBuffer@bufferSize
 15581  1E26  3000               	movlw	0
 15582  1E27  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 15583  1E28  087A               	movf	rd1RegCompleteHandler@ptr,w
 15584  1E29  319E  2606  319E   	fcall	_I2C1_SetBuffer
 15585                           
 15586                           ;mcc_generated_files/examples/i2c1_master_example.c: 145:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 15587  1E2C  3000               	movlw	0
 15588  1E2D  00F6               	movwf	I2C1_SetDataCompleteCallback@cb
 15589  1E2E  00F7               	movwf	I2C1_SetDataCompleteCallback@cb+1
 15590  1E2F  01F8               	clrf	I2C1_SetDataCompleteCallback@ptr
 15591  1E30  319D  25EE         	fcall	_I2C1_SetDataCompleteCallback
 15592                           
 15593                           ;mcc_generated_files/examples/i2c1_master_example.c: 146:     return I2C1_RESTART_READ;
 15594  1E32  3002               	movlw	2
 15595  1E33  0008               	return
 15596  1E34                     __end_of_rd1RegCompleteHandler:	
 15597                           
 15598                           	psect	text74
 15599  1E14                     __ptext74:	
 15600 ;; *************** function _wr2RegCompleteHandler *****************
 15601 ;; Defined at:
 15602 ;;		line 163 in file "mcc_generated_files/examples/i2c1_master_example.c"
 15603 ;; Parameters:    Size  Location     Type
 15604 ;;  ptr             1   10[COMMON] PTR void 
 15605 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 15606 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 15607 ;; Auto vars:     Size  Location     Type
 15608 ;;		None
 15609 ;; Return value:  Size  Location     Type
 15610 ;;                  1    wreg      enum E358
 15611 ;; Registers used:
 15612 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15613 ;; Tracked objects:
 15614 ;;		On entry : 0/0
 15615 ;;		On exit  : 0/0
 15616 ;;		Unchanged: 0/0
 15617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15618 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15621 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15622 ;;Total ram usage:        1 bytes
 15623 ;; Hardware stack levels used:    1
 15624 ;; Hardware stack levels required when called:    6
 15625 ;; This function calls:
 15626 ;;		_I2C1_SetBuffer
 15627 ;;		_I2C1_SetDataCompleteCallback
 15628 ;; This function is called by:
 15629 ;;		_I2C1_Write2ByteRegister
 15630 ;;		_I2C1_DO_TX
 15631 ;;		_I2C1_DO_RX
 15632 ;;		_I2C1_DO_TX_EMPTY
 15633 ;;		_I2C1_DO_ADDRESS_NACK
 15634 ;;		_I2C1_DO_RX_EMPTY
 15635 ;; This function uses a non-reentrant model
 15636 ;;
 15637                           
 15638                           
 15639                           ;psect for function _wr2RegCompleteHandler
 15640  1E14                     _wr2RegCompleteHandler:	
 15641                           
 15642                           ;mcc_generated_files/examples/i2c1_master_example.c: 163: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 164: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetBuffer(ptr,2);
 15643                           
 15644                           ;incstack = 0
 15645                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15646  1E14  3002               	movlw	2
 15647  1E15  00F1               	movwf	I2C1_SetBuffer@bufferSize
 15648  1E16  3000               	movlw	0
 15649  1E17  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 15650  1E18  087A               	movf	wr2RegCompleteHandler@ptr,w
 15651  1E19  319E  2606  319E   	fcall	_I2C1_SetBuffer
 15652                           
 15653                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 15654  1E1C  3000               	movlw	0
 15655  1E1D  00F6               	movwf	I2C1_SetDataCompleteCallback@cb
 15656  1E1E  00F7               	movwf	I2C1_SetDataCompleteCallback@cb+1
 15657  1E1F  01F8               	clrf	I2C1_SetDataCompleteCallback@ptr
 15658  1E20  319D  25EE         	fcall	_I2C1_SetDataCompleteCallback
 15659                           
 15660                           ;mcc_generated_files/examples/i2c1_master_example.c: 167:     return I2C1_CONTINUE;
 15661  1E22  3004               	movlw	4
 15662  1E23  0008               	return
 15663  1E24                     __end_of_wr2RegCompleteHandler:	
 15664                           
 15665                           	psect	text75
 15666  1DEE                     __ptext75:	
 15667 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 15668 ;; Defined at:
 15669 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 15670 ;; Parameters:    Size  Location     Type
 15671 ;;  cb              2    6[COMMON] PTR FTN(PTR void ,)enum 
 15672 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 15673 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 15674 ;;  ptr             1    8[COMMON] PTR void 
 15675 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 15676 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 15677 ;; Auto vars:     Size  Location     Type
 15678 ;;		None
 15679 ;; Return value:  Size  Location     Type
 15680 ;;                  1    wreg      void 
 15681 ;; Registers used:
 15682 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15683 ;; Tracked objects:
 15684 ;;		On entry : 0/0
 15685 ;;		On exit  : 0/0
 15686 ;;		Unchanged: 0/0
 15687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15688 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15690 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15691 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15692 ;;Total ram usage:        4 bytes
 15693 ;; Hardware stack levels used:    1
 15694 ;; Hardware stack levels required when called:    5
 15695 ;; This function calls:
 15696 ;;		_I2C1_SetCallback
 15697 ;; This function is called by:
 15698 ;;		_I2C1_Read1ByteRegister
 15699 ;;		_I2C1_Write1ByteRegister
 15700 ;;		_rd1RegCompleteHandler
 15701 ;;		_rd2RegCompleteHandler
 15702 ;;		_wr1RegCompleteHandler
 15703 ;;		_wr2RegCompleteHandler
 15704 ;;		_rdBlkRegCompleteHandler
 15705 ;;		_I2C1_Read2ByteRegister
 15706 ;;		_I2C1_Write2ByteRegister
 15707 ;;		_I2C1_ReadDataBlock
 15708 ;; This function uses a non-reentrant model
 15709 ;;
 15710                           
 15711                           
 15712                           ;psect for function _I2C1_SetDataCompleteCallback
 15713  1DEE                     _I2C1_SetDataCompleteCallback:	
 15714                           
 15715                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 15716                           
 15717                           ;incstack = 0
 15718                           ; Regs used in _I2C1_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 15719  1DEE  0877               	movf	I2C1_SetDataCompleteCallback@cb+1,w
 15720  1DEF  00F2               	movwf	I2C1_SetCallback@cb+1
 15721  1DF0  0876               	movf	I2C1_SetDataCompleteCallback@cb,w
 15722  1DF1  00F1               	movwf	I2C1_SetCallback@cb
 15723  1DF2  0878               	movf	I2C1_SetDataCompleteCallback@ptr,w
 15724  1DF3  00F9               	movwf	??_I2C1_SetDataCompleteCallback
 15725  1DF4  0879               	movf	??_I2C1_SetDataCompleteCallback,w
 15726  1DF5  00F3               	movwf	I2C1_SetCallback@ptr
 15727  1DF6  3000               	movlw	0
 15728  1DF7  3190  2019         	fcall	_I2C1_SetCallback
 15729  1DF9  0008               	return
 15730  1DFA                     __end_of_I2C1_SetDataCompleteCallback:	
 15731                           
 15732                           	psect	text76
 15733  1019                     __ptext76:	
 15734 ;; *************** function _I2C1_SetCallback *****************
 15735 ;; Defined at:
 15736 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 15737 ;; Parameters:    Size  Location     Type
 15738 ;;  idx             1    wreg     enum E7168
 15739 ;;  cb              2    1[COMMON] PTR FTN(PTR void ,)enum 
 15740 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 15741 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 15742 ;;  ptr             1    3[COMMON] PTR void 
 15743 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 15744 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 15745 ;; Auto vars:     Size  Location     Type
 15746 ;;  idx             1    5[COMMON] enum E7168
 15747 ;; Return value:  Size  Location     Type
 15748 ;;                  1    wreg      void 
 15749 ;; Registers used:
 15750 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15751 ;; Tracked objects:
 15752 ;;		On entry : 0/0
 15753 ;;		On exit  : 0/0
 15754 ;;		Unchanged: 0/0
 15755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15756 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15757 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15758 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15759 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15760 ;;Total ram usage:        5 bytes
 15761 ;; Hardware stack levels used:    1
 15762 ;; Hardware stack levels required when called:    4
 15763 ;; This function calls:
 15764 ;;		Nothing
 15765 ;; This function is called by:
 15766 ;;		_I2C1_SetDataCompleteCallback
 15767 ;;		_I2C1_SetAddressNackCallback
 15768 ;;		_I2C1_SetWriteCollisionCallback
 15769 ;;		_I2C1_SetDataNackCallback
 15770 ;;		_I2C1_SetTimeoutCallback
 15771 ;; This function uses a non-reentrant model
 15772 ;;
 15773                           
 15774                           
 15775                           ;psect for function _I2C1_SetCallback
 15776  1019                     _I2C1_SetCallback:	
 15777                           
 15778                           ;incstack = 0
 15779                           ; Regs used in _I2C1_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 15780                           ;I2C1_SetCallback@idx stored from wreg
 15781  1019  00F5               	movwf	I2C1_SetCallback@idx
 15782                           
 15783                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 15784  101A  0871               	movf	I2C1_SetCallback@cb,w
 15785  101B  0472               	iorwf	I2C1_SetCallback@cb+1,w
 15786  101C  1903               	btfsc	3,2
 15787  101D  2831               	goto	l4018
 15788                           
 15789                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 15790  101E  3575               	lslf	I2C1_SetCallback@idx,w
 15791  101F  3EA0               	addlw	(low (_I2C1_Status| (0+256)))& (0+255)
 15792  1020  0086               	movwf	6
 15793  1021  3001               	movlw	1	; select bank3/4
 15794  1022  0087               	movwf	7
 15795  1023  0871               	movf	I2C1_SetCallback@cb,w
 15796  1024  3FC0               	movwi [0]fsr1
 15797  1025  0872               	movf	I2C1_SetCallback@cb+1,w
 15798  1026  3FC1               	movwi [1]fsr1
 15799                           
 15800                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 15801  1027  0873               	movf	I2C1_SetCallback@ptr,w
 15802  1028  00F4               	movwf	??_I2C1_SetCallback
 15803  1029  0875               	movf	I2C1_SetCallback@idx,w
 15804  102A  3EAC               	addlw	(low ((_I2C1_Status| (0+256)+12)))& (0+255)
 15805  102B  0086               	movwf	6
 15806  102C  3001               	movlw	1	; select bank3/4
 15807  102D  0087               	movwf	7
 15808  102E  0874               	movf	??_I2C1_SetCallback,w
 15809  102F  0081               	movwf	1
 15810                           
 15811                           ;mcc_generated_files/i2c1_master.c: 304:     }
 15812  1030  0008               	return
 15813  1031                     l4018:	
 15814                           
 15815                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 15816  1031  3575               	lslf	I2C1_SetCallback@idx,w
 15817  1032  3EA0               	addlw	(low (_I2C1_Status| (0+256)))& (0+255)
 15818  1033  0086               	movwf	6
 15819  1034  3001               	movlw	1	; select bank3/4
 15820  1035  0087               	movwf	7
 15821  1036  30DF               	movlw	low _I2C1_CallbackReturnStop
 15822  1037  3FC0               	movwi [0]fsr1
 15823  1038  301C               	movlw	high _I2C1_CallbackReturnStop
 15824  1039  3FC1               	movwi [1]fsr1
 15825                           
 15826                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 15827  103A  0875               	movf	I2C1_SetCallback@idx,w
 15828  103B  3EAC               	addlw	(low ((_I2C1_Status| (0+256)+12)))& (0+255)
 15829  103C  0086               	movwf	6
 15830  103D  3001               	movlw	1	; select bank3/4
 15831  103E  0087               	movwf	7
 15832  103F  0181               	clrf	1
 15833  1040  0008               	return
 15834  1041                     __end_of_I2C1_SetCallback:	
 15835                           
 15836                           	psect	text77
 15837  1E06                     __ptext77:	
 15838 ;; *************** function _I2C1_SetBuffer *****************
 15839 ;; Defined at:
 15840 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 15841 ;; Parameters:    Size  Location     Type
 15842 ;;  buffer          1    wreg     PTR void 
 15843 ;;		 -> I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteReg
      +ister@data(2), 
 15844 ;;		 -> I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRe
      +gister@returnValue(2), 
 15845 ;;		 -> NULL(0), I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), 
 15846 ;;  bufferSize      2    1[COMMON] unsigned int 
 15847 ;; Auto vars:     Size  Location     Type
 15848 ;;  buffer          1    4[COMMON] PTR void 
 15849 ;;		 -> I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteReg
      +ister@data(2), 
 15850 ;;		 -> I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRe
      +gister@returnValue(2), 
 15851 ;;		 -> NULL(0), I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), 
 15852 ;; Return value:  Size  Location     Type
 15853 ;;                  1    wreg      void 
 15854 ;; Registers used:
 15855 ;;		wreg
 15856 ;; Tracked objects:
 15857 ;;		On entry : 0/0
 15858 ;;		On exit  : 0/0
 15859 ;;		Unchanged: 0/0
 15860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15861 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15862 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15863 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15864 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15865 ;;Total ram usage:        4 bytes
 15866 ;; Hardware stack levels used:    1
 15867 ;; Hardware stack levels required when called:    4
 15868 ;; This function calls:
 15869 ;;		Nothing
 15870 ;; This function is called by:
 15871 ;;		_I2C1_Read1ByteRegister
 15872 ;;		_I2C1_Write1ByteRegister
 15873 ;;		_rd1RegCompleteHandler
 15874 ;;		_rd2RegCompleteHandler
 15875 ;;		_wr1RegCompleteHandler
 15876 ;;		_wr2RegCompleteHandler
 15877 ;;		_rdBlkRegCompleteHandler
 15878 ;;		_I2C1_Read2ByteRegister
 15879 ;;		_I2C1_Write2ByteRegister
 15880 ;;		_I2C1_WriteNBytes
 15881 ;;		_I2C1_ReadNBytes
 15882 ;;		_I2C1_ReadDataBlock
 15883 ;; This function uses a non-reentrant model
 15884 ;;
 15885                           
 15886                           
 15887                           ;psect for function _I2C1_SetBuffer
 15888  1E06                     _I2C1_SetBuffer:	
 15889                           
 15890                           ;incstack = 0
 15891                           ; Regs used in _I2C1_SetBuffer: [wreg]
 15892                           ;I2C1_SetBuffer@buffer stored from wreg
 15893  1E06  00F4               	movwf	I2C1_SetBuffer@buffer
 15894                           
 15895                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 15896  1E07  0023               	movlb	3	; select bank3
 15897  1E08  1DBC               	btfss	(_I2C1_Status^(0+384)+28),3
 15898  1E09  0008               	return
 15899                           
 15900                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 15901  1E0A  0874               	movf	I2C1_SetBuffer@buffer,w
 15902  1E0B  00F3               	movwf	??_I2C1_SetBuffer
 15903  1E0C  0873               	movf	??_I2C1_SetBuffer,w
 15904  1E0D  00B7               	movwf	(low ((_I2C1_Status| (0+256)+23)))^(0+128)
 15905                           
 15906                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 15907  1E0E  0872               	movf	I2C1_SetBuffer@bufferSize+1,w
 15908  1E0F  00B9               	movwf	((_I2C1_Status+1)^(0+384)+24)
 15909  1E10  0871               	movf	I2C1_SetBuffer@bufferSize,w
 15910  1E11  00B8               	movwf	(_I2C1_Status^(0+384)+24)
 15911                           
 15912                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 15913  1E12  11BC               	bcf	(_I2C1_Status^(0+384)+28),3
 15914  1E13  0008               	return
 15915  1E14                     __end_of_I2C1_SetBuffer:	
 15916                           
 15917                           	psect	text78
 15918  1CF3                     __ptext78:	
 15919 ;; *************** function _I2C1_MasterStop *****************
 15920 ;; Defined at:
 15921 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 15922 ;; Parameters:    Size  Location     Type
 15923 ;;		None
 15924 ;; Auto vars:     Size  Location     Type
 15925 ;;		None
 15926 ;; Return value:  Size  Location     Type
 15927 ;;                  1    wreg      void 
 15928 ;; Registers used:
 15929 ;;		None
 15930 ;; Tracked objects:
 15931 ;;		On entry : 0/0
 15932 ;;		On exit  : 0/0
 15933 ;;		Unchanged: 0/0
 15934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15939 ;;Total ram usage:        0 bytes
 15940 ;; Hardware stack levels used:    1
 15941 ;; Hardware stack levels required when called:    4
 15942 ;; This function calls:
 15943 ;;		Nothing
 15944 ;; This function is called by:
 15945 ;;		_I2C1_DO_SEND_STOP
 15946 ;; This function uses a non-reentrant model
 15947 ;;
 15948                           
 15949                           
 15950                           ;psect for function _I2C1_MasterStop
 15951  1CF3                     _I2C1_MasterStop:	
 15952                           
 15953                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 15954                           
 15955                           ;incstack = 0
 15956                           ; Regs used in _I2C1_MasterStop: []
 15957  1CF3  0024               	movlb	4	; select bank4
 15958  1CF4  1516               	bsf	22,2	;volatile
 15959  1CF5  0008               	return
 15960  1CF6                     __end_of_I2C1_MasterStop:	
 15961                           
 15962                           	psect	text79
 15963  1CF0                     __ptext79:	
 15964 ;; *************** function _I2C1_MasterEnableRestart *****************
 15965 ;; Defined at:
 15966 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 15967 ;; Parameters:    Size  Location     Type
 15968 ;;		None
 15969 ;; Auto vars:     Size  Location     Type
 15970 ;;		None
 15971 ;; Return value:  Size  Location     Type
 15972 ;;                  1    wreg      void 
 15973 ;; Registers used:
 15974 ;;		None
 15975 ;; Tracked objects:
 15976 ;;		On entry : 0/0
 15977 ;;		On exit  : 0/0
 15978 ;;		Unchanged: 0/0
 15979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15984 ;;Total ram usage:        0 bytes
 15985 ;; Hardware stack levels used:    1
 15986 ;; Hardware stack levels required when called:    4
 15987 ;; This function calls:
 15988 ;;		Nothing
 15989 ;; This function is called by:
 15990 ;;		_I2C1_DO_SEND_RESTART_READ
 15991 ;;		_I2C1_DO_SEND_RESTART_WRITE
 15992 ;;		_I2C1_DO_SEND_RESTART
 15993 ;;		_I2C1_DO_RX_EMPTY
 15994 ;; This function uses a non-reentrant model
 15995 ;;
 15996                           
 15997                           
 15998                           ;psect for function _I2C1_MasterEnableRestart
 15999  1CF0                     _I2C1_MasterEnableRestart:	
 16000                           
 16001                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 16002                           
 16003                           ;incstack = 0
 16004                           ; Regs used in _I2C1_MasterEnableRestart: []
 16005  1CF0  0024               	movlb	4	; select bank4
 16006  1CF1  1496               	bsf	22,1	;volatile
 16007  1CF2  0008               	return
 16008  1CF3                     __end_of_I2C1_MasterEnableRestart:	
 16009                           
 16010                           	psect	text80
 16011  1CED                     __ptext80:	
 16012 ;; *************** function _I2C1_MasterStart *****************
 16013 ;; Defined at:
 16014 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 16015 ;; Parameters:    Size  Location     Type
 16016 ;;		None
 16017 ;; Auto vars:     Size  Location     Type
 16018 ;;		None
 16019 ;; Return value:  Size  Location     Type
 16020 ;;                  1    wreg      void 
 16021 ;; Registers used:
 16022 ;;		None
 16023 ;; Tracked objects:
 16024 ;;		On entry : 0/0
 16025 ;;		On exit  : 0/0
 16026 ;;		Unchanged: 0/0
 16027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16032 ;;Total ram usage:        0 bytes
 16033 ;; Hardware stack levels used:    1
 16034 ;; Hardware stack levels required when called:    4
 16035 ;; This function calls:
 16036 ;;		Nothing
 16037 ;; This function is called by:
 16038 ;;		_I2C1_MasterOperation
 16039 ;; This function uses a non-reentrant model
 16040 ;;
 16041                           
 16042                           
 16043                           ;psect for function _I2C1_MasterStart
 16044  1CED                     _I2C1_MasterStart:	
 16045                           
 16046                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 16047                           
 16048                           ;incstack = 0
 16049                           ; Regs used in _I2C1_MasterStart: []
 16050  1CED  0024               	movlb	4	; select bank4
 16051  1CEE  1416               	bsf	22,0	;volatile
 16052  1CEF  0008               	return
 16053  1CF0                     __end_of_I2C1_MasterStart:	
 16054                           
 16055                           	psect	text81
 16056  1000                     __ptext81:	
 16057 ;; *************** function _I2C1_Close *****************
 16058 ;; Defined at:
 16059 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 16060 ;; Parameters:    Size  Location     Type
 16061 ;;		None
 16062 ;; Auto vars:     Size  Location     Type
 16063 ;;  returnValue     1    2[COMMON] enum E353
 16064 ;; Return value:  Size  Location     Type
 16065 ;;                  1    wreg      enum E353
 16066 ;; Registers used:
 16067 ;;		wreg, status,2, status,0, pclath, cstack
 16068 ;; Tracked objects:
 16069 ;;		On entry : 0/0
 16070 ;;		On exit  : 0/0
 16071 ;;		Unchanged: 0/0
 16072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16074 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16075 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16076 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16077 ;;Total ram usage:        2 bytes
 16078 ;; Hardware stack levels used:    1
 16079 ;; Hardware stack levels required when called:    5
 16080 ;; This function calls:
 16081 ;;		_I2C1_MasterClearIrq
 16082 ;;		_I2C1_MasterClose
 16083 ;;		_I2C1_MasterDisableIrq
 16084 ;; This function is called by:
 16085 ;;		_I2C1_Read1ByteRegister
 16086 ;;		_I2C1_Write1ByteRegister
 16087 ;;		_I2C1_Read2ByteRegister
 16088 ;;		_I2C1_Write2ByteRegister
 16089 ;;		_I2C1_WriteNBytes
 16090 ;;		_I2C1_ReadNBytes
 16091 ;;		_I2C1_ReadDataBlock
 16092 ;; This function uses a non-reentrant model
 16093 ;;
 16094                           
 16095                           
 16096                           ;psect for function _I2C1_Close
 16097  1000                     _I2C1_Close:	
 16098                           
 16099                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 16100                           
 16101                           ;incstack = 0
 16102                           ; Regs used in _I2C1_Close: [wreg+status,2+status,0+pclath+cstack]
 16103  1000  01F2               	clrf	I2C1_Close@returnValue
 16104  1001  0AF2               	incf	I2C1_Close@returnValue,f
 16105                           
 16106                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 16107  1002  0023               	movlb	3	; select bank3
 16108  1003  18BC               	btfsc	(_I2C1_Status^(0+384)+28),1
 16109  1004  2817               	goto	l5566
 16110                           
 16111                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 16112  1005  113C               	bcf	(_I2C1_Status^(0+384)+28),2
 16113                           
 16114                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 16115  1006  30FF               	movlw	255
 16116  1007  00F1               	movwf	??_I2C1_Close
 16117  1008  0871               	movf	??_I2C1_Close,w
 16118  1009  00B6               	movwf	(_I2C1_Status^(0+384)+22)
 16119                           
 16120                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 16121  100A  319C  24E4  3190   	fcall	_I2C1_MasterClearIrq
 16122                           
 16123                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 16124  100D  319C  24EA  3190   	fcall	_I2C1_MasterDisableIrq
 16125                           
 16126                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 16127  1010  319C  24E7         	fcall	_I2C1_MasterClose
 16128                           
 16129                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 16130  1012  0023               	movlb	3	; select bank3
 16131  1013  083B               	movf	(_I2C1_Status^(0+384)+27),w
 16132  1014  00F1               	movwf	??_I2C1_Close
 16133  1015  0871               	movf	??_I2C1_Close,w
 16134  1016  00F2               	movwf	I2C1_Close@returnValue
 16135  1017                     l5566:	
 16136                           
 16137                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 16138  1017  0872               	movf	I2C1_Close@returnValue,w
 16139  1018  0008               	return
 16140  1019                     __end_of_I2C1_Close:	
 16141                           
 16142                           	psect	text82
 16143  1CEA                     __ptext82:	
 16144 ;; *************** function _I2C1_MasterDisableIrq *****************
 16145 ;; Defined at:
 16146 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 16147 ;; Parameters:    Size  Location     Type
 16148 ;;		None
 16149 ;; Auto vars:     Size  Location     Type
 16150 ;;		None
 16151 ;; Return value:  Size  Location     Type
 16152 ;;                  1    wreg      void 
 16153 ;; Registers used:
 16154 ;;		None
 16155 ;; Tracked objects:
 16156 ;;		On entry : 0/0
 16157 ;;		On exit  : 0/0
 16158 ;;		Unchanged: 0/0
 16159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16164 ;;Total ram usage:        0 bytes
 16165 ;; Hardware stack levels used:    1
 16166 ;; Hardware stack levels required when called:    4
 16167 ;; This function calls:
 16168 ;;		Nothing
 16169 ;; This function is called by:
 16170 ;;		_I2C1_Close
 16171 ;;		_I2C1_SetTimeOut
 16172 ;; This function uses a non-reentrant model
 16173 ;;
 16174                           
 16175                           
 16176                           ;psect for function _I2C1_MasterDisableIrq
 16177  1CEA                     _I2C1_MasterDisableIrq:	
 16178                           
 16179                           ;mcc_generated_files/i2c1_master.c: 637:     PIE1bits.SSP1IE = 0;
 16180                           
 16181                           ;incstack = 0
 16182                           ; Regs used in _I2C1_MasterDisableIrq: []
 16183  1CEA  0021               	movlb	1	; select bank1
 16184  1CEB  1191               	bcf	17,3	;volatile
 16185  1CEC  0008               	return
 16186  1CED                     __end_of_I2C1_MasterDisableIrq:	
 16187                           
 16188                           	psect	text83
 16189  1CE7                     __ptext83:	
 16190 ;; *************** function _I2C1_MasterClose *****************
 16191 ;; Defined at:
 16192 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 16193 ;; Parameters:    Size  Location     Type
 16194 ;;		None
 16195 ;; Auto vars:     Size  Location     Type
 16196 ;;		None
 16197 ;; Return value:  Size  Location     Type
 16198 ;;                  1    wreg      void 
 16199 ;; Registers used:
 16200 ;;		None
 16201 ;; Tracked objects:
 16202 ;;		On entry : 0/0
 16203 ;;		On exit  : 0/0
 16204 ;;		Unchanged: 0/0
 16205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16210 ;;Total ram usage:        0 bytes
 16211 ;; Hardware stack levels used:    1
 16212 ;; Hardware stack levels required when called:    4
 16213 ;; This function calls:
 16214 ;;		Nothing
 16215 ;; This function is called by:
 16216 ;;		_I2C1_Close
 16217 ;; This function uses a non-reentrant model
 16218 ;;
 16219                           
 16220                           
 16221                           ;psect for function _I2C1_MasterClose
 16222  1CE7                     _I2C1_MasterClose:	
 16223                           
 16224                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 16225                           
 16226                           ;incstack = 0
 16227                           ; Regs used in _I2C1_MasterClose: []
 16228  1CE7  0024               	movlb	4	; select bank4
 16229  1CE8  1295               	bcf	21,5	;volatile
 16230  1CE9  0008               	return
 16231  1CEA                     __end_of_I2C1_MasterClose:	
 16232                           
 16233                           	psect	text84
 16234  1CE4                     __ptext84:	
 16235 ;; *************** function _I2C1_MasterClearIrq *****************
 16236 ;; Defined at:
 16237 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 16238 ;; Parameters:    Size  Location     Type
 16239 ;;		None
 16240 ;; Auto vars:     Size  Location     Type
 16241 ;;		None
 16242 ;; Return value:  Size  Location     Type
 16243 ;;                  1    wreg      void 
 16244 ;; Registers used:
 16245 ;;		None
 16246 ;; Tracked objects:
 16247 ;;		On entry : 0/0
 16248 ;;		On exit  : 0/0
 16249 ;;		Unchanged: 0/0
 16250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16255 ;;Total ram usage:        0 bytes
 16256 ;; Hardware stack levels used:    1
 16257 ;; Hardware stack levels required when called:    4
 16258 ;; This function calls:
 16259 ;;		Nothing
 16260 ;; This function is called by:
 16261 ;;		_I2C1_Open
 16262 ;;		_I2C1_Close
 16263 ;;		_I2C1_MasterFsm
 16264 ;; This function uses a non-reentrant model
 16265 ;;
 16266                           
 16267                           
 16268                           ;psect for function _I2C1_MasterClearIrq
 16269  1CE4                     _I2C1_MasterClearIrq:	
 16270                           
 16271                           ;mcc_generated_files/i2c1_master.c: 642:     PIR1bits.SSP1IF = 0;
 16272                           
 16273                           ;incstack = 0
 16274                           ; Regs used in _I2C1_MasterClearIrq: []
 16275  1CE4  0020               	movlb	0	; select bank0
 16276  1CE5  1191               	bcf	17,3	;volatile
 16277  1CE6  0008               	return
 16278  1CE7                     __end_of_I2C1_MasterClearIrq:	
 16279                           
 16280                           	psect	text85
 16281  1EB1                     __ptext85:	
 16282 ;; *************** function _SYSTEM_Initialize *****************
 16283 ;; Defined at:
 16284 ;;		line 50 in file "mcc_generated_files/mcc.c"
 16285 ;; Parameters:    Size  Location     Type
 16286 ;;		None
 16287 ;; Auto vars:     Size  Location     Type
 16288 ;;		None
 16289 ;; Return value:  Size  Location     Type
 16290 ;;                  1    wreg      void 
 16291 ;; Registers used:
 16292 ;;		wreg, status,2, status,0, pclath, cstack
 16293 ;; Tracked objects:
 16294 ;;		On entry : 0/0
 16295 ;;		On exit  : 0/0
 16296 ;;		Unchanged: 0/0
 16297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16302 ;;Total ram usage:        0 bytes
 16303 ;; Hardware stack levels used:    1
 16304 ;; Hardware stack levels required when called:    6
 16305 ;; This function calls:
 16306 ;;		_EUSART_Initialize
 16307 ;;		_I2C1_Initialize
 16308 ;;		_OSCILLATOR_Initialize
 16309 ;;		_PIN_MANAGER_Initialize
 16310 ;;		_PMD_Initialize
 16311 ;;		_PWM5_Initialize
 16312 ;;		_TMR2_Initialize
 16313 ;;		_WDT_Initialize
 16314 ;; This function is called by:
 16315 ;;		_main
 16316 ;; This function uses a non-reentrant model
 16317 ;;
 16318                           
 16319                           
 16320                           ;psect for function _SYSTEM_Initialize
 16321  1EB1                     _SYSTEM_Initialize:	
 16322                           
 16323                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 16324                           
 16325                           ;incstack = 0
 16326                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16327  1EB1  319D  2586  319E   	fcall	_PMD_Initialize
 16328                           
 16329                           ;mcc_generated_files/mcc.c: 54:     I2C1_Initialize();
 16330  1EB4  319D  259E  319E   	fcall	_I2C1_Initialize
 16331                           
 16332                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 16333  1EB7  3191  21C6  319E   	fcall	_PIN_MANAGER_Initialize
 16334                           
 16335                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 16336  1EBA  319D  25A7  319E   	fcall	_OSCILLATOR_Initialize
 16337                           
 16338                           ;mcc_generated_files/mcc.c: 57:     WDT_Initialize();
 16339  1EBD  319D  2506  319E   	fcall	_WDT_Initialize
 16340                           
 16341                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 16342  1EC0  319D  258E  319E   	fcall	_TMR2_Initialize
 16343                           
 16344                           ;mcc_generated_files/mcc.c: 59:     PWM5_Initialize();
 16345  1EC3  319D  25E2  319E   	fcall	_PWM5_Initialize
 16346                           
 16347                           ;mcc_generated_files/mcc.c: 60:     EUSART_Initialize();
 16348  1EC6  3192  223E         	fcall	_EUSART_Initialize
 16349  1EC8  0008               	return
 16350  1EC9                     __end_of_SYSTEM_Initialize:	
 16351                           
 16352                           	psect	text86
 16353  1D06                     __ptext86:	
 16354 ;; *************** function _WDT_Initialize *****************
 16355 ;; Defined at:
 16356 ;;		line 77 in file "mcc_generated_files/mcc.c"
 16357 ;; Parameters:    Size  Location     Type
 16358 ;;		None
 16359 ;; Auto vars:     Size  Location     Type
 16360 ;;		None
 16361 ;; Return value:  Size  Location     Type
 16362 ;;                  1    wreg      void 
 16363 ;; Registers used:
 16364 ;;		wreg
 16365 ;; Tracked objects:
 16366 ;;		On entry : 0/0
 16367 ;;		On exit  : 0/0
 16368 ;;		Unchanged: 0/0
 16369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16374 ;;Total ram usage:        0 bytes
 16375 ;; Hardware stack levels used:    1
 16376 ;; Hardware stack levels required when called:    4
 16377 ;; This function calls:
 16378 ;;		Nothing
 16379 ;; This function is called by:
 16380 ;;		_SYSTEM_Initialize
 16381 ;; This function uses a non-reentrant model
 16382 ;;
 16383                           
 16384                           
 16385                           ;psect for function _WDT_Initialize
 16386  1D06                     _WDT_Initialize:	
 16387                           
 16388                           ;mcc_generated_files/mcc.c: 80:     WDTCON = 0x16;
 16389                           
 16390                           ;incstack = 0
 16391                           ; Regs used in _WDT_Initialize: [wreg]
 16392  1D06  3016               	movlw	22
 16393  1D07  0021               	movlb	1	; select bank1
 16394  1D08  0097               	movwf	23	;volatile
 16395  1D09  0008               	return
 16396  1D0A                     __end_of_WDT_Initialize:	
 16397                           
 16398                           	psect	text87
 16399  1D8E                     __ptext87:	
 16400 ;; *************** function _TMR2_Initialize *****************
 16401 ;; Defined at:
 16402 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 16403 ;; Parameters:    Size  Location     Type
 16404 ;;		None
 16405 ;; Auto vars:     Size  Location     Type
 16406 ;;		None
 16407 ;; Return value:  Size  Location     Type
 16408 ;;                  1    wreg      void 
 16409 ;; Registers used:
 16410 ;;		wreg, status,2
 16411 ;; Tracked objects:
 16412 ;;		On entry : 0/0
 16413 ;;		On exit  : 0/0
 16414 ;;		Unchanged: 0/0
 16415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16420 ;;Total ram usage:        0 bytes
 16421 ;; Hardware stack levels used:    1
 16422 ;; Hardware stack levels required when called:    4
 16423 ;; This function calls:
 16424 ;;		Nothing
 16425 ;; This function is called by:
 16426 ;;		_SYSTEM_Initialize
 16427 ;; This function uses a non-reentrant model
 16428 ;;
 16429                           
 16430                           
 16431                           ;psect for function _TMR2_Initialize
 16432  1D8E                     _TMR2_Initialize:	
 16433                           
 16434                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0x68;
 16435                           
 16436                           ;incstack = 0
 16437                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 16438  1D8E  3068               	movlw	104
 16439  1D8F  0020               	movlb	0	; select bank0
 16440  1D90  009E               	movwf	30	;volatile
 16441                           
 16442                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
 16443  1D91  019D               	clrf	29	;volatile
 16444                           
 16445                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
 16446  1D92  1091               	bcf	17,1	;volatile
 16447                           
 16448                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x05;
 16449  1D93  3005               	movlw	5
 16450  1D94  009F               	movwf	31	;volatile
 16451  1D95  0008               	return
 16452  1D96                     __end_of_TMR2_Initialize:	
 16453                           
 16454                           	psect	text88
 16455  1DE2                     __ptext88:	
 16456 ;; *************** function _PWM5_Initialize *****************
 16457 ;; Defined at:
 16458 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 16459 ;; Parameters:    Size  Location     Type
 16460 ;;		None
 16461 ;; Auto vars:     Size  Location     Type
 16462 ;;		None
 16463 ;; Return value:  Size  Location     Type
 16464 ;;                  1    wreg      void 
 16465 ;; Registers used:
 16466 ;;		wreg, status,2, status,0
 16467 ;; Tracked objects:
 16468 ;;		On entry : 0/0
 16469 ;;		On exit  : 0/0
 16470 ;;		Unchanged: 0/0
 16471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16476 ;;Total ram usage:        0 bytes
 16477 ;; Hardware stack levels used:    1
 16478 ;; Hardware stack levels required when called:    4
 16479 ;; This function calls:
 16480 ;;		Nothing
 16481 ;; This function is called by:
 16482 ;;		_SYSTEM_Initialize
 16483 ;; This function uses a non-reentrant model
 16484 ;;
 16485                           
 16486                           
 16487                           ;psect for function _PWM5_Initialize
 16488  1DE2                     _PWM5_Initialize:	
 16489                           
 16490                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
 16491                           
 16492                           ;incstack = 0
 16493                           ; Regs used in _PWM5_Initialize: [wreg+status,2+status,0]
 16494  1DE2  3080               	movlw	128
 16495  1DE3  002C               	movlb	12	; select bank12
 16496  1DE4  0099               	movwf	25	;volatile
 16497                           
 16498                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x34;
 16499  1DE5  3034               	movlw	52
 16500  1DE6  0098               	movwf	24	;volatile
 16501                           
 16502                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x40;
 16503  1DE7  3040               	movlw	64
 16504  1DE8  0097               	movwf	23	;volatile
 16505                           
 16506                           ;mcc_generated_files/pwm5.c: 71:     PWMTMRSbits.P5TSEL = 1;
 16507  1DE9  081F               	movf	31,w	;volatile
 16508  1DEA  39FC               	andlw	-4
 16509  1DEB  3801               	iorlw	1
 16510  1DEC  009F               	movwf	31	;volatile
 16511  1DED  0008               	return
 16512  1DEE                     __end_of_PWM5_Initialize:	
 16513                           
 16514                           	psect	text89
 16515  1D86                     __ptext89:	
 16516 ;; *************** function _PMD_Initialize *****************
 16517 ;; Defined at:
 16518 ;;		line 83 in file "mcc_generated_files/mcc.c"
 16519 ;; Parameters:    Size  Location     Type
 16520 ;;		None
 16521 ;; Auto vars:     Size  Location     Type
 16522 ;;		None
 16523 ;; Return value:  Size  Location     Type
 16524 ;;                  1    wreg      void 
 16525 ;; Registers used:
 16526 ;;		status,2
 16527 ;; Tracked objects:
 16528 ;;		On entry : 0/0
 16529 ;;		On exit  : 0/0
 16530 ;;		Unchanged: 0/0
 16531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16536 ;;Total ram usage:        0 bytes
 16537 ;; Hardware stack levels used:    1
 16538 ;; Hardware stack levels required when called:    4
 16539 ;; This function calls:
 16540 ;;		Nothing
 16541 ;; This function is called by:
 16542 ;;		_SYSTEM_Initialize
 16543 ;; This function uses a non-reentrant model
 16544 ;;
 16545                           
 16546                           
 16547                           ;psect for function _PMD_Initialize
 16548  1D86                     _PMD_Initialize:	
 16549                           
 16550                           ;mcc_generated_files/mcc.c: 86:     PMD0 = 0x00;
 16551                           
 16552                           ;incstack = 0
 16553                           ; Regs used in _PMD_Initialize: [status,2]
 16554  1D86  0032               	movlb	18	; select bank18
 16555  1D87  0191               	clrf	17	;volatile
 16556                           
 16557                           ;mcc_generated_files/mcc.c: 88:     PMD1 = 0x00;
 16558  1D88  0192               	clrf	18	;volatile
 16559                           
 16560                           ;mcc_generated_files/mcc.c: 90:     PMD2 = 0x00;
 16561  1D89  0193               	clrf	19	;volatile
 16562                           
 16563                           ;mcc_generated_files/mcc.c: 92:     PMD3 = 0x00;
 16564  1D8A  0194               	clrf	20	;volatile
 16565                           
 16566                           ;mcc_generated_files/mcc.c: 94:     PMD4 = 0x00;
 16567  1D8B  0195               	clrf	21	;volatile
 16568                           
 16569                           ;mcc_generated_files/mcc.c: 96:     PMD5 = 0x00;
 16570  1D8C  0196               	clrf	22	;volatile
 16571  1D8D  0008               	return
 16572  1D8E                     __end_of_PMD_Initialize:	
 16573                           
 16574                           	psect	text90
 16575  11C6                     __ptext90:	
 16576 ;; *************** function _PIN_MANAGER_Initialize *****************
 16577 ;; Defined at:
 16578 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 16579 ;; Parameters:    Size  Location     Type
 16580 ;;		None
 16581 ;; Auto vars:     Size  Location     Type
 16582 ;;		None
 16583 ;; Return value:  Size  Location     Type
 16584 ;;                  1    wreg      void 
 16585 ;; Registers used:
 16586 ;;		wreg, status,2
 16587 ;; Tracked objects:
 16588 ;;		On entry : 0/0
 16589 ;;		On exit  : 0/0
 16590 ;;		Unchanged: 0/0
 16591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16596 ;;Total ram usage:        0 bytes
 16597 ;; Hardware stack levels used:    1
 16598 ;; Hardware stack levels required when called:    4
 16599 ;; This function calls:
 16600 ;;		Nothing
 16601 ;; This function is called by:
 16602 ;;		_SYSTEM_Initialize
 16603 ;; This function uses a non-reentrant model
 16604 ;;
 16605                           
 16606                           
 16607                           ;psect for function _PIN_MANAGER_Initialize
 16608  11C6                     _PIN_MANAGER_Initialize:	
 16609                           
 16610                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 16611                           
 16612                           ;incstack = 0
 16613                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 16614  11C6  0022               	movlb	2	; select bank2
 16615  11C7  018C               	clrf	12	;volatile
 16616                           
 16617                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 16618  11C8  018D               	clrf	13	;volatile
 16619                           
 16620                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 16621  11C9  018E               	clrf	14	;volatile
 16622                           
 16623                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x33;
 16624  11CA  3033               	movlw	51
 16625  11CB  0021               	movlb	1	; select bank1
 16626  11CC  008C               	movwf	12	;volatile
 16627                           
 16628                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x70;
 16629  11CD  3070               	movlw	112
 16630  11CE  008D               	movwf	13	;volatile
 16631                           
 16632                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x9D;
 16633  11CF  309D               	movlw	157
 16634  11D0  008E               	movwf	14	;volatile
 16635                           
 16636                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xF7;
 16637  11D1  30F7               	movlw	247
 16638  11D2  0023               	movlb	3	; select bank3
 16639  11D3  008E               	movwf	14	;volatile
 16640                           
 16641                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x80;
 16642  11D4  3080               	movlw	128
 16643  11D5  008D               	movwf	13	;volatile
 16644                           
 16645                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x27;
 16646  11D6  3027               	movlw	39
 16647  11D7  008C               	movwf	12	;volatile
 16648                           
 16649                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x50;
 16650  11D8  3050               	movlw	80
 16651  11D9  0024               	movlb	4	; select bank4
 16652  11DA  008D               	movwf	13	;volatile
 16653                           
 16654                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
 16655  11DB  018C               	clrf	12	;volatile
 16656                           
 16657                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
 16658  11DC  018E               	clrf	14	;volatile
 16659                           
 16660                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
 16661  11DD  0025               	movlb	5	; select bank5
 16662  11DE  018C               	clrf	12	;volatile
 16663                           
 16664                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
 16665  11DF  018D               	clrf	13	;volatile
 16666                           
 16667                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
 16668  11E0  018E               	clrf	14	;volatile
 16669                           
 16670                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
 16671  11E1  3037               	movlw	55
 16672  11E2  0026               	movlb	6	; select bank6
 16673  11E3  008C               	movwf	12	;volatile
 16674                           
 16675                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
 16676  11E4  30F0               	movlw	240
 16677  11E5  008D               	movwf	13	;volatile
 16678                           
 16679                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
 16680  11E6  30FF               	movlw	255
 16681  11E7  008E               	movwf	14	;volatile
 16682                           
 16683                           ;mcc_generated_files/pin_manager.c: 102:     INLVLA = 0x3F;
 16684  11E8  303F               	movlw	63
 16685  11E9  0027               	movlb	7	; select bank7
 16686  11EA  008C               	movwf	12	;volatile
 16687                           
 16688                           ;mcc_generated_files/pin_manager.c: 103:     INLVLB = 0xF0;
 16689  11EB  30F0               	movlw	240
 16690  11EC  008D               	movwf	13	;volatile
 16691                           
 16692                           ;mcc_generated_files/pin_manager.c: 104:     INLVLC = 0xFF;
 16693  11ED  30FF               	movlw	255
 16694  11EE  008E               	movwf	14	;volatile
 16695                           
 16696                           ;mcc_generated_files/pin_manager.c: 113:     RXPPS = 0x0D;
 16697  11EF  300D               	movlw	13
 16698  11F0  003C               	movlb	28	; select bank28
 16699  11F1  00A4               	movwf	36	;volatile
 16700                           
 16701                           ;mcc_generated_files/pin_manager.c: 114:     SSP1CLKPPS = 0x0E;
 16702  11F2  300E               	movlw	14
 16703  11F3  00A0               	movwf	32	;volatile
 16704                           
 16705                           ;mcc_generated_files/pin_manager.c: 115:     RB6PPS = 0x18;
 16706  11F4  3018               	movlw	24
 16707  11F5  003D               	movlb	29	; select bank29
 16708  11F6  009E               	movwf	30	;volatile
 16709                           
 16710                           ;mcc_generated_files/pin_manager.c: 116:     RB7PPS = 0x14;
 16711  11F7  3014               	movlw	20
 16712  11F8  009F               	movwf	31	;volatile
 16713                           
 16714                           ;mcc_generated_files/pin_manager.c: 117:     RB4PPS = 0x19;
 16715  11F9  3019               	movlw	25
 16716  11FA  009C               	movwf	28	;volatile
 16717                           
 16718                           ;mcc_generated_files/pin_manager.c: 118:     RC6PPS = 0x02;
 16719  11FB  3002               	movlw	2
 16720  11FC  00A6               	movwf	38	;volatile
 16721                           
 16722                           ;mcc_generated_files/pin_manager.c: 119:     SSP1DATPPS = 0x0C;
 16723  11FD  300C               	movlw	12
 16724  11FE  003C               	movlb	28	; select bank28
 16725  11FF  00A1               	movwf	33	;volatile
 16726  1200  0008               	return
 16727  1201                     __end_of_PIN_MANAGER_Initialize:	
 16728                           
 16729                           	psect	text91
 16730  1DA7                     __ptext91:	
 16731 ;; *************** function _OSCILLATOR_Initialize *****************
 16732 ;; Defined at:
 16733 ;;		line 63 in file "mcc_generated_files/mcc.c"
 16734 ;; Parameters:    Size  Location     Type
 16735 ;;		None
 16736 ;; Auto vars:     Size  Location     Type
 16737 ;;		None
 16738 ;; Return value:  Size  Location     Type
 16739 ;;                  1    wreg      void 
 16740 ;; Registers used:
 16741 ;;		wreg, status,2
 16742 ;; Tracked objects:
 16743 ;;		On entry : 0/0
 16744 ;;		On exit  : 0/0
 16745 ;;		Unchanged: 0/0
 16746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16751 ;;Total ram usage:        0 bytes
 16752 ;; Hardware stack levels used:    1
 16753 ;; Hardware stack levels required when called:    4
 16754 ;; This function calls:
 16755 ;;		Nothing
 16756 ;; This function is called by:
 16757 ;;		_SYSTEM_Initialize
 16758 ;; This function uses a non-reentrant model
 16759 ;;
 16760                           
 16761                           
 16762                           ;psect for function _OSCILLATOR_Initialize
 16763  1DA7                     _OSCILLATOR_Initialize:	
 16764                           
 16765                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x60;
 16766                           
 16767                           ;incstack = 0
 16768                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 16769  1DA7  3060               	movlw	96
 16770  1DA8  0032               	movlb	18	; select bank18
 16771  1DA9  0099               	movwf	25	;volatile
 16772                           
 16773                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
 16774  1DAA  019B               	clrf	27	;volatile
 16775                           
 16776                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
 16777  1DAB  019D               	clrf	29	;volatile
 16778                           
 16779                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x06;
 16780  1DAC  3006               	movlw	6
 16781  1DAD  009F               	movwf	31	;volatile
 16782                           
 16783                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 16784  1DAE  019E               	clrf	30	;volatile
 16785  1DAF  0008               	return
 16786  1DB0                     __end_of_OSCILLATOR_Initialize:	
 16787                           
 16788                           	psect	text92
 16789  1D9E                     __ptext92:	
 16790 ;; *************** function _I2C1_Initialize *****************
 16791 ;; Defined at:
 16792 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 16793 ;; Parameters:    Size  Location     Type
 16794 ;;		None
 16795 ;; Auto vars:     Size  Location     Type
 16796 ;;		None
 16797 ;; Return value:  Size  Location     Type
 16798 ;;                  1    wreg      void 
 16799 ;; Registers used:
 16800 ;;		wreg, status,2
 16801 ;; Tracked objects:
 16802 ;;		On entry : 0/0
 16803 ;;		On exit  : 0/0
 16804 ;;		Unchanged: 0/0
 16805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16810 ;;Total ram usage:        0 bytes
 16811 ;; Hardware stack levels used:    1
 16812 ;; Hardware stack levels required when called:    4
 16813 ;; This function calls:
 16814 ;;		Nothing
 16815 ;; This function is called by:
 16816 ;;		_SYSTEM_Initialize
 16817 ;; This function uses a non-reentrant model
 16818 ;;
 16819                           
 16820                           
 16821                           ;psect for function _I2C1_Initialize
 16822  1D9E                     _I2C1_Initialize:	
 16823                           
 16824                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x00;
 16825                           
 16826                           ;incstack = 0
 16827                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 16828  1D9E  0024               	movlb	4	; select bank4
 16829  1D9F  0194               	clrf	20	;volatile
 16830                           
 16831                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 16832  1DA0  3008               	movlw	8
 16833  1DA1  0095               	movwf	21	;volatile
 16834                           
 16835                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 16836  1DA2  0196               	clrf	22	;volatile
 16837                           
 16838                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x27;
 16839  1DA3  3027               	movlw	39
 16840  1DA4  0092               	movwf	18	;volatile
 16841                           
 16842                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 16843  1DA5  1295               	bcf	21,5	;volatile
 16844  1DA6  0008               	return
 16845  1DA7                     __end_of_I2C1_Initialize:	
 16846                           
 16847                           	psect	text93
 16848  123E                     __ptext93:	
 16849 ;; *************** function _EUSART_Initialize *****************
 16850 ;; Defined at:
 16851 ;;		line 88 in file "mcc_generated_files/eusart.c"
 16852 ;; Parameters:    Size  Location     Type
 16853 ;;		None
 16854 ;; Auto vars:     Size  Location     Type
 16855 ;;		None
 16856 ;; Return value:  Size  Location     Type
 16857 ;;                  1    wreg      void 
 16858 ;; Registers used:
 16859 ;;		wreg, status,2, status,0, pclath, cstack
 16860 ;; Tracked objects:
 16861 ;;		On entry : 0/0
 16862 ;;		On exit  : 0/0
 16863 ;;		Unchanged: 0/0
 16864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16867 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16868 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16869 ;;Total ram usage:        1 bytes
 16870 ;; Hardware stack levels used:    1
 16871 ;; Hardware stack levels required when called:    5
 16872 ;; This function calls:
 16873 ;;		_EUSART_SetErrorHandler
 16874 ;;		_EUSART_SetFramingErrorHandler
 16875 ;;		_EUSART_SetOverrunErrorHandler
 16876 ;;		_EUSART_SetRxInterruptHandler
 16877 ;;		_EUSART_SetTxInterruptHandler
 16878 ;; This function is called by:
 16879 ;;		_SYSTEM_Initialize
 16880 ;; This function uses a non-reentrant model
 16881 ;;
 16882                           
 16883                           
 16884                           ;psect for function _EUSART_Initialize
 16885  123E                     _EUSART_Initialize:	
 16886                           
 16887                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
 16888                           
 16889                           ;incstack = 0
 16890                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16891  123E  0021               	movlb	1	; select bank1
 16892  123F  1291               	bcf	17,5	;volatile
 16893                           
 16894                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
 16895  1240  305D               	movlw	low _EUSART_Receive_ISR
 16896  1241  00F1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
 16897  1242  3011               	movlw	high _EUSART_Receive_ISR
 16898  1243  00F2               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
 16899  1244  319D  255B  3192   	fcall	_EUSART_SetRxInterruptHandler
 16900                           
 16901                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
 16902  1247  0021               	movlb	1	; select bank1
 16903  1248  1211               	bcf	17,4	;volatile
 16904                           
 16905                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
 16906  1249  30FB               	movlw	low _EUSART_Transmit_ISR
 16907  124A  00F1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
 16908  124B  301E               	movlw	high _EUSART_Transmit_ISR
 16909  124C  00F2               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
 16910  124D  319D  2561  3192   	fcall	_EUSART_SetTxInterruptHandler
 16911                           
 16912                           ;mcc_generated_files/eusart.c: 98:     BAUD1CON = 0x08;
 16913  1250  3008               	movlw	8
 16914  1251  0023               	movlb	3	; select bank3
 16915  1252  009F               	movwf	31	;volatile
 16916                           
 16917                           ;mcc_generated_files/eusart.c: 101:     RC1STA = 0x90;
 16918  1253  3090               	movlw	144
 16919  1254  009D               	movwf	29	;volatile
 16920                           
 16921                           ;mcc_generated_files/eusart.c: 104:     TX1STA = 0x24;
 16922  1255  3024               	movlw	36
 16923  1256  009E               	movwf	30	;volatile
 16924                           
 16925                           ;mcc_generated_files/eusart.c: 107:     SP1BRGL = 0xA0;
 16926  1257  30A0               	movlw	160
 16927  1258  009B               	movwf	27	;volatile
 16928                           
 16929                           ;mcc_generated_files/eusart.c: 110:     SP1BRGH = 0x01;
 16930  1259  3001               	movlw	1
 16931  125A  009C               	movwf	28	;volatile
 16932                           
 16933                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
 16934  125B  30DE               	movlw	low _EUSART_DefaultFramingErrorHandler
 16935  125C  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
 16936  125D  301C               	movlw	high _EUSART_DefaultFramingErrorHandler
 16937  125E  00F2               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
 16938  125F  319D  254F  3192   	fcall	_EUSART_SetFramingErrorHandler
 16939                           
 16940                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
 16941  1262  3002               	movlw	low _EUSART_DefaultOverrunErrorHandler
 16942  1263  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
 16943  1264  301D               	movlw	high _EUSART_DefaultOverrunErrorHandler
 16944  1265  00F2               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
 16945  1266  319D  2555  3192   	fcall	_EUSART_SetOverrunErrorHandler
 16946                           
 16947                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
 16948  1269  30E1               	movlw	low _EUSART_DefaultErrorHandler
 16949  126A  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler
 16950  126B  301C               	movlw	high _EUSART_DefaultErrorHandler
 16951  126C  00F2               	movwf	EUSART_SetErrorHandler@interruptHandler+1
 16952  126D  319D  2549         	fcall	_EUSART_SetErrorHandler
 16953                           
 16954                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
 16955  126F  0022               	movlb	2	; select bank2
 16956  1270  01E1               	clrf	_eusartRxLastError^(0+256)	;volatile
 16957                           
 16958                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
 16959  1271  0021               	movlb	1	; select bank1
 16960  1272  01EF               	clrf	_eusartTxHead^(0+128)	;volatile
 16961                           
 16962                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
 16963  1273  0022               	movlb	2	; select bank2
 16964  1274  01E3               	clrf	_eusartTxTail^(0+256)	;volatile
 16965                           
 16966                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
 16967  1275  3008               	movlw	8
 16968  1276  00F3               	movwf	??_EUSART_Initialize
 16969  1277  0873               	movf	??_EUSART_Initialize,w
 16970  1278  00EE               	movwf	_eusartTxBufferRemaining^(0+256)	;volatile
 16971                           
 16972                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
 16973  1279  01FC               	clrf	_eusartRxHead	;volatile
 16974                           
 16975                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
 16976  127A  0021               	movlb	1	; select bank1
 16977  127B  01EE               	clrf	_eusartRxTail^(0+128)	;volatile
 16978                           
 16979                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
 16980  127C  0022               	movlb	2	; select bank2
 16981  127D  01E2               	clrf	_eusartRxCount^(0+256)	;volatile
 16982                           
 16983                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
 16984  127E  0021               	movlb	1	; select bank1
 16985  127F  1691               	bsf	17,5	;volatile
 16986  1280  0008               	return
 16987  1281                     __end_of_EUSART_Initialize:	
 16988                           
 16989                           	psect	text94
 16990  1D61                     __ptext94:	
 16991 ;; *************** function _EUSART_SetTxInterruptHandler *****************
 16992 ;; Defined at:
 16993 ;;		line 285 in file "mcc_generated_files/eusart.c"
 16994 ;; Parameters:    Size  Location     Type
 16995 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 16996 ;;		 -> EUSART_Transmit_ISR(1), 
 16997 ;; Auto vars:     Size  Location     Type
 16998 ;;		None
 16999 ;; Return value:  Size  Location     Type
 17000 ;;                  1    wreg      void 
 17001 ;; Registers used:
 17002 ;;		wreg
 17003 ;; Tracked objects:
 17004 ;;		On entry : 0/0
 17005 ;;		On exit  : 0/0
 17006 ;;		Unchanged: 0/0
 17007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17008 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17011 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17012 ;;Total ram usage:        2 bytes
 17013 ;; Hardware stack levels used:    1
 17014 ;; Hardware stack levels required when called:    4
 17015 ;; This function calls:
 17016 ;;		Nothing
 17017 ;; This function is called by:
 17018 ;;		_EUSART_Initialize
 17019 ;; This function uses a non-reentrant model
 17020 ;;
 17021                           
 17022                           
 17023                           ;psect for function _EUSART_SetTxInterruptHandler
 17024  1D61                     _EUSART_SetTxInterruptHandler:	
 17025                           
 17026                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
 17027                           
 17028                           ;incstack = 0
 17029                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
 17030  1D61  0872               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
 17031  1D62  0022               	movlb	2	; select bank2
 17032  1D63  00ED               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+256)
 17033  1D64  0871               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
 17034  1D65  00EC               	movwf	_EUSART_TxDefaultInterruptHandler^(0+256)
 17035  1D66  0008               	return
 17036  1D67                     __end_of_EUSART_SetTxInterruptHandler:	
 17037                           
 17038                           	psect	text95
 17039  1D5B                     __ptext95:	
 17040 ;; *************** function _EUSART_SetRxInterruptHandler *****************
 17041 ;; Defined at:
 17042 ;;		line 289 in file "mcc_generated_files/eusart.c"
 17043 ;; Parameters:    Size  Location     Type
 17044 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17045 ;;		 -> EUSART_Receive_ISR(1), 
 17046 ;; Auto vars:     Size  Location     Type
 17047 ;;		None
 17048 ;; Return value:  Size  Location     Type
 17049 ;;                  1    wreg      void 
 17050 ;; Registers used:
 17051 ;;		wreg
 17052 ;; Tracked objects:
 17053 ;;		On entry : 0/0
 17054 ;;		On exit  : 0/0
 17055 ;;		Unchanged: 0/0
 17056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17057 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17060 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17061 ;;Total ram usage:        2 bytes
 17062 ;; Hardware stack levels used:    1
 17063 ;; Hardware stack levels required when called:    4
 17064 ;; This function calls:
 17065 ;;		Nothing
 17066 ;; This function is called by:
 17067 ;;		_EUSART_Initialize
 17068 ;; This function uses a non-reentrant model
 17069 ;;
 17070                           
 17071                           
 17072                           ;psect for function _EUSART_SetRxInterruptHandler
 17073  1D5B                     _EUSART_SetRxInterruptHandler:	
 17074                           
 17075                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
 17076                           
 17077                           ;incstack = 0
 17078                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
 17079  1D5B  0872               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
 17080  1D5C  0023               	movlb	3	; select bank3
 17081  1D5D  00E5               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+384)
 17082  1D5E  0871               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
 17083  1D5F  00E4               	movwf	_EUSART_RxDefaultInterruptHandler^(0+384)
 17084  1D60  0008               	return
 17085  1D61                     __end_of_EUSART_SetRxInterruptHandler:	
 17086                           
 17087                           	psect	text96
 17088  1D55                     __ptext96:	
 17089 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
 17090 ;; Defined at:
 17091 ;;		line 277 in file "mcc_generated_files/eusart.c"
 17092 ;; Parameters:    Size  Location     Type
 17093 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17094 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
 17095 ;; Auto vars:     Size  Location     Type
 17096 ;;		None
 17097 ;; Return value:  Size  Location     Type
 17098 ;;                  1    wreg      void 
 17099 ;; Registers used:
 17100 ;;		wreg
 17101 ;; Tracked objects:
 17102 ;;		On entry : 0/0
 17103 ;;		On exit  : 0/0
 17104 ;;		Unchanged: 0/0
 17105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17106 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17109 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17110 ;;Total ram usage:        2 bytes
 17111 ;; Hardware stack levels used:    1
 17112 ;; Hardware stack levels required when called:    4
 17113 ;; This function calls:
 17114 ;;		Nothing
 17115 ;; This function is called by:
 17116 ;;		_EUSART_Initialize
 17117 ;; This function uses a non-reentrant model
 17118 ;;
 17119                           
 17120                           
 17121                           ;psect for function _EUSART_SetOverrunErrorHandler
 17122  1D55                     _EUSART_SetOverrunErrorHandler:	
 17123                           
 17124                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
 17125                           
 17126                           ;incstack = 0
 17127                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
 17128  1D55  0872               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
 17129  1D56  0023               	movlb	3	; select bank3
 17130  1D57  00E1               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+384)
 17131  1D58  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
 17132  1D59  00E0               	movwf	_EUSART_OverrunErrorHandler^(0+384)
 17133  1D5A  0008               	return
 17134  1D5B                     __end_of_EUSART_SetOverrunErrorHandler:	
 17135                           
 17136                           	psect	text97
 17137  1D4F                     __ptext97:	
 17138 ;; *************** function _EUSART_SetFramingErrorHandler *****************
 17139 ;; Defined at:
 17140 ;;		line 273 in file "mcc_generated_files/eusart.c"
 17141 ;; Parameters:    Size  Location     Type
 17142 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17143 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
 17144 ;; Auto vars:     Size  Location     Type
 17145 ;;		None
 17146 ;; Return value:  Size  Location     Type
 17147 ;;                  1    wreg      void 
 17148 ;; Registers used:
 17149 ;;		wreg
 17150 ;; Tracked objects:
 17151 ;;		On entry : 0/0
 17152 ;;		On exit  : 0/0
 17153 ;;		Unchanged: 0/0
 17154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17155 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17158 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17159 ;;Total ram usage:        2 bytes
 17160 ;; Hardware stack levels used:    1
 17161 ;; Hardware stack levels required when called:    4
 17162 ;; This function calls:
 17163 ;;		Nothing
 17164 ;; This function is called by:
 17165 ;;		_EUSART_Initialize
 17166 ;; This function uses a non-reentrant model
 17167 ;;
 17168                           
 17169                           
 17170                           ;psect for function _EUSART_SetFramingErrorHandler
 17171  1D4F                     _EUSART_SetFramingErrorHandler:	
 17172                           
 17173                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
 17174                           
 17175                           ;incstack = 0
 17176                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
 17177  1D4F  0872               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
 17178  1D50  0023               	movlb	3	; select bank3
 17179  1D51  00E3               	movwf	(_EUSART_FramingErrorHandler+1)^(0+384)
 17180  1D52  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
 17181  1D53  00E2               	movwf	_EUSART_FramingErrorHandler^(0+384)
 17182  1D54  0008               	return
 17183  1D55                     __end_of_EUSART_SetFramingErrorHandler:	
 17184                           
 17185                           	psect	text98
 17186  1D49                     __ptext98:	
 17187 ;; *************** function _EUSART_SetErrorHandler *****************
 17188 ;; Defined at:
 17189 ;;		line 281 in file "mcc_generated_files/eusart.c"
 17190 ;; Parameters:    Size  Location     Type
 17191 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 17192 ;;		 -> EUSART_DefaultErrorHandler(1), 
 17193 ;; Auto vars:     Size  Location     Type
 17194 ;;		None
 17195 ;; Return value:  Size  Location     Type
 17196 ;;                  1    wreg      void 
 17197 ;; Registers used:
 17198 ;;		wreg
 17199 ;; Tracked objects:
 17200 ;;		On entry : 0/0
 17201 ;;		On exit  : 0/0
 17202 ;;		Unchanged: 0/0
 17203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17204 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17207 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17208 ;;Total ram usage:        2 bytes
 17209 ;; Hardware stack levels used:    1
 17210 ;; Hardware stack levels required when called:    4
 17211 ;; This function calls:
 17212 ;;		Nothing
 17213 ;; This function is called by:
 17214 ;;		_EUSART_Initialize
 17215 ;; This function uses a non-reentrant model
 17216 ;;
 17217                           
 17218                           
 17219                           ;psect for function _EUSART_SetErrorHandler
 17220  1D49                     _EUSART_SetErrorHandler:	
 17221                           
 17222                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
 17223                           
 17224                           ;incstack = 0
 17225                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
 17226  1D49  0872               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
 17227  1D4A  0023               	movlb	3	; select bank3
 17228  1D4B  00DF               	movwf	(_EUSART_ErrorHandler+1)^(0+384)
 17229  1D4C  0871               	movf	EUSART_SetErrorHandler@interruptHandler,w
 17230  1D4D  00DE               	movwf	_EUSART_ErrorHandler^(0+384)
 17231  1D4E  0008               	return
 17232  1D4F                     __end_of_EUSART_SetErrorHandler:	
 17233                           
 17234                           	psect	intentry
 17235  0004                     __pintentry:	
 17236 ;; *************** function _INTERRUPT_InterruptManager *****************
 17237 ;; Defined at:
 17238 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 17239 ;; Parameters:    Size  Location     Type
 17240 ;;		None
 17241 ;; Auto vars:     Size  Location     Type
 17242 ;;		None
 17243 ;; Return value:  Size  Location     Type
 17244 ;;                  1    wreg      void 
 17245 ;; Registers used:
 17246 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17247 ;; Tracked objects:
 17248 ;;		On entry : 0/0
 17249 ;;		On exit  : 0/0
 17250 ;;		Unchanged: 0/0
 17251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17256 ;;Total ram usage:        0 bytes
 17257 ;; Hardware stack levels used:    1
 17258 ;; Hardware stack levels required when called:    3
 17259 ;; This function calls:
 17260 ;;		Absolute function
 17261 ;;		_EUSART_Receive_ISR
 17262 ;;		_EUSART_Transmit_ISR
 17263 ;; This function is called by:
 17264 ;;		Interrupt level 1
 17265 ;; This function uses a non-reentrant model
 17266 ;;
 17267                           
 17268  0004                     _INTERRUPT_InterruptManager:	
 17269                           
 17270                           ;incstack = 0
 17271  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 17272                           
 17273                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 17274  0005  3180               	pagesel	$
 17275                           
 17276                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
 17277  0006  1F0B               	btfss	11,6	;volatile
 17278  0007  2821               	goto	i1l319
 17279                           
 17280                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 17281  0008  0021               	movlb	1	; select bank1
 17282  0009  1E11               	btfss	17,4	;volatile
 17283  000A  2815               	goto	i1l314
 17284  000B  0020               	movlb	0	; select bank0
 17285  000C  1E11               	btfss	17,4	;volatile
 17286  000D  2815               	goto	i1l314
 17287                           
 17288                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART_TxDefaultInterruptHandler();
 17289  000E  0022               	movlb	2	; select bank2
 17290  000F  086D               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+256),w
 17291  0010  008A               	movwf	10
 17292  0011  086C               	movf	_EUSART_TxDefaultInterruptHandler^(0+256),w
 17293  0012  000A               	callw
 17294  0013  3180               	pagesel	$
 17295                           
 17296                           ;mcc_generated_files/interrupt_manager.c: 60:         }
 17297  0014  2821               	goto	i1l319
 17298  0015                     i1l314:	
 17299                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
 17300                           
 17301  0015  0021               	movlb	1	; select bank1
 17302  0016  1E91               	btfss	17,5	;volatile
 17303  0017  2821               	goto	i1l319
 17304  0018  0020               	movlb	0	; select bank0
 17305  0019  1E91               	btfss	17,5	;volatile
 17306  001A  2821               	goto	i1l319
 17307                           
 17308                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_RxDefaultInterruptHandler();
 17309  001B  0023               	movlb	3	; select bank3
 17310  001C  0865               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+384),w
 17311  001D  008A               	movwf	10
 17312  001E  0864               	movf	_EUSART_RxDefaultInterruptHandler^(0+384),w
 17313  001F  000A               	callw
 17314  0020  3180               	pagesel	$
 17315  0021                     i1l319:	
 17316                           ;mcc_generated_files/interrupt_manager.c: 69:     }
 17317                           
 17318                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 17319                           
 17320  0021  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 17321  0022  0009               	retfie
 17322  0023                     __end_of_INTERRUPT_InterruptManager:	
 17323                           
 17324                           	psect	text100
 17325  1EFB                     __ptext100:	
 17326 ;; *************** function _EUSART_Transmit_ISR *****************
 17327 ;; Defined at:
 17328 ;;		line 206 in file "mcc_generated_files/eusart.c"
 17329 ;; Parameters:    Size  Location     Type
 17330 ;;		None
 17331 ;; Auto vars:     Size  Location     Type
 17332 ;;		None
 17333 ;; Return value:  Size  Location     Type
 17334 ;;                  1    wreg      void 
 17335 ;; Registers used:
 17336 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17337 ;; Tracked objects:
 17338 ;;		On entry : 0/0
 17339 ;;		On exit  : 0/0
 17340 ;;		Unchanged: 0/0
 17341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17344 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17345 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17346 ;;Total ram usage:        1 bytes
 17347 ;; Hardware stack levels used:    1
 17348 ;; This function calls:
 17349 ;;		Nothing
 17350 ;; This function is called by:
 17351 ;;		_EUSART_Initialize
 17352 ;;		_INTERRUPT_InterruptManager
 17353 ;; This function uses a non-reentrant model
 17354 ;;
 17355                           
 17356                           
 17357                           ;psect for function _EUSART_Transmit_ISR
 17358  1EFB                     _EUSART_Transmit_ISR:	
 17359                           
 17360                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
 17361                           
 17362                           ;incstack = 0
 17363                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 17364  1EFB  3008               	movlw	8
 17365  1EFC  0022               	movlb	2	; select bank2
 17366  1EFD  026E               	subwf	_eusartTxBufferRemaining^(0+256),w	;volatile
 17367  1EFE  1803               	skipnc
 17368  1EFF  2F16               	goto	i1l228
 17369                           
 17370                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TX1
      +                          REG = eusartTxBuffer[eusartTxTail++];
 17371  1F00  0863               	movf	_eusartTxTail^(0+256),w
 17372  1F01  3ECD               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 17373  1F02  0086               	movwf	6
 17374  1F03  3001               	movlw	1	; select bank3/4
 17375  1F04  0087               	movwf	7
 17376  1F05  0801               	movf	1,w
 17377  1F06  0023               	movlb	3	; select bank3
 17378  1F07  009A               	movwf	26	;volatile
 17379  1F08  3001               	movlw	1
 17380  1F09  00F0               	movwf	??_EUSART_Transmit_ISR
 17381  1F0A  0870               	movf	??_EUSART_Transmit_ISR,w
 17382  1F0B  0022               	movlb	2	; select bank2
 17383  1F0C  07E3               	addwf	_eusartTxTail^(0+256),f	;volatile
 17384                           
 17385                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 17386  1F0D  3008               	movlw	8
 17387  1F0E  0263               	subwf	_eusartTxTail^(0+256),w	;volatile
 17388  1F0F  1803               	btfsc	3,0
 17389                           
 17390                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
 17391  1F10  01E3               	clrf	_eusartTxTail^(0+256)	;volatile
 17392                           
 17393                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
 17394  1F11  3001               	movlw	1
 17395  1F12  00F0               	movwf	??_EUSART_Transmit_ISR
 17396  1F13  0870               	movf	??_EUSART_Transmit_ISR,w
 17397  1F14  07EE               	addwf	_eusartTxBufferRemaining^(0+256),f	;volatile
 17398                           
 17399                           ;mcc_generated_files/eusart.c: 218:     }
 17400  1F15  0008               	return
 17401  1F16                     i1l228:	
 17402                           ;mcc_generated_files/eusart.c: 219:     else
 17403                           
 17404                           
 17405                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          1bits.TXIE = 0;
 17406  1F16  0021               	movlb	1	; select bank1
 17407  1F17  1211               	bcf	17,4	;volatile
 17408  1F18  0008               	return
 17409  1F19                     __end_of_EUSART_Transmit_ISR:	
 17410                           
 17411                           	psect	text101
 17412  115D                     __ptext101:	
 17413 ;; *************** function _EUSART_Receive_ISR *****************
 17414 ;; Defined at:
 17415 ;;		line 225 in file "mcc_generated_files/eusart.c"
 17416 ;; Parameters:    Size  Location     Type
 17417 ;;		None
 17418 ;; Auto vars:     Size  Location     Type
 17419 ;;		None
 17420 ;; Return value:  Size  Location     Type
 17421 ;;                  1    wreg      void 
 17422 ;; Registers used:
 17423 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17424 ;; Tracked objects:
 17425 ;;		On entry : 0/0
 17426 ;;		On exit  : 0/0
 17427 ;;		Unchanged: 0/0
 17428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17433 ;;Total ram usage:        0 bytes
 17434 ;; Hardware stack levels used:    1
 17435 ;; Hardware stack levels required when called:    2
 17436 ;; This function calls:
 17437 ;;		Absolute function
 17438 ;;		_EUSART_DefaultErrorHandler
 17439 ;;		_EUSART_DefaultFramingErrorHandler
 17440 ;;		_EUSART_DefaultOverrunErrorHandler
 17441 ;;		_EUSART_RxDataHandler
 17442 ;; This function is called by:
 17443 ;;		_EUSART_Initialize
 17444 ;;		_INTERRUPT_InterruptManager
 17445 ;; This function uses a non-reentrant model
 17446 ;;
 17447                           
 17448                           
 17449                           ;psect for function _EUSART_Receive_ISR
 17450  115D                     _EUSART_Receive_ISR:	
 17451                           
 17452                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 17453                           
 17454                           ;incstack = 0
 17455                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17456  115D  087C               	movf	_eusartRxHead,w	;volatile
 17457  115E  3EBD               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 17458  115F  0086               	movwf	6
 17459  1160  3001               	movlw	1	; select bank3/4
 17460  1161  0087               	movwf	7
 17461  1162  0181               	clrf	1
 17462                           
 17463                           ;mcc_generated_files/eusart.c: 230:     if(RC1STAbits.FERR){
 17464  1163  0023               	movlb	3	; select bank3
 17465  1164  1D1D               	btfss	29,2	;volatile
 17466  1165  2971               	goto	i1l5824
 17467                           
 17468                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 17469  1166  087C               	movf	_eusartRxHead,w	;volatile
 17470  1167  3EBD               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 17471  1168  0086               	movwf	6
 17472  1169  3001               	movlw	1	; select bank3/4
 17473  116A  0087               	movwf	7
 17474  116B  1481               	bsf	1,1
 17475                           
 17476                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
 17477  116C  0863               	movf	(_EUSART_FramingErrorHandler+1)^(0+384),w
 17478  116D  008A               	movwf	10
 17479  116E  0862               	movf	_EUSART_FramingErrorHandler^(0+384),w
 17480  116F  000A               	callw
 17481  1170  3191               	pagesel	$
 17482  1171                     i1l5824:	
 17483                           
 17484                           ;mcc_generated_files/eusart.c: 235:     if(RC1STAbits.OERR){
 17485  1171  0023               	movlb	3	; select bank3
 17486  1172  1C9D               	btfss	29,1	;volatile
 17487  1173  297F               	goto	i1l5830
 17488                           
 17489                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 17490  1174  087C               	movf	_eusartRxHead,w	;volatile
 17491  1175  3EBD               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 17492  1176  0086               	movwf	6
 17493  1177  3001               	movlw	1	; select bank3/4
 17494  1178  0087               	movwf	7
 17495  1179  1501               	bsf	1,2
 17496                           
 17497                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
 17498  117A  0861               	movf	(_EUSART_OverrunErrorHandler+1)^(0+384),w
 17499  117B  008A               	movwf	10
 17500  117C  0860               	movf	_EUSART_OverrunErrorHandler^(0+384),w
 17501  117D  000A               	callw
 17502  117E  3191               	pagesel	$
 17503  117F                     i1l5830:	
 17504                           
 17505                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
 17506  117F  087C               	movf	_eusartRxHead,w	;volatile
 17507  1180  3EBD               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 17508  1181  0086               	movwf	6
 17509  1182  3001               	movlw	1	; select bank3/4
 17510  1183  0087               	movwf	7
 17511  1184  0801               	movf	1,w
 17512  1185  1903               	btfsc	3,2
 17513  1186  298E               	goto	i1l5834
 17514                           
 17515                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
 17516  1187  0023               	movlb	3	; select bank3
 17517  1188  085F               	movf	(_EUSART_ErrorHandler+1)^(0+384),w
 17518  1189  008A               	movwf	10
 17519  118A  085E               	movf	_EUSART_ErrorHandler^(0+384),w
 17520  118B  000A               	callw
 17521  118C  3191               	pagesel	$
 17522                           
 17523                           ;mcc_generated_files/eusart.c: 242:     } else {
 17524  118D  0008               	return
 17525  118E                     i1l5834:	
 17526                           
 17527                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
 17528  118E  319E  2699         	fcall	_EUSART_RxDataHandler
 17529  1190  0008               	return
 17530  1191                     __end_of_EUSART_Receive_ISR:	
 17531                           
 17532                           	psect	text102
 17533  1D02                     __ptext102:	
 17534 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 17535 ;; Defined at:
 17536 ;;		line 261 in file "mcc_generated_files/eusart.c"
 17537 ;; Parameters:    Size  Location     Type
 17538 ;;		None
 17539 ;; Auto vars:     Size  Location     Type
 17540 ;;		None
 17541 ;; Return value:  Size  Location     Type
 17542 ;;                  1    wreg      void 
 17543 ;; Registers used:
 17544 ;;		None
 17545 ;; Tracked objects:
 17546 ;;		On entry : 0/0
 17547 ;;		On exit  : 0/0
 17548 ;;		Unchanged: 0/0
 17549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17554 ;;Total ram usage:        0 bytes
 17555 ;; Hardware stack levels used:    1
 17556 ;; This function calls:
 17557 ;;		Nothing
 17558 ;; This function is called by:
 17559 ;;		_EUSART_Initialize
 17560 ;;		_EUSART_Receive_ISR
 17561 ;; This function uses a non-reentrant model
 17562 ;;
 17563                           
 17564                           
 17565                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 17566  1D02                     _EUSART_DefaultOverrunErrorHandler:	
 17567                           
 17568                           ;mcc_generated_files/eusart.c: 264:     RC1STAbits.CREN = 0;
 17569                           
 17570                           ;incstack = 0
 17571                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 17572  1D02  0023               	movlb	3	; select bank3
 17573  1D03  121D               	bcf	29,4	;volatile
 17574                           
 17575                           ;mcc_generated_files/eusart.c: 265:     RC1STAbits.CREN = 1;
 17576  1D04  161D               	bsf	29,4	;volatile
 17577  1D05  0008               	return
 17578  1D06                     __end_of_EUSART_DefaultOverrunErrorHandler:	
 17579                           
 17580                           	psect	text103
 17581  1CDE                     __ptext103:	
 17582 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 17583 ;; Defined at:
 17584 ;;		line 259 in file "mcc_generated_files/eusart.c"
 17585 ;; Parameters:    Size  Location     Type
 17586 ;;		None
 17587 ;; Auto vars:     Size  Location     Type
 17588 ;;		None
 17589 ;; Return value:  Size  Location     Type
 17590 ;;                  1    wreg      void 
 17591 ;; Registers used:
 17592 ;;		None
 17593 ;; Tracked objects:
 17594 ;;		On entry : 0/0
 17595 ;;		On exit  : 0/0
 17596 ;;		Unchanged: 0/0
 17597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17602 ;;Total ram usage:        0 bytes
 17603 ;; Hardware stack levels used:    1
 17604 ;; This function calls:
 17605 ;;		Nothing
 17606 ;; This function is called by:
 17607 ;;		_EUSART_Initialize
 17608 ;;		_EUSART_Receive_ISR
 17609 ;; This function uses a non-reentrant model
 17610 ;;
 17611                           
 17612                           
 17613                           ;psect for function _EUSART_DefaultFramingErrorHandler
 17614  1CDE                     _EUSART_DefaultFramingErrorHandler:	
 17615                           
 17616                           ;incstack = 0
 17617                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 17618  1CDE  0008               	return
 17619  1CDF                     __end_of_EUSART_DefaultFramingErrorHandler:	
 17620                           
 17621                           	psect	text104
 17622  1CE1                     __ptext104:	
 17623 ;; *************** function _EUSART_DefaultErrorHandler *****************
 17624 ;; Defined at:
 17625 ;;		line 269 in file "mcc_generated_files/eusart.c"
 17626 ;; Parameters:    Size  Location     Type
 17627 ;;		None
 17628 ;; Auto vars:     Size  Location     Type
 17629 ;;		None
 17630 ;; Return value:  Size  Location     Type
 17631 ;;                  1    wreg      void 
 17632 ;; Registers used:
 17633 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17634 ;; Tracked objects:
 17635 ;;		On entry : 0/0
 17636 ;;		On exit  : 0/0
 17637 ;;		Unchanged: 0/0
 17638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17643 ;;Total ram usage:        0 bytes
 17644 ;; Hardware stack levels used:    1
 17645 ;; Hardware stack levels required when called:    1
 17646 ;; This function calls:
 17647 ;;		_EUSART_RxDataHandler
 17648 ;; This function is called by:
 17649 ;;		_EUSART_Initialize
 17650 ;;		_EUSART_Receive_ISR
 17651 ;; This function uses a non-reentrant model
 17652 ;;
 17653                           
 17654                           
 17655                           ;psect for function _EUSART_DefaultErrorHandler
 17656  1CE1                     _EUSART_DefaultErrorHandler:	
 17657                           
 17658                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
 17659                           
 17660                           ;incstack = 0
 17661                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 17662  1CE1  319E  2699         	fcall	_EUSART_RxDataHandler
 17663  1CE3  0008               	return
 17664  1CE4                     __end_of_EUSART_DefaultErrorHandler:	
 17665                           
 17666                           	psect	text105
 17667  1E99                     __ptext105:	
 17668 ;; *************** function _EUSART_RxDataHandler *****************
 17669 ;; Defined at:
 17670 ;;		line 249 in file "mcc_generated_files/eusart.c"
 17671 ;; Parameters:    Size  Location     Type
 17672 ;;		None
 17673 ;; Auto vars:     Size  Location     Type
 17674 ;;		None
 17675 ;; Return value:  Size  Location     Type
 17676 ;;                  1    wreg      void 
 17677 ;; Registers used:
 17678 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17679 ;; Tracked objects:
 17680 ;;		On entry : 0/0
 17681 ;;		On exit  : 0/0
 17682 ;;		Unchanged: 0/0
 17683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17686 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17687 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17688 ;;Total ram usage:        1 bytes
 17689 ;; Hardware stack levels used:    1
 17690 ;; This function calls:
 17691 ;;		Nothing
 17692 ;; This function is called by:
 17693 ;;		_EUSART_Receive_ISR
 17694 ;;		_EUSART_DefaultErrorHandler
 17695 ;; This function uses a non-reentrant model
 17696 ;;
 17697                           
 17698                           
 17699                           ;psect for function _EUSART_RxDataHandler
 17700  1E99                     _EUSART_RxDataHandler:	
 17701                           
 17702                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RC1REG;
 17703                           
 17704                           ;incstack = 0
 17705                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 17706  1E99  0023               	movlb	3	; select bank3
 17707  1E9A  0819               	movf	25,w	;volatile
 17708  1E9B  00F0               	movwf	??_EUSART_RxDataHandler
 17709  1E9C  087C               	movf	_eusartRxHead,w
 17710  1E9D  3EC5               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 17711  1E9E  0086               	movwf	6
 17712  1E9F  3001               	movlw	1	; select bank3/4
 17713  1EA0  0087               	movwf	7
 17714  1EA1  0870               	movf	??_EUSART_RxDataHandler,w
 17715  1EA2  0081               	movwf	1
 17716  1EA3  3001               	movlw	1
 17717  1EA4  00F0               	movwf	??_EUSART_RxDataHandler
 17718  1EA5  0870               	movf	??_EUSART_RxDataHandler,w
 17719  1EA6  07FC               	addwf	_eusartRxHead,f	;volatile
 17720                           
 17721                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 17722  1EA7  3008               	movlw	8
 17723  1EA8  027C               	subwf	_eusartRxHead,w	;volatile
 17724  1EA9  1803               	btfsc	3,0
 17725                           
 17726                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
 17727  1EAA  01FC               	clrf	_eusartRxHead	;volatile
 17728                           
 17729                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
 17730  1EAB  3001               	movlw	1
 17731  1EAC  00F0               	movwf	??_EUSART_RxDataHandler
 17732  1EAD  0870               	movf	??_EUSART_RxDataHandler,w
 17733  1EAE  0022               	movlb	2	; select bank2
 17734  1EAF  07E2               	addwf	_eusartRxCount^(0+256),f	;volatile
 17735  1EB0  0008               	return
 17736  1EB1                     __end_of_EUSART_RxDataHandler:	
 17737  007E                     btemp	set	126	;btemp
 17738  007E                     int$flags	set	126
 17739  007E                     wtemp0	set	126


Data Sizes:
    Strings     52
    Constant    32
    Data        27
    BSS         179
    Persistent  43
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80     77      80
    BANK2            80     39      79
    BANK3            80      0      70
    BANK4            80      0      80
    BANK5            80      0      23
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_DO_TX$2236$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C1_DO_TX$2241	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C1_DO_TX$2236	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_MasterFsm$2235	const PTR FTN()enum E7150 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    S701$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[15]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S1871_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    sendPWM@data	PTR unsigned char  size(1) Largest target is 9
		 -> main@EOC(BANK2[1]), main@SOC(BANK2[1]), main@hdr_trl(BANK2[4]), packet(BANK3[9]), 

    I2C1_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_SetBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(BANK0[1]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@reg(BANK0[1]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    S701$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(BANK0[1]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@reg(BANK0[1]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(BANK0[1]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@reg(BANK0[1]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    S701$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C1_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    S701$callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    fsmStateTable	const PTR FTN()enum E7150[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(BANK0[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    S94$data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _vfpfcnvrt->_fputc
    _efgtoa->___fltol
    _tolower->_isupper
    _pad->_fputc
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    ___flmul->__Umul8_16
    ___fldiv->___xxtofl
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback
    _SYSTEM_Initialize->_EUSART_Initialize
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    ___fldiv->___xxtofl
    _initializePressureSensor->_I2C1_Write1ByteRegister
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _readPressureSensor->_printf
    _printf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_readPressureSensor

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                33    33      0  203688
                                             75 BANK1      2     2      0
                                              8 BANK2     31    31      0
                  _SYSTEM_Initialize
           _initializePressureSensor
                 _readPressureSensor
                            _sendPWM
                            _setZero
 ---------------------------------------------------------------------------------
 (1) _setZero                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sendPWM                                              3     3      0     410
                                              1 COMMON     3     3      0
                            _setHigh
                             _setLow
 ---------------------------------------------------------------------------------
 (2) _setLow                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setHigh                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readPressureSensor                                   8     8      0  117784
                                              0 BANK2      8     8      0
             _I2C1_Read1ByteRegister
                            ___fldiv
                           ___xxtofl
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              10     4      6   30454
                                             65 BANK1     10     4      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3   30181
                                             57 BANK1      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           43    41      2   29722
                                             61 BANK0     19    17      2
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                              9     5      4     410
                                              1 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              66    61      5   25448
                                             52 BANK0      9     4      5
                                              0 BANK1     57    57      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1142
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               8     6      2     641
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    3241
                                              8 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     123
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    1226
                                              0 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     834
                                              4 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      66
                                              3 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (7) _EUSART_Write                                         2     2      0      44
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             32 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       16    12      4     287
                                              1 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             11     7      4     381
                                              1 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    3727
                                             26 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             20    12      8    3302
                                              1 COMMON     8     0      8
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             26    18      8    3025
                                              0 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (7) __Umul8_16                                            9     7      2     799
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     790
                                             26 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     490
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             26    18      8    2185
                                              6 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              7     3      4     448
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              9     5      4     452
                                              1 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Read1ByteRegister                               4     3      1   84671
                                              8 BANK0      4     3      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _initializePressureSensor                             2     2      0   84547
                                             12 BANK0      2     2      0
            _I2C1_Write1ByteRegister
 ---------------------------------------------------------------------------------
 (2) _I2C1_Write1ByteRegister                              4     2      2   84547
                                              8 BANK0      4     2      2
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C1_SetAddressNackCallback                          4     1      3    1870
                                              6 COMMON     4     1      3
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (3) _I2C1_Open                                            3     3      0      46
                                              1 COMMON     3     3      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterWrite                                     0     0      0   78300
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterOperation                                 3     3      0   78300
                                             11 COMMON     1     1      0
                                              6 BANK0      2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (5) _I2C1_Poller                                          0     0      0   78254
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterFsm                                       3     3      0   78254
                                              3 BANK0      3     3      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_TX_EMPTY                                     3     3      0   19547
                                              0 BANK0      3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterSetIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_TX                                           3     3      0   19569
                                              0 BANK0      3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_DO_SEND_RESTART_WRITE                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C1_DO_SEND_RESTART_READ                            0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_SEND_ADR_WRITE                               0     0      0      22
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_SEND_ADR_READ                                0     0      0      22
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterSendTxData                                1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_RX_ACK                                       0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_RX                                           3     3      0   19547
                                              0 BANK0      3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterSendAck                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterGetRxData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_RX_NACK_STOP                                 0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_RX_NACK_RESTART                              0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterSendNack                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_RCEN                                         0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterStartRx                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_ADDRESS_NACK                                 3     3      0   19547
                                              0 BANK0      3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                1     0      1    3852
                                             10 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                1     0      1    3852
                                             10 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              1     0      1    3874
                                             10 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                1     0      1    3852
                                             10 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                1     0      1    3852
                                             10 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C1_SetDataCompleteCallback                         4     1      3    2478
                                              6 COMMON     4     1      3
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (4) _I2C1_SetCallback                                     5     2      3     914
                                              1 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (3) _I2C1_SetBuffer                                       4     2      2    1352
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _I2C1_DO_SEND_STOP                                    0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_DO_SEND_RESTART                                 0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_CallbackReturnStop                              1     0      1       0
                                             10 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _I2C1_CallbackReturnReset                             1     0      1     265
                                             10 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C1_Close                                           2     2      0      24
                                              1 COMMON     2     2      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                  _EUSART_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     490
                                              3 COMMON     1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          0     0      0       0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _TMR2_Initialize
     _WDT_Initialize
   _initializePressureSensor
     _I2C1_Write1ByteRegister
       _I2C1_Close
         _I2C1_MasterClearIrq
         _I2C1_MasterClose
         _I2C1_MasterDisableIrq
       _I2C1_MasterWrite
         _I2C1_MasterOperation
           _I2C1_MasterStart
           _I2C1_Poller
             _I2C1_MasterFsm
               _I2C1_DO_ADDRESS_NACK *
                 Absolute function(Fake) *
                 _I2C1_CallbackReturnReset *
                 _I2C1_CallbackReturnStop *
                 _I2C1_DO_SEND_RESTART *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_STOP *
                   _I2C1_MasterStop
                 _rd1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
               _I2C1_DO_IDLE *
               _I2C1_DO_RCEN *
                 _I2C1_MasterStartRx
               _I2C1_DO_RESET *
               _I2C1_DO_RX *
                 Absolute function(Fake) *
                 _I2C1_CallbackReturnReset *
                 _I2C1_CallbackReturnStop *
                 _I2C1_DO_RX_NACK_RESTART *
                   _I2C1_MasterSendNack
                 _I2C1_DO_RX_NACK_STOP *
                   _I2C1_MasterSendNack
                 _I2C1_MasterGetRxData *
                 _I2C1_MasterSendAck *
                 _rd1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
               _I2C1_DO_RX_ACK *
                 _I2C1_MasterSendAck
               _I2C1_DO_RX_NACK_RESTART *
                 _I2C1_MasterSendNack
               _I2C1_DO_RX_NACK_STOP *
                 _I2C1_MasterSendNack
               _I2C1_DO_SEND_ADR_READ *
                 _I2C1_MasterSendTxData
               _I2C1_DO_SEND_ADR_WRITE *
                 _I2C1_MasterSendTxData
               _I2C1_DO_SEND_RESTART *
                 _I2C1_MasterEnableRestart
               _I2C1_DO_SEND_RESTART_READ *
                 _I2C1_MasterEnableRestart
               _I2C1_DO_SEND_RESTART_WRITE *
                 _I2C1_MasterEnableRestart
               _I2C1_DO_SEND_STOP *
                 _I2C1_MasterStop
               _I2C1_DO_TX *
                 Absolute function(Fake) *
                 _I2C1_CallbackReturnReset *
                 _I2C1_CallbackReturnStop *
                 _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_STOP *
                   _I2C1_MasterStop
                 _I2C1_MasterIsNack *
                 _I2C1_MasterSendTxData *
                 _rd1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
               _I2C1_DO_TX_EMPTY *
                 Absolute function(Fake) *
                 _I2C1_CallbackReturnReset *
                 _I2C1_CallbackReturnStop *
                 _I2C1_DO_SEND_RESTART *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_STOP *
                   _I2C1_MasterStop
                 _I2C1_MasterSetIrq *
                 _rd1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
               _I2C1_MasterClearIrq *
               _I2C1_MasterIsNack *
             _I2C1_MasterWaitForEvent
       _I2C1_Open
         _I2C1_MasterClearIrq
         _I2C1_MasterOpen
       _I2C1_SetAddressNackCallback
         _I2C1_SetCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
         _I2C1_SetCallback
   _readPressureSensor
     _I2C1_Read1ByteRegister
       _I2C1_Close
         _I2C1_MasterClearIrq
         _I2C1_MasterClose
         _I2C1_MasterDisableIrq
       _I2C1_MasterWrite
         _I2C1_MasterOperation
           _I2C1_MasterStart
           _I2C1_Poller
             _I2C1_MasterFsm
               _I2C1_DO_ADDRESS_NACK *
                 Absolute function(Fake) *
                 _I2C1_CallbackReturnReset *
                 _I2C1_CallbackReturnStop *
                 _I2C1_DO_SEND_RESTART *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_STOP *
                   _I2C1_MasterStop
                 _rd1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
               _I2C1_DO_IDLE *
               _I2C1_DO_RCEN *
                 _I2C1_MasterStartRx
               _I2C1_DO_RESET *
               _I2C1_DO_RX *
                 Absolute function(Fake) *
                 _I2C1_CallbackReturnReset *
                 _I2C1_CallbackReturnStop *
                 _I2C1_DO_RX_NACK_RESTART *
                   _I2C1_MasterSendNack
                 _I2C1_DO_RX_NACK_STOP *
                   _I2C1_MasterSendNack
                 _I2C1_MasterGetRxData *
                 _I2C1_MasterSendAck *
                 _rd1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
               _I2C1_DO_RX_ACK *
                 _I2C1_MasterSendAck
               _I2C1_DO_RX_NACK_RESTART *
                 _I2C1_MasterSendNack
               _I2C1_DO_RX_NACK_STOP *
                 _I2C1_MasterSendNack
               _I2C1_DO_SEND_ADR_READ *
                 _I2C1_MasterSendTxData
               _I2C1_DO_SEND_ADR_WRITE *
                 _I2C1_MasterSendTxData
               _I2C1_DO_SEND_RESTART *
                 _I2C1_MasterEnableRestart
               _I2C1_DO_SEND_RESTART_READ *
                 _I2C1_MasterEnableRestart
               _I2C1_DO_SEND_RESTART_WRITE *
                 _I2C1_MasterEnableRestart
               _I2C1_DO_SEND_STOP *
                 _I2C1_MasterStop
               _I2C1_DO_TX *
                 Absolute function(Fake) *
                 _I2C1_CallbackReturnReset *
                 _I2C1_CallbackReturnStop *
                 _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_STOP *
                   _I2C1_MasterStop
                 _I2C1_MasterIsNack *
                 _I2C1_MasterSendTxData *
                 _rd1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
               _I2C1_DO_TX_EMPTY *
                 Absolute function(Fake) *
                 _I2C1_CallbackReturnReset *
                 _I2C1_CallbackReturnStop *
                 _I2C1_DO_SEND_RESTART *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_STOP *
                   _I2C1_MasterStop
                 _I2C1_MasterSetIrq *
                 _rd1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
               _I2C1_MasterClearIrq *
               _I2C1_MasterIsNack *
             _I2C1_MasterWaitForEvent
       _I2C1_Open
         _I2C1_MasterClearIrq
         _I2C1_MasterOpen
       _I2C1_SetAddressNackCallback
         _I2C1_SetCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
         _I2C1_SetCallback
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _printf
       _vfprintf
         _vfpfcnvrt
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
               ___xxtofl (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 __Umul8_16
             ___flmul
               __Umul8_16
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 __Umul8_16
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___xxtofl (ARG)
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART_Write
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _EUSART_Write
           _isupper
           _strncmp
           _tolower
             _isupper
   _sendPWM
     _setHigh
     _setLow
   _setZero

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4D      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     27      4F       9       98.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      46      11       87.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     1A9      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      17      16       28.8%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     1A9      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Mar 03 15:11:05 2020

                ?_EUSART_SetRxInterruptHandler 0071                                   ___fldiv@aexp 003F  
                                 ___fldiv@bexp 003E                                   ___fldiv@sign 0037  
                                  __CFG_CP$OFF 0000                                   ___awdiv@sign 0077  
                          __Umul8_16@word_mpld 0077                                    __CFG_LVP$ON 0000  
                                          l216 1FC2                                            l541 07FE  
                                          l607 147B                                            l623 12E3  
                                          l764 1D2E                                            _PR2 001E  
                                 __CFG_CPD$OFF 0000                          ?_I2C1_MasterOperation 0070  
                       ??_EUSART_RxDataHandler 0070                                            _pad 13A4  
               ?_EUSART_SetFramingErrorHandler 0071                        __size_of_PMD_Initialize 0008  
                                 ___awmod@sign 0077                                _TMR2_Initialize 1D8E  
                                          wreg 0009                         ?_I2C1_MasterSendTxData 0070  
            __size_of_I2C1_MasterEnableRestart 0003                           _I2C1_DO_RX_NACK_STOP 1D26  
                                 ___flmul@aexp 0032                      ?_I2C1_MasterEnableRestart 0070  
                                 ___flmul@bexp 0033                                   ___flmul@sign 002D  
                                 ___flmul@temp 0038                                   ___flmul@prod 0034  
                         I2C1_SetBuffer@buffer 0074                                   ___fltol@exp1 007B  
                                  main@hdr_trl 013F                                           l1051 13DC  
                                         l1115 0494                                           l1052 13E8  
                      ??_rd2RegCompleteHandler 007B                                           l1048 13BC  
                                         l1350 15DD                                           l1086 0299  
                                         l1087 0286                                           l1512 0DCC  
                                         l1504 0DB4                                           l1097 02D7  
                                         l1610 1644                                           l1338 1328  
                                         l1370 14E0                                           l1339 1342  
                                         l1347 158F                                           l1604 160E  
                                         l4012 1FD7                                           l1550 17FB  
                                         l1526 16CF                                           l1470 0C3F  
                                         l4200 1495                                           l1640 07C0  
                                         l1617 1658                                           l4018 1031  
                                         l1618 1662                                           l1714 1F47  
                                         l1474 0CD2                                           l1547 17D6  
                                         l1491 0D55                                           l1548 17EE  
                                         l1476 0CB5                                           l4140 119A  
                                         l4222 12E5                                           l4232 12EB  
                                         l4144 11BD                                           l4226 12E8  
                                         l1578 0FF3                                           l5042 0F89  
                                         l5034 0F5B                                           l4252 1071  
                                         l5060 0FC9                                           l5036 0F72  
                                         l4316 1ECE                                           l4182 144F  
                                         l5046 0F8B                                           l4318 1EDA  
                                         l4248 106E                                           l4264 1078  
                                         l4192 1455                                           l5056 0FB4  
                                         l4258 1075                                           l4186 1452  
                                         l4178 144C                                           l5066 0FE0  
                                         l5402 1396                                           l4292 10A6  
                                         l4700 12A4                                           l4524 1F41  
                                         l7110 12FE                                           l5086 1DB9  
                                         l4622 0779                                           l7022 08B7  
                                         ?_pad 0028                                           l7112 146D  
                                         l4288 10A3                                           l4544 1053  
                                         l5432 1F2A                                           l4712 12C1  
                                         l4704 12B0                                           l6400 0D7B  
                                         l4624 078A                                           l6240 1FDE  
                                         l7008 08A2                                           l7114 108B  
                                         l4298 10A9                                           l5434 1F2F  
                                         l4642 13FE                                           l6402 0D7D  
                                         l7108 10C0                                           l4660 141D  
                                         l4708 12B9                                           l4812 16A0  
                                         l6412 0D88                                           l6332 0CBD  
                                         l6324 0C85                                           l6260 0C0C  
                                         l4580 154C                                           l4628 07A3  
                                         l5438 1F34                                           l4670 1438  
                                         l4734 15A9                                           l6430 0DC4  
                                         l6350 0CE0                                           l6334 0CBF  
                                         l6342 0CCD                                           l6510 00BF  
                                         l4648 1409                                           l4904 1793  
                                         l4832 16C4                                           l4816 16A3  
                                         l6408 0D86                                           l6360 0CF4  
                                         l6264 0C0F                                           l4576 1547  
                                         l4592 1F7E                                           l6600 02D1  
                                         l4674 1440                                           l4666 142F  
                                         l4658 1411                                           l4690 1292  
                                         l4818 16AB                                           l4738 15C3  
                                         l6434 0DC8                                           l6266 0C17  
                                         l4762 14A9                                           l4586 156F  
                                         l6610 02E8                                           l6506 00B8  
                                         l5394 1390                                           l4932 17F7  
                                         l4908 1795                                           l4852 16FA  
                                         l4836 16C7                                           l6284 0C34  
                                         l4780 14DC                                           l6444 13B2  
                                         l5396 136C                                           l5566 1017  
                                         l5750 161D                                           l4686 128B  
                                         l4918 17BE                                           l4846 16EE  
                                         l6358 0CF2                                           l6294 0C49  
                                         l4758 14A0                                           l6454 13BE  
                                         l6702 05D1                                           l6622 0300  
                                         l6518 00D2                                           l5744 1606  
                                         l4872 1741                                           l4880 1723  
                                         l4952 0DEE                                           l6368 0D03  
                                         l6288 0C37                                           l6448 13BA  
                                         l6632 0312                                           l6608 02E4  
                                         l6528 0105                                           l6536 012A  
                                         l5754 1621                                           l4698 1298  
                                         l4882 175F                                           l4970 0E11  
                                         l4954 0DF0                                           l6394 0D74  
                                         l6386 0D67                                           l6378 0D4D  
                                         l4778 14CE                                           l6730 062A  
                                         l6714 0608                                           l6706 05EF  
                                         l6634 03F0                                           l6618 02F8  
                                         l6562 01A3                                           l6546 015D  
                                         l6554 0182                                           l6810 0B16  
                                         l5764 1656                                           l5756 1631  
                                         l4972 0E13                                           l4956 0DF8  
                                         l4788 14ED                                           l6732 0632  
                                         l6652 0492                                           l6644 0464  
                                         l6572 023D                                           l6820 0B6F  
                                         l5766 1649                                           l4878 175A  
                                         l6478 1354                                           l4982 0E29  
                                         l4974 0E1B                                           l3998 1FB7  
                                         l6742 062E                                           l6654 049B  
                                         l6638 0443                                           l6566 01D3  
                                         l6574 0262                                           l5870 121F  
                                         l4896 1765                                           l6752 0681  
                                         l6744 0669                                           l6592 02A4  
                                         l6584 0293                                           l6568 020D  
                                         l6920 0979                                           l5872 1222  
                                         l5778 167D                                           l4898 177C  
                                         l6666 04FC                                           l6586 029C  
                                         l6498 00A6                                           l6834 0BBE  
                                         l5866 120E                                           l6828 0B9C  
                                         l6844 0BCF                                           l6860 1154  
                                         l6686 051B                                           l6694 054F  
                                         l6838 0BC4                                           l6768 06BB  
                                         l6776 06DA                                           l6688 0539  
                                         l6866 10FB                                           l6858 1133  
                                         l6884 10CB                                           l6876 1121  
                                         l6894 10F1                                           l6798 0AD6  
                                         l6974 0870                                           l6994 088D  
                                         STR_1 2032                                           STR_2 2020  
                                         STR_3 2041                                           STR_4 2049  
                                         STR_7 2045                                           STR_8 204D  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           u4005 0765  
                                         u4025 0793                                           u3225 11BB  
                                         u4115 141E                                           u4125 1428  
                                         u4045 07AC                                           u4135 1430  
                                         u4215 12AA                                           u4225 12B1  
                                         u4095 1414                                           u4415 14E4  
                                         u4195 129B                                           u4355 14B2  
                                         u3900 1568                                           _PMD0 0911  
                                         u4605 1768                                           _PMD1 0912  
                                         _PMD2 0913                                           u4535 172B  
                                         u7015 02B3                                           _PMD3 0914  
                                         _PMD4 0915                                           u4705 17C7  
                                         u4625 1771                                           u4545 1732  
                                         u3745 1F48                                           u4385 14CF  
                                         u7025 02CD                                           _PMD5 0916  
                                         u4715 17E0                                           u3835 151D  
                                         u6260 1E7A                                           u7300 06AB  
                                         u4565 173B                                           u6270 1E7B  
                                         u7310 06AC                                           u4575 174F  
                                         u4815 0E9F                                           u6503 0D15  
                                         u3855 1536                                           u7215 05DF  
                                         u4825 0ECE                                           u6425 0CC3  
                                         u7225 05ED                                           u3890 1567  
                                         u4835 0F24                                           u3955 0712  
                                         u6380 0CA3                                           u3980 0740  
                                         u7500 0855                                           u5805 162A  
                                         u4845 0F3B                                           u3885 1559  
                                         u3965 072D                                           u6390 0CA4  
                                         u4695 17AC                                           u4855 0F4A  
                                         u6375 0C99                                           u7095 0320  
                                         u5825 163E                                           u4865 0F5E  
                                         u6545 0D68                                           u3985 073C  
                                         u4955 0FA2                                           u6900 014B  
                                         u7380 0B54                                           u5845 1650  
                                         u6805 1350                                           u4965 0FBD  
                                         u4885 0F67                                           u6645 0D9F  
                                         u7285 0674                                           u6750 1FA4  
                                         u6910 014C                                           u7390 0B55  
                                         u4975 0FD3                                           u6495 0CF8  
                                         u6735 13C8                                           u6760 1FA5  
                                         u7475 090A                                           u6860 00F3  
                                         u5885 166A                                           u7485 0945  
                                         u7557 087F                                           u6870 00F4  
                                         u7567 1208                                           u5984 1217  
                                         u7577 1225                                           u5985 1216  
                                         u7587 1238                                           u7597 09B1  
                                         u6985 0291                                           _TMR2 001D  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _WPUC 020E                        ??_wr2RegCompleteHandler 007B  
                             ??_I2C1_MasterFsm 0023               __size_of_I2C1_DO_RX_NACK_RESTART 0004  
                                 __CFG_WRT$OFF 0000                                  __CFG_FCMEN$ON 0000  
                    ??_I2C1_CallbackReturnStop 007B                                           _dbuf 0220  
                                         _main 0816                                           _prec 015B  
                                         _nout 0157                                           pad@i 002C  
                                         pad@p 0029                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           pad@w 002E  
                                         btemp 007E                                  __CFG_BOREN$ON 0000  
                                ___fpclassifyf 14FC                                  __CFG_BORV$LOW 0000  
                                         start 0023                               ??_I2C1_SetBuffer 0073  
                              ___fldiv@new_exp 0038                                _PWM5_Initialize 1DE2  
                                 _tolower$1931 0079                                  __CFG_CSWEN$ON 0000  
                                __CFG_MCLRE$ON 0000               __size_of_rdBlkRegCompleteHandler 0017  
                I2C1_CallbackReturnStop@funPtr 007A                                          ??_pad 002B  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 0009  
                __end_of_OSCILLATOR_Initialize 1DB0                                  ___fltol@sign1 007A  
                            __end_of_I2C1_Open 0800                                __end_of___fladd 0DD4  
                                        ?_main 0070                                __end_of___fldiv 1800  
                              __end_of___awdiv 1445                                __end_of___flneg 1DB9  
                                        STR_11 2051                                          STR_13 2051  
                                __CFG_WDTE$OFF 0000                                __end_of___awmod 12C6  
                              __end_of___flmul 1000                                __end_of___flsub 1F75  
                              __end_of___fltol 14FC                                ___awdiv@divisor 0071  
                                        _T2CON 001F                                 __CFG_DEBUG$OFF 0000  
                                        i1l314 0015                                          i1l228 1F16  
                                        i1l319 0021                                ___awdiv@counter 0076  
                                        _OSCEN 091D                                   vfpfcnvrt@fmt 005D  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                         ??_I2C1_MasterGetRxData 0071  
                                        _RXPPS 0E24                          ?_I2C1_DO_RX_NACK_STOP 0070  
                   ??_I2C1_CallbackReturnReset 007B                              ??_I2C1_MasterOpen 0071  
                            ??_I2C1_MasterStop 0071                              ??_I2C1_Initialize 0071  
                                        _flags 015D                                 _WDT_Initialize 1D06  
                                        _fputc 1191                                          _fputs 1FDA  
                                        _value 00ED                                          pad@fp 0030  
                                        _width 0159                                __end_of_sendPWM 123E  
                                        _putch 0800                                          main@i 0146  
                              __end_of_setHigh 1DCD                                __end_of_setZero 1D02  
                              __end_of_isupper 1E82                                          pclath 000A  
                                        status 0003                    __size_of_I2C1_MasterSendAck 0004  
                                        wtemp0 007E                                 ?___fpclassifyf 0071  
                              __end_of_tolower 1FB6                                   ??_I2C1_DO_RX 0020  
                                 ??_I2C1_DO_TX 0020                                __end_of_strncmp 13A4  
                       ??_I2C1_DO_ADDRESS_NACK 0020                                   ??_I2C1_Close 0071  
                  __size_of_I2C1_MasterStartRx 0003                                  _fsmStateTable 2000  
                              __initialization 0025                                   __end_of_main 08C8  
                               ??_EUSART_Write 0071                        __end_of_TMR2_Initialize 1D96  
                  ?_INTERRUPT_InterruptManager 0070                 ??_EUSART_SetRxInterruptHandler 0073  
                       ??_I2C1_MasterOperation 007B                                         ??_main 00EB  
                __size_of_I2C1_DO_SEND_RESTART 0004                             __end_of_I2C1_DO_RX 130D  
                           __end_of_I2C1_DO_TX 1497                         __end_of_WDT_Initialize 1D0A  
                           __end_of_I2C1_Close 1019      __end_of_EUSART_DefaultFramingErrorHandler 1CDF  
   __size_of_EUSART_DefaultFramingErrorHandler 0001            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 1CDE  
                      ?_I2C1_Read1ByteRegister 0028                     _EUSART_OverrunErrorHandler 01E0  
                                       ?_fputc 0074                                         ?_fputs 0020  
                             ___awdiv@dividend 0073                                         _ANSELA 018C  
                                       ?_putch 0070                                         _ANSELB 018D  
                                       _ANSELC 018E                             __CFG_RSTOSC$HFINT1 0000  
                                       _RC1REG 0199                                         _RC1STA 019D  
                                       _RB4PPS 0E9C                                         _RB6PPS 0E9E  
                                       _RB7PPS 0E9F                                         _ODCONA 028C  
                                       _ODCONB 028D                                         _RC6PPS 0EA6  
                                       _ODCONC 028E                        __end_of_PWM5_Initialize 1DEE  
         __size_of_I2C1_SetAddressNackCallback 000C                                         i1l5830 117F  
                                       i1l5824 1171                                         i1l5834 118E  
                                       _INLVLA 038C                                         _INLVLB 038D  
                                       _INLVLC 038E                                         _OSCFRQ 091F  
                                       _TX1REG 019A                                         _WDTCON 0097  
                                       _TX1STA 019E                              ?_I2C1_MasterClose 0070  
                             __end_of___xxtofl 1686                        ??_I2C1_MasterDisableIrq 0071  
                            ?_I2C1_MasterStart 0070                              ?_I2C1_MasterWrite 0070  
                     ?_I2C1_MasterWaitForEvent 0070                             ??_I2C1_MasterClose 0071  
                             _I2C1_DO_TX_EMPTY 106B                                 __CFG_PWRTE$OFF 0000  
                           ??_I2C1_MasterStart 0071                             ??_I2C1_MasterWrite 007C  
                                 vfprintf@cfmt 00DF                       ?_I2C1_Write1ByteRegister 0028  
                                       ___flge 1574                                         ___fleq 130D  
                                    ??___fladd 0020                                      ??___fldiv 002E  
                                    ??___awdiv 0075                                      ??___flneg 0075  
                               __CFG_STVREN$ON 0000                                      ??___awmod 0075  
                                    ??___flmul 0028                                      ??___flsub 007A  
                                    ??___fltol 0075                                         _efgtoa 005D  
                          _EUSART_Transmit_ISR 1EFB                                         _floorf 06F1  
                                       _packet 01D5                   __size_of_I2C1_MasterClearIrq 0003  
                             ___awdiv@quotient 0078                                         _setLow 1DCD  
                              ___awmod@divisor 0071                                ___awmod@counter 0076  
                                       _printf 0805                                         pad@buf 0028  
                     ??_I2C1_DO_SEND_ADR_WRITE 0072                                         _strcpy 1F75  
                                       _strlen 1EC9                              ?_I2C1_SetCallback 0071  
                       ??_I2C1_DO_RX_NACK_STOP 0071                          _I2C1_DO_SEND_ADR_READ 1D96  
                                       fputc@c 0074                                 _PMD_Initialize 1D86  
                                       fputs@c 0024                                         fputs@i 0025  
                                       fputs@s 0027                  ?_I2C1_SetDataCompleteCallback 0076  
                           __size_of__Umul8_16 001F                                ___fpclassifyf@e 0020  
                              ___fpclassifyf@u 0022                                      ??_sendPWM 0071  
                              ___fpclassifyf@x 0071                                      ??_setHigh 0071  
                           ??_I2C1_SetCallback 0074                 __end_of_I2C1_Read1ByteRegister 112A  
                              ?_WDT_Initialize 0070                                      ??_setZero 0071  
                                    ??_isupper 0073                               __end_of_vfprintf 115D  
                   ??_initializePressureSensor 002C                                      ??_tolower 0020  
                 __size_of_I2C1_MasterSendNack 0004                                      ??_strncmp 0075  
                         ?_EUSART_Transmit_ISR 0070                        _I2C1_DO_RX_NACK_RESTART 1D2A  
                                   ___flge@ff1 003A                                     ___flge@ff2 003E  
                              ??___fpclassifyf 0075                                   ___xxtofl@arg 0022  
                                 ___xxtofl@exp 0021                              _SYSTEM_Initialize 1EB1  
                                 ___xxtofl@val 0071                                     ___fleq@ff1 0071  
                                   ___fleq@ff2 0075                 I2C1_SetDataCompleteCallback@cb 0076  
                      __end_of__initialization 0059                                     ___flneg@f1 0071  
              I2C1_MasterOperation@returnValue 0027                             ?_SYSTEM_Initialize 0070  
                                   ___fltol@f1 0071                                  ??_I2C1_Poller 007B  
         __end_of_EUSART_SetTxInterruptHandler 1D67          __size_of_EUSART_SetTxInterruptHandler 0006  
                 _EUSART_SetTxInterruptHandler 1D61                        _rdBlkRegCompleteHandler 1E54  
                               __pcstackCOMMON 0070                                   __pidataBANK2 1D36  
                                 __pidataBANK5 1E82                            ??_SYSTEM_Initialize 0074  
             __end_of_I2C1_MasterEnableRestart 1CF3                     __end_of_readPressureSensor 0A59  
                                __end_of_fputc 11C6                                  __end_of_fputs 2000  
                                __end_of_putch 0805                               ?_TMR2_Initialize 0070  
                       __end_of_PMD_Initialize 1D8E                   ??_I2C1_DO_SEND_RESTART_WRITE 0071  
                      ??_I2C1_MasterSendTxData 0071                           _eusartRxStatusBuffer 01BD  
                        __end_of_I2C1_DO_RESET 1D49                ??_EUSART_SetOverrunErrorHandler 0073  
                                  sendPWM@data 0073                                        ??_fputc 0077  
                    __end_of_SYSTEM_Initialize 1EC9                                        ??_fputs 0021  
                        ??_EUSART_Transmit_ISR 0070                                        ??_putch 0073  
                                   __pbssBANK1 00ED                                     __pbssBANK2 0147  
                                   __pbssBANK3 01A0                                     __pbssBANK4 0220  
              __end_of_I2C1_MasterWaitForEvent 1D32                           __end_of_EUSART_Write 1FDA  
                             ?_PWM5_Initialize 0070                 __size_of_rd2RegCompleteHandler 0010  
                __end_of_rd2RegCompleteHandler 1E44                           I2C1_Open@returnValue 0073  
               __size_of_wr2RegCompleteHandler 0010                  __end_of_wr2RegCompleteHandler 1E24  
              __end_of_I2C1_Write1ByteRegister 10F8                    __size_of_EUSART_Receive_ISR 0034  
                        _rd1RegCompleteHandler 1E24                              _I2C1_DO_SEND_STOP 1D1E  
                            __end_of__Umul8_16 1F56                          _wr1RegCompleteHandler 1E44  
          __size_of_I2C1_DO_SEND_RESTART_WRITE 0004                                     __pmaintext 0816  
                     rd1RegCompleteHandler@ptr 007A                                        ?___flge 003A  
                ?_EUSART_SetTxInterruptHandler 0071                                        ?___fleq 0071  
             _EUSART_TxDefaultInterruptHandler 016C                             ?_I2C1_DO_SEND_STOP 0070  
                              __CFG_PPS1WAY$ON 0000                                _I2C1_MasterOpen 1DD7  
                                   __pintentry 0004                                        ?_efgtoa 0054  
                              _I2C1_MasterStop 1CF3                                _I2C1_Initialize 1D9E  
                          __end_of_I2C1_Poller 1DC3                                        ?_floorf 0040  
                                      ?_setLow 0070                        __size_of_I2C1_DO_RX_ACK 0004  
                 ??_EUSART_DefaultErrorHandler 0071                                        ?_printf 00E1  
                              ?_PMD_Initialize 0070                         ?_I2C1_DO_SEND_ADR_READ 0070  
                          ??_I2C1_DO_SEND_STOP 0071                                        ?_strcpy 0071  
                                      ?_strlen 0071                __size_of_I2C1_DO_SEND_ADR_WRITE 0007  
                                _eusartRxCount 0162                                      ?___xxtofl 0071  
                            _I2C1_MasterIsNack 1D67                                        _SP1BRGH 019C  
                                      _SP1BRGL 019B                                        _OSCCON1 0919  
                                      _OSCCON3 091B                                      _I2C1_Open 07C9  
                           __size_of_vfpfcnvrt 0199                      ??_I2C1_DO_RX_NACK_RESTART 0071  
                __size_of_EUSART_RxDataHandler 0018                                        _OSCTUNE 091E  
                                      _PWM5DCH 0618                                        _PWM5DCL 0617  
                                      _PWM5CON 0619                              _I2C1_MasterSetIrq 1CFC  
           __size_of_I2C1_DO_SEND_RESTART_READ 0004                                        _SSP1ADD 0212  
                                      _SLRCONA 030C                                        _SLRCONB 030D  
                                      _SLRCONC 030E                                        _SSP1BUF 0211  
                           ?_I2C1_MasterIsNack 0070                     ?_I2C1_DO_SEND_RESTART_READ 0070  
                     ??_EUSART_SetErrorHandler 0073                 ??_I2C1_SetDataCompleteCallback 0079  
                           ?_I2C1_MasterSetIrq 0070                                 main@dummy_data 0128  
                          ??_I2C1_MasterIsNack 0071                      __end_of_I2C1_DO_SEND_STOP 1D22  
                    ??_rdBlkRegCompleteHandler 007B                             I2C1_SetCallback@cb 0071  
                          ??_I2C1_MasterSetIrq 0071            __size_of_EUSART_DefaultErrorHandler 0003  
                              __size_of___flge 007C                                __size_of___fleq 0049  
                                      ___fladd 0BF2                                        ___fldiv 1686  
                                      ___awdiv 13F4                                        ___flneg 1DB0  
                                      ___awmod 1281                                        ___flmul 0DD4  
                                      ___flsub 1F56                                        ___fltol 1497  
                                    ?_vfprintf 00D9                                __size_of_efgtoa 0694  
                              __size_of_floorf 00D8                                  ?_I2C1_DO_IDLE 0070  
                                ?_I2C1_DO_RCEN 0070                                __size_of_setLow 000A  
                                      __ptext1 1CFF                                        __ptext2 1201  
                                      __ptext3 1DCD                                        __ptext4 1DC3  
                                      __ptext5 08C8                                        __ptext6 0805  
                                      __ptext7 112A                                        __ptext8 0A59  
                                      __ptext9 1356                       _I2C1_MasterEnableRestart 1CF0  
                              __size_of_printf 0011                      __end_of_I2C1_MasterIsNack 1D6D  
                 ?_I2C1_SetAddressNackCallback 0076                                __size_of_strcpy 001F  
                              __size_of_strlen 0018                          _OSCILLATOR_Initialize 1DA7  
                                    _T2CONbits 001F                                   __size_of_pad 0050  
                    __end_of_I2C1_MasterSetIrq 1CFF                                     ??___xxtofl 0075  
                     __end_of_I2C1_DO_TX_EMPTY 109A                               ___awmod@dividend 0073  
                                      _sendPWM 1201                                        _setHigh 1DC3  
                     ??_PIN_MANAGER_Initialize 0071                       wr1RegCompleteHandler@ptr 007A  
                                   ?_I2C1_Open 0070                                        _setZero 1CFF  
                                      _isupper 1E6B                                        efgtoa@c 0058  
                                      efgtoa@d 00B8                                        efgtoa@e 00D1  
                                      efgtoa@f 0054                                        efgtoa@g 00CD  
                                      efgtoa@h 00C3                                        efgtoa@i 00CB  
                                      efgtoa@l 00C7                                        efgtoa@m 00B4  
                                      efgtoa@n 00D3                                        efgtoa@p 00BD  
                                      efgtoa@t 00B0                                        efgtoa@u 00D5  
                                      efgtoa@w 00C0                  __size_of_I2C1_MasterGetRxData 0003  
             __end_of_initializePressureSensor 1EFB                                        main@EOC 0145  
                                      main@SOC 0144                       ?_I2C1_CallbackReturnStop 007A  
                   __size_of_SYSTEM_Initialize 0018                                        _tolower 1F94  
                                      clrloop0 1D74                                        _strncmp 1356  
            __end_of_I2C1_DO_SEND_RESTART_READ 1D16                           end_of_initialization 0059  
                   __end_of_I2C1_MasterSendAck 1D12                                        floorf@e 004E  
                                      floorf@m 004A                                        floorf@u 0050  
                                      floorf@x 0040                            _I2C1_MasterClearIrq 1CE4  
        __end_of_EUSART_SetOverrunErrorHandler 1D5B         __size_of_EUSART_SetOverrunErrorHandler 0006  
                _EUSART_SetOverrunErrorHandler 1D55                                        fputc@fp 0076  
                                      init_ram 1D79                     __end_of_I2C1_MasterStartRx 1CF9  
                                      fputs@fp 0020                         ?_rd1RegCompleteHandler 007A  
                                      initloop 1D7A                         _I2C1_DO_SEND_ADR_WRITE 1D7F  
                 __end_of_I2C1_DO_SEND_RESTART 1D1E                              _EUSART_Initialize 123E  
                      __end_of_I2C1_MasterOpen 1DE2                         ?_wr1RegCompleteHandler 007A  
                      __end_of_I2C1_MasterStop 1CF6                        __end_of_I2C1_Initialize 1DA7  
            __size_of_I2C1_CallbackReturnReset 0002                                    _I2C1_Poller 1DB9  
               __size_of_I2C1_MasterDisableIrq 0003                      ?_I2C1_CallbackReturnReset 007A  
                __end_of_I2C1_MasterDisableIrq 1CED                                    _I2C1_Status 01A0  
                __size_of_I2C1_DO_ADDRESS_NACK 002F                             ?_EUSART_Initialize 0070  
                            __end_of_vfpfcnvrt 0BF2                                     efgtoa@mode 00C2  
                                   efgtoa@sign 00BA                        __size_of_I2C1_MasterFsm 002A  
                          _I2C1_MasterSendNack 1D0A            __end_of_I2C1_SetAddressNackCallback 1E06  
                  _I2C1_SetAddressNackCallback 1DFA                                     ??_vfprintf 00DC  
                         ?_I2C1_MasterClearIrq 0070                                 ??_I2C1_DO_IDLE 0071  
                               ??_I2C1_DO_RCEN 0071             __end_of_I2C1_DO_SEND_RESTART_WRITE 1D1A  
                   _I2C1_DO_SEND_RESTART_WRITE 1D16                                        strcpy@d 0077  
                                      strlen@a 0074                                        strcpy@s 0075  
                                      strlen@s 0075                      __size_of_I2C1_MasterClose 0003  
                          ??_EUSART_Initialize 0073                               ??_WDT_Initialize 0071  
               ??_EUSART_SetTxInterruptHandler 0073                                _raw_temperature 015F  
                                    _PORTAbits 000C                        __size_of_I2C1_SetBuffer 000E  
              __end_of_rdBlkRegCompleteHandler 1E6B               __size_of_I2C1_MasterWaitForEvent 0004  
                    __size_of_I2C1_MasterStart 0003                      __size_of_I2C1_MasterWrite 0004  
                                  ___fladd@grs 002B                  __size_of_I2C1_MasterOperation 001E  
                ??_I2C1_SetAddressNackCallback 0079                      I2C1_Read1ByteRegister@reg 0028  
             __size_of_I2C1_Write1ByteRegister 002F                                  ___xxtofl@sign 0020  
              I2C1_SetDataCompleteCallback@ptr 0078                          __size_of_EUSART_Write 0024  
                  I2C1_Write1ByteRegister@data 0029                                    ___fldiv@grs 003A  
                                  ___fldiv@rem 0033                 I2C1_CallbackReturnReset@funPtr 007A  
                         ?_I2C1_MasterSendNack 0070                               __CFG_FEXTOSC$OFF 0000  
              __size_of_EUSART_SetErrorHandler 0006                                    ___flmul@grs 002E  
                    __end_of_EUSART_Initialize 1281                      __size_of_I2C1_SetCallback 0028  
                   rdBlkRegCompleteHandler@ptr 007A                     __size_of_I2C1_DO_SEND_STOP 0004  
                        ??_I2C1_MasterClearIrq 0071                                 __end_of___flge 15F0  
                               __end_of___fleq 1356             __end_of_EUSART_DefaultErrorHandler 1CE4  
                   _EUSART_DefaultErrorHandler 1CE1                                    vfpfcnvrt@ap 005E  
                                  vfpfcnvrt@ct 0067                                    vfpfcnvrt@fp 006F  
                               _I2C1_DO_RX_ACK 1D22                                 __end_of_efgtoa 06F1  
                                 _EUSART_Write 1FB6                                 __end_of_floorf 07C9  
                       ?_OSCILLATOR_Initialize 0070                                     floorf@F524 0147  
                   __size_of_I2C1_MasterIsNack 0006                                 __end_of_setLow 1DD7  
              __end_of_I2C1_CallbackReturnStop 1CE1                                 __end_of_printf 0816  
               __size_of_I2C1_MasterSendTxData 0005                  __end_of_I2C1_MasterSendTxData 1D3F  
                   __size_of_I2C1_MasterSetIrq 0003                                 __end_of_strcpy 1F94  
                               __end_of_strlen 1EE1                            start_initialization 0025  
                                  ??_I2C1_Open 0071                  __size_of_I2C1_DO_RX_NACK_STOP 0004  
              __size_of_PIN_MANAGER_Initialize 003B                             _readPressureSensor 08C8  
                                  __end_of_pad 13F4                          ??_I2C1_MasterSendNack 0071  
 EUSART_SetRxInterruptHandler@interruptHandler 0071   EUSART_SetTxInterruptHandler@interruptHandler 0071  
                                  putch@txData 0073                            ?_readPressureSensor 0070  
                        __end_of___fpclassifyf 1574                       I2C1_SetBuffer@bufferSize 0071  
                             ?_I2C1_MasterOpen 0070                               ?_I2C1_MasterStop 0070  
               I2C1_Write1ByteRegister@address 002B                               ?_I2C1_Initialize 0070  
               ?_EUSART_SetOverrunErrorHandler 0071                               __CFG_LPBOREN$OFF 0000  
                                  vfprintf@fmt 00D9                     _EUSART_FramingErrorHandler 01E2  
                                     ??___flge 0042              __size_of_initializePressureSensor 001A  
                                     ??___fleq 0020                               ??_PMD_Initialize 0071  
                    ?_initializePressureSensor 0070                         __end_of_I2C1_DO_RX_ACK 1D26  
                       _EUSART_SetErrorHandler 1D49                        ??_I2C1_DO_SEND_ADR_READ 0071  
                                     ??_efgtoa 0059                                      __Umul8_16 1F37  
                                  __pdataBANK2 0168                                    __pdataBANK5 02A0  
                                     ??_floorf 0044                                       ??_setLow 0071  
                         ??_readPressureSensor 0120                                       ??_printf 00E7  
                                     ??_strcpy 0073                                       ??_strlen 0073  
                             I2C1_Open@address 0072                                      ___fladd@a 0075  
                                    ___fladd@b 0071                                      ___fldiv@a 0026  
                                    ___fldiv@b 002A                    __end_of_EUSART_Transmit_ISR 1F19  
                                    ___flmul@a 0024                                      ___flmul@b 0020  
                                  __pbssCOMMON 007C                           _I2C1_DO_SEND_RESTART 1D1A  
                                    ___flsub@a 003A                                      ___flsub@b 003E  
                                    ___latbits 0003                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00A0                                  __pcstackBANK2 0120  
                     __size_of_TMR2_Initialize 0008                              __size_of___xxtofl 0096  
                  ??_I2C1_DO_SEND_RESTART_READ 0071                     __end_of_EUSART_Receive_ISR 1191  
                         __end_of_I2C1_DO_IDLE 1D44                           __end_of_I2C1_DO_RCEN 1D73  
                   __size_of_EUSART_Initialize 0043               _EUSART_RxDefaultInterruptHandler 01E4  
                I2C1_SetAddressNackCallback@cb 0076                                      __pnvBANK2 016C  
                                    __pnvBANK3 01DE                          _rd2RegCompleteHandler 1E34  
                        __end_of_fsmStateTable 2020                                    _efgtoa$1521 00A4  
                                  _efgtoa$1522 00A6                                    _efgtoa$1531 00AA  
                                  _efgtoa$1532 00AC                                    _efgtoa$1533 00AE  
                                  _efgtoa$1527 00A8                   __end_of_EUSART_RxDataHandler 1EB1  
                       _PIN_MANAGER_Initialize 11C6                          _wr2RegCompleteHandler 1E14  
                   ??_I2C1_MasterEnableRestart 0071                       __size_of_PWM5_Initialize 000C  
                     rd2RegCompleteHandler@ptr 007A                                 _I2C1_MasterFsm 1041  
                       __size_of_I2C1_DO_RESET 0005                                       ?___fladd 0071  
                              ?_I2C1_DO_RX_ACK 0070                                       ?___fldiv 0026  
                                     ?___awdiv 0071                                      __ptext100 1EFB  
                                    __ptext101 115D                                      __ptext102 1D02  
                                     ?___flneg 0071                                      __ptext103 1CDE  
                                    __ptext104 1CE1                                      __ptext105 1E99  
                                     ?___awmod 0071                                       ?___flmul 0020  
                                     ?___flsub 003A                                       ?___fltol 0071  
                                   ?__Umul8_16 0071                                   _eusartRxHead 007C  
                                 _eusartTxHead 00EF                                   _eusartRxTail 00EE  
                                 _eusartTxTail 0163                        _I2C1_MasterWaitForEvent 1D2E  
                             _I2C1_MasterClose 1CE7                       ??_I2C1_Read1ByteRegister 0029  
                               _I2C1_SetBuffer 1E06                   ??_INTERRUPT_InterruptManager 0071  
                             _I2C1_MasterStart 1CED                              __size_of_vfprintf 0033  
                             _I2C1_MasterWrite 1D32                        _eusartTxBufferRemaining 016E  
                                     _BAUD1CON 019F                        _I2C1_Write1ByteRegister 10C9  
                        ?_I2C1_DO_SEND_RESTART 0070                                       ?_sendPWM 0070  
                                     ?_setHigh 0070                              ?_I2C1_DO_TX_EMPTY 0070  
                                     ?_setZero 0070                                       ?_isupper 0071  
             __end_of_I2C1_CallbackReturnReset 0004                             ??_I2C1_DO_TX_EMPTY 0020  
                                     ?_tolower 0077                                 __size_of_fputc 0035  
                               __size_of_fputs 0026                        ??_rd1RegCompleteHandler 007B  
                                     ?_strncmp 0071                        ?_I2C1_DO_SEND_ADR_WRITE 0070  
                    I2C1_MasterSendTxData@data 0071                                 __size_of_putch 0005  
                               _eusartRxBuffer 01C5                        ??_wr1RegCompleteHandler 007B  
                               _eusartTxBuffer 01CD                               _I2C1_SetCallback 1019  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 0071  
                                     _LATCbits 010E                                     _I2C1_DO_RX 12C6  
                                   _I2C1_DO_TX 1445                                      clear_ram0 1D73  
                                     _PIE1bits 0091                              _eusartRxLastError 0161  
                                   _I2C1_Close 1000                                   ?_I2C1_Poller 0070  
                       __end_of_I2C1_MasterFsm 106B            __size_of_INTERRUPT_InterruptManager 001F  
                 __end_of_I2C1_MasterGetRxData 1CFC                                       _PIR1bits 0011  
             __size_of_I2C1_CallbackReturnStop 0002                ??_EUSART_SetFramingErrorHandler 0073  
                           _I2C1_MasterSendAck 1D0E                      _I2C1_DO_SEND_RESTART_READ 1D12  
                                    main@F7272 0168                                      main@F7276 02A0  
                                     _SSP1CON1 0215                                       _SSP1CON2 0216  
    __end_of_EUSART_DefaultOverrunErrorHandler 1D06     __size_of_EUSART_DefaultOverrunErrorHandler 0004  
          ??_EUSART_DefaultOverrunErrorHandler 0070             ?_EUSART_DefaultOverrunErrorHandler 0070  
            _EUSART_DefaultOverrunErrorHandler 1D02                         __end_of_I2C1_SetBuffer 1E14  
                                     _SSP1STAT 0214           __end_of_I2C1_SetDataCompleteCallback 1DFA  
        __size_of_I2C1_SetDataCompleteCallback 000C                   _I2C1_SetDataCompleteCallback 1DEE  
                           _I2C1_MasterStartRx 1CF6                                      _vfpfcnvrt 0A59  
                  ?_I2C1_DO_SEND_RESTART_WRITE 0070                     I2C1_Write1ByteRegister@reg 0028  
                          ?_I2C1_MasterSendAck 0070                       ?_I2C1_DO_RX_NACK_RESTART 0070  
                          ?_I2C1_MasterStartRx 0070                   __end_of_I2C1_DO_ADDRESS_NACK 10C9  
                     wr2RegCompleteHandler@ptr 007A                 __end_of_I2C1_DO_SEND_ADR_WRITE 1D86  
                                _I2C1_DO_RESET 1D44                                     vfpfcnvrt@c 006E  
                                   vfpfcnvrt@f 006A                          I2C1_Close@returnValue 0072  
                     ?_rdBlkRegCompleteHandler 007A                            I2C1_SetCallback@idx 0075  
                          I2C1_SetCallback@ptr 0073                           ??_I2C1_MasterSendAck 0071  
                            ??_TMR2_Initialize 0071                         ?_rd2RegCompleteHandler 007A  
                 __end_of_I2C1_MasterOperation 1F37                         ?_wr2RegCompleteHandler 007A  
                         ??_I2C1_MasterStartRx 0071                                ?_I2C1_MasterFsm 0070  
                                   vfprintf@ap 00DB                                     vfprintf@fp 00DE  
                    ??_I2C1_MasterWaitForEvent 0071                          _I2C1_MasterDisableIrq 1CEA  
                      ??_OSCILLATOR_Initialize 0071                                    ??__Umul8_16 0073  
                          _EUSART_ErrorHandler 01DE                                ?_I2C1_SetBuffer 0071  
                             __size_of___fladd 01E2                               __size_of___fldiv 017A  
                             __size_of___awdiv 0051                               __size_of___flneg 0009  
                             __size_of___awmod 0045                               __size_of___flmul 022C  
                             __size_of___flsub 001F                               __size_of___fltol 0065  
                  ?_EUSART_DefaultErrorHandler 0070                                     ?_vfpfcnvrt 005D  
                                 _raw_pressure 0164                      ??_I2C1_Write1ByteRegister 002A  
              __size_of_I2C1_Read1ByteRegister 0032                              ??_PWM5_Initialize 0071  
            I2C1_Read1ByteRegister@returnValue 002B                         ??_I2C1_DO_SEND_RESTART 0071  
                           ___fpclassifyf@F463 014B                                       ___xxtofl 15F0  
                               ?_I2C1_DO_RESET 0070                               __size_of_sendPWM 003D  
                         _EUSART_RxDataHandler 1E99                          __size_of_I2C1_DO_IDLE 0005  
                             __size_of_setHigh 000A                          __size_of_I2C1_DO_RCEN 0006  
                                     __ptext10 005D                                       __ptext11 1F94  
                                     __ptext20 06F1                                       __ptext12 1E6B  
                                     __ptext21 14FC                                       __ptext13 1F75  
                                     __ptext30 1686                                       __ptext22 1497  
                                     __ptext14 13A4                                       __ptext31 1281  
                                     __ptext23 1F56                                       __ptext15 1EC9  
                                     __ptext40 1D32                                       __ptext32 13F4  
                                     __ptext24 0BF2                                       __ptext16 1FDA  
                                     __ptext41 1F19                                       __ptext33 15F0  
                                     __ptext25 1DB0                                       __ptext17 1191  
                             __size_of_setZero 0003                                       __ptext50 1D1E  
                                     __ptext42 1DB9                                       __ptext34 10F8  
                                     __ptext26 0DD4                                       __ptext18 0800  
                                     __ptext51 1D1A                                       __ptext43 1D2E  
                                     __ptext35 1EE1                                       __ptext27 1F37  
                                     __ptext19 1FB6                                       __ptext60 106B  
                                     __ptext52 1D16                                       __ptext44 1041  
                                     __ptext36 10C9                                       __ptext28 1574  
                                     __ptext61 1CFC                                       __ptext53 1D12  
                                     __ptext45 109A                                       __ptext37 1DFA  
                                     __ptext29 130D                                       __ptext70 1E54  
                                     __ptext62 1D67                                       __ptext54 1D6D  
                                     __ptext46 1D44                                       __ptext38 07C9  
                                     __ptext71 1E44                                       __ptext63 1D3A  
                                     __ptext55 12C6                                       __ptext47 1D2A  
                                     __ptext39 1DD7                                       __ptext80 1CED  
                                     __ptext72 1E34                                       __ptext64 1D0E  
                                     __ptext56 1445                                       __ptext48 1D26  
                                     __ptext81 1000                                       __ptext73 1E24  
                                     __ptext65 1CF9                                       __ptext57 1D7F  
                                     __ptext49 1D22                                       __ptext90 11C6  
                                     __ptext82 1CEA                                       __ptext74 1E14  
                                     __ptext66 1D0A                                       __ptext58 1D96  
                                     __ptext91 1DA7                                       __ptext83 1CE7  
                                     __ptext75 1DEE                                       __ptext67 1CF6  
                                     __ptext59 1D3F                                       __ptext92 1D9E  
                                     __ptext84 1CE4                                       __ptext76 1019  
                                     __ptext68 0002                                       __ptext93 123E  
                                     __ptext85 1EB1                                       __ptext77 1E06  
                                     __ptext69 1CDF                                       __ptext94 1D61  
                                     __ptext86 1D06                                       __ptext78 1CF3  
                                     __ptext95 1D5B                                       __ptext87 1D8E  
                                     __ptext79 1CF0                                       __ptext96 1D55  
                                     __ptext88 1DE2                                       __ptext97 1D4F  
                                     __ptext89 1D86                                       __ptext98 1D49  
                             __size_of_isupper 0017                                   _SSP1CON1bits 0215  
                                 _SSP1CON2bits 0216                               __size_of_tolower 0022  
                                   strcpy@dest 0078                               __size_of_strncmp 004E  
                     _I2C1_CallbackReturnReset 0002                                  __size_of_main 00B2  
                                  ?_I2C1_DO_RX 0070                                    ?_I2C1_DO_TX 0070  
                  __end_of_I2C1_MasterClearIrq 1CE7                   __end_of_I2C1_DO_RX_NACK_STOP 1D2A  
                                  ?_I2C1_Close 0070                        ?_EUSART_SetErrorHandler 0071  
                                   _RC1STAbits 019D                                       efgtoa@fp 00BC  
                                     efgtoa@ne 00B6                                       efgtoa@pp 00B2  
                                     efgtoa@ou 00A0  EUSART_SetOverrunErrorHandler@interruptHandler 0071  
                                     int$flags 007E                                       _pressure 0153  
              __end_of_I2C1_DO_RX_NACK_RESTART 1D2E                       I2C1_MasterOperation@read 0026  
                                     _vfprintf 112A             __end_of_INTERRUPT_InterruptManager 0023  
                   _INTERRUPT_InterruptManager 0004                                      printf@fmt 00E1  
        __end_of_EUSART_SetFramingErrorHandler 1D55         __size_of_EUSART_SetFramingErrorHandler 0006  
                _EUSART_SetFramingErrorHandler 1D4F                                   _SSP1STATbits 0214  
               __size_of_I2C1_DO_SEND_ADR_READ 0008                  __end_of_I2C1_DO_SEND_ADR_READ 1D9E  
                                 _I2C1_DO_IDLE 1D3F                                   _I2C1_DO_RCEN 1D6D  
                  __end_of_I2C1_MasterSendNack 1D0E                                 _vfpfcnvrt$1550 0065  
                                   _INTCONbits 000B                          ?_EUSART_RxDataHandler 0070  
               I2C1_SetAddressNackCallback@ptr 0078                           _I2C1_MasterGetRxData 1CF9  
                        _I2C1_MasterSendTxData 1D3A                        __size_of_WDT_Initialize 0004  
                                     intlevel1 0000                                       sendPWM@j 0072  
                     __end_of_I2C1_MasterClose 1CEA                         _I2C1_Read1ByteRegister 10F8  
                      ?_PIN_MANAGER_Initialize 0070                  I2C1_Read1ByteRegister@address 002A  
                     __end_of_I2C1_MasterStart 1CF0                       __end_of_I2C1_MasterWrite 1D36  
               __end_of_EUSART_SetErrorHandler 1D4F                              __CFG_CLKOUTEN$OFF 0000  
                                    strcpy@src 0071                               ??_I2C1_DO_RX_ACK 0071  
                                     isupper@c 0071                        _I2C1_CallbackReturnStop 1CDF  
                                    strncmp@_l 0076                                      strncmp@_r 0071  
         __end_of_EUSART_SetRxInterruptHandler 1D61          __size_of_EUSART_SetRxInterruptHandler 0006  
                 _EUSART_SetRxInterruptHandler 1D5B                           _I2C1_DO_ADDRESS_NACK 109A  
                       ?_I2C1_MasterDisableIrq 0070                                    efgtoa@nmode 00BF  
                         __size_of_I2C1_Poller 000A                                       printf@ap 00EA  
                           _EUSART_Receive_ISR 115D  EUSART_SetFramingErrorHandler@interruptHandler 0071  
                                  ??_vfpfcnvrt 005F                       __size_of_I2C1_MasterOpen 000B  
                     __size_of_I2C1_MasterStop 0003                       __size_of_I2C1_Initialize 0009  
                                __pstringtext1 2000                                  __pstringtext2 2020  
                                __pstringtext3 2032                                  __pstringtext4 2041  
                                __pstringtext5 2045                                  __pstringtext6 2049  
                                __pstringtext7 204D                                  __pstringtext8 2051  
                  __size_of_readPressureSensor 0191                                  __pstringtext9 0000  
                     __end_of_I2C1_SetCallback 1041                         __Umul8_16@multiplicand 0071  
                                  _temperature 014F                                       tolower@c 0077  
                          ?_EUSART_Receive_ISR 0070                                     _SSP1DATPPS 0E21  
                       __size_of___fpclassifyf 0078                                     _SSP1CLKPPS 0E20  
                          __size_of_I2C1_DO_RX 0047                            __size_of_I2C1_DO_TX 0052  
                              ??_I2C1_DO_RESET 0071                           _I2C1_MasterOperation 1F19  
                                     strncmp@l 0079                                       strncmp@n 0073  
                                     strncmp@r 0077                            __size_of_I2C1_Close 0019  
                        ?_I2C1_MasterGetRxData 0070                                     _TX1STAbits 019E  
                                ___fladd@signs 0028                             EUSART_Write@txData 0072  
                 __size_of_EUSART_Transmit_ISR 001E                 __end_of_PIN_MANAGER_Initialize 1201  
               __size_of_rd1RegCompleteHandler 0010                  __end_of_rd1RegCompleteHandler 1E34  
                           __size_of_I2C1_Open 0037                                    _PWMTMRSbits 061F  
                                 ___fladd@aexp 0029                                   ___fladd@bexp 002A  
               __size_of_wr1RegCompleteHandler 0010                           ??_EUSART_Receive_ISR 0071  
                         __Umul8_16@multiplier 0079                  __end_of_wr1RegCompleteHandler 1E54  
                     _initializePressureSensor 1EE1                      __size_of_I2C1_DO_TX_EMPTY 002F  
                        ?_I2C1_DO_ADDRESS_NACK 0070                              __Umul8_16@product 0075  
