

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Feb 19 20:01:12 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18346
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	idataBANK5,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
     9                           	psect	stringtext2,global,class=STRCODE,delta=2
    10                           	psect	stringtext3,global,class=STRCODE,delta=2
    11                           	psect	stringtext4,global,class=STRCODE,delta=2
    12                           	psect	stringtext5,global,class=STRCODE,delta=2
    13                           	psect	stringtext6,global,class=STRCODE,delta=2
    14                           	psect	stringtext7,global,class=STRCODE,delta=2
    15                           	psect	stringtext8,global,class=STRCODE,delta=2
    16                           	psect	stringtext9,global,class=STRCODE,delta=2
    17                           	psect	cinit,global,class=CODE,merge=1,delta=2
    18                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    22                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    23                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    24                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    25                           	psect	inittext,global,class=CODE,delta=2
    26                           	psect	clrtext,global,class=CODE,delta=2
    27                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    28                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    29                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    30                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    31                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    32                           	psect	text1,local,class=CODE,merge=1,delta=2
    33                           	psect	text2,local,class=CODE,merge=1,delta=2
    34                           	psect	text3,local,class=CODE,merge=1,delta=2
    35                           	psect	text4,local,class=CODE,merge=1,delta=2
    36                           	psect	text5,local,class=CODE,merge=1,delta=2
    37                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text7,local,class=CODE,merge=1,delta=2
    39                           	psect	text8,local,class=CODE,merge=1,delta=2
    40                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text10,local,class=CODE,merge=1,delta=2
    42                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text14,local,class=CODE,merge=1,delta=2
    46                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text18,local,class=CODE,merge=1,delta=2
    50                           	psect	text19,local,class=CODE,merge=1,delta=2
    51                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    54                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    55                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    59                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    60                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    63                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    64                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
    65                           	psect	text34,local,class=CODE,merge=1,delta=2
    66                           	psect	text35,local,class=CODE,merge=1,delta=2
    67                           	psect	text36,local,class=CODE,merge=1,delta=2
    68                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text38,local,class=CODE,merge=1,delta=2
    70                           	psect	text39,local,class=CODE,merge=1,delta=2
    71                           	psect	text40,local,class=CODE,merge=1,delta=2
    72                           	psect	text41,local,class=CODE,merge=1,inline,delta=2
    73                           	psect	text42,local,class=CODE,merge=1,inline,delta=2
    74                           	psect	text43,local,class=CODE,merge=1,delta=2
    75                           	psect	text44,local,class=CODE,merge=1,delta=2
    76                           	psect	text45,local,class=CODE,merge=1,delta=2
    77                           	psect	text46,local,class=CODE,merge=1,delta=2
    78                           	psect	text47,local,class=CODE,merge=1,delta=2
    79                           	psect	text48,local,class=CODE,merge=1,delta=2
    80                           	psect	text49,local,class=CODE,merge=1,delta=2
    81                           	psect	text50,local,class=CODE,merge=1,delta=2
    82                           	psect	text51,local,class=CODE,merge=1,delta=2
    83                           	psect	text52,local,class=CODE,merge=1,delta=2
    84                           	psect	text53,local,class=CODE,merge=1,delta=2
    85                           	psect	text54,local,class=CODE,merge=1,delta=2
    86                           	psect	text55,local,class=CODE,merge=1,delta=2
    87                           	psect	text56,local,class=CODE,merge=1,delta=2
    88                           	psect	text57,local,class=CODE,merge=1,delta=2
    89                           	psect	text58,local,class=CODE,merge=1,delta=2
    90                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    91                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
    92                           	psect	text61,local,class=CODE,merge=1,inline,delta=2
    93                           	psect	text62,local,class=CODE,merge=1,inline,delta=2
    94                           	psect	text63,local,class=CODE,merge=1,inline,delta=2
    95                           	psect	text64,local,class=CODE,merge=1,inline,delta=2
    96                           	psect	text65,local,class=CODE,merge=1,inline,delta=2
    97                           	psect	text66,local,class=CODE,merge=1,delta=2
    98                           	psect	text67,local,class=CODE,merge=1,delta=2
    99                           	psect	text68,local,class=CODE,merge=1,delta=2
   100                           	psect	text69,local,class=CODE,merge=1,delta=2
   101                           	psect	text70,local,class=CODE,merge=1,delta=2
   102                           	psect	text71,local,class=CODE,merge=1,delta=2
   103                           	psect	text72,local,class=CODE,merge=1,delta=2
   104                           	psect	text73,local,class=CODE,merge=1,delta=2
   105                           	psect	text74,local,class=CODE,merge=1,delta=2
   106                           	psect	text75,local,class=CODE,merge=1,delta=2
   107                           	psect	text76,local,class=CODE,merge=1,inline,delta=2
   108                           	psect	text77,local,class=CODE,merge=1,inline,delta=2
   109                           	psect	text78,local,class=CODE,merge=1,inline,delta=2
   110                           	psect	text79,local,class=CODE,merge=1,delta=2
   111                           	psect	text80,local,class=CODE,merge=1,inline,delta=2
   112                           	psect	text81,local,class=CODE,merge=1,inline,delta=2
   113                           	psect	text82,local,class=CODE,merge=1,inline,delta=2
   114                           	psect	text83,local,class=CODE,merge=1,delta=2
   115                           	psect	text84,local,class=CODE,merge=1,delta=2
   116                           	psect	text85,local,class=CODE,merge=1,delta=2
   117                           	psect	text86,local,class=CODE,merge=1,delta=2
   118                           	psect	text87,local,class=CODE,merge=1,delta=2
   119                           	psect	text88,local,class=CODE,merge=1,delta=2
   120                           	psect	text89,local,class=CODE,merge=1,delta=2
   121                           	psect	text90,local,class=CODE,merge=1,delta=2
   122                           	psect	text91,local,class=CODE,merge=1,delta=2
   123                           	psect	text92,local,class=CODE,merge=1,delta=2
   124                           	psect	text93,local,class=CODE,merge=1,delta=2
   125                           	psect	text94,local,class=CODE,merge=1,delta=2
   126                           	psect	text95,local,class=CODE,merge=1,delta=2
   127                           	psect	text96,local,class=CODE,merge=1,delta=2
   128                           	psect	intentry,global,class=CODE,delta=2
   129                           	psect	text98,local,class=CODE,merge=1,delta=2
   130                           	psect	text99,local,class=CODE,merge=1,delta=2
   131                           	psect	text100,local,class=CODE,merge=1,delta=2
   132                           	psect	text101,local,class=CODE,merge=1,delta=2
   133                           	psect	text102,local,class=CODE,merge=1,delta=2
   134                           	psect	text103,local,class=CODE,merge=1,delta=2
   135                           	dabs	1,0x7E,2
   136  0000                     
   137                           ; Version 2.05
   138                           ; Generated 20/12/2018 GMT
   139                           ; 
   140                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   141                           ; All rights reserved.
   142                           ; 
   143                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   144                           ; 
   145                           ; Redistribution and use in source and binary forms, with or without modification, are
   146                           ; permitted provided that the following conditions are met:
   147                           ; 
   148                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   149                           ;        conditions and the following disclaimer.
   150                           ; 
   151                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   152                           ;        of conditions and the following disclaimer in the documentation and/or other
   153                           ;        materials provided with the distribution.
   154                           ; 
   155                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   156                           ;        software without specific prior written permission.
   157                           ; 
   158                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   159                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   160                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   161                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   162                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   163                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   164                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   165                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   166                           ; 
   167                           ; 
   168                           ; Code-generator required, PIC16F18346 Definitions
   169                           ; 
   170                           ; SFR Addresses
   171  0000                     	;# 
   172  0001                     	;# 
   173  0002                     	;# 
   174  0003                     	;# 
   175  0004                     	;# 
   176  0005                     	;# 
   177  0006                     	;# 
   178  0007                     	;# 
   179  0008                     	;# 
   180  0009                     	;# 
   181  000A                     	;# 
   182  000B                     	;# 
   183  000C                     	;# 
   184  000D                     	;# 
   185  000E                     	;# 
   186  0010                     	;# 
   187  0011                     	;# 
   188  0012                     	;# 
   189  0013                     	;# 
   190  0014                     	;# 
   191  0015                     	;# 
   192  0015                     	;# 
   193  0016                     	;# 
   194  0016                     	;# 
   195  0017                     	;# 
   196  0018                     	;# 
   197  0019                     	;# 
   198  0019                     	;# 
   199  001A                     	;# 
   200  001B                     	;# 
   201  001C                     	;# 
   202  001D                     	;# 
   203  001E                     	;# 
   204  001F                     	;# 
   205  008C                     	;# 
   206  008D                     	;# 
   207  008E                     	;# 
   208  0090                     	;# 
   209  0091                     	;# 
   210  0092                     	;# 
   211  0093                     	;# 
   212  0094                     	;# 
   213  0097                     	;# 
   214  009B                     	;# 
   215  009B                     	;# 
   216  009C                     	;# 
   217  009D                     	;# 
   218  009E                     	;# 
   219  009F                     	;# 
   220  010C                     	;# 
   221  010D                     	;# 
   222  010E                     	;# 
   223  0111                     	;# 
   224  0112                     	;# 
   225  0113                     	;# 
   226  0114                     	;# 
   227  0115                     	;# 
   228  0116                     	;# 
   229  0117                     	;# 
   230  0118                     	;# 
   231  0119                     	;# 
   232  018C                     	;# 
   233  018D                     	;# 
   234  018E                     	;# 
   235  0197                     	;# 
   236  0199                     	;# 
   237  0199                     	;# 
   238  0199                     	;# 
   239  019A                     	;# 
   240  019A                     	;# 
   241  019A                     	;# 
   242  019B                     	;# 
   243  019B                     	;# 
   244  019B                     	;# 
   245  019B                     	;# 
   246  019B                     	;# 
   247  019C                     	;# 
   248  019C                     	;# 
   249  019C                     	;# 
   250  019D                     	;# 
   251  019D                     	;# 
   252  019D                     	;# 
   253  019E                     	;# 
   254  019E                     	;# 
   255  019E                     	;# 
   256  019F                     	;# 
   257  019F                     	;# 
   258  019F                     	;# 
   259  019F                     	;# 
   260  019F                     	;# 
   261  020C                     	;# 
   262  020D                     	;# 
   263  020E                     	;# 
   264  0211                     	;# 
   265  0211                     	;# 
   266  0212                     	;# 
   267  0212                     	;# 
   268  0213                     	;# 
   269  0213                     	;# 
   270  0214                     	;# 
   271  0214                     	;# 
   272  0215                     	;# 
   273  0215                     	;# 
   274  0215                     	;# 
   275  0215                     	;# 
   276  0216                     	;# 
   277  0216                     	;# 
   278  0217                     	;# 
   279  0217                     	;# 
   280  0219                     	;# 
   281  021A                     	;# 
   282  021B                     	;# 
   283  021C                     	;# 
   284  021D                     	;# 
   285  021D                     	;# 
   286  021E                     	;# 
   287  021F                     	;# 
   288  028C                     	;# 
   289  028D                     	;# 
   290  028E                     	;# 
   291  0291                     	;# 
   292  0291                     	;# 
   293  0292                     	;# 
   294  0293                     	;# 
   295  0294                     	;# 
   296  0295                     	;# 
   297  0295                     	;# 
   298  0296                     	;# 
   299  0297                     	;# 
   300  0298                     	;# 
   301  029F                     	;# 
   302  030C                     	;# 
   303  030D                     	;# 
   304  030E                     	;# 
   305  0311                     	;# 
   306  0311                     	;# 
   307  0312                     	;# 
   308  0313                     	;# 
   309  0314                     	;# 
   310  0315                     	;# 
   311  0315                     	;# 
   312  0316                     	;# 
   313  0317                     	;# 
   314  0318                     	;# 
   315  038C                     	;# 
   316  038D                     	;# 
   317  038E                     	;# 
   318  0391                     	;# 
   319  0392                     	;# 
   320  0393                     	;# 
   321  0394                     	;# 
   322  0395                     	;# 
   323  0396                     	;# 
   324  0397                     	;# 
   325  0398                     	;# 
   326  0399                     	;# 
   327  039A                     	;# 
   328  039C                     	;# 
   329  039D                     	;# 
   330  039E                     	;# 
   331  039F                     	;# 
   332  0411                     	;# 
   333  0411                     	;# 
   334  0412                     	;# 
   335  0413                     	;# 
   336  0414                     	;# 
   337  0415                     	;# 
   338  0416                     	;# 
   339  0417                     	;# 
   340  0418                     	;# 
   341  0418                     	;# 
   342  0419                     	;# 
   343  041A                     	;# 
   344  041B                     	;# 
   345  041C                     	;# 
   346  041D                     	;# 
   347  041E                     	;# 
   348  041F                     	;# 
   349  0498                     	;# 
   350  0498                     	;# 
   351  0499                     	;# 
   352  049A                     	;# 
   353  049B                     	;# 
   354  049B                     	;# 
   355  049C                     	;# 
   356  049D                     	;# 
   357  049E                     	;# 
   358  049F                     	;# 
   359  0617                     	;# 
   360  0618                     	;# 
   361  0619                     	;# 
   362  0619                     	;# 
   363  061A                     	;# 
   364  061B                     	;# 
   365  061C                     	;# 
   366  061C                     	;# 
   367  061F                     	;# 
   368  0691                     	;# 
   369  0692                     	;# 
   370  0693                     	;# 
   371  0694                     	;# 
   372  0695                     	;# 
   373  0696                     	;# 
   374  0697                     	;# 
   375  0698                     	;# 
   376  0699                     	;# 
   377  0711                     	;# 
   378  0712                     	;# 
   379  0713                     	;# 
   380  0714                     	;# 
   381  0715                     	;# 
   382  0716                     	;# 
   383  0717                     	;# 
   384  0718                     	;# 
   385  0719                     	;# 
   386  0891                     	;# 
   387  0891                     	;# 
   388  0891                     	;# 
   389  0891                     	;# 
   390  0891                     	;# 
   391  0891                     	;# 
   392  0892                     	;# 
   393  0892                     	;# 
   394  0892                     	;# 
   395  0893                     	;# 
   396  0893                     	;# 
   397  0893                     	;# 
   398  0893                     	;# 
   399  0893                     	;# 
   400  0893                     	;# 
   401  0894                     	;# 
   402  0894                     	;# 
   403  0894                     	;# 
   404  0895                     	;# 
   405  0895                     	;# 
   406  0895                     	;# 
   407  0896                     	;# 
   408  0896                     	;# 
   409  0896                     	;# 
   410  089B                     	;# 
   411  0911                     	;# 
   412  0912                     	;# 
   413  0913                     	;# 
   414  0914                     	;# 
   415  0915                     	;# 
   416  0916                     	;# 
   417  0918                     	;# 
   418  0919                     	;# 
   419  091A                     	;# 
   420  091B                     	;# 
   421  091C                     	;# 
   422  091D                     	;# 
   423  091E                     	;# 
   424  091F                     	;# 
   425  0E0F                     	;# 
   426  0E10                     	;# 
   427  0E11                     	;# 
   428  0E12                     	;# 
   429  0E13                     	;# 
   430  0E14                     	;# 
   431  0E15                     	;# 
   432  0E16                     	;# 
   433  0E17                     	;# 
   434  0E18                     	;# 
   435  0E19                     	;# 
   436  0E1A                     	;# 
   437  0E1B                     	;# 
   438  0E1C                     	;# 
   439  0E1D                     	;# 
   440  0E1E                     	;# 
   441  0E1F                     	;# 
   442  0E20                     	;# 
   443  0E21                     	;# 
   444  0E22                     	;# 
   445  0E24                     	;# 
   446  0E25                     	;# 
   447  0E28                     	;# 
   448  0E29                     	;# 
   449  0E2A                     	;# 
   450  0E2B                     	;# 
   451  0E2C                     	;# 
   452  0E2D                     	;# 
   453  0E2E                     	;# 
   454  0E2F                     	;# 
   455  0E90                     	;# 
   456  0E91                     	;# 
   457  0E92                     	;# 
   458  0E94                     	;# 
   459  0E95                     	;# 
   460  0E9C                     	;# 
   461  0E9D                     	;# 
   462  0E9E                     	;# 
   463  0E9F                     	;# 
   464  0EA0                     	;# 
   465  0EA1                     	;# 
   466  0EA2                     	;# 
   467  0EA3                     	;# 
   468  0EA4                     	;# 
   469  0EA5                     	;# 
   470  0EA6                     	;# 
   471  0EA7                     	;# 
   472  0F0F                     	;# 
   473  0F10                     	;# 
   474  0F11                     	;# 
   475  0F12                     	;# 
   476  0F13                     	;# 
   477  0F14                     	;# 
   478  0F15                     	;# 
   479  0F16                     	;# 
   480  0F17                     	;# 
   481  0F18                     	;# 
   482  0F19                     	;# 
   483  0F1A                     	;# 
   484  0F1B                     	;# 
   485  0F1C                     	;# 
   486  0F1D                     	;# 
   487  0F1E                     	;# 
   488  0F1F                     	;# 
   489  0F20                     	;# 
   490  0F21                     	;# 
   491  0F22                     	;# 
   492  0F23                     	;# 
   493  0F24                     	;# 
   494  0F25                     	;# 
   495  0F26                     	;# 
   496  0F27                     	;# 
   497  0F28                     	;# 
   498  0F29                     	;# 
   499  0F2A                     	;# 
   500  0F2B                     	;# 
   501  0F2C                     	;# 
   502  0F2D                     	;# 
   503  0F2E                     	;# 
   504  0F2F                     	;# 
   505  0F30                     	;# 
   506  0F31                     	;# 
   507  0F32                     	;# 
   508  0F33                     	;# 
   509  0F34                     	;# 
   510  0F35                     	;# 
   511  0F36                     	;# 
   512  0F37                     	;# 
   513  0FE4                     	;# 
   514  0FE5                     	;# 
   515  0FE6                     	;# 
   516  0FE7                     	;# 
   517  0FE8                     	;# 
   518  0FE9                     	;# 
   519  0FEA                     	;# 
   520  0FEB                     	;# 
   521  0FED                     	;# 
   522  0FEE                     	;# 
   523  0FEF                     	;# 
   524  0000                     	;# 
   525  0001                     	;# 
   526  0002                     	;# 
   527  0003                     	;# 
   528  0004                     	;# 
   529  0005                     	;# 
   530  0006                     	;# 
   531  0007                     	;# 
   532  0008                     	;# 
   533  0009                     	;# 
   534  000A                     	;# 
   535  000B                     	;# 
   536  000C                     	;# 
   537  000D                     	;# 
   538  000E                     	;# 
   539  0010                     	;# 
   540  0011                     	;# 
   541  0012                     	;# 
   542  0013                     	;# 
   543  0014                     	;# 
   544  0015                     	;# 
   545  0015                     	;# 
   546  0016                     	;# 
   547  0016                     	;# 
   548  0017                     	;# 
   549  0018                     	;# 
   550  0019                     	;# 
   551  0019                     	;# 
   552  001A                     	;# 
   553  001B                     	;# 
   554  001C                     	;# 
   555  001D                     	;# 
   556  001E                     	;# 
   557  001F                     	;# 
   558  008C                     	;# 
   559  008D                     	;# 
   560  008E                     	;# 
   561  0090                     	;# 
   562  0091                     	;# 
   563  0092                     	;# 
   564  0093                     	;# 
   565  0094                     	;# 
   566  0097                     	;# 
   567  009B                     	;# 
   568  009B                     	;# 
   569  009C                     	;# 
   570  009D                     	;# 
   571  009E                     	;# 
   572  009F                     	;# 
   573  010C                     	;# 
   574  010D                     	;# 
   575  010E                     	;# 
   576  0111                     	;# 
   577  0112                     	;# 
   578  0113                     	;# 
   579  0114                     	;# 
   580  0115                     	;# 
   581  0116                     	;# 
   582  0117                     	;# 
   583  0118                     	;# 
   584  0119                     	;# 
   585  018C                     	;# 
   586  018D                     	;# 
   587  018E                     	;# 
   588  0197                     	;# 
   589  0199                     	;# 
   590  0199                     	;# 
   591  0199                     	;# 
   592  019A                     	;# 
   593  019A                     	;# 
   594  019A                     	;# 
   595  019B                     	;# 
   596  019B                     	;# 
   597  019B                     	;# 
   598  019B                     	;# 
   599  019B                     	;# 
   600  019C                     	;# 
   601  019C                     	;# 
   602  019C                     	;# 
   603  019D                     	;# 
   604  019D                     	;# 
   605  019D                     	;# 
   606  019E                     	;# 
   607  019E                     	;# 
   608  019E                     	;# 
   609  019F                     	;# 
   610  019F                     	;# 
   611  019F                     	;# 
   612  019F                     	;# 
   613  019F                     	;# 
   614  020C                     	;# 
   615  020D                     	;# 
   616  020E                     	;# 
   617  0211                     	;# 
   618  0211                     	;# 
   619  0212                     	;# 
   620  0212                     	;# 
   621  0213                     	;# 
   622  0213                     	;# 
   623  0214                     	;# 
   624  0214                     	;# 
   625  0215                     	;# 
   626  0215                     	;# 
   627  0215                     	;# 
   628  0215                     	;# 
   629  0216                     	;# 
   630  0216                     	;# 
   631  0217                     	;# 
   632  0217                     	;# 
   633  0219                     	;# 
   634  021A                     	;# 
   635  021B                     	;# 
   636  021C                     	;# 
   637  021D                     	;# 
   638  021D                     	;# 
   639  021E                     	;# 
   640  021F                     	;# 
   641  028C                     	;# 
   642  028D                     	;# 
   643  028E                     	;# 
   644  0291                     	;# 
   645  0291                     	;# 
   646  0292                     	;# 
   647  0293                     	;# 
   648  0294                     	;# 
   649  0295                     	;# 
   650  0295                     	;# 
   651  0296                     	;# 
   652  0297                     	;# 
   653  0298                     	;# 
   654  029F                     	;# 
   655  030C                     	;# 
   656  030D                     	;# 
   657  030E                     	;# 
   658  0311                     	;# 
   659  0311                     	;# 
   660  0312                     	;# 
   661  0313                     	;# 
   662  0314                     	;# 
   663  0315                     	;# 
   664  0315                     	;# 
   665  0316                     	;# 
   666  0317                     	;# 
   667  0318                     	;# 
   668  038C                     	;# 
   669  038D                     	;# 
   670  038E                     	;# 
   671  0391                     	;# 
   672  0392                     	;# 
   673  0393                     	;# 
   674  0394                     	;# 
   675  0395                     	;# 
   676  0396                     	;# 
   677  0397                     	;# 
   678  0398                     	;# 
   679  0399                     	;# 
   680  039A                     	;# 
   681  039C                     	;# 
   682  039D                     	;# 
   683  039E                     	;# 
   684  039F                     	;# 
   685  0411                     	;# 
   686  0411                     	;# 
   687  0412                     	;# 
   688  0413                     	;# 
   689  0414                     	;# 
   690  0415                     	;# 
   691  0416                     	;# 
   692  0417                     	;# 
   693  0418                     	;# 
   694  0418                     	;# 
   695  0419                     	;# 
   696  041A                     	;# 
   697  041B                     	;# 
   698  041C                     	;# 
   699  041D                     	;# 
   700  041E                     	;# 
   701  041F                     	;# 
   702  0498                     	;# 
   703  0498                     	;# 
   704  0499                     	;# 
   705  049A                     	;# 
   706  049B                     	;# 
   707  049B                     	;# 
   708  049C                     	;# 
   709  049D                     	;# 
   710  049E                     	;# 
   711  049F                     	;# 
   712  0617                     	;# 
   713  0618                     	;# 
   714  0619                     	;# 
   715  0619                     	;# 
   716  061A                     	;# 
   717  061B                     	;# 
   718  061C                     	;# 
   719  061C                     	;# 
   720  061F                     	;# 
   721  0691                     	;# 
   722  0692                     	;# 
   723  0693                     	;# 
   724  0694                     	;# 
   725  0695                     	;# 
   726  0696                     	;# 
   727  0697                     	;# 
   728  0698                     	;# 
   729  0699                     	;# 
   730  0711                     	;# 
   731  0712                     	;# 
   732  0713                     	;# 
   733  0714                     	;# 
   734  0715                     	;# 
   735  0716                     	;# 
   736  0717                     	;# 
   737  0718                     	;# 
   738  0719                     	;# 
   739  0891                     	;# 
   740  0891                     	;# 
   741  0891                     	;# 
   742  0891                     	;# 
   743  0891                     	;# 
   744  0891                     	;# 
   745  0892                     	;# 
   746  0892                     	;# 
   747  0892                     	;# 
   748  0893                     	;# 
   749  0893                     	;# 
   750  0893                     	;# 
   751  0893                     	;# 
   752  0893                     	;# 
   753  0893                     	;# 
   754  0894                     	;# 
   755  0894                     	;# 
   756  0894                     	;# 
   757  0895                     	;# 
   758  0895                     	;# 
   759  0895                     	;# 
   760  0896                     	;# 
   761  0896                     	;# 
   762  0896                     	;# 
   763  089B                     	;# 
   764  0911                     	;# 
   765  0912                     	;# 
   766  0913                     	;# 
   767  0914                     	;# 
   768  0915                     	;# 
   769  0916                     	;# 
   770  0918                     	;# 
   771  0919                     	;# 
   772  091A                     	;# 
   773  091B                     	;# 
   774  091C                     	;# 
   775  091D                     	;# 
   776  091E                     	;# 
   777  091F                     	;# 
   778  0E0F                     	;# 
   779  0E10                     	;# 
   780  0E11                     	;# 
   781  0E12                     	;# 
   782  0E13                     	;# 
   783  0E14                     	;# 
   784  0E15                     	;# 
   785  0E16                     	;# 
   786  0E17                     	;# 
   787  0E18                     	;# 
   788  0E19                     	;# 
   789  0E1A                     	;# 
   790  0E1B                     	;# 
   791  0E1C                     	;# 
   792  0E1D                     	;# 
   793  0E1E                     	;# 
   794  0E1F                     	;# 
   795  0E20                     	;# 
   796  0E21                     	;# 
   797  0E22                     	;# 
   798  0E24                     	;# 
   799  0E25                     	;# 
   800  0E28                     	;# 
   801  0E29                     	;# 
   802  0E2A                     	;# 
   803  0E2B                     	;# 
   804  0E2C                     	;# 
   805  0E2D                     	;# 
   806  0E2E                     	;# 
   807  0E2F                     	;# 
   808  0E90                     	;# 
   809  0E91                     	;# 
   810  0E92                     	;# 
   811  0E94                     	;# 
   812  0E95                     	;# 
   813  0E9C                     	;# 
   814  0E9D                     	;# 
   815  0E9E                     	;# 
   816  0E9F                     	;# 
   817  0EA0                     	;# 
   818  0EA1                     	;# 
   819  0EA2                     	;# 
   820  0EA3                     	;# 
   821  0EA4                     	;# 
   822  0EA5                     	;# 
   823  0EA6                     	;# 
   824  0EA7                     	;# 
   825  0F0F                     	;# 
   826  0F10                     	;# 
   827  0F11                     	;# 
   828  0F12                     	;# 
   829  0F13                     	;# 
   830  0F14                     	;# 
   831  0F15                     	;# 
   832  0F16                     	;# 
   833  0F17                     	;# 
   834  0F18                     	;# 
   835  0F19                     	;# 
   836  0F1A                     	;# 
   837  0F1B                     	;# 
   838  0F1C                     	;# 
   839  0F1D                     	;# 
   840  0F1E                     	;# 
   841  0F1F                     	;# 
   842  0F20                     	;# 
   843  0F21                     	;# 
   844  0F22                     	;# 
   845  0F23                     	;# 
   846  0F24                     	;# 
   847  0F25                     	;# 
   848  0F26                     	;# 
   849  0F27                     	;# 
   850  0F28                     	;# 
   851  0F29                     	;# 
   852  0F2A                     	;# 
   853  0F2B                     	;# 
   854  0F2C                     	;# 
   855  0F2D                     	;# 
   856  0F2E                     	;# 
   857  0F2F                     	;# 
   858  0F30                     	;# 
   859  0F31                     	;# 
   860  0F32                     	;# 
   861  0F33                     	;# 
   862  0F34                     	;# 
   863  0F35                     	;# 
   864  0F36                     	;# 
   865  0F37                     	;# 
   866  0FE4                     	;# 
   867  0FE5                     	;# 
   868  0FE6                     	;# 
   869  0FE7                     	;# 
   870  0FE8                     	;# 
   871  0FE9                     	;# 
   872  0FEA                     	;# 
   873  0FEB                     	;# 
   874  0FED                     	;# 
   875  0FEE                     	;# 
   876  0FEF                     	;# 
   877  0000                     	;# 
   878  0001                     	;# 
   879  0002                     	;# 
   880  0003                     	;# 
   881  0004                     	;# 
   882  0005                     	;# 
   883  0006                     	;# 
   884  0007                     	;# 
   885  0008                     	;# 
   886  0009                     	;# 
   887  000A                     	;# 
   888  000B                     	;# 
   889  000C                     	;# 
   890  000D                     	;# 
   891  000E                     	;# 
   892  0010                     	;# 
   893  0011                     	;# 
   894  0012                     	;# 
   895  0013                     	;# 
   896  0014                     	;# 
   897  0015                     	;# 
   898  0015                     	;# 
   899  0016                     	;# 
   900  0016                     	;# 
   901  0017                     	;# 
   902  0018                     	;# 
   903  0019                     	;# 
   904  0019                     	;# 
   905  001A                     	;# 
   906  001B                     	;# 
   907  001C                     	;# 
   908  001D                     	;# 
   909  001E                     	;# 
   910  001F                     	;# 
   911  008C                     	;# 
   912  008D                     	;# 
   913  008E                     	;# 
   914  0090                     	;# 
   915  0091                     	;# 
   916  0092                     	;# 
   917  0093                     	;# 
   918  0094                     	;# 
   919  0097                     	;# 
   920  009B                     	;# 
   921  009B                     	;# 
   922  009C                     	;# 
   923  009D                     	;# 
   924  009E                     	;# 
   925  009F                     	;# 
   926  010C                     	;# 
   927  010D                     	;# 
   928  010E                     	;# 
   929  0111                     	;# 
   930  0112                     	;# 
   931  0113                     	;# 
   932  0114                     	;# 
   933  0115                     	;# 
   934  0116                     	;# 
   935  0117                     	;# 
   936  0118                     	;# 
   937  0119                     	;# 
   938  018C                     	;# 
   939  018D                     	;# 
   940  018E                     	;# 
   941  0197                     	;# 
   942  0199                     	;# 
   943  0199                     	;# 
   944  0199                     	;# 
   945  019A                     	;# 
   946  019A                     	;# 
   947  019A                     	;# 
   948  019B                     	;# 
   949  019B                     	;# 
   950  019B                     	;# 
   951  019B                     	;# 
   952  019B                     	;# 
   953  019C                     	;# 
   954  019C                     	;# 
   955  019C                     	;# 
   956  019D                     	;# 
   957  019D                     	;# 
   958  019D                     	;# 
   959  019E                     	;# 
   960  019E                     	;# 
   961  019E                     	;# 
   962  019F                     	;# 
   963  019F                     	;# 
   964  019F                     	;# 
   965  019F                     	;# 
   966  019F                     	;# 
   967  020C                     	;# 
   968  020D                     	;# 
   969  020E                     	;# 
   970  0211                     	;# 
   971  0211                     	;# 
   972  0212                     	;# 
   973  0212                     	;# 
   974  0213                     	;# 
   975  0213                     	;# 
   976  0214                     	;# 
   977  0214                     	;# 
   978  0215                     	;# 
   979  0215                     	;# 
   980  0215                     	;# 
   981  0215                     	;# 
   982  0216                     	;# 
   983  0216                     	;# 
   984  0217                     	;# 
   985  0217                     	;# 
   986  0219                     	;# 
   987  021A                     	;# 
   988  021B                     	;# 
   989  021C                     	;# 
   990  021D                     	;# 
   991  021D                     	;# 
   992  021E                     	;# 
   993  021F                     	;# 
   994  028C                     	;# 
   995  028D                     	;# 
   996  028E                     	;# 
   997  0291                     	;# 
   998  0291                     	;# 
   999  0292                     	;# 
  1000  0293                     	;# 
  1001  0294                     	;# 
  1002  0295                     	;# 
  1003  0295                     	;# 
  1004  0296                     	;# 
  1005  0297                     	;# 
  1006  0298                     	;# 
  1007  029F                     	;# 
  1008  030C                     	;# 
  1009  030D                     	;# 
  1010  030E                     	;# 
  1011  0311                     	;# 
  1012  0311                     	;# 
  1013  0312                     	;# 
  1014  0313                     	;# 
  1015  0314                     	;# 
  1016  0315                     	;# 
  1017  0315                     	;# 
  1018  0316                     	;# 
  1019  0317                     	;# 
  1020  0318                     	;# 
  1021  038C                     	;# 
  1022  038D                     	;# 
  1023  038E                     	;# 
  1024  0391                     	;# 
  1025  0392                     	;# 
  1026  0393                     	;# 
  1027  0394                     	;# 
  1028  0395                     	;# 
  1029  0396                     	;# 
  1030  0397                     	;# 
  1031  0398                     	;# 
  1032  0399                     	;# 
  1033  039A                     	;# 
  1034  039C                     	;# 
  1035  039D                     	;# 
  1036  039E                     	;# 
  1037  039F                     	;# 
  1038  0411                     	;# 
  1039  0411                     	;# 
  1040  0412                     	;# 
  1041  0413                     	;# 
  1042  0414                     	;# 
  1043  0415                     	;# 
  1044  0416                     	;# 
  1045  0417                     	;# 
  1046  0418                     	;# 
  1047  0418                     	;# 
  1048  0419                     	;# 
  1049  041A                     	;# 
  1050  041B                     	;# 
  1051  041C                     	;# 
  1052  041D                     	;# 
  1053  041E                     	;# 
  1054  041F                     	;# 
  1055  0498                     	;# 
  1056  0498                     	;# 
  1057  0499                     	;# 
  1058  049A                     	;# 
  1059  049B                     	;# 
  1060  049B                     	;# 
  1061  049C                     	;# 
  1062  049D                     	;# 
  1063  049E                     	;# 
  1064  049F                     	;# 
  1065  0617                     	;# 
  1066  0618                     	;# 
  1067  0619                     	;# 
  1068  0619                     	;# 
  1069  061A                     	;# 
  1070  061B                     	;# 
  1071  061C                     	;# 
  1072  061C                     	;# 
  1073  061F                     	;# 
  1074  0691                     	;# 
  1075  0692                     	;# 
  1076  0693                     	;# 
  1077  0694                     	;# 
  1078  0695                     	;# 
  1079  0696                     	;# 
  1080  0697                     	;# 
  1081  0698                     	;# 
  1082  0699                     	;# 
  1083  0711                     	;# 
  1084  0712                     	;# 
  1085  0713                     	;# 
  1086  0714                     	;# 
  1087  0715                     	;# 
  1088  0716                     	;# 
  1089  0717                     	;# 
  1090  0718                     	;# 
  1091  0719                     	;# 
  1092  0891                     	;# 
  1093  0891                     	;# 
  1094  0891                     	;# 
  1095  0891                     	;# 
  1096  0891                     	;# 
  1097  0891                     	;# 
  1098  0892                     	;# 
  1099  0892                     	;# 
  1100  0892                     	;# 
  1101  0893                     	;# 
  1102  0893                     	;# 
  1103  0893                     	;# 
  1104  0893                     	;# 
  1105  0893                     	;# 
  1106  0893                     	;# 
  1107  0894                     	;# 
  1108  0894                     	;# 
  1109  0894                     	;# 
  1110  0895                     	;# 
  1111  0895                     	;# 
  1112  0895                     	;# 
  1113  0896                     	;# 
  1114  0896                     	;# 
  1115  0896                     	;# 
  1116  089B                     	;# 
  1117  0911                     	;# 
  1118  0912                     	;# 
  1119  0913                     	;# 
  1120  0914                     	;# 
  1121  0915                     	;# 
  1122  0916                     	;# 
  1123  0918                     	;# 
  1124  0919                     	;# 
  1125  091A                     	;# 
  1126  091B                     	;# 
  1127  091C                     	;# 
  1128  091D                     	;# 
  1129  091E                     	;# 
  1130  091F                     	;# 
  1131  0E0F                     	;# 
  1132  0E10                     	;# 
  1133  0E11                     	;# 
  1134  0E12                     	;# 
  1135  0E13                     	;# 
  1136  0E14                     	;# 
  1137  0E15                     	;# 
  1138  0E16                     	;# 
  1139  0E17                     	;# 
  1140  0E18                     	;# 
  1141  0E19                     	;# 
  1142  0E1A                     	;# 
  1143  0E1B                     	;# 
  1144  0E1C                     	;# 
  1145  0E1D                     	;# 
  1146  0E1E                     	;# 
  1147  0E1F                     	;# 
  1148  0E20                     	;# 
  1149  0E21                     	;# 
  1150  0E22                     	;# 
  1151  0E24                     	;# 
  1152  0E25                     	;# 
  1153  0E28                     	;# 
  1154  0E29                     	;# 
  1155  0E2A                     	;# 
  1156  0E2B                     	;# 
  1157  0E2C                     	;# 
  1158  0E2D                     	;# 
  1159  0E2E                     	;# 
  1160  0E2F                     	;# 
  1161  0E90                     	;# 
  1162  0E91                     	;# 
  1163  0E92                     	;# 
  1164  0E94                     	;# 
  1165  0E95                     	;# 
  1166  0E9C                     	;# 
  1167  0E9D                     	;# 
  1168  0E9E                     	;# 
  1169  0E9F                     	;# 
  1170  0EA0                     	;# 
  1171  0EA1                     	;# 
  1172  0EA2                     	;# 
  1173  0EA3                     	;# 
  1174  0EA4                     	;# 
  1175  0EA5                     	;# 
  1176  0EA6                     	;# 
  1177  0EA7                     	;# 
  1178  0F0F                     	;# 
  1179  0F10                     	;# 
  1180  0F11                     	;# 
  1181  0F12                     	;# 
  1182  0F13                     	;# 
  1183  0F14                     	;# 
  1184  0F15                     	;# 
  1185  0F16                     	;# 
  1186  0F17                     	;# 
  1187  0F18                     	;# 
  1188  0F19                     	;# 
  1189  0F1A                     	;# 
  1190  0F1B                     	;# 
  1191  0F1C                     	;# 
  1192  0F1D                     	;# 
  1193  0F1E                     	;# 
  1194  0F1F                     	;# 
  1195  0F20                     	;# 
  1196  0F21                     	;# 
  1197  0F22                     	;# 
  1198  0F23                     	;# 
  1199  0F24                     	;# 
  1200  0F25                     	;# 
  1201  0F26                     	;# 
  1202  0F27                     	;# 
  1203  0F28                     	;# 
  1204  0F29                     	;# 
  1205  0F2A                     	;# 
  1206  0F2B                     	;# 
  1207  0F2C                     	;# 
  1208  0F2D                     	;# 
  1209  0F2E                     	;# 
  1210  0F2F                     	;# 
  1211  0F30                     	;# 
  1212  0F31                     	;# 
  1213  0F32                     	;# 
  1214  0F33                     	;# 
  1215  0F34                     	;# 
  1216  0F35                     	;# 
  1217  0F36                     	;# 
  1218  0F37                     	;# 
  1219  0FE4                     	;# 
  1220  0FE5                     	;# 
  1221  0FE6                     	;# 
  1222  0FE7                     	;# 
  1223  0FE8                     	;# 
  1224  0FE9                     	;# 
  1225  0FEA                     	;# 
  1226  0FEB                     	;# 
  1227  0FED                     	;# 
  1228  0FEE                     	;# 
  1229  0FEF                     	;# 
  1230  0000                     	;# 
  1231  0001                     	;# 
  1232  0002                     	;# 
  1233  0003                     	;# 
  1234  0004                     	;# 
  1235  0005                     	;# 
  1236  0006                     	;# 
  1237  0007                     	;# 
  1238  0008                     	;# 
  1239  0009                     	;# 
  1240  000A                     	;# 
  1241  000B                     	;# 
  1242  000C                     	;# 
  1243  000D                     	;# 
  1244  000E                     	;# 
  1245  0010                     	;# 
  1246  0011                     	;# 
  1247  0012                     	;# 
  1248  0013                     	;# 
  1249  0014                     	;# 
  1250  0015                     	;# 
  1251  0015                     	;# 
  1252  0016                     	;# 
  1253  0016                     	;# 
  1254  0017                     	;# 
  1255  0018                     	;# 
  1256  0019                     	;# 
  1257  0019                     	;# 
  1258  001A                     	;# 
  1259  001B                     	;# 
  1260  001C                     	;# 
  1261  001D                     	;# 
  1262  001E                     	;# 
  1263  001F                     	;# 
  1264  008C                     	;# 
  1265  008D                     	;# 
  1266  008E                     	;# 
  1267  0090                     	;# 
  1268  0091                     	;# 
  1269  0092                     	;# 
  1270  0093                     	;# 
  1271  0094                     	;# 
  1272  0097                     	;# 
  1273  009B                     	;# 
  1274  009B                     	;# 
  1275  009C                     	;# 
  1276  009D                     	;# 
  1277  009E                     	;# 
  1278  009F                     	;# 
  1279  010C                     	;# 
  1280  010D                     	;# 
  1281  010E                     	;# 
  1282  0111                     	;# 
  1283  0112                     	;# 
  1284  0113                     	;# 
  1285  0114                     	;# 
  1286  0115                     	;# 
  1287  0116                     	;# 
  1288  0117                     	;# 
  1289  0118                     	;# 
  1290  0119                     	;# 
  1291  018C                     	;# 
  1292  018D                     	;# 
  1293  018E                     	;# 
  1294  0197                     	;# 
  1295  0199                     	;# 
  1296  0199                     	;# 
  1297  0199                     	;# 
  1298  019A                     	;# 
  1299  019A                     	;# 
  1300  019A                     	;# 
  1301  019B                     	;# 
  1302  019B                     	;# 
  1303  019B                     	;# 
  1304  019B                     	;# 
  1305  019B                     	;# 
  1306  019C                     	;# 
  1307  019C                     	;# 
  1308  019C                     	;# 
  1309  019D                     	;# 
  1310  019D                     	;# 
  1311  019D                     	;# 
  1312  019E                     	;# 
  1313  019E                     	;# 
  1314  019E                     	;# 
  1315  019F                     	;# 
  1316  019F                     	;# 
  1317  019F                     	;# 
  1318  019F                     	;# 
  1319  019F                     	;# 
  1320  020C                     	;# 
  1321  020D                     	;# 
  1322  020E                     	;# 
  1323  0211                     	;# 
  1324  0211                     	;# 
  1325  0212                     	;# 
  1326  0212                     	;# 
  1327  0213                     	;# 
  1328  0213                     	;# 
  1329  0214                     	;# 
  1330  0214                     	;# 
  1331  0215                     	;# 
  1332  0215                     	;# 
  1333  0215                     	;# 
  1334  0215                     	;# 
  1335  0216                     	;# 
  1336  0216                     	;# 
  1337  0217                     	;# 
  1338  0217                     	;# 
  1339  0219                     	;# 
  1340  021A                     	;# 
  1341  021B                     	;# 
  1342  021C                     	;# 
  1343  021D                     	;# 
  1344  021D                     	;# 
  1345  021E                     	;# 
  1346  021F                     	;# 
  1347  028C                     	;# 
  1348  028D                     	;# 
  1349  028E                     	;# 
  1350  0291                     	;# 
  1351  0291                     	;# 
  1352  0292                     	;# 
  1353  0293                     	;# 
  1354  0294                     	;# 
  1355  0295                     	;# 
  1356  0295                     	;# 
  1357  0296                     	;# 
  1358  0297                     	;# 
  1359  0298                     	;# 
  1360  029F                     	;# 
  1361  030C                     	;# 
  1362  030D                     	;# 
  1363  030E                     	;# 
  1364  0311                     	;# 
  1365  0311                     	;# 
  1366  0312                     	;# 
  1367  0313                     	;# 
  1368  0314                     	;# 
  1369  0315                     	;# 
  1370  0315                     	;# 
  1371  0316                     	;# 
  1372  0317                     	;# 
  1373  0318                     	;# 
  1374  038C                     	;# 
  1375  038D                     	;# 
  1376  038E                     	;# 
  1377  0391                     	;# 
  1378  0392                     	;# 
  1379  0393                     	;# 
  1380  0394                     	;# 
  1381  0395                     	;# 
  1382  0396                     	;# 
  1383  0397                     	;# 
  1384  0398                     	;# 
  1385  0399                     	;# 
  1386  039A                     	;# 
  1387  039C                     	;# 
  1388  039D                     	;# 
  1389  039E                     	;# 
  1390  039F                     	;# 
  1391  0411                     	;# 
  1392  0411                     	;# 
  1393  0412                     	;# 
  1394  0413                     	;# 
  1395  0414                     	;# 
  1396  0415                     	;# 
  1397  0416                     	;# 
  1398  0417                     	;# 
  1399  0418                     	;# 
  1400  0418                     	;# 
  1401  0419                     	;# 
  1402  041A                     	;# 
  1403  041B                     	;# 
  1404  041C                     	;# 
  1405  041D                     	;# 
  1406  041E                     	;# 
  1407  041F                     	;# 
  1408  0498                     	;# 
  1409  0498                     	;# 
  1410  0499                     	;# 
  1411  049A                     	;# 
  1412  049B                     	;# 
  1413  049B                     	;# 
  1414  049C                     	;# 
  1415  049D                     	;# 
  1416  049E                     	;# 
  1417  049F                     	;# 
  1418  0617                     	;# 
  1419  0618                     	;# 
  1420  0619                     	;# 
  1421  0619                     	;# 
  1422  061A                     	;# 
  1423  061B                     	;# 
  1424  061C                     	;# 
  1425  061C                     	;# 
  1426  061F                     	;# 
  1427  0691                     	;# 
  1428  0692                     	;# 
  1429  0693                     	;# 
  1430  0694                     	;# 
  1431  0695                     	;# 
  1432  0696                     	;# 
  1433  0697                     	;# 
  1434  0698                     	;# 
  1435  0699                     	;# 
  1436  0711                     	;# 
  1437  0712                     	;# 
  1438  0713                     	;# 
  1439  0714                     	;# 
  1440  0715                     	;# 
  1441  0716                     	;# 
  1442  0717                     	;# 
  1443  0718                     	;# 
  1444  0719                     	;# 
  1445  0891                     	;# 
  1446  0891                     	;# 
  1447  0891                     	;# 
  1448  0891                     	;# 
  1449  0891                     	;# 
  1450  0891                     	;# 
  1451  0892                     	;# 
  1452  0892                     	;# 
  1453  0892                     	;# 
  1454  0893                     	;# 
  1455  0893                     	;# 
  1456  0893                     	;# 
  1457  0893                     	;# 
  1458  0893                     	;# 
  1459  0893                     	;# 
  1460  0894                     	;# 
  1461  0894                     	;# 
  1462  0894                     	;# 
  1463  0895                     	;# 
  1464  0895                     	;# 
  1465  0895                     	;# 
  1466  0896                     	;# 
  1467  0896                     	;# 
  1468  0896                     	;# 
  1469  089B                     	;# 
  1470  0911                     	;# 
  1471  0912                     	;# 
  1472  0913                     	;# 
  1473  0914                     	;# 
  1474  0915                     	;# 
  1475  0916                     	;# 
  1476  0918                     	;# 
  1477  0919                     	;# 
  1478  091A                     	;# 
  1479  091B                     	;# 
  1480  091C                     	;# 
  1481  091D                     	;# 
  1482  091E                     	;# 
  1483  091F                     	;# 
  1484  0E0F                     	;# 
  1485  0E10                     	;# 
  1486  0E11                     	;# 
  1487  0E12                     	;# 
  1488  0E13                     	;# 
  1489  0E14                     	;# 
  1490  0E15                     	;# 
  1491  0E16                     	;# 
  1492  0E17                     	;# 
  1493  0E18                     	;# 
  1494  0E19                     	;# 
  1495  0E1A                     	;# 
  1496  0E1B                     	;# 
  1497  0E1C                     	;# 
  1498  0E1D                     	;# 
  1499  0E1E                     	;# 
  1500  0E1F                     	;# 
  1501  0E20                     	;# 
  1502  0E21                     	;# 
  1503  0E22                     	;# 
  1504  0E24                     	;# 
  1505  0E25                     	;# 
  1506  0E28                     	;# 
  1507  0E29                     	;# 
  1508  0E2A                     	;# 
  1509  0E2B                     	;# 
  1510  0E2C                     	;# 
  1511  0E2D                     	;# 
  1512  0E2E                     	;# 
  1513  0E2F                     	;# 
  1514  0E90                     	;# 
  1515  0E91                     	;# 
  1516  0E92                     	;# 
  1517  0E94                     	;# 
  1518  0E95                     	;# 
  1519  0E9C                     	;# 
  1520  0E9D                     	;# 
  1521  0E9E                     	;# 
  1522  0E9F                     	;# 
  1523  0EA0                     	;# 
  1524  0EA1                     	;# 
  1525  0EA2                     	;# 
  1526  0EA3                     	;# 
  1527  0EA4                     	;# 
  1528  0EA5                     	;# 
  1529  0EA6                     	;# 
  1530  0EA7                     	;# 
  1531  0F0F                     	;# 
  1532  0F10                     	;# 
  1533  0F11                     	;# 
  1534  0F12                     	;# 
  1535  0F13                     	;# 
  1536  0F14                     	;# 
  1537  0F15                     	;# 
  1538  0F16                     	;# 
  1539  0F17                     	;# 
  1540  0F18                     	;# 
  1541  0F19                     	;# 
  1542  0F1A                     	;# 
  1543  0F1B                     	;# 
  1544  0F1C                     	;# 
  1545  0F1D                     	;# 
  1546  0F1E                     	;# 
  1547  0F1F                     	;# 
  1548  0F20                     	;# 
  1549  0F21                     	;# 
  1550  0F22                     	;# 
  1551  0F23                     	;# 
  1552  0F24                     	;# 
  1553  0F25                     	;# 
  1554  0F26                     	;# 
  1555  0F27                     	;# 
  1556  0F28                     	;# 
  1557  0F29                     	;# 
  1558  0F2A                     	;# 
  1559  0F2B                     	;# 
  1560  0F2C                     	;# 
  1561  0F2D                     	;# 
  1562  0F2E                     	;# 
  1563  0F2F                     	;# 
  1564  0F30                     	;# 
  1565  0F31                     	;# 
  1566  0F32                     	;# 
  1567  0F33                     	;# 
  1568  0F34                     	;# 
  1569  0F35                     	;# 
  1570  0F36                     	;# 
  1571  0F37                     	;# 
  1572  0FE4                     	;# 
  1573  0FE5                     	;# 
  1574  0FE6                     	;# 
  1575  0FE7                     	;# 
  1576  0FE8                     	;# 
  1577  0FE9                     	;# 
  1578  0FEA                     	;# 
  1579  0FEB                     	;# 
  1580  0FED                     	;# 
  1581  0FEE                     	;# 
  1582  0FEF                     	;# 
  1583  0000                     	;# 
  1584  0001                     	;# 
  1585  0002                     	;# 
  1586  0003                     	;# 
  1587  0004                     	;# 
  1588  0005                     	;# 
  1589  0006                     	;# 
  1590  0007                     	;# 
  1591  0008                     	;# 
  1592  0009                     	;# 
  1593  000A                     	;# 
  1594  000B                     	;# 
  1595  000C                     	;# 
  1596  000D                     	;# 
  1597  000E                     	;# 
  1598  0010                     	;# 
  1599  0011                     	;# 
  1600  0012                     	;# 
  1601  0013                     	;# 
  1602  0014                     	;# 
  1603  0015                     	;# 
  1604  0015                     	;# 
  1605  0016                     	;# 
  1606  0016                     	;# 
  1607  0017                     	;# 
  1608  0018                     	;# 
  1609  0019                     	;# 
  1610  0019                     	;# 
  1611  001A                     	;# 
  1612  001B                     	;# 
  1613  001C                     	;# 
  1614  001D                     	;# 
  1615  001E                     	;# 
  1616  001F                     	;# 
  1617  008C                     	;# 
  1618  008D                     	;# 
  1619  008E                     	;# 
  1620  0090                     	;# 
  1621  0091                     	;# 
  1622  0092                     	;# 
  1623  0093                     	;# 
  1624  0094                     	;# 
  1625  0097                     	;# 
  1626  009B                     	;# 
  1627  009B                     	;# 
  1628  009C                     	;# 
  1629  009D                     	;# 
  1630  009E                     	;# 
  1631  009F                     	;# 
  1632  010C                     	;# 
  1633  010D                     	;# 
  1634  010E                     	;# 
  1635  0111                     	;# 
  1636  0112                     	;# 
  1637  0113                     	;# 
  1638  0114                     	;# 
  1639  0115                     	;# 
  1640  0116                     	;# 
  1641  0117                     	;# 
  1642  0118                     	;# 
  1643  0119                     	;# 
  1644  018C                     	;# 
  1645  018D                     	;# 
  1646  018E                     	;# 
  1647  0197                     	;# 
  1648  0199                     	;# 
  1649  0199                     	;# 
  1650  0199                     	;# 
  1651  019A                     	;# 
  1652  019A                     	;# 
  1653  019A                     	;# 
  1654  019B                     	;# 
  1655  019B                     	;# 
  1656  019B                     	;# 
  1657  019B                     	;# 
  1658  019B                     	;# 
  1659  019C                     	;# 
  1660  019C                     	;# 
  1661  019C                     	;# 
  1662  019D                     	;# 
  1663  019D                     	;# 
  1664  019D                     	;# 
  1665  019E                     	;# 
  1666  019E                     	;# 
  1667  019E                     	;# 
  1668  019F                     	;# 
  1669  019F                     	;# 
  1670  019F                     	;# 
  1671  019F                     	;# 
  1672  019F                     	;# 
  1673  020C                     	;# 
  1674  020D                     	;# 
  1675  020E                     	;# 
  1676  0211                     	;# 
  1677  0211                     	;# 
  1678  0212                     	;# 
  1679  0212                     	;# 
  1680  0213                     	;# 
  1681  0213                     	;# 
  1682  0214                     	;# 
  1683  0214                     	;# 
  1684  0215                     	;# 
  1685  0215                     	;# 
  1686  0215                     	;# 
  1687  0215                     	;# 
  1688  0216                     	;# 
  1689  0216                     	;# 
  1690  0217                     	;# 
  1691  0217                     	;# 
  1692  0219                     	;# 
  1693  021A                     	;# 
  1694  021B                     	;# 
  1695  021C                     	;# 
  1696  021D                     	;# 
  1697  021D                     	;# 
  1698  021E                     	;# 
  1699  021F                     	;# 
  1700  028C                     	;# 
  1701  028D                     	;# 
  1702  028E                     	;# 
  1703  0291                     	;# 
  1704  0291                     	;# 
  1705  0292                     	;# 
  1706  0293                     	;# 
  1707  0294                     	;# 
  1708  0295                     	;# 
  1709  0295                     	;# 
  1710  0296                     	;# 
  1711  0297                     	;# 
  1712  0298                     	;# 
  1713  029F                     	;# 
  1714  030C                     	;# 
  1715  030D                     	;# 
  1716  030E                     	;# 
  1717  0311                     	;# 
  1718  0311                     	;# 
  1719  0312                     	;# 
  1720  0313                     	;# 
  1721  0314                     	;# 
  1722  0315                     	;# 
  1723  0315                     	;# 
  1724  0316                     	;# 
  1725  0317                     	;# 
  1726  0318                     	;# 
  1727  038C                     	;# 
  1728  038D                     	;# 
  1729  038E                     	;# 
  1730  0391                     	;# 
  1731  0392                     	;# 
  1732  0393                     	;# 
  1733  0394                     	;# 
  1734  0395                     	;# 
  1735  0396                     	;# 
  1736  0397                     	;# 
  1737  0398                     	;# 
  1738  0399                     	;# 
  1739  039A                     	;# 
  1740  039C                     	;# 
  1741  039D                     	;# 
  1742  039E                     	;# 
  1743  039F                     	;# 
  1744  0411                     	;# 
  1745  0411                     	;# 
  1746  0412                     	;# 
  1747  0413                     	;# 
  1748  0414                     	;# 
  1749  0415                     	;# 
  1750  0416                     	;# 
  1751  0417                     	;# 
  1752  0418                     	;# 
  1753  0418                     	;# 
  1754  0419                     	;# 
  1755  041A                     	;# 
  1756  041B                     	;# 
  1757  041C                     	;# 
  1758  041D                     	;# 
  1759  041E                     	;# 
  1760  041F                     	;# 
  1761  0498                     	;# 
  1762  0498                     	;# 
  1763  0499                     	;# 
  1764  049A                     	;# 
  1765  049B                     	;# 
  1766  049B                     	;# 
  1767  049C                     	;# 
  1768  049D                     	;# 
  1769  049E                     	;# 
  1770  049F                     	;# 
  1771  0617                     	;# 
  1772  0618                     	;# 
  1773  0619                     	;# 
  1774  0619                     	;# 
  1775  061A                     	;# 
  1776  061B                     	;# 
  1777  061C                     	;# 
  1778  061C                     	;# 
  1779  061F                     	;# 
  1780  0691                     	;# 
  1781  0692                     	;# 
  1782  0693                     	;# 
  1783  0694                     	;# 
  1784  0695                     	;# 
  1785  0696                     	;# 
  1786  0697                     	;# 
  1787  0698                     	;# 
  1788  0699                     	;# 
  1789  0711                     	;# 
  1790  0712                     	;# 
  1791  0713                     	;# 
  1792  0714                     	;# 
  1793  0715                     	;# 
  1794  0716                     	;# 
  1795  0717                     	;# 
  1796  0718                     	;# 
  1797  0719                     	;# 
  1798  0891                     	;# 
  1799  0891                     	;# 
  1800  0891                     	;# 
  1801  0891                     	;# 
  1802  0891                     	;# 
  1803  0891                     	;# 
  1804  0892                     	;# 
  1805  0892                     	;# 
  1806  0892                     	;# 
  1807  0893                     	;# 
  1808  0893                     	;# 
  1809  0893                     	;# 
  1810  0893                     	;# 
  1811  0893                     	;# 
  1812  0893                     	;# 
  1813  0894                     	;# 
  1814  0894                     	;# 
  1815  0894                     	;# 
  1816  0895                     	;# 
  1817  0895                     	;# 
  1818  0895                     	;# 
  1819  0896                     	;# 
  1820  0896                     	;# 
  1821  0896                     	;# 
  1822  089B                     	;# 
  1823  0911                     	;# 
  1824  0912                     	;# 
  1825  0913                     	;# 
  1826  0914                     	;# 
  1827  0915                     	;# 
  1828  0916                     	;# 
  1829  0918                     	;# 
  1830  0919                     	;# 
  1831  091A                     	;# 
  1832  091B                     	;# 
  1833  091C                     	;# 
  1834  091D                     	;# 
  1835  091E                     	;# 
  1836  091F                     	;# 
  1837  0E0F                     	;# 
  1838  0E10                     	;# 
  1839  0E11                     	;# 
  1840  0E12                     	;# 
  1841  0E13                     	;# 
  1842  0E14                     	;# 
  1843  0E15                     	;# 
  1844  0E16                     	;# 
  1845  0E17                     	;# 
  1846  0E18                     	;# 
  1847  0E19                     	;# 
  1848  0E1A                     	;# 
  1849  0E1B                     	;# 
  1850  0E1C                     	;# 
  1851  0E1D                     	;# 
  1852  0E1E                     	;# 
  1853  0E1F                     	;# 
  1854  0E20                     	;# 
  1855  0E21                     	;# 
  1856  0E22                     	;# 
  1857  0E24                     	;# 
  1858  0E25                     	;# 
  1859  0E28                     	;# 
  1860  0E29                     	;# 
  1861  0E2A                     	;# 
  1862  0E2B                     	;# 
  1863  0E2C                     	;# 
  1864  0E2D                     	;# 
  1865  0E2E                     	;# 
  1866  0E2F                     	;# 
  1867  0E90                     	;# 
  1868  0E91                     	;# 
  1869  0E92                     	;# 
  1870  0E94                     	;# 
  1871  0E95                     	;# 
  1872  0E9C                     	;# 
  1873  0E9D                     	;# 
  1874  0E9E                     	;# 
  1875  0E9F                     	;# 
  1876  0EA0                     	;# 
  1877  0EA1                     	;# 
  1878  0EA2                     	;# 
  1879  0EA3                     	;# 
  1880  0EA4                     	;# 
  1881  0EA5                     	;# 
  1882  0EA6                     	;# 
  1883  0EA7                     	;# 
  1884  0F0F                     	;# 
  1885  0F10                     	;# 
  1886  0F11                     	;# 
  1887  0F12                     	;# 
  1888  0F13                     	;# 
  1889  0F14                     	;# 
  1890  0F15                     	;# 
  1891  0F16                     	;# 
  1892  0F17                     	;# 
  1893  0F18                     	;# 
  1894  0F19                     	;# 
  1895  0F1A                     	;# 
  1896  0F1B                     	;# 
  1897  0F1C                     	;# 
  1898  0F1D                     	;# 
  1899  0F1E                     	;# 
  1900  0F1F                     	;# 
  1901  0F20                     	;# 
  1902  0F21                     	;# 
  1903  0F22                     	;# 
  1904  0F23                     	;# 
  1905  0F24                     	;# 
  1906  0F25                     	;# 
  1907  0F26                     	;# 
  1908  0F27                     	;# 
  1909  0F28                     	;# 
  1910  0F29                     	;# 
  1911  0F2A                     	;# 
  1912  0F2B                     	;# 
  1913  0F2C                     	;# 
  1914  0F2D                     	;# 
  1915  0F2E                     	;# 
  1916  0F2F                     	;# 
  1917  0F30                     	;# 
  1918  0F31                     	;# 
  1919  0F32                     	;# 
  1920  0F33                     	;# 
  1921  0F34                     	;# 
  1922  0F35                     	;# 
  1923  0F36                     	;# 
  1924  0F37                     	;# 
  1925  0FE4                     	;# 
  1926  0FE5                     	;# 
  1927  0FE6                     	;# 
  1928  0FE7                     	;# 
  1929  0FE8                     	;# 
  1930  0FE9                     	;# 
  1931  0FEA                     	;# 
  1932  0FEB                     	;# 
  1933  0FED                     	;# 
  1934  0FEE                     	;# 
  1935  0FEF                     	;# 
  1936  0000                     	;# 
  1937  0001                     	;# 
  1938  0002                     	;# 
  1939  0003                     	;# 
  1940  0004                     	;# 
  1941  0005                     	;# 
  1942  0006                     	;# 
  1943  0007                     	;# 
  1944  0008                     	;# 
  1945  0009                     	;# 
  1946  000A                     	;# 
  1947  000B                     	;# 
  1948  000C                     	;# 
  1949  000D                     	;# 
  1950  000E                     	;# 
  1951  0010                     	;# 
  1952  0011                     	;# 
  1953  0012                     	;# 
  1954  0013                     	;# 
  1955  0014                     	;# 
  1956  0015                     	;# 
  1957  0015                     	;# 
  1958  0016                     	;# 
  1959  0016                     	;# 
  1960  0017                     	;# 
  1961  0018                     	;# 
  1962  0019                     	;# 
  1963  0019                     	;# 
  1964  001A                     	;# 
  1965  001B                     	;# 
  1966  001C                     	;# 
  1967  001D                     	;# 
  1968  001E                     	;# 
  1969  001F                     	;# 
  1970  008C                     	;# 
  1971  008D                     	;# 
  1972  008E                     	;# 
  1973  0090                     	;# 
  1974  0091                     	;# 
  1975  0092                     	;# 
  1976  0093                     	;# 
  1977  0094                     	;# 
  1978  0097                     	;# 
  1979  009B                     	;# 
  1980  009B                     	;# 
  1981  009C                     	;# 
  1982  009D                     	;# 
  1983  009E                     	;# 
  1984  009F                     	;# 
  1985  010C                     	;# 
  1986  010D                     	;# 
  1987  010E                     	;# 
  1988  0111                     	;# 
  1989  0112                     	;# 
  1990  0113                     	;# 
  1991  0114                     	;# 
  1992  0115                     	;# 
  1993  0116                     	;# 
  1994  0117                     	;# 
  1995  0118                     	;# 
  1996  0119                     	;# 
  1997  018C                     	;# 
  1998  018D                     	;# 
  1999  018E                     	;# 
  2000  0197                     	;# 
  2001  0199                     	;# 
  2002  0199                     	;# 
  2003  0199                     	;# 
  2004  019A                     	;# 
  2005  019A                     	;# 
  2006  019A                     	;# 
  2007  019B                     	;# 
  2008  019B                     	;# 
  2009  019B                     	;# 
  2010  019B                     	;# 
  2011  019B                     	;# 
  2012  019C                     	;# 
  2013  019C                     	;# 
  2014  019C                     	;# 
  2015  019D                     	;# 
  2016  019D                     	;# 
  2017  019D                     	;# 
  2018  019E                     	;# 
  2019  019E                     	;# 
  2020  019E                     	;# 
  2021  019F                     	;# 
  2022  019F                     	;# 
  2023  019F                     	;# 
  2024  019F                     	;# 
  2025  019F                     	;# 
  2026  020C                     	;# 
  2027  020D                     	;# 
  2028  020E                     	;# 
  2029  0211                     	;# 
  2030  0211                     	;# 
  2031  0212                     	;# 
  2032  0212                     	;# 
  2033  0213                     	;# 
  2034  0213                     	;# 
  2035  0214                     	;# 
  2036  0214                     	;# 
  2037  0215                     	;# 
  2038  0215                     	;# 
  2039  0215                     	;# 
  2040  0215                     	;# 
  2041  0216                     	;# 
  2042  0216                     	;# 
  2043  0217                     	;# 
  2044  0217                     	;# 
  2045  0219                     	;# 
  2046  021A                     	;# 
  2047  021B                     	;# 
  2048  021C                     	;# 
  2049  021D                     	;# 
  2050  021D                     	;# 
  2051  021E                     	;# 
  2052  021F                     	;# 
  2053  028C                     	;# 
  2054  028D                     	;# 
  2055  028E                     	;# 
  2056  0291                     	;# 
  2057  0291                     	;# 
  2058  0292                     	;# 
  2059  0293                     	;# 
  2060  0294                     	;# 
  2061  0295                     	;# 
  2062  0295                     	;# 
  2063  0296                     	;# 
  2064  0297                     	;# 
  2065  0298                     	;# 
  2066  029F                     	;# 
  2067  030C                     	;# 
  2068  030D                     	;# 
  2069  030E                     	;# 
  2070  0311                     	;# 
  2071  0311                     	;# 
  2072  0312                     	;# 
  2073  0313                     	;# 
  2074  0314                     	;# 
  2075  0315                     	;# 
  2076  0315                     	;# 
  2077  0316                     	;# 
  2078  0317                     	;# 
  2079  0318                     	;# 
  2080  038C                     	;# 
  2081  038D                     	;# 
  2082  038E                     	;# 
  2083  0391                     	;# 
  2084  0392                     	;# 
  2085  0393                     	;# 
  2086  0394                     	;# 
  2087  0395                     	;# 
  2088  0396                     	;# 
  2089  0397                     	;# 
  2090  0398                     	;# 
  2091  0399                     	;# 
  2092  039A                     	;# 
  2093  039C                     	;# 
  2094  039D                     	;# 
  2095  039E                     	;# 
  2096  039F                     	;# 
  2097  0411                     	;# 
  2098  0411                     	;# 
  2099  0412                     	;# 
  2100  0413                     	;# 
  2101  0414                     	;# 
  2102  0415                     	;# 
  2103  0416                     	;# 
  2104  0417                     	;# 
  2105  0418                     	;# 
  2106  0418                     	;# 
  2107  0419                     	;# 
  2108  041A                     	;# 
  2109  041B                     	;# 
  2110  041C                     	;# 
  2111  041D                     	;# 
  2112  041E                     	;# 
  2113  041F                     	;# 
  2114  0498                     	;# 
  2115  0498                     	;# 
  2116  0499                     	;# 
  2117  049A                     	;# 
  2118  049B                     	;# 
  2119  049B                     	;# 
  2120  049C                     	;# 
  2121  049D                     	;# 
  2122  049E                     	;# 
  2123  049F                     	;# 
  2124  0617                     	;# 
  2125  0618                     	;# 
  2126  0619                     	;# 
  2127  0619                     	;# 
  2128  061A                     	;# 
  2129  061B                     	;# 
  2130  061C                     	;# 
  2131  061C                     	;# 
  2132  061F                     	;# 
  2133  0691                     	;# 
  2134  0692                     	;# 
  2135  0693                     	;# 
  2136  0694                     	;# 
  2137  0695                     	;# 
  2138  0696                     	;# 
  2139  0697                     	;# 
  2140  0698                     	;# 
  2141  0699                     	;# 
  2142  0711                     	;# 
  2143  0712                     	;# 
  2144  0713                     	;# 
  2145  0714                     	;# 
  2146  0715                     	;# 
  2147  0716                     	;# 
  2148  0717                     	;# 
  2149  0718                     	;# 
  2150  0719                     	;# 
  2151  0891                     	;# 
  2152  0891                     	;# 
  2153  0891                     	;# 
  2154  0891                     	;# 
  2155  0891                     	;# 
  2156  0891                     	;# 
  2157  0892                     	;# 
  2158  0892                     	;# 
  2159  0892                     	;# 
  2160  0893                     	;# 
  2161  0893                     	;# 
  2162  0893                     	;# 
  2163  0893                     	;# 
  2164  0893                     	;# 
  2165  0893                     	;# 
  2166  0894                     	;# 
  2167  0894                     	;# 
  2168  0894                     	;# 
  2169  0895                     	;# 
  2170  0895                     	;# 
  2171  0895                     	;# 
  2172  0896                     	;# 
  2173  0896                     	;# 
  2174  0896                     	;# 
  2175  089B                     	;# 
  2176  0911                     	;# 
  2177  0912                     	;# 
  2178  0913                     	;# 
  2179  0914                     	;# 
  2180  0915                     	;# 
  2181  0916                     	;# 
  2182  0918                     	;# 
  2183  0919                     	;# 
  2184  091A                     	;# 
  2185  091B                     	;# 
  2186  091C                     	;# 
  2187  091D                     	;# 
  2188  091E                     	;# 
  2189  091F                     	;# 
  2190  0E0F                     	;# 
  2191  0E10                     	;# 
  2192  0E11                     	;# 
  2193  0E12                     	;# 
  2194  0E13                     	;# 
  2195  0E14                     	;# 
  2196  0E15                     	;# 
  2197  0E16                     	;# 
  2198  0E17                     	;# 
  2199  0E18                     	;# 
  2200  0E19                     	;# 
  2201  0E1A                     	;# 
  2202  0E1B                     	;# 
  2203  0E1C                     	;# 
  2204  0E1D                     	;# 
  2205  0E1E                     	;# 
  2206  0E1F                     	;# 
  2207  0E20                     	;# 
  2208  0E21                     	;# 
  2209  0E22                     	;# 
  2210  0E24                     	;# 
  2211  0E25                     	;# 
  2212  0E28                     	;# 
  2213  0E29                     	;# 
  2214  0E2A                     	;# 
  2215  0E2B                     	;# 
  2216  0E2C                     	;# 
  2217  0E2D                     	;# 
  2218  0E2E                     	;# 
  2219  0E2F                     	;# 
  2220  0E90                     	;# 
  2221  0E91                     	;# 
  2222  0E92                     	;# 
  2223  0E94                     	;# 
  2224  0E95                     	;# 
  2225  0E9C                     	;# 
  2226  0E9D                     	;# 
  2227  0E9E                     	;# 
  2228  0E9F                     	;# 
  2229  0EA0                     	;# 
  2230  0EA1                     	;# 
  2231  0EA2                     	;# 
  2232  0EA3                     	;# 
  2233  0EA4                     	;# 
  2234  0EA5                     	;# 
  2235  0EA6                     	;# 
  2236  0EA7                     	;# 
  2237  0F0F                     	;# 
  2238  0F10                     	;# 
  2239  0F11                     	;# 
  2240  0F12                     	;# 
  2241  0F13                     	;# 
  2242  0F14                     	;# 
  2243  0F15                     	;# 
  2244  0F16                     	;# 
  2245  0F17                     	;# 
  2246  0F18                     	;# 
  2247  0F19                     	;# 
  2248  0F1A                     	;# 
  2249  0F1B                     	;# 
  2250  0F1C                     	;# 
  2251  0F1D                     	;# 
  2252  0F1E                     	;# 
  2253  0F1F                     	;# 
  2254  0F20                     	;# 
  2255  0F21                     	;# 
  2256  0F22                     	;# 
  2257  0F23                     	;# 
  2258  0F24                     	;# 
  2259  0F25                     	;# 
  2260  0F26                     	;# 
  2261  0F27                     	;# 
  2262  0F28                     	;# 
  2263  0F29                     	;# 
  2264  0F2A                     	;# 
  2265  0F2B                     	;# 
  2266  0F2C                     	;# 
  2267  0F2D                     	;# 
  2268  0F2E                     	;# 
  2269  0F2F                     	;# 
  2270  0F30                     	;# 
  2271  0F31                     	;# 
  2272  0F32                     	;# 
  2273  0F33                     	;# 
  2274  0F34                     	;# 
  2275  0F35                     	;# 
  2276  0F36                     	;# 
  2277  0F37                     	;# 
  2278  0FE4                     	;# 
  2279  0FE5                     	;# 
  2280  0FE6                     	;# 
  2281  0FE7                     	;# 
  2282  0FE8                     	;# 
  2283  0FE9                     	;# 
  2284  0FEA                     	;# 
  2285  0FEB                     	;# 
  2286  0FED                     	;# 
  2287  0FEE                     	;# 
  2288  0FEF                     	;# 
  2289  0000                     	;# 
  2290  0001                     	;# 
  2291  0002                     	;# 
  2292  0003                     	;# 
  2293  0004                     	;# 
  2294  0005                     	;# 
  2295  0006                     	;# 
  2296  0007                     	;# 
  2297  0008                     	;# 
  2298  0009                     	;# 
  2299  000A                     	;# 
  2300  000B                     	;# 
  2301  000C                     	;# 
  2302  000D                     	;# 
  2303  000E                     	;# 
  2304  0010                     	;# 
  2305  0011                     	;# 
  2306  0012                     	;# 
  2307  0013                     	;# 
  2308  0014                     	;# 
  2309  0015                     	;# 
  2310  0015                     	;# 
  2311  0016                     	;# 
  2312  0016                     	;# 
  2313  0017                     	;# 
  2314  0018                     	;# 
  2315  0019                     	;# 
  2316  0019                     	;# 
  2317  001A                     	;# 
  2318  001B                     	;# 
  2319  001C                     	;# 
  2320  001D                     	;# 
  2321  001E                     	;# 
  2322  001F                     	;# 
  2323  008C                     	;# 
  2324  008D                     	;# 
  2325  008E                     	;# 
  2326  0090                     	;# 
  2327  0091                     	;# 
  2328  0092                     	;# 
  2329  0093                     	;# 
  2330  0094                     	;# 
  2331  0097                     	;# 
  2332  009B                     	;# 
  2333  009B                     	;# 
  2334  009C                     	;# 
  2335  009D                     	;# 
  2336  009E                     	;# 
  2337  009F                     	;# 
  2338  010C                     	;# 
  2339  010D                     	;# 
  2340  010E                     	;# 
  2341  0111                     	;# 
  2342  0112                     	;# 
  2343  0113                     	;# 
  2344  0114                     	;# 
  2345  0115                     	;# 
  2346  0116                     	;# 
  2347  0117                     	;# 
  2348  0118                     	;# 
  2349  0119                     	;# 
  2350  018C                     	;# 
  2351  018D                     	;# 
  2352  018E                     	;# 
  2353  0197                     	;# 
  2354  0199                     	;# 
  2355  0199                     	;# 
  2356  0199                     	;# 
  2357  019A                     	;# 
  2358  019A                     	;# 
  2359  019A                     	;# 
  2360  019B                     	;# 
  2361  019B                     	;# 
  2362  019B                     	;# 
  2363  019B                     	;# 
  2364  019B                     	;# 
  2365  019C                     	;# 
  2366  019C                     	;# 
  2367  019C                     	;# 
  2368  019D                     	;# 
  2369  019D                     	;# 
  2370  019D                     	;# 
  2371  019E                     	;# 
  2372  019E                     	;# 
  2373  019E                     	;# 
  2374  019F                     	;# 
  2375  019F                     	;# 
  2376  019F                     	;# 
  2377  019F                     	;# 
  2378  019F                     	;# 
  2379  020C                     	;# 
  2380  020D                     	;# 
  2381  020E                     	;# 
  2382  0211                     	;# 
  2383  0211                     	;# 
  2384  0212                     	;# 
  2385  0212                     	;# 
  2386  0213                     	;# 
  2387  0213                     	;# 
  2388  0214                     	;# 
  2389  0214                     	;# 
  2390  0215                     	;# 
  2391  0215                     	;# 
  2392  0215                     	;# 
  2393  0215                     	;# 
  2394  0216                     	;# 
  2395  0216                     	;# 
  2396  0217                     	;# 
  2397  0217                     	;# 
  2398  0219                     	;# 
  2399  021A                     	;# 
  2400  021B                     	;# 
  2401  021C                     	;# 
  2402  021D                     	;# 
  2403  021D                     	;# 
  2404  021E                     	;# 
  2405  021F                     	;# 
  2406  028C                     	;# 
  2407  028D                     	;# 
  2408  028E                     	;# 
  2409  0291                     	;# 
  2410  0291                     	;# 
  2411  0292                     	;# 
  2412  0293                     	;# 
  2413  0294                     	;# 
  2414  0295                     	;# 
  2415  0295                     	;# 
  2416  0296                     	;# 
  2417  0297                     	;# 
  2418  0298                     	;# 
  2419  029F                     	;# 
  2420  030C                     	;# 
  2421  030D                     	;# 
  2422  030E                     	;# 
  2423  0311                     	;# 
  2424  0311                     	;# 
  2425  0312                     	;# 
  2426  0313                     	;# 
  2427  0314                     	;# 
  2428  0315                     	;# 
  2429  0315                     	;# 
  2430  0316                     	;# 
  2431  0317                     	;# 
  2432  0318                     	;# 
  2433  038C                     	;# 
  2434  038D                     	;# 
  2435  038E                     	;# 
  2436  0391                     	;# 
  2437  0392                     	;# 
  2438  0393                     	;# 
  2439  0394                     	;# 
  2440  0395                     	;# 
  2441  0396                     	;# 
  2442  0397                     	;# 
  2443  0398                     	;# 
  2444  0399                     	;# 
  2445  039A                     	;# 
  2446  039C                     	;# 
  2447  039D                     	;# 
  2448  039E                     	;# 
  2449  039F                     	;# 
  2450  0411                     	;# 
  2451  0411                     	;# 
  2452  0412                     	;# 
  2453  0413                     	;# 
  2454  0414                     	;# 
  2455  0415                     	;# 
  2456  0416                     	;# 
  2457  0417                     	;# 
  2458  0418                     	;# 
  2459  0418                     	;# 
  2460  0419                     	;# 
  2461  041A                     	;# 
  2462  041B                     	;# 
  2463  041C                     	;# 
  2464  041D                     	;# 
  2465  041E                     	;# 
  2466  041F                     	;# 
  2467  0498                     	;# 
  2468  0498                     	;# 
  2469  0499                     	;# 
  2470  049A                     	;# 
  2471  049B                     	;# 
  2472  049B                     	;# 
  2473  049C                     	;# 
  2474  049D                     	;# 
  2475  049E                     	;# 
  2476  049F                     	;# 
  2477  0617                     	;# 
  2478  0618                     	;# 
  2479  0619                     	;# 
  2480  0619                     	;# 
  2481  061A                     	;# 
  2482  061B                     	;# 
  2483  061C                     	;# 
  2484  061C                     	;# 
  2485  061F                     	;# 
  2486  0691                     	;# 
  2487  0692                     	;# 
  2488  0693                     	;# 
  2489  0694                     	;# 
  2490  0695                     	;# 
  2491  0696                     	;# 
  2492  0697                     	;# 
  2493  0698                     	;# 
  2494  0699                     	;# 
  2495  0711                     	;# 
  2496  0712                     	;# 
  2497  0713                     	;# 
  2498  0714                     	;# 
  2499  0715                     	;# 
  2500  0716                     	;# 
  2501  0717                     	;# 
  2502  0718                     	;# 
  2503  0719                     	;# 
  2504  0891                     	;# 
  2505  0891                     	;# 
  2506  0891                     	;# 
  2507  0891                     	;# 
  2508  0891                     	;# 
  2509  0891                     	;# 
  2510  0892                     	;# 
  2511  0892                     	;# 
  2512  0892                     	;# 
  2513  0893                     	;# 
  2514  0893                     	;# 
  2515  0893                     	;# 
  2516  0893                     	;# 
  2517  0893                     	;# 
  2518  0893                     	;# 
  2519  0894                     	;# 
  2520  0894                     	;# 
  2521  0894                     	;# 
  2522  0895                     	;# 
  2523  0895                     	;# 
  2524  0895                     	;# 
  2525  0896                     	;# 
  2526  0896                     	;# 
  2527  0896                     	;# 
  2528  089B                     	;# 
  2529  0911                     	;# 
  2530  0912                     	;# 
  2531  0913                     	;# 
  2532  0914                     	;# 
  2533  0915                     	;# 
  2534  0916                     	;# 
  2535  0918                     	;# 
  2536  0919                     	;# 
  2537  091A                     	;# 
  2538  091B                     	;# 
  2539  091C                     	;# 
  2540  091D                     	;# 
  2541  091E                     	;# 
  2542  091F                     	;# 
  2543  0E0F                     	;# 
  2544  0E10                     	;# 
  2545  0E11                     	;# 
  2546  0E12                     	;# 
  2547  0E13                     	;# 
  2548  0E14                     	;# 
  2549  0E15                     	;# 
  2550  0E16                     	;# 
  2551  0E17                     	;# 
  2552  0E18                     	;# 
  2553  0E19                     	;# 
  2554  0E1A                     	;# 
  2555  0E1B                     	;# 
  2556  0E1C                     	;# 
  2557  0E1D                     	;# 
  2558  0E1E                     	;# 
  2559  0E1F                     	;# 
  2560  0E20                     	;# 
  2561  0E21                     	;# 
  2562  0E22                     	;# 
  2563  0E24                     	;# 
  2564  0E25                     	;# 
  2565  0E28                     	;# 
  2566  0E29                     	;# 
  2567  0E2A                     	;# 
  2568  0E2B                     	;# 
  2569  0E2C                     	;# 
  2570  0E2D                     	;# 
  2571  0E2E                     	;# 
  2572  0E2F                     	;# 
  2573  0E90                     	;# 
  2574  0E91                     	;# 
  2575  0E92                     	;# 
  2576  0E94                     	;# 
  2577  0E95                     	;# 
  2578  0E9C                     	;# 
  2579  0E9D                     	;# 
  2580  0E9E                     	;# 
  2581  0E9F                     	;# 
  2582  0EA0                     	;# 
  2583  0EA1                     	;# 
  2584  0EA2                     	;# 
  2585  0EA3                     	;# 
  2586  0EA4                     	;# 
  2587  0EA5                     	;# 
  2588  0EA6                     	;# 
  2589  0EA7                     	;# 
  2590  0F0F                     	;# 
  2591  0F10                     	;# 
  2592  0F11                     	;# 
  2593  0F12                     	;# 
  2594  0F13                     	;# 
  2595  0F14                     	;# 
  2596  0F15                     	;# 
  2597  0F16                     	;# 
  2598  0F17                     	;# 
  2599  0F18                     	;# 
  2600  0F19                     	;# 
  2601  0F1A                     	;# 
  2602  0F1B                     	;# 
  2603  0F1C                     	;# 
  2604  0F1D                     	;# 
  2605  0F1E                     	;# 
  2606  0F1F                     	;# 
  2607  0F20                     	;# 
  2608  0F21                     	;# 
  2609  0F22                     	;# 
  2610  0F23                     	;# 
  2611  0F24                     	;# 
  2612  0F25                     	;# 
  2613  0F26                     	;# 
  2614  0F27                     	;# 
  2615  0F28                     	;# 
  2616  0F29                     	;# 
  2617  0F2A                     	;# 
  2618  0F2B                     	;# 
  2619  0F2C                     	;# 
  2620  0F2D                     	;# 
  2621  0F2E                     	;# 
  2622  0F2F                     	;# 
  2623  0F30                     	;# 
  2624  0F31                     	;# 
  2625  0F32                     	;# 
  2626  0F33                     	;# 
  2627  0F34                     	;# 
  2628  0F35                     	;# 
  2629  0F36                     	;# 
  2630  0F37                     	;# 
  2631  0FE4                     	;# 
  2632  0FE5                     	;# 
  2633  0FE6                     	;# 
  2634  0FE7                     	;# 
  2635  0FE8                     	;# 
  2636  0FE9                     	;# 
  2637  0FEA                     	;# 
  2638  0FEB                     	;# 
  2639  0FED                     	;# 
  2640  0FEE                     	;# 
  2641  0FEF                     	;# 
  2642  0000                     	;# 
  2643  0001                     	;# 
  2644  0002                     	;# 
  2645  0003                     	;# 
  2646  0004                     	;# 
  2647  0005                     	;# 
  2648  0006                     	;# 
  2649  0007                     	;# 
  2650  0008                     	;# 
  2651  0009                     	;# 
  2652  000A                     	;# 
  2653  000B                     	;# 
  2654  000C                     	;# 
  2655  000D                     	;# 
  2656  000E                     	;# 
  2657  0010                     	;# 
  2658  0011                     	;# 
  2659  0012                     	;# 
  2660  0013                     	;# 
  2661  0014                     	;# 
  2662  0015                     	;# 
  2663  0015                     	;# 
  2664  0016                     	;# 
  2665  0016                     	;# 
  2666  0017                     	;# 
  2667  0018                     	;# 
  2668  0019                     	;# 
  2669  0019                     	;# 
  2670  001A                     	;# 
  2671  001B                     	;# 
  2672  001C                     	;# 
  2673  001D                     	;# 
  2674  001E                     	;# 
  2675  001F                     	;# 
  2676  008C                     	;# 
  2677  008D                     	;# 
  2678  008E                     	;# 
  2679  0090                     	;# 
  2680  0091                     	;# 
  2681  0092                     	;# 
  2682  0093                     	;# 
  2683  0094                     	;# 
  2684  0097                     	;# 
  2685  009B                     	;# 
  2686  009B                     	;# 
  2687  009C                     	;# 
  2688  009D                     	;# 
  2689  009E                     	;# 
  2690  009F                     	;# 
  2691  010C                     	;# 
  2692  010D                     	;# 
  2693  010E                     	;# 
  2694  0111                     	;# 
  2695  0112                     	;# 
  2696  0113                     	;# 
  2697  0114                     	;# 
  2698  0115                     	;# 
  2699  0116                     	;# 
  2700  0117                     	;# 
  2701  0118                     	;# 
  2702  0119                     	;# 
  2703  018C                     	;# 
  2704  018D                     	;# 
  2705  018E                     	;# 
  2706  0197                     	;# 
  2707  0199                     	;# 
  2708  0199                     	;# 
  2709  0199                     	;# 
  2710  019A                     	;# 
  2711  019A                     	;# 
  2712  019A                     	;# 
  2713  019B                     	;# 
  2714  019B                     	;# 
  2715  019B                     	;# 
  2716  019B                     	;# 
  2717  019B                     	;# 
  2718  019C                     	;# 
  2719  019C                     	;# 
  2720  019C                     	;# 
  2721  019D                     	;# 
  2722  019D                     	;# 
  2723  019D                     	;# 
  2724  019E                     	;# 
  2725  019E                     	;# 
  2726  019E                     	;# 
  2727  019F                     	;# 
  2728  019F                     	;# 
  2729  019F                     	;# 
  2730  019F                     	;# 
  2731  019F                     	;# 
  2732  020C                     	;# 
  2733  020D                     	;# 
  2734  020E                     	;# 
  2735  0211                     	;# 
  2736  0211                     	;# 
  2737  0212                     	;# 
  2738  0212                     	;# 
  2739  0213                     	;# 
  2740  0213                     	;# 
  2741  0214                     	;# 
  2742  0214                     	;# 
  2743  0215                     	;# 
  2744  0215                     	;# 
  2745  0215                     	;# 
  2746  0215                     	;# 
  2747  0216                     	;# 
  2748  0216                     	;# 
  2749  0217                     	;# 
  2750  0217                     	;# 
  2751  0219                     	;# 
  2752  021A                     	;# 
  2753  021B                     	;# 
  2754  021C                     	;# 
  2755  021D                     	;# 
  2756  021D                     	;# 
  2757  021E                     	;# 
  2758  021F                     	;# 
  2759  028C                     	;# 
  2760  028D                     	;# 
  2761  028E                     	;# 
  2762  0291                     	;# 
  2763  0291                     	;# 
  2764  0292                     	;# 
  2765  0293                     	;# 
  2766  0294                     	;# 
  2767  0295                     	;# 
  2768  0295                     	;# 
  2769  0296                     	;# 
  2770  0297                     	;# 
  2771  0298                     	;# 
  2772  029F                     	;# 
  2773  030C                     	;# 
  2774  030D                     	;# 
  2775  030E                     	;# 
  2776  0311                     	;# 
  2777  0311                     	;# 
  2778  0312                     	;# 
  2779  0313                     	;# 
  2780  0314                     	;# 
  2781  0315                     	;# 
  2782  0315                     	;# 
  2783  0316                     	;# 
  2784  0317                     	;# 
  2785  0318                     	;# 
  2786  038C                     	;# 
  2787  038D                     	;# 
  2788  038E                     	;# 
  2789  0391                     	;# 
  2790  0392                     	;# 
  2791  0393                     	;# 
  2792  0394                     	;# 
  2793  0395                     	;# 
  2794  0396                     	;# 
  2795  0397                     	;# 
  2796  0398                     	;# 
  2797  0399                     	;# 
  2798  039A                     	;# 
  2799  039C                     	;# 
  2800  039D                     	;# 
  2801  039E                     	;# 
  2802  039F                     	;# 
  2803  0411                     	;# 
  2804  0411                     	;# 
  2805  0412                     	;# 
  2806  0413                     	;# 
  2807  0414                     	;# 
  2808  0415                     	;# 
  2809  0416                     	;# 
  2810  0417                     	;# 
  2811  0418                     	;# 
  2812  0418                     	;# 
  2813  0419                     	;# 
  2814  041A                     	;# 
  2815  041B                     	;# 
  2816  041C                     	;# 
  2817  041D                     	;# 
  2818  041E                     	;# 
  2819  041F                     	;# 
  2820  0498                     	;# 
  2821  0498                     	;# 
  2822  0499                     	;# 
  2823  049A                     	;# 
  2824  049B                     	;# 
  2825  049B                     	;# 
  2826  049C                     	;# 
  2827  049D                     	;# 
  2828  049E                     	;# 
  2829  049F                     	;# 
  2830  0617                     	;# 
  2831  0618                     	;# 
  2832  0619                     	;# 
  2833  0619                     	;# 
  2834  061A                     	;# 
  2835  061B                     	;# 
  2836  061C                     	;# 
  2837  061C                     	;# 
  2838  061F                     	;# 
  2839  0691                     	;# 
  2840  0692                     	;# 
  2841  0693                     	;# 
  2842  0694                     	;# 
  2843  0695                     	;# 
  2844  0696                     	;# 
  2845  0697                     	;# 
  2846  0698                     	;# 
  2847  0699                     	;# 
  2848  0711                     	;# 
  2849  0712                     	;# 
  2850  0713                     	;# 
  2851  0714                     	;# 
  2852  0715                     	;# 
  2853  0716                     	;# 
  2854  0717                     	;# 
  2855  0718                     	;# 
  2856  0719                     	;# 
  2857  0891                     	;# 
  2858  0891                     	;# 
  2859  0891                     	;# 
  2860  0891                     	;# 
  2861  0891                     	;# 
  2862  0891                     	;# 
  2863  0892                     	;# 
  2864  0892                     	;# 
  2865  0892                     	;# 
  2866  0893                     	;# 
  2867  0893                     	;# 
  2868  0893                     	;# 
  2869  0893                     	;# 
  2870  0893                     	;# 
  2871  0893                     	;# 
  2872  0894                     	;# 
  2873  0894                     	;# 
  2874  0894                     	;# 
  2875  0895                     	;# 
  2876  0895                     	;# 
  2877  0895                     	;# 
  2878  0896                     	;# 
  2879  0896                     	;# 
  2880  0896                     	;# 
  2881  089B                     	;# 
  2882  0911                     	;# 
  2883  0912                     	;# 
  2884  0913                     	;# 
  2885  0914                     	;# 
  2886  0915                     	;# 
  2887  0916                     	;# 
  2888  0918                     	;# 
  2889  0919                     	;# 
  2890  091A                     	;# 
  2891  091B                     	;# 
  2892  091C                     	;# 
  2893  091D                     	;# 
  2894  091E                     	;# 
  2895  091F                     	;# 
  2896  0E0F                     	;# 
  2897  0E10                     	;# 
  2898  0E11                     	;# 
  2899  0E12                     	;# 
  2900  0E13                     	;# 
  2901  0E14                     	;# 
  2902  0E15                     	;# 
  2903  0E16                     	;# 
  2904  0E17                     	;# 
  2905  0E18                     	;# 
  2906  0E19                     	;# 
  2907  0E1A                     	;# 
  2908  0E1B                     	;# 
  2909  0E1C                     	;# 
  2910  0E1D                     	;# 
  2911  0E1E                     	;# 
  2912  0E1F                     	;# 
  2913  0E20                     	;# 
  2914  0E21                     	;# 
  2915  0E22                     	;# 
  2916  0E24                     	;# 
  2917  0E25                     	;# 
  2918  0E28                     	;# 
  2919  0E29                     	;# 
  2920  0E2A                     	;# 
  2921  0E2B                     	;# 
  2922  0E2C                     	;# 
  2923  0E2D                     	;# 
  2924  0E2E                     	;# 
  2925  0E2F                     	;# 
  2926  0E90                     	;# 
  2927  0E91                     	;# 
  2928  0E92                     	;# 
  2929  0E94                     	;# 
  2930  0E95                     	;# 
  2931  0E9C                     	;# 
  2932  0E9D                     	;# 
  2933  0E9E                     	;# 
  2934  0E9F                     	;# 
  2935  0EA0                     	;# 
  2936  0EA1                     	;# 
  2937  0EA2                     	;# 
  2938  0EA3                     	;# 
  2939  0EA4                     	;# 
  2940  0EA5                     	;# 
  2941  0EA6                     	;# 
  2942  0EA7                     	;# 
  2943  0F0F                     	;# 
  2944  0F10                     	;# 
  2945  0F11                     	;# 
  2946  0F12                     	;# 
  2947  0F13                     	;# 
  2948  0F14                     	;# 
  2949  0F15                     	;# 
  2950  0F16                     	;# 
  2951  0F17                     	;# 
  2952  0F18                     	;# 
  2953  0F19                     	;# 
  2954  0F1A                     	;# 
  2955  0F1B                     	;# 
  2956  0F1C                     	;# 
  2957  0F1D                     	;# 
  2958  0F1E                     	;# 
  2959  0F1F                     	;# 
  2960  0F20                     	;# 
  2961  0F21                     	;# 
  2962  0F22                     	;# 
  2963  0F23                     	;# 
  2964  0F24                     	;# 
  2965  0F25                     	;# 
  2966  0F26                     	;# 
  2967  0F27                     	;# 
  2968  0F28                     	;# 
  2969  0F29                     	;# 
  2970  0F2A                     	;# 
  2971  0F2B                     	;# 
  2972  0F2C                     	;# 
  2973  0F2D                     	;# 
  2974  0F2E                     	;# 
  2975  0F2F                     	;# 
  2976  0F30                     	;# 
  2977  0F31                     	;# 
  2978  0F32                     	;# 
  2979  0F33                     	;# 
  2980  0F34                     	;# 
  2981  0F35                     	;# 
  2982  0F36                     	;# 
  2983  0F37                     	;# 
  2984  0FE4                     	;# 
  2985  0FE5                     	;# 
  2986  0FE6                     	;# 
  2987  0FE7                     	;# 
  2988  0FE8                     	;# 
  2989  0FE9                     	;# 
  2990  0FEA                     	;# 
  2991  0FEB                     	;# 
  2992  0FED                     	;# 
  2993  0FEE                     	;# 
  2994  0FEF                     	;# 
  2995  0000                     	;# 
  2996  0001                     	;# 
  2997  0002                     	;# 
  2998  0003                     	;# 
  2999  0004                     	;# 
  3000  0005                     	;# 
  3001  0006                     	;# 
  3002  0007                     	;# 
  3003  0008                     	;# 
  3004  0009                     	;# 
  3005  000A                     	;# 
  3006  000B                     	;# 
  3007  000C                     	;# 
  3008  000D                     	;# 
  3009  000E                     	;# 
  3010  0010                     	;# 
  3011  0011                     	;# 
  3012  0012                     	;# 
  3013  0013                     	;# 
  3014  0014                     	;# 
  3015  0015                     	;# 
  3016  0015                     	;# 
  3017  0016                     	;# 
  3018  0016                     	;# 
  3019  0017                     	;# 
  3020  0018                     	;# 
  3021  0019                     	;# 
  3022  0019                     	;# 
  3023  001A                     	;# 
  3024  001B                     	;# 
  3025  001C                     	;# 
  3026  001D                     	;# 
  3027  001E                     	;# 
  3028  001F                     	;# 
  3029  008C                     	;# 
  3030  008D                     	;# 
  3031  008E                     	;# 
  3032  0090                     	;# 
  3033  0091                     	;# 
  3034  0092                     	;# 
  3035  0093                     	;# 
  3036  0094                     	;# 
  3037  0097                     	;# 
  3038  009B                     	;# 
  3039  009B                     	;# 
  3040  009C                     	;# 
  3041  009D                     	;# 
  3042  009E                     	;# 
  3043  009F                     	;# 
  3044  010C                     	;# 
  3045  010D                     	;# 
  3046  010E                     	;# 
  3047  0111                     	;# 
  3048  0112                     	;# 
  3049  0113                     	;# 
  3050  0114                     	;# 
  3051  0115                     	;# 
  3052  0116                     	;# 
  3053  0117                     	;# 
  3054  0118                     	;# 
  3055  0119                     	;# 
  3056  018C                     	;# 
  3057  018D                     	;# 
  3058  018E                     	;# 
  3059  0197                     	;# 
  3060  0199                     	;# 
  3061  0199                     	;# 
  3062  0199                     	;# 
  3063  019A                     	;# 
  3064  019A                     	;# 
  3065  019A                     	;# 
  3066  019B                     	;# 
  3067  019B                     	;# 
  3068  019B                     	;# 
  3069  019B                     	;# 
  3070  019B                     	;# 
  3071  019C                     	;# 
  3072  019C                     	;# 
  3073  019C                     	;# 
  3074  019D                     	;# 
  3075  019D                     	;# 
  3076  019D                     	;# 
  3077  019E                     	;# 
  3078  019E                     	;# 
  3079  019E                     	;# 
  3080  019F                     	;# 
  3081  019F                     	;# 
  3082  019F                     	;# 
  3083  019F                     	;# 
  3084  019F                     	;# 
  3085  020C                     	;# 
  3086  020D                     	;# 
  3087  020E                     	;# 
  3088  0211                     	;# 
  3089  0211                     	;# 
  3090  0212                     	;# 
  3091  0212                     	;# 
  3092  0213                     	;# 
  3093  0213                     	;# 
  3094  0214                     	;# 
  3095  0214                     	;# 
  3096  0215                     	;# 
  3097  0215                     	;# 
  3098  0215                     	;# 
  3099  0215                     	;# 
  3100  0216                     	;# 
  3101  0216                     	;# 
  3102  0217                     	;# 
  3103  0217                     	;# 
  3104  0219                     	;# 
  3105  021A                     	;# 
  3106  021B                     	;# 
  3107  021C                     	;# 
  3108  021D                     	;# 
  3109  021D                     	;# 
  3110  021E                     	;# 
  3111  021F                     	;# 
  3112  028C                     	;# 
  3113  028D                     	;# 
  3114  028E                     	;# 
  3115  0291                     	;# 
  3116  0291                     	;# 
  3117  0292                     	;# 
  3118  0293                     	;# 
  3119  0294                     	;# 
  3120  0295                     	;# 
  3121  0295                     	;# 
  3122  0296                     	;# 
  3123  0297                     	;# 
  3124  0298                     	;# 
  3125  029F                     	;# 
  3126  030C                     	;# 
  3127  030D                     	;# 
  3128  030E                     	;# 
  3129  0311                     	;# 
  3130  0311                     	;# 
  3131  0312                     	;# 
  3132  0313                     	;# 
  3133  0314                     	;# 
  3134  0315                     	;# 
  3135  0315                     	;# 
  3136  0316                     	;# 
  3137  0317                     	;# 
  3138  0318                     	;# 
  3139  038C                     	;# 
  3140  038D                     	;# 
  3141  038E                     	;# 
  3142  0391                     	;# 
  3143  0392                     	;# 
  3144  0393                     	;# 
  3145  0394                     	;# 
  3146  0395                     	;# 
  3147  0396                     	;# 
  3148  0397                     	;# 
  3149  0398                     	;# 
  3150  0399                     	;# 
  3151  039A                     	;# 
  3152  039C                     	;# 
  3153  039D                     	;# 
  3154  039E                     	;# 
  3155  039F                     	;# 
  3156  0411                     	;# 
  3157  0411                     	;# 
  3158  0412                     	;# 
  3159  0413                     	;# 
  3160  0414                     	;# 
  3161  0415                     	;# 
  3162  0416                     	;# 
  3163  0417                     	;# 
  3164  0418                     	;# 
  3165  0418                     	;# 
  3166  0419                     	;# 
  3167  041A                     	;# 
  3168  041B                     	;# 
  3169  041C                     	;# 
  3170  041D                     	;# 
  3171  041E                     	;# 
  3172  041F                     	;# 
  3173  0498                     	;# 
  3174  0498                     	;# 
  3175  0499                     	;# 
  3176  049A                     	;# 
  3177  049B                     	;# 
  3178  049B                     	;# 
  3179  049C                     	;# 
  3180  049D                     	;# 
  3181  049E                     	;# 
  3182  049F                     	;# 
  3183  0617                     	;# 
  3184  0618                     	;# 
  3185  0619                     	;# 
  3186  0619                     	;# 
  3187  061A                     	;# 
  3188  061B                     	;# 
  3189  061C                     	;# 
  3190  061C                     	;# 
  3191  061F                     	;# 
  3192  0691                     	;# 
  3193  0692                     	;# 
  3194  0693                     	;# 
  3195  0694                     	;# 
  3196  0695                     	;# 
  3197  0696                     	;# 
  3198  0697                     	;# 
  3199  0698                     	;# 
  3200  0699                     	;# 
  3201  0711                     	;# 
  3202  0712                     	;# 
  3203  0713                     	;# 
  3204  0714                     	;# 
  3205  0715                     	;# 
  3206  0716                     	;# 
  3207  0717                     	;# 
  3208  0718                     	;# 
  3209  0719                     	;# 
  3210  0891                     	;# 
  3211  0891                     	;# 
  3212  0891                     	;# 
  3213  0891                     	;# 
  3214  0891                     	;# 
  3215  0891                     	;# 
  3216  0892                     	;# 
  3217  0892                     	;# 
  3218  0892                     	;# 
  3219  0893                     	;# 
  3220  0893                     	;# 
  3221  0893                     	;# 
  3222  0893                     	;# 
  3223  0893                     	;# 
  3224  0893                     	;# 
  3225  0894                     	;# 
  3226  0894                     	;# 
  3227  0894                     	;# 
  3228  0895                     	;# 
  3229  0895                     	;# 
  3230  0895                     	;# 
  3231  0896                     	;# 
  3232  0896                     	;# 
  3233  0896                     	;# 
  3234  089B                     	;# 
  3235  0911                     	;# 
  3236  0912                     	;# 
  3237  0913                     	;# 
  3238  0914                     	;# 
  3239  0915                     	;# 
  3240  0916                     	;# 
  3241  0918                     	;# 
  3242  0919                     	;# 
  3243  091A                     	;# 
  3244  091B                     	;# 
  3245  091C                     	;# 
  3246  091D                     	;# 
  3247  091E                     	;# 
  3248  091F                     	;# 
  3249  0E0F                     	;# 
  3250  0E10                     	;# 
  3251  0E11                     	;# 
  3252  0E12                     	;# 
  3253  0E13                     	;# 
  3254  0E14                     	;# 
  3255  0E15                     	;# 
  3256  0E16                     	;# 
  3257  0E17                     	;# 
  3258  0E18                     	;# 
  3259  0E19                     	;# 
  3260  0E1A                     	;# 
  3261  0E1B                     	;# 
  3262  0E1C                     	;# 
  3263  0E1D                     	;# 
  3264  0E1E                     	;# 
  3265  0E1F                     	;# 
  3266  0E20                     	;# 
  3267  0E21                     	;# 
  3268  0E22                     	;# 
  3269  0E24                     	;# 
  3270  0E25                     	;# 
  3271  0E28                     	;# 
  3272  0E29                     	;# 
  3273  0E2A                     	;# 
  3274  0E2B                     	;# 
  3275  0E2C                     	;# 
  3276  0E2D                     	;# 
  3277  0E2E                     	;# 
  3278  0E2F                     	;# 
  3279  0E90                     	;# 
  3280  0E91                     	;# 
  3281  0E92                     	;# 
  3282  0E94                     	;# 
  3283  0E95                     	;# 
  3284  0E9C                     	;# 
  3285  0E9D                     	;# 
  3286  0E9E                     	;# 
  3287  0E9F                     	;# 
  3288  0EA0                     	;# 
  3289  0EA1                     	;# 
  3290  0EA2                     	;# 
  3291  0EA3                     	;# 
  3292  0EA4                     	;# 
  3293  0EA5                     	;# 
  3294  0EA6                     	;# 
  3295  0EA7                     	;# 
  3296  0F0F                     	;# 
  3297  0F10                     	;# 
  3298  0F11                     	;# 
  3299  0F12                     	;# 
  3300  0F13                     	;# 
  3301  0F14                     	;# 
  3302  0F15                     	;# 
  3303  0F16                     	;# 
  3304  0F17                     	;# 
  3305  0F18                     	;# 
  3306  0F19                     	;# 
  3307  0F1A                     	;# 
  3308  0F1B                     	;# 
  3309  0F1C                     	;# 
  3310  0F1D                     	;# 
  3311  0F1E                     	;# 
  3312  0F1F                     	;# 
  3313  0F20                     	;# 
  3314  0F21                     	;# 
  3315  0F22                     	;# 
  3316  0F23                     	;# 
  3317  0F24                     	;# 
  3318  0F25                     	;# 
  3319  0F26                     	;# 
  3320  0F27                     	;# 
  3321  0F28                     	;# 
  3322  0F29                     	;# 
  3323  0F2A                     	;# 
  3324  0F2B                     	;# 
  3325  0F2C                     	;# 
  3326  0F2D                     	;# 
  3327  0F2E                     	;# 
  3328  0F2F                     	;# 
  3329  0F30                     	;# 
  3330  0F31                     	;# 
  3331  0F32                     	;# 
  3332  0F33                     	;# 
  3333  0F34                     	;# 
  3334  0F35                     	;# 
  3335  0F36                     	;# 
  3336  0F37                     	;# 
  3337  0FE4                     	;# 
  3338  0FE5                     	;# 
  3339  0FE6                     	;# 
  3340  0FE7                     	;# 
  3341  0FE8                     	;# 
  3342  0FE9                     	;# 
  3343  0FEA                     	;# 
  3344  0FEB                     	;# 
  3345  0FED                     	;# 
  3346  0FEE                     	;# 
  3347  0FEF                     	;# 
  3348                           
  3349                           	psect	idataBANK2
  3350  1D9C                     __pidataBANK2:	
  3351                           
  3352                           ;initializer for main@F7271
  3353  1D9C  34FF               	retlw	255
  3354  1D9D  3400               	retlw	0
  3355  1D9E  34FF               	retlw	255
  3356  1D9F  3400               	retlw	0
  3357                           
  3358                           	psect	idataBANK5
  3359  1EED                     __pidataBANK5:	
  3360                           
  3361                           ;initializer for main@F7275
  3362  1EED  34FF               	retlw	255
  3363  1EEE  3400               	retlw	0
  3364  1EEF  34FF               	retlw	255
  3365  1EF0  3400               	retlw	0
  3366  1EF1  3416               	retlw	22
  3367  1EF2  3448               	retlw	72
  3368  1EF3  3445               	retlw	69
  3369  1EF4  344C               	retlw	76
  3370  1EF5  344C               	retlw	76
  3371  1EF6  344F               	retlw	79
  3372  1EF7  3420               	retlw	32
  3373  1EF8  3453               	retlw	83
  3374  1EF9  3445               	retlw	69
  3375  1EFA  344E               	retlw	78
  3376  1EFB  3453               	retlw	83
  3377  1EFC  344F               	retlw	79
  3378  1EFD  3452               	retlw	82
  3379  1EFE  3453               	retlw	83
  3380  1EFF  3417               	retlw	23
  3381  1F00  34FF               	retlw	255
  3382  1F01  3400               	retlw	0
  3383  1F02  34FF               	retlw	255
  3384  1F03  3400               	retlw	0
  3385                           
  3386                           	psect	stringtext1
  3387  1800                     __pstringtext1:	
  3388  1800                     _fsmStateTable:	
  3389  1800  34A5               	retlw	low _I2C1_DO_IDLE
  3390  1801  341D               	retlw	high _I2C1_DO_IDLE
  3391  1802  3401               	retlw	low _I2C1_DO_SEND_ADR_READ
  3392  1803  341E               	retlw	high _I2C1_DO_SEND_ADR_READ
  3393  1804  34EA               	retlw	low _I2C1_DO_SEND_ADR_WRITE
  3394  1805  341D               	retlw	high _I2C1_DO_SEND_ADR_WRITE
  3395  1806  3448               	retlw	low _I2C1_DO_TX
  3396  1807  3414               	retlw	high _I2C1_DO_TX
  3397  1808  34C9               	retlw	low _I2C1_DO_RX
  3398  1809  3412               	retlw	high _I2C1_DO_RX
  3399  180A  34D8               	retlw	low _I2C1_DO_RCEN
  3400  180B  341D               	retlw	high _I2C1_DO_RCEN
  3401  180C  34D1               	retlw	low _I2C1_DO_TX_EMPTY
  3402  180D  3410               	retlw	high _I2C1_DO_TX_EMPTY
  3403  180E  3478               	retlw	low _I2C1_DO_SEND_RESTART_READ
  3404  180F  341D               	retlw	high _I2C1_DO_SEND_RESTART_READ
  3405  1810  347C               	retlw	low _I2C1_DO_SEND_RESTART_WRITE
  3406  1811  341D               	retlw	high _I2C1_DO_SEND_RESTART_WRITE
  3407  1812  3480               	retlw	low _I2C1_DO_SEND_RESTART
  3408  1813  341D               	retlw	high _I2C1_DO_SEND_RESTART
  3409  1814  3484               	retlw	low _I2C1_DO_SEND_STOP
  3410  1815  341D               	retlw	high _I2C1_DO_SEND_STOP
  3411  1816  3488               	retlw	low _I2C1_DO_RX_ACK
  3412  1817  341D               	retlw	high _I2C1_DO_RX_ACK
  3413  1818  348C               	retlw	low _I2C1_DO_RX_NACK_STOP
  3414  1819  341D               	retlw	high _I2C1_DO_RX_NACK_STOP
  3415  181A  3490               	retlw	low _I2C1_DO_RX_NACK_RESTART
  3416  181B  341D               	retlw	high _I2C1_DO_RX_NACK_RESTART
  3417  181C  34AA               	retlw	low _I2C1_DO_RESET
  3418  181D  341D               	retlw	high _I2C1_DO_RESET
  3419  181E  3400               	retlw	low _I2C1_DO_ADDRESS_NACK
  3420  181F  3411               	retlw	high _I2C1_DO_ADDRESS_NACK
  3421  1820                     __end_of_fsmStateTable:	
  3422                           
  3423                           	psect	nvBANK2
  3424  016D                     __pnvBANK2:	
  3425  016D                     _EUSART_TxDefaultInterruptHandler:	
  3426  016D                     	ds	2
  3427  016F                     _eusartTxBufferRemaining:	
  3428  016F                     	ds	1
  3429                           
  3430                           	psect	nvBANK3
  3431  01D6                     __pnvBANK3:	
  3432  01D6                     _temperature:	
  3433  01D6                     	ds	4
  3434  01DA                     _pressure:	
  3435  01DA                     	ds	4
  3436  01DE                     _EUSART_ErrorHandler:	
  3437  01DE                     	ds	2
  3438  01E0                     _EUSART_OverrunErrorHandler:	
  3439  01E0                     	ds	2
  3440  01E2                     _EUSART_FramingErrorHandler:	
  3441  01E2                     	ds	2
  3442  01E4                     _EUSART_RxDefaultInterruptHandler:	
  3443  01E4                     	ds	2
  3444  000E                     _PORTCbits	set	14
  3445  000B                     _INTCONbits	set	11
  3446  001F                     _T2CONbits	set	31
  3447  001F                     _T2CON	set	31
  3448  0011                     _PIR1bits	set	17
  3449  001D                     _TMR2	set	29
  3450  001E                     _PR2	set	30
  3451  008E                     _TRISC	set	142
  3452  008D                     _TRISB	set	141
  3453  008C                     _TRISA	set	140
  3454  0097                     _WDTCON	set	151
  3455  0091                     _PIE1bits	set	145
  3456  010E                     _LATCbits	set	270
  3457  010E                     _LATC	set	270
  3458  010D                     _LATB	set	269
  3459  010C                     _LATA	set	268
  3460  018C                     _ANSELA	set	396
  3461  018D                     _ANSELB	set	397
  3462  018E                     _ANSELC	set	398
  3463  0199                     _RC1REG	set	409
  3464  019D                     _RC1STAbits	set	413
  3465  019A                     _TX1REG	set	410
  3466  019E                     _TX1STAbits	set	414
  3467  019C                     _SP1BRGH	set	412
  3468  019B                     _SP1BRGL	set	411
  3469  019E                     _TX1STA	set	414
  3470  019D                     _RC1STA	set	413
  3471  019F                     _BAUD1CON	set	415
  3472  0214                     _SSP1STATbits	set	532
  3473  0216                     _SSP1CON2bits	set	534
  3474  0211                     _SSP1BUF	set	529
  3475  0215                     _SSP1CON1bits	set	533
  3476  0212                     _SSP1ADD	set	530
  3477  0216                     _SSP1CON2	set	534
  3478  0215                     _SSP1CON1	set	533
  3479  0214                     _SSP1STAT	set	532
  3480  020E                     _WPUC	set	526
  3481  020C                     _WPUA	set	524
  3482  020D                     _WPUB	set	525
  3483  028E                     _ODCONC	set	654
  3484  028D                     _ODCONB	set	653
  3485  028C                     _ODCONA	set	652
  3486  030E                     _SLRCONC	set	782
  3487  030D                     _SLRCONB	set	781
  3488  030C                     _SLRCONA	set	780
  3489  038E                     _INLVLC	set	910
  3490  038D                     _INLVLB	set	909
  3491  038C                     _INLVLA	set	908
  3492  061F                     _PWMTMRSbits	set	1567
  3493  0617                     _PWM5DCL	set	1559
  3494  0618                     _PWM5DCH	set	1560
  3495  0619                     _PWM5CON	set	1561
  3496  0916                     _PMD5	set	2326
  3497  0915                     _PMD4	set	2325
  3498  0914                     _PMD3	set	2324
  3499  0913                     _PMD2	set	2323
  3500  0912                     _PMD1	set	2322
  3501  0911                     _PMD0	set	2321
  3502  091E                     _OSCTUNE	set	2334
  3503  091F                     _OSCFRQ	set	2335
  3504  091D                     _OSCEN	set	2333
  3505  091B                     _OSCCON3	set	2331
  3506  0919                     _OSCCON1	set	2329
  3507  0E21                     _SSP1DATPPS	set	3617
  3508  0E20                     _SSP1CLKPPS	set	3616
  3509  0E24                     _RXPPS	set	3620
  3510  0EA6                     _RC6PPS	set	3750
  3511  0E9C                     _RB4PPS	set	3740
  3512  0E9D                     _RB5PPS	set	3741
  3513  0E9F                     _RB7PPS	set	3743
  3514                           
  3515                           	psect	stringtext2
  3516  2000                     __pstringtext2:	
  3517  2000                     STR_2:	
  3518  2000  3454               	retlw	84	;'T'
  3519  2001  3465               	retlw	101	;'e'
  3520  2002  346D               	retlw	109	;'m'
  3521  2003  3470               	retlw	112	;'p'
  3522  2004  3465               	retlw	101	;'e'
  3523  2005  3472               	retlw	114	;'r'
  3524  2006  3461               	retlw	97	;'a'
  3525  2007  3474               	retlw	116	;'t'
  3526  2008  3475               	retlw	117	;'u'
  3527  2009  3472               	retlw	114	;'r'
  3528  200A  3465               	retlw	101	;'e'
  3529  200B  3420               	retlw	32	;' '
  3530  200C  343A               	retlw	58	;':'
  3531  200D  3420               	retlw	32	;' '
  3532  200E  3425               	retlw	37	;'%'
  3533  200F  3466               	retlw	102	;'f'
  3534  2010  340A               	retlw	10
  3535  2011  3400               	retlw	0
  3536                           
  3537                           	psect	stringtext3
  3538  2012                     __pstringtext3:	
  3539  2012                     STR_1:	
  3540  2012  3450               	retlw	80	;'P'
  3541  2013  3472               	retlw	114	;'r'
  3542  2014  3465               	retlw	101	;'e'
  3543  2015  3473               	retlw	115	;'s'
  3544  2016  3473               	retlw	115	;'s'
  3545  2017  3475               	retlw	117	;'u'
  3546  2018  3472               	retlw	114	;'r'
  3547  2019  3465               	retlw	101	;'e'
  3548  201A  3420               	retlw	32	;' '
  3549  201B  343A               	retlw	58	;':'
  3550  201C  3420               	retlw	32	;' '
  3551  201D  3425               	retlw	37	;'%'
  3552  201E  3466               	retlw	102	;'f'
  3553  201F  340A               	retlw	10
  3554  2020  3400               	retlw	0
  3555                           
  3556                           	psect	stringtext4
  3557  2021                     __pstringtext4:	
  3558  2021                     STR_3:	
  3559  2021  3449               	retlw	73	;'I'
  3560  2022  344E               	retlw	78	;'N'
  3561  2023  3446               	retlw	70	;'F'
  3562  2024  3400               	retlw	0
  3563                           
  3564                           	psect	stringtext5
  3565  2025                     __pstringtext5:	
  3566  2025                     STR_7:	
  3567  2025  344E               	retlw	78	;'N'
  3568  2026  3441               	retlw	65	;'A'
  3569  2027  344E               	retlw	78	;'N'
  3570  2028  3400               	retlw	0
  3571                           
  3572                           	psect	stringtext6
  3573  2029                     __pstringtext6:	
  3574  2029                     STR_4:	
  3575  2029  3469               	retlw	105	;'i'
  3576  202A  346E               	retlw	110	;'n'
  3577  202B  3466               	retlw	102	;'f'
  3578  202C  3400               	retlw	0
  3579                           
  3580                           	psect	stringtext7
  3581  202D                     __pstringtext7:	
  3582  202D                     STR_8:	
  3583  202D  346E               	retlw	110	;'n'
  3584  202E  3461               	retlw	97	;'a'
  3585  202F  346E               	retlw	110	;'n'
  3586  2030  3400               	retlw	0
  3587                           
  3588                           	psect	stringtext8
  3589  2031                     __pstringtext8:	
  3590  2031                     STR_11:	
  3591  2031  346C               	retlw	108	;'l'
  3592  2032  3466               	retlw	102	;'f'
  3593  2033  3400               	retlw	0
  3594                           
  3595                           	psect	stringtext9
  3596  0000                     __pstringtext9:	
  3597  2031                     
  3598                           ; #config settings
  3599  0000                     
  3600                           	psect	cinit
  3601  0025                     start_initialization:	
  3602  0025                     __initialization:	
  3603                           
  3604                           ; Initialize objects allocated to BANK2
  3605  0025  309C               	movlw	low __pidataBANK2
  3606  0026  0084               	movwf	4
  3607  0027  309D               	movlw	(high __pidataBANK2)| (0+128)
  3608  0028  0085               	movwf	5
  3609  0029  3069               	movlw	low __pdataBANK2
  3610  002A  0086               	movwf	6
  3611  002B  3001               	movlw	high __pdataBANK2
  3612  002C  0087               	movwf	7
  3613  002D  3004               	movlw	4
  3614  002E  319D  25E4  3180   	fcall	init_ram
  3615                           
  3616                           ; Initialize objects allocated to BANK5
  3617  0031  30ED               	movlw	low __pidataBANK5
  3618  0032  0084               	movwf	4
  3619  0033  309E               	movlw	(high __pidataBANK5)| (0+128)
  3620  0034  0085               	movwf	5
  3621  0035  30A0               	movlw	low __pdataBANK5
  3622  0036  0086               	movwf	6
  3623  0037  3002               	movlw	high __pdataBANK5
  3624  0038  0087               	movwf	7
  3625  0039  3017               	movlw	23
  3626  003A  319D  25E4  3180   	fcall	init_ram
  3627                           
  3628                           ; Clear objects allocated to COMMON
  3629  003D  01FC               	clrf	__pbssCOMMON& (0+127)
  3630                           
  3631                           ; Clear objects allocated to BANK1
  3632  003E  0021               	movlb	1	; select bank1
  3633  003F  01ED               	clrf	__pbssBANK1& (0+127)
  3634  0040  01EE               	clrf	(__pbssBANK1+1)& (0+127)
  3635  0041  01EF               	clrf	(__pbssBANK1+2)& (0+127)
  3636                           
  3637                           ; Clear objects allocated to BANK2
  3638  0042  3048               	movlw	low __pbssBANK2
  3639  0043  0084               	movwf	4
  3640  0044  3001               	movlw	high __pbssBANK2
  3641  0045  0085               	movwf	5
  3642  0046  3021               	movlw	33
  3643  0047  319D  25DE  3180   	fcall	clear_ram0
  3644                           
  3645                           ; Clear objects allocated to BANK3
  3646  004A  30A0               	movlw	low __pbssBANK3
  3647  004B  0084               	movwf	4
  3648  004C  3001               	movlw	high __pbssBANK3
  3649  004D  0085               	movwf	5
  3650  004E  3036               	movlw	54
  3651  004F  319D  25DE  3180   	fcall	clear_ram0
  3652                           
  3653                           ; Clear objects allocated to BANK4
  3654  0052  3020               	movlw	low __pbssBANK4
  3655  0053  0084               	movwf	4
  3656  0054  3002               	movlw	high __pbssBANK4
  3657  0055  0085               	movwf	5
  3658  0056  3050               	movlw	80
  3659  0057  319D  25DE         	fcall	clear_ram0
  3660  0059                     end_of_initialization:	
  3661                           ;End of C runtime variable initialization code
  3662                           
  3663  0059                     __end_of__initialization:	
  3664  0059  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3665  005A  0020               	movlb	0
  3666  005B  3188  2833         	ljmp	_main	;jump to C main() function
  3667                           
  3668                           	psect	bssCOMMON
  3669  007C                     __pbssCOMMON:	
  3670  007C                     _eusartRxHead:	
  3671  007C                     	ds	1
  3672                           
  3673                           	psect	bssBANK1
  3674  00ED                     __pbssBANK1:	
  3675  00ED                     _eusartRxTail:	
  3676  00ED                     	ds	1
  3677  00EE                     _eusartTxTail:	
  3678  00EE                     	ds	1
  3679  00EF                     _eusartTxHead:	
  3680  00EF                     	ds	1
  3681                           
  3682                           	psect	bssBANK2
  3683  0148                     __pbssBANK2:	
  3684  0148                     _eusartRxStatusBuffer:	
  3685  0148                     	ds	8
  3686  0150                     floorf@F524:	
  3687  0150                     	ds	4
  3688  0154                     ___fpclassifyf@F463:	
  3689  0154                     	ds	4
  3690  0158                     _nout:	
  3691  0158                     	ds	2
  3692  015A                     _width:	
  3693  015A                     	ds	2
  3694  015C                     _prec:	
  3695  015C                     	ds	2
  3696  015E                     _flags:	
  3697  015E                     	ds	2
  3698  0160                     _value:	
  3699  0160                     	ds	1
  3700  0161                     _eusartRxLastError:	
  3701  0161                     	ds	1
  3702  0162                     _eusartRxCount:	
  3703  0162                     	ds	1
  3704  0163                     _raw_pressure:	
  3705  0163                     	ds	4
  3706  0167                     _raw_temperature:	
  3707  0167                     	ds	2
  3708                           
  3709                           	psect	dataBANK2
  3710  0169                     __pdataBANK2:	
  3711  0169                     main@F7271:	
  3712  0169                     	ds	4
  3713                           
  3714                           	psect	bssBANK3
  3715  01A0                     __pbssBANK3:	
  3716  01A0                     _I2C1_Status:	
  3717  01A0                     	ds	29
  3718  01BD                     _eusartRxBuffer:	
  3719  01BD                     	ds	8
  3720  01C5                     _eusartTxBuffer:	
  3721  01C5                     	ds	8
  3722  01CD                     _packet:	
  3723  01CD                     	ds	9
  3724                           
  3725                           	psect	bssBANK4
  3726  0220                     __pbssBANK4:	
  3727  0220                     _dbuf:	
  3728  0220                     	ds	80
  3729                           
  3730                           	psect	dataBANK5
  3731  02A0                     __pdataBANK5:	
  3732  02A0                     main@F7275:	
  3733  02A0                     	ds	23
  3734                           
  3735                           	psect	inittext
  3736  1DE4                     init_ram:	
  3737  1DE4  00FE               	movwf	126
  3738  1DE5                     initloop:	
  3739  1DE5  0012               	moviw fsr0++
  3740  1DE6  001E               	movwi fsr1++
  3741  1DE7  0BFE               	decfsz	126,f
  3742  1DE8  2DE5               	goto	initloop
  3743  1DE9  3400               	retlw	0
  3744                           
  3745                           	psect	clrtext
  3746  1DDE                     clear_ram0:	
  3747                           ;	Called with FSR0 containing the base address, and
  3748                           ;	WREG with the size to clear
  3749                           
  3750  1DDE  0064               	clrwdt	;clear the watchdog before getting into this loop
  3751  1DDF                     clrloop0:	
  3752  1DDF  0180               	clrf	0	;clear RAM location pointed to by FSR
  3753  1DE0  3101               	addfsr 0,1
  3754  1DE1  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3755  1DE2  2DDF               	goto	clrloop0	;have we reached the end yet?
  3756  1DE3  3400               	retlw	0	;all done for this memory range, return
  3757                           
  3758                           	psect	cstackBANK2
  3759  0120                     __pcstackBANK2:	
  3760  0120                     ??_readPressureSensor:	
  3761                           
  3762                           ; 1 bytes @ 0x0
  3763  0120                     	ds	9
  3764  0129                     main@dummy_data:	
  3765                           
  3766                           ; 23 bytes @ 0x9
  3767  0129                     	ds	23
  3768  0140                     main@hdr_trl:	
  3769                           
  3770                           ; 4 bytes @ 0x20
  3771  0140                     	ds	5
  3772  0145                     main@SOC:	
  3773                           
  3774                           ; 1 bytes @ 0x25
  3775  0145                     	ds	1
  3776  0146                     main@EOC:	
  3777                           
  3778                           ; 1 bytes @ 0x26
  3779  0146                     	ds	1
  3780  0147                     main@i:	
  3781                           
  3782                           ; 1 bytes @ 0x27
  3783  0147                     	ds	1
  3784                           
  3785                           	psect	cstackBANK1
  3786  00A0                     __pcstackBANK1:	
  3787  00A0                     efgtoa@ou:	
  3788                           
  3789                           ; 4 bytes @ 0x0
  3790  00A0                     	ds	4
  3791  00A4                     _efgtoa$1500:	
  3792                           
  3793                           ; 2 bytes @ 0x4
  3794  00A4                     	ds	2
  3795  00A6                     _efgtoa$1501:	
  3796                           
  3797                           ; 2 bytes @ 0x6
  3798  00A6                     	ds	2
  3799  00A8                     _efgtoa$1506:	
  3800                           
  3801                           ; 2 bytes @ 0x8
  3802  00A8                     	ds	2
  3803  00AA                     _efgtoa$1510:	
  3804                           
  3805                           ; 2 bytes @ 0xA
  3806  00AA                     	ds	2
  3807  00AC                     _efgtoa$1511:	
  3808                           
  3809                           ; 2 bytes @ 0xC
  3810  00AC                     	ds	2
  3811  00AE                     _efgtoa$1512:	
  3812                           
  3813                           ; 2 bytes @ 0xE
  3814  00AE                     	ds	2
  3815  00B0                     efgtoa@t:	
  3816                           
  3817                           ; 2 bytes @ 0x10
  3818  00B0                     	ds	2
  3819  00B2                     efgtoa@pp:	
  3820                           
  3821                           ; 2 bytes @ 0x12
  3822  00B2                     	ds	2
  3823  00B4                     efgtoa@m:	
  3824                           
  3825                           ; 2 bytes @ 0x14
  3826  00B4                     	ds	2
  3827  00B6                     efgtoa@ne:	
  3828                           
  3829                           ; 2 bytes @ 0x16
  3830  00B6                     	ds	2
  3831  00B8                     efgtoa@d:	
  3832                           
  3833                           ; 2 bytes @ 0x18
  3834  00B8                     	ds	2
  3835  00BA                     efgtoa@sign:	
  3836                           
  3837                           ; 2 bytes @ 0x1A
  3838  00BA                     	ds	2
  3839  00BC                     efgtoa@fp:	
  3840                           
  3841                           ; 1 bytes @ 0x1C
  3842  00BC                     	ds	1
  3843  00BD                     efgtoa@p:	
  3844                           
  3845                           ; 2 bytes @ 0x1D
  3846  00BD                     	ds	2
  3847  00BF                     efgtoa@nmode:	
  3848                           
  3849                           ; 1 bytes @ 0x1F
  3850  00BF                     	ds	1
  3851  00C0                     efgtoa@w:	
  3852                           
  3853                           ; 2 bytes @ 0x20
  3854  00C0                     	ds	2
  3855  00C2                     efgtoa@mode:	
  3856                           
  3857                           ; 1 bytes @ 0x22
  3858  00C2                     	ds	1
  3859  00C3                     efgtoa@h:	
  3860                           
  3861                           ; 4 bytes @ 0x23
  3862  00C3                     	ds	4
  3863  00C7                     efgtoa@l:	
  3864                           
  3865                           ; 4 bytes @ 0x27
  3866  00C7                     	ds	4
  3867  00CB                     efgtoa@i:	
  3868                           
  3869                           ; 2 bytes @ 0x2B
  3870  00CB                     	ds	2
  3871  00CD                     efgtoa@g:	
  3872                           
  3873                           ; 4 bytes @ 0x2D
  3874  00CD                     	ds	4
  3875  00D1                     efgtoa@e:	
  3876                           
  3877                           ; 2 bytes @ 0x31
  3878  00D1                     	ds	2
  3879  00D3                     efgtoa@n:	
  3880                           
  3881                           ; 2 bytes @ 0x33
  3882  00D3                     	ds	2
  3883  00D5                     efgtoa@u:	
  3884                           
  3885                           ; 4 bytes @ 0x35
  3886  00D5                     	ds	4
  3887  00D9                     ?_vfprintf:	
  3888  00D9                     vfprintf@fmt:	
  3889                           ; 2 bytes @ 0x39
  3890                           
  3891                           
  3892                           ; 2 bytes @ 0x39
  3893  00D9                     	ds	2
  3894  00DB                     vfprintf@ap:	
  3895                           
  3896                           ; 1 bytes @ 0x3B
  3897  00DB                     	ds	1
  3898  00DC                     ??_vfprintf:	
  3899                           
  3900                           ; 1 bytes @ 0x3C
  3901  00DC                     	ds	2
  3902  00DE                     vfprintf@fp:	
  3903                           
  3904                           ; 1 bytes @ 0x3E
  3905  00DE                     	ds	1
  3906  00DF                     vfprintf@cfmt:	
  3907                           
  3908                           ; 2 bytes @ 0x3F
  3909  00DF                     	ds	2
  3910  00E1                     ?_printf:	
  3911  00E1                     printf@fmt:	
  3912                           ; 2 bytes @ 0x41
  3913                           
  3914                           
  3915                           ; 2 bytes @ 0x41
  3916  00E1                     	ds	6
  3917  00E7                     ??_printf:	
  3918                           
  3919                           ; 1 bytes @ 0x47
  3920  00E7                     	ds	3
  3921  00EA                     printf@ap:	
  3922                           
  3923                           ; 1 bytes @ 0x4A
  3924  00EA                     	ds	1
  3925  00EB                     ??_main:	
  3926                           
  3927                           ; 1 bytes @ 0x4B
  3928  00EB                     	ds	2
  3929                           
  3930                           	psect	cstackCOMMON
  3931  0070                     __pcstackCOMMON:	
  3932  0070                     ?_I2C1_Open:	
  3933  0070                     ?_I2C1_MasterWrite:	
  3934                           ; 1 bytes @ 0x0
  3935                           
  3936  0070                     ?_I2C1_Close:	
  3937                           ; 1 bytes @ 0x0
  3938                           
  3939  0070                     ?_EUSART_Receive_ISR:	
  3940                           ; 1 bytes @ 0x0
  3941                           
  3942  0070                     ?_EUSART_Transmit_ISR:	
  3943                           ; 1 bytes @ 0x0
  3944                           
  3945  0070                     ??_EUSART_Transmit_ISR:	
  3946                           ; 1 bytes @ 0x0
  3947                           
  3948  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  3949                           ; 1 bytes @ 0x0
  3950                           
  3951  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  3952                           ; 1 bytes @ 0x0
  3953                           
  3954  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  3955                           ; 1 bytes @ 0x0
  3956                           
  3957  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  3958                           ; 1 bytes @ 0x0
  3959                           
  3960  0070                     ?_EUSART_DefaultErrorHandler:	
  3961                           ; 1 bytes @ 0x0
  3962                           
  3963  0070                     ?_EUSART_RxDataHandler:	
  3964                           ; 1 bytes @ 0x0
  3965                           
  3966  0070                     ??_EUSART_RxDataHandler:	
  3967                           ; 1 bytes @ 0x0
  3968                           
  3969  0070                     ?_PMD_Initialize:	
  3970                           ; 1 bytes @ 0x0
  3971                           
  3972  0070                     ?_I2C1_Initialize:	
  3973                           ; 1 bytes @ 0x0
  3974                           
  3975  0070                     ?_PIN_MANAGER_Initialize:	
  3976                           ; 1 bytes @ 0x0
  3977                           
  3978  0070                     ?_OSCILLATOR_Initialize:	
  3979                           ; 1 bytes @ 0x0
  3980                           
  3981  0070                     ?_WDT_Initialize:	
  3982                           ; 1 bytes @ 0x0
  3983                           
  3984  0070                     ?_I2C1_DO_IDLE:	
  3985                           ; 1 bytes @ 0x0
  3986                           
  3987  0070                     ?_I2C1_DO_SEND_ADR_READ:	
  3988                           ; 1 bytes @ 0x0
  3989                           
  3990  0070                     ?_I2C1_DO_SEND_ADR_WRITE:	
  3991                           ; 1 bytes @ 0x0
  3992                           
  3993  0070                     ?_I2C1_DO_TX:	
  3994                           ; 1 bytes @ 0x0
  3995                           
  3996  0070                     ?_I2C1_DO_RX:	
  3997                           ; 1 bytes @ 0x0
  3998                           
  3999  0070                     ?_I2C1_DO_RCEN:	
  4000                           ; 1 bytes @ 0x0
  4001                           
  4002  0070                     ?_I2C1_DO_TX_EMPTY:	
  4003                           ; 1 bytes @ 0x0
  4004                           
  4005  0070                     ?_I2C1_DO_SEND_RESTART_READ:	
  4006                           ; 1 bytes @ 0x0
  4007                           
  4008  0070                     ?_I2C1_DO_SEND_RESTART_WRITE:	
  4009                           ; 1 bytes @ 0x0
  4010                           
  4011  0070                     ?_I2C1_DO_SEND_RESTART:	
  4012                           ; 1 bytes @ 0x0
  4013                           
  4014  0070                     ?_I2C1_DO_SEND_STOP:	
  4015                           ; 1 bytes @ 0x0
  4016                           
  4017  0070                     ?_I2C1_DO_RX_ACK:	
  4018                           ; 1 bytes @ 0x0
  4019                           
  4020  0070                     ?_I2C1_DO_RX_NACK_STOP:	
  4021                           ; 1 bytes @ 0x0
  4022                           
  4023  0070                     ?_I2C1_DO_RX_NACK_RESTART:	
  4024                           ; 1 bytes @ 0x0
  4025                           
  4026  0070                     ?_I2C1_DO_RESET:	
  4027                           ; 1 bytes @ 0x0
  4028                           
  4029  0070                     ?_I2C1_DO_ADDRESS_NACK:	
  4030                           ; 1 bytes @ 0x0
  4031                           
  4032  0070                     ?_I2C1_MasterClearIrq:	
  4033                           ; 1 bytes @ 0x0
  4034                           
  4035  0070                     ?_I2C1_MasterOpen:	
  4036                           ; 1 bytes @ 0x0
  4037                           
  4038  0070                     ?_I2C1_MasterDisableIrq:	
  4039                           ; 1 bytes @ 0x0
  4040                           
  4041  0070                     ?_I2C1_MasterClose:	
  4042                           ; 1 bytes @ 0x0
  4043                           
  4044  0070                     ?_I2C1_MasterStart:	
  4045                           ; 1 bytes @ 0x0
  4046                           
  4047  0070                     ?_I2C1_Poller:	
  4048                           ; 1 bytes @ 0x0
  4049                           
  4050  0070                     ?_I2C1_MasterWaitForEvent:	
  4051                           ; 1 bytes @ 0x0
  4052                           
  4053  0070                     ?_I2C1_MasterFsm:	
  4054                           ; 1 bytes @ 0x0
  4055                           
  4056  0070                     ?_I2C1_MasterIsNack:	
  4057                           ; 1 bytes @ 0x0
  4058                           
  4059  0070                     ?_I2C1_MasterSendTxData:	
  4060                           ; 1 bytes @ 0x0
  4061                           
  4062  0070                     ?_I2C1_MasterGetRxData:	
  4063                           ; 1 bytes @ 0x0
  4064                           
  4065  0070                     ?_I2C1_MasterSendAck:	
  4066                           ; 1 bytes @ 0x0
  4067                           
  4068  0070                     ?_I2C1_MasterStartRx:	
  4069                           ; 1 bytes @ 0x0
  4070                           
  4071  0070                     ?_I2C1_MasterSetIrq:	
  4072                           ; 1 bytes @ 0x0
  4073                           
  4074  0070                     ?_I2C1_MasterEnableRestart:	
  4075                           ; 1 bytes @ 0x0
  4076                           
  4077  0070                     ?_I2C1_MasterStop:	
  4078                           ; 1 bytes @ 0x0
  4079                           
  4080  0070                     ?_I2C1_MasterSendNack:	
  4081                           ; 1 bytes @ 0x0
  4082                           
  4083  0070                     ?_PWM5_Initialize:	
  4084                           ; 1 bytes @ 0x0
  4085                           
  4086  0070                     ?_EUSART_Initialize:	
  4087                           ; 1 bytes @ 0x0
  4088                           
  4089  0070                     ?_EUSART_Write:	
  4090                           ; 1 bytes @ 0x0
  4091                           
  4092  0070                     ?_putch:	
  4093                           ; 1 bytes @ 0x0
  4094                           
  4095  0070                     ?_TMR2_Initialize:	
  4096                           ; 1 bytes @ 0x0
  4097                           
  4098  0070                     ?_INTERRUPT_InterruptManager:	
  4099                           ; 1 bytes @ 0x0
  4100                           
  4101  0070                     ?_SYSTEM_Initialize:	
  4102                           ; 1 bytes @ 0x0
  4103                           
  4104  0070                     ?_I2C1_MasterOperation:	
  4105                           ; 1 bytes @ 0x0
  4106                           
  4107  0070                     ?_setHigh:	
  4108                           ; 1 bytes @ 0x0
  4109                           
  4110  0070                     ?_setLow:	
  4111                           ; 1 bytes @ 0x0
  4112                           
  4113  0070                     ?_setZero:	
  4114                           ; 1 bytes @ 0x0
  4115                           
  4116  0070                     ?_sendPWM:	
  4117                           ; 1 bytes @ 0x0
  4118                           
  4119  0070                     ?_readPressureSensor:	
  4120                           ; 1 bytes @ 0x0
  4121                           
  4122  0070                     ?_main:	
  4123                           ; 1 bytes @ 0x0
  4124                           
  4125                           
  4126                           ; 1 bytes @ 0x0
  4127  0070                     	ds	1
  4128  0071                     ?___fleq:	
  4129  0071                     ??_I2C1_Open:	
  4130                           ; 1 bit 
  4131                           
  4132  0071                     ?_I2C1_SetBuffer:	
  4133                           ; 1 bytes @ 0x1
  4134                           
  4135  0071                     ??_I2C1_Close:	
  4136                           ; 1 bytes @ 0x1
  4137                           
  4138  0071                     ?_EUSART_SetRxInterruptHandler:	
  4139                           ; 1 bytes @ 0x1
  4140                           
  4141  0071                     ??_EUSART_Receive_ISR:	
  4142                           ; 1 bytes @ 0x1
  4143                           
  4144  0071                     ?_EUSART_SetTxInterruptHandler:	
  4145                           ; 1 bytes @ 0x1
  4146                           
  4147  0071                     ?_EUSART_SetFramingErrorHandler:	
  4148                           ; 1 bytes @ 0x1
  4149                           
  4150  0071                     ?_EUSART_SetOverrunErrorHandler:	
  4151                           ; 1 bytes @ 0x1
  4152                           
  4153  0071                     ?_EUSART_SetErrorHandler:	
  4154                           ; 1 bytes @ 0x1
  4155                           
  4156  0071                     ??_EUSART_DefaultErrorHandler:	
  4157                           ; 1 bytes @ 0x1
  4158                           
  4159  0071                     ??_PMD_Initialize:	
  4160                           ; 1 bytes @ 0x1
  4161                           
  4162  0071                     ??_I2C1_Initialize:	
  4163                           ; 1 bytes @ 0x1
  4164                           
  4165  0071                     ??_PIN_MANAGER_Initialize:	
  4166                           ; 1 bytes @ 0x1
  4167                           
  4168  0071                     ??_OSCILLATOR_Initialize:	
  4169                           ; 1 bytes @ 0x1
  4170                           
  4171  0071                     ??_WDT_Initialize:	
  4172                           ; 1 bytes @ 0x1
  4173                           
  4174  0071                     ??_I2C1_DO_IDLE:	
  4175                           ; 1 bytes @ 0x1
  4176                           
  4177  0071                     ??_I2C1_DO_SEND_ADR_READ:	
  4178                           ; 1 bytes @ 0x1
  4179                           
  4180  0071                     ??_I2C1_DO_RCEN:	
  4181                           ; 1 bytes @ 0x1
  4182                           
  4183  0071                     ??_I2C1_DO_SEND_RESTART_READ:	
  4184                           ; 1 bytes @ 0x1
  4185                           
  4186  0071                     ??_I2C1_DO_SEND_RESTART_WRITE:	
  4187                           ; 1 bytes @ 0x1
  4188                           
  4189  0071                     ??_I2C1_DO_SEND_RESTART:	
  4190                           ; 1 bytes @ 0x1
  4191                           
  4192  0071                     ??_I2C1_DO_SEND_STOP:	
  4193                           ; 1 bytes @ 0x1
  4194                           
  4195  0071                     ??_I2C1_DO_RX_ACK:	
  4196                           ; 1 bytes @ 0x1
  4197                           
  4198  0071                     ??_I2C1_DO_RX_NACK_STOP:	
  4199                           ; 1 bytes @ 0x1
  4200                           
  4201  0071                     ??_I2C1_DO_RX_NACK_RESTART:	
  4202                           ; 1 bytes @ 0x1
  4203                           
  4204  0071                     ??_I2C1_DO_RESET:	
  4205                           ; 1 bytes @ 0x1
  4206                           
  4207  0071                     ??_I2C1_MasterClearIrq:	
  4208                           ; 1 bytes @ 0x1
  4209                           
  4210  0071                     ??_I2C1_MasterOpen:	
  4211                           ; 1 bytes @ 0x1
  4212                           
  4213  0071                     ??_I2C1_MasterDisableIrq:	
  4214                           ; 1 bytes @ 0x1
  4215                           
  4216  0071                     ??_I2C1_MasterClose:	
  4217                           ; 1 bytes @ 0x1
  4218                           
  4219  0071                     ??_I2C1_MasterStart:	
  4220                           ; 1 bytes @ 0x1
  4221                           
  4222  0071                     ?_I2C1_SetCallback:	
  4223                           ; 1 bytes @ 0x1
  4224                           
  4225  0071                     ??_I2C1_MasterWaitForEvent:	
  4226                           ; 1 bytes @ 0x1
  4227                           
  4228  0071                     ??_I2C1_MasterIsNack:	
  4229                           ; 1 bytes @ 0x1
  4230                           
  4231  0071                     ??_I2C1_MasterSendTxData:	
  4232                           ; 1 bytes @ 0x1
  4233                           
  4234  0071                     ??_I2C1_MasterGetRxData:	
  4235                           ; 1 bytes @ 0x1
  4236                           
  4237  0071                     ??_I2C1_MasterSendAck:	
  4238                           ; 1 bytes @ 0x1
  4239                           
  4240  0071                     ??_I2C1_MasterStartRx:	
  4241                           ; 1 bytes @ 0x1
  4242                           
  4243  0071                     ??_I2C1_MasterSetIrq:	
  4244                           ; 1 bytes @ 0x1
  4245                           
  4246  0071                     ??_I2C1_MasterEnableRestart:	
  4247                           ; 1 bytes @ 0x1
  4248                           
  4249  0071                     ??_I2C1_MasterStop:	
  4250                           ; 1 bytes @ 0x1
  4251                           
  4252  0071                     ??_I2C1_MasterSendNack:	
  4253                           ; 1 bytes @ 0x1
  4254                           
  4255  0071                     ?_strcpy:	
  4256                           ; 1 bytes @ 0x1
  4257                           
  4258  0071                     ??_PWM5_Initialize:	
  4259                           ; 1 bytes @ 0x1
  4260                           
  4261  0071                     ??_EUSART_Write:	
  4262                           ; 1 bytes @ 0x1
  4263                           
  4264  0071                     ??_TMR2_Initialize:	
  4265                           ; 1 bytes @ 0x1
  4266                           
  4267  0071                     ??_INTERRUPT_InterruptManager:	
  4268                           ; 1 bytes @ 0x1
  4269                           
  4270  0071                     ??_setHigh:	
  4271                           ; 1 bytes @ 0x1
  4272                           
  4273  0071                     ??_setLow:	
  4274                           ; 1 bytes @ 0x1
  4275                           
  4276  0071                     ??_setZero:	
  4277                           ; 1 bytes @ 0x1
  4278                           
  4279  0071                     ??_sendPWM:	
  4280                           ; 1 bytes @ 0x1
  4281                           
  4282  0071                     ?_strlen:	
  4283                           ; 1 bytes @ 0x1
  4284                           
  4285  0071                     ?___fpclassifyf:	
  4286                           ; 2 bytes @ 0x1
  4287                           
  4288  0071                     ?_isupper:	
  4289                           ; 2 bytes @ 0x1
  4290                           
  4291  0071                     ?_strncmp:	
  4292                           ; 2 bytes @ 0x1
  4293                           
  4294  0071                     ?__Umul8_16:	
  4295                           ; 2 bytes @ 0x1
  4296                           
  4297  0071                     ?___awdiv:	
  4298                           ; 2 bytes @ 0x1
  4299                           
  4300  0071                     ?___awmod:	
  4301                           ; 2 bytes @ 0x1
  4302                           
  4303  0071                     ?___flneg:	
  4304                           ; 2 bytes @ 0x1
  4305                           
  4306  0071                     ?___fltol:	
  4307                           ; 4 bytes @ 0x1
  4308                           
  4309  0071                     ?___fladd:	
  4310                           ; 4 bytes @ 0x1
  4311                           
  4312  0071                     ?___xxtofl:	
  4313                           ; 4 bytes @ 0x1
  4314                           
  4315  0071                     I2C1_MasterSendTxData@data:	
  4316                           ; 4 bytes @ 0x1
  4317                           
  4318  0071                     __Umul8_16@multiplicand:	
  4319                           ; 1 bytes @ 0x1
  4320                           
  4321  0071                     EUSART_SetFramingErrorHandler@interruptHandler:	
  4322                           ; 1 bytes @ 0x1
  4323                           
  4324  0071                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  4325                           ; 2 bytes @ 0x1
  4326                           
  4327  0071                     EUSART_SetErrorHandler@interruptHandler:	
  4328                           ; 2 bytes @ 0x1
  4329                           
  4330  0071                     EUSART_SetTxInterruptHandler@interruptHandler:	
  4331                           ; 2 bytes @ 0x1
  4332                           
  4333  0071                     EUSART_SetRxInterruptHandler@interruptHandler:	
  4334                           ; 2 bytes @ 0x1
  4335                           
  4336  0071                     I2C1_SetBuffer@bufferSize:	
  4337                           ; 2 bytes @ 0x1
  4338                           
  4339  0071                     I2C1_SetCallback@cb:	
  4340                           ; 2 bytes @ 0x1
  4341                           
  4342  0071                     ___awdiv@divisor:	
  4343                           ; 2 bytes @ 0x1
  4344                           
  4345  0071                     ___awmod@divisor:	
  4346                           ; 2 bytes @ 0x1
  4347                           
  4348  0071                     isupper@c:	
  4349                           ; 2 bytes @ 0x1
  4350                           
  4351  0071                     strcpy@src:	
  4352                           ; 2 bytes @ 0x1
  4353                           
  4354  0071                     strncmp@_r:	
  4355                           ; 2 bytes @ 0x1
  4356                           
  4357  0071                     ___fleq@ff1:	
  4358                           ; 2 bytes @ 0x1
  4359                           
  4360  0071                     ___flneg@f1:	
  4361                           ; 4 bytes @ 0x1
  4362                           
  4363  0071                     ___fltol@f1:	
  4364                           ; 4 bytes @ 0x1
  4365                           
  4366  0071                     ___fladd@b:	
  4367                           ; 4 bytes @ 0x1
  4368                           
  4369  0071                     ___xxtofl@val:	
  4370                           ; 4 bytes @ 0x1
  4371                           
  4372  0071                     ___fpclassifyf@x:	
  4373                           ; 4 bytes @ 0x1
  4374                           
  4375                           
  4376                           ; 4 bytes @ 0x1
  4377  0071                     	ds	1
  4378  0072                     ??_I2C1_DO_SEND_ADR_WRITE:	
  4379  0072                     EUSART_Write@txData:	
  4380                           ; 1 bytes @ 0x2
  4381                           
  4382  0072                     I2C1_Open@address:	
  4383                           ; 1 bytes @ 0x2
  4384                           
  4385  0072                     I2C1_Close@returnValue:	
  4386                           ; 1 bytes @ 0x2
  4387                           
  4388  0072                     sendPWM@j:	
  4389                           ; 1 bytes @ 0x2
  4390                           
  4391                           
  4392                           ; 1 bytes @ 0x2
  4393  0072                     	ds	1
  4394  0073                     ??_I2C1_SetBuffer:	
  4395  0073                     ??_EUSART_SetRxInterruptHandler:	
  4396                           ; 1 bytes @ 0x3
  4397                           
  4398  0073                     ??_EUSART_SetTxInterruptHandler:	
  4399                           ; 1 bytes @ 0x3
  4400                           
  4401  0073                     ??_EUSART_SetFramingErrorHandler:	
  4402                           ; 1 bytes @ 0x3
  4403                           
  4404  0073                     ??_EUSART_SetOverrunErrorHandler:	
  4405                           ; 1 bytes @ 0x3
  4406                           
  4407  0073                     ??_EUSART_SetErrorHandler:	
  4408                           ; 1 bytes @ 0x3
  4409                           
  4410  0073                     ??_strlen:	
  4411                           ; 1 bytes @ 0x3
  4412                           
  4413  0073                     ??_isupper:	
  4414                           ; 1 bytes @ 0x3
  4415                           
  4416  0073                     ??_strcpy:	
  4417                           ; 1 bytes @ 0x3
  4418                           
  4419  0073                     ??__Umul8_16:	
  4420                           ; 1 bytes @ 0x3
  4421                           
  4422  0073                     ??_EUSART_Initialize:	
  4423                           ; 1 bytes @ 0x3
  4424                           
  4425  0073                     ??_putch:	
  4426                           ; 1 bytes @ 0x3
  4427                           
  4428  0073                     putch@txData:	
  4429                           ; 1 bytes @ 0x3
  4430                           
  4431  0073                     I2C1_Open@returnValue:	
  4432                           ; 1 bytes @ 0x3
  4433                           
  4434  0073                     I2C1_SetCallback@ptr:	
  4435                           ; 1 bytes @ 0x3
  4436                           
  4437  0073                     sendPWM@data:	
  4438                           ; 1 bytes @ 0x3
  4439                           
  4440  0073                     ___awdiv@dividend:	
  4441                           ; 1 bytes @ 0x3
  4442                           
  4443  0073                     ___awmod@dividend:	
  4444                           ; 2 bytes @ 0x3
  4445                           
  4446  0073                     strncmp@n:	
  4447                           ; 2 bytes @ 0x3
  4448                           
  4449                           
  4450                           ; 2 bytes @ 0x3
  4451  0073                     	ds	1
  4452  0074                     ??_I2C1_SetCallback:	
  4453  0074                     ??_SYSTEM_Initialize:	
  4454                           ; 1 bytes @ 0x4
  4455                           
  4456  0074                     ?_fputc:	
  4457                           ; 1 bytes @ 0x4
  4458                           
  4459  0074                     I2C1_SetBuffer@buffer:	
  4460                           ; 2 bytes @ 0x4
  4461                           
  4462  0074                     strlen@a:	
  4463                           ; 1 bytes @ 0x4
  4464                           
  4465  0074                     fputc@c:	
  4466                           ; 1 bytes @ 0x4
  4467                           
  4468                           
  4469                           ; 2 bytes @ 0x4
  4470  0074                     	ds	1
  4471  0075                     ??___fpclassifyf:	
  4472  0075                     ??_strncmp:	
  4473                           ; 1 bytes @ 0x5
  4474                           
  4475  0075                     ??___awdiv:	
  4476                           ; 1 bytes @ 0x5
  4477                           
  4478  0075                     ??___awmod:	
  4479                           ; 1 bytes @ 0x5
  4480                           
  4481  0075                     ??___flneg:	
  4482                           ; 1 bytes @ 0x5
  4483                           
  4484  0075                     ??___fltol:	
  4485                           ; 1 bytes @ 0x5
  4486                           
  4487  0075                     ??___xxtofl:	
  4488                           ; 1 bytes @ 0x5
  4489                           
  4490  0075                     I2C1_SetCallback@idx:	
  4491                           ; 1 bytes @ 0x5
  4492                           
  4493  0075                     strlen@s:	
  4494                           ; 1 bytes @ 0x5
  4495                           
  4496  0075                     strcpy@s:	
  4497                           ; 1 bytes @ 0x5
  4498                           
  4499  0075                     __Umul8_16@product:	
  4500                           ; 2 bytes @ 0x5
  4501                           
  4502  0075                     ___fleq@ff2:	
  4503                           ; 2 bytes @ 0x5
  4504                           
  4505  0075                     ___fladd@a:	
  4506                           ; 4 bytes @ 0x5
  4507                           
  4508                           
  4509                           ; 4 bytes @ 0x5
  4510  0075                     	ds	1
  4511  0076                     ?_I2C1_SetDataCompleteCallback:	
  4512  0076                     ?_I2C1_SetAddressNackCallback:	
  4513                           ; 1 bytes @ 0x6
  4514                           
  4515  0076                     ___awdiv@counter:	
  4516                           ; 1 bytes @ 0x6
  4517                           
  4518  0076                     ___awmod@counter:	
  4519                           ; 1 bytes @ 0x6
  4520                           
  4521  0076                     fputc@fp:	
  4522                           ; 1 bytes @ 0x6
  4523                           
  4524  0076                     strncmp@_l:	
  4525                           ; 1 bytes @ 0x6
  4526                           
  4527  0076                     I2C1_SetDataCompleteCallback@cb:	
  4528                           ; 1 bytes @ 0x6
  4529                           
  4530  0076                     I2C1_SetAddressNackCallback@cb:	
  4531                           ; 2 bytes @ 0x6
  4532                           
  4533                           
  4534                           ; 2 bytes @ 0x6
  4535  0076                     	ds	1
  4536  0077                     ??_fputc:	
  4537  0077                     ?_tolower:	
  4538                           ; 1 bytes @ 0x7
  4539                           
  4540  0077                     ___awdiv@sign:	
  4541                           ; 2 bytes @ 0x7
  4542                           
  4543  0077                     ___awmod@sign:	
  4544                           ; 1 bytes @ 0x7
  4545                           
  4546  0077                     strcpy@d:	
  4547                           ; 1 bytes @ 0x7
  4548                           
  4549  0077                     strncmp@r:	
  4550                           ; 1 bytes @ 0x7
  4551                           
  4552  0077                     tolower@c:	
  4553                           ; 2 bytes @ 0x7
  4554                           
  4555  0077                     __Umul8_16@word_mpld:	
  4556                           ; 2 bytes @ 0x7
  4557                           
  4558                           
  4559                           ; 2 bytes @ 0x7
  4560  0077                     	ds	1
  4561  0078                     I2C1_SetDataCompleteCallback@ptr:	
  4562  0078                     I2C1_SetAddressNackCallback@ptr:	
  4563                           ; 1 bytes @ 0x8
  4564                           
  4565  0078                     strcpy@dest:	
  4566                           ; 1 bytes @ 0x8
  4567                           
  4568  0078                     ___awdiv@quotient:	
  4569                           ; 1 bytes @ 0x8
  4570                           
  4571                           
  4572                           ; 2 bytes @ 0x8
  4573  0078                     	ds	1
  4574  0079                     ??_I2C1_SetDataCompleteCallback:	
  4575  0079                     ??_I2C1_SetAddressNackCallback:	
  4576                           ; 1 bytes @ 0x9
  4577                           
  4578  0079                     strncmp@l:	
  4579                           ; 1 bytes @ 0x9
  4580                           
  4581  0079                     __Umul8_16@multiplier:	
  4582                           ; 1 bytes @ 0x9
  4583                           
  4584  0079                     _tolower$1910:	
  4585                           ; 1 bytes @ 0x9
  4586                           
  4587                           
  4588                           ; 2 bytes @ 0x9
  4589  0079                     	ds	1
  4590  007A                     ?_rd1RegCompleteHandler:	
  4591  007A                     ?_rd2RegCompleteHandler:	
  4592                           ; 1 bytes @ 0xA
  4593                           
  4594  007A                     ?_wr1RegCompleteHandler:	
  4595                           ; 1 bytes @ 0xA
  4596                           
  4597  007A                     ?_wr2RegCompleteHandler:	
  4598                           ; 1 bytes @ 0xA
  4599                           
  4600  007A                     ?_rdBlkRegCompleteHandler:	
  4601                           ; 1 bytes @ 0xA
  4602                           
  4603  007A                     ?_I2C1_CallbackReturnStop:	
  4604                           ; 1 bytes @ 0xA
  4605                           
  4606  007A                     ?_I2C1_CallbackReturnReset:	
  4607                           ; 1 bytes @ 0xA
  4608                           
  4609  007A                     ??___flsub:	
  4610                           ; 1 bytes @ 0xA
  4611                           
  4612  007A                     rd1RegCompleteHandler@ptr:	
  4613                           ; 1 bytes @ 0xA
  4614                           
  4615  007A                     rd2RegCompleteHandler@ptr:	
  4616                           ; 1 bytes @ 0xA
  4617                           
  4618  007A                     wr1RegCompleteHandler@ptr:	
  4619                           ; 1 bytes @ 0xA
  4620                           
  4621  007A                     wr2RegCompleteHandler@ptr:	
  4622                           ; 1 bytes @ 0xA
  4623                           
  4624  007A                     rdBlkRegCompleteHandler@ptr:	
  4625                           ; 1 bytes @ 0xA
  4626                           
  4627  007A                     I2C1_CallbackReturnStop@funPtr:	
  4628                           ; 1 bytes @ 0xA
  4629                           
  4630  007A                     I2C1_CallbackReturnReset@funPtr:	
  4631                           ; 1 bytes @ 0xA
  4632                           
  4633  007A                     ___fltol@sign1:	
  4634                           ; 1 bytes @ 0xA
  4635                           
  4636                           
  4637                           ; 1 bytes @ 0xA
  4638  007A                     	ds	1
  4639  007B                     ??_rd1RegCompleteHandler:	
  4640  007B                     ??_rd2RegCompleteHandler:	
  4641                           ; 1 bytes @ 0xB
  4642                           
  4643  007B                     ??_wr1RegCompleteHandler:	
  4644                           ; 1 bytes @ 0xB
  4645                           
  4646  007B                     ??_wr2RegCompleteHandler:	
  4647                           ; 1 bytes @ 0xB
  4648                           
  4649  007B                     ??_rdBlkRegCompleteHandler:	
  4650                           ; 1 bytes @ 0xB
  4651                           
  4652  007B                     ??_I2C1_CallbackReturnStop:	
  4653                           ; 1 bytes @ 0xB
  4654                           
  4655  007B                     ??_I2C1_CallbackReturnReset:	
  4656                           ; 1 bytes @ 0xB
  4657                           
  4658  007B                     ??_I2C1_Poller:	
  4659                           ; 1 bytes @ 0xB
  4660                           
  4661  007B                     ??_I2C1_MasterOperation:	
  4662                           ; 1 bytes @ 0xB
  4663                           
  4664  007B                     ___fltol@exp1:	
  4665                           ; 1 bytes @ 0xB
  4666                           
  4667                           
  4668                           ; 1 bytes @ 0xB
  4669  007B                     	ds	1
  4670  007C                     ??_I2C1_MasterWrite:	
  4671                           
  4672                           	psect	cstackBANK0
  4673  0020                     __pcstackBANK0:	
  4674                           ; 1 bytes @ 0xC
  4675                           
  4676  0020                     ??_I2C1_DO_TX:	
  4677  0020                     ??_I2C1_DO_RX:	
  4678                           ; 1 bytes @ 0x0
  4679                           
  4680  0020                     ??_I2C1_DO_TX_EMPTY:	
  4681                           ; 1 bytes @ 0x0
  4682                           
  4683  0020                     ??_I2C1_DO_ADDRESS_NACK:	
  4684                           ; 1 bytes @ 0x0
  4685                           
  4686  0020                     ??_tolower:	
  4687                           ; 1 bytes @ 0x0
  4688                           
  4689  0020                     ??___fleq:	
  4690                           ; 1 bytes @ 0x0
  4691                           
  4692  0020                     ??___fladd:	
  4693                           ; 1 bytes @ 0x0
  4694                           
  4695  0020                     ?_fputs:	
  4696                           ; 1 bytes @ 0x0
  4697                           
  4698  0020                     ?___flmul:	
  4699                           ; 2 bytes @ 0x0
  4700                           
  4701  0020                     ___xxtofl@sign:	
  4702                           ; 4 bytes @ 0x0
  4703                           
  4704  0020                     fputs@fp:	
  4705                           ; 1 bytes @ 0x0
  4706                           
  4707  0020                     ___fpclassifyf@e:	
  4708                           ; 1 bytes @ 0x0
  4709                           
  4710  0020                     ___flmul@b:	
  4711                           ; 2 bytes @ 0x0
  4712                           
  4713                           
  4714                           ; 4 bytes @ 0x0
  4715  0020                     	ds	1
  4716  0021                     ??_fputs:	
  4717  0021                     ___xxtofl@exp:	
  4718                           ; 1 bytes @ 0x1
  4719                           
  4720                           
  4721                           ; 1 bytes @ 0x1
  4722  0021                     	ds	1
  4723  0022                     ___xxtofl@arg:	
  4724  0022                     ___fpclassifyf@u:	
  4725                           ; 4 bytes @ 0x2
  4726                           
  4727                           
  4728                           ; 4 bytes @ 0x2
  4729  0022                     	ds	1
  4730  0023                     ??_I2C1_MasterFsm:	
  4731                           
  4732                           ; 1 bytes @ 0x3
  4733  0023                     	ds	1
  4734  0024                     fputs@c:	
  4735  0024                     ___flmul@a:	
  4736                           ; 1 bytes @ 0x4
  4737                           
  4738                           
  4739                           ; 4 bytes @ 0x4
  4740  0024                     	ds	1
  4741  0025                     fputs@i:	
  4742                           
  4743                           ; 2 bytes @ 0x5
  4744  0025                     	ds	1
  4745  0026                     ?___fldiv:	
  4746  0026                     I2C1_MasterOperation@read:	
  4747                           ; 4 bytes @ 0x6
  4748                           
  4749  0026                     ___fldiv@a:	
  4750                           ; 1 bytes @ 0x6
  4751                           
  4752                           
  4753                           ; 4 bytes @ 0x6
  4754  0026                     	ds	1
  4755  0027                     I2C1_MasterOperation@returnValue:	
  4756  0027                     fputs@s:	
  4757                           ; 1 bytes @ 0x7
  4758                           
  4759                           
  4760                           ; 1 bytes @ 0x7
  4761  0027                     	ds	1
  4762  0028                     ?_I2C1_Read1ByteRegister:	
  4763  0028                     ??___flmul:	
  4764                           ; 1 bytes @ 0x8
  4765                           
  4766  0028                     ?_pad:	
  4767                           ; 1 bytes @ 0x8
  4768                           
  4769  0028                     I2C1_Read1ByteRegister@reg:	
  4770                           ; 2 bytes @ 0x8
  4771                           
  4772  0028                     pad@buf:	
  4773                           ; 1 bytes @ 0x8
  4774                           
  4775  0028                     ___fladd@signs:	
  4776                           ; 1 bytes @ 0x8
  4777                           
  4778                           
  4779                           ; 1 bytes @ 0x8
  4780  0028                     	ds	1
  4781  0029                     ??_I2C1_Read1ByteRegister:	
  4782  0029                     ___fladd@aexp:	
  4783                           ; 1 bytes @ 0x9
  4784                           
  4785  0029                     pad@p:	
  4786                           ; 1 bytes @ 0x9
  4787                           
  4788                           
  4789                           ; 2 bytes @ 0x9
  4790  0029                     	ds	1
  4791  002A                     I2C1_Read1ByteRegister@address:	
  4792  002A                     ___fladd@bexp:	
  4793                           ; 1 bytes @ 0xA
  4794                           
  4795  002A                     ___fldiv@b:	
  4796                           ; 1 bytes @ 0xA
  4797                           
  4798                           
  4799                           ; 4 bytes @ 0xA
  4800  002A                     	ds	1
  4801  002B                     ??_pad:	
  4802  002B                     I2C1_Read1ByteRegister@returnValue:	
  4803                           ; 1 bytes @ 0xB
  4804                           
  4805  002B                     ___fladd@grs:	
  4806                           ; 1 bytes @ 0xB
  4807                           
  4808                           
  4809                           ; 1 bytes @ 0xB
  4810  002B                     	ds	1
  4811  002C                     pad@i:	
  4812                           
  4813                           ; 2 bytes @ 0xC
  4814  002C                     	ds	1
  4815  002D                     ___flmul@sign:	
  4816                           
  4817                           ; 1 bytes @ 0xD
  4818  002D                     	ds	1
  4819  002E                     ??___fldiv:	
  4820  002E                     pad@w:	
  4821                           ; 1 bytes @ 0xE
  4822                           
  4823  002E                     ___flmul@grs:	
  4824                           ; 2 bytes @ 0xE
  4825                           
  4826                           
  4827                           ; 4 bytes @ 0xE
  4828  002E                     	ds	2
  4829  0030                     pad@fp:	
  4830                           
  4831                           ; 1 bytes @ 0x10
  4832  0030                     	ds	2
  4833  0032                     ___flmul@aexp:	
  4834                           
  4835                           ; 1 bytes @ 0x12
  4836  0032                     	ds	1
  4837  0033                     ___flmul@bexp:	
  4838  0033                     ___fldiv@rem:	
  4839                           ; 1 bytes @ 0x13
  4840                           
  4841                           
  4842                           ; 4 bytes @ 0x13
  4843  0033                     	ds	1
  4844  0034                     ___flmul@prod:	
  4845                           
  4846                           ; 4 bytes @ 0x14
  4847  0034                     	ds	3
  4848  0037                     ___fldiv@sign:	
  4849                           
  4850                           ; 1 bytes @ 0x17
  4851  0037                     	ds	1
  4852  0038                     ___fldiv@new_exp:	
  4853  0038                     ___flmul@temp:	
  4854                           ; 2 bytes @ 0x18
  4855                           
  4856                           
  4857                           ; 2 bytes @ 0x18
  4858  0038                     	ds	2
  4859  003A                     ?___flge:	
  4860  003A                     ?___flsub:	
  4861                           ; 1 bit 
  4862                           
  4863  003A                     ___flge@ff1:	
  4864                           ; 4 bytes @ 0x1A
  4865                           
  4866  003A                     ___flsub@a:	
  4867                           ; 4 bytes @ 0x1A
  4868                           
  4869  003A                     ___fldiv@grs:	
  4870                           ; 4 bytes @ 0x1A
  4871                           
  4872                           
  4873                           ; 4 bytes @ 0x1A
  4874  003A                     	ds	4
  4875  003E                     ___fldiv@bexp:	
  4876  003E                     ___flge@ff2:	
  4877                           ; 1 bytes @ 0x1E
  4878                           
  4879  003E                     ___flsub@b:	
  4880                           ; 4 bytes @ 0x1E
  4881                           
  4882                           
  4883                           ; 4 bytes @ 0x1E
  4884  003E                     	ds	1
  4885  003F                     ___fldiv@aexp:	
  4886                           
  4887                           ; 1 bytes @ 0x1F
  4888  003F                     	ds	1
  4889  0040                     ?_floorf:	
  4890  0040                     floorf@x:	
  4891                           ; 4 bytes @ 0x20
  4892                           
  4893                           
  4894                           ; 4 bytes @ 0x20
  4895  0040                     	ds	2
  4896  0042                     ??___flge:	
  4897                           
  4898                           ; 1 bytes @ 0x22
  4899  0042                     	ds	2
  4900  0044                     ??_floorf:	
  4901                           
  4902                           ; 1 bytes @ 0x24
  4903  0044                     	ds	6
  4904  004A                     floorf@m:	
  4905                           
  4906                           ; 4 bytes @ 0x2A
  4907  004A                     	ds	4
  4908  004E                     floorf@e:	
  4909                           
  4910                           ; 2 bytes @ 0x2E
  4911  004E                     	ds	2
  4912  0050                     floorf@u:	
  4913                           
  4914                           ; 4 bytes @ 0x30
  4915  0050                     	ds	4
  4916  0054                     ?_efgtoa:	
  4917  0054                     efgtoa@f:	
  4918                           ; 2 bytes @ 0x34
  4919                           
  4920                           
  4921                           ; 4 bytes @ 0x34
  4922  0054                     	ds	4
  4923  0058                     efgtoa@c:	
  4924                           
  4925                           ; 1 bytes @ 0x38
  4926  0058                     	ds	1
  4927  0059                     ??_efgtoa:	
  4928                           
  4929                           ; 1 bytes @ 0x39
  4930  0059                     	ds	4
  4931  005D                     ?_vfpfcnvrt:	
  4932  005D                     vfpfcnvrt@fmt:	
  4933                           ; 2 bytes @ 0x3D
  4934                           
  4935                           
  4936                           ; 1 bytes @ 0x3D
  4937  005D                     	ds	1
  4938  005E                     vfpfcnvrt@ap:	
  4939                           
  4940                           ; 1 bytes @ 0x3E
  4941  005E                     	ds	1
  4942  005F                     ??_vfpfcnvrt:	
  4943                           
  4944                           ; 1 bytes @ 0x3F
  4945  005F                     	ds	6
  4946  0065                     _vfpfcnvrt$1529:	
  4947                           
  4948                           ; 2 bytes @ 0x45
  4949  0065                     	ds	2
  4950  0067                     vfpfcnvrt@ct:	
  4951                           
  4952                           ; 3 bytes @ 0x47
  4953  0067                     	ds	3
  4954  006A                     vfpfcnvrt@f:	
  4955                           
  4956                           ; 4 bytes @ 0x4A
  4957  006A                     	ds	4
  4958  006E                     vfpfcnvrt@c:	
  4959                           
  4960                           ; 1 bytes @ 0x4E
  4961  006E                     	ds	1
  4962  006F                     vfpfcnvrt@fp:	
  4963                           
  4964                           ; 1 bytes @ 0x4F
  4965  006F                     	ds	1
  4966                           
  4967                           	psect	maintext
  4968  0833                     __pmaintext:	
  4969 ;;
  4970 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4971 ;;
  4972 ;; *************** function _main *****************
  4973 ;; Defined at:
  4974 ;;		line 149 in file "main.c"
  4975 ;; Parameters:    Size  Location     Type
  4976 ;;		None
  4977 ;; Auto vars:     Size  Location     Type
  4978 ;;  dummy_data     23    9[BANK2 ] unsigned char [23]
  4979 ;;  hdr_trl         4   32[BANK2 ] unsigned char [4]
  4980 ;;  i               1   39[BANK2 ] unsigned char 
  4981 ;;  EOC             1   38[BANK2 ] unsigned char 
  4982 ;;  SOC             1   37[BANK2 ] unsigned char 
  4983 ;;  n               1    0        unsigned char 
  4984 ;; Return value:  Size  Location     Type
  4985 ;;                  1    wreg      void 
  4986 ;; Registers used:
  4987 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4988 ;; Tracked objects:
  4989 ;;		On entry : B1F/0
  4990 ;;		On exit  : 0/0
  4991 ;;		Unchanged: 0/0
  4992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4994 ;;      Locals:         0       0       0      31       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4995 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4996 ;;      Totals:         0       0       2      31       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4997 ;;Total ram usage:       33 bytes
  4998 ;; Hardware stack levels required when called:   14
  4999 ;; This function calls:
  5000 ;;		_SYSTEM_Initialize
  5001 ;;		_readPressureSensor
  5002 ;;		_sendPWM
  5003 ;;		_setZero
  5004 ;; This function is called by:
  5005 ;;		Startup code after reset
  5006 ;; This function uses a non-reentrant model
  5007 ;;
  5008                           
  5009                           
  5010                           ;psect for function _main
  5011  0833                     _main:	
  5012                           
  5013                           ;main.c: 151:     char hdr_trl[] = {0xFF, 0x00, 0xFF, 0x00};
  5014                           
  5015                           ;incstack = 0
  5016                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5017  0833  0022               	movlb	2	; select bank2
  5018  0834  086C               	movf	(main@F7271+3)^(0+256),w
  5019  0835  00C3               	movwf	(main@hdr_trl+3)^(0+256)
  5020  0836  086B               	movf	(main@F7271+2)^(0+256),w
  5021  0837  00C2               	movwf	(main@hdr_trl+2)^(0+256)
  5022  0838  086A               	movf	(main@F7271+1)^(0+256),w
  5023  0839  00C1               	movwf	(main@hdr_trl+1)^(0+256)
  5024  083A  0869               	movf	main@F7271^(0+256),w
  5025  083B  00C0               	movwf	main@hdr_trl^(0+256)
  5026                           
  5027                           ;main.c: 152:     char SOC = 0x16;
  5028  083C  3016               	movlw	22
  5029  083D  0021               	movlb	1	; select bank1
  5030  083E  00EB               	movwf	??_main^(0+128)
  5031  083F  086B               	movf	??_main^(0+128),w
  5032  0840  0022               	movlb	2	; select bank2
  5033  0841  00C5               	movwf	main@SOC^(0+256)
  5034                           
  5035                           ;main.c: 153:     char EOC = 0x17;
  5036  0842  3017               	movlw	23
  5037  0843  0021               	movlb	1	; select bank1
  5038  0844  00EB               	movwf	??_main^(0+128)
  5039  0845  086B               	movf	??_main^(0+128),w
  5040  0846  0022               	movlb	2	; select bank2
  5041  0847  00C6               	movwf	main@EOC^(0+256)
  5042                           
  5043                           ;main.c: 155:     SYSTEM_Initialize();
  5044  0848  319F  271C  3188   	fcall	_SYSTEM_Initialize
  5045                           
  5046                           ;main.c: 156:     setZero();
  5047  084B  319D  2565  3188   	fcall	_setZero
  5048                           
  5049                           ;main.c: 157:     pressure = 1013.134;
  5050  084E  3044               	movlw	68
  5051  084F  0023               	movlb	3	; select bank3
  5052  0850  00DD               	movwf	(_pressure+3)^(0+384)
  5053  0851  307D               	movlw	125
  5054  0852  00DC               	movwf	(_pressure+2)^(0+384)
  5055  0853  3048               	movlw	72
  5056  0854  00DB               	movwf	(_pressure+1)^(0+384)
  5057  0855  3093               	movlw	147
  5058  0856  00DA               	movwf	_pressure^(0+384)
  5059                           
  5060                           ;main.c: 158:     temperature = 24.76;
  5061  0857  3041               	movlw	65
  5062  0858  00D9               	movwf	(_temperature+3)^(0+384)
  5063  0859  30C6               	movlw	198
  5064  085A  00D8               	movwf	(_temperature+2)^(0+384)
  5065  085B  3014               	movlw	20
  5066  085C  00D7               	movwf	(_temperature+1)^(0+384)
  5067  085D  307B               	movlw	123
  5068  085E  00D6               	movwf	_temperature^(0+384)
  5069                           
  5070                           ;main.c: 163:     (INTCONbits.GIE = 1);
  5071  085F  178B               	bsf	11,7	;volatile
  5072                           
  5073                           ;main.c: 166:     (INTCONbits.PEIE = 1);
  5074  0860  170B               	bsf	11,6	;volatile
  5075                           
  5076                           ;main.c: 173:     char dummy_data[] = {0xFF, 0x00, 0xFF, 0x00, 0x16, 'H', 'E', 'L', 'L',
      +                           'O', ' ', 'S', 'E', 'N', 'S', 'O', 'R', 'S', 0x17, 0xFF, 0x00, 0xFF, 0x00};
  5077  0861  30A0               	movlw	low main@F7275
  5078  0862  0086               	movwf	6
  5079  0863  3002               	movlw	high main@F7275
  5080  0864  0087               	movwf	7
  5081  0865  3029               	movlw	low main@dummy_data
  5082  0866  0084               	movwf	4
  5083  0867  3001               	movlw	high main@dummy_data
  5084  0868  0085               	movwf	5
  5085  0869  3017               	movlw	23
  5086  086A  0021               	movlb	1	; select bank1
  5087  086B  00EB               	movwf	??_main^(0+128)
  5088  086C                     u7480:	
  5089  086C  0016               	moviw fsr1++
  5090  086D  001A               	movwi fsr0++
  5091  086E  0BEB               	decfsz	??_main^(0+128),f
  5092  086F  286C               	goto	u7480
  5093                           
  5094                           ;main.c: 176:     packet[5] = 'D';
  5095  0870  3044               	movlw	68
  5096  0871  00EB               	movwf	??_main^(0+128)
  5097  0872  086B               	movf	??_main^(0+128),w
  5098  0873  0023               	movlb	3	; select bank3
  5099  0874  00D2               	movwf	(_packet^(0+384)+5)
  5100                           
  5101                           ;main.c: 177:     packet[6] = 'A';
  5102  0875  3041               	movlw	65
  5103  0876  0021               	movlb	1	; select bank1
  5104  0877  00EB               	movwf	??_main^(0+128)
  5105  0878  086B               	movf	??_main^(0+128),w
  5106  0879  0023               	movlb	3	; select bank3
  5107  087A  00D3               	movwf	(_packet^(0+384)+6)
  5108                           
  5109                           ;main.c: 178:     packet[7] = 'T';
  5110  087B  3054               	movlw	84
  5111  087C  0021               	movlb	1	; select bank1
  5112  087D  00EB               	movwf	??_main^(0+128)
  5113  087E  086B               	movf	??_main^(0+128),w
  5114  087F  0023               	movlb	3	; select bank3
  5115  0880  00D4               	movwf	(_packet^(0+384)+7)
  5116                           
  5117                           ;main.c: 179:     packet[8] = 'A';
  5118  0881  3041               	movlw	65
  5119  0882  0021               	movlb	1	; select bank1
  5120  0883  00EB               	movwf	??_main^(0+128)
  5121  0884  086B               	movf	??_main^(0+128),w
  5122  0885  0023               	movlb	3	; select bank3
  5123  0886  00D5               	movwf	(_packet^(0+384)+8)
  5124  0887                     l6937:	
  5125                           
  5126                           ;main.c: 185:         TRISC = 0xFF;
  5127  0887  30FF               	movlw	255
  5128  0888  0021               	movlb	1	; select bank1
  5129  0889  008E               	movwf	14	;volatile
  5130                           
  5131                           ;main.c: 186:         if (PORTCbits.RC4 == 1) {
  5132  088A  0020               	movlb	0	; select bank0
  5133  088B  1A0E               	btfsc	14,4	;volatile
  5134  088C  2887               	goto	l6937
  5135                           
  5136                           ;main.c: 190:             readPressureSensor();
  5137  088D  3196  2689  3188   	fcall	_readPressureSensor
  5138                           
  5139                           ;main.c: 191:             _delay((unsigned long)((500)*(16000000/4000.0)));
  5140  0890  300B               	movlw	11
  5141  0891  0021               	movlb	1	; select bank1
  5142  0892  00EC               	movwf	(??_main^(0+128)+1)
  5143  0893  3026               	movlw	38
  5144  0894  00EB               	movwf	??_main^(0+128)
  5145  0895  305D               	movlw	93
  5146  0896                     u7537:	
  5147  0896  0B89               	decfsz	9,f
  5148  0897  2896               	goto	u7537
  5149  0898  0BEB               	decfsz	??_main^(0+128),f
  5150  0899  2896               	goto	u7537
  5151  089A  0BEC               	decfsz	(??_main^(0+128)+1),f
  5152  089B  2896               	goto	u7537
  5153  089C  3200               	nop2
  5154                           
  5155                           ;main.c: 192:             LATCbits.LATC3 = 1;
  5156  089D  0022               	movlb	2	; select bank2
  5157  089E  158E               	bsf	14,3	;volatile
  5158                           
  5159                           ;main.c: 193:             TRISC = 0xBF;
  5160  089F  30BF               	movlw	191
  5161  08A0  0021               	movlb	1	; select bank1
  5162  08A1  008E               	movwf	14	;volatile
  5163                           
  5164                           ;main.c: 198:             for(i=0;i<4;++i){
  5165  08A2  0022               	movlb	2	; select bank2
  5166  08A3  01C7               	clrf	main@i^(0+256)
  5167  08A4                     l6957:	
  5168                           
  5169                           ;main.c: 199:                 sendPWM(&hdr_trl[i]);
  5170  08A4  0847               	movf	main@i^(0+256),w
  5171  08A5  3E40               	addlw	(low (main@hdr_trl| (0+256)))& (0+255)
  5172  08A6  3192  2204  3188   	fcall	_sendPWM
  5173                           
  5174                           ;main.c: 200:             }
  5175  08A9  3001               	movlw	1
  5176  08AA  0021               	movlb	1	; select bank1
  5177  08AB  00EB               	movwf	??_main^(0+128)
  5178  08AC  086B               	movf	??_main^(0+128),w
  5179  08AD  0022               	movlb	2	; select bank2
  5180  08AE  07C7               	addwf	main@i^(0+256),f
  5181  08AF  3004               	movlw	4
  5182  08B0  0247               	subwf	main@i^(0+256),w
  5183  08B1  1C03               	skipc
  5184  08B2  28A4               	goto	l6957
  5185                           
  5186                           ;main.c: 201:             sendPWM(&SOC);
  5187  08B3  3045               	movlw	(low (main@SOC| (0+256)))& (0+255)
  5188  08B4  3192  2204  3188   	fcall	_sendPWM
  5189                           
  5190                           ;main.c: 203:             for (i=0;i<9;++i){
  5191  08B7  0022               	movlb	2	; select bank2
  5192  08B8  01C7               	clrf	main@i^(0+256)
  5193  08B9                     l6971:	
  5194                           
  5195                           ;main.c: 204:                 sendPWM(&packet[i]);
  5196  08B9  0847               	movf	main@i^(0+256),w
  5197  08BA  3ECD               	addlw	(low (_packet| (0+256)))& (0+255)
  5198  08BB  3192  2204  3188   	fcall	_sendPWM
  5199                           
  5200                           ;main.c: 205:             }
  5201  08BE  3001               	movlw	1
  5202  08BF  0021               	movlb	1	; select bank1
  5203  08C0  00EB               	movwf	??_main^(0+128)
  5204  08C1  086B               	movf	??_main^(0+128),w
  5205  08C2  0022               	movlb	2	; select bank2
  5206  08C3  07C7               	addwf	main@i^(0+256),f
  5207  08C4  3009               	movlw	9
  5208  08C5  0247               	subwf	main@i^(0+256),w
  5209  08C6  1C03               	skipc
  5210  08C7  28B9               	goto	l6971
  5211                           
  5212                           ;main.c: 206:             sendPWM(&EOC);
  5213  08C8  3046               	movlw	(low (main@EOC| (0+256)))& (0+255)
  5214  08C9  3192  2204  3188   	fcall	_sendPWM
  5215                           
  5216                           ;main.c: 207:             for(i=0;i<4;++i){
  5217  08CC  0022               	movlb	2	; select bank2
  5218  08CD  01C7               	clrf	main@i^(0+256)
  5219  08CE                     l6985:	
  5220                           
  5221                           ;main.c: 208:                 sendPWM(&hdr_trl[i]);
  5222  08CE  0847               	movf	main@i^(0+256),w
  5223  08CF  3E40               	addlw	(low (main@hdr_trl| (0+256)))& (0+255)
  5224  08D0  3192  2204  3188   	fcall	_sendPWM
  5225                           
  5226                           ;main.c: 209:             }
  5227  08D3  3001               	movlw	1
  5228  08D4  0021               	movlb	1	; select bank1
  5229  08D5  00EB               	movwf	??_main^(0+128)
  5230  08D6  086B               	movf	??_main^(0+128),w
  5231  08D7  0022               	movlb	2	; select bank2
  5232  08D8  07C7               	addwf	main@i^(0+256),f
  5233  08D9  3004               	movlw	4
  5234  08DA  0247               	subwf	main@i^(0+256),w
  5235  08DB  1C03               	skipc
  5236  08DC  28CE               	goto	l6985
  5237                           
  5238                           ;main.c: 211:             LATCbits.LATC3 = 0;
  5239  08DD  118E               	bcf	14,3	;volatile
  5240  08DE  2887               	goto	l6937
  5241  08DF                     __end_of_main:	
  5242                           
  5243                           	psect	text1
  5244  1D65                     __ptext1:	
  5245 ;; *************** function _setZero *****************
  5246 ;; Defined at:
  5247 ;;		line 87 in file "main.c"
  5248 ;; Parameters:    Size  Location     Type
  5249 ;;		None
  5250 ;; Auto vars:     Size  Location     Type
  5251 ;;		None
  5252 ;; Return value:  Size  Location     Type
  5253 ;;                  1    wreg      void 
  5254 ;; Registers used:
  5255 ;;		status,2
  5256 ;; Tracked objects:
  5257 ;;		On entry : 0/0
  5258 ;;		On exit  : 0/0
  5259 ;;		Unchanged: 0/0
  5260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5265 ;;Total ram usage:        0 bytes
  5266 ;; Hardware stack levels used:    1
  5267 ;; Hardware stack levels required when called:    4
  5268 ;; This function calls:
  5269 ;;		Nothing
  5270 ;; This function is called by:
  5271 ;;		_main
  5272 ;; This function uses a non-reentrant model
  5273 ;;
  5274                           
  5275                           
  5276                           ;psect for function _setZero
  5277  1D65                     _setZero:	
  5278                           
  5279                           ;main.c: 89:     PWM5CON = 0x00;
  5280                           
  5281                           ;incstack = 0
  5282                           ; Regs used in _setZero: [status,2]
  5283  1D65  002C               	movlb	12	; select bank12
  5284  1D66  0199               	clrf	25	;volatile
  5285  1D67  0008               	return
  5286  1D68                     __end_of_setZero:	
  5287                           
  5288                           	psect	text2
  5289  1204                     __ptext2:	
  5290 ;; *************** function _sendPWM *****************
  5291 ;; Defined at:
  5292 ;;		line 92 in file "main.c"
  5293 ;; Parameters:    Size  Location     Type
  5294 ;;  data            1    wreg     PTR unsigned char 
  5295 ;;		 -> main@EOC(1), main@SOC(1), main@hdr_trl(4), packet(9), 
  5296 ;; Auto vars:     Size  Location     Type
  5297 ;;  data            1    3[COMMON] PTR unsigned char 
  5298 ;;		 -> main@EOC(1), main@SOC(1), main@hdr_trl(4), packet(9), 
  5299 ;;  j               1    2[COMMON] unsigned char 
  5300 ;; Return value:  Size  Location     Type
  5301 ;;                  1    wreg      _Bool 
  5302 ;; Registers used:
  5303 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5304 ;; Tracked objects:
  5305 ;;		On entry : 0/0
  5306 ;;		On exit  : 0/0
  5307 ;;		Unchanged: 0/0
  5308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5310 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5311 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5312 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5313 ;;Total ram usage:        3 bytes
  5314 ;; Hardware stack levels used:    1
  5315 ;; Hardware stack levels required when called:    5
  5316 ;; This function calls:
  5317 ;;		_setHigh
  5318 ;;		_setLow
  5319 ;; This function is called by:
  5320 ;;		_main
  5321 ;;		_sendFloat
  5322 ;; This function uses a non-reentrant model
  5323 ;;
  5324                           
  5325                           
  5326                           ;psect for function _sendPWM
  5327  1204                     _sendPWM:	
  5328                           
  5329                           ;incstack = 0
  5330                           ; Regs used in _sendPWM: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5331                           ;sendPWM@data stored from wreg
  5332  1204  00F3               	movwf	sendPWM@data
  5333                           
  5334                           ;main.c: 95:     setLow();
  5335  1205  319E  2638  3192   	fcall	_setLow
  5336                           
  5337                           ;main.c: 96:     _delay((unsigned long)((13.3333333333)*(16000000/4000.0)));
  5338  1208  3046               	movlw	70
  5339  1209  00F1               	movwf	??_sendPWM
  5340  120A  3042               	movlw	66
  5341  120B                     u7547:	
  5342  120B  0B89               	decfsz	9,f
  5343  120C  2A0B               	goto	u7547
  5344  120D  0BF1               	decfsz	??_sendPWM,f
  5345  120E  2A0B               	goto	u7547
  5346  120F  0000               	nop
  5347                           
  5348                           ;main.c: 98:     for (j = 0; j < 8; j++) {
  5349  1210  01F2               	clrf	sendPWM@j
  5350  1211                     l5853:	
  5351                           
  5352                           ;main.c: 99:         (!!((*data >> j)&0x01)) ? setHigh() : setLow();
  5353  1211  0873               	movf	sendPWM@data,w
  5354  1212  0086               	movwf	6
  5355  1213  3001               	movlw	1	; select bank2/3
  5356  1214  0087               	movwf	7
  5357  1215  0801               	movf	1,w
  5358  1216  00F1               	movwf	??_sendPWM
  5359  1217  0A72               	incf	sendPWM@j,w
  5360  1218  2A1A               	goto	u5964
  5361  1219                     u5965:	
  5362  1219  36F1               	lsrf	??_sendPWM,f
  5363  121A                     u5964:	
  5364  121A  0B89               	decfsz	9,f
  5365  121B  2A19               	goto	u5965
  5366  121C  1C71               	btfss	??_sendPWM,0
  5367  121D  2A22               	goto	l5857
  5368  121E  319E  262E  3192   	fcall	_setHigh
  5369  1221  2A25               	goto	l5859
  5370  1222                     l5857:	
  5371  1222  319E  2638  3192   	fcall	_setLow
  5372  1225                     l5859:	
  5373                           
  5374                           ;main.c: 100:         _delay((unsigned long)((13.3333333333)*(16000000/4000.0)));
  5375  1225  3046               	movlw	70
  5376  1226  00F1               	movwf	??_sendPWM
  5377  1227  3042               	movlw	66
  5378  1228                     u7557:	
  5379  1228  0B89               	decfsz	9,f
  5380  1229  2A28               	goto	u7557
  5381  122A  0BF1               	decfsz	??_sendPWM,f
  5382  122B  2A28               	goto	u7557
  5383  122C  0000               	nop
  5384                           
  5385                           ;main.c: 101:     }
  5386  122D  3001               	movlw	1
  5387  122E  00F1               	movwf	??_sendPWM
  5388  122F  0871               	movf	??_sendPWM,w
  5389  1230  07F2               	addwf	sendPWM@j,f
  5390  1231  3008               	movlw	8
  5391  1232  0272               	subwf	sendPWM@j,w
  5392  1233  1C03               	skipc
  5393  1234  2A11               	goto	l5853
  5394                           
  5395                           ;main.c: 103:     setHigh();
  5396  1235  319E  262E  3192   	fcall	_setHigh
  5397                           
  5398                           ;main.c: 104:     _delay((unsigned long)((13.3333333333)*(16000000/4000.0)));
  5399  1238  3046               	movlw	70
  5400  1239  00F1               	movwf	??_sendPWM
  5401  123A  3042               	movlw	66
  5402  123B                     u7567:	
  5403  123B  0B89               	decfsz	9,f
  5404  123C  2A3B               	goto	u7567
  5405  123D  0BF1               	decfsz	??_sendPWM,f
  5406  123E  2A3B               	goto	u7567
  5407  123F  0000               	nop
  5408  1240  0008               	return
  5409  1241                     __end_of_sendPWM:	
  5410                           
  5411                           	psect	text3
  5412  1E38                     __ptext3:	
  5413 ;; *************** function _setLow *****************
  5414 ;; Defined at:
  5415 ;;		line 80 in file "main.c"
  5416 ;; Parameters:    Size  Location     Type
  5417 ;;		None
  5418 ;; Auto vars:     Size  Location     Type
  5419 ;;		None
  5420 ;; Return value:  Size  Location     Type
  5421 ;;                  1    wreg      void 
  5422 ;; Registers used:
  5423 ;;		wreg
  5424 ;; Tracked objects:
  5425 ;;		On entry : 0/0
  5426 ;;		On exit  : 0/0
  5427 ;;		Unchanged: 0/0
  5428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5433 ;;Total ram usage:        0 bytes
  5434 ;; Hardware stack levels used:    1
  5435 ;; Hardware stack levels required when called:    4
  5436 ;; This function calls:
  5437 ;;		Nothing
  5438 ;; This function is called by:
  5439 ;;		_sendPWM
  5440 ;; This function uses a non-reentrant model
  5441 ;;
  5442                           
  5443                           
  5444                           ;psect for function _setLow
  5445  1E38                     _setLow:	
  5446                           
  5447                           ;main.c: 82:     PWM5CON = 0x80;
  5448                           
  5449                           ;incstack = 0
  5450                           ; Regs used in _setLow: [wreg]
  5451  1E38  3080               	movlw	128
  5452  1E39  002C               	movlb	12	; select bank12
  5453  1E3A  0099               	movwf	25	;volatile
  5454                           
  5455                           ;main.c: 83:     PR2 = 0x74;
  5456  1E3B  3074               	movlw	116
  5457  1E3C  0020               	movlb	0	; select bank0
  5458  1E3D  009E               	movwf	30	;volatile
  5459                           
  5460                           ;main.c: 84:     PWM5DCH = 0x3A;
  5461  1E3E  303A               	movlw	58
  5462  1E3F  002C               	movlb	12	; select bank12
  5463  1E40  0098               	movwf	24	;volatile
  5464  1E41  0008               	return
  5465  1E42                     __end_of_setLow:	
  5466                           
  5467                           	psect	text4
  5468  1E2E                     __ptext4:	
  5469 ;; *************** function _setHigh *****************
  5470 ;; Defined at:
  5471 ;;		line 72 in file "main.c"
  5472 ;; Parameters:    Size  Location     Type
  5473 ;;		None
  5474 ;; Auto vars:     Size  Location     Type
  5475 ;;		None
  5476 ;; Return value:  Size  Location     Type
  5477 ;;                  1    wreg      void 
  5478 ;; Registers used:
  5479 ;;		wreg
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5489 ;;Total ram usage:        0 bytes
  5490 ;; Hardware stack levels used:    1
  5491 ;; Hardware stack levels required when called:    4
  5492 ;; This function calls:
  5493 ;;		Nothing
  5494 ;; This function is called by:
  5495 ;;		_sendPWM
  5496 ;; This function uses a non-reentrant model
  5497 ;;
  5498                           
  5499                           
  5500                           ;psect for function _setHigh
  5501  1E2E                     _setHigh:	
  5502                           
  5503                           ;main.c: 74:     PWM5CON = 0x80;
  5504                           
  5505                           ;incstack = 0
  5506                           ; Regs used in _setHigh: [wreg]
  5507  1E2E  3080               	movlw	128
  5508  1E2F  002C               	movlb	12	; select bank12
  5509  1E30  0099               	movwf	25	;volatile
  5510                           
  5511                           ;main.c: 75:     PR2 = 0x68;
  5512  1E31  3068               	movlw	104
  5513  1E32  0020               	movlb	0	; select bank0
  5514  1E33  009E               	movwf	30	;volatile
  5515                           
  5516                           ;main.c: 76:     PWM5DCH = 0x34;
  5517  1E34  3034               	movlw	52
  5518  1E35  002C               	movlb	12	; select bank12
  5519  1E36  0098               	movwf	24	;volatile
  5520  1E37  0008               	return
  5521  1E38                     __end_of_setHigh:	
  5522                           
  5523                           	psect	text5
  5524  1689                     __ptext5:	
  5525 ;; *************** function _readPressureSensor *****************
  5526 ;; Defined at:
  5527 ;;		line 110 in file "main.c"
  5528 ;; Parameters:    Size  Location     Type
  5529 ;;		None
  5530 ;; Auto vars:     Size  Location     Type
  5531 ;;		None
  5532 ;; Return value:  Size  Location     Type
  5533 ;;                  1    wreg      void 
  5534 ;; Registers used:
  5535 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5536 ;; Tracked objects:
  5537 ;;		On entry : 0/0
  5538 ;;		On exit  : 0/0
  5539 ;;		Unchanged: 0/0
  5540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5543 ;;      Temps:          0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5544 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5545 ;;Total ram usage:        9 bytes
  5546 ;; Hardware stack levels used:    1
  5547 ;; Hardware stack levels required when called:   13
  5548 ;; This function calls:
  5549 ;;		_I2C1_Read1ByteRegister
  5550 ;;		___fldiv
  5551 ;;		___xxtofl
  5552 ;;		_printf
  5553 ;; This function is called by:
  5554 ;;		_main
  5555 ;; This function uses a non-reentrant model
  5556 ;;
  5557                           
  5558                           
  5559                           ;psect for function _readPressureSensor
  5560  1689                     _readPressureSensor:	
  5561                           
  5562                           ;main.c: 113:     raw_pressure = 0;
  5563                           
  5564                           ;incstack = 0
  5565                           ; Regs used in _readPressureSensor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5566  1689  3000               	movlw	0
  5567  168A  0022               	movlb	2	; select bank2
  5568  168B  00E6               	movwf	(_raw_pressure+3)^(0+256)
  5569  168C  3000               	movlw	0
  5570  168D  00E5               	movwf	(_raw_pressure+2)^(0+256)
  5571  168E  3000               	movlw	0
  5572  168F  00E4               	movwf	(_raw_pressure+1)^(0+256)
  5573  1690  3000               	movlw	0
  5574  1691  00E3               	movwf	_raw_pressure^(0+256)
  5575                           
  5576                           ;main.c: 114:     raw_pressure = I2C1_Read1ByteRegister(0x5D, 0x2A);
  5577  1692  302A               	movlw	42
  5578  1693  00A0               	movwf	??_readPressureSensor^(0+256)
  5579  1694  0820               	movf	??_readPressureSensor^(0+256),w
  5580  1695  0020               	movlb	0	; select bank0
  5581  1696  00A8               	movwf	I2C1_Read1ByteRegister@reg
  5582  1697  305D               	movlw	93
  5583  1698  3191  212F  3196   	fcall	_I2C1_Read1ByteRegister
  5584  169B  0022               	movlb	2	; select bank2
  5585  169C  00A1               	movwf	(??_readPressureSensor+1)^(0+256)
  5586  169D  01A2               	clrf	((??_readPressureSensor+1)^(0+256)+1)
  5587  169E  01A3               	clrf	((??_readPressureSensor+1)^(0+256)+2)
  5588  169F  01A4               	clrf	((??_readPressureSensor+1)^(0+256)+3)
  5589  16A0  0824               	movf	(??_readPressureSensor+4)^(0+256),w
  5590  16A1  00E6               	movwf	(_raw_pressure+3)^(0+256)
  5591  16A2  0823               	movf	(??_readPressureSensor+3)^(0+256),w
  5592  16A3  00E5               	movwf	(_raw_pressure+2)^(0+256)
  5593  16A4  0822               	movf	(??_readPressureSensor+2)^(0+256),w
  5594  16A5  00E4               	movwf	(_raw_pressure+1)^(0+256)
  5595  16A6  0821               	movf	(??_readPressureSensor+1)^(0+256),w
  5596  16A7  00E3               	movwf	_raw_pressure^(0+256)
  5597                           
  5598                           ;main.c: 115:     packet[0] = raw_pressure;
  5599  16A8  0863               	movf	_raw_pressure^(0+256),w
  5600  16A9  00A0               	movwf	??_readPressureSensor^(0+256)
  5601  16AA  0820               	movf	??_readPressureSensor^(0+256),w
  5602  16AB  0023               	movlb	3	; select bank3
  5603  16AC  00CD               	movwf	_packet^(0+384)
  5604                           
  5605                           ;main.c: 116:     raw_pressure = (raw_pressure << 8) + I2C1_Read1ByteRegister(0x5D, 0x29
      +                          );
  5606  16AD  3029               	movlw	41
  5607  16AE  0022               	movlb	2	; select bank2
  5608  16AF  00A0               	movwf	??_readPressureSensor^(0+256)
  5609  16B0  0820               	movf	??_readPressureSensor^(0+256),w
  5610  16B1  0020               	movlb	0	; select bank0
  5611  16B2  00A8               	movwf	I2C1_Read1ByteRegister@reg
  5612  16B3  305D               	movlw	93
  5613  16B4  3191  212F  3196   	fcall	_I2C1_Read1ByteRegister
  5614  16B7  0022               	movlb	2	; select bank2
  5615  16B8  00A1               	movwf	(??_readPressureSensor+1)^(0+256)
  5616  16B9  01A2               	clrf	((??_readPressureSensor+1)^(0+256)+1)
  5617  16BA  01A3               	clrf	((??_readPressureSensor+1)^(0+256)+2)
  5618  16BB  01A4               	clrf	((??_readPressureSensor+1)^(0+256)+3)
  5619  16BC  0863               	movf	_raw_pressure^(0+256),w
  5620  16BD  00A5               	movwf	(??_readPressureSensor+5)^(0+256)
  5621  16BE  0864               	movf	(_raw_pressure+1)^(0+256),w
  5622  16BF  00A6               	movwf	((??_readPressureSensor+5)^(0+256)+1)
  5623  16C0  0865               	movf	(_raw_pressure+2)^(0+256),w
  5624  16C1  00A7               	movwf	((??_readPressureSensor+5)^(0+256)+2)
  5625  16C2  0866               	movf	(_raw_pressure+3)^(0+256),w
  5626  16C3  00A8               	movwf	((??_readPressureSensor+5)^(0+256)+3)
  5627  16C4  3008               	movlw	8
  5628  16C5                     u7455:	
  5629  16C5  35A5               	lslf	(??_readPressureSensor+5)^(0+256),f
  5630  16C6  0DA6               	rlf	((??_readPressureSensor+5)^(0+256)+1),f
  5631  16C7  0DA7               	rlf	((??_readPressureSensor+5)^(0+256)+2),f
  5632  16C8  0DA8               	rlf	((??_readPressureSensor+5)^(0+256)+3),f
  5633  16C9  0B89               	decfsz	9,f
  5634  16CA  2EC5               	goto	u7455
  5635  16CB  0825               	movf	(??_readPressureSensor+5)^(0+256),w
  5636  16CC  07A1               	addwf	(??_readPressureSensor+1)^(0+256),f
  5637  16CD  0826               	movf	(??_readPressureSensor+6)^(0+256),w
  5638  16CE  3DA2               	addwfc	((??_readPressureSensor+1)^(0+256)+1),f
  5639  16CF  0827               	movf	(??_readPressureSensor+7)^(0+256),w
  5640  16D0  3DA3               	addwfc	((??_readPressureSensor+1)^(0+256)+2),f
  5641  16D1  0828               	movf	(??_readPressureSensor+8)^(0+256),w
  5642  16D2  3DA4               	addwfc	((??_readPressureSensor+1)^(0+256)+3),f
  5643  16D3  0824               	movf	(??_readPressureSensor+4)^(0+256),w
  5644  16D4  00E6               	movwf	(_raw_pressure+3)^(0+256)
  5645  16D5  0823               	movf	(??_readPressureSensor+3)^(0+256),w
  5646  16D6  00E5               	movwf	(_raw_pressure+2)^(0+256)
  5647  16D7  0822               	movf	(??_readPressureSensor+2)^(0+256),w
  5648  16D8  00E4               	movwf	(_raw_pressure+1)^(0+256)
  5649  16D9  0821               	movf	(??_readPressureSensor+1)^(0+256),w
  5650  16DA  00E3               	movwf	_raw_pressure^(0+256)
  5651                           
  5652                           ;main.c: 117:     packet[1] = (0x0f & raw_pressure);
  5653  16DB  0863               	movf	_raw_pressure^(0+256),w
  5654  16DC  390F               	andlw	15
  5655  16DD  00A0               	movwf	??_readPressureSensor^(0+256)
  5656  16DE  0820               	movf	??_readPressureSensor^(0+256),w
  5657  16DF  0023               	movlb	3	; select bank3
  5658  16E0  00CE               	movwf	(_packet^(0+384)+1)
  5659                           
  5660                           ;main.c: 118:     raw_pressure = (raw_pressure << 8) + I2C1_Read1ByteRegister(0x5D, 0x28
      +                          );
  5661  16E1  3028               	movlw	40
  5662  16E2  0022               	movlb	2	; select bank2
  5663  16E3  00A0               	movwf	??_readPressureSensor^(0+256)
  5664  16E4  0820               	movf	??_readPressureSensor^(0+256),w
  5665  16E5  0020               	movlb	0	; select bank0
  5666  16E6  00A8               	movwf	I2C1_Read1ByteRegister@reg
  5667  16E7  305D               	movlw	93
  5668  16E8  3191  212F  3196   	fcall	_I2C1_Read1ByteRegister
  5669  16EB  0022               	movlb	2	; select bank2
  5670  16EC  00A1               	movwf	(??_readPressureSensor+1)^(0+256)
  5671  16ED  01A2               	clrf	((??_readPressureSensor+1)^(0+256)+1)
  5672  16EE  01A3               	clrf	((??_readPressureSensor+1)^(0+256)+2)
  5673  16EF  01A4               	clrf	((??_readPressureSensor+1)^(0+256)+3)
  5674  16F0  0863               	movf	_raw_pressure^(0+256),w
  5675  16F1  00A5               	movwf	(??_readPressureSensor+5)^(0+256)
  5676  16F2  0864               	movf	(_raw_pressure+1)^(0+256),w
  5677  16F3  00A6               	movwf	((??_readPressureSensor+5)^(0+256)+1)
  5678  16F4  0865               	movf	(_raw_pressure+2)^(0+256),w
  5679  16F5  00A7               	movwf	((??_readPressureSensor+5)^(0+256)+2)
  5680  16F6  0866               	movf	(_raw_pressure+3)^(0+256),w
  5681  16F7  00A8               	movwf	((??_readPressureSensor+5)^(0+256)+3)
  5682  16F8  3008               	movlw	8
  5683  16F9                     u7465:	
  5684  16F9  35A5               	lslf	(??_readPressureSensor+5)^(0+256),f
  5685  16FA  0DA6               	rlf	((??_readPressureSensor+5)^(0+256)+1),f
  5686  16FB  0DA7               	rlf	((??_readPressureSensor+5)^(0+256)+2),f
  5687  16FC  0DA8               	rlf	((??_readPressureSensor+5)^(0+256)+3),f
  5688  16FD  0B89               	decfsz	9,f
  5689  16FE  2EF9               	goto	u7465
  5690  16FF  0825               	movf	(??_readPressureSensor+5)^(0+256),w
  5691  1700  07A1               	addwf	(??_readPressureSensor+1)^(0+256),f
  5692  1701  0826               	movf	(??_readPressureSensor+6)^(0+256),w
  5693  1702  3DA2               	addwfc	((??_readPressureSensor+1)^(0+256)+1),f
  5694  1703  0827               	movf	(??_readPressureSensor+7)^(0+256),w
  5695  1704  3DA3               	addwfc	((??_readPressureSensor+1)^(0+256)+2),f
  5696  1705  0828               	movf	(??_readPressureSensor+8)^(0+256),w
  5697  1706  3DA4               	addwfc	((??_readPressureSensor+1)^(0+256)+3),f
  5698  1707  0824               	movf	(??_readPressureSensor+4)^(0+256),w
  5699  1708  00E6               	movwf	(_raw_pressure+3)^(0+256)
  5700  1709  0823               	movf	(??_readPressureSensor+3)^(0+256),w
  5701  170A  00E5               	movwf	(_raw_pressure+2)^(0+256)
  5702  170B  0822               	movf	(??_readPressureSensor+2)^(0+256),w
  5703  170C  00E4               	movwf	(_raw_pressure+1)^(0+256)
  5704  170D  0821               	movf	(??_readPressureSensor+1)^(0+256),w
  5705  170E  00E3               	movwf	_raw_pressure^(0+256)
  5706                           
  5707                           ;main.c: 119:     packet[2] = (0x0f & raw_pressure);
  5708  170F  0863               	movf	_raw_pressure^(0+256),w
  5709  1710  390F               	andlw	15
  5710  1711  00A0               	movwf	??_readPressureSensor^(0+256)
  5711  1712  0820               	movf	??_readPressureSensor^(0+256),w
  5712  1713  0023               	movlb	3	; select bank3
  5713  1714  00CF               	movwf	(_packet^(0+384)+2)
  5714                           
  5715                           ;main.c: 120:     if (raw_pressure & 0x800000) {
  5716  1715  0022               	movlb	2	; select bank2
  5717  1716  1FE5               	btfss	(_raw_pressure+2)^(0+256),7
  5718  1717  2F2C               	goto	l6891
  5719                           
  5720                           ;main.c: 121:         raw_pressure = (0xff000000 | raw_pressure);
  5721  1718  3000               	movlw	0
  5722  1719  0463               	iorwf	_raw_pressure^(0+256),w
  5723  171A  00A0               	movwf	??_readPressureSensor^(0+256)
  5724  171B  3000               	movlw	0
  5725  171C  0464               	iorwf	(_raw_pressure+1)^(0+256),w
  5726  171D  00A1               	movwf	(??_readPressureSensor^(0+256)+1)
  5727  171E  3000               	movlw	0
  5728  171F  0465               	iorwf	(_raw_pressure+2)^(0+256),w
  5729  1720  00A2               	movwf	(??_readPressureSensor^(0+256)+2)
  5730  1721  30FF               	movlw	255
  5731  1722  0466               	iorwf	(_raw_pressure+3)^(0+256),w
  5732  1723  00A3               	movwf	(??_readPressureSensor^(0+256)+3)
  5733  1724  0823               	movf	(??_readPressureSensor+3)^(0+256),w
  5734  1725  00E6               	movwf	(_raw_pressure+3)^(0+256)
  5735  1726  0822               	movf	(??_readPressureSensor+2)^(0+256),w
  5736  1727  00E5               	movwf	(_raw_pressure+2)^(0+256)
  5737  1728  0821               	movf	(??_readPressureSensor+1)^(0+256),w
  5738  1729  00E4               	movwf	(_raw_pressure+1)^(0+256)
  5739  172A  0820               	movf	??_readPressureSensor^(0+256),w
  5740  172B  00E3               	movwf	_raw_pressure^(0+256)
  5741  172C                     l6891:	
  5742                           
  5743                           ;main.c: 123:     pressure = (float) (raw_pressure) / 4096.0;
  5744  172C  3045               	movlw	69
  5745  172D  0020               	movlb	0	; select bank0
  5746  172E  00A9               	movwf	___fldiv@a+3
  5747  172F  3080               	movlw	128
  5748  1730  00A8               	movwf	___fldiv@a+2
  5749  1731  3000               	movlw	0
  5750  1732  00A7               	movwf	___fldiv@a+1
  5751  1733  3000               	movlw	0
  5752  1734  00A6               	movwf	___fldiv@a
  5753  1735  0022               	movlb	2	; select bank2
  5754  1736  0866               	movf	(_raw_pressure+3)^(0+256),w
  5755  1737  00F4               	movwf	___xxtofl@val+3
  5756  1738  0865               	movf	(_raw_pressure+2)^(0+256),w
  5757  1739  00F3               	movwf	___xxtofl@val+2
  5758  173A  0864               	movf	(_raw_pressure+1)^(0+256),w
  5759  173B  00F2               	movwf	___xxtofl@val+1
  5760  173C  0863               	movf	_raw_pressure^(0+256),w
  5761  173D  00F1               	movwf	___xxtofl@val
  5762  173E  3000               	movlw	0
  5763  173F  3195  25F3  3196   	fcall	___xxtofl
  5764  1742  0874               	movf	?___xxtofl+3,w
  5765  1743  0020               	movlb	0	; select bank0
  5766  1744  00AD               	movwf	___fldiv@b+3
  5767  1745  0873               	movf	?___xxtofl+2,w
  5768  1746  00AC               	movwf	___fldiv@b+2
  5769  1747  0872               	movf	?___xxtofl+1,w
  5770  1748  00AB               	movwf	___fldiv@b+1
  5771  1749  0871               	movf	?___xxtofl,w
  5772  174A  00AA               	movwf	___fldiv@b
  5773  174B  3188  20DF  3196   	fcall	___fldiv
  5774  174E  0020               	movlb	0	; select bank0
  5775  174F  0829               	movf	?___fldiv+3,w
  5776  1750  0023               	movlb	3	; select bank3
  5777  1751  00DD               	movwf	(_pressure+3)^(0+384)
  5778  1752  0020               	movlb	0	; select bank0
  5779  1753  0828               	movf	?___fldiv+2,w
  5780  1754  0023               	movlb	3	; select bank3
  5781  1755  00DC               	movwf	(_pressure+2)^(0+384)
  5782  1756  0020               	movlb	0	; select bank0
  5783  1757  0827               	movf	?___fldiv+1,w
  5784  1758  0023               	movlb	3	; select bank3
  5785  1759  00DB               	movwf	(_pressure+1)^(0+384)
  5786  175A  0020               	movlb	0	; select bank0
  5787  175B  0826               	movf	?___fldiv,w
  5788  175C  0023               	movlb	3	; select bank3
  5789  175D  00DA               	movwf	_pressure^(0+384)
  5790                           
  5791                           ;main.c: 124:     _delay((unsigned long)((500)*(16000000/4000.0)));
  5792  175E  300B               	movlw	11
  5793  175F  0022               	movlb	2	; select bank2
  5794  1760  00A1               	movwf	(??_readPressureSensor^(0+256)+1)
  5795  1761  3026               	movlw	38
  5796  1762  00A0               	movwf	??_readPressureSensor^(0+256)
  5797  1763  305D               	movlw	93
  5798  1764                     u7577:	
  5799  1764  0B89               	decfsz	9,f
  5800  1765  2F64               	goto	u7577
  5801  1766  0BA0               	decfsz	??_readPressureSensor^(0+256),f
  5802  1767  2F64               	goto	u7577
  5803  1768  0BA1               	decfsz	(??_readPressureSensor^(0+256)+1),f
  5804  1769  2F64               	goto	u7577
  5805  176A  3200               	nop2
  5806                           
  5807                           ;main.c: 127:     raw_temperature = 0;
  5808  176B  0022               	movlb	2	; select bank2
  5809  176C  01E7               	clrf	_raw_temperature^(0+256)
  5810  176D  01E8               	clrf	(_raw_temperature+1)^(0+256)
  5811                           
  5812                           ;main.c: 128:     raw_temperature = I2C1_Read1ByteRegister(0x5D, 0x2C);
  5813  176E  302C               	movlw	44
  5814  176F  00A0               	movwf	??_readPressureSensor^(0+256)
  5815  1770  0820               	movf	??_readPressureSensor^(0+256),w
  5816  1771  0020               	movlb	0	; select bank0
  5817  1772  00A8               	movwf	I2C1_Read1ByteRegister@reg
  5818  1773  305D               	movlw	93
  5819  1774  3191  212F  3196   	fcall	_I2C1_Read1ByteRegister
  5820  1777  0022               	movlb	2	; select bank2
  5821  1778  00A1               	movwf	(??_readPressureSensor+1)^(0+256)
  5822  1779  01A2               	clrf	((??_readPressureSensor+1)^(0+256)+1)
  5823  177A  0821               	movf	(??_readPressureSensor+1)^(0+256),w
  5824  177B  00E7               	movwf	_raw_temperature^(0+256)
  5825  177C  0822               	movf	(??_readPressureSensor+2)^(0+256),w
  5826  177D  00E8               	movwf	(_raw_temperature+1)^(0+256)
  5827                           
  5828                           ;main.c: 129:     packet[3] = (0x0f & raw_temperature);
  5829  177E  0867               	movf	_raw_temperature^(0+256),w
  5830  177F  390F               	andlw	15
  5831  1780  00A0               	movwf	??_readPressureSensor^(0+256)
  5832  1781  0820               	movf	??_readPressureSensor^(0+256),w
  5833  1782  0023               	movlb	3	; select bank3
  5834  1783  00D0               	movwf	(_packet^(0+384)+3)
  5835                           
  5836                           ;main.c: 130:     raw_temperature = (raw_temperature << 8) + I2C1_Read1ByteRegister(0x5D
      +                          , 0x2B);
  5837  1784  302B               	movlw	43
  5838  1785  0022               	movlb	2	; select bank2
  5839  1786  00A0               	movwf	??_readPressureSensor^(0+256)
  5840  1787  0820               	movf	??_readPressureSensor^(0+256),w
  5841  1788  0020               	movlb	0	; select bank0
  5842  1789  00A8               	movwf	I2C1_Read1ByteRegister@reg
  5843  178A  305D               	movlw	93
  5844  178B  3191  212F  3196   	fcall	_I2C1_Read1ByteRegister
  5845  178E  0022               	movlb	2	; select bank2
  5846  178F  00A1               	movwf	(??_readPressureSensor+1)^(0+256)
  5847  1790  01A2               	clrf	((??_readPressureSensor+1)^(0+256)+1)
  5848  1791  0867               	movf	_raw_temperature^(0+256),w
  5849  1792  00A4               	movwf	((??_readPressureSensor+3)^(0+256)+1)
  5850  1793  01A3               	clrf	(??_readPressureSensor+3)^(0+256)
  5851  1794  0821               	movf	(??_readPressureSensor+1)^(0+256),w
  5852  1795  0723               	addwf	(??_readPressureSensor+3)^(0+256),w
  5853  1796  00E7               	movwf	_raw_temperature^(0+256)
  5854  1797  0822               	movf	(??_readPressureSensor+2)^(0+256),w
  5855  1798  3D24               	addwfc	(??_readPressureSensor+4)^(0+256),w
  5856  1799  00E8               	movwf	(_raw_temperature+1)^(0+256)
  5857                           
  5858                           ;main.c: 131:     packet[4] = (0x0f & raw_temperature);
  5859  179A  0867               	movf	_raw_temperature^(0+256),w
  5860  179B  390F               	andlw	15
  5861  179C  00A0               	movwf	??_readPressureSensor^(0+256)
  5862  179D  0820               	movf	??_readPressureSensor^(0+256),w
  5863  179E  0023               	movlb	3	; select bank3
  5864  179F  00D1               	movwf	(_packet^(0+384)+4)
  5865                           
  5866                           ;main.c: 132:     temperature = (float) (raw_temperature) / 100.00;
  5867  17A0  3042               	movlw	66
  5868  17A1  0020               	movlb	0	; select bank0
  5869  17A2  00A9               	movwf	___fldiv@a+3
  5870  17A3  30C8               	movlw	200
  5871  17A4  00A8               	movwf	___fldiv@a+2
  5872  17A5  3000               	movlw	0
  5873  17A6  00A7               	movwf	___fldiv@a+1
  5874  17A7  3000               	movlw	0
  5875  17A8  00A6               	movwf	___fldiv@a
  5876  17A9  0022               	movlb	2	; select bank2
  5877  17AA  0867               	movf	_raw_temperature^(0+256),w
  5878  17AB  00F1               	movwf	___xxtofl@val
  5879  17AC  0868               	movf	(_raw_temperature+1)^(0+256),w
  5880  17AD  00F2               	movwf	___xxtofl@val+1
  5881  17AE  01F3               	clrf	___xxtofl@val+2
  5882  17AF  01F4               	clrf	___xxtofl@val+3
  5883  17B0  3000               	movlw	0
  5884  17B1  3195  25F3  3196   	fcall	___xxtofl
  5885  17B4  0874               	movf	?___xxtofl+3,w
  5886  17B5  0020               	movlb	0	; select bank0
  5887  17B6  00AD               	movwf	___fldiv@b+3
  5888  17B7  0873               	movf	?___xxtofl+2,w
  5889  17B8  00AC               	movwf	___fldiv@b+2
  5890  17B9  0872               	movf	?___xxtofl+1,w
  5891  17BA  00AB               	movwf	___fldiv@b+1
  5892  17BB  0871               	movf	?___xxtofl,w
  5893  17BC  00AA               	movwf	___fldiv@b
  5894  17BD  3188  20DF  3196   	fcall	___fldiv
  5895  17C0  0020               	movlb	0	; select bank0
  5896  17C1  0829               	movf	?___fldiv+3,w
  5897  17C2  0023               	movlb	3	; select bank3
  5898  17C3  00D9               	movwf	(_temperature+3)^(0+384)
  5899  17C4  0020               	movlb	0	; select bank0
  5900  17C5  0828               	movf	?___fldiv+2,w
  5901  17C6  0023               	movlb	3	; select bank3
  5902  17C7  00D8               	movwf	(_temperature+2)^(0+384)
  5903  17C8  0020               	movlb	0	; select bank0
  5904  17C9  0827               	movf	?___fldiv+1,w
  5905  17CA  0023               	movlb	3	; select bank3
  5906  17CB  00D7               	movwf	(_temperature+1)^(0+384)
  5907  17CC  0020               	movlb	0	; select bank0
  5908  17CD  0826               	movf	?___fldiv,w
  5909  17CE  0023               	movlb	3	; select bank3
  5910  17CF  00D6               	movwf	_temperature^(0+384)
  5911                           
  5912                           ;main.c: 134:     printf("Pressure : %f\n", pressure);
  5913  17D0  3012               	movlw	low (STR_1| (0+32768))
  5914  17D1  0021               	movlb	1	; select bank1
  5915  17D2  00E1               	movwf	printf@fmt^(0+128)
  5916  17D3  30A0               	movlw	high (STR_1| (0+32768))
  5917  17D4  00E2               	movwf	(printf@fmt^(0+128)+1)
  5918  17D5  0023               	movlb	3	; select bank3
  5919  17D6  085D               	movf	(_pressure+3)^(0+384),w
  5920  17D7  0021               	movlb	1	; select bank1
  5921  17D8  00E6               	movwf	((?_printf+3)^(0+128)+2)
  5922  17D9  0023               	movlb	3	; select bank3
  5923  17DA  085C               	movf	(_pressure+2)^(0+384),w
  5924  17DB  0021               	movlb	1	; select bank1
  5925  17DC  00E5               	movwf	((?_printf+2)^(0+128)+2)
  5926  17DD  0023               	movlb	3	; select bank3
  5927  17DE  085B               	movf	(_pressure+1)^(0+384),w
  5928  17DF  0021               	movlb	1	; select bank1
  5929  17E0  00E4               	movwf	((?_printf+1)^(0+128)+2)
  5930  17E1  0023               	movlb	3	; select bank3
  5931  17E2  085A               	movf	_pressure^(0+384),w
  5932  17E3  0021               	movlb	1	; select bank1
  5933  17E4  00E3               	movwf	(?_printf^(0+128)+2)
  5934  17E5  3190  2002  3196   	fcall	_printf
  5935                           
  5936                           ;main.c: 135:     printf("Temperature : %f\n", temperature);
  5937  17E8  3000               	movlw	low (STR_2| (0+32768))
  5938  17E9  0021               	movlb	1	; select bank1
  5939  17EA  00E1               	movwf	printf@fmt^(0+128)
  5940  17EB  30A0               	movlw	high (STR_2| (0+32768))
  5941  17EC  00E2               	movwf	(printf@fmt^(0+128)+1)
  5942  17ED  0023               	movlb	3	; select bank3
  5943  17EE  0859               	movf	(_temperature+3)^(0+384),w
  5944  17EF  0021               	movlb	1	; select bank1
  5945  17F0  00E6               	movwf	((?_printf+3)^(0+128)+2)
  5946  17F1  0023               	movlb	3	; select bank3
  5947  17F2  0858               	movf	(_temperature+2)^(0+384),w
  5948  17F3  0021               	movlb	1	; select bank1
  5949  17F4  00E5               	movwf	((?_printf+2)^(0+128)+2)
  5950  17F5  0023               	movlb	3	; select bank3
  5951  17F6  0857               	movf	(_temperature+1)^(0+384),w
  5952  17F7  0021               	movlb	1	; select bank1
  5953  17F8  00E4               	movwf	((?_printf+1)^(0+128)+2)
  5954  17F9  0023               	movlb	3	; select bank3
  5955  17FA  0856               	movf	_temperature^(0+384),w
  5956  17FB  0021               	movlb	1	; select bank1
  5957  17FC  00E3               	movwf	(?_printf^(0+128)+2)
  5958  17FD  3190  2002         	fcall	_printf
  5959  17FF  0008               	return
  5960  1800                     __end_of_readPressureSensor:	
  5961                           
  5962                           	psect	text6
  5963  1002                     __ptext6:	
  5964 ;; *************** function _printf *****************
  5965 ;; Defined at:
  5966 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  5967 ;; Parameters:    Size  Location     Type
  5968 ;;  fmt             2   65[BANK1 ] PTR const unsigned char 
  5969 ;;		 -> STR_2(18), STR_1(15), 
  5970 ;; Auto vars:     Size  Location     Type
  5971 ;;  ret             2    0        int 
  5972 ;;  ap              1   74[BANK1 ] PTR void [1]
  5973 ;;		 -> ?_printf(2), 
  5974 ;; Return value:  Size  Location     Type
  5975 ;;                  2   65[BANK1 ] int 
  5976 ;; Registers used:
  5977 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5978 ;; Tracked objects:
  5979 ;;		On entry : 0/0
  5980 ;;		On exit  : 0/0
  5981 ;;		Unchanged: 0/0
  5982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5983 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5984 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5985 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5986 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5987 ;;Total ram usage:       10 bytes
  5988 ;; Hardware stack levels used:    1
  5989 ;; Hardware stack levels required when called:   12
  5990 ;; This function calls:
  5991 ;;		_vfprintf
  5992 ;; This function is called by:
  5993 ;;		_readPressureSensor
  5994 ;; This function uses a non-reentrant model
  5995 ;;
  5996                           
  5997                           
  5998                           ;psect for function _printf
  5999  1002                     _printf:	
  6000                           
  6001                           ;incstack = 0
  6002                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6003  1002  30E3               	movlw	(low ((?_printf| 0+2)))& (0+255)
  6004  1003  0021               	movlb	1	; select bank1
  6005  1004  00E7               	movwf	??_printf^(0+128)
  6006  1005  0867               	movf	??_printf^(0+128),w
  6007  1006  00EA               	movwf	printf@ap^(0+128)
  6008  1007  0862               	movf	(printf@fmt+1)^(0+128),w
  6009  1008  00DA               	movwf	(vfprintf@fmt+1)^(0+128)
  6010  1009  0861               	movf	printf@fmt^(0+128),w
  6011  100A  00D9               	movwf	vfprintf@fmt^(0+128)
  6012  100B  30EA               	movlw	(low (printf@ap| 0))& (0+255)
  6013  100C  00E7               	movwf	??_printf^(0+128)
  6014  100D  0867               	movf	??_printf^(0+128),w
  6015  100E  00DB               	movwf	vfprintf@ap^(0+128)
  6016  100F  3000               	movlw	0
  6017  1010  3188  2000         	fcall	_vfprintf
  6018  1012  0008               	return
  6019  1013                     __end_of_printf:	
  6020                           
  6021                           	psect	text7
  6022  0800                     __ptext7:	
  6023 ;; *************** function _vfprintf *****************
  6024 ;; Defined at:
  6025 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6026 ;; Parameters:    Size  Location     Type
  6027 ;;  fp              1    wreg     PTR struct _IO_FILE
  6028 ;;		 -> NULL(0), 
  6029 ;;  fmt             2   57[BANK1 ] PTR const unsigned char 
  6030 ;;		 -> STR_2(18), STR_1(15), 
  6031 ;;  ap              1   59[BANK1 ] PTR PTR void 
  6032 ;;		 -> printf@ap(1), 
  6033 ;; Auto vars:     Size  Location     Type
  6034 ;;  fp              1   62[BANK1 ] PTR struct _IO_FILE
  6035 ;;		 -> NULL(0), 
  6036 ;;  cfmt            2   63[BANK1 ] PTR unsigned char 
  6037 ;;		 -> STR_2(18), STR_1(15), 
  6038 ;; Return value:  Size  Location     Type
  6039 ;;                  2   57[BANK1 ] int 
  6040 ;; Registers used:
  6041 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6042 ;; Tracked objects:
  6043 ;;		On entry : 0/0
  6044 ;;		On exit  : 0/0
  6045 ;;		Unchanged: 0/0
  6046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6047 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6048 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6049 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6050 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6051 ;;Total ram usage:        8 bytes
  6052 ;; Hardware stack levels used:    1
  6053 ;; Hardware stack levels required when called:   11
  6054 ;; This function calls:
  6055 ;;		_vfpfcnvrt
  6056 ;; This function is called by:
  6057 ;;		_printf
  6058 ;; This function uses a non-reentrant model
  6059 ;;
  6060                           
  6061                           
  6062                           ;psect for function _vfprintf
  6063  0800                     _vfprintf:	
  6064                           
  6065                           ;incstack = 0
  6066                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6067                           ;vfprintf@fp stored from wreg
  6068  0800  0021               	movlb	1	; select bank1
  6069  0801  00DE               	movwf	vfprintf@fp^(0+128)
  6070                           
  6071                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6072  0802  085A               	movf	(vfprintf@fmt+1)^(0+128),w
  6073  0803  00E0               	movwf	(vfprintf@cfmt+1)^(0+128)
  6074  0804  0859               	movf	vfprintf@fmt^(0+128),w
  6075  0805  00DF               	movwf	vfprintf@cfmt^(0+128)
  6076                           
  6077                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  6078  0806  0022               	movlb	2	; select bank2
  6079  0807  01D8               	clrf	_nout^(0+256)
  6080  0808  01D9               	clrf	(_nout+1)^(0+256)
  6081  0809                     l6847:	
  6082                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6083                           
  6084                           
  6085                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6086  0809  0021               	movlb	1	; select bank1
  6087  080A  085F               	movf	vfprintf@cfmt^(0+128),w
  6088  080B  0084               	movwf	4
  6089  080C  0860               	movf	(vfprintf@cfmt+1)^(0+128),w
  6090  080D  0085               	movwf	5
  6091  080E  0012               	moviw fsr0++
  6092  080F  1903               	btfsc	3,2
  6093  0810  282A               	goto	l6849
  6094                           
  6095                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  6096  0811  30DF               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  6097  0812  00DC               	movwf	??_vfprintf^(0+128)
  6098  0813  085C               	movf	??_vfprintf^(0+128),w
  6099  0814  0020               	movlb	0	; select bank0
  6100  0815  00DD               	movwf	vfpfcnvrt@fmt
  6101  0816  0021               	movlb	1	; select bank1
  6102  0817  085B               	movf	vfprintf@ap^(0+128),w
  6103  0818  00DD               	movwf	(??_vfprintf+1)^(0+128)
  6104  0819  085D               	movf	(??_vfprintf+1)^(0+128),w
  6105  081A  0020               	movlb	0	; select bank0
  6106  081B  00DE               	movwf	vfpfcnvrt@ap
  6107  081C  0021               	movlb	1	; select bank1
  6108  081D  085E               	movf	vfprintf@fp^(0+128),w
  6109  081E  318A  2259  3188   	fcall	_vfpfcnvrt
  6110  0821  0020               	movlb	0	; select bank0
  6111  0822  085D               	movf	?_vfpfcnvrt,w
  6112  0823  0022               	movlb	2	; select bank2
  6113  0824  07D8               	addwf	_nout^(0+256),f
  6114  0825  0020               	movlb	0	; select bank0
  6115  0826  085E               	movf	?_vfpfcnvrt+1,w
  6116  0827  0022               	movlb	2	; select bank2
  6117  0828  3DD9               	addwfc	(_nout+1)^(0+256),f
  6118  0829  2809               	goto	l6847
  6119  082A                     l6849:	
  6120                           
  6121                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  6122  082A  0022               	movlb	2	; select bank2
  6123  082B  0859               	movf	(_nout+1)^(0+256),w
  6124  082C  0021               	movlb	1	; select bank1
  6125  082D  00DA               	movwf	(?_vfprintf+1)^(0+128)
  6126  082E  0022               	movlb	2	; select bank2
  6127  082F  0858               	movf	_nout^(0+256),w
  6128  0830  0021               	movlb	1	; select bank1
  6129  0831  00D9               	movwf	?_vfprintf^(0+128)
  6130  0832  0008               	return
  6131  0833                     __end_of_vfprintf:	
  6132                           
  6133                           	psect	text8
  6134  0A59                     __ptext8:	
  6135 ;; *************** function _vfpfcnvrt *****************
  6136 ;; Defined at:
  6137 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6138 ;; Parameters:    Size  Location     Type
  6139 ;;  fp              1    wreg     PTR struct _IO_FILE
  6140 ;;		 -> NULL(0), 
  6141 ;;  fmt             1   61[BANK0 ] PTR PTR unsigned char 
  6142 ;;		 -> vfprintf@cfmt(2), 
  6143 ;;  ap              1   62[BANK0 ] PTR PTR void 
  6144 ;;		 -> printf@ap(1), 
  6145 ;; Auto vars:     Size  Location     Type
  6146 ;;  fp              1   79[BANK0 ] PTR struct _IO_FILE
  6147 ;;		 -> NULL(0), 
  6148 ;;  llu             8    0        unsigned long long 
  6149 ;;  ll              8    0        long long 
  6150 ;;  f               4   74[BANK0 ] long long 
  6151 ;;  ct              3   71[BANK0 ] unsigned char [3]
  6152 ;;  vp              2    0        PTR void 
  6153 ;;  i               2    0        int 
  6154 ;;  done            2    0        int 
  6155 ;;  cp              2    0        PTR unsigned char 
  6156 ;;  c               1   78[BANK0 ] unsigned char 
  6157 ;; Return value:  Size  Location     Type
  6158 ;;                  2   61[BANK0 ] int 
  6159 ;; Registers used:
  6160 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6161 ;; Tracked objects:
  6162 ;;		On entry : 0/0
  6163 ;;		On exit  : 0/0
  6164 ;;		Unchanged: 0/0
  6165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6166 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6167 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6168 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6169 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6170 ;;Total ram usage:       19 bytes
  6171 ;; Hardware stack levels used:    1
  6172 ;; Hardware stack levels required when called:   10
  6173 ;; This function calls:
  6174 ;;		_efgtoa
  6175 ;;		_fputc
  6176 ;;		_isupper
  6177 ;;		_strncmp
  6178 ;;		_tolower
  6179 ;; This function is called by:
  6180 ;;		_vfprintf
  6181 ;; This function uses a non-reentrant model
  6182 ;;
  6183                           
  6184                           
  6185                           ;psect for function _vfpfcnvrt
  6186  0A59                     _vfpfcnvrt:	
  6187                           
  6188                           ;incstack = 0
  6189                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6190                           ;vfpfcnvrt@fp stored from wreg
  6191  0A59  0020               	movlb	0	; select bank0
  6192  0A5A  00EF               	movwf	vfpfcnvrt@fp
  6193                           
  6194                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  6195  0A5B  085D               	movf	vfpfcnvrt@fmt,w
  6196  0A5C  0086               	movwf	6
  6197  0A5D  0187               	clrf	7
  6198  0A5E  3F40               	moviw [0]fsr1
  6199  0A5F  00DF               	movwf	??_vfpfcnvrt
  6200  0A60  3F41               	moviw [1]fsr1
  6201  0A61  00E0               	movwf	??_vfpfcnvrt+1
  6202  0A62  085F               	movf	??_vfpfcnvrt,w
  6203  0A63  0084               	movwf	4
  6204  0A64  0860               	movf	??_vfpfcnvrt+1,w
  6205  0A65  0085               	movwf	5
  6206  0A66  0012               	moviw fsr0++
  6207  0A67  3A25               	xorlw	37
  6208  0A68  1D03               	btfss	3,2
  6209  0A69  2BCF               	goto	l6833
  6210                           
  6211                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  6212  0A6A  085D               	movf	vfpfcnvrt@fmt,w
  6213  0A6B  0086               	movwf	6
  6214  0A6C  0187               	clrf	7
  6215  0A6D  3001               	movlw	1
  6216  0A6E  0781               	addwf	1,f
  6217  0A6F  3141               	addfsr 1,1
  6218  0A70  1803               	skipnc
  6219  0A71  0A81               	incf	1,f
  6220                           
  6221                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  6222  0A72  0022               	movlb	2	; select bank2
  6223  0A73  01DA               	clrf	_width^(0+256)
  6224  0A74  01DB               	clrf	(_width+1)^(0+256)
  6225  0A75  01DE               	clrf	_flags^(0+256)
  6226  0A76  01DF               	clrf	(_flags+1)^(0+256)
  6227                           
  6228                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  6229  0A77  30FF               	movlw	255
  6230  0A78  00DC               	movwf	_prec^(0+256)
  6231  0A79  30FF               	movlw	255
  6232  0A7A  00DD               	movwf	(_prec^(0+256)+1)
  6233                           
  6234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  6235  0A7B  0020               	movlb	0	; select bank0
  6236  0A7C  085D               	movf	vfpfcnvrt@fmt,w
  6237  0A7D  0086               	movwf	6
  6238  0A7E  0187               	clrf	7
  6239  0A7F  3F40               	moviw [0]fsr1
  6240  0A80  00DF               	movwf	??_vfpfcnvrt
  6241  0A81  3F41               	moviw [1]fsr1
  6242  0A82  00E0               	movwf	??_vfpfcnvrt+1
  6243  0A83  085F               	movf	??_vfpfcnvrt,w
  6244  0A84  0084               	movwf	4
  6245  0A85  0860               	movf	??_vfpfcnvrt+1,w
  6246  0A86  0085               	movwf	5
  6247  0A87  0800               	movf	0,w	;code access
  6248  0A88  00E1               	movwf	??_vfpfcnvrt+2
  6249  0A89  01E2               	clrf	??_vfpfcnvrt+3
  6250  0A8A  0861               	movf	??_vfpfcnvrt+2,w
  6251  0A8B  00F7               	movwf	tolower@c
  6252  0A8C  0862               	movf	??_vfpfcnvrt+3,w
  6253  0A8D  00F8               	movwf	tolower@c+1
  6254  0A8E  3190  2013  318A   	fcall	_tolower
  6255  0A91  0877               	movf	?_tolower,w
  6256  0A92  0020               	movlb	0	; select bank0
  6257  0A93  00E3               	movwf	??_vfpfcnvrt+4
  6258  0A94  0863               	movf	??_vfpfcnvrt+4,w
  6259  0A95  00E7               	movwf	vfpfcnvrt@ct
  6260                           
  6261                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  6262  0A96  0867               	movf	vfpfcnvrt@ct,w
  6263  0A97  1903               	btfsc	3,2
  6264  0A98  2AD6               	goto	l6787
  6265                           
  6266                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  6267  0A99  085D               	movf	vfpfcnvrt@fmt,w
  6268  0A9A  0086               	movwf	6
  6269  0A9B  0187               	clrf	7
  6270  0A9C  3F40               	moviw [0]fsr1
  6271  0A9D  00DF               	movwf	??_vfpfcnvrt
  6272  0A9E  3F41               	moviw [1]fsr1
  6273  0A9F  00E0               	movwf	??_vfpfcnvrt+1
  6274  0AA0  3001               	movlw	1
  6275  0AA1  075F               	addwf	??_vfpfcnvrt,w
  6276  0AA2  0084               	movwf	4
  6277  0AA3  0860               	movf	??_vfpfcnvrt+1,w
  6278  0AA4  1803               	skipnc
  6279  0AA5  0A60               	incf	??_vfpfcnvrt+1,w
  6280  0AA6  0085               	movwf	5
  6281  0AA7  0800               	movf	0,w	;code access
  6282  0AA8  00E1               	movwf	??_vfpfcnvrt+2
  6283  0AA9  01E2               	clrf	??_vfpfcnvrt+3
  6284  0AAA  0861               	movf	??_vfpfcnvrt+2,w
  6285  0AAB  00F7               	movwf	tolower@c
  6286  0AAC  0862               	movf	??_vfpfcnvrt+3,w
  6287  0AAD  00F8               	movwf	tolower@c+1
  6288  0AAE  3190  2013  318A   	fcall	_tolower
  6289  0AB1  0877               	movf	?_tolower,w
  6290  0AB2  0020               	movlb	0	; select bank0
  6291  0AB3  00E3               	movwf	??_vfpfcnvrt+4
  6292  0AB4  0863               	movf	??_vfpfcnvrt+4,w
  6293  0AB5  00E8               	movwf	vfpfcnvrt@ct+1
  6294                           
  6295                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  6296  0AB6  0868               	movf	vfpfcnvrt@ct+1,w
  6297  0AB7  1903               	btfsc	3,2
  6298  0AB8  2AD6               	goto	l6787
  6299                           
  6300                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  6301  0AB9  085D               	movf	vfpfcnvrt@fmt,w
  6302  0ABA  0086               	movwf	6
  6303  0ABB  0187               	clrf	7
  6304  0ABC  3F40               	moviw [0]fsr1
  6305  0ABD  00DF               	movwf	??_vfpfcnvrt
  6306  0ABE  3F41               	moviw [1]fsr1
  6307  0ABF  00E0               	movwf	??_vfpfcnvrt+1
  6308  0AC0  3002               	movlw	2
  6309  0AC1  075F               	addwf	??_vfpfcnvrt,w
  6310  0AC2  0084               	movwf	4
  6311  0AC3  0860               	movf	??_vfpfcnvrt+1,w
  6312  0AC4  1803               	skipnc
  6313  0AC5  0A60               	incf	??_vfpfcnvrt+1,w
  6314  0AC6  0085               	movwf	5
  6315  0AC7  0800               	movf	0,w	;code access
  6316  0AC8  00E1               	movwf	??_vfpfcnvrt+2
  6317  0AC9  01E2               	clrf	??_vfpfcnvrt+3
  6318  0ACA  0861               	movf	??_vfpfcnvrt+2,w
  6319  0ACB  00F7               	movwf	tolower@c
  6320  0ACC  0862               	movf	??_vfpfcnvrt+3,w
  6321  0ACD  00F8               	movwf	tolower@c+1
  6322  0ACE  3190  2013  318A   	fcall	_tolower
  6323  0AD1  0877               	movf	?_tolower,w
  6324  0AD2  0020               	movlb	0	; select bank0
  6325  0AD3  00E3               	movwf	??_vfpfcnvrt+4
  6326  0AD4  0863               	movf	??_vfpfcnvrt+4,w
  6327  0AD5  00E9               	movwf	vfpfcnvrt@ct+2
  6328  0AD6                     l6787:	
  6329                           
  6330                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  6331  0AD6  3066               	movlw	102
  6332  0AD7  0667               	xorwf	vfpfcnvrt@ct,w
  6333  0AD8  1D03               	btfss	3,2
  6334  0AD9  2B16               	goto	l6799
  6335                           
  6336                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  6337  0ADA  085D               	movf	vfpfcnvrt@fmt,w
  6338  0ADB  0086               	movwf	6
  6339  0ADC  0187               	clrf	7
  6340  0ADD  3F40               	moviw [0]fsr1
  6341  0ADE  00DF               	movwf	??_vfpfcnvrt
  6342  0ADF  3F41               	moviw [1]fsr1
  6343  0AE0  00E0               	movwf	??_vfpfcnvrt+1
  6344  0AE1  085F               	movf	??_vfpfcnvrt,w
  6345  0AE2  0084               	movwf	4
  6346  0AE3  0860               	movf	??_vfpfcnvrt+1,w
  6347  0AE4  0085               	movwf	5
  6348  0AE5  0800               	movf	0,w	;code access
  6349  0AE6  00E1               	movwf	??_vfpfcnvrt+2
  6350  0AE7  0861               	movf	??_vfpfcnvrt+2,w
  6351  0AE8  00EE               	movwf	vfpfcnvrt@c
  6352                           
  6353                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  6354  0AE9  085D               	movf	vfpfcnvrt@fmt,w
  6355  0AEA  0086               	movwf	6
  6356  0AEB  0187               	clrf	7
  6357  0AEC  3001               	movlw	1
  6358  0AED  0781               	addwf	1,f
  6359  0AEE  3141               	addfsr 1,1
  6360  0AEF  1803               	skipnc
  6361  0AF0  0A81               	incf	1,f
  6362                           
  6363                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6364  0AF1  085E               	movf	vfpfcnvrt@ap,w
  6365  0AF2  0086               	movwf	6
  6366  0AF3  0187               	clrf	7
  6367  0AF4  0801               	movf	1,w
  6368  0AF5  0084               	movwf	4
  6369  0AF6  0185               	clrf	5
  6370  0AF7  3004               	movlw	4
  6371  0AF8  0781               	addwf	1,f
  6372  0AF9  3F00               	moviw [0]fsr0
  6373  0AFA  00EA               	movwf	vfpfcnvrt@f
  6374  0AFB  3F01               	moviw [1]fsr0
  6375  0AFC  00EB               	movwf	vfpfcnvrt@f+1
  6376  0AFD  3F02               	moviw [2]fsr0
  6377  0AFE  00EC               	movwf	vfpfcnvrt@f+2
  6378  0AFF  3F03               	moviw [3]fsr0
  6379  0B00  00ED               	movwf	vfpfcnvrt@f+3
  6380                           
  6381                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  6382  0B01  086D               	movf	vfpfcnvrt@f+3,w
  6383  0B02  00D7               	movwf	efgtoa@f+3
  6384  0B03  086C               	movf	vfpfcnvrt@f+2,w
  6385  0B04  00D6               	movwf	efgtoa@f+2
  6386  0B05  086B               	movf	vfpfcnvrt@f+1,w
  6387  0B06  00D5               	movwf	efgtoa@f+1
  6388  0B07  086A               	movf	vfpfcnvrt@f,w
  6389  0B08  00D4               	movwf	efgtoa@f
  6390  0B09  086E               	movf	vfpfcnvrt@c,w
  6391  0B0A  00DF               	movwf	??_vfpfcnvrt
  6392  0B0B  085F               	movf	??_vfpfcnvrt,w
  6393  0B0C  00D8               	movwf	efgtoa@c
  6394  0B0D  086F               	movf	vfpfcnvrt@fp,w
  6395  0B0E  3180  205D         	fcall	_efgtoa
  6396  0B10  0020               	movlb	0	; select bank0
  6397  0B11  0855               	movf	?_efgtoa+1,w
  6398  0B12  00DE               	movwf	?_vfpfcnvrt+1
  6399  0B13  0854               	movf	?_efgtoa,w
  6400  0B14  00DD               	movwf	?_vfpfcnvrt
  6401  0B15  0008               	return
  6402  0B16                     l6799:	
  6403                           
  6404                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  6405  0B16  3031               	movlw	low (STR_11| (0+32768))
  6406  0B17  00F1               	movwf	strncmp@_r
  6407  0B18  30A0               	movlw	high (STR_11| (0+32768))
  6408  0B19  00F2               	movwf	strncmp@_r+1
  6409  0B1A  3002               	movlw	2
  6410  0B1B  00F3               	movwf	strncmp@n
  6411  0B1C  3000               	movlw	0
  6412  0B1D  00F4               	movwf	strncmp@n+1
  6413  0B1E  3067               	movlw	(low (vfpfcnvrt@ct| 0))& (0+255)
  6414  0B1F  3193  2359  318A   	fcall	_strncmp
  6415  0B22  0871               	movf	?_strncmp,w
  6416  0B23  0472               	iorwf	?_strncmp+1,w
  6417  0B24  1D03               	btfss	3,2
  6418  0B25  2B9C               	goto	l6817
  6419                           
  6420                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  6421  0B26  0020               	movlb	0	; select bank0
  6422  0B27  085D               	movf	vfpfcnvrt@fmt,w
  6423  0B28  0086               	movwf	6
  6424  0B29  0187               	clrf	7
  6425  0B2A  3F40               	moviw [0]fsr1
  6426  0B2B  00DF               	movwf	??_vfpfcnvrt
  6427  0B2C  3F41               	moviw [1]fsr1
  6428  0B2D  00E0               	movwf	??_vfpfcnvrt+1
  6429  0B2E  3001               	movlw	1
  6430  0B2F  075F               	addwf	??_vfpfcnvrt,w
  6431  0B30  0084               	movwf	4
  6432  0B31  0860               	movf	??_vfpfcnvrt+1,w
  6433  0B32  1803               	skipnc
  6434  0B33  0A60               	incf	??_vfpfcnvrt+1,w
  6435  0B34  0085               	movwf	5
  6436  0B35  0800               	movf	0,w	;code access
  6437  0B36  00E1               	movwf	??_vfpfcnvrt+2
  6438  0B37  0861               	movf	??_vfpfcnvrt+2,w
  6439  0B38  00EE               	movwf	vfpfcnvrt@c
  6440  0B39  085D               	movf	vfpfcnvrt@fmt,w
  6441  0B3A  0086               	movwf	6
  6442  0B3B  0187               	clrf	7
  6443  0B3C  3F40               	moviw [0]fsr1
  6444  0B3D  00DF               	movwf	??_vfpfcnvrt
  6445  0B3E  3F41               	moviw [1]fsr1
  6446  0B3F  00E0               	movwf	??_vfpfcnvrt+1
  6447  0B40  085F               	movf	??_vfpfcnvrt,w
  6448  0B41  0084               	movwf	4
  6449  0B42  0860               	movf	??_vfpfcnvrt+1,w
  6450  0B43  0085               	movwf	5
  6451  0B44  0800               	movf	0,w	;code access
  6452  0B45  3EBF               	addlw	191
  6453  0B46  00E1               	movwf	??_vfpfcnvrt+2
  6454  0B47  30FF               	movlw	255
  6455  0B48  1803               	skipnc
  6456  0B49  3000               	movlw	0
  6457  0B4A  00E2               	movwf	??_vfpfcnvrt+3
  6458  0B4B  3000               	movlw	0
  6459  0B4C  0262               	subwf	??_vfpfcnvrt+3,w
  6460  0B4D  301A               	movlw	26
  6461  0B4E  1903               	skipnz
  6462  0B4F  0261               	subwf	??_vfpfcnvrt+2,w
  6463  0B50  1803               	btfsc	3,0
  6464  0B51  2B54               	goto	u7380
  6465  0B52  3001               	movlw	1
  6466  0B53  2B55               	goto	u7390
  6467  0B54                     u7380:	
  6468  0B54  3000               	movlw	0
  6469  0B55                     u7390:	
  6470  0B55  00E3               	movwf	??_vfpfcnvrt+4
  6471  0B56  01E4               	clrf	??_vfpfcnvrt+5
  6472  0B57  0863               	movf	??_vfpfcnvrt+4,w
  6473  0B58  00E5               	movwf	_vfpfcnvrt$1529
  6474  0B59  0864               	movf	??_vfpfcnvrt+5,w
  6475  0B5A  00E6               	movwf	_vfpfcnvrt$1529+1
  6476  0B5B  0865               	movf	_vfpfcnvrt$1529,w
  6477  0B5C  0466               	iorwf	_vfpfcnvrt$1529+1,w
  6478  0B5D  1903               	btfsc	3,2
  6479  0B5E  2B6F               	goto	l6809
  6480                           
  6481                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  6482  0B5F  085E               	movf	vfpfcnvrt@ap,w
  6483  0B60  0086               	movwf	6
  6484  0B61  0187               	clrf	7
  6485  0B62  0801               	movf	1,w
  6486  0B63  0084               	movwf	4
  6487  0B64  0185               	clrf	5
  6488  0B65  3004               	movlw	4
  6489  0B66  0781               	addwf	1,f
  6490  0B67  3F00               	moviw [0]fsr0
  6491  0B68  00EA               	movwf	vfpfcnvrt@f
  6492  0B69  3F01               	moviw [1]fsr0
  6493  0B6A  00EB               	movwf	vfpfcnvrt@f+1
  6494  0B6B  3F02               	moviw [2]fsr0
  6495  0B6C  00EC               	movwf	vfpfcnvrt@f+2
  6496  0B6D  3F03               	moviw [3]fsr0
  6497  0B6E  2B7E               	goto	L1
  6498  0B6F                     l6809:	
  6499                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  6500                           
  6501                           
  6502                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6503  0B6F  085E               	movf	vfpfcnvrt@ap,w
  6504  0B70  0086               	movwf	6
  6505  0B71  0187               	clrf	7
  6506  0B72  0801               	movf	1,w
  6507  0B73  0084               	movwf	4
  6508  0B74  0185               	clrf	5
  6509  0B75  3004               	movlw	4
  6510  0B76  0781               	addwf	1,f
  6511  0B77  3F00               	moviw [0]fsr0
  6512  0B78  00EA               	movwf	vfpfcnvrt@f
  6513  0B79  3F01               	moviw [1]fsr0
  6514  0B7A  00EB               	movwf	vfpfcnvrt@f+1
  6515  0B7B  3F02               	moviw [2]fsr0
  6516  0B7C  00EC               	movwf	vfpfcnvrt@f+2
  6517  0B7D  3F03               	moviw [3]fsr0
  6518  0B7E                     L1:	
  6519  0B7E  00ED               	movwf	vfpfcnvrt@f+3
  6520                           
  6521                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  6522  0B7F  085D               	movf	vfpfcnvrt@fmt,w
  6523  0B80  0086               	movwf	6
  6524  0B81  0187               	clrf	7
  6525  0B82  3002               	movlw	2
  6526  0B83  0781               	addwf	1,f
  6527  0B84  3141               	addfsr 1,1
  6528  0B85  1803               	skipnc
  6529  0B86  0A81               	incf	1,f
  6530                           
  6531                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 938:       
      +                                return efgtoa(fp, f, c);
  6532  0B87  086D               	movf	vfpfcnvrt@f+3,w
  6533  0B88  00D7               	movwf	efgtoa@f+3
  6534  0B89  086C               	movf	vfpfcnvrt@f+2,w
  6535  0B8A  00D6               	movwf	efgtoa@f+2
  6536  0B8B  086B               	movf	vfpfcnvrt@f+1,w
  6537  0B8C  00D5               	movwf	efgtoa@f+1
  6538  0B8D  086A               	movf	vfpfcnvrt@f,w
  6539  0B8E  00D4               	movwf	efgtoa@f
  6540  0B8F  086E               	movf	vfpfcnvrt@c,w
  6541  0B90  00DF               	movwf	??_vfpfcnvrt
  6542  0B91  085F               	movf	??_vfpfcnvrt,w
  6543  0B92  00D8               	movwf	efgtoa@c
  6544  0B93  086F               	movf	vfpfcnvrt@fp,w
  6545  0B94  3180  205D         	fcall	_efgtoa
  6546  0B96  0020               	movlb	0	; select bank0
  6547  0B97  0855               	movf	?_efgtoa+1,w
  6548  0B98  00DE               	movwf	?_vfpfcnvrt+1
  6549  0B99  0854               	movf	?_efgtoa,w
  6550  0B9A  00DD               	movwf	?_vfpfcnvrt
  6551  0B9B  0008               	return
  6552  0B9C                     l6817:	
  6553                           
  6554                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  6555  0B9C  0020               	movlb	0	; select bank0
  6556  0B9D  085D               	movf	vfpfcnvrt@fmt,w
  6557  0B9E  0086               	movwf	6
  6558  0B9F  0187               	clrf	7
  6559  0BA0  3F40               	moviw [0]fsr1
  6560  0BA1  00DF               	movwf	??_vfpfcnvrt
  6561  0BA2  3F41               	moviw [1]fsr1
  6562  0BA3  00E0               	movwf	??_vfpfcnvrt+1
  6563  0BA4  085F               	movf	??_vfpfcnvrt,w
  6564  0BA5  0084               	movwf	4
  6565  0BA6  0860               	movf	??_vfpfcnvrt+1,w
  6566  0BA7  0085               	movwf	5
  6567  0BA8  0012               	moviw fsr0++
  6568  0BA9  3A25               	xorlw	37
  6569  0BAA  1D03               	btfss	3,2
  6570  0BAB  2BC4               	goto	l6827
  6571                           
  6572                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  6573  0BAC  085D               	movf	vfpfcnvrt@fmt,w
  6574  0BAD  0086               	movwf	6
  6575  0BAE  0187               	clrf	7
  6576  0BAF  3001               	movlw	1
  6577  0BB0  0781               	addwf	1,f
  6578  0BB1  3141               	addfsr 1,1
  6579  0BB2  1803               	skipnc
  6580  0BB3  0A81               	incf	1,f
  6581                           
  6582                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  6583  0BB4  3025               	movlw	37
  6584  0BB5  00F4               	movwf	fputc@c
  6585  0BB6  3000               	movlw	0
  6586  0BB7  00F5               	movwf	fputc@c+1
  6587  0BB8  086F               	movf	vfpfcnvrt@fp,w
  6588  0BB9  00DF               	movwf	??_vfpfcnvrt
  6589  0BBA  085F               	movf	??_vfpfcnvrt,w
  6590  0BBB  00F6               	movwf	fputc@fp
  6591  0BBC  3191  2195         	fcall	_fputc
  6592  0BBE                     l6823:	
  6593                           
  6594                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  6595  0BBE  3001               	movlw	1
  6596  0BBF  0020               	movlb	0	; select bank0
  6597  0BC0  00DD               	movwf	?_vfpfcnvrt
  6598  0BC1  3000               	movlw	0
  6599  0BC2  00DE               	movwf	?_vfpfcnvrt+1
  6600  0BC3  0008               	return
  6601  0BC4                     l6827:	
  6602                           
  6603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  6604  0BC4  085D               	movf	vfpfcnvrt@fmt,w
  6605  0BC5  0086               	movwf	6
  6606  0BC6  0187               	clrf	7
  6607  0BC7  3001               	movlw	1
  6608  0BC8  0781               	addwf	1,f
  6609  0BC9  3141               	addfsr 1,1
  6610  0BCA  1803               	skipnc
  6611  0BCB  0A81               	incf	1,f
  6612                           
  6613                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  6614  0BCC  01DD               	clrf	?_vfpfcnvrt
  6615  0BCD  01DE               	clrf	?_vfpfcnvrt+1
  6616  0BCE  0008               	return
  6617  0BCF                     l6833:	
  6618                           
  6619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  6620  0BCF  085D               	movf	vfpfcnvrt@fmt,w
  6621  0BD0  0086               	movwf	6
  6622  0BD1  0187               	clrf	7
  6623  0BD2  3F40               	moviw [0]fsr1
  6624  0BD3  00DF               	movwf	??_vfpfcnvrt
  6625  0BD4  3F41               	moviw [1]fsr1
  6626  0BD5  00E0               	movwf	??_vfpfcnvrt+1
  6627  0BD6  085F               	movf	??_vfpfcnvrt,w
  6628  0BD7  0084               	movwf	4
  6629  0BD8  0860               	movf	??_vfpfcnvrt+1,w
  6630  0BD9  0085               	movwf	5
  6631  0BDA  0800               	movf	0,w	;code access
  6632  0BDB  00E1               	movwf	??_vfpfcnvrt+2
  6633  0BDC  01E2               	clrf	??_vfpfcnvrt+3
  6634  0BDD  0861               	movf	??_vfpfcnvrt+2,w
  6635  0BDE  00F4               	movwf	fputc@c
  6636  0BDF  0862               	movf	??_vfpfcnvrt+3,w
  6637  0BE0  00F5               	movwf	fputc@c+1
  6638  0BE1  086F               	movf	vfpfcnvrt@fp,w
  6639  0BE2  00E3               	movwf	??_vfpfcnvrt+4
  6640  0BE3  0863               	movf	??_vfpfcnvrt+4,w
  6641  0BE4  00F6               	movwf	fputc@fp
  6642  0BE5  3191  2195  318A   	fcall	_fputc
  6643                           
  6644                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  6645  0BE8  0020               	movlb	0	; select bank0
  6646  0BE9  085D               	movf	vfpfcnvrt@fmt,w
  6647  0BEA  0086               	movwf	6
  6648  0BEB  0187               	clrf	7
  6649  0BEC  3001               	movlw	1
  6650  0BED  0781               	addwf	1,f
  6651  0BEE  3141               	addfsr 1,1
  6652  0BEF  1803               	skipnc
  6653  0BF0  0A81               	incf	1,f
  6654  0BF1  2BBE               	goto	l6823
  6655  0BF2                     __end_of_vfpfcnvrt:	
  6656                           
  6657                           	psect	text9
  6658  1359                     __ptext9:	
  6659 ;; *************** function _strncmp *****************
  6660 ;; Defined at:
  6661 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  6662 ;; Parameters:    Size  Location     Type
  6663 ;;  _l              1    wreg     PTR const unsigned char 
  6664 ;;		 -> vfpfcnvrt@ct(3), 
  6665 ;;  _r              2    1[COMMON] PTR const unsigned char 
  6666 ;;		 -> STR_13(3), 
  6667 ;;  n               2    3[COMMON] unsigned int 
  6668 ;; Auto vars:     Size  Location     Type
  6669 ;;  _l              1    6[COMMON] PTR const unsigned char 
  6670 ;;		 -> vfpfcnvrt@ct(3), 
  6671 ;;  r               2    7[COMMON] PTR const unsigned char 
  6672 ;;		 -> STR_13(3), 
  6673 ;;  l               1    9[COMMON] PTR const unsigned char 
  6674 ;;		 -> vfpfcnvrt@ct(3), 
  6675 ;; Return value:  Size  Location     Type
  6676 ;;                  2    1[COMMON] int 
  6677 ;; Registers used:
  6678 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  6679 ;; Tracked objects:
  6680 ;;		On entry : 0/0
  6681 ;;		On exit  : 0/0
  6682 ;;		Unchanged: 0/0
  6683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6684 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6685 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6686 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6687 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6688 ;;Total ram usage:        9 bytes
  6689 ;; Hardware stack levels used:    1
  6690 ;; Hardware stack levels required when called:    4
  6691 ;; This function calls:
  6692 ;;		Nothing
  6693 ;; This function is called by:
  6694 ;;		_vfpfcnvrt
  6695 ;; This function uses a non-reentrant model
  6696 ;;
  6697                           
  6698                           
  6699                           ;psect for function _strncmp
  6700  1359                     _strncmp:	
  6701                           
  6702                           ;incstack = 0
  6703                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  6704                           ;strncmp@_l stored from wreg
  6705  1359  00F6               	movwf	strncmp@_l
  6706  135A  0876               	movf	strncmp@_l,w
  6707  135B  00F5               	movwf	??_strncmp
  6708  135C  0875               	movf	??_strncmp,w
  6709  135D  00F9               	movwf	strncmp@l
  6710  135E  0872               	movf	strncmp@_r+1,w
  6711  135F  00F8               	movwf	strncmp@r+1
  6712  1360  0871               	movf	strncmp@_r,w
  6713  1361  00F7               	movwf	strncmp@r
  6714  1362  3001               	movlw	1
  6715  1363  02F3               	subwf	strncmp@n,f
  6716  1364  3000               	movlw	0
  6717  1365  3BF4               	subwfb	strncmp@n+1,f
  6718  1366  0A73               	incf	strncmp@n,w
  6719  1367  1D03               	skipz
  6720  1368  2B93               	goto	l5381
  6721  1369  0A74               	incf	strncmp@n+1,w
  6722  136A  1D03               	btfss	3,2
  6723  136B  2B93               	goto	l5381
  6724  136C  01F1               	clrf	?_strncmp
  6725  136D  01F2               	clrf	?_strncmp+1
  6726  136E  0008               	return
  6727  136F                     l5383:	
  6728  136F  0877               	movf	strncmp@r,w
  6729  1370  0084               	movwf	4
  6730  1371  0878               	movf	strncmp@r+1,w
  6731  1372  0085               	movwf	5
  6732  1373  0012               	moviw fsr0++
  6733  1374  1903               	btfsc	3,2
  6734  1375  2B99               	goto	l5389
  6735  1376  0873               	movf	strncmp@n,w
  6736  1377  0474               	iorwf	strncmp@n+1,w
  6737  1378  1903               	btfsc	3,2
  6738  1379  2B99               	goto	l5389
  6739  137A  0877               	movf	strncmp@r,w
  6740  137B  0084               	movwf	4
  6741  137C  0878               	movf	strncmp@r+1,w
  6742  137D  0085               	movwf	5
  6743  137E  0800               	movf	0,w	;code access
  6744  137F  00F5               	movwf	??_strncmp
  6745  1380  0879               	movf	strncmp@l,w
  6746  1381  0086               	movwf	6
  6747  1382  0187               	clrf	7
  6748  1383  0801               	movf	1,w
  6749  1384  0675               	xorwf	??_strncmp,w
  6750  1385  1D03               	btfss	3,2
  6751  1386  2B99               	goto	l5389
  6752  1387  3001               	movlw	1
  6753  1388  00F5               	movwf	??_strncmp
  6754  1389  0875               	movf	??_strncmp,w
  6755  138A  07F9               	addwf	strncmp@l,f
  6756  138B  3001               	movlw	1
  6757  138C  07F7               	addwf	strncmp@r,f
  6758  138D  3000               	movlw	0
  6759  138E  3DF8               	addwfc	strncmp@r+1,f
  6760  138F  3001               	movlw	1
  6761  1390  02F3               	subwf	strncmp@n,f
  6762  1391  3000               	movlw	0
  6763  1392  3BF4               	subwfb	strncmp@n+1,f
  6764  1393                     l5381:	
  6765  1393  0879               	movf	strncmp@l,w
  6766  1394  0086               	movwf	6
  6767  1395  0187               	clrf	7
  6768  1396  0801               	movf	1,w
  6769  1397  1D03               	btfss	3,2
  6770  1398  2B6F               	goto	l5383
  6771  1399                     l5389:	
  6772  1399  0879               	movf	strncmp@l,w
  6773  139A  0086               	movwf	6
  6774  139B  0187               	clrf	7
  6775  139C  0877               	movf	strncmp@r,w
  6776  139D  0084               	movwf	4
  6777  139E  0878               	movf	strncmp@r+1,w
  6778  139F  0085               	movwf	5
  6779  13A0  0800               	movf	0,w	;code access
  6780  13A1  0201               	subwf	1,w
  6781  13A2  00F1               	movwf	?_strncmp
  6782  13A3  01F2               	clrf	?_strncmp+1
  6783  13A4  1C03               	skipc
  6784  13A5  03F2               	decf	?_strncmp+1,f
  6785  13A6  0008               	return
  6786  13A7                     __end_of_strncmp:	
  6787                           
  6788                           	psect	text10
  6789  005D                     __ptext10:	
  6790 ;; *************** function _efgtoa *****************
  6791 ;; Defined at:
  6792 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6793 ;; Parameters:    Size  Location     Type
  6794 ;;  fp              1    wreg     PTR struct _IO_FILE
  6795 ;;		 -> NULL(0), 
  6796 ;;  f               4   52[BANK0 ] PTR struct _IO_FILE
  6797 ;;  c               1   56[BANK0 ] unsigned char 
  6798 ;; Auto vars:     Size  Location     Type
  6799 ;;  fp              1   28[BANK1 ] PTR struct _IO_FILE
  6800 ;;		 -> NULL(0), 
  6801 ;;  u               4   53[BANK1 ] PTR struct _IO_FILE
  6802 ;;  g               4   45[BANK1 ] PTR struct _IO_FILE
  6803 ;;  l               4   39[BANK1 ] PTR struct _IO_FILE
  6804 ;;  h               4   35[BANK1 ] PTR struct _IO_FILE
  6805 ;;  ou              4    0[BANK1 ] PTR struct _IO_FILE
  6806 ;;  n               2   51[BANK1 ] int 
  6807 ;;  e               2   49[BANK1 ] int 
  6808 ;;  i               2   43[BANK1 ] int 
  6809 ;;  w               2   32[BANK1 ] int 
  6810 ;;  p               2   29[BANK1 ] int 
  6811 ;;  sign            2   26[BANK1 ] int 
  6812 ;;  d               2   24[BANK1 ] int 
  6813 ;;  ne              2   22[BANK1 ] int 
  6814 ;;  m               2   20[BANK1 ] int 
  6815 ;;  pp              2   18[BANK1 ] int 
  6816 ;;  t               2   16[BANK1 ] int 
  6817 ;;  mode            1   34[BANK1 ] unsigned char 
  6818 ;;  nmode           1   31[BANK1 ] unsigned char 
  6819 ;; Return value:  Size  Location     Type
  6820 ;;                  2   52[BANK0 ] int 
  6821 ;; Registers used:
  6822 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6823 ;; Tracked objects:
  6824 ;;		On entry : 0/0
  6825 ;;		On exit  : 0/0
  6826 ;;		Unchanged: 0/0
  6827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6828 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6829 ;;      Locals:         0       0      57       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6830 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6831 ;;      Totals:         0       9      57       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6832 ;;Total ram usage:       66 bytes
  6833 ;; Hardware stack levels used:    1
  6834 ;; Hardware stack levels required when called:    9
  6835 ;; This function calls:
  6836 ;;		___awdiv
  6837 ;;		___awmod
  6838 ;;		___fladd
  6839 ;;		___fldiv
  6840 ;;		___fleq
  6841 ;;		___flge
  6842 ;;		___flmul
  6843 ;;		___flneg
  6844 ;;		___flsub
  6845 ;;		___fltol
  6846 ;;		___fpclassifyf
  6847 ;;		_floorf
  6848 ;;		_isupper
  6849 ;;		_pad
  6850 ;;		_strcpy
  6851 ;;		_tolower
  6852 ;; This function is called by:
  6853 ;;		_vfpfcnvrt
  6854 ;; This function uses a non-reentrant model
  6855 ;;
  6856                           
  6857                           
  6858                           ;psect for function _efgtoa
  6859  005D                     _efgtoa:	
  6860                           
  6861                           ;incstack = 0
  6862                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6863                           ;efgtoa@fp stored from wreg
  6864  005D  0021               	movlb	1	; select bank1
  6865  005E  00BC               	movwf	efgtoa@fp^(0+128)
  6866                           
  6867                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  6868  005F  01BA               	clrf	efgtoa@sign^(0+128)
  6869  0060  01BB               	clrf	(efgtoa@sign+1)^(0+128)
  6870                           
  6871                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  6872  0061  0020               	movlb	0	; select bank0
  6873  0062  0857               	movf	efgtoa@f+3,w
  6874  0063  0021               	movlb	1	; select bank1
  6875  0064  00D0               	movwf	(efgtoa@g+3)^(0+128)
  6876  0065  0020               	movlb	0	; select bank0
  6877  0066  0856               	movf	efgtoa@f+2,w
  6878  0067  0021               	movlb	1	; select bank1
  6879  0068  00CF               	movwf	(efgtoa@g+2)^(0+128)
  6880  0069  0020               	movlb	0	; select bank0
  6881  006A  0855               	movf	efgtoa@f+1,w
  6882  006B  0021               	movlb	1	; select bank1
  6883  006C  00CE               	movwf	(efgtoa@g+1)^(0+128)
  6884  006D  0020               	movlb	0	; select bank0
  6885  006E  0854               	movf	efgtoa@f,w
  6886  006F  0021               	movlb	1	; select bank1
  6887  0070  00CD               	movwf	efgtoa@g^(0+128)
  6888                           
  6889                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  6890  0071  0850               	movf	(efgtoa@g+3)^(0+128),w
  6891  0072  0020               	movlb	0	; select bank0
  6892  0073  00BD               	movwf	___flge@ff1+3
  6893  0074  0021               	movlb	1	; select bank1
  6894  0075  084F               	movf	(efgtoa@g+2)^(0+128),w
  6895  0076  0020               	movlb	0	; select bank0
  6896  0077  00BC               	movwf	___flge@ff1+2
  6897  0078  0021               	movlb	1	; select bank1
  6898  0079  084E               	movf	(efgtoa@g+1)^(0+128),w
  6899  007A  0020               	movlb	0	; select bank0
  6900  007B  00BB               	movwf	___flge@ff1+1
  6901  007C  0021               	movlb	1	; select bank1
  6902  007D  084D               	movf	efgtoa@g^(0+128),w
  6903  007E  0020               	movlb	0	; select bank0
  6904  007F  00BA               	movwf	___flge@ff1
  6905  0080  3000               	movlw	0
  6906  0081  00C1               	movwf	___flge@ff2+3
  6907  0082  3000               	movlw	0
  6908  0083  00C0               	movwf	___flge@ff2+2
  6909  0084  3000               	movlw	0
  6910  0085  00BF               	movwf	___flge@ff2+1
  6911  0086  3000               	movlw	0
  6912  0087  00BE               	movwf	___flge@ff2
  6913  0088  3195  2577  3180   	fcall	___flge
  6914  008B  1803               	btfsc	3,0
  6915  008C  28A6               	goto	l6487
  6916                           
  6917                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  6918  008D  3001               	movlw	1
  6919  008E  0021               	movlb	1	; select bank1
  6920  008F  00BA               	movwf	efgtoa@sign^(0+128)
  6921  0090  3000               	movlw	0
  6922  0091  00BB               	movwf	(efgtoa@sign^(0+128)+1)
  6923                           
  6924                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  6925  0092  0850               	movf	(efgtoa@g+3)^(0+128),w
  6926  0093  00F4               	movwf	___flneg@f1+3
  6927  0094  084F               	movf	(efgtoa@g+2)^(0+128),w
  6928  0095  00F3               	movwf	___flneg@f1+2
  6929  0096  084E               	movf	(efgtoa@g+1)^(0+128),w
  6930  0097  00F2               	movwf	___flneg@f1+1
  6931  0098  084D               	movf	efgtoa@g^(0+128),w
  6932  0099  00F1               	movwf	___flneg@f1
  6933  009A  319E  261B  3180   	fcall	___flneg
  6934  009D  0874               	movf	?___flneg+3,w
  6935  009E  0021               	movlb	1	; select bank1
  6936  009F  00D0               	movwf	(efgtoa@g+3)^(0+128)
  6937  00A0  0873               	movf	?___flneg+2,w
  6938  00A1  00CF               	movwf	(efgtoa@g+2)^(0+128)
  6939  00A2  0872               	movf	?___flneg+1,w
  6940  00A3  00CE               	movwf	(efgtoa@g+1)^(0+128)
  6941  00A4  0871               	movf	?___flneg,w
  6942  00A5  00CD               	movwf	efgtoa@g^(0+128)
  6943  00A6                     l6487:	
  6944                           
  6945                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  6946  00A6  0021               	movlb	1	; select bank1
  6947  00A7  01D3               	clrf	efgtoa@n^(0+128)
  6948  00A8  01D4               	clrf	(efgtoa@n+1)^(0+128)
  6949                           
  6950                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  6951  00A9  0022               	movlb	2	; select bank2
  6952  00AA  085B               	movf	(_width+1)^(0+256),w
  6953  00AB  0021               	movlb	1	; select bank1
  6954  00AC  00C1               	movwf	(efgtoa@w+1)^(0+128)
  6955  00AD  0022               	movlb	2	; select bank2
  6956  00AE  085A               	movf	_width^(0+256),w
  6957  00AF  0021               	movlb	1	; select bank1
  6958  00B0  00C0               	movwf	efgtoa@w^(0+128)
  6959                           
  6960                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  6961  00B1  083A               	movf	efgtoa@sign^(0+128),w
  6962  00B2  043B               	iorwf	(efgtoa@sign+1)^(0+128),w
  6963  00B3  1D03               	btfss	3,2
  6964  00B4  28B8               	goto	l6495
  6965  00B5  0022               	movlb	2	; select bank2
  6966  00B6  1D5E               	btfss	_flags^(0+256),2
  6967  00B7  28D2               	goto	l6507
  6968  00B8                     l6495:	
  6969                           
  6970                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  6971  00B8  0021               	movlb	1	; select bank1
  6972  00B9  083A               	movf	efgtoa@sign^(0+128),w
  6973  00BA  043B               	iorwf	(efgtoa@sign+1)^(0+128),w
  6974  00BB  1D03               	btfss	3,2
  6975  00BC  28BF               	goto	l6499
  6976  00BD  302B               	movlw	43
  6977  00BE  28C0               	goto	L2
  6978  00BF                     l6499:	
  6979  00BF  302D               	movlw	45
  6980  00C0                     L2:	
  6981  00C0  00A4               	movwf	_efgtoa$1500^(0+128)
  6982  00C1  3000               	movlw	0
  6983  00C2  00A5               	movwf	(_efgtoa$1500^(0+128)+1)
  6984  00C3  0824               	movf	_efgtoa$1500^(0+128),w
  6985  00C4  0020               	movlb	0	; select bank0
  6986  00C5  00D9               	movwf	??_efgtoa
  6987  00C6  0859               	movf	??_efgtoa,w
  6988  00C7  0024               	movlb	4	; select bank4
  6989  00C8  00A0               	movwf	_dbuf^(0+512)
  6990                           
  6991                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  6992  00C9  3001               	movlw	1
  6993  00CA  0021               	movlb	1	; select bank1
  6994  00CB  07D3               	addwf	efgtoa@n^(0+128),f
  6995  00CC  3000               	movlw	0
  6996  00CD  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  6997                           
  6998                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  6999  00CE  30FF               	movlw	255
  7000  00CF  07C0               	addwf	efgtoa@w^(0+128),f
  7001  00D0  30FF               	movlw	255
  7002  00D1  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  7003  00D2                     l6507:	
  7004                           
  7005                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  7006  00D2  0021               	movlb	1	; select bank1
  7007  00D3  0850               	movf	(efgtoa@g+3)^(0+128),w
  7008  00D4  00F4               	movwf	___fpclassifyf@x+3
  7009  00D5  084F               	movf	(efgtoa@g+2)^(0+128),w
  7010  00D6  00F3               	movwf	___fpclassifyf@x+2
  7011  00D7  084E               	movf	(efgtoa@g+1)^(0+128),w
  7012  00D8  00F2               	movwf	___fpclassifyf@x+1
  7013  00D9  084D               	movf	efgtoa@g^(0+128),w
  7014  00DA  00F1               	movwf	___fpclassifyf@x
  7015  00DB  3194  24FF  3180   	fcall	___fpclassifyf
  7016  00DE  0371               	decf	?___fpclassifyf,w
  7017  00DF  0472               	iorwf	?___fpclassifyf+1,w
  7018  00E0  1D03               	btfss	3,2
  7019  00E1  292A               	goto	l6525
  7020  00E2  0020               	movlb	0	; select bank0
  7021  00E3  0858               	movf	efgtoa@c,w
  7022  00E4  3EBF               	addlw	191
  7023  00E5  00D9               	movwf	??_efgtoa
  7024  00E6  30FF               	movlw	255
  7025  00E7  1803               	skipnc
  7026  00E8  3000               	movlw	0
  7027  00E9  00DA               	movwf	??_efgtoa+1
  7028  00EA  3000               	movlw	0
  7029  00EB  025A               	subwf	??_efgtoa+1,w
  7030  00EC  301A               	movlw	26
  7031  00ED  1903               	skipnz
  7032  00EE  0259               	subwf	??_efgtoa,w
  7033  00EF  1803               	btfsc	3,0
  7034  00F0  28F3               	goto	u6860
  7035  00F1  3001               	movlw	1
  7036  00F2  28F4               	goto	u6870
  7037  00F3                     u6860:	
  7038  00F3  3000               	movlw	0
  7039  00F4                     u6870:	
  7040  00F4  00DB               	movwf	??_efgtoa+2
  7041  00F5  01DC               	clrf	??_efgtoa+3
  7042  00F6  085B               	movf	??_efgtoa+2,w
  7043  00F7  0021               	movlb	1	; select bank1
  7044  00F8  00A6               	movwf	_efgtoa$1501^(0+128)
  7045  00F9  0020               	movlb	0	; select bank0
  7046  00FA  085C               	movf	??_efgtoa+3,w
  7047  00FB  0021               	movlb	1	; select bank1
  7048  00FC  00A7               	movwf	(_efgtoa$1501+1)^(0+128)
  7049  00FD  0826               	movf	_efgtoa$1501^(0+128),w
  7050  00FE  0427               	iorwf	(_efgtoa$1501+1)^(0+128),w
  7051  00FF  1903               	btfsc	3,2
  7052  0100  2905               	goto	l6517
  7053                           
  7054                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  7055  0101  3021               	movlw	low (STR_3| (0+32768))
  7056  0102  00F1               	movwf	strcpy@src
  7057  0103  30A0               	movlw	high (STR_3| (0+32768))
  7058  0104  2908               	goto	L3
  7059  0105                     l6517:	
  7060                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  7061                           
  7062                           
  7063                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  7064  0105  3029               	movlw	low (STR_4| (0+32768))
  7065  0106  00F1               	movwf	strcpy@src
  7066  0107  30A0               	movlw	high (STR_4| (0+32768))
  7067  0108                     L3:	
  7068  0108  00F2               	movwf	strcpy@src+1
  7069  0109  0853               	movf	efgtoa@n^(0+128),w
  7070  010A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7071  010B  319F  27C1  3180   	fcall	_strcpy
  7072                           
  7073                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  7074  010E  30FD               	movlw	253
  7075  010F  0021               	movlb	1	; select bank1
  7076  0110  07C0               	addwf	efgtoa@w^(0+128),f
  7077  0111  30FF               	movlw	255
  7078  0112  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  7079                           
  7080                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  7081  0113  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  7082  0114  0020               	movlb	0	; select bank0
  7083  0115  00D9               	movwf	??_efgtoa
  7084  0116  0859               	movf	??_efgtoa,w
  7085  0117  00A8               	movwf	pad@buf
  7086  0118  0021               	movlb	1	; select bank1
  7087  0119  0841               	movf	(efgtoa@w+1)^(0+128),w
  7088  011A  0020               	movlb	0	; select bank0
  7089  011B  00AA               	movwf	pad@p+1
  7090  011C  0021               	movlb	1	; select bank1
  7091  011D  0840               	movf	efgtoa@w^(0+128),w
  7092  011E  0020               	movlb	0	; select bank0
  7093  011F  00A9               	movwf	pad@p
  7094  0120  0021               	movlb	1	; select bank1
  7095  0121  083C               	movf	efgtoa@fp^(0+128),w
  7096  0122  3193  23A7         	fcall	_pad
  7097  0124  0020               	movlb	0	; select bank0
  7098  0125  0829               	movf	?_pad+1,w
  7099  0126  00D5               	movwf	?_efgtoa+1
  7100  0127  0828               	movf	?_pad,w
  7101  0128  00D4               	movwf	?_efgtoa
  7102  0129  0008               	return
  7103  012A                     l6525:	
  7104                           
  7105                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  7106  012A  0021               	movlb	1	; select bank1
  7107  012B  0850               	movf	(efgtoa@g+3)^(0+128),w
  7108  012C  00F4               	movwf	___fpclassifyf@x+3
  7109  012D  084F               	movf	(efgtoa@g+2)^(0+128),w
  7110  012E  00F3               	movwf	___fpclassifyf@x+2
  7111  012F  084E               	movf	(efgtoa@g+1)^(0+128),w
  7112  0130  00F2               	movwf	___fpclassifyf@x+1
  7113  0131  084D               	movf	efgtoa@g^(0+128),w
  7114  0132  00F1               	movwf	___fpclassifyf@x
  7115  0133  3194  24FF  3180   	fcall	___fpclassifyf
  7116  0136  0871               	movf	?___fpclassifyf,w
  7117  0137  0472               	iorwf	?___fpclassifyf+1,w
  7118  0138  1D03               	btfss	3,2
  7119  0139  2982               	goto	l6543
  7120  013A  0020               	movlb	0	; select bank0
  7121  013B  0858               	movf	efgtoa@c,w
  7122  013C  3EBF               	addlw	191
  7123  013D  00D9               	movwf	??_efgtoa
  7124  013E  30FF               	movlw	255
  7125  013F  1803               	skipnc
  7126  0140  3000               	movlw	0
  7127  0141  00DA               	movwf	??_efgtoa+1
  7128  0142  3000               	movlw	0
  7129  0143  025A               	subwf	??_efgtoa+1,w
  7130  0144  301A               	movlw	26
  7131  0145  1903               	skipnz
  7132  0146  0259               	subwf	??_efgtoa,w
  7133  0147  1803               	btfsc	3,0
  7134  0148  294B               	goto	u6900
  7135  0149  3001               	movlw	1
  7136  014A  294C               	goto	u6910
  7137  014B                     u6900:	
  7138  014B  3000               	movlw	0
  7139  014C                     u6910:	
  7140  014C  00DB               	movwf	??_efgtoa+2
  7141  014D  01DC               	clrf	??_efgtoa+3
  7142  014E  085B               	movf	??_efgtoa+2,w
  7143  014F  0021               	movlb	1	; select bank1
  7144  0150  00A8               	movwf	_efgtoa$1506^(0+128)
  7145  0151  0020               	movlb	0	; select bank0
  7146  0152  085C               	movf	??_efgtoa+3,w
  7147  0153  0021               	movlb	1	; select bank1
  7148  0154  00A9               	movwf	(_efgtoa$1506+1)^(0+128)
  7149  0155  0828               	movf	_efgtoa$1506^(0+128),w
  7150  0156  0429               	iorwf	(_efgtoa$1506+1)^(0+128),w
  7151  0157  1903               	btfsc	3,2
  7152  0158  295D               	goto	l6535
  7153                           
  7154                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  7155  0159  3025               	movlw	low (STR_7| (0+32768))
  7156  015A  00F1               	movwf	strcpy@src
  7157  015B  30A0               	movlw	high (STR_7| (0+32768))
  7158  015C  2960               	goto	L4
  7159  015D                     l6535:	
  7160                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  7161                           
  7162                           
  7163                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  7164  015D  302D               	movlw	low (STR_8| (0+32768))
  7165  015E  00F1               	movwf	strcpy@src
  7166  015F  30A0               	movlw	high (STR_8| (0+32768))
  7167  0160                     L4:	
  7168  0160  00F2               	movwf	strcpy@src+1
  7169  0161  0853               	movf	efgtoa@n^(0+128),w
  7170  0162  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7171  0163  319F  27C1  3180   	fcall	_strcpy
  7172                           
  7173                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 358:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  7174  0166  30FD               	movlw	253
  7175  0167  0021               	movlb	1	; select bank1
  7176  0168  07C0               	addwf	efgtoa@w^(0+128),f
  7177  0169  30FF               	movlw	255
  7178  016A  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  7179                           
  7180                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 359:       
      +                            return pad(fp, &dbuf[0], w);
  7181  016B  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  7182  016C  0020               	movlb	0	; select bank0
  7183  016D  00D9               	movwf	??_efgtoa
  7184  016E  0859               	movf	??_efgtoa,w
  7185  016F  00A8               	movwf	pad@buf
  7186  0170  0021               	movlb	1	; select bank1
  7187  0171  0841               	movf	(efgtoa@w+1)^(0+128),w
  7188  0172  0020               	movlb	0	; select bank0
  7189  0173  00AA               	movwf	pad@p+1
  7190  0174  0021               	movlb	1	; select bank1
  7191  0175  0840               	movf	efgtoa@w^(0+128),w
  7192  0176  0020               	movlb	0	; select bank0
  7193  0177  00A9               	movwf	pad@p
  7194  0178  0021               	movlb	1	; select bank1
  7195  0179  083C               	movf	efgtoa@fp^(0+128),w
  7196  017A  3193  23A7         	fcall	_pad
  7197  017C  0020               	movlb	0	; select bank0
  7198  017D  0829               	movf	?_pad+1,w
  7199  017E  00D5               	movwf	?_efgtoa+1
  7200  017F  0828               	movf	?_pad,w
  7201  0180  00D4               	movwf	?_efgtoa
  7202  0181  0008               	return
  7203  0182                     l6543:	
  7204                           
  7205                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  7206  0182  303F               	movlw	63
  7207  0183  0021               	movlb	1	; select bank1
  7208  0184  00D8               	movwf	(efgtoa@u+3)^(0+128)
  7209  0185  3080               	movlw	128
  7210  0186  00D7               	movwf	(efgtoa@u+2)^(0+128)
  7211  0187  3000               	movlw	0
  7212  0188  00D6               	movwf	(efgtoa@u+1)^(0+128)
  7213  0189  3000               	movlw	0
  7214  018A  00D5               	movwf	efgtoa@u^(0+128)
  7215                           
  7216                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  7217  018B  01D1               	clrf	efgtoa@e^(0+128)
  7218  018C  01D2               	clrf	(efgtoa@e+1)^(0+128)
  7219                           
  7220                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  7221  018D  0850               	movf	(efgtoa@g+3)^(0+128),w
  7222  018E  00F4               	movwf	___fleq@ff1+3
  7223  018F  084F               	movf	(efgtoa@g+2)^(0+128),w
  7224  0190  00F3               	movwf	___fleq@ff1+2
  7225  0191  084E               	movf	(efgtoa@g+1)^(0+128),w
  7226  0192  00F2               	movwf	___fleq@ff1+1
  7227  0193  084D               	movf	efgtoa@g^(0+128),w
  7228  0194  00F1               	movwf	___fleq@ff1
  7229  0195  3000               	movlw	0
  7230  0196  00F8               	movwf	___fleq@ff2+3
  7231  0197  3000               	movlw	0
  7232  0198  00F7               	movwf	___fleq@ff2+2
  7233  0199  3000               	movlw	0
  7234  019A  00F6               	movwf	___fleq@ff2+1
  7235  019B  3000               	movlw	0
  7236  019C  00F5               	movwf	___fleq@ff2
  7237  019D  3193  2310  3180   	fcall	___fleq
  7238  01A0  1C03               	btfss	3,0
  7239  01A1  29D3               	goto	l6555
  7240  01A2  2A62               	goto	l6563
  7241  01A3                     l6551:	
  7242                           
  7243                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  7244  01A3  3041               	movlw	65
  7245  01A4  0020               	movlb	0	; select bank0
  7246  01A5  00A3               	movwf	___flmul@b+3
  7247  01A6  3020               	movlw	32
  7248  01A7  00A2               	movwf	___flmul@b+2
  7249  01A8  3000               	movlw	0
  7250  01A9  00A1               	movwf	___flmul@b+1
  7251  01AA  3000               	movlw	0
  7252  01AB  00A0               	movwf	___flmul@b
  7253  01AC  0021               	movlb	1	; select bank1
  7254  01AD  0858               	movf	(efgtoa@u+3)^(0+128),w
  7255  01AE  0020               	movlb	0	; select bank0
  7256  01AF  00A7               	movwf	___flmul@a+3
  7257  01B0  0021               	movlb	1	; select bank1
  7258  01B1  0857               	movf	(efgtoa@u+2)^(0+128),w
  7259  01B2  0020               	movlb	0	; select bank0
  7260  01B3  00A6               	movwf	___flmul@a+2
  7261  01B4  0021               	movlb	1	; select bank1
  7262  01B5  0856               	movf	(efgtoa@u+1)^(0+128),w
  7263  01B6  0020               	movlb	0	; select bank0
  7264  01B7  00A5               	movwf	___flmul@a+1
  7265  01B8  0021               	movlb	1	; select bank1
  7266  01B9  0855               	movf	efgtoa@u^(0+128),w
  7267  01BA  0020               	movlb	0	; select bank0
  7268  01BB  00A4               	movwf	___flmul@a
  7269  01BC  318D  25D4  3180   	fcall	___flmul
  7270  01BF  0020               	movlb	0	; select bank0
  7271  01C0  0823               	movf	?___flmul+3,w
  7272  01C1  0021               	movlb	1	; select bank1
  7273  01C2  00D8               	movwf	(efgtoa@u+3)^(0+128)
  7274  01C3  0020               	movlb	0	; select bank0
  7275  01C4  0822               	movf	?___flmul+2,w
  7276  01C5  0021               	movlb	1	; select bank1
  7277  01C6  00D7               	movwf	(efgtoa@u+2)^(0+128)
  7278  01C7  0020               	movlb	0	; select bank0
  7279  01C8  0821               	movf	?___flmul+1,w
  7280  01C9  0021               	movlb	1	; select bank1
  7281  01CA  00D6               	movwf	(efgtoa@u+1)^(0+128)
  7282  01CB  0020               	movlb	0	; select bank0
  7283  01CC  0820               	movf	?___flmul,w
  7284  01CD  0021               	movlb	1	; select bank1
  7285  01CE  00D5               	movwf	efgtoa@u^(0+128)
  7286                           
  7287                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  7288  01CF  3001               	movlw	1
  7289  01D0  07D1               	addwf	efgtoa@e^(0+128),f
  7290  01D1  3000               	movlw	0
  7291  01D2  3DD2               	addwfc	(efgtoa@e+1)^(0+128),f
  7292  01D3                     l6555:	
  7293                           
  7294                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  7295  01D3  0021               	movlb	1	; select bank1
  7296  01D4  0850               	movf	(efgtoa@g+3)^(0+128),w
  7297  01D5  0020               	movlb	0	; select bank0
  7298  01D6  00BD               	movwf	___flge@ff1+3
  7299  01D7  0021               	movlb	1	; select bank1
  7300  01D8  084F               	movf	(efgtoa@g+2)^(0+128),w
  7301  01D9  0020               	movlb	0	; select bank0
  7302  01DA  00BC               	movwf	___flge@ff1+2
  7303  01DB  0021               	movlb	1	; select bank1
  7304  01DC  084E               	movf	(efgtoa@g+1)^(0+128),w
  7305  01DD  0020               	movlb	0	; select bank0
  7306  01DE  00BB               	movwf	___flge@ff1+1
  7307  01DF  0021               	movlb	1	; select bank1
  7308  01E0  084D               	movf	efgtoa@g^(0+128),w
  7309  01E1  0020               	movlb	0	; select bank0
  7310  01E2  00BA               	movwf	___flge@ff1
  7311  01E3  3041               	movlw	65
  7312  01E4  00A3               	movwf	___flmul@b+3
  7313  01E5  3020               	movlw	32
  7314  01E6  00A2               	movwf	___flmul@b+2
  7315  01E7  3000               	movlw	0
  7316  01E8  00A1               	movwf	___flmul@b+1
  7317  01E9  3000               	movlw	0
  7318  01EA  00A0               	movwf	___flmul@b
  7319  01EB  0021               	movlb	1	; select bank1
  7320  01EC  0858               	movf	(efgtoa@u+3)^(0+128),w
  7321  01ED  0020               	movlb	0	; select bank0
  7322  01EE  00A7               	movwf	___flmul@a+3
  7323  01EF  0021               	movlb	1	; select bank1
  7324  01F0  0857               	movf	(efgtoa@u+2)^(0+128),w
  7325  01F1  0020               	movlb	0	; select bank0
  7326  01F2  00A6               	movwf	___flmul@a+2
  7327  01F3  0021               	movlb	1	; select bank1
  7328  01F4  0856               	movf	(efgtoa@u+1)^(0+128),w
  7329  01F5  0020               	movlb	0	; select bank0
  7330  01F6  00A5               	movwf	___flmul@a+1
  7331  01F7  0021               	movlb	1	; select bank1
  7332  01F8  0855               	movf	efgtoa@u^(0+128),w
  7333  01F9  0020               	movlb	0	; select bank0
  7334  01FA  00A4               	movwf	___flmul@a
  7335  01FB  318D  25D4  3180   	fcall	___flmul
  7336  01FE  0020               	movlb	0	; select bank0
  7337  01FF  0823               	movf	?___flmul+3,w
  7338  0200  00C1               	movwf	___flge@ff2+3
  7339  0201  0822               	movf	?___flmul+2,w
  7340  0202  00C0               	movwf	___flge@ff2+2
  7341  0203  0821               	movf	?___flmul+1,w
  7342  0204  00BF               	movwf	___flge@ff2+1
  7343  0205  0820               	movf	?___flmul,w
  7344  0206  00BE               	movwf	___flge@ff2
  7345  0207  3195  2577  3180   	fcall	___flge
  7346  020A  1C03               	btfss	3,0
  7347  020B  2A3D               	goto	l6561
  7348  020C  29A3               	goto	l6551
  7349  020D                     l6557:	
  7350                           
  7351                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  7352  020D  3041               	movlw	65
  7353  020E  0020               	movlb	0	; select bank0
  7354  020F  00A9               	movwf	___fldiv@a+3
  7355  0210  3020               	movlw	32
  7356  0211  00A8               	movwf	___fldiv@a+2
  7357  0212  3000               	movlw	0
  7358  0213  00A7               	movwf	___fldiv@a+1
  7359  0214  3000               	movlw	0
  7360  0215  00A6               	movwf	___fldiv@a
  7361  0216  0021               	movlb	1	; select bank1
  7362  0217  0858               	movf	(efgtoa@u+3)^(0+128),w
  7363  0218  0020               	movlb	0	; select bank0
  7364  0219  00AD               	movwf	___fldiv@b+3
  7365  021A  0021               	movlb	1	; select bank1
  7366  021B  0857               	movf	(efgtoa@u+2)^(0+128),w
  7367  021C  0020               	movlb	0	; select bank0
  7368  021D  00AC               	movwf	___fldiv@b+2
  7369  021E  0021               	movlb	1	; select bank1
  7370  021F  0856               	movf	(efgtoa@u+1)^(0+128),w
  7371  0220  0020               	movlb	0	; select bank0
  7372  0221  00AB               	movwf	___fldiv@b+1
  7373  0222  0021               	movlb	1	; select bank1
  7374  0223  0855               	movf	efgtoa@u^(0+128),w
  7375  0224  0020               	movlb	0	; select bank0
  7376  0225  00AA               	movwf	___fldiv@b
  7377  0226  3188  20DF  3180   	fcall	___fldiv
  7378  0229  0020               	movlb	0	; select bank0
  7379  022A  0829               	movf	?___fldiv+3,w
  7380  022B  0021               	movlb	1	; select bank1
  7381  022C  00D8               	movwf	(efgtoa@u+3)^(0+128)
  7382  022D  0020               	movlb	0	; select bank0
  7383  022E  0828               	movf	?___fldiv+2,w
  7384  022F  0021               	movlb	1	; select bank1
  7385  0230  00D7               	movwf	(efgtoa@u+2)^(0+128)
  7386  0231  0020               	movlb	0	; select bank0
  7387  0232  0827               	movf	?___fldiv+1,w
  7388  0233  0021               	movlb	1	; select bank1
  7389  0234  00D6               	movwf	(efgtoa@u+1)^(0+128)
  7390  0235  0020               	movlb	0	; select bank0
  7391  0236  0826               	movf	?___fldiv,w
  7392  0237  0021               	movlb	1	; select bank1
  7393  0238  00D5               	movwf	efgtoa@u^(0+128)
  7394                           
  7395                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  7396  0239  30FF               	movlw	255
  7397  023A  07D1               	addwf	efgtoa@e^(0+128),f
  7398  023B  30FF               	movlw	255
  7399  023C  3DD2               	addwfc	(efgtoa@e+1)^(0+128),f
  7400  023D                     l6561:	
  7401                           
  7402                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  7403  023D  0021               	movlb	1	; select bank1
  7404  023E  0850               	movf	(efgtoa@g+3)^(0+128),w
  7405  023F  0020               	movlb	0	; select bank0
  7406  0240  00BD               	movwf	___flge@ff1+3
  7407  0241  0021               	movlb	1	; select bank1
  7408  0242  084F               	movf	(efgtoa@g+2)^(0+128),w
  7409  0243  0020               	movlb	0	; select bank0
  7410  0244  00BC               	movwf	___flge@ff1+2
  7411  0245  0021               	movlb	1	; select bank1
  7412  0246  084E               	movf	(efgtoa@g+1)^(0+128),w
  7413  0247  0020               	movlb	0	; select bank0
  7414  0248  00BB               	movwf	___flge@ff1+1
  7415  0249  0021               	movlb	1	; select bank1
  7416  024A  084D               	movf	efgtoa@g^(0+128),w
  7417  024B  0020               	movlb	0	; select bank0
  7418  024C  00BA               	movwf	___flge@ff1
  7419  024D  0021               	movlb	1	; select bank1
  7420  024E  0858               	movf	(efgtoa@u+3)^(0+128),w
  7421  024F  0020               	movlb	0	; select bank0
  7422  0250  00C1               	movwf	___flge@ff2+3
  7423  0251  0021               	movlb	1	; select bank1
  7424  0252  0857               	movf	(efgtoa@u+2)^(0+128),w
  7425  0253  0020               	movlb	0	; select bank0
  7426  0254  00C0               	movwf	___flge@ff2+2
  7427  0255  0021               	movlb	1	; select bank1
  7428  0256  0856               	movf	(efgtoa@u+1)^(0+128),w
  7429  0257  0020               	movlb	0	; select bank0
  7430  0258  00BF               	movwf	___flge@ff2+1
  7431  0259  0021               	movlb	1	; select bank1
  7432  025A  0855               	movf	efgtoa@u^(0+128),w
  7433  025B  0020               	movlb	0	; select bank0
  7434  025C  00BE               	movwf	___flge@ff2
  7435  025D  3195  2577  3180   	fcall	___flge
  7436  0260  1C03               	btfss	3,0
  7437  0261  2A0D               	goto	l6557
  7438  0262                     l6563:	
  7439                           
  7440                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  7441  0262  0020               	movlb	0	; select bank0
  7442  0263  0858               	movf	efgtoa@c,w
  7443  0264  00D9               	movwf	??_efgtoa
  7444  0265  01DA               	clrf	??_efgtoa+1
  7445  0266  0859               	movf	??_efgtoa,w
  7446  0267  00F7               	movwf	tolower@c
  7447  0268  085A               	movf	??_efgtoa+1,w
  7448  0269  00F8               	movwf	tolower@c+1
  7449  026A  3190  2013  3180   	fcall	_tolower
  7450  026D  0877               	movf	?_tolower,w
  7451  026E  0020               	movlb	0	; select bank0
  7452  026F  00DB               	movwf	??_efgtoa+2
  7453  0270  085B               	movf	??_efgtoa+2,w
  7454  0271  0021               	movlb	1	; select bank1
  7455  0272  00C2               	movwf	efgtoa@mode^(0+128)
  7456                           
  7457                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  7458  0273  0842               	movf	efgtoa@mode^(0+128),w
  7459  0274  0020               	movlb	0	; select bank0
  7460  0275  00D9               	movwf	??_efgtoa
  7461  0276  0859               	movf	??_efgtoa,w
  7462  0277  0021               	movlb	1	; select bank1
  7463  0278  00BF               	movwf	efgtoa@nmode^(0+128)
  7464                           
  7465                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  7466  0279  3067               	movlw	103
  7467  027A  0642               	xorwf	efgtoa@mode^(0+128),w
  7468  027B  1D03               	btfss	3,2
  7469  027C  2A99               	goto	l1071
  7470                           
  7471                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  7472  027D  0022               	movlb	2	; select bank2
  7473  027E  085C               	movf	_prec^(0+256),w
  7474  027F  045D               	iorwf	(_prec+1)^(0+256),w
  7475  0280  1D03               	btfss	3,2
  7476  0281  2A86               	goto	l1072
  7477                           
  7478                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  7479  0282  3001               	movlw	1
  7480  0283  00DC               	movwf	_prec^(0+256)
  7481  0284  3000               	movlw	0
  7482  0285  00DD               	movwf	(_prec^(0+256)+1)
  7483  0286                     l1072:	
  7484                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 382:   }
  7485                           
  7486                           
  7487                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  7488  0286  085D               	movf	(_prec+1)^(0+256),w
  7489  0287  3A80               	xorlw	128
  7490  0288  0020               	movlb	0	; select bank0
  7491  0289  00D9               	movwf	??_efgtoa
  7492  028A  3080               	movlw	128
  7493  028B  0259               	subwf	??_efgtoa,w
  7494  028C  1D03               	skipz
  7495  028D  2A91               	goto	u6985
  7496  028E  3001               	movlw	1
  7497  028F  0022               	movlb	2	; select bank2
  7498  0290  025C               	subwf	_prec^(0+256),w
  7499  0291                     u6985:	
  7500  0291  1803               	skipnc
  7501  0292  2A9C               	goto	l6575
  7502  0293                     l6573:	
  7503  0293  3006               	movlw	6
  7504  0294  0021               	movlb	1	; select bank1
  7505  0295  00BD               	movwf	efgtoa@p^(0+128)
  7506  0296  3000               	movlw	0
  7507  0297  00BE               	movwf	(efgtoa@p^(0+128)+1)
  7508  0298  2AA4               	goto	l6581
  7509  0299                     l1071:	
  7510                           
  7511                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  7512  0299  0022               	movlb	2	; select bank2
  7513  029A  1BDD               	btfsc	(_prec+1)^(0+256),7
  7514  029B  2A93               	goto	l6573
  7515  029C                     l6575:	
  7516  029C  0022               	movlb	2	; select bank2
  7517  029D  085D               	movf	(_prec+1)^(0+256),w
  7518  029E  0021               	movlb	1	; select bank1
  7519  029F  00BE               	movwf	(efgtoa@p+1)^(0+128)
  7520  02A0  0022               	movlb	2	; select bank2
  7521  02A1  085C               	movf	_prec^(0+256),w
  7522  02A2  0021               	movlb	1	; select bank1
  7523  02A3  00BD               	movwf	efgtoa@p^(0+128)
  7524  02A4                     l6581:	
  7525                           
  7526                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  7527  02A4  3067               	movlw	103
  7528  02A5  0642               	xorwf	efgtoa@mode^(0+128),w
  7529  02A6  1D03               	btfss	3,2
  7530  02A7  2AD7               	goto	l1082
  7531                           
  7532                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  7533  02A8  0852               	movf	(efgtoa@e+1)^(0+128),w
  7534  02A9  3A80               	xorlw	128
  7535  02AA  0020               	movlb	0	; select bank0
  7536  02AB  00D9               	movwf	??_efgtoa
  7537  02AC  307F               	movlw	127
  7538  02AD  0259               	subwf	??_efgtoa,w
  7539  02AE  1D03               	skipz
  7540  02AF  2AB3               	goto	u7015
  7541  02B0  30FC               	movlw	252
  7542  02B1  0021               	movlb	1	; select bank1
  7543  02B2  0251               	subwf	efgtoa@e^(0+128),w
  7544  02B3                     u7015:	
  7545  02B3  1C03               	skipc
  7546  02B4  2AD1               	goto	l6589
  7547  02B5  0021               	movlb	1	; select bank1
  7548  02B6  083D               	movf	efgtoa@p^(0+128),w
  7549  02B7  3EFF               	addlw	255
  7550  02B8  0020               	movlb	0	; select bank0
  7551  02B9  00D9               	movwf	??_efgtoa
  7552  02BA  30FF               	movlw	255
  7553  02BB  0021               	movlb	1	; select bank1
  7554  02BC  3D3E               	addwfc	(efgtoa@p+1)^(0+128),w
  7555  02BD  0020               	movlb	0	; select bank0
  7556  02BE  00DA               	movwf	??_efgtoa+1
  7557  02BF  085A               	movf	??_efgtoa+1,w
  7558  02C0  3A80               	xorlw	128
  7559  02C1  00DB               	movwf	??_efgtoa+2
  7560  02C2  0021               	movlb	1	; select bank1
  7561  02C3  0852               	movf	(efgtoa@e+1)^(0+128),w
  7562  02C4  3A80               	xorlw	128
  7563  02C5  0020               	movlb	0	; select bank0
  7564  02C6  025B               	subwf	??_efgtoa+2,w
  7565  02C7  1D03               	skipz
  7566  02C8  2ACD               	goto	u7025
  7567  02C9  0021               	movlb	1	; select bank1
  7568  02CA  0851               	movf	efgtoa@e^(0+128),w
  7569  02CB  0020               	movlb	0	; select bank0
  7570  02CC  0259               	subwf	??_efgtoa,w
  7571  02CD                     u7025:	
  7572  02CD  1C03               	skipc
  7573  02CE  2AD1               	goto	l6589
  7574                           
  7575                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  7576  02CF  3066               	movlw	102
  7577  02D0  2AD2               	goto	L5
  7578  02D1                     l6589:	
  7579                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  7580                           
  7581                           
  7582                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  7583  02D1  3065               	movlw	101
  7584  02D2                     L5:	
  7585  02D2  0020               	movlb	0	; select bank0
  7586  02D3  00D9               	movwf	??_efgtoa
  7587  02D4  0859               	movf	??_efgtoa,w
  7588  02D5  0021               	movlb	1	; select bank1
  7589  02D6  00BF               	movwf	efgtoa@nmode^(0+128)
  7590  02D7                     l1082:	
  7591                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 395:     }
  7592                           
  7593                           
  7594                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  7595  02D7  083E               	movf	(efgtoa@p+1)^(0+128),w
  7596  02D8  00B5               	movwf	(efgtoa@m+1)^(0+128)
  7597  02D9  083D               	movf	efgtoa@p^(0+128),w
  7598  02DA  00B4               	movwf	efgtoa@m^(0+128)
  7599                           
  7600                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  7601  02DB  3067               	movlw	103
  7602  02DC  0642               	xorwf	efgtoa@mode^(0+128),w
  7603  02DD  1D03               	btfss	3,2
  7604  02DE  2AE4               	goto	l6597
  7605  02DF  3066               	movlw	102
  7606  02E0  063F               	xorwf	efgtoa@nmode^(0+128),w
  7607  02E1  1903               	btfsc	3,2
  7608  02E2  1FD2               	btfss	(efgtoa@e+1)^(0+128),7
  7609  02E3  2AE8               	goto	l6599
  7610  02E4                     l6597:	
  7611                           
  7612                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  7613  02E4  3001               	movlw	1
  7614  02E5  07B4               	addwf	efgtoa@m^(0+128),f
  7615  02E6  3000               	movlw	0
  7616  02E7  3DB5               	addwfc	(efgtoa@m+1)^(0+128),f
  7617  02E8                     l6599:	
  7618                           
  7619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  7620  02E8  3066               	movlw	102
  7621  02E9  063F               	xorwf	efgtoa@nmode^(0+128),w
  7622  02EA  1D03               	btfss	3,2
  7623  02EB  2B00               	goto	l6611
  7624                           
  7625                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  7626  02EC  1FD2               	btfss	(efgtoa@e+1)^(0+128),7
  7627  02ED  2AF8               	goto	l6607
  7628                           
  7629                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  7630  02EE  303F               	movlw	63
  7631  02EF  00D8               	movwf	(efgtoa@u+3)^(0+128)
  7632  02F0  3080               	movlw	128
  7633  02F1  00D7               	movwf	(efgtoa@u+2)^(0+128)
  7634  02F2  3000               	movlw	0
  7635  02F3  00D6               	movwf	(efgtoa@u+1)^(0+128)
  7636  02F4  3000               	movlw	0
  7637  02F5  00D5               	movwf	efgtoa@u^(0+128)
  7638                           
  7639                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  7640  02F6  01D1               	clrf	efgtoa@e^(0+128)
  7641  02F7  01D2               	clrf	(efgtoa@e+1)^(0+128)
  7642  02F8                     l6607:	
  7643                           
  7644                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  7645  02F8  3067               	movlw	103
  7646  02F9  0642               	xorwf	efgtoa@mode^(0+128),w
  7647  02FA  1903               	btfsc	3,2
  7648  02FB  2B00               	goto	l6611
  7649                           
  7650                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  7651  02FC  0851               	movf	efgtoa@e^(0+128),w
  7652  02FD  07B4               	addwf	efgtoa@m^(0+128),f
  7653  02FE  0852               	movf	(efgtoa@e+1)^(0+128),w
  7654  02FF  3DB5               	addwfc	(efgtoa@m+1)^(0+128),f
  7655  0300                     l6611:	
  7656                           
  7657                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  7658  0300  01CB               	clrf	efgtoa@i^(0+128)
  7659  0301  01CC               	clrf	(efgtoa@i+1)^(0+128)
  7660                           
  7661                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  7662  0302  0850               	movf	(efgtoa@g+3)^(0+128),w
  7663  0303  00C6               	movwf	(efgtoa@h+3)^(0+128)
  7664  0304  084F               	movf	(efgtoa@g+2)^(0+128),w
  7665  0305  00C5               	movwf	(efgtoa@h+2)^(0+128)
  7666  0306  084E               	movf	(efgtoa@g+1)^(0+128),w
  7667  0307  00C4               	movwf	(efgtoa@h+1)^(0+128)
  7668  0308  084D               	movf	efgtoa@g^(0+128),w
  7669  0309  00C3               	movwf	efgtoa@h^(0+128)
  7670                           
  7671                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  7672  030A  0858               	movf	(efgtoa@u+3)^(0+128),w
  7673  030B  00A3               	movwf	(efgtoa@ou+3)^(0+128)
  7674  030C  0857               	movf	(efgtoa@u+2)^(0+128),w
  7675  030D  00A2               	movwf	(efgtoa@ou+2)^(0+128)
  7676  030E  0856               	movf	(efgtoa@u+1)^(0+128),w
  7677  030F  00A1               	movwf	(efgtoa@ou+1)^(0+128)
  7678  0310  0855               	movf	efgtoa@u^(0+128),w
  7679  0311  00A0               	movwf	efgtoa@ou^(0+128)
  7680  0312                     l6621:	
  7681                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  7682                           
  7683                           
  7684                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  7685  0312  084C               	movf	(efgtoa@i+1)^(0+128),w
  7686  0313  3A80               	xorlw	128
  7687  0314  0020               	movlb	0	; select bank0
  7688  0315  00D9               	movwf	??_efgtoa
  7689  0316  0021               	movlb	1	; select bank1
  7690  0317  0835               	movf	(efgtoa@m+1)^(0+128),w
  7691  0318  3A80               	xorlw	128
  7692  0319  0020               	movlb	0	; select bank0
  7693  031A  0259               	subwf	??_efgtoa,w
  7694  031B  1D03               	skipz
  7695  031C  2B20               	goto	u7095
  7696  031D  0021               	movlb	1	; select bank1
  7697  031E  0834               	movf	efgtoa@m^(0+128),w
  7698  031F  024B               	subwf	efgtoa@i^(0+128),w
  7699  0320                     u7095:	
  7700  0320  1803               	btfsc	3,0
  7701  0321  2BF0               	goto	l6623
  7702                           
  7703                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  7704  0322  0021               	movlb	1	; select bank1
  7705  0323  0858               	movf	(efgtoa@u+3)^(0+128),w
  7706  0324  0020               	movlb	0	; select bank0
  7707  0325  00A9               	movwf	___fldiv@a+3
  7708  0326  0021               	movlb	1	; select bank1
  7709  0327  0857               	movf	(efgtoa@u+2)^(0+128),w
  7710  0328  0020               	movlb	0	; select bank0
  7711  0329  00A8               	movwf	___fldiv@a+2
  7712  032A  0021               	movlb	1	; select bank1
  7713  032B  0856               	movf	(efgtoa@u+1)^(0+128),w
  7714  032C  0020               	movlb	0	; select bank0
  7715  032D  00A7               	movwf	___fldiv@a+1
  7716  032E  0021               	movlb	1	; select bank1
  7717  032F  0855               	movf	efgtoa@u^(0+128),w
  7718  0330  0020               	movlb	0	; select bank0
  7719  0331  00A6               	movwf	___fldiv@a
  7720  0332  0021               	movlb	1	; select bank1
  7721  0333  0846               	movf	(efgtoa@h+3)^(0+128),w
  7722  0334  0020               	movlb	0	; select bank0
  7723  0335  00AD               	movwf	___fldiv@b+3
  7724  0336  0021               	movlb	1	; select bank1
  7725  0337  0845               	movf	(efgtoa@h+2)^(0+128),w
  7726  0338  0020               	movlb	0	; select bank0
  7727  0339  00AC               	movwf	___fldiv@b+2
  7728  033A  0021               	movlb	1	; select bank1
  7729  033B  0844               	movf	(efgtoa@h+1)^(0+128),w
  7730  033C  0020               	movlb	0	; select bank0
  7731  033D  00AB               	movwf	___fldiv@b+1
  7732  033E  0021               	movlb	1	; select bank1
  7733  033F  0843               	movf	efgtoa@h^(0+128),w
  7734  0340  0020               	movlb	0	; select bank0
  7735  0341  00AA               	movwf	___fldiv@b
  7736  0342  3188  20DF  3180   	fcall	___fldiv
  7737  0345  0020               	movlb	0	; select bank0
  7738  0346  0829               	movf	?___fldiv+3,w
  7739  0347  00C3               	movwf	floorf@x+3
  7740  0348  0828               	movf	?___fldiv+2,w
  7741  0349  00C2               	movwf	floorf@x+2
  7742  034A  0827               	movf	?___fldiv+1,w
  7743  034B  00C1               	movwf	floorf@x+1
  7744  034C  0826               	movf	?___fldiv,w
  7745  034D  00C0               	movwf	floorf@x
  7746  034E  3186  26F1  3180   	fcall	_floorf
  7747  0351  0020               	movlb	0	; select bank0
  7748  0352  0843               	movf	?_floorf+3,w
  7749  0353  0021               	movlb	1	; select bank1
  7750  0354  00CA               	movwf	(efgtoa@l+3)^(0+128)
  7751  0355  0020               	movlb	0	; select bank0
  7752  0356  0842               	movf	?_floorf+2,w
  7753  0357  0021               	movlb	1	; select bank1
  7754  0358  00C9               	movwf	(efgtoa@l+2)^(0+128)
  7755  0359  0020               	movlb	0	; select bank0
  7756  035A  0841               	movf	?_floorf+1,w
  7757  035B  0021               	movlb	1	; select bank1
  7758  035C  00C8               	movwf	(efgtoa@l+1)^(0+128)
  7759  035D  0020               	movlb	0	; select bank0
  7760  035E  0840               	movf	?_floorf,w
  7761  035F  0021               	movlb	1	; select bank1
  7762  0360  00C7               	movwf	efgtoa@l^(0+128)
  7763                           
  7764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  7765  0361  084A               	movf	(efgtoa@l+3)^(0+128),w
  7766  0362  00F4               	movwf	___fltol@f1+3
  7767  0363  0849               	movf	(efgtoa@l+2)^(0+128),w
  7768  0364  00F3               	movwf	___fltol@f1+2
  7769  0365  0848               	movf	(efgtoa@l+1)^(0+128),w
  7770  0366  00F2               	movwf	___fltol@f1+1
  7771  0367  0847               	movf	efgtoa@l^(0+128),w
  7772  0368  00F1               	movwf	___fltol@f1
  7773  0369  3194  249A  3180   	fcall	___fltol
  7774  036C  0872               	movf	?___fltol+1,w
  7775  036D  0021               	movlb	1	; select bank1
  7776  036E  00B9               	movwf	(efgtoa@d+1)^(0+128)
  7777  036F  0871               	movf	?___fltol,w
  7778  0370  00B8               	movwf	efgtoa@d^(0+128)
  7779                           
  7780                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  7781  0371  084A               	movf	(efgtoa@l+3)^(0+128),w
  7782  0372  0020               	movlb	0	; select bank0
  7783  0373  00A7               	movwf	___flmul@a+3
  7784  0374  0021               	movlb	1	; select bank1
  7785  0375  0849               	movf	(efgtoa@l+2)^(0+128),w
  7786  0376  0020               	movlb	0	; select bank0
  7787  0377  00A6               	movwf	___flmul@a+2
  7788  0378  0021               	movlb	1	; select bank1
  7789  0379  0848               	movf	(efgtoa@l+1)^(0+128),w
  7790  037A  0020               	movlb	0	; select bank0
  7791  037B  00A5               	movwf	___flmul@a+1
  7792  037C  0021               	movlb	1	; select bank1
  7793  037D  0847               	movf	efgtoa@l^(0+128),w
  7794  037E  0020               	movlb	0	; select bank0
  7795  037F  00A4               	movwf	___flmul@a
  7796  0380  0021               	movlb	1	; select bank1
  7797  0381  0858               	movf	(efgtoa@u+3)^(0+128),w
  7798  0382  0020               	movlb	0	; select bank0
  7799  0383  00A3               	movwf	___flmul@b+3
  7800  0384  0021               	movlb	1	; select bank1
  7801  0385  0857               	movf	(efgtoa@u+2)^(0+128),w
  7802  0386  0020               	movlb	0	; select bank0
  7803  0387  00A2               	movwf	___flmul@b+2
  7804  0388  0021               	movlb	1	; select bank1
  7805  0389  0856               	movf	(efgtoa@u+1)^(0+128),w
  7806  038A  0020               	movlb	0	; select bank0
  7807  038B  00A1               	movwf	___flmul@b+1
  7808  038C  0021               	movlb	1	; select bank1
  7809  038D  0855               	movf	efgtoa@u^(0+128),w
  7810  038E  0020               	movlb	0	; select bank0
  7811  038F  00A0               	movwf	___flmul@b
  7812  0390  318D  25D4  3180   	fcall	___flmul
  7813  0393  0020               	movlb	0	; select bank0
  7814  0394  0823               	movf	?___flmul+3,w
  7815  0395  00BD               	movwf	___flsub@a+3
  7816  0396  0822               	movf	?___flmul+2,w
  7817  0397  00BC               	movwf	___flsub@a+2
  7818  0398  0821               	movf	?___flmul+1,w
  7819  0399  00BB               	movwf	___flsub@a+1
  7820  039A  0820               	movf	?___flmul,w
  7821  039B  00BA               	movwf	___flsub@a
  7822  039C  0021               	movlb	1	; select bank1
  7823  039D  0846               	movf	(efgtoa@h+3)^(0+128),w
  7824  039E  0020               	movlb	0	; select bank0
  7825  039F  00C1               	movwf	___flsub@b+3
  7826  03A0  0021               	movlb	1	; select bank1
  7827  03A1  0845               	movf	(efgtoa@h+2)^(0+128),w
  7828  03A2  0020               	movlb	0	; select bank0
  7829  03A3  00C0               	movwf	___flsub@b+2
  7830  03A4  0021               	movlb	1	; select bank1
  7831  03A5  0844               	movf	(efgtoa@h+1)^(0+128),w
  7832  03A6  0020               	movlb	0	; select bank0
  7833  03A7  00BF               	movwf	___flsub@b+1
  7834  03A8  0021               	movlb	1	; select bank1
  7835  03A9  0843               	movf	efgtoa@h^(0+128),w
  7836  03AA  0020               	movlb	0	; select bank0
  7837  03AB  00BE               	movwf	___flsub@b
  7838  03AC  319F  27A2  3180   	fcall	___flsub
  7839  03AF  0020               	movlb	0	; select bank0
  7840  03B0  083D               	movf	?___flsub+3,w
  7841  03B1  0021               	movlb	1	; select bank1
  7842  03B2  00C6               	movwf	(efgtoa@h+3)^(0+128)
  7843  03B3  0020               	movlb	0	; select bank0
  7844  03B4  083C               	movf	?___flsub+2,w
  7845  03B5  0021               	movlb	1	; select bank1
  7846  03B6  00C5               	movwf	(efgtoa@h+2)^(0+128)
  7847  03B7  0020               	movlb	0	; select bank0
  7848  03B8  083B               	movf	?___flsub+1,w
  7849  03B9  0021               	movlb	1	; select bank1
  7850  03BA  00C4               	movwf	(efgtoa@h+1)^(0+128)
  7851  03BB  0020               	movlb	0	; select bank0
  7852  03BC  083A               	movf	?___flsub,w
  7853  03BD  0021               	movlb	1	; select bank1
  7854  03BE  00C3               	movwf	efgtoa@h^(0+128)
  7855                           
  7856                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  7857  03BF  3041               	movlw	65
  7858  03C0  0020               	movlb	0	; select bank0
  7859  03C1  00A9               	movwf	___fldiv@a+3
  7860  03C2  3020               	movlw	32
  7861  03C3  00A8               	movwf	___fldiv@a+2
  7862  03C4  3000               	movlw	0
  7863  03C5  00A7               	movwf	___fldiv@a+1
  7864  03C6  3000               	movlw	0
  7865  03C7  00A6               	movwf	___fldiv@a
  7866  03C8  0021               	movlb	1	; select bank1
  7867  03C9  0858               	movf	(efgtoa@u+3)^(0+128),w
  7868  03CA  0020               	movlb	0	; select bank0
  7869  03CB  00AD               	movwf	___fldiv@b+3
  7870  03CC  0021               	movlb	1	; select bank1
  7871  03CD  0857               	movf	(efgtoa@u+2)^(0+128),w
  7872  03CE  0020               	movlb	0	; select bank0
  7873  03CF  00AC               	movwf	___fldiv@b+2
  7874  03D0  0021               	movlb	1	; select bank1
  7875  03D1  0856               	movf	(efgtoa@u+1)^(0+128),w
  7876  03D2  0020               	movlb	0	; select bank0
  7877  03D3  00AB               	movwf	___fldiv@b+1
  7878  03D4  0021               	movlb	1	; select bank1
  7879  03D5  0855               	movf	efgtoa@u^(0+128),w
  7880  03D6  0020               	movlb	0	; select bank0
  7881  03D7  00AA               	movwf	___fldiv@b
  7882  03D8  3188  20DF  3180   	fcall	___fldiv
  7883  03DB  0020               	movlb	0	; select bank0
  7884  03DC  0829               	movf	?___fldiv+3,w
  7885  03DD  0021               	movlb	1	; select bank1
  7886  03DE  00D8               	movwf	(efgtoa@u+3)^(0+128)
  7887  03DF  0020               	movlb	0	; select bank0
  7888  03E0  0828               	movf	?___fldiv+2,w
  7889  03E1  0021               	movlb	1	; select bank1
  7890  03E2  00D7               	movwf	(efgtoa@u+2)^(0+128)
  7891  03E3  0020               	movlb	0	; select bank0
  7892  03E4  0827               	movf	?___fldiv+1,w
  7893  03E5  0021               	movlb	1	; select bank1
  7894  03E6  00D6               	movwf	(efgtoa@u+1)^(0+128)
  7895  03E7  0020               	movlb	0	; select bank0
  7896  03E8  0826               	movf	?___fldiv,w
  7897  03E9  0021               	movlb	1	; select bank1
  7898  03EA  00D5               	movwf	efgtoa@u^(0+128)
  7899                           
  7900                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  7901  03EB  3001               	movlw	1
  7902  03EC  07CB               	addwf	efgtoa@i^(0+128),f
  7903  03ED  3000               	movlw	0
  7904  03EE  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  7905  03EF  2B12               	goto	l6621
  7906  03F0                     l6623:	
  7907                           
  7908                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  7909  03F0  3040               	movlw	64
  7910  03F1  0020               	movlb	0	; select bank0
  7911  03F2  00A3               	movwf	___flmul@b+3
  7912  03F3  30A0               	movlw	160
  7913  03F4  00A2               	movwf	___flmul@b+2
  7914  03F5  3000               	movlw	0
  7915  03F6  00A1               	movwf	___flmul@b+1
  7916  03F7  3000               	movlw	0
  7917  03F8  00A0               	movwf	___flmul@b
  7918  03F9  0021               	movlb	1	; select bank1
  7919  03FA  0858               	movf	(efgtoa@u+3)^(0+128),w
  7920  03FB  0020               	movlb	0	; select bank0
  7921  03FC  00A7               	movwf	___flmul@a+3
  7922  03FD  0021               	movlb	1	; select bank1
  7923  03FE  0857               	movf	(efgtoa@u+2)^(0+128),w
  7924  03FF  0020               	movlb	0	; select bank0
  7925  0400  00A6               	movwf	___flmul@a+2
  7926  0401  0021               	movlb	1	; select bank1
  7927  0402  0856               	movf	(efgtoa@u+1)^(0+128),w
  7928  0403  0020               	movlb	0	; select bank0
  7929  0404  00A5               	movwf	___flmul@a+1
  7930  0405  0021               	movlb	1	; select bank1
  7931  0406  0855               	movf	efgtoa@u^(0+128),w
  7932  0407  0020               	movlb	0	; select bank0
  7933  0408  00A4               	movwf	___flmul@a
  7934  0409  318D  25D4  3180   	fcall	___flmul
  7935  040C  0020               	movlb	0	; select bank0
  7936  040D  0823               	movf	?___flmul+3,w
  7937  040E  0021               	movlb	1	; select bank1
  7938  040F  00CA               	movwf	(efgtoa@l+3)^(0+128)
  7939  0410  0020               	movlb	0	; select bank0
  7940  0411  0822               	movf	?___flmul+2,w
  7941  0412  0021               	movlb	1	; select bank1
  7942  0413  00C9               	movwf	(efgtoa@l+2)^(0+128)
  7943  0414  0020               	movlb	0	; select bank0
  7944  0415  0821               	movf	?___flmul+1,w
  7945  0416  0021               	movlb	1	; select bank1
  7946  0417  00C8               	movwf	(efgtoa@l+1)^(0+128)
  7947  0418  0020               	movlb	0	; select bank0
  7948  0419  0820               	movf	?___flmul,w
  7949  041A  0021               	movlb	1	; select bank1
  7950  041B  00C7               	movwf	efgtoa@l^(0+128)
  7951                           
  7952                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  7953  041C  0846               	movf	(efgtoa@h+3)^(0+128),w
  7954  041D  0020               	movlb	0	; select bank0
  7955  041E  00BD               	movwf	___flge@ff1+3
  7956  041F  0021               	movlb	1	; select bank1
  7957  0420  0845               	movf	(efgtoa@h+2)^(0+128),w
  7958  0421  0020               	movlb	0	; select bank0
  7959  0422  00BC               	movwf	___flge@ff1+2
  7960  0423  0021               	movlb	1	; select bank1
  7961  0424  0844               	movf	(efgtoa@h+1)^(0+128),w
  7962  0425  0020               	movlb	0	; select bank0
  7963  0426  00BB               	movwf	___flge@ff1+1
  7964  0427  0021               	movlb	1	; select bank1
  7965  0428  0843               	movf	efgtoa@h^(0+128),w
  7966  0429  0020               	movlb	0	; select bank0
  7967  042A  00BA               	movwf	___flge@ff1
  7968  042B  0021               	movlb	1	; select bank1
  7969  042C  084A               	movf	(efgtoa@l+3)^(0+128),w
  7970  042D  0020               	movlb	0	; select bank0
  7971  042E  00C1               	movwf	___flge@ff2+3
  7972  042F  0021               	movlb	1	; select bank1
  7973  0430  0849               	movf	(efgtoa@l+2)^(0+128),w
  7974  0431  0020               	movlb	0	; select bank0
  7975  0432  00C0               	movwf	___flge@ff2+2
  7976  0433  0021               	movlb	1	; select bank1
  7977  0434  0848               	movf	(efgtoa@l+1)^(0+128),w
  7978  0435  0020               	movlb	0	; select bank0
  7979  0436  00BF               	movwf	___flge@ff2+1
  7980  0437  0021               	movlb	1	; select bank1
  7981  0438  0847               	movf	efgtoa@l^(0+128),w
  7982  0439  0020               	movlb	0	; select bank0
  7983  043A  00BE               	movwf	___flge@ff2
  7984  043B  3195  2577  3180   	fcall	___flge
  7985  043E  1803               	btfsc	3,0
  7986  043F  2C43               	goto	l6627
  7987                           
  7988                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  7989  0440  3000               	movlw	0
  7990  0441  0021               	movlb	1	; select bank1
  7991  0442  2C5D               	goto	L6
  7992  0443                     l6627:	
  7993                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  7994                           
  7995                           
  7996                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  7997  0443  0021               	movlb	1	; select bank1
  7998  0444  0846               	movf	(efgtoa@h+3)^(0+128),w
  7999  0445  00F4               	movwf	___fleq@ff1+3
  8000  0446  0845               	movf	(efgtoa@h+2)^(0+128),w
  8001  0447  00F3               	movwf	___fleq@ff1+2
  8002  0448  0844               	movf	(efgtoa@h+1)^(0+128),w
  8003  0449  00F2               	movwf	___fleq@ff1+1
  8004  044A  0843               	movf	efgtoa@h^(0+128),w
  8005  044B  00F1               	movwf	___fleq@ff1
  8006  044C  084A               	movf	(efgtoa@l+3)^(0+128),w
  8007  044D  00F8               	movwf	___fleq@ff2+3
  8008  044E  0849               	movf	(efgtoa@l+2)^(0+128),w
  8009  044F  00F7               	movwf	___fleq@ff2+2
  8010  0450  0848               	movf	(efgtoa@l+1)^(0+128),w
  8011  0451  00F6               	movwf	___fleq@ff2+1
  8012  0452  0847               	movf	efgtoa@l^(0+128),w
  8013  0453  00F5               	movwf	___fleq@ff2
  8014  0454  3193  2310  3180   	fcall	___fleq
  8015  0457  1C03               	btfss	3,0
  8016  0458  2C64               	goto	l6633
  8017  0459  0021               	movlb	1	; select bank1
  8018  045A  1838               	btfsc	efgtoa@d^(0+128),0
  8019  045B  2C64               	goto	l6633
  8020                           
  8021                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  8022  045C  3000               	movlw	0
  8023  045D                     L6:	
  8024  045D  00CA               	movwf	(efgtoa@l+3)^(0+128)
  8025  045E  3000               	movlw	0
  8026  045F  00C9               	movwf	(efgtoa@l+2)^(0+128)
  8027  0460  3000               	movlw	0
  8028  0461  00C8               	movwf	(efgtoa@l+1)^(0+128)
  8029  0462  3000               	movlw	0
  8030  0463  00C7               	movwf	efgtoa@l^(0+128)
  8031  0464                     l6633:	
  8032                           
  8033                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  8034  0464  0021               	movlb	1	; select bank1
  8035  0465  084A               	movf	(efgtoa@l+3)^(0+128),w
  8036  0466  00F4               	movwf	___fladd@b+3
  8037  0467  0849               	movf	(efgtoa@l+2)^(0+128),w
  8038  0468  00F3               	movwf	___fladd@b+2
  8039  0469  0848               	movf	(efgtoa@l+1)^(0+128),w
  8040  046A  00F2               	movwf	___fladd@b+1
  8041  046B  0847               	movf	efgtoa@l^(0+128),w
  8042  046C  00F1               	movwf	___fladd@b
  8043  046D  0850               	movf	(efgtoa@g+3)^(0+128),w
  8044  046E  00F8               	movwf	___fladd@a+3
  8045  046F  084F               	movf	(efgtoa@g+2)^(0+128),w
  8046  0470  00F7               	movwf	___fladd@a+2
  8047  0471  084E               	movf	(efgtoa@g+1)^(0+128),w
  8048  0472  00F6               	movwf	___fladd@a+1
  8049  0473  084D               	movf	efgtoa@g^(0+128),w
  8050  0474  00F5               	movwf	___fladd@a
  8051  0475  318B  23F2  3180   	fcall	___fladd
  8052  0478  0874               	movf	?___fladd+3,w
  8053  0479  0021               	movlb	1	; select bank1
  8054  047A  00C6               	movwf	(efgtoa@h+3)^(0+128)
  8055  047B  0873               	movf	?___fladd+2,w
  8056  047C  00C5               	movwf	(efgtoa@h+2)^(0+128)
  8057  047D  0872               	movf	?___fladd+1,w
  8058  047E  00C4               	movwf	(efgtoa@h+1)^(0+128)
  8059  047F  0871               	movf	?___fladd,w
  8060  0480  00C3               	movwf	efgtoa@h^(0+128)
  8061                           
  8062                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  8063  0481  0823               	movf	(efgtoa@ou+3)^(0+128),w
  8064  0482  00D8               	movwf	(efgtoa@u+3)^(0+128)
  8065  0483  0822               	movf	(efgtoa@ou+2)^(0+128),w
  8066  0484  00D7               	movwf	(efgtoa@u+2)^(0+128)
  8067  0485  0821               	movf	(efgtoa@ou+1)^(0+128),w
  8068  0486  00D6               	movwf	(efgtoa@u+1)^(0+128)
  8069  0487  0820               	movf	efgtoa@ou^(0+128),w
  8070  0488  00D5               	movwf	efgtoa@u^(0+128)
  8071                           
  8072                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  8073  0489  3065               	movlw	101
  8074  048A  063F               	xorwf	efgtoa@nmode^(0+128),w
  8075  048B  1903               	btfsc	3,2
  8076  048C  2C92               	goto	l6641
  8077  048D  0852               	movf	(efgtoa@e+1)^(0+128),w
  8078  048E  00B7               	movwf	(efgtoa@ne+1)^(0+128)
  8079  048F  0851               	movf	efgtoa@e^(0+128),w
  8080  0490  00B6               	movwf	efgtoa@ne^(0+128)
  8081  0491  2C94               	goto	l1100
  8082  0492                     l6641:	
  8083  0492  01B6               	clrf	efgtoa@ne^(0+128)
  8084  0493  01B7               	clrf	(efgtoa@ne+1)^(0+128)
  8085  0494                     l1100:	
  8086                           
  8087                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  8088  0494  01B2               	clrf	efgtoa@pp^(0+128)
  8089  0495  01B3               	clrf	(efgtoa@pp+1)^(0+128)
  8090                           
  8091                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  8092  0496  01B0               	clrf	efgtoa@t^(0+128)
  8093  0497  01B1               	clrf	(efgtoa@t+1)^(0+128)
  8094                           
  8095                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  8096  0498  01CB               	clrf	efgtoa@i^(0+128)
  8097  0499  01CC               	clrf	(efgtoa@i+1)^(0+128)
  8098                           
  8099                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  8100  049A  2DD1               	goto	l6691
  8101  049B                     l6643:	
  8102                           
  8103                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  8104  049B  0021               	movlb	1	; select bank1
  8105  049C  0858               	movf	(efgtoa@u+3)^(0+128),w
  8106  049D  0020               	movlb	0	; select bank0
  8107  049E  00A9               	movwf	___fldiv@a+3
  8108  049F  0021               	movlb	1	; select bank1
  8109  04A0  0857               	movf	(efgtoa@u+2)^(0+128),w
  8110  04A1  0020               	movlb	0	; select bank0
  8111  04A2  00A8               	movwf	___fldiv@a+2
  8112  04A3  0021               	movlb	1	; select bank1
  8113  04A4  0856               	movf	(efgtoa@u+1)^(0+128),w
  8114  04A5  0020               	movlb	0	; select bank0
  8115  04A6  00A7               	movwf	___fldiv@a+1
  8116  04A7  0021               	movlb	1	; select bank1
  8117  04A8  0855               	movf	efgtoa@u^(0+128),w
  8118  04A9  0020               	movlb	0	; select bank0
  8119  04AA  00A6               	movwf	___fldiv@a
  8120  04AB  0021               	movlb	1	; select bank1
  8121  04AC  0846               	movf	(efgtoa@h+3)^(0+128),w
  8122  04AD  0020               	movlb	0	; select bank0
  8123  04AE  00AD               	movwf	___fldiv@b+3
  8124  04AF  0021               	movlb	1	; select bank1
  8125  04B0  0845               	movf	(efgtoa@h+2)^(0+128),w
  8126  04B1  0020               	movlb	0	; select bank0
  8127  04B2  00AC               	movwf	___fldiv@b+2
  8128  04B3  0021               	movlb	1	; select bank1
  8129  04B4  0844               	movf	(efgtoa@h+1)^(0+128),w
  8130  04B5  0020               	movlb	0	; select bank0
  8131  04B6  00AB               	movwf	___fldiv@b+1
  8132  04B7  0021               	movlb	1	; select bank1
  8133  04B8  0843               	movf	efgtoa@h^(0+128),w
  8134  04B9  0020               	movlb	0	; select bank0
  8135  04BA  00AA               	movwf	___fldiv@b
  8136  04BB  3188  20DF  3180   	fcall	___fldiv
  8137  04BE  0020               	movlb	0	; select bank0
  8138  04BF  0829               	movf	?___fldiv+3,w
  8139  04C0  00C3               	movwf	floorf@x+3
  8140  04C1  0828               	movf	?___fldiv+2,w
  8141  04C2  00C2               	movwf	floorf@x+2
  8142  04C3  0827               	movf	?___fldiv+1,w
  8143  04C4  00C1               	movwf	floorf@x+1
  8144  04C5  0826               	movf	?___fldiv,w
  8145  04C6  00C0               	movwf	floorf@x
  8146  04C7  3186  26F1  3180   	fcall	_floorf
  8147  04CA  0020               	movlb	0	; select bank0
  8148  04CB  0843               	movf	?_floorf+3,w
  8149  04CC  0021               	movlb	1	; select bank1
  8150  04CD  00CA               	movwf	(efgtoa@l+3)^(0+128)
  8151  04CE  0020               	movlb	0	; select bank0
  8152  04CF  0842               	movf	?_floorf+2,w
  8153  04D0  0021               	movlb	1	; select bank1
  8154  04D1  00C9               	movwf	(efgtoa@l+2)^(0+128)
  8155  04D2  0020               	movlb	0	; select bank0
  8156  04D3  0841               	movf	?_floorf+1,w
  8157  04D4  0021               	movlb	1	; select bank1
  8158  04D5  00C8               	movwf	(efgtoa@l+1)^(0+128)
  8159  04D6  0020               	movlb	0	; select bank0
  8160  04D7  0840               	movf	?_floorf,w
  8161  04D8  0021               	movlb	1	; select bank1
  8162  04D9  00C7               	movwf	efgtoa@l^(0+128)
  8163                           
  8164                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  8165  04DA  084A               	movf	(efgtoa@l+3)^(0+128),w
  8166  04DB  00F4               	movwf	___fltol@f1+3
  8167  04DC  0849               	movf	(efgtoa@l+2)^(0+128),w
  8168  04DD  00F3               	movwf	___fltol@f1+2
  8169  04DE  0848               	movf	(efgtoa@l+1)^(0+128),w
  8170  04DF  00F2               	movwf	___fltol@f1+1
  8171  04E0  0847               	movf	efgtoa@l^(0+128),w
  8172  04E1  00F1               	movwf	___fltol@f1
  8173  04E2  3194  249A  3180   	fcall	___fltol
  8174  04E5  0872               	movf	?___fltol+1,w
  8175  04E6  0021               	movlb	1	; select bank1
  8176  04E7  00B9               	movwf	(efgtoa@d+1)^(0+128)
  8177  04E8  0871               	movf	?___fltol,w
  8178  04E9  00B8               	movwf	efgtoa@d^(0+128)
  8179                           
  8180                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  8181  04EA  0022               	movlb	2	; select bank2
  8182  04EB  1A5E               	btfsc	_flags^(0+256),4
  8183  04EC  2CFC               	goto	l6655
  8184  04ED  0021               	movlb	1	; select bank1
  8185  04EE  0838               	movf	efgtoa@d^(0+128),w
  8186  04EF  0439               	iorwf	(efgtoa@d+1)^(0+128),w
  8187  04F0  1D03               	btfss	3,2
  8188  04F1  2CFC               	goto	l6655
  8189  04F2  3067               	movlw	103
  8190  04F3  0642               	xorwf	efgtoa@mode^(0+128),w
  8191  04F4  1903               	btfsc	3,2
  8192  04F5  1FB7               	btfss	(efgtoa@ne+1)^(0+128),7
  8193  04F6  2CFC               	goto	l6655
  8194                           
  8195                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  8196  04F7  3001               	movlw	1
  8197  04F8  07B0               	addwf	efgtoa@t^(0+128),f
  8198  04F9  3000               	movlw	0
  8199  04FA  3DB1               	addwfc	(efgtoa@t+1)^(0+128),f
  8200                           
  8201                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  8202  04FB  2D4F               	goto	l6683
  8203  04FC                     l6655:	
  8204                           
  8205                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  8206  04FC  0021               	movlb	1	; select bank1
  8207  04FD  0832               	movf	efgtoa@pp^(0+128),w
  8208  04FE  0433               	iorwf	(efgtoa@pp+1)^(0+128),w
  8209  04FF  1903               	btfsc	3,2
  8210  0500  1FB7               	btfss	(efgtoa@ne+1)^(0+128),7
  8211  0501  2D1B               	goto	l6675
  8212                           
  8213                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  8214  0502  302E               	movlw	46
  8215  0503  0020               	movlb	0	; select bank0
  8216  0504  00D9               	movwf	??_efgtoa
  8217  0505  0021               	movlb	1	; select bank1
  8218  0506  0853               	movf	efgtoa@n^(0+128),w
  8219  0507  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8220  0508  0086               	movwf	6
  8221  0509  3002               	movlw	2	; select bank4/5
  8222  050A  0087               	movwf	7
  8223  050B  0020               	movlb	0	; select bank0
  8224  050C  0859               	movf	??_efgtoa,w
  8225  050D  0081               	movwf	1
  8226  050E  3001               	movlw	1
  8227  050F  0021               	movlb	1	; select bank1
  8228  0510  07D3               	addwf	efgtoa@n^(0+128),f
  8229  0511  3000               	movlw	0
  8230  0512  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  8231                           
  8232                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  8233  0513  30FF               	movlw	255
  8234  0514  07C0               	addwf	efgtoa@w^(0+128),f
  8235  0515  30FF               	movlw	255
  8236  0516  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  8237                           
  8238                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  8239  0517  3001               	movlw	1
  8240  0518  00B2               	movwf	efgtoa@pp^(0+128)
  8241  0519  3000               	movlw	0
  8242  051A  00B3               	movwf	(efgtoa@pp^(0+128)+1)
  8243  051B                     l6675:	
  8244                           
  8245                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  8246  051B  0830               	movf	efgtoa@t^(0+128),w
  8247  051C  0431               	iorwf	(efgtoa@t+1)^(0+128),w
  8248  051D  1903               	btfsc	3,2
  8249  051E  2D39               	goto	l6677
  8250                           
  8251                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  8252  051F  3030               	movlw	48
  8253  0520  0020               	movlb	0	; select bank0
  8254  0521  00D9               	movwf	??_efgtoa
  8255  0522  0021               	movlb	1	; select bank1
  8256  0523  0853               	movf	efgtoa@n^(0+128),w
  8257  0524  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8258  0525  0086               	movwf	6
  8259  0526  3002               	movlw	2	; select bank4/5
  8260  0527  0087               	movwf	7
  8261  0528  0020               	movlb	0	; select bank0
  8262  0529  0859               	movf	??_efgtoa,w
  8263  052A  0081               	movwf	1
  8264  052B  3001               	movlw	1
  8265  052C  0021               	movlb	1	; select bank1
  8266  052D  07D3               	addwf	efgtoa@n^(0+128),f
  8267  052E  3000               	movlw	0
  8268  052F  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  8269                           
  8270                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  8271  0530  30FF               	movlw	255
  8272  0531  07C0               	addwf	efgtoa@w^(0+128),f
  8273  0532  30FF               	movlw	255
  8274  0533  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  8275                           
  8276                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  8277  0534  30FF               	movlw	255
  8278  0535  07B0               	addwf	efgtoa@t^(0+128),f
  8279  0536  30FF               	movlw	255
  8280  0537  3DB1               	addwfc	(efgtoa@t+1)^(0+128),f
  8281  0538  2D1B               	goto	l6675
  8282  0539                     l6677:	
  8283                           
  8284                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  8285  0539  0838               	movf	efgtoa@d^(0+128),w
  8286  053A  3E30               	addlw	48
  8287  053B  0020               	movlb	0	; select bank0
  8288  053C  00D9               	movwf	??_efgtoa
  8289  053D  0021               	movlb	1	; select bank1
  8290  053E  0853               	movf	efgtoa@n^(0+128),w
  8291  053F  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8292  0540  0086               	movwf	6
  8293  0541  3002               	movlw	2	; select bank4/5
  8294  0542  0087               	movwf	7
  8295  0543  0020               	movlb	0	; select bank0
  8296  0544  0859               	movf	??_efgtoa,w
  8297  0545  0081               	movwf	1
  8298  0546  3001               	movlw	1
  8299  0547  0021               	movlb	1	; select bank1
  8300  0548  07D3               	addwf	efgtoa@n^(0+128),f
  8301  0549  3000               	movlw	0
  8302  054A  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  8303                           
  8304                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  8305  054B  30FF               	movlw	255
  8306  054C  07C0               	addwf	efgtoa@w^(0+128),f
  8307  054D  30FF               	movlw	255
  8308  054E  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  8309  054F                     l6683:	
  8310                           
  8311                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  8312  054F  084A               	movf	(efgtoa@l+3)^(0+128),w
  8313  0550  0020               	movlb	0	; select bank0
  8314  0551  00A7               	movwf	___flmul@a+3
  8315  0552  0021               	movlb	1	; select bank1
  8316  0553  0849               	movf	(efgtoa@l+2)^(0+128),w
  8317  0554  0020               	movlb	0	; select bank0
  8318  0555  00A6               	movwf	___flmul@a+2
  8319  0556  0021               	movlb	1	; select bank1
  8320  0557  0848               	movf	(efgtoa@l+1)^(0+128),w
  8321  0558  0020               	movlb	0	; select bank0
  8322  0559  00A5               	movwf	___flmul@a+1
  8323  055A  0021               	movlb	1	; select bank1
  8324  055B  0847               	movf	efgtoa@l^(0+128),w
  8325  055C  0020               	movlb	0	; select bank0
  8326  055D  00A4               	movwf	___flmul@a
  8327  055E  0021               	movlb	1	; select bank1
  8328  055F  0858               	movf	(efgtoa@u+3)^(0+128),w
  8329  0560  0020               	movlb	0	; select bank0
  8330  0561  00A3               	movwf	___flmul@b+3
  8331  0562  0021               	movlb	1	; select bank1
  8332  0563  0857               	movf	(efgtoa@u+2)^(0+128),w
  8333  0564  0020               	movlb	0	; select bank0
  8334  0565  00A2               	movwf	___flmul@b+2
  8335  0566  0021               	movlb	1	; select bank1
  8336  0567  0856               	movf	(efgtoa@u+1)^(0+128),w
  8337  0568  0020               	movlb	0	; select bank0
  8338  0569  00A1               	movwf	___flmul@b+1
  8339  056A  0021               	movlb	1	; select bank1
  8340  056B  0855               	movf	efgtoa@u^(0+128),w
  8341  056C  0020               	movlb	0	; select bank0
  8342  056D  00A0               	movwf	___flmul@b
  8343  056E  318D  25D4  3180   	fcall	___flmul
  8344  0571  0020               	movlb	0	; select bank0
  8345  0572  0823               	movf	?___flmul+3,w
  8346  0573  00BD               	movwf	___flsub@a+3
  8347  0574  0822               	movf	?___flmul+2,w
  8348  0575  00BC               	movwf	___flsub@a+2
  8349  0576  0821               	movf	?___flmul+1,w
  8350  0577  00BB               	movwf	___flsub@a+1
  8351  0578  0820               	movf	?___flmul,w
  8352  0579  00BA               	movwf	___flsub@a
  8353  057A  0021               	movlb	1	; select bank1
  8354  057B  0846               	movf	(efgtoa@h+3)^(0+128),w
  8355  057C  0020               	movlb	0	; select bank0
  8356  057D  00C1               	movwf	___flsub@b+3
  8357  057E  0021               	movlb	1	; select bank1
  8358  057F  0845               	movf	(efgtoa@h+2)^(0+128),w
  8359  0580  0020               	movlb	0	; select bank0
  8360  0581  00C0               	movwf	___flsub@b+2
  8361  0582  0021               	movlb	1	; select bank1
  8362  0583  0844               	movf	(efgtoa@h+1)^(0+128),w
  8363  0584  0020               	movlb	0	; select bank0
  8364  0585  00BF               	movwf	___flsub@b+1
  8365  0586  0021               	movlb	1	; select bank1
  8366  0587  0843               	movf	efgtoa@h^(0+128),w
  8367  0588  0020               	movlb	0	; select bank0
  8368  0589  00BE               	movwf	___flsub@b
  8369  058A  319F  27A2  3180   	fcall	___flsub
  8370  058D  0020               	movlb	0	; select bank0
  8371  058E  083D               	movf	?___flsub+3,w
  8372  058F  0021               	movlb	1	; select bank1
  8373  0590  00C6               	movwf	(efgtoa@h+3)^(0+128)
  8374  0591  0020               	movlb	0	; select bank0
  8375  0592  083C               	movf	?___flsub+2,w
  8376  0593  0021               	movlb	1	; select bank1
  8377  0594  00C5               	movwf	(efgtoa@h+2)^(0+128)
  8378  0595  0020               	movlb	0	; select bank0
  8379  0596  083B               	movf	?___flsub+1,w
  8380  0597  0021               	movlb	1	; select bank1
  8381  0598  00C4               	movwf	(efgtoa@h+1)^(0+128)
  8382  0599  0020               	movlb	0	; select bank0
  8383  059A  083A               	movf	?___flsub,w
  8384  059B  0021               	movlb	1	; select bank1
  8385  059C  00C3               	movwf	efgtoa@h^(0+128)
  8386                           
  8387                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  8388  059D  3041               	movlw	65
  8389  059E  0020               	movlb	0	; select bank0
  8390  059F  00A9               	movwf	___fldiv@a+3
  8391  05A0  3020               	movlw	32
  8392  05A1  00A8               	movwf	___fldiv@a+2
  8393  05A2  3000               	movlw	0
  8394  05A3  00A7               	movwf	___fldiv@a+1
  8395  05A4  3000               	movlw	0
  8396  05A5  00A6               	movwf	___fldiv@a
  8397  05A6  0021               	movlb	1	; select bank1
  8398  05A7  0858               	movf	(efgtoa@u+3)^(0+128),w
  8399  05A8  0020               	movlb	0	; select bank0
  8400  05A9  00AD               	movwf	___fldiv@b+3
  8401  05AA  0021               	movlb	1	; select bank1
  8402  05AB  0857               	movf	(efgtoa@u+2)^(0+128),w
  8403  05AC  0020               	movlb	0	; select bank0
  8404  05AD  00AC               	movwf	___fldiv@b+2
  8405  05AE  0021               	movlb	1	; select bank1
  8406  05AF  0856               	movf	(efgtoa@u+1)^(0+128),w
  8407  05B0  0020               	movlb	0	; select bank0
  8408  05B1  00AB               	movwf	___fldiv@b+1
  8409  05B2  0021               	movlb	1	; select bank1
  8410  05B3  0855               	movf	efgtoa@u^(0+128),w
  8411  05B4  0020               	movlb	0	; select bank0
  8412  05B5  00AA               	movwf	___fldiv@b
  8413  05B6  3188  20DF  3180   	fcall	___fldiv
  8414  05B9  0020               	movlb	0	; select bank0
  8415  05BA  0829               	movf	?___fldiv+3,w
  8416  05BB  0021               	movlb	1	; select bank1
  8417  05BC  00D8               	movwf	(efgtoa@u+3)^(0+128)
  8418  05BD  0020               	movlb	0	; select bank0
  8419  05BE  0828               	movf	?___fldiv+2,w
  8420  05BF  0021               	movlb	1	; select bank1
  8421  05C0  00D7               	movwf	(efgtoa@u+2)^(0+128)
  8422  05C1  0020               	movlb	0	; select bank0
  8423  05C2  0827               	movf	?___fldiv+1,w
  8424  05C3  0021               	movlb	1	; select bank1
  8425  05C4  00D6               	movwf	(efgtoa@u+1)^(0+128)
  8426  05C5  0020               	movlb	0	; select bank0
  8427  05C6  0826               	movf	?___fldiv,w
  8428  05C7  0021               	movlb	1	; select bank1
  8429  05C8  00D5               	movwf	efgtoa@u^(0+128)
  8430                           
  8431                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  8432  05C9  30FF               	movlw	255
  8433  05CA  07B6               	addwf	efgtoa@ne^(0+128),f
  8434  05CB  30FF               	movlw	255
  8435  05CC  3DB7               	addwfc	(efgtoa@ne+1)^(0+128),f
  8436                           
  8437                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  8438  05CD  3001               	movlw	1
  8439  05CE  07CB               	addwf	efgtoa@i^(0+128),f
  8440  05CF  3000               	movlw	0
  8441  05D0  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  8442  05D1                     l6691:	
  8443                           
  8444                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  8445  05D1  084C               	movf	(efgtoa@i+1)^(0+128),w
  8446  05D2  3A80               	xorlw	128
  8447  05D3  0020               	movlb	0	; select bank0
  8448  05D4  00D9               	movwf	??_efgtoa
  8449  05D5  0021               	movlb	1	; select bank1
  8450  05D6  0835               	movf	(efgtoa@m+1)^(0+128),w
  8451  05D7  3A80               	xorlw	128
  8452  05D8  0020               	movlb	0	; select bank0
  8453  05D9  0259               	subwf	??_efgtoa,w
  8454  05DA  1D03               	skipz
  8455  05DB  2DDF               	goto	u7215
  8456  05DC  0021               	movlb	1	; select bank1
  8457  05DD  0834               	movf	efgtoa@m^(0+128),w
  8458  05DE  024B               	subwf	efgtoa@i^(0+128),w
  8459  05DF                     u7215:	
  8460  05DF  1803               	skipnc
  8461  05E0  2DEF               	goto	l6695
  8462  05E1  0021               	movlb	1	; select bank1
  8463  05E2  0854               	movf	(efgtoa@n+1)^(0+128),w
  8464  05E3  3A80               	xorlw	128
  8465  05E4  0020               	movlb	0	; select bank0
  8466  05E5  00D9               	movwf	??_efgtoa
  8467  05E6  3080               	movlw	128
  8468  05E7  0259               	subwf	??_efgtoa,w
  8469  05E8  1D03               	skipz
  8470  05E9  2DED               	goto	u7225
  8471  05EA  304B               	movlw	75
  8472  05EB  0021               	movlb	1	; select bank1
  8473  05EC  0253               	subwf	efgtoa@n^(0+128),w
  8474  05ED                     u7225:	
  8475  05ED  1C03               	skipc
  8476  05EE  2C9B               	goto	l6643
  8477  05EF                     l6695:	
  8478                           
  8479                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  8480  05EF  0021               	movlb	1	; select bank1
  8481  05F0  0832               	movf	efgtoa@pp^(0+128),w
  8482  05F1  0433               	iorwf	(efgtoa@pp+1)^(0+128),w
  8483  05F2  1D03               	btfss	3,2
  8484  05F3  2E08               	goto	l6703
  8485  05F4  0022               	movlb	2	; select bank2
  8486  05F5  1E5E               	btfss	_flags^(0+256),4
  8487  05F6  2E08               	goto	l6703
  8488                           
  8489                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  8490  05F7  302E               	movlw	46
  8491  05F8  0020               	movlb	0	; select bank0
  8492  05F9  00D9               	movwf	??_efgtoa
  8493  05FA  0021               	movlb	1	; select bank1
  8494  05FB  0853               	movf	efgtoa@n^(0+128),w
  8495  05FC  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8496  05FD  0086               	movwf	6
  8497  05FE  3002               	movlw	2	; select bank4/5
  8498  05FF  0087               	movwf	7
  8499  0600  0020               	movlb	0	; select bank0
  8500  0601  0859               	movf	??_efgtoa,w
  8501  0602  0081               	movwf	1
  8502  0603  3001               	movlw	1
  8503  0604  0021               	movlb	1	; select bank1
  8504  0605  07D3               	addwf	efgtoa@n^(0+128),f
  8505  0606  3000               	movlw	0
  8506  0607  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  8507  0608                     l6703:	
  8508                           
  8509                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  8510  0608  0021               	movlb	1	; select bank1
  8511  0609  0853               	movf	efgtoa@n^(0+128),w
  8512  060A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8513  060B  0086               	movwf	6
  8514  060C  3002               	movlw	2	; select bank4/5
  8515  060D  0087               	movwf	7
  8516  060E  0181               	clrf	1
  8517                           
  8518                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  8519  060F  3065               	movlw	101
  8520  0610  063F               	xorwf	efgtoa@nmode^(0+128),w
  8521  0611  1D03               	btfss	3,2
  8522  0612  2EDA               	goto	l6765
  8523                           
  8524                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  8525  0613  304F               	movlw	79
  8526  0614  00CB               	movwf	efgtoa@i^(0+128)
  8527  0615  3000               	movlw	0
  8528  0616  00CC               	movwf	(efgtoa@i^(0+128)+1)
  8529                           
  8530                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  8531  0617  084B               	movf	efgtoa@i^(0+128),w
  8532  0618  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8533  0619  0086               	movwf	6
  8534  061A  3002               	movlw	2	; select bank4/5
  8535  061B  0087               	movwf	7
  8536  061C  0181               	clrf	1
  8537                           
  8538                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  8539  061D  01BA               	clrf	efgtoa@sign^(0+128)
  8540  061E  01BB               	clrf	(efgtoa@sign+1)^(0+128)
  8541                           
  8542                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  8543  061F  1FD2               	btfss	(efgtoa@e+1)^(0+128),7
  8544  0620  2E2A               	goto	l6719
  8545                           
  8546                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  8547  0621  3001               	movlw	1
  8548  0622  00BA               	movwf	efgtoa@sign^(0+128)
  8549  0623  3000               	movlw	0
  8550  0624  00BB               	movwf	(efgtoa@sign^(0+128)+1)
  8551                           
  8552                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  8553  0625  09D1               	comf	efgtoa@e^(0+128),f
  8554  0626  09D2               	comf	(efgtoa@e+1)^(0+128),f
  8555  0627  0AD1               	incf	efgtoa@e^(0+128),f
  8556  0628  1903               	skipnz
  8557  0629  0AD2               	incf	(efgtoa@e+1)^(0+128),f
  8558  062A                     l6719:	
  8559                           
  8560                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  8561  062A  3002               	movlw	2
  8562  062B  00BD               	movwf	efgtoa@p^(0+128)
  8563  062C  3000               	movlw	0
  8564  062D  00BE               	movwf	(efgtoa@p^(0+128)+1)
  8565  062E                     l6731:	
  8566                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  8567                           
  8568                           
  8569                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  8570  062E  0851               	movf	efgtoa@e^(0+128),w
  8571  062F  0452               	iorwf	(efgtoa@e+1)^(0+128),w
  8572  0630  1903               	btfsc	3,2
  8573  0631  2E69               	goto	l6733
  8574  0632                     l6721:	
  8575                           
  8576                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  8577  0632  30FF               	movlw	255
  8578  0633  0021               	movlb	1	; select bank1
  8579  0634  07CB               	addwf	efgtoa@i^(0+128),f
  8580  0635  30FF               	movlw	255
  8581  0636  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  8582                           
  8583                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  8584  0637  300A               	movlw	10
  8585  0638  00F1               	movwf	___awmod@divisor
  8586  0639  3000               	movlw	0
  8587  063A  00F2               	movwf	___awmod@divisor+1
  8588  063B  0852               	movf	(efgtoa@e+1)^(0+128),w
  8589  063C  00F4               	movwf	___awmod@dividend+1
  8590  063D  0851               	movf	efgtoa@e^(0+128),w
  8591  063E  00F3               	movwf	___awmod@dividend
  8592  063F  3192  2284  3180   	fcall	___awmod
  8593  0642  0871               	movf	?___awmod,w
  8594  0643  3E30               	addlw	48
  8595  0644  0020               	movlb	0	; select bank0
  8596  0645  00D9               	movwf	??_efgtoa
  8597  0646  0021               	movlb	1	; select bank1
  8598  0647  084B               	movf	efgtoa@i^(0+128),w
  8599  0648  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8600  0649  0086               	movwf	6
  8601  064A  3002               	movlw	2	; select bank4/5
  8602  064B  0087               	movwf	7
  8603  064C  0020               	movlb	0	; select bank0
  8604  064D  0859               	movf	??_efgtoa,w
  8605  064E  0081               	movwf	1
  8606                           
  8607                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  8608  064F  300A               	movlw	10
  8609  0650  00F1               	movwf	___awdiv@divisor
  8610  0651  3000               	movlw	0
  8611  0652  00F2               	movwf	___awdiv@divisor+1
  8612  0653  0021               	movlb	1	; select bank1
  8613  0654  0852               	movf	(efgtoa@e+1)^(0+128),w
  8614  0655  00F4               	movwf	___awdiv@dividend+1
  8615  0656  0851               	movf	efgtoa@e^(0+128),w
  8616  0657  00F3               	movwf	___awdiv@dividend
  8617  0658  3193  23F7  3180   	fcall	___awdiv
  8618  065B  0872               	movf	?___awdiv+1,w
  8619  065C  0021               	movlb	1	; select bank1
  8620  065D  00D2               	movwf	(efgtoa@e+1)^(0+128)
  8621  065E  0871               	movf	?___awdiv,w
  8622  065F  00D1               	movwf	efgtoa@e^(0+128)
  8623                           
  8624                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  8625  0660  30FF               	movlw	255
  8626  0661  07BD               	addwf	efgtoa@p^(0+128),f
  8627  0662  30FF               	movlw	255
  8628  0663  3DBE               	addwfc	(efgtoa@p+1)^(0+128),f
  8629                           
  8630                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  8631  0664  30FF               	movlw	255
  8632  0665  07C0               	addwf	efgtoa@w^(0+128),f
  8633  0666  30FF               	movlw	255
  8634  0667  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  8635  0668  2E2E               	goto	l6731
  8636  0669                     l6733:	
  8637  0669  083E               	movf	(efgtoa@p+1)^(0+128),w
  8638  066A  3A80               	xorlw	128
  8639  066B  0020               	movlb	0	; select bank0
  8640  066C  00D9               	movwf	??_efgtoa
  8641  066D  3080               	movlw	128
  8642  066E  0259               	subwf	??_efgtoa,w
  8643  066F  1D03               	skipz
  8644  0670  2E74               	goto	u7285
  8645  0671  3001               	movlw	1
  8646  0672  0021               	movlb	1	; select bank1
  8647  0673  023D               	subwf	efgtoa@p^(0+128),w
  8648  0674                     u7285:	
  8649  0674  1803               	skipnc
  8650  0675  2E32               	goto	l6721
  8651                           
  8652                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  8653  0676  30FF               	movlw	255
  8654  0677  0021               	movlb	1	; select bank1
  8655  0678  07CB               	addwf	efgtoa@i^(0+128),f
  8656  0679  30FF               	movlw	255
  8657  067A  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  8658                           
  8659                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  8660  067B  083A               	movf	efgtoa@sign^(0+128),w
  8661  067C  043B               	iorwf	(efgtoa@sign+1)^(0+128),w
  8662  067D  1D03               	btfss	3,2
  8663  067E  2E81               	goto	l6741
  8664  067F  302B               	movlw	43
  8665  0680  2E82               	goto	L7
  8666  0681                     l6741:	
  8667  0681  302D               	movlw	45
  8668  0682                     L7:	
  8669  0682  00AA               	movwf	_efgtoa$1510^(0+128)
  8670  0683  3000               	movlw	0
  8671  0684  00AB               	movwf	(_efgtoa$1510^(0+128)+1)
  8672  0685  082A               	movf	_efgtoa$1510^(0+128),w
  8673  0686  0020               	movlb	0	; select bank0
  8674  0687  00D9               	movwf	??_efgtoa
  8675  0688  0021               	movlb	1	; select bank1
  8676  0689  084B               	movf	efgtoa@i^(0+128),w
  8677  068A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8678  068B  0086               	movwf	6
  8679  068C  3002               	movlw	2	; select bank4/5
  8680  068D  0087               	movwf	7
  8681  068E  0020               	movlb	0	; select bank0
  8682  068F  0859               	movf	??_efgtoa,w
  8683  0690  0081               	movwf	1
  8684                           
  8685                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  8686  0691  30FF               	movlw	255
  8687  0692  0021               	movlb	1	; select bank1
  8688  0693  07C0               	addwf	efgtoa@w^(0+128),f
  8689  0694  30FF               	movlw	255
  8690  0695  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  8691                           
  8692                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  8693  0696  30FF               	movlw	255
  8694  0697  07CB               	addwf	efgtoa@i^(0+128),f
  8695  0698  30FF               	movlw	255
  8696  0699  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  8697  069A  0020               	movlb	0	; select bank0
  8698  069B  0858               	movf	efgtoa@c,w
  8699  069C  3EBF               	addlw	191
  8700  069D  00D9               	movwf	??_efgtoa
  8701  069E  30FF               	movlw	255
  8702  069F  1803               	skipnc
  8703  06A0  3000               	movlw	0
  8704  06A1  00DA               	movwf	??_efgtoa+1
  8705  06A2  3000               	movlw	0
  8706  06A3  025A               	subwf	??_efgtoa+1,w
  8707  06A4  301A               	movlw	26
  8708  06A5  1903               	skipnz
  8709  06A6  0259               	subwf	??_efgtoa,w
  8710  06A7  1803               	btfsc	3,0
  8711  06A8  2EAB               	goto	u7300
  8712  06A9  3001               	movlw	1
  8713  06AA  2EAC               	goto	u7310
  8714  06AB                     u7300:	
  8715  06AB  3000               	movlw	0
  8716  06AC                     u7310:	
  8717  06AC  00DB               	movwf	??_efgtoa+2
  8718  06AD  01DC               	clrf	??_efgtoa+3
  8719  06AE  085B               	movf	??_efgtoa+2,w
  8720  06AF  0021               	movlb	1	; select bank1
  8721  06B0  00AE               	movwf	_efgtoa$1512^(0+128)
  8722  06B1  0020               	movlb	0	; select bank0
  8723  06B2  085C               	movf	??_efgtoa+3,w
  8724  06B3  0021               	movlb	1	; select bank1
  8725  06B4  00AF               	movwf	(_efgtoa$1512+1)^(0+128)
  8726  06B5  082E               	movf	_efgtoa$1512^(0+128),w
  8727  06B6  042F               	iorwf	(_efgtoa$1512+1)^(0+128),w
  8728  06B7  1D03               	btfss	3,2
  8729  06B8  2EBB               	goto	l6757
  8730  06B9  3065               	movlw	101
  8731  06BA  2EBC               	goto	L8
  8732  06BB                     l6757:	
  8733  06BB  3045               	movlw	69
  8734  06BC                     L8:	
  8735  06BC  00AC               	movwf	_efgtoa$1511^(0+128)
  8736  06BD  3000               	movlw	0
  8737  06BE  00AD               	movwf	(_efgtoa$1511^(0+128)+1)
  8738  06BF  082C               	movf	_efgtoa$1511^(0+128),w
  8739  06C0  0020               	movlb	0	; select bank0
  8740  06C1  00D9               	movwf	??_efgtoa
  8741  06C2  0021               	movlb	1	; select bank1
  8742  06C3  084B               	movf	efgtoa@i^(0+128),w
  8743  06C4  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8744  06C5  0086               	movwf	6
  8745  06C6  3002               	movlw	2	; select bank4/5
  8746  06C7  0087               	movwf	7
  8747  06C8  0020               	movlb	0	; select bank0
  8748  06C9  0859               	movf	??_efgtoa,w
  8749  06CA  0081               	movwf	1
  8750                           
  8751                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  8752  06CB  30FF               	movlw	255
  8753  06CC  0021               	movlb	1	; select bank1
  8754  06CD  07C0               	addwf	efgtoa@w^(0+128),f
  8755  06CE  30FF               	movlw	255
  8756  06CF  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  8757                           
  8758                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  8759  06D0  084B               	movf	efgtoa@i^(0+128),w
  8760  06D1  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8761  06D2  00F1               	movwf	strcpy@src
  8762  06D3  3002               	movlw	2
  8763  06D4  00F2               	movwf	strcpy@src+1
  8764  06D5  0853               	movf	efgtoa@n^(0+128),w
  8765  06D6  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8766  06D7  319F  27C1  3180   	fcall	_strcpy
  8767  06DA                     l6765:	
  8768                           
  8769                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 502:     re
      +                          turn pad(fp, &dbuf[0], w);
  8770  06DA  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  8771  06DB  0020               	movlb	0	; select bank0
  8772  06DC  00D9               	movwf	??_efgtoa
  8773  06DD  0859               	movf	??_efgtoa,w
  8774  06DE  00A8               	movwf	pad@buf
  8775  06DF  0021               	movlb	1	; select bank1
  8776  06E0  0841               	movf	(efgtoa@w+1)^(0+128),w
  8777  06E1  0020               	movlb	0	; select bank0
  8778  06E2  00AA               	movwf	pad@p+1
  8779  06E3  0021               	movlb	1	; select bank1
  8780  06E4  0840               	movf	efgtoa@w^(0+128),w
  8781  06E5  0020               	movlb	0	; select bank0
  8782  06E6  00A9               	movwf	pad@p
  8783  06E7  0021               	movlb	1	; select bank1
  8784  06E8  083C               	movf	efgtoa@fp^(0+128),w
  8785  06E9  3193  23A7         	fcall	_pad
  8786  06EB  0020               	movlb	0	; select bank0
  8787  06EC  0829               	movf	?_pad+1,w
  8788  06ED  00D5               	movwf	?_efgtoa+1
  8789  06EE  0828               	movf	?_pad,w
  8790  06EF  00D4               	movwf	?_efgtoa
  8791  06F0  0008               	return
  8792  06F1                     __end_of_efgtoa:	
  8793                           
  8794                           	psect	text11
  8795  1013                     __ptext11:	
  8796 ;; *************** function _tolower *****************
  8797 ;; Defined at:
  8798 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
  8799 ;; Parameters:    Size  Location     Type
  8800 ;;  c               2    7[COMMON] int 
  8801 ;; Auto vars:     Size  Location     Type
  8802 ;;		None
  8803 ;; Return value:  Size  Location     Type
  8804 ;;                  2    7[COMMON] int 
  8805 ;; Registers used:
  8806 ;;		wreg, status,2, status,0
  8807 ;; Tracked objects:
  8808 ;;		On entry : 0/0
  8809 ;;		On exit  : 0/0
  8810 ;;		Unchanged: 0/0
  8811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8812 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8813 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8814 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8815 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8816 ;;Total ram usage:        8 bytes
  8817 ;; Hardware stack levels used:    1
  8818 ;; Hardware stack levels required when called:    5
  8819 ;; This function calls:
  8820 ;;		_isupper
  8821 ;; This function is called by:
  8822 ;;		_efgtoa
  8823 ;;		_vfpfcnvrt
  8824 ;; This function uses a non-reentrant model
  8825 ;;
  8826                           
  8827                           
  8828                           ;psect for function _tolower
  8829  1013                     _tolower:	
  8830                           
  8831                           ;incstack = 0
  8832                           ; Regs used in _tolower: [wreg+status,2+status,0]
  8833  1013  0877               	movf	tolower@c,w
  8834  1014  3EBF               	addlw	191
  8835  1015  0020               	movlb	0	; select bank0
  8836  1016  00A0               	movwf	??_tolower
  8837  1017  30FF               	movlw	255
  8838  1018  3D78               	addwfc	tolower@c+1,w
  8839  1019  00A1               	movwf	??_tolower+1
  8840  101A  3000               	movlw	0
  8841  101B  0221               	subwf	??_tolower+1,w
  8842  101C  301A               	movlw	26
  8843  101D  1903               	skipnz
  8844  101E  0220               	subwf	??_tolower,w
  8845  101F  1803               	btfsc	3,0
  8846  1020  2823               	goto	u6750
  8847  1021  3001               	movlw	1
  8848  1022  2824               	goto	u6760
  8849  1023                     u6750:	
  8850  1023  3000               	movlw	0
  8851  1024                     u6760:	
  8852  1024  00A2               	movwf	??_tolower+2
  8853  1025  01A3               	clrf	??_tolower+3
  8854  1026  0822               	movf	??_tolower+2,w
  8855  1027  00F9               	movwf	_tolower$1910
  8856  1028  0823               	movf	??_tolower+3,w
  8857  1029  00FA               	movwf	_tolower$1910+1
  8858  102A  0879               	movf	_tolower$1910,w
  8859  102B  047A               	iorwf	_tolower$1910+1,w
  8860  102C  1903               	btfsc	3,2
  8861  102D  0008               	return
  8862  102E  3020               	movlw	32
  8863  102F  0477               	iorwf	tolower@c,w
  8864  1030  00F7               	movwf	?_tolower
  8865  1031  3000               	movlw	0
  8866  1032  0478               	iorwf	tolower@c+1,w
  8867  1033  00F8               	movwf	?_tolower+1
  8868  1034  0008               	return
  8869  1035                     __end_of_tolower:	
  8870                           
  8871                           	psect	text12
  8872  1ED6                     __ptext12:	
  8873 ;; *************** function _isupper *****************
  8874 ;; Defined at:
  8875 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  8876 ;; Parameters:    Size  Location     Type
  8877 ;;  c               2    1[COMMON] int 
  8878 ;; Auto vars:     Size  Location     Type
  8879 ;;		None
  8880 ;; Return value:  Size  Location     Type
  8881 ;;                  2    1[COMMON] int 
  8882 ;; Registers used:
  8883 ;;		wreg, status,2, status,0
  8884 ;; Tracked objects:
  8885 ;;		On entry : 0/0
  8886 ;;		On exit  : 0/0
  8887 ;;		Unchanged: 0/0
  8888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8889 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8891 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8892 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8893 ;;Total ram usage:        6 bytes
  8894 ;; Hardware stack levels used:    1
  8895 ;; Hardware stack levels required when called:    4
  8896 ;; This function calls:
  8897 ;;		Nothing
  8898 ;; This function is called by:
  8899 ;;		_efgtoa
  8900 ;;		_vfpfcnvrt
  8901 ;;		_tolower
  8902 ;; This function uses a non-reentrant model
  8903 ;;
  8904                           
  8905                           
  8906                           ;psect for function _isupper
  8907  1ED6                     _isupper:	
  8908                           
  8909                           ;incstack = 0
  8910                           ; Regs used in _isupper: [wreg+status,2+status,0]
  8911  1ED6  0871               	movf	isupper@c,w
  8912  1ED7  3EBF               	addlw	191
  8913  1ED8  00F3               	movwf	??_isupper
  8914  1ED9  30FF               	movlw	255
  8915  1EDA  3D72               	addwfc	isupper@c+1,w
  8916  1EDB  00F4               	movwf	??_isupper+1
  8917  1EDC  3000               	movlw	0
  8918  1EDD  0274               	subwf	??_isupper+1,w
  8919  1EDE  301A               	movlw	26
  8920  1EDF  1903               	skipnz
  8921  1EE0  0273               	subwf	??_isupper,w
  8922  1EE1  1803               	btfsc	3,0
  8923  1EE2  2EE5               	goto	u6260
  8924  1EE3  3001               	movlw	1
  8925  1EE4  2EE6               	goto	u6270
  8926  1EE5                     u6260:	
  8927  1EE5  3000               	movlw	0
  8928  1EE6                     u6270:	
  8929  1EE6  00F5               	movwf	??_isupper+2
  8930  1EE7  01F6               	clrf	??_isupper+3
  8931  1EE8  0875               	movf	??_isupper+2,w
  8932  1EE9  00F1               	movwf	?_isupper
  8933  1EEA  0876               	movf	??_isupper+3,w
  8934  1EEB  00F2               	movwf	?_isupper+1
  8935  1EEC  0008               	return
  8936  1EED                     __end_of_isupper:	
  8937                           
  8938                           	psect	text13
  8939  1FC1                     __ptext13:	
  8940 ;; *************** function _strcpy *****************
  8941 ;; Defined at:
  8942 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
  8943 ;; Parameters:    Size  Location     Type
  8944 ;;  dest            1    wreg     PTR unsigned char 
  8945 ;;		 -> dbuf(80), 
  8946 ;;  src             2    1[COMMON] PTR const unsigned char 
  8947 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  8948 ;;		 -> dbuf(80), 
  8949 ;; Auto vars:     Size  Location     Type
  8950 ;;  dest            1    8[COMMON] PTR unsigned char 
  8951 ;;		 -> dbuf(80), 
  8952 ;;  s               2    5[COMMON] PTR const unsigned char 
  8953 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  8954 ;;		 -> dbuf(80), 
  8955 ;;  d               1    7[COMMON] PTR unsigned char 
  8956 ;;		 -> dbuf(80), 
  8957 ;; Return value:  Size  Location     Type
  8958 ;;                  1    wreg      PTR unsigned char 
  8959 ;; Registers used:
  8960 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  8961 ;; Tracked objects:
  8962 ;;		On entry : 0/0
  8963 ;;		On exit  : 0/0
  8964 ;;		Unchanged: 0/0
  8965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8966 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8967 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8968 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8969 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8970 ;;Total ram usage:        8 bytes
  8971 ;; Hardware stack levels used:    1
  8972 ;; Hardware stack levels required when called:    4
  8973 ;; This function calls:
  8974 ;;		Nothing
  8975 ;; This function is called by:
  8976 ;;		_efgtoa
  8977 ;; This function uses a non-reentrant model
  8978 ;;
  8979                           
  8980                           
  8981                           ;psect for function _strcpy
  8982  1FC1                     _strcpy:	
  8983                           
  8984                           ;incstack = 0
  8985                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  8986                           ;strcpy@dest stored from wreg
  8987  1FC1  00F8               	movwf	strcpy@dest
  8988  1FC2  0872               	movf	strcpy@src+1,w
  8989  1FC3  00F6               	movwf	strcpy@s+1
  8990  1FC4  0871               	movf	strcpy@src,w
  8991  1FC5  00F5               	movwf	strcpy@s
  8992  1FC6  0878               	movf	strcpy@dest,w
  8993  1FC7  00F3               	movwf	??_strcpy
  8994  1FC8  0873               	movf	??_strcpy,w
  8995  1FC9  00F7               	movwf	strcpy@d
  8996  1FCA                     l4579:	
  8997  1FCA  0877               	movf	strcpy@d,w
  8998  1FCB  0086               	movwf	6
  8999  1FCC  3002               	movlw	2	; select bank4/5
  9000  1FCD  0087               	movwf	7
  9001  1FCE  0AF7               	incf	strcpy@d,f
  9002  1FCF  0876               	movf	strcpy@s+1,w
  9003  1FD0  00F4               	movwf	??_strcpy+1
  9004  1FD1  0875               	movf	strcpy@s,w
  9005  1FD2  00F3               	movwf	??_strcpy
  9006  1FD3  0AF5               	incf	strcpy@s,f
  9007  1FD4  1903               	skipnz
  9008  1FD5  0AF6               	incf	strcpy@s+1,f
  9009  1FD6  0873               	movf	??_strcpy,w
  9010  1FD7  0084               	movwf	4
  9011  1FD8  0874               	movf	??_strcpy+1,w
  9012  1FD9  0085               	movwf	5
  9013  1FDA  0800               	movf	0,w	;code access
  9014  1FDB  3FC0               	movwi [0]fsr1
  9015  1FDC  0889               	movf	9,f
  9016  1FDD  1903               	btfsc	3,2
  9017  1FDE  0008               	return
  9018  1FDF  2FCA               	goto	l4579
  9019  1FE0                     __end_of_strcpy:	
  9020                           
  9021                           	psect	text14
  9022  13A7                     __ptext14:	
  9023 ;; *************** function _pad *****************
  9024 ;; Defined at:
  9025 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9026 ;; Parameters:    Size  Location     Type
  9027 ;;  fp              1    wreg     PTR struct _IO_FILE
  9028 ;;		 -> NULL(0), 
  9029 ;;  buf             1    8[BANK0 ] PTR unsigned char 
  9030 ;;		 -> dbuf(80), 
  9031 ;;  p               2    9[BANK0 ] int 
  9032 ;; Auto vars:     Size  Location     Type
  9033 ;;  fp              1   16[BANK0 ] PTR struct _IO_FILE
  9034 ;;		 -> NULL(0), 
  9035 ;;  w               2   14[BANK0 ] int 
  9036 ;;  i               2   12[BANK0 ] int 
  9037 ;; Return value:  Size  Location     Type
  9038 ;;                  2    8[BANK0 ] int 
  9039 ;; Registers used:
  9040 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9041 ;; Tracked objects:
  9042 ;;		On entry : 0/0
  9043 ;;		On exit  : 0/0
  9044 ;;		Unchanged: 0/0
  9045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9046 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9047 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9048 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9049 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9050 ;;Total ram usage:        9 bytes
  9051 ;; Hardware stack levels used:    1
  9052 ;; Hardware stack levels required when called:    8
  9053 ;; This function calls:
  9054 ;;		_fputc
  9055 ;;		_fputs
  9056 ;;		_strlen
  9057 ;; This function is called by:
  9058 ;;		_efgtoa
  9059 ;; This function uses a non-reentrant model
  9060 ;;
  9061                           
  9062                           
  9063                           ;psect for function _pad
  9064  13A7                     _pad:	
  9065                           
  9066                           ;incstack = 0
  9067                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9068                           ;pad@fp stored from wreg
  9069  13A7  0020               	movlb	0	; select bank0
  9070  13A8  00B0               	movwf	pad@fp
  9071                           
  9072                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  9073  13A9  0022               	movlb	2	; select bank2
  9074  13AA  1C5E               	btfss	_flags^(0+256),0
  9075  13AB  2BB5               	goto	l6433
  9076                           
  9077                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  9078  13AC  0020               	movlb	0	; select bank0
  9079  13AD  0830               	movf	pad@fp,w
  9080  13AE  00AB               	movwf	??_pad
  9081  13AF  082B               	movf	??_pad,w
  9082  13B0  00A0               	movwf	fputs@fp
  9083  13B1  0828               	movf	pad@buf,w
  9084  13B2  3190  2059  3193   	fcall	_fputs
  9085  13B5                     l6433:	
  9086                           
  9087                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  9088  13B5  0020               	movlb	0	; select bank0
  9089  13B6  1BAA               	btfsc	pad@p+1,7
  9090  13B7  2BBD               	goto	l6437
  9091  13B8  082A               	movf	pad@p+1,w
  9092  13B9  00AF               	movwf	pad@w+1
  9093  13BA  0829               	movf	pad@p,w
  9094  13BB  00AE               	movwf	pad@w
  9095  13BC  2BBF               	goto	l1033
  9096  13BD                     l6437:	
  9097  13BD  01AE               	clrf	pad@w
  9098  13BE  01AF               	clrf	pad@w+1
  9099  13BF                     l1033:	
  9100                           
  9101                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  9102  13BF  01AC               	clrf	pad@i
  9103  13C0  01AD               	clrf	pad@i+1
  9104  13C1                     l6443:	
  9105                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9106                           
  9107                           
  9108                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9109  13C1  082D               	movf	pad@i+1,w
  9110  13C2  3A80               	xorlw	128
  9111  13C3  00AB               	movwf	??_pad
  9112  13C4  082F               	movf	pad@w+1,w
  9113  13C5  3A80               	xorlw	128
  9114  13C6  022B               	subwf	??_pad,w
  9115  13C7  1D03               	skipz
  9116  13C8  2BCB               	goto	u6735
  9117  13C9  082E               	movf	pad@w,w
  9118  13CA  022C               	subwf	pad@i,w
  9119  13CB                     u6735:	
  9120  13CB  1803               	btfsc	3,0
  9121  13CC  2BDF               	goto	l1036
  9122                           
  9123                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  9124  13CD  3020               	movlw	32
  9125  13CE  00F4               	movwf	fputc@c
  9126  13CF  3000               	movlw	0
  9127  13D0  00F5               	movwf	fputc@c+1
  9128  13D1  0020               	movlb	0	; select bank0
  9129  13D2  0830               	movf	pad@fp,w
  9130  13D3  00AB               	movwf	??_pad
  9131  13D4  082B               	movf	??_pad,w
  9132  13D5  00F6               	movwf	fputc@fp
  9133  13D6  3191  2195  3193   	fcall	_fputc
  9134                           
  9135                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  9136  13D9  3001               	movlw	1
  9137  13DA  0020               	movlb	0	; select bank0
  9138  13DB  07AC               	addwf	pad@i,f
  9139  13DC  3000               	movlw	0
  9140  13DD  3DAD               	addwfc	pad@i+1,f
  9141  13DE  2BC1               	goto	l6443
  9142  13DF                     l1036:	
  9143                           
  9144                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  9145  13DF  0022               	movlb	2	; select bank2
  9146  13E0  185E               	btfsc	_flags^(0+256),0
  9147  13E1  2BEB               	goto	l1037
  9148                           
  9149                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  9150  13E2  0020               	movlb	0	; select bank0
  9151  13E3  0830               	movf	pad@fp,w
  9152  13E4  00AB               	movwf	??_pad
  9153  13E5  082B               	movf	??_pad,w
  9154  13E6  00A0               	movwf	fputs@fp
  9155  13E7  0828               	movf	pad@buf,w
  9156  13E8  3190  2059  3193   	fcall	_fputs
  9157  13EB                     l1037:	
  9158                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 92:     }
  9159                           
  9160                           
  9161                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  9162  13EB  0020               	movlb	0	; select bank0
  9163  13EC  0828               	movf	pad@buf,w
  9164  13ED  319F  2734         	fcall	_strlen
  9165  13EF  0020               	movlb	0	; select bank0
  9166  13F0  082E               	movf	pad@w,w
  9167  13F1  0771               	addwf	?_strlen,w
  9168  13F2  00A8               	movwf	?_pad
  9169  13F3  082F               	movf	pad@w+1,w
  9170  13F4  3D72               	addwfc	?_strlen+1,w
  9171  13F5  00A9               	movwf	?_pad+1
  9172  13F6  0008               	return
  9173  13F7                     __end_of_pad:	
  9174                           
  9175                           	psect	text15
  9176  1F34                     __ptext15:	
  9177 ;; *************** function _strlen *****************
  9178 ;; Defined at:
  9179 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  9180 ;; Parameters:    Size  Location     Type
  9181 ;;  s               1    wreg     PTR const unsigned char 
  9182 ;;		 -> dbuf(80), 
  9183 ;; Auto vars:     Size  Location     Type
  9184 ;;  s               1    5[COMMON] PTR const unsigned char 
  9185 ;;		 -> dbuf(80), 
  9186 ;;  a               1    4[COMMON] PTR const unsigned char 
  9187 ;;		 -> dbuf(80), 
  9188 ;; Return value:  Size  Location     Type
  9189 ;;                  2    1[COMMON] unsigned int 
  9190 ;; Registers used:
  9191 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9192 ;; Tracked objects:
  9193 ;;		On entry : 0/0
  9194 ;;		On exit  : 0/0
  9195 ;;		Unchanged: 0/0
  9196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9197 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9198 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9199 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9200 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9201 ;;Total ram usage:        5 bytes
  9202 ;; Hardware stack levels used:    1
  9203 ;; Hardware stack levels required when called:    4
  9204 ;; This function calls:
  9205 ;;		Nothing
  9206 ;; This function is called by:
  9207 ;;		_pad
  9208 ;; This function uses a non-reentrant model
  9209 ;;
  9210                           
  9211                           
  9212                           ;psect for function _strlen
  9213  1F34                     _strlen:	
  9214                           
  9215                           ;incstack = 0
  9216                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  9217                           ;strlen@s stored from wreg
  9218  1F34  00F5               	movwf	strlen@s
  9219  1F35  0875               	movf	strlen@s,w
  9220  1F36  00F3               	movwf	??_strlen
  9221  1F37  0873               	movf	??_strlen,w
  9222  1F38  00F4               	movwf	strlen@a
  9223  1F39                     l4303:	
  9224  1F39  0875               	movf	strlen@s,w
  9225  1F3A  0086               	movwf	6
  9226  1F3B  3002               	movlw	2	; select bank4/5
  9227  1F3C  0087               	movwf	7
  9228  1F3D  0801               	movf	1,w
  9229  1F3E  1903               	btfsc	3,2
  9230  1F3F  2F45               	goto	l4305
  9231  1F40  3001               	movlw	1
  9232  1F41  00F3               	movwf	??_strlen
  9233  1F42  0873               	movf	??_strlen,w
  9234  1F43  07F5               	addwf	strlen@s,f
  9235  1F44  2F39               	goto	l4303
  9236  1F45                     l4305:	
  9237  1F45  0874               	movf	strlen@a,w
  9238  1F46  0275               	subwf	strlen@s,w
  9239  1F47  00F1               	movwf	?_strlen
  9240  1F48  01F2               	clrf	?_strlen+1
  9241  1F49  1BF1               	btfsc	?_strlen,7
  9242  1F4A  03F2               	decf	?_strlen+1,f
  9243  1F4B  0008               	return
  9244  1F4C                     __end_of_strlen:	
  9245                           
  9246                           	psect	text16
  9247  1059                     __ptext16:	
  9248 ;; *************** function _fputs *****************
  9249 ;; Defined at:
  9250 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  9251 ;; Parameters:    Size  Location     Type
  9252 ;;  s               1    wreg     PTR const unsigned char 
  9253 ;;		 -> dbuf(80), 
  9254 ;;  fp              1    0[BANK0 ] PTR struct _IO_FILE
  9255 ;;		 -> NULL(0), 
  9256 ;; Auto vars:     Size  Location     Type
  9257 ;;  s               1    7[BANK0 ] PTR const unsigned char 
  9258 ;;		 -> dbuf(80), 
  9259 ;;  i               2    5[BANK0 ] int 
  9260 ;;  c               1    4[BANK0 ] unsigned char 
  9261 ;; Return value:  Size  Location     Type
  9262 ;;                  2    0[BANK0 ] int 
  9263 ;; Registers used:
  9264 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9265 ;; Tracked objects:
  9266 ;;		On entry : 0/0
  9267 ;;		On exit  : 0/0
  9268 ;;		Unchanged: 0/0
  9269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9270 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9271 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9272 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9273 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9274 ;;Total ram usage:        8 bytes
  9275 ;; Hardware stack levels used:    1
  9276 ;; Hardware stack levels required when called:    7
  9277 ;; This function calls:
  9278 ;;		_fputc
  9279 ;; This function is called by:
  9280 ;;		_pad
  9281 ;; This function uses a non-reentrant model
  9282 ;;
  9283                           
  9284                           
  9285                           ;psect for function _fputs
  9286  1059                     _fputs:	
  9287                           
  9288                           ;incstack = 0
  9289                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9290                           ;fputs@s stored from wreg
  9291  1059  0020               	movlb	0	; select bank0
  9292  105A  00A7               	movwf	fputs@s
  9293  105B  01A5               	clrf	fputs@i
  9294  105C  01A6               	clrf	fputs@i+1
  9295  105D                     l6229:	
  9296  105D  0825               	movf	fputs@i,w
  9297  105E  0727               	addwf	fputs@s,w
  9298  105F  00A1               	movwf	??_fputs
  9299  1060  0821               	movf	??_fputs,w
  9300  1061  0086               	movwf	6
  9301  1062  3002               	movlw	2	; select bank4/5
  9302  1063  0087               	movwf	7
  9303  1064  0801               	movf	1,w
  9304  1065  00A2               	movwf	??_fputs+1
  9305  1066  0822               	movf	??_fputs+1,w
  9306  1067  00A4               	movwf	fputs@c
  9307  1068  0824               	movf	fputs@c,w
  9308  1069  1903               	btfsc	3,2
  9309  106A  0008               	return
  9310  106B  0824               	movf	fputs@c,w
  9311  106C  00A1               	movwf	??_fputs
  9312  106D  01A2               	clrf	??_fputs+1
  9313  106E  0821               	movf	??_fputs,w
  9314  106F  00F4               	movwf	fputc@c
  9315  1070  0822               	movf	??_fputs+1,w
  9316  1071  00F5               	movwf	fputc@c+1
  9317  1072  0820               	movf	fputs@fp,w
  9318  1073  00A3               	movwf	??_fputs+2
  9319  1074  0823               	movf	??_fputs+2,w
  9320  1075  00F6               	movwf	fputc@fp
  9321  1076  3191  2195  3190   	fcall	_fputc
  9322  1079  3001               	movlw	1
  9323  107A  0020               	movlb	0	; select bank0
  9324  107B  07A5               	addwf	fputs@i,f
  9325  107C  3000               	movlw	0
  9326  107D  3DA6               	addwfc	fputs@i+1,f
  9327  107E  285D               	goto	l6229
  9328  107F                     __end_of_fputs:	
  9329                           
  9330                           	psect	text17
  9331  1195                     __ptext17:	
  9332 ;; *************** function _fputc *****************
  9333 ;; Defined at:
  9334 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  9335 ;; Parameters:    Size  Location     Type
  9336 ;;  c               2    4[COMMON] int 
  9337 ;;  fp              1    6[COMMON] PTR struct _IO_FILE
  9338 ;;		 -> NULL(0), 
  9339 ;; Auto vars:     Size  Location     Type
  9340 ;;		None
  9341 ;; Return value:  Size  Location     Type
  9342 ;;                  2    4[COMMON] int 
  9343 ;; Registers used:
  9344 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9345 ;; Tracked objects:
  9346 ;;		On entry : 0/0
  9347 ;;		On exit  : 0/0
  9348 ;;		Unchanged: 0/0
  9349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9350 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9352 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9353 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9354 ;;Total ram usage:        8 bytes
  9355 ;; Hardware stack levels used:    1
  9356 ;; Hardware stack levels required when called:    6
  9357 ;; This function calls:
  9358 ;;		_putch
  9359 ;; This function is called by:
  9360 ;;		_pad
  9361 ;;		_vfpfcnvrt
  9362 ;;		_fputs
  9363 ;; This function uses a non-reentrant model
  9364 ;;
  9365                           
  9366                           
  9367                           ;psect for function _fputc
  9368  1195                     _fputc:	
  9369                           
  9370                           ;incstack = 0
  9371                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9372  1195  0876               	movf	fputc@fp,w
  9373  1196  1D03               	btfss	3,2
  9374  1197  0876               	movf	fputc@fp,w
  9375  1198  1D03               	btfss	3,2
  9376  1199  299E               	goto	l4127
  9377  119A  0874               	movf	fputc@c,w
  9378  119B  319D  25AF         	fcall	_putch
  9379  119D  0008               	return
  9380  119E                     l4127:	
  9381  119E  0876               	movf	fputc@fp,w
  9382  119F  3E03               	addlw	3
  9383  11A0  0086               	movwf	6
  9384  11A1  0187               	clrf	7
  9385  11A2  0016               	moviw fsr1++
  9386  11A3  0401               	iorwf	1,w
  9387  11A4  1903               	btfsc	3,2
  9388  11A5  29C1               	goto	l4131
  9389  11A6  0876               	movf	fputc@fp,w
  9390  11A7  3E03               	addlw	3
  9391  11A8  0086               	movwf	6
  9392  11A9  0187               	clrf	7
  9393  11AA  3F40               	moviw [0]fsr1
  9394  11AB  00F7               	movwf	??_fputc
  9395  11AC  3F41               	moviw [1]fsr1
  9396  11AD  00F8               	movwf	??_fputc+1
  9397  11AE  0A76               	incf	fputc@fp,w
  9398  11AF  0086               	movwf	6
  9399  11B0  0187               	clrf	7
  9400  11B1  3F40               	moviw [0]fsr1
  9401  11B2  00F9               	movwf	??_fputc+2
  9402  11B3  3F41               	moviw [1]fsr1
  9403  11B4  00FA               	movwf	??_fputc+3
  9404  11B5  087A               	movf	??_fputc+3,w
  9405  11B6  3A80               	xorlw	128
  9406  11B7  00FB               	movwf	??_fputc+4
  9407  11B8  0878               	movf	??_fputc+1,w
  9408  11B9  3A80               	xorlw	128
  9409  11BA  027B               	subwf	??_fputc+4,w
  9410  11BB  1D03               	skipz
  9411  11BC  29BF               	goto	u3225
  9412  11BD  0877               	movf	??_fputc,w
  9413  11BE  0279               	subwf	??_fputc+2,w
  9414  11BF                     u3225:	
  9415  11BF  1803               	skipnc
  9416  11C0  0008               	return
  9417  11C1                     l4131:	
  9418  11C1  0A76               	incf	fputc@fp,w
  9419  11C2  0086               	movwf	6
  9420  11C3  0187               	clrf	7
  9421  11C4  3001               	movlw	1
  9422  11C5  0781               	addwf	1,f
  9423  11C6  3141               	addfsr 1,1
  9424  11C7  1803               	skipnc
  9425  11C8  0A81               	incf	1,f
  9426  11C9  0008               	return
  9427  11CA                     __end_of_fputc:	
  9428                           
  9429                           	psect	text18
  9430  1DAF                     __ptext18:	
  9431 ;; *************** function _putch *****************
  9432 ;; Defined at:
  9433 ;;		line 201 in file "mcc_generated_files/eusart.c"
  9434 ;; Parameters:    Size  Location     Type
  9435 ;;  txData          1    wreg     unsigned char 
  9436 ;; Auto vars:     Size  Location     Type
  9437 ;;  txData          1    3[COMMON] unsigned char 
  9438 ;; Return value:  Size  Location     Type
  9439 ;;                  1    wreg      void 
  9440 ;; Registers used:
  9441 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9442 ;; Tracked objects:
  9443 ;;		On entry : 0/0
  9444 ;;		On exit  : 0/0
  9445 ;;		Unchanged: 0/0
  9446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9448 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9450 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9451 ;;Total ram usage:        1 bytes
  9452 ;; Hardware stack levels used:    1
  9453 ;; Hardware stack levels required when called:    5
  9454 ;; This function calls:
  9455 ;;		_EUSART_Write
  9456 ;; This function is called by:
  9457 ;;		_fputc
  9458 ;; This function uses a non-reentrant model
  9459 ;;
  9460                           
  9461                           
  9462                           ;psect for function _putch
  9463  1DAF                     _putch:	
  9464                           
  9465                           ;incstack = 0
  9466                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9467                           ;putch@txData stored from wreg
  9468  1DAF  00F3               	movwf	putch@txData
  9469                           
  9470                           ;mcc_generated_files/eusart.c: 201: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 202: {;mcc_generated_files/eusart.c: 203:     EUSART_Write(txData);
  9471  1DB0  0873               	movf	putch@txData,w
  9472  1DB1  3190  2035         	fcall	_EUSART_Write
  9473  1DB3  0008               	return
  9474  1DB4                     __end_of_putch:	
  9475                           
  9476                           	psect	text19
  9477  1035                     __ptext19:	
  9478 ;; *************** function _EUSART_Write *****************
  9479 ;; Defined at:
  9480 ;;		line 173 in file "mcc_generated_files/eusart.c"
  9481 ;; Parameters:    Size  Location     Type
  9482 ;;  txData          1    wreg     unsigned char 
  9483 ;; Auto vars:     Size  Location     Type
  9484 ;;  txData          1    2[COMMON] unsigned char 
  9485 ;; Return value:  Size  Location     Type
  9486 ;;                  1    wreg      void 
  9487 ;; Registers used:
  9488 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9489 ;; Tracked objects:
  9490 ;;		On entry : 0/0
  9491 ;;		On exit  : 0/0
  9492 ;;		Unchanged: 0/0
  9493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9495 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9496 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9497 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9498 ;;Total ram usage:        2 bytes
  9499 ;; Hardware stack levels used:    1
  9500 ;; Hardware stack levels required when called:    4
  9501 ;; This function calls:
  9502 ;;		Nothing
  9503 ;; This function is called by:
  9504 ;;		_putch
  9505 ;; This function uses a non-reentrant model
  9506 ;;
  9507                           
  9508                           
  9509                           ;psect for function _EUSART_Write
  9510  1035                     _EUSART_Write:	
  9511                           
  9512                           ;incstack = 0
  9513                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  9514                           ;EUSART_Write@txData stored from wreg
  9515  1035  00F2               	movwf	EUSART_Write@txData
  9516  1036                     l3985:	
  9517                           ;mcc_generated_files/eusart.c: 173: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 174: {;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemai
      +                          ning)
  9518                           
  9519                           
  9520                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
  9521  1036  0022               	movlb	2	; select bank2
  9522  1037  086F               	movf	_eusartTxBufferRemaining^(0+256),w	;volatile
  9523  1038  1903               	btfsc	3,2
  9524  1039  2836               	goto	l3985
  9525                           
  9526                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TXIE)
  9527  103A  0021               	movlb	1	; select bank1
  9528  103B  1A11               	btfsc	17,4	;volatile
  9529  103C  2841               	goto	l216
  9530                           
  9531                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TX1
      +                          REG = txData;
  9532  103D  0872               	movf	EUSART_Write@txData,w
  9533  103E  0023               	movlb	3	; select bank3
  9534  103F  009A               	movwf	26	;volatile
  9535                           
  9536                           ;mcc_generated_files/eusart.c: 182:     }
  9537  1040  2856               	goto	l3999
  9538  1041                     l216:	
  9539                           ;mcc_generated_files/eusart.c: 183:     else
  9540                           
  9541                           
  9542                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TXIE = 0;
  9543  1041  1211               	bcf	17,4	;volatile
  9544                           
  9545                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
  9546  1042  0872               	movf	EUSART_Write@txData,w
  9547  1043  00F1               	movwf	??_EUSART_Write
  9548  1044  086F               	movf	_eusartTxHead^(0+128),w
  9549  1045  3EC5               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
  9550  1046  0086               	movwf	6
  9551  1047  3001               	movlw	1	; select bank3/4
  9552  1048  0087               	movwf	7
  9553  1049  0871               	movf	??_EUSART_Write,w
  9554  104A  0081               	movwf	1
  9555  104B  3001               	movlw	1
  9556  104C  00F1               	movwf	??_EUSART_Write
  9557  104D  0871               	movf	??_EUSART_Write,w
  9558  104E  07EF               	addwf	_eusartTxHead^(0+128),f	;volatile
  9559                           
  9560                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  9561  104F  3008               	movlw	8
  9562  1050  026F               	subwf	_eusartTxHead^(0+128),w	;volatile
  9563  1051  1803               	btfsc	3,0
  9564                           
  9565                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
  9566  1052  01EF               	clrf	_eusartTxHead^(0+128)	;volatile
  9567                           
  9568                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
  9569  1053  3001               	movlw	1
  9570  1054  0022               	movlb	2	; select bank2
  9571  1055  02EF               	subwf	_eusartTxBufferRemaining^(0+256),f	;volatile
  9572  1056                     l3999:	
  9573                           
  9574                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TXIE = 1;
  9575  1056  0021               	movlb	1	; select bank1
  9576  1057  1611               	bsf	17,4	;volatile
  9577  1058  0008               	return
  9578  1059                     __end_of_EUSART_Write:	
  9579                           
  9580                           	psect	text20
  9581  06F1                     __ptext20:	
  9582 ;; *************** function _floorf *****************
  9583 ;; Defined at:
  9584 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
  9585 ;; Parameters:    Size  Location     Type
  9586 ;;  x               4   32[BANK0 ] float 
  9587 ;; Auto vars:     Size  Location     Type
  9588 ;;  u               4   48[BANK0 ] struct .
  9589 ;;  m               4   42[BANK0 ] unsigned long 
  9590 ;;  e               2   46[BANK0 ] int 
  9591 ;; Return value:  Size  Location     Type
  9592 ;;                  4   32[BANK0 ] float 
  9593 ;; Registers used:
  9594 ;;		wreg, status,2, status,0
  9595 ;; Tracked objects:
  9596 ;;		On entry : 0/0
  9597 ;;		On exit  : 0/0
  9598 ;;		Unchanged: 0/0
  9599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9600 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9601 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9602 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9603 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9604 ;;Total ram usage:       20 bytes
  9605 ;; Hardware stack levels used:    1
  9606 ;; Hardware stack levels required when called:    4
  9607 ;; This function calls:
  9608 ;;		Nothing
  9609 ;; This function is called by:
  9610 ;;		_efgtoa
  9611 ;; This function uses a non-reentrant model
  9612 ;;
  9613                           
  9614                           
  9615                           ;psect for function _floorf
  9616  06F1                     _floorf:	
  9617                           
  9618                           ;incstack = 0
  9619                           ; Regs used in _floorf: [wreg+status,2+status,0]
  9620  06F1  0022               	movlb	2	; select bank2
  9621  06F2  0853               	movf	(floorf@F524+3)^(0+256),w
  9622  06F3  0020               	movlb	0	; select bank0
  9623  06F4  00D3               	movwf	floorf@u+3
  9624  06F5  0022               	movlb	2	; select bank2
  9625  06F6  0852               	movf	(floorf@F524+2)^(0+256),w
  9626  06F7  0020               	movlb	0	; select bank0
  9627  06F8  00D2               	movwf	floorf@u+2
  9628  06F9  0022               	movlb	2	; select bank2
  9629  06FA  0851               	movf	(floorf@F524+1)^(0+256),w
  9630  06FB  0020               	movlb	0	; select bank0
  9631  06FC  00D1               	movwf	floorf@u+1
  9632  06FD  0022               	movlb	2	; select bank2
  9633  06FE  0850               	movf	floorf@F524^(0+256),w
  9634  06FF  0020               	movlb	0	; select bank0
  9635  0700  00D0               	movwf	floorf@u
  9636  0701  0843               	movf	floorf@x+3,w
  9637  0702  00D3               	movwf	floorf@u+3
  9638  0703  0842               	movf	floorf@x+2,w
  9639  0704  00D2               	movwf	floorf@u+2
  9640  0705  0841               	movf	floorf@x+1,w
  9641  0706  00D1               	movwf	floorf@u+1
  9642  0707  0840               	movf	floorf@x,w
  9643  0708  00D0               	movwf	floorf@u
  9644  0709  0850               	movf	floorf@u,w
  9645  070A  00C4               	movwf	??_floorf
  9646  070B  0851               	movf	floorf@u+1,w
  9647  070C  00C5               	movwf	??_floorf+1
  9648  070D  0852               	movf	floorf@u+2,w
  9649  070E  00C6               	movwf	??_floorf+2
  9650  070F  0853               	movf	floorf@u+3,w
  9651  0710  00C7               	movwf	??_floorf+3
  9652  0711  3017               	movlw	23
  9653  0712                     u3955:	
  9654  0712  36C7               	lsrf	??_floorf+3,f
  9655  0713  0CC6               	rrf	??_floorf+2,f
  9656  0714  0CC5               	rrf	??_floorf+1,f
  9657  0715  0CC4               	rrf	??_floorf,f
  9658  0716  0B89               	decfsz	9,f
  9659  0717  2F12               	goto	u3955
  9660  0718  30FF               	movlw	255
  9661  0719  0544               	andwf	??_floorf,w
  9662  071A  00C8               	movwf	??_floorf+4
  9663  071B  3000               	movlw	0
  9664  071C  0545               	andwf	??_floorf+1,w
  9665  071D  00C9               	movwf	??_floorf+5
  9666  071E  0848               	movf	??_floorf+4,w
  9667  071F  3E81               	addlw	129
  9668  0720  00CE               	movwf	floorf@e
  9669  0721  30FF               	movlw	255
  9670  0722  3D49               	addwfc	??_floorf+5,w
  9671  0723  00CF               	movwf	floorf@e+1
  9672  0724  084F               	movf	floorf@e+1,w
  9673  0725  3A80               	xorlw	128
  9674  0726  00C4               	movwf	??_floorf
  9675  0727  3080               	movlw	128
  9676  0728  0244               	subwf	??_floorf,w
  9677  0729  1D03               	skipz
  9678  072A  2F2D               	goto	u3965
  9679  072B  3017               	movlw	23
  9680  072C  024E               	subwf	floorf@e,w
  9681  072D                     u3965:	
  9682  072D  1803               	btfsc	3,0
  9683  072E  0008               	return
  9684  072F  0020               	movlb	0	; select bank0
  9685  0730  1BCF               	btfsc	floorf@e+1,7
  9686  0731  2F8A               	goto	l4611
  9687  0732  30FF               	movlw	255
  9688  0733  00C4               	movwf	??_floorf
  9689  0734  30FF               	movlw	255
  9690  0735  00C5               	movwf	??_floorf+1
  9691  0736  307F               	movlw	127
  9692  0737  00C6               	movwf	??_floorf+2
  9693  0738  3000               	movlw	0
  9694  0739  00C7               	movwf	??_floorf+3
  9695  073A  0A4E               	incf	floorf@e,w
  9696  073B  2F40               	goto	u3980
  9697  073C                     u3985:	
  9698  073C  37C7               	asrf	??_floorf+3,f
  9699  073D  0CC6               	rrf	??_floorf+2,f
  9700  073E  0CC5               	rrf	??_floorf+1,f
  9701  073F  0CC4               	rrf	??_floorf,f
  9702  0740                     u3980:	
  9703  0740  0B89               	decfsz	9,f
  9704  0741  2F3C               	goto	u3985
  9705  0742  0847               	movf	??_floorf+3,w
  9706  0743  00CD               	movwf	floorf@m+3
  9707  0744  0846               	movf	??_floorf+2,w
  9708  0745  00CC               	movwf	floorf@m+2
  9709  0746  0845               	movf	??_floorf+1,w
  9710  0747  00CB               	movwf	floorf@m+1
  9711  0748  0844               	movf	??_floorf,w
  9712  0749  00CA               	movwf	floorf@m
  9713  074A  0850               	movf	floorf@u,w
  9714  074B  054A               	andwf	floorf@m,w
  9715  074C  00C4               	movwf	??_floorf
  9716  074D  0851               	movf	floorf@u+1,w
  9717  074E  054B               	andwf	floorf@m+1,w
  9718  074F  00C5               	movwf	??_floorf+1
  9719  0750  0852               	movf	floorf@u+2,w
  9720  0751  054C               	andwf	floorf@m+2,w
  9721  0752  00C6               	movwf	??_floorf+2
  9722  0753  0853               	movf	floorf@u+3,w
  9723  0754  054D               	andwf	floorf@m+3,w
  9724  0755  00C7               	movwf	??_floorf+3
  9725  0756  0847               	movf	??_floorf+3,w
  9726  0757  0446               	iorwf	??_floorf+2,w
  9727  0758  0445               	iorwf	??_floorf+1,w
  9728  0759  0444               	iorwf	??_floorf,w
  9729  075A  1903               	btfsc	3,2
  9730  075B  0008               	return
  9731  075C  0850               	movf	floorf@u,w
  9732  075D  00C4               	movwf	??_floorf
  9733  075E  0851               	movf	floorf@u+1,w
  9734  075F  00C5               	movwf	??_floorf+1
  9735  0760  0852               	movf	floorf@u+2,w
  9736  0761  00C6               	movwf	??_floorf+2
  9737  0762  0853               	movf	floorf@u+3,w
  9738  0763  00C7               	movwf	??_floorf+3
  9739  0764  301F               	movlw	31
  9740  0765                     u4005:	
  9741  0765  36C7               	lsrf	??_floorf+3,f
  9742  0766  0CC6               	rrf	??_floorf+2,f
  9743  0767  0CC5               	rrf	??_floorf+1,f
  9744  0768  0CC4               	rrf	??_floorf,f
  9745  0769  0B89               	decfsz	9,f
  9746  076A  2F65               	goto	u4005
  9747  076B  0847               	movf	??_floorf+3,w
  9748  076C  0446               	iorwf	??_floorf+2,w
  9749  076D  0445               	iorwf	??_floorf+1,w
  9750  076E  0444               	iorwf	??_floorf,w
  9751  076F  1903               	skipnz
  9752  0770  2F79               	goto	l4609
  9753  0771  084A               	movf	floorf@m,w
  9754  0772  07D0               	addwf	floorf@u,f
  9755  0773  084B               	movf	floorf@m+1,w
  9756  0774  3DD1               	addwfc	floorf@u+1,f
  9757  0775  084C               	movf	floorf@m+2,w
  9758  0776  3DD2               	addwfc	floorf@u+2,f
  9759  0777  084D               	movf	floorf@m+3,w
  9760  0778  3DD3               	addwfc	floorf@u+3,f
  9761  0779                     l4609:	
  9762  0779  094A               	comf	floorf@m,w
  9763  077A  00C4               	movwf	??_floorf
  9764  077B  094B               	comf	floorf@m+1,w
  9765  077C  00C5               	movwf	??_floorf+1
  9766  077D  094C               	comf	floorf@m+2,w
  9767  077E  00C6               	movwf	??_floorf+2
  9768  077F  094D               	comf	floorf@m+3,w
  9769  0780  00C7               	movwf	??_floorf+3
  9770  0781  0844               	movf	??_floorf,w
  9771  0782  05D0               	andwf	floorf@u,f
  9772  0783  0845               	movf	??_floorf+1,w
  9773  0784  05D1               	andwf	floorf@u+1,f
  9774  0785  0846               	movf	??_floorf+2,w
  9775  0786  05D2               	andwf	floorf@u+2,f
  9776  0787  0847               	movf	??_floorf+3,w
  9777  0788  05D3               	andwf	floorf@u+3,f
  9778  0789  2FC0               	goto	l1625
  9779  078A                     l4611:	
  9780  078A  0850               	movf	floorf@u,w
  9781  078B  00C4               	movwf	??_floorf
  9782  078C  0851               	movf	floorf@u+1,w
  9783  078D  00C5               	movwf	??_floorf+1
  9784  078E  0852               	movf	floorf@u+2,w
  9785  078F  00C6               	movwf	??_floorf+2
  9786  0790  0853               	movf	floorf@u+3,w
  9787  0791  00C7               	movwf	??_floorf+3
  9788  0792  301F               	movlw	31
  9789  0793                     u4025:	
  9790  0793  36C7               	lsrf	??_floorf+3,f
  9791  0794  0CC6               	rrf	??_floorf+2,f
  9792  0795  0CC5               	rrf	??_floorf+1,f
  9793  0796  0CC4               	rrf	??_floorf,f
  9794  0797  0B89               	decfsz	9,f
  9795  0798  2F93               	goto	u4025
  9796  0799  0847               	movf	??_floorf+3,w
  9797  079A  0446               	iorwf	??_floorf+2,w
  9798  079B  0445               	iorwf	??_floorf+1,w
  9799  079C  0444               	iorwf	??_floorf,w
  9800  079D  1D03               	skipz
  9801  079E  2FA3               	goto	l4615
  9802  079F  3000               	movlw	0
  9803  07A0  00D3               	movwf	floorf@u+3
  9804  07A1  3000               	movlw	0
  9805  07A2  2FBB               	goto	L9
  9806  07A3                     l4615:	
  9807  07A3  0850               	movf	floorf@u,w
  9808  07A4  00C4               	movwf	??_floorf
  9809  07A5  0851               	movf	floorf@u+1,w
  9810  07A6  00C5               	movwf	??_floorf+1
  9811  07A7  0852               	movf	floorf@u+2,w
  9812  07A8  00C6               	movwf	??_floorf+2
  9813  07A9  0853               	movf	floorf@u+3,w
  9814  07AA  00C7               	movwf	??_floorf+3
  9815  07AB  3001               	movlw	1
  9816  07AC                     u4045:	
  9817  07AC  35C4               	lslf	??_floorf,f
  9818  07AD  0DC5               	rlf	??_floorf+1,f
  9819  07AE  0DC6               	rlf	??_floorf+2,f
  9820  07AF  0DC7               	rlf	??_floorf+3,f
  9821  07B0  0B89               	decfsz	9,f
  9822  07B1  2FAC               	goto	u4045
  9823  07B2  0847               	movf	??_floorf+3,w
  9824  07B3  0446               	iorwf	??_floorf+2,w
  9825  07B4  0445               	iorwf	??_floorf+1,w
  9826  07B5  0444               	iorwf	??_floorf,w
  9827  07B6  1903               	skipnz
  9828  07B7  2FC0               	goto	l1625
  9829  07B8  30BF               	movlw	191
  9830  07B9  00D3               	movwf	floorf@u+3
  9831  07BA  3080               	movlw	128
  9832  07BB                     L9:	
  9833  07BB  00D2               	movwf	floorf@u+2
  9834  07BC  3000               	movlw	0
  9835  07BD  00D1               	movwf	floorf@u+1
  9836  07BE  3000               	movlw	0
  9837  07BF  00D0               	movwf	floorf@u
  9838  07C0                     l1625:	
  9839  07C0  0853               	movf	floorf@u+3,w
  9840  07C1  00C3               	movwf	?_floorf+3
  9841  07C2  0852               	movf	floorf@u+2,w
  9842  07C3  00C2               	movwf	?_floorf+2
  9843  07C4  0851               	movf	floorf@u+1,w
  9844  07C5  00C1               	movwf	?_floorf+1
  9845  07C6  0850               	movf	floorf@u,w
  9846  07C7  00C0               	movwf	?_floorf
  9847  07C8  0008               	return
  9848  07C9                     __end_of_floorf:	
  9849                           
  9850                           	psect	text21
  9851  14FF                     __ptext21:	
  9852 ;; *************** function ___fpclassifyf *****************
  9853 ;; Defined at:
  9854 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
  9855 ;; Parameters:    Size  Location     Type
  9856 ;;  x               4    1[COMMON] float 
  9857 ;; Auto vars:     Size  Location     Type
  9858 ;;  u               4    2[BANK0 ] struct .
  9859 ;;  e               2    0[BANK0 ] int 
  9860 ;; Return value:  Size  Location     Type
  9861 ;;                  2    1[COMMON] int 
  9862 ;; Registers used:
  9863 ;;		wreg, status,2, status,0
  9864 ;; Tracked objects:
  9865 ;;		On entry : 0/0
  9866 ;;		On exit  : 0/0
  9867 ;;		Unchanged: 0/0
  9868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9869 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9870 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9871 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9872 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9873 ;;Total ram usage:       16 bytes
  9874 ;; Hardware stack levels used:    1
  9875 ;; Hardware stack levels required when called:    4
  9876 ;; This function calls:
  9877 ;;		Nothing
  9878 ;; This function is called by:
  9879 ;;		_efgtoa
  9880 ;; This function uses a non-reentrant model
  9881 ;;
  9882                           
  9883                           
  9884                           ;psect for function ___fpclassifyf
  9885  14FF                     ___fpclassifyf:	
  9886                           
  9887                           ;incstack = 0
  9888                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  9889  14FF  0022               	movlb	2	; select bank2
  9890  1500  0857               	movf	(___fpclassifyf@F463+3)^(0+256),w
  9891  1501  0020               	movlb	0	; select bank0
  9892  1502  00A5               	movwf	___fpclassifyf@u+3
  9893  1503  0022               	movlb	2	; select bank2
  9894  1504  0856               	movf	(___fpclassifyf@F463+2)^(0+256),w
  9895  1505  0020               	movlb	0	; select bank0
  9896  1506  00A4               	movwf	___fpclassifyf@u+2
  9897  1507  0022               	movlb	2	; select bank2
  9898  1508  0855               	movf	(___fpclassifyf@F463+1)^(0+256),w
  9899  1509  0020               	movlb	0	; select bank0
  9900  150A  00A3               	movwf	___fpclassifyf@u+1
  9901  150B  0022               	movlb	2	; select bank2
  9902  150C  0854               	movf	___fpclassifyf@F463^(0+256),w
  9903  150D  0020               	movlb	0	; select bank0
  9904  150E  00A2               	movwf	___fpclassifyf@u
  9905  150F  0874               	movf	___fpclassifyf@x+3,w
  9906  1510  00A5               	movwf	___fpclassifyf@u+3
  9907  1511  0873               	movf	___fpclassifyf@x+2,w
  9908  1512  00A4               	movwf	___fpclassifyf@u+2
  9909  1513  0872               	movf	___fpclassifyf@x+1,w
  9910  1514  00A3               	movwf	___fpclassifyf@u+1
  9911  1515  0871               	movf	___fpclassifyf@x,w
  9912  1516  00A2               	movwf	___fpclassifyf@u
  9913  1517  0822               	movf	___fpclassifyf@u,w
  9914  1518  00F5               	movwf	??___fpclassifyf
  9915  1519  0823               	movf	___fpclassifyf@u+1,w
  9916  151A  00F6               	movwf	??___fpclassifyf+1
  9917  151B  0824               	movf	___fpclassifyf@u+2,w
  9918  151C  00F7               	movwf	??___fpclassifyf+2
  9919  151D  0825               	movf	___fpclassifyf@u+3,w
  9920  151E  00F8               	movwf	??___fpclassifyf+3
  9921  151F  3017               	movlw	23
  9922  1520                     u3835:	
  9923  1520  36F8               	lsrf	??___fpclassifyf+3,f
  9924  1521  0CF7               	rrf	??___fpclassifyf+2,f
  9925  1522  0CF6               	rrf	??___fpclassifyf+1,f
  9926  1523  0CF5               	rrf	??___fpclassifyf,f
  9927  1524  0B89               	decfsz	9,f
  9928  1525  2D20               	goto	u3835
  9929  1526  30FF               	movlw	255
  9930  1527  0575               	andwf	??___fpclassifyf,w
  9931  1528  00A0               	movwf	___fpclassifyf@e
  9932  1529  3000               	movlw	0
  9933  152A  0576               	andwf	??___fpclassifyf+1,w
  9934  152B  00A1               	movwf	___fpclassifyf@e+1
  9935  152C  0820               	movf	___fpclassifyf@e,w
  9936  152D  0421               	iorwf	___fpclassifyf@e+1,w
  9937  152E  1D03               	btfss	3,2
  9938  152F  2D4F               	goto	l4567
  9939  1530  0822               	movf	___fpclassifyf@u,w
  9940  1531  00F5               	movwf	??___fpclassifyf
  9941  1532  0823               	movf	___fpclassifyf@u+1,w
  9942  1533  00F6               	movwf	??___fpclassifyf+1
  9943  1534  0824               	movf	___fpclassifyf@u+2,w
  9944  1535  00F7               	movwf	??___fpclassifyf+2
  9945  1536  0825               	movf	___fpclassifyf@u+3,w
  9946  1537  00F8               	movwf	??___fpclassifyf+3
  9947  1538  3001               	movlw	1
  9948  1539                     u3855:	
  9949  1539  35F5               	lslf	??___fpclassifyf,f
  9950  153A  0DF6               	rlf	??___fpclassifyf+1,f
  9951  153B  0DF7               	rlf	??___fpclassifyf+2,f
  9952  153C  0DF8               	rlf	??___fpclassifyf+3,f
  9953  153D  0B89               	decfsz	9,f
  9954  153E  2D39               	goto	u3855
  9955  153F  0878               	movf	??___fpclassifyf+3,w
  9956  1540  0477               	iorwf	??___fpclassifyf+2,w
  9957  1541  0476               	iorwf	??___fpclassifyf+1,w
  9958  1542  0475               	iorwf	??___fpclassifyf,w
  9959  1543  1D03               	skipz
  9960  1544  2D4A               	goto	l4563
  9961  1545  3002               	movlw	2
  9962  1546  00F1               	movwf	?___fpclassifyf
  9963  1547  3000               	movlw	0
  9964  1548  00F2               	movwf	?___fpclassifyf+1
  9965  1549  0008               	return
  9966  154A                     l4563:	
  9967  154A  3003               	movlw	3
  9968  154B  00F1               	movwf	?___fpclassifyf
  9969  154C  3000               	movlw	0
  9970  154D  00F2               	movwf	?___fpclassifyf+1
  9971  154E  0008               	return
  9972  154F                     l4567:	
  9973  154F  0A20               	incf	___fpclassifyf@e,w
  9974  1550  0421               	iorwf	___fpclassifyf@e+1,w
  9975  1551  1D03               	btfss	3,2
  9976  1552  2D72               	goto	l4573
  9977  1553  0822               	movf	___fpclassifyf@u,w
  9978  1554  00F5               	movwf	??___fpclassifyf
  9979  1555  0823               	movf	___fpclassifyf@u+1,w
  9980  1556  00F6               	movwf	??___fpclassifyf+1
  9981  1557  0824               	movf	___fpclassifyf@u+2,w
  9982  1558  00F7               	movwf	??___fpclassifyf+2
  9983  1559  0825               	movf	___fpclassifyf@u+3,w
  9984  155A  00F8               	movwf	??___fpclassifyf+3
  9985  155B  3009               	movlw	9
  9986  155C                     u3885:	
  9987  155C  35F5               	lslf	??___fpclassifyf,f
  9988  155D  0DF6               	rlf	??___fpclassifyf+1,f
  9989  155E  0DF7               	rlf	??___fpclassifyf+2,f
  9990  155F  0DF8               	rlf	??___fpclassifyf+3,f
  9991  1560  0B89               	decfsz	9,f
  9992  1561  2D5C               	goto	u3885
  9993  1562  0878               	movf	??___fpclassifyf+3,w
  9994  1563  0477               	iorwf	??___fpclassifyf+2,w
  9995  1564  0476               	iorwf	??___fpclassifyf+1,w
  9996  1565  0475               	iorwf	??___fpclassifyf,w
  9997  1566  1D03               	btfss	3,2
  9998  1567  2D6A               	goto	u3890
  9999  1568  3001               	movlw	1
 10000  1569  2D6B               	goto	u3900
 10001  156A                     u3890:	
 10002  156A  3000               	movlw	0
 10003  156B                     u3900:	
 10004  156B  00F9               	movwf	??___fpclassifyf+4
 10005  156C  01FA               	clrf	??___fpclassifyf+5
 10006  156D  0879               	movf	??___fpclassifyf+4,w
 10007  156E  00F1               	movwf	?___fpclassifyf
 10008  156F  087A               	movf	??___fpclassifyf+5,w
 10009  1570  00F2               	movwf	?___fpclassifyf+1
 10010  1571  0008               	return
 10011  1572                     l4573:	
 10012  1572  3004               	movlw	4
 10013  1573  00F1               	movwf	?___fpclassifyf
 10014  1574  3000               	movlw	0
 10015  1575  00F2               	movwf	?___fpclassifyf+1
 10016  1576  0008               	return
 10017  1577                     __end_of___fpclassifyf:	
 10018                           
 10019                           	psect	text22
 10020  149A                     __ptext22:	
 10021 ;; *************** function ___fltol *****************
 10022 ;; Defined at:
 10023 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 10024 ;; Parameters:    Size  Location     Type
 10025 ;;  f1              4    1[COMMON] int 
 10026 ;; Auto vars:     Size  Location     Type
 10027 ;;  exp1            1   11[COMMON] unsigned char 
 10028 ;;  sign1           1   10[COMMON] unsigned char 
 10029 ;; Return value:  Size  Location     Type
 10030 ;;                  4    1[COMMON] long 
 10031 ;; Registers used:
 10032 ;;		wreg, status,2, status,0
 10033 ;; Tracked objects:
 10034 ;;		On entry : 0/0
 10035 ;;		On exit  : 0/0
 10036 ;;		Unchanged: 0/0
 10037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10038 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10039 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10040 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10041 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10042 ;;Total ram usage:       11 bytes
 10043 ;; Hardware stack levels used:    1
 10044 ;; Hardware stack levels required when called:    4
 10045 ;; This function calls:
 10046 ;;		Nothing
 10047 ;; This function is called by:
 10048 ;;		_efgtoa
 10049 ;; This function uses a non-reentrant model
 10050 ;;
 10051                           
 10052                           
 10053                           ;psect for function ___fltol
 10054  149A                     ___fltol:	
 10055                           
 10056                           ;incstack = 0
 10057                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 10058  149A  1003               	clrc
 10059  149B  0D73               	rlf	___fltol@f1+2,w
 10060  149C  0D74               	rlf	___fltol@f1+3,w
 10061  149D  00F5               	movwf	??___fltol
 10062  149E  0875               	movf	??___fltol,w
 10063  149F  00FB               	movwf	___fltol@exp1
 10064  14A0  087B               	movf	___fltol@exp1,w
 10065  14A1  1D03               	btfss	3,2
 10066  14A2  2CAC               	goto	l4749
 10067  14A3                     l4745:	
 10068  14A3  3000               	movlw	0
 10069  14A4  00F4               	movwf	?___fltol+3
 10070  14A5  3000               	movlw	0
 10071  14A6  00F3               	movwf	?___fltol+2
 10072  14A7  3000               	movlw	0
 10073  14A8  00F2               	movwf	?___fltol+1
 10074  14A9  3000               	movlw	0
 10075  14AA  00F1               	movwf	?___fltol
 10076  14AB  0008               	return
 10077  14AC                     l4749:	
 10078  14AC  0871               	movf	___fltol@f1,w
 10079  14AD  00F5               	movwf	??___fltol
 10080  14AE  0872               	movf	___fltol@f1+1,w
 10081  14AF  00F6               	movwf	??___fltol+1
 10082  14B0  0873               	movf	___fltol@f1+2,w
 10083  14B1  00F7               	movwf	??___fltol+2
 10084  14B2  0874               	movf	___fltol@f1+3,w
 10085  14B3  00F8               	movwf	??___fltol+3
 10086  14B4  301F               	movlw	31
 10087  14B5                     u4355:	
 10088  14B5  36F8               	lsrf	??___fltol+3,f
 10089  14B6  0CF7               	rrf	??___fltol+2,f
 10090  14B7  0CF6               	rrf	??___fltol+1,f
 10091  14B8  0CF5               	rrf	??___fltol,f
 10092  14B9  0B89               	decfsz	9,f
 10093  14BA  2CB5               	goto	u4355
 10094  14BB  0875               	movf	??___fltol,w
 10095  14BC  00F9               	movwf	??___fltol+4
 10096  14BD  0879               	movf	??___fltol+4,w
 10097  14BE  00FA               	movwf	___fltol@sign1
 10098  14BF  17F3               	bsf	___fltol@f1+2,7
 10099  14C0  30FF               	movlw	255
 10100  14C1  05F1               	andwf	___fltol@f1,f
 10101  14C2  30FF               	movlw	255
 10102  14C3  05F2               	andwf	___fltol@f1+1,f
 10103  14C4  30FF               	movlw	255
 10104  14C5  05F3               	andwf	___fltol@f1+2,f
 10105  14C6  3000               	movlw	0
 10106  14C7  05F4               	andwf	___fltol@f1+3,f
 10107  14C8  3096               	movlw	150
 10108  14C9  02FB               	subwf	___fltol@exp1,f
 10109  14CA  1FFB               	btfss	___fltol@exp1,7
 10110  14CB  2CDF               	goto	l4767
 10111  14CC  087B               	movf	___fltol@exp1,w
 10112  14CD  3A80               	xorlw	128
 10113  14CE  3E97               	addlw	151
 10114  14CF  1C03               	btfss	3,0
 10115  14D0  2CA3               	goto	l4745
 10116  14D1                     l4765:	
 10117  14D1  3001               	movlw	1
 10118  14D2                     u4385:	
 10119  14D2  36F4               	lsrf	___fltol@f1+3,f
 10120  14D3  0CF3               	rrf	___fltol@f1+2,f
 10121  14D4  0CF2               	rrf	___fltol@f1+1,f
 10122  14D5  0CF1               	rrf	___fltol@f1,f
 10123  14D6  0B89               	decfsz	9,f
 10124  14D7  2CD2               	goto	u4385
 10125  14D8  3001               	movlw	1
 10126  14D9  00F5               	movwf	??___fltol
 10127  14DA  0875               	movf	??___fltol,w
 10128  14DB  07FB               	addwf	___fltol@exp1,f
 10129  14DC  1903               	btfsc	3,2
 10130  14DD  2CF0               	goto	l4775
 10131  14DE  2CD1               	goto	l4765
 10132  14DF                     l4767:	
 10133  14DF  3020               	movlw	32
 10134  14E0  027B               	subwf	___fltol@exp1,w
 10135  14E1  1803               	btfsc	3,0
 10136  14E2  2CA3               	goto	l4745
 10137  14E3                     l1355:	
 10138  14E3  087B               	movf	___fltol@exp1,w
 10139  14E4  1903               	btfsc	3,2
 10140  14E5  2CF0               	goto	l4775
 10141  14E6  3001               	movlw	1
 10142  14E7                     u4415:	
 10143  14E7  35F1               	lslf	___fltol@f1,f
 10144  14E8  0DF2               	rlf	___fltol@f1+1,f
 10145  14E9  0DF3               	rlf	___fltol@f1+2,f
 10146  14EA  0DF4               	rlf	___fltol@f1+3,f
 10147  14EB  0B89               	decfsz	9,f
 10148  14EC  2CE7               	goto	u4415
 10149  14ED  3001               	movlw	1
 10150  14EE  02FB               	subwf	___fltol@exp1,f
 10151  14EF  2CE3               	goto	l1355
 10152  14F0                     l4775:	
 10153  14F0  087A               	movf	___fltol@sign1,w
 10154  14F1  1903               	btfsc	3,2
 10155  14F2  0008               	return
 10156  14F3  09F1               	comf	___fltol@f1,f
 10157  14F4  09F2               	comf	___fltol@f1+1,f
 10158  14F5  09F3               	comf	___fltol@f1+2,f
 10159  14F6  09F4               	comf	___fltol@f1+3,f
 10160  14F7  0AF1               	incf	___fltol@f1,f
 10161  14F8  1903               	skipnz
 10162  14F9  0AF2               	incf	___fltol@f1+1,f
 10163  14FA  1903               	skipnz
 10164  14FB  0AF3               	incf	___fltol@f1+2,f
 10165  14FC  1903               	skipnz
 10166  14FD  0AF4               	incf	___fltol@f1+3,f
 10167  14FE  0008               	return
 10168  14FF                     __end_of___fltol:	
 10169                           
 10170                           	psect	text23
 10171  1FA2                     __ptext23:	
 10172 ;; *************** function ___flsub *****************
 10173 ;; Defined at:
 10174 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 10175 ;; Parameters:    Size  Location     Type
 10176 ;;  a               4   26[BANK0 ] long 
 10177 ;;  b               4   30[BANK0 ] long 
 10178 ;; Auto vars:     Size  Location     Type
 10179 ;;		None
 10180 ;; Return value:  Size  Location     Type
 10181 ;;                  4   26[BANK0 ] long 
 10182 ;; Registers used:
 10183 ;;		wreg, status,2, status,0, pclath, cstack
 10184 ;; Tracked objects:
 10185 ;;		On entry : 0/0
 10186 ;;		On exit  : 0/0
 10187 ;;		Unchanged: 0/0
 10188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10189 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10192 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10193 ;;Total ram usage:        8 bytes
 10194 ;; Hardware stack levels used:    1
 10195 ;; Hardware stack levels required when called:    5
 10196 ;; This function calls:
 10197 ;;		___fladd
 10198 ;; This function is called by:
 10199 ;;		_efgtoa
 10200 ;; This function uses a non-reentrant model
 10201 ;;
 10202                           
 10203                           
 10204                           ;psect for function ___flsub
 10205  1FA2                     ___flsub:	
 10206                           
 10207                           ;incstack = 0
 10208                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 10209  1FA2  3080               	movlw	128
 10210  1FA3  0020               	movlb	0	; select bank0
 10211  1FA4  06BD               	xorwf	___flsub@a+3,f
 10212  1FA5  0841               	movf	___flsub@b+3,w
 10213  1FA6  00F4               	movwf	___fladd@b+3
 10214  1FA7  0840               	movf	___flsub@b+2,w
 10215  1FA8  00F3               	movwf	___fladd@b+2
 10216  1FA9  083F               	movf	___flsub@b+1,w
 10217  1FAA  00F2               	movwf	___fladd@b+1
 10218  1FAB  083E               	movf	___flsub@b,w
 10219  1FAC  00F1               	movwf	___fladd@b
 10220  1FAD  083D               	movf	___flsub@a+3,w
 10221  1FAE  00F8               	movwf	___fladd@a+3
 10222  1FAF  083C               	movf	___flsub@a+2,w
 10223  1FB0  00F7               	movwf	___fladd@a+2
 10224  1FB1  083B               	movf	___flsub@a+1,w
 10225  1FB2  00F6               	movwf	___fladd@a+1
 10226  1FB3  083A               	movf	___flsub@a,w
 10227  1FB4  00F5               	movwf	___fladd@a
 10228  1FB5  318B  23F2         	fcall	___fladd
 10229  1FB7  0874               	movf	?___fladd+3,w
 10230  1FB8  0020               	movlb	0	; select bank0
 10231  1FB9  00BD               	movwf	?___flsub+3
 10232  1FBA  0873               	movf	?___fladd+2,w
 10233  1FBB  00BC               	movwf	?___flsub+2
 10234  1FBC  0872               	movf	?___fladd+1,w
 10235  1FBD  00BB               	movwf	?___flsub+1
 10236  1FBE  0871               	movf	?___fladd,w
 10237  1FBF  00BA               	movwf	?___flsub
 10238  1FC0  0008               	return
 10239  1FC1                     __end_of___flsub:	
 10240                           
 10241                           	psect	text24
 10242  0BF2                     __ptext24:	
 10243 ;; *************** function ___fladd *****************
 10244 ;; Defined at:
 10245 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 10246 ;; Parameters:    Size  Location     Type
 10247 ;;  b               4    1[COMMON] long 
 10248 ;;  a               4    5[COMMON] long 
 10249 ;; Auto vars:     Size  Location     Type
 10250 ;;  grs             1   11[BANK0 ] unsigned char 
 10251 ;;  bexp            1   10[BANK0 ] unsigned char 
 10252 ;;  aexp            1    9[BANK0 ] unsigned char 
 10253 ;;  signs           1    8[BANK0 ] unsigned char 
 10254 ;; Return value:  Size  Location     Type
 10255 ;;                  4    1[COMMON] unsigned char 
 10256 ;; Registers used:
 10257 ;;		wreg, status,2, status,0
 10258 ;; Tracked objects:
 10259 ;;		On entry : 0/0
 10260 ;;		On exit  : 0/0
 10261 ;;		Unchanged: 0/0
 10262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10263 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10264 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10265 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10266 ;;      Totals:         8      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10267 ;;Total ram usage:       20 bytes
 10268 ;; Hardware stack levels used:    1
 10269 ;; Hardware stack levels required when called:    4
 10270 ;; This function calls:
 10271 ;;		Nothing
 10272 ;; This function is called by:
 10273 ;;		_efgtoa
 10274 ;;		___flsub
 10275 ;; This function uses a non-reentrant model
 10276 ;;
 10277                           
 10278                           
 10279                           ;psect for function ___fladd
 10280  0BF2                     ___fladd:	
 10281                           
 10282                           ;incstack = 0
 10283                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 10284  0BF2  0874               	movf	___fladd@b+3,w
 10285  0BF3  3980               	andlw	128
 10286  0BF4  0020               	movlb	0	; select bank0
 10287  0BF5  00A0               	movwf	??___fladd
 10288  0BF6  0820               	movf	??___fladd,w
 10289  0BF7  00A8               	movwf	___fladd@signs
 10290  0BF8  3574               	lslf	___fladd@b+3,w
 10291  0BF9  00A0               	movwf	??___fladd
 10292  0BFA  0820               	movf	??___fladd,w
 10293  0BFB  00AA               	movwf	___fladd@bexp
 10294  0BFC  1BF3               	btfsc	___fladd@b+2,7
 10295  0BFD  142A               	bsf	___fladd@bexp,0
 10296  0BFE  082A               	movf	___fladd@bexp,w
 10297  0BFF  1903               	btfsc	3,2
 10298  0C00  2C0F               	goto	l6253
 10299  0C01  0A2A               	incf	___fladd@bexp,w
 10300  0C02  1D03               	btfss	3,2
 10301  0C03  2C0C               	goto	l6249
 10302  0C04  3000               	movlw	0
 10303  0C05  00F4               	movwf	___fladd@b+3
 10304  0C06  3000               	movlw	0
 10305  0C07  00F3               	movwf	___fladd@b+2
 10306  0C08  3000               	movlw	0
 10307  0C09  00F2               	movwf	___fladd@b+1
 10308  0C0A  3000               	movlw	0
 10309  0C0B  00F1               	movwf	___fladd@b
 10310  0C0C                     l6249:	
 10311  0C0C  17F3               	bsf	___fladd@b+2,7
 10312  0C0D  01F4               	clrf	___fladd@b+3
 10313  0C0E  2C17               	goto	l6255
 10314  0C0F                     l6253:	
 10315  0C0F  3000               	movlw	0
 10316  0C10  00F4               	movwf	___fladd@b+3
 10317  0C11  3000               	movlw	0
 10318  0C12  00F3               	movwf	___fladd@b+2
 10319  0C13  3000               	movlw	0
 10320  0C14  00F2               	movwf	___fladd@b+1
 10321  0C15  3000               	movlw	0
 10322  0C16  00F1               	movwf	___fladd@b
 10323  0C17                     l6255:	
 10324  0C17  0878               	movf	___fladd@a+3,w
 10325  0C18  3980               	andlw	128
 10326  0C19  00A0               	movwf	??___fladd
 10327  0C1A  0820               	movf	??___fladd,w
 10328  0C1B  00A9               	movwf	___fladd@aexp
 10329  0C1C  0829               	movf	___fladd@aexp,w
 10330  0C1D  0628               	xorwf	___fladd@signs,w
 10331  0C1E  1D03               	btfss	3,2
 10332  0C1F  1728               	bsf	___fladd@signs,6
 10333  0C20  3578               	lslf	___fladd@a+3,w
 10334  0C21  00A0               	movwf	??___fladd
 10335  0C22  0820               	movf	??___fladd,w
 10336  0C23  00A9               	movwf	___fladd@aexp
 10337  0C24  1BF7               	btfsc	___fladd@a+2,7
 10338  0C25  1429               	bsf	___fladd@aexp,0
 10339  0C26  0829               	movf	___fladd@aexp,w
 10340  0C27  1903               	btfsc	3,2
 10341  0C28  2C37               	goto	l6277
 10342  0C29  0A29               	incf	___fladd@aexp,w
 10343  0C2A  1D03               	btfss	3,2
 10344  0C2B  2C34               	goto	l6273
 10345  0C2C  3000               	movlw	0
 10346  0C2D  00F8               	movwf	___fladd@a+3
 10347  0C2E  3000               	movlw	0
 10348  0C2F  00F7               	movwf	___fladd@a+2
 10349  0C30  3000               	movlw	0
 10350  0C31  00F6               	movwf	___fladd@a+1
 10351  0C32  3000               	movlw	0
 10352  0C33  00F5               	movwf	___fladd@a
 10353  0C34                     l6273:	
 10354  0C34  17F7               	bsf	___fladd@a+2,7
 10355  0C35  01F8               	clrf	___fladd@a+3
 10356  0C36  2C3F               	goto	l1455
 10357  0C37                     l6277:	
 10358  0C37  3000               	movlw	0
 10359  0C38  00F8               	movwf	___fladd@a+3
 10360  0C39  3000               	movlw	0
 10361  0C3A  00F7               	movwf	___fladd@a+2
 10362  0C3B  3000               	movlw	0
 10363  0C3C  00F6               	movwf	___fladd@a+1
 10364  0C3D  3000               	movlw	0
 10365  0C3E  00F5               	movwf	___fladd@a
 10366  0C3F                     l1455:	
 10367  0C3F  082A               	movf	___fladd@bexp,w
 10368  0C40  0229               	subwf	___fladd@aexp,w
 10369  0C41  1803               	skipnc
 10370  0C42  2C85               	goto	l6313
 10371  0C43  1F28               	btfss	___fladd@signs,6
 10372  0C44  2C49               	goto	l6283
 10373  0C45  3080               	movlw	128
 10374  0C46  00A0               	movwf	??___fladd
 10375  0C47  0820               	movf	??___fladd,w
 10376  0C48  06A8               	xorwf	___fladd@signs,f
 10377  0C49                     l6283:	
 10378  0C49  082A               	movf	___fladd@bexp,w
 10379  0C4A  00A0               	movwf	??___fladd
 10380  0C4B  0820               	movf	??___fladd,w
 10381  0C4C  00AB               	movwf	___fladd@grs
 10382  0C4D  0829               	movf	___fladd@aexp,w
 10383  0C4E  00A0               	movwf	??___fladd
 10384  0C4F  0820               	movf	??___fladd,w
 10385  0C50  00AA               	movwf	___fladd@bexp
 10386  0C51  082B               	movf	___fladd@grs,w
 10387  0C52  00A0               	movwf	??___fladd
 10388  0C53  0820               	movf	??___fladd,w
 10389  0C54  00A9               	movwf	___fladd@aexp
 10390  0C55  0871               	movf	___fladd@b,w
 10391  0C56  00A0               	movwf	??___fladd
 10392  0C57  0820               	movf	??___fladd,w
 10393  0C58  00AB               	movwf	___fladd@grs
 10394  0C59  0875               	movf	___fladd@a,w
 10395  0C5A  00A0               	movwf	??___fladd
 10396  0C5B  0820               	movf	??___fladd,w
 10397  0C5C  00F1               	movwf	___fladd@b
 10398  0C5D  082B               	movf	___fladd@grs,w
 10399  0C5E  00A0               	movwf	??___fladd
 10400  0C5F  0820               	movf	??___fladd,w
 10401  0C60  00F5               	movwf	___fladd@a
 10402  0C61  0872               	movf	___fladd@b+1,w
 10403  0C62  00A0               	movwf	??___fladd
 10404  0C63  0820               	movf	??___fladd,w
 10405  0C64  00AB               	movwf	___fladd@grs
 10406  0C65  0876               	movf	___fladd@a+1,w
 10407  0C66  00A0               	movwf	??___fladd
 10408  0C67  0820               	movf	??___fladd,w
 10409  0C68  00F2               	movwf	___fladd@b+1
 10410  0C69  082B               	movf	___fladd@grs,w
 10411  0C6A  00A0               	movwf	??___fladd
 10412  0C6B  0820               	movf	??___fladd,w
 10413  0C6C  00F6               	movwf	___fladd@a+1
 10414  0C6D  0873               	movf	___fladd@b+2,w
 10415  0C6E  00A0               	movwf	??___fladd
 10416  0C6F  0820               	movf	??___fladd,w
 10417  0C70  00AB               	movwf	___fladd@grs
 10418  0C71  0877               	movf	___fladd@a+2,w
 10419  0C72  00A0               	movwf	??___fladd
 10420  0C73  0820               	movf	??___fladd,w
 10421  0C74  00F3               	movwf	___fladd@b+2
 10422  0C75  082B               	movf	___fladd@grs,w
 10423  0C76  00A0               	movwf	??___fladd
 10424  0C77  0820               	movf	??___fladd,w
 10425  0C78  00F7               	movwf	___fladd@a+2
 10426  0C79  0874               	movf	___fladd@b+3,w
 10427  0C7A  00A0               	movwf	??___fladd
 10428  0C7B  0820               	movf	??___fladd,w
 10429  0C7C  00AB               	movwf	___fladd@grs
 10430  0C7D  0878               	movf	___fladd@a+3,w
 10431  0C7E  00A0               	movwf	??___fladd
 10432  0C7F  0820               	movf	??___fladd,w
 10433  0C80  00F4               	movwf	___fladd@b+3
 10434  0C81  082B               	movf	___fladd@grs,w
 10435  0C82  00A0               	movwf	??___fladd
 10436  0C83  0820               	movf	??___fladd,w
 10437  0C84  00F8               	movwf	___fladd@a+3
 10438  0C85                     l6313:	
 10439  0C85  01AB               	clrf	___fladd@grs
 10440  0C86  0829               	movf	___fladd@aexp,w
 10441  0C87  00A0               	movwf	??___fladd
 10442  0C88  01A1               	clrf	??___fladd+1
 10443  0C89  0821               	movf	??___fladd+1,w
 10444  0C8A  00A3               	movwf	??___fladd+3
 10445  0C8B  082A               	movf	___fladd@bexp,w
 10446  0C8C  0220               	subwf	??___fladd,w
 10447  0C8D  00A2               	movwf	??___fladd+2
 10448  0C8E  1C03               	skipc
 10449  0C8F  03A3               	decf	??___fladd+3,f
 10450  0C90  0823               	movf	??___fladd+3,w
 10451  0C91  3A80               	xorlw	128
 10452  0C92  00A4               	movwf	??___fladd+4
 10453  0C93  3080               	movlw	128
 10454  0C94  0224               	subwf	??___fladd+4,w
 10455  0C95  1D03               	skipz
 10456  0C96  2C99               	goto	u6375
 10457  0C97  301A               	movlw	26
 10458  0C98  0222               	subwf	??___fladd+2,w
 10459  0C99                     u6375:	
 10460  0C99  1C03               	skipc
 10461  0C9A  2CCD               	goto	l6331
 10462  0C9B  0874               	movf	___fladd@b+3,w
 10463  0C9C  0473               	iorwf	___fladd@b+2,w
 10464  0C9D  0472               	iorwf	___fladd@b+1,w
 10465  0C9E  0471               	iorwf	___fladd@b,w
 10466  0C9F  1903               	btfsc	3,2
 10467  0CA0  2CA3               	goto	u6380
 10468  0CA1  3001               	movlw	1
 10469  0CA2  2CA4               	goto	u6390
 10470  0CA3                     u6380:	
 10471  0CA3  3000               	movlw	0
 10472  0CA4                     u6390:	
 10473  0CA4  0020               	movlb	0	; select bank0
 10474  0CA5  00A0               	movwf	??___fladd
 10475  0CA6  0820               	movf	??___fladd,w
 10476  0CA7  00AB               	movwf	___fladd@grs
 10477  0CA8  3000               	movlw	0
 10478  0CA9  00F4               	movwf	___fladd@b+3
 10479  0CAA  3000               	movlw	0
 10480  0CAB  00F3               	movwf	___fladd@b+2
 10481  0CAC  3000               	movlw	0
 10482  0CAD  00F2               	movwf	___fladd@b+1
 10483  0CAE  3000               	movlw	0
 10484  0CAF  00F1               	movwf	___fladd@b
 10485  0CB0  0829               	movf	___fladd@aexp,w
 10486  0CB1  00A0               	movwf	??___fladd
 10487  0CB2  0820               	movf	??___fladd,w
 10488  0CB3  00AA               	movwf	___fladd@bexp
 10489  0CB4  2CD2               	goto	l1459
 10490  0CB5                     l1461:	
 10491  0CB5  1C2B               	btfss	___fladd@grs,0
 10492  0CB6  2CBD               	goto	l6321
 10493  0CB7  362B               	lsrf	___fladd@grs,w
 10494  0CB8  3801               	iorlw	1
 10495  0CB9  00A0               	movwf	??___fladd
 10496  0CBA  0820               	movf	??___fladd,w
 10497  0CBB  00AB               	movwf	___fladd@grs
 10498  0CBC  2CBF               	goto	l6323
 10499  0CBD                     l6321:	
 10500  0CBD  1003               	clrc
 10501  0CBE  0CAB               	rrf	___fladd@grs,f
 10502  0CBF                     l6323:	
 10503  0CBF  1871               	btfsc	___fladd@b,0
 10504  0CC0  17AB               	bsf	___fladd@grs,7
 10505  0CC1  3001               	movlw	1
 10506  0CC2  00A0               	movwf	??___fladd
 10507  0CC3                     u6425:	
 10508  0CC3  37F4               	asrf	___fladd@b+3,f
 10509  0CC4  0CF3               	rrf	___fladd@b+2,f
 10510  0CC5  0CF2               	rrf	___fladd@b+1,f
 10511  0CC6  0CF1               	rrf	___fladd@b,f
 10512  0CC7  0BA0               	decfsz	??___fladd& (0+127),f
 10513  0CC8  2CC3               	goto	u6425
 10514  0CC9  3001               	movlw	1
 10515  0CCA  00A0               	movwf	??___fladd
 10516  0CCB  0820               	movf	??___fladd,w
 10517  0CCC  07AA               	addwf	___fladd@bexp,f
 10518  0CCD                     l6331:	
 10519  0CCD  0020               	movlb	0	; select bank0
 10520  0CCE  0829               	movf	___fladd@aexp,w
 10521  0CCF  022A               	subwf	___fladd@bexp,w
 10522  0CD0  1C03               	skipc
 10523  0CD1  2CB5               	goto	l1461
 10524  0CD2                     l1459:	
 10525  0CD2  1B28               	btfsc	___fladd@signs,6
 10526  0CD3  2D03               	goto	l6357
 10527  0CD4  082A               	movf	___fladd@bexp,w
 10528  0CD5  1D03               	btfss	3,2
 10529  0CD6  2CE0               	goto	l6339
 10530  0CD7  3000               	movlw	0
 10531  0CD8  00F4               	movwf	?___fladd+3
 10532  0CD9  3000               	movlw	0
 10533  0CDA  00F3               	movwf	?___fladd+2
 10534  0CDB  3000               	movlw	0
 10535  0CDC  00F2               	movwf	?___fladd+1
 10536  0CDD  3000               	movlw	0
 10537  0CDE  00F1               	movwf	?___fladd
 10538  0CDF  0008               	return
 10539  0CE0                     l6339:	
 10540  0CE0  0875               	movf	___fladd@a,w
 10541  0CE1  07F1               	addwf	___fladd@b,f
 10542  0CE2  0876               	movf	___fladd@a+1,w
 10543  0CE3  3DF2               	addwfc	___fladd@b+1,f
 10544  0CE4  0877               	movf	___fladd@a+2,w
 10545  0CE5  3DF3               	addwfc	___fladd@b+2,f
 10546  0CE6  0878               	movf	___fladd@a+3,w
 10547  0CE7  3DF4               	addwfc	___fladd@b+3,f
 10548  0CE8  1C74               	btfss	___fladd@b+3,0
 10549  0CE9  2D7D               	goto	l6391
 10550  0CEA  1C2B               	btfss	___fladd@grs,0
 10551  0CEB  2CF2               	goto	l6347
 10552  0CEC  362B               	lsrf	___fladd@grs,w
 10553  0CED  3801               	iorlw	1
 10554  0CEE  00A0               	movwf	??___fladd
 10555  0CEF  0820               	movf	??___fladd,w
 10556  0CF0  00AB               	movwf	___fladd@grs
 10557  0CF1  2CF4               	goto	l6349
 10558  0CF2                     l6347:	
 10559  0CF2  1003               	clrc
 10560  0CF3  0CAB               	rrf	___fladd@grs,f
 10561  0CF4                     l6349:	
 10562  0CF4  1871               	btfsc	___fladd@b,0
 10563  0CF5  17AB               	bsf	___fladd@grs,7
 10564  0CF6  3001               	movlw	1
 10565  0CF7  00A0               	movwf	??___fladd
 10566  0CF8                     u6495:	
 10567  0CF8  37F4               	asrf	___fladd@b+3,f
 10568  0CF9  0CF3               	rrf	___fladd@b+2,f
 10569  0CFA  0CF2               	rrf	___fladd@b+1,f
 10570  0CFB  0CF1               	rrf	___fladd@b,f
 10571  0CFC  0BA0               	decfsz	??___fladd& (0+127),f
 10572  0CFD  2CF8               	goto	u6495
 10573  0CFE  3001               	movlw	1
 10574  0CFF  00A0               	movwf	??___fladd
 10575  0D00  0820               	movf	??___fladd,w
 10576  0D01  07AA               	addwf	___fladd@bexp,f
 10577  0D02  2D7D               	goto	l6391
 10578  0D03                     l6357:	
 10579  0D03  0874               	movf	___fladd@b+3,w
 10580  0D04  3A80               	xorlw	128
 10581  0D05  00A0               	movwf	??___fladd
 10582  0D06  0878               	movf	___fladd@a+3,w
 10583  0D07  3A80               	xorlw	128
 10584  0D08  0220               	subwf	??___fladd,w
 10585  0D09  1D03               	skipz
 10586  0D0A  2D15               	goto	u6503
 10587  0D0B  0877               	movf	___fladd@a+2,w
 10588  0D0C  0273               	subwf	___fladd@b+2,w
 10589  0D0D  1D03               	skipz
 10590  0D0E  2D15               	goto	u6503
 10591  0D0F  0876               	movf	___fladd@a+1,w
 10592  0D10  0272               	subwf	___fladd@b+1,w
 10593  0D11  1D03               	skipz
 10594  0D12  2D15               	goto	u6503
 10595  0D13  0875               	movf	___fladd@a,w
 10596  0D14  0271               	subwf	___fladd@b,w
 10597  0D15                     u6503:	
 10598  0D15  1803               	skipnc
 10599  0D16  2D4D               	goto	l6367
 10600  0D17  30FF               	movlw	255
 10601  0D18  00A0               	movwf	??___fladd
 10602  0D19  30FF               	movlw	255
 10603  0D1A  00A1               	movwf	??___fladd+1
 10604  0D1B  30FF               	movlw	255
 10605  0D1C  00A2               	movwf	??___fladd+2
 10606  0D1D  30FF               	movlw	255
 10607  0D1E  00A3               	movwf	??___fladd+3
 10608  0D1F  0871               	movf	___fladd@b,w
 10609  0D20  0275               	subwf	___fladd@a,w
 10610  0D21  00A4               	movwf	??___fladd+4
 10611  0D22  0872               	movf	___fladd@b+1,w
 10612  0D23  3B76               	subwfb	___fladd@a+1,w
 10613  0D24  00A5               	movwf	??___fladd+5
 10614  0D25  0873               	movf	___fladd@b+2,w
 10615  0D26  3B77               	subwfb	___fladd@a+2,w
 10616  0D27  00A6               	movwf	??___fladd+6
 10617  0D28  0874               	movf	___fladd@b+3,w
 10618  0D29  3B78               	subwfb	___fladd@a+3,w
 10619  0D2A  00A7               	movwf	??___fladd+7
 10620  0D2B  0824               	movf	??___fladd+4,w
 10621  0D2C  07A0               	addwf	??___fladd,f
 10622  0D2D  0825               	movf	??___fladd+5,w
 10623  0D2E  3DA1               	addwfc	??___fladd+1,f
 10624  0D2F  0826               	movf	??___fladd+6,w
 10625  0D30  3DA2               	addwfc	??___fladd+2,f
 10626  0D31  0827               	movf	??___fladd+7,w
 10627  0D32  3DA3               	addwfc	??___fladd+3,f
 10628  0D33  0823               	movf	??___fladd+3,w
 10629  0D34  00F4               	movwf	___fladd@b+3
 10630  0D35  0822               	movf	??___fladd+2,w
 10631  0D36  00F3               	movwf	___fladd@b+2
 10632  0D37  0821               	movf	??___fladd+1,w
 10633  0D38  00F2               	movwf	___fladd@b+1
 10634  0D39  0820               	movf	??___fladd,w
 10635  0D3A  00F1               	movwf	___fladd@b
 10636  0D3B  3080               	movlw	128
 10637  0D3C  00A0               	movwf	??___fladd
 10638  0D3D  0820               	movf	??___fladd,w
 10639  0D3E  06A8               	xorwf	___fladd@signs,f
 10640  0D3F  09AB               	comf	___fladd@grs,f
 10641  0D40  0AAB               	incf	___fladd@grs,f
 10642  0D41  082B               	movf	___fladd@grs,w
 10643  0D42  1D03               	btfss	3,2
 10644  0D43  2D55               	goto	l1476
 10645  0D44  3001               	movlw	1
 10646  0D45  07F1               	addwf	___fladd@b,f
 10647  0D46  3000               	movlw	0
 10648  0D47  3DF2               	addwfc	___fladd@b+1,f
 10649  0D48  3000               	movlw	0
 10650  0D49  3DF3               	addwfc	___fladd@b+2,f
 10651  0D4A  3000               	movlw	0
 10652  0D4B  3DF4               	addwfc	___fladd@b+3,f
 10653  0D4C  2D55               	goto	l1476
 10654  0D4D                     l6367:	
 10655  0D4D  0875               	movf	___fladd@a,w
 10656  0D4E  02F1               	subwf	___fladd@b,f
 10657  0D4F  0876               	movf	___fladd@a+1,w
 10658  0D50  3BF2               	subwfb	___fladd@b+1,f
 10659  0D51  0877               	movf	___fladd@a+2,w
 10660  0D52  3BF3               	subwfb	___fladd@b+2,f
 10661  0D53  0878               	movf	___fladd@a+3,w
 10662  0D54  3BF4               	subwfb	___fladd@b+3,f
 10663  0D55                     l1476:	
 10664  0D55  0874               	movf	___fladd@b+3,w
 10665  0D56  0473               	iorwf	___fladd@b+2,w
 10666  0D57  0472               	iorwf	___fladd@b+1,w
 10667  0D58  0471               	iorwf	___fladd@b,w
 10668  0D59  1D03               	skipz
 10669  0D5A  2D7B               	goto	l6389
 10670  0D5B  082B               	movf	___fladd@grs,w
 10671  0D5C  1D03               	btfss	3,2
 10672  0D5D  2D7B               	goto	l6389
 10673  0D5E  3000               	movlw	0
 10674  0D5F  00F4               	movwf	?___fladd+3
 10675  0D60  3000               	movlw	0
 10676  0D61  00F3               	movwf	?___fladd+2
 10677  0D62  3000               	movlw	0
 10678  0D63  00F2               	movwf	?___fladd+1
 10679  0D64  3000               	movlw	0
 10680  0D65  00F1               	movwf	?___fladd
 10681  0D66  0008               	return
 10682  0D67                     l6375:	
 10683  0D67  3001               	movlw	1
 10684  0D68                     u6545:	
 10685  0D68  35F1               	lslf	___fladd@b,f
 10686  0D69  0DF2               	rlf	___fladd@b+1,f
 10687  0D6A  0DF3               	rlf	___fladd@b+2,f
 10688  0D6B  0DF4               	rlf	___fladd@b+3,f
 10689  0D6C  0B89               	decfsz	9,f
 10690  0D6D  2D68               	goto	u6545
 10691  0D6E  1BAB               	btfsc	___fladd@grs,7
 10692  0D6F  1471               	bsf	___fladd@b,0
 10693  0D70  1C2B               	btfss	___fladd@grs,0
 10694  0D71  2D74               	goto	l6383
 10695  0D72  1403               	setc
 10696  0D73  2D75               	goto	L10
 10697  0D74                     l6383:	
 10698  0D74  1003               	clrc
 10699  0D75                     L10:	
 10700  0D75  0DAB               	rlf	___fladd@grs,f
 10701  0D76  082A               	movf	___fladd@bexp,w
 10702  0D77  1903               	btfsc	3,2
 10703  0D78  2D7B               	goto	l6389
 10704  0D79  3001               	movlw	1
 10705  0D7A  02AA               	subwf	___fladd@bexp,f
 10706  0D7B                     l6389:	
 10707  0D7B  1FF3               	btfss	___fladd@b+2,7
 10708  0D7C  2D67               	goto	l6375
 10709  0D7D                     l6391:	
 10710  0D7D  01A9               	clrf	___fladd@aexp
 10711  0D7E  1FAB               	btfss	___fladd@grs,7
 10712  0D7F  2D88               	goto	l6401
 10713  0D80  082B               	movf	___fladd@grs,w
 10714  0D81  397F               	andlw	127
 10715  0D82  1903               	btfsc	3,2
 10716  0D83  1871               	btfsc	___fladd@b,0
 10717  0D84  2D86               	goto	l6397
 10718  0D85  2D88               	goto	l6401
 10719  0D86                     l6397:	
 10720  0D86  01A9               	clrf	___fladd@aexp
 10721  0D87  0AA9               	incf	___fladd@aexp,f
 10722  0D88                     l6401:	
 10723  0D88  0829               	movf	___fladd@aexp,w
 10724  0D89  1903               	btfsc	3,2
 10725  0D8A  2DB4               	goto	l1489
 10726  0D8B  3001               	movlw	1
 10727  0D8C  07F1               	addwf	___fladd@b,f
 10728  0D8D  3000               	movlw	0
 10729  0D8E  3DF2               	addwfc	___fladd@b+1,f
 10730  0D8F  3000               	movlw	0
 10731  0D90  3DF3               	addwfc	___fladd@b+2,f
 10732  0D91  3000               	movlw	0
 10733  0D92  3DF4               	addwfc	___fladd@b+3,f
 10734  0D93  1C74               	btfss	___fladd@b+3,0
 10735  0D94  2DB4               	goto	l1489
 10736  0D95  0871               	movf	___fladd@b,w
 10737  0D96  00A0               	movwf	??___fladd
 10738  0D97  0872               	movf	___fladd@b+1,w
 10739  0D98  00A1               	movwf	??___fladd+1
 10740  0D99  0873               	movf	___fladd@b+2,w
 10741  0D9A  00A2               	movwf	??___fladd+2
 10742  0D9B  0874               	movf	___fladd@b+3,w
 10743  0D9C  00A3               	movwf	??___fladd+3
 10744  0D9D  3001               	movlw	1
 10745  0D9E  00A4               	movwf	??___fladd+4
 10746  0D9F                     u6645:	
 10747  0D9F  37A3               	asrf	??___fladd+3,f
 10748  0DA0  0CA2               	rrf	??___fladd+2,f
 10749  0DA1  0CA1               	rrf	??___fladd+1,f
 10750  0DA2  0CA0               	rrf	??___fladd,f
 10751  0DA3  0BA4               	decfsz	??___fladd+4,f
 10752  0DA4  2D9F               	goto	u6645
 10753  0DA5  0823               	movf	??___fladd+3,w
 10754  0DA6  00F4               	movwf	___fladd@b+3
 10755  0DA7  0822               	movf	??___fladd+2,w
 10756  0DA8  00F3               	movwf	___fladd@b+2
 10757  0DA9  0821               	movf	??___fladd+1,w
 10758  0DAA  00F2               	movwf	___fladd@b+1
 10759  0DAB  0820               	movf	??___fladd,w
 10760  0DAC  00F1               	movwf	___fladd@b
 10761  0DAD  0A2A               	incf	___fladd@bexp,w
 10762  0DAE  1903               	btfsc	3,2
 10763  0DAF  2DB4               	goto	l1489
 10764  0DB0  3001               	movlw	1
 10765  0DB1  00A0               	movwf	??___fladd
 10766  0DB2  0820               	movf	??___fladd,w
 10767  0DB3  07AA               	addwf	___fladd@bexp,f
 10768  0DB4                     l1489:	
 10769  0DB4  0A2A               	incf	___fladd@bexp,w
 10770  0DB5  1D03               	btfss	3,2
 10771  0DB6  082A               	movf	___fladd@bexp,w
 10772  0DB7  1D03               	btfss	3,2
 10773  0DB8  2DC4               	goto	l6419
 10774  0DB9  3000               	movlw	0
 10775  0DBA  00F4               	movwf	___fladd@b+3
 10776  0DBB  3000               	movlw	0
 10777  0DBC  00F3               	movwf	___fladd@b+2
 10778  0DBD  3000               	movlw	0
 10779  0DBE  00F2               	movwf	___fladd@b+1
 10780  0DBF  3000               	movlw	0
 10781  0DC0  00F1               	movwf	___fladd@b
 10782  0DC1  082A               	movf	___fladd@bexp,w
 10783  0DC2  1903               	btfsc	3,2
 10784  0DC3  01A8               	clrf	___fladd@signs
 10785  0DC4                     l6419:	
 10786  0DC4  1C2A               	btfss	___fladd@bexp,0
 10787  0DC5  2DC8               	goto	l6423
 10788  0DC6  17F3               	bsf	___fladd@b+2,7
 10789  0DC7  2DCC               	goto	l1497
 10790  0DC8                     l6423:	
 10791  0DC8  307F               	movlw	127
 10792  0DC9  00A0               	movwf	??___fladd
 10793  0DCA  0820               	movf	??___fladd,w
 10794  0DCB  05F3               	andwf	___fladd@b+2,f
 10795  0DCC                     l1497:	
 10796  0DCC  362A               	lsrf	___fladd@bexp,w
 10797  0DCD  00A0               	movwf	??___fladd
 10798  0DCE  0820               	movf	??___fladd,w
 10799  0DCF  00F4               	movwf	___fladd@b+3
 10800  0DD0  1FA8               	btfss	___fladd@signs,7
 10801  0DD1  0008               	return
 10802  0DD2  17F4               	bsf	___fladd@b+3,7
 10803  0DD3  0008               	return
 10804  0DD4                     __end_of___fladd:	
 10805                           
 10806                           	psect	text25
 10807  1E1B                     __ptext25:	
 10808 ;; *************** function ___flneg *****************
 10809 ;; Defined at:
 10810 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
 10811 ;; Parameters:    Size  Location     Type
 10812 ;;  f1              4    1[COMMON] unsigned char 
 10813 ;; Auto vars:     Size  Location     Type
 10814 ;;		None
 10815 ;; Return value:  Size  Location     Type
 10816 ;;                  4    1[COMMON] unsigned char 
 10817 ;; Registers used:
 10818 ;;		wreg
 10819 ;; Tracked objects:
 10820 ;;		On entry : 0/0
 10821 ;;		On exit  : 0/0
 10822 ;;		Unchanged: 0/0
 10823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10824 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10827 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10828 ;;Total ram usage:        4 bytes
 10829 ;; Hardware stack levels used:    1
 10830 ;; Hardware stack levels required when called:    4
 10831 ;; This function calls:
 10832 ;;		Nothing
 10833 ;; This function is called by:
 10834 ;;		_efgtoa
 10835 ;; This function uses a non-reentrant model
 10836 ;;
 10837                           
 10838                           
 10839                           ;psect for function ___flneg
 10840  1E1B                     ___flneg:	
 10841                           
 10842                           ;incstack = 0
 10843                           ; Regs used in ___flneg: [wreg]
 10844  1E1B  0874               	movf	___flneg@f1+3,w
 10845  1E1C  0473               	iorwf	___flneg@f1+2,w
 10846  1E1D  0472               	iorwf	___flneg@f1+1,w
 10847  1E1E  0471               	iorwf	___flneg@f1,w
 10848  1E1F  1903               	skipnz
 10849  1E20  0008               	return
 10850  1E21  3080               	movlw	128
 10851  1E22  06F4               	xorwf	___flneg@f1+3,f
 10852  1E23  0008               	return
 10853  1E24                     __end_of___flneg:	
 10854                           
 10855                           	psect	text26
 10856  0DD4                     __ptext26:	
 10857 ;; *************** function ___flmul *****************
 10858 ;; Defined at:
 10859 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 10860 ;; Parameters:    Size  Location     Type
 10861 ;;  b               4    0[BANK0 ] unsigned char 
 10862 ;;  a               4    4[BANK0 ] unsigned char 
 10863 ;; Auto vars:     Size  Location     Type
 10864 ;;  prod            4   20[BANK0 ] struct .
 10865 ;;  grs             4   14[BANK0 ] unsigned long 
 10866 ;;  temp            2   24[BANK0 ] struct .
 10867 ;;  bexp            1   19[BANK0 ] unsigned char 
 10868 ;;  aexp            1   18[BANK0 ] unsigned char 
 10869 ;;  sign            1   13[BANK0 ] unsigned char 
 10870 ;; Return value:  Size  Location     Type
 10871 ;;                  4    0[BANK0 ] unsigned char 
 10872 ;; Registers used:
 10873 ;;		wreg, status,2, status,0, pclath, cstack
 10874 ;; Tracked objects:
 10875 ;;		On entry : 0/0
 10876 ;;		On exit  : 0/0
 10877 ;;		Unchanged: 0/0
 10878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10879 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10880 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10881 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10882 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10883 ;;Total ram usage:       26 bytes
 10884 ;; Hardware stack levels used:    1
 10885 ;; Hardware stack levels required when called:    5
 10886 ;; This function calls:
 10887 ;;		__Umul8_16
 10888 ;; This function is called by:
 10889 ;;		_efgtoa
 10890 ;; This function uses a non-reentrant model
 10891 ;;
 10892                           
 10893                           
 10894                           ;psect for function ___flmul
 10895  0DD4                     ___flmul:	
 10896                           
 10897                           ;incstack = 0
 10898                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 10899  0DD4  0020               	movlb	0	; select bank0
 10900  0DD5  0823               	movf	___flmul@b+3,w
 10901  0DD6  3980               	andlw	128
 10902  0DD7  00A8               	movwf	??___flmul
 10903  0DD8  0828               	movf	??___flmul,w
 10904  0DD9  00AD               	movwf	___flmul@sign
 10905  0DDA  3523               	lslf	___flmul@b+3,w
 10906  0DDB  00A8               	movwf	??___flmul
 10907  0DDC  0828               	movf	??___flmul,w
 10908  0DDD  00B3               	movwf	___flmul@bexp
 10909  0DDE  1BA2               	btfsc	___flmul@b+2,7
 10910  0DDF  1433               	bsf	___flmul@bexp,0
 10911  0DE0  0833               	movf	___flmul@bexp,w
 10912  0DE1  1903               	btfsc	3,2
 10913  0DE2  2DF0               	goto	l4941
 10914  0DE3  0A33               	incf	___flmul@bexp,w
 10915  0DE4  1D03               	btfss	3,2
 10916  0DE5  2DEE               	goto	l4939
 10917  0DE6  3000               	movlw	0
 10918  0DE7  00A3               	movwf	___flmul@b+3
 10919  0DE8  3000               	movlw	0
 10920  0DE9  00A2               	movwf	___flmul@b+2
 10921  0DEA  3000               	movlw	0
 10922  0DEB  00A1               	movwf	___flmul@b+1
 10923  0DEC  3000               	movlw	0
 10924  0DED  00A0               	movwf	___flmul@b
 10925  0DEE                     l4939:	
 10926  0DEE  17A2               	bsf	___flmul@b+2,7
 10927  0DEF  2DF8               	goto	l4943
 10928  0DF0                     l4941:	
 10929  0DF0  3000               	movlw	0
 10930  0DF1  00A3               	movwf	___flmul@b+3
 10931  0DF2  3000               	movlw	0
 10932  0DF3  00A2               	movwf	___flmul@b+2
 10933  0DF4  3000               	movlw	0
 10934  0DF5  00A1               	movwf	___flmul@b+1
 10935  0DF6  3000               	movlw	0
 10936  0DF7  00A0               	movwf	___flmul@b
 10937  0DF8                     l4943:	
 10938  0DF8  0827               	movf	___flmul@a+3,w
 10939  0DF9  3980               	andlw	128
 10940  0DFA  00A8               	movwf	??___flmul
 10941  0DFB  0828               	movf	??___flmul,w
 10942  0DFC  06AD               	xorwf	___flmul@sign,f
 10943  0DFD  3527               	lslf	___flmul@a+3,w
 10944  0DFE  00A8               	movwf	??___flmul
 10945  0DFF  0828               	movf	??___flmul,w
 10946  0E00  00B2               	movwf	___flmul@aexp
 10947  0E01  1BA6               	btfsc	___flmul@a+2,7
 10948  0E02  1432               	bsf	___flmul@aexp,0
 10949  0E03  0832               	movf	___flmul@aexp,w
 10950  0E04  1903               	btfsc	3,2
 10951  0E05  2E13               	goto	l4959
 10952  0E06  0A32               	incf	___flmul@aexp,w
 10953  0E07  1D03               	btfss	3,2
 10954  0E08  2E11               	goto	l4957
 10955  0E09  3000               	movlw	0
 10956  0E0A  00A7               	movwf	___flmul@a+3
 10957  0E0B  3000               	movlw	0
 10958  0E0C  00A6               	movwf	___flmul@a+2
 10959  0E0D  3000               	movlw	0
 10960  0E0E  00A5               	movwf	___flmul@a+1
 10961  0E0F  3000               	movlw	0
 10962  0E10  00A4               	movwf	___flmul@a
 10963  0E11                     l4957:	
 10964  0E11  17A6               	bsf	___flmul@a+2,7
 10965  0E12  2E1B               	goto	l4961
 10966  0E13                     l4959:	
 10967  0E13  3000               	movlw	0
 10968  0E14  00A7               	movwf	___flmul@a+3
 10969  0E15  3000               	movlw	0
 10970  0E16  00A6               	movwf	___flmul@a+2
 10971  0E17  3000               	movlw	0
 10972  0E18  00A5               	movwf	___flmul@a+1
 10973  0E19  3000               	movlw	0
 10974  0E1A  00A4               	movwf	___flmul@a
 10975  0E1B                     l4961:	
 10976  0E1B  0832               	movf	___flmul@aexp,w
 10977  0E1C  1D03               	btfss	3,2
 10978  0E1D  0833               	movf	___flmul@bexp,w
 10979  0E1E  1D03               	btfss	3,2
 10980  0E1F  2E29               	goto	l4969
 10981  0E20  3000               	movlw	0
 10982  0E21  00A3               	movwf	?___flmul+3
 10983  0E22  3000               	movlw	0
 10984  0E23  00A2               	movwf	?___flmul+2
 10985  0E24  3000               	movlw	0
 10986  0E25  00A1               	movwf	?___flmul+1
 10987  0E26  3000               	movlw	0
 10988  0E27  00A0               	movwf	?___flmul
 10989  0E28  0008               	return
 10990  0E29                     l4969:	
 10991  0E29  0820               	movf	___flmul@b,w
 10992  0E2A  00A8               	movwf	??___flmul
 10993  0E2B  0828               	movf	??___flmul,w
 10994  0E2C  00F1               	movwf	__Umul8_16@multiplicand
 10995  0E2D  0826               	movf	___flmul@a+2,w
 10996  0E2E  319F  2783  318D   	fcall	__Umul8_16
 10997  0E31  0872               	movf	?__Umul8_16+1,w
 10998  0E32  0020               	movlb	0	; select bank0
 10999  0E33  00B9               	movwf	___flmul@temp+1
 11000  0E34  0871               	movf	?__Umul8_16,w
 11001  0E35  00B8               	movwf	___flmul@temp
 11002  0E36  0838               	movf	___flmul@temp,w
 11003  0E37  00A8               	movwf	??___flmul
 11004  0E38  01A9               	clrf	??___flmul+1
 11005  0E39  01AA               	clrf	??___flmul+2
 11006  0E3A  01AB               	clrf	??___flmul+3
 11007  0E3B  082B               	movf	??___flmul+3,w
 11008  0E3C  00B1               	movwf	___flmul@grs+3
 11009  0E3D  082A               	movf	??___flmul+2,w
 11010  0E3E  00B0               	movwf	___flmul@grs+2
 11011  0E3F  0829               	movf	??___flmul+1,w
 11012  0E40  00AF               	movwf	___flmul@grs+1
 11013  0E41  0828               	movf	??___flmul,w
 11014  0E42  00AE               	movwf	___flmul@grs
 11015  0E43  0839               	movf	___flmul@temp+1,w
 11016  0E44  00A8               	movwf	??___flmul
 11017  0E45  01A9               	clrf	??___flmul+1
 11018  0E46  01AA               	clrf	??___flmul+2
 11019  0E47  01AB               	clrf	??___flmul+3
 11020  0E48  082B               	movf	??___flmul+3,w
 11021  0E49  00B7               	movwf	___flmul@prod+3
 11022  0E4A  082A               	movf	??___flmul+2,w
 11023  0E4B  00B6               	movwf	___flmul@prod+2
 11024  0E4C  0829               	movf	??___flmul+1,w
 11025  0E4D  00B5               	movwf	___flmul@prod+1
 11026  0E4E  0828               	movf	??___flmul,w
 11027  0E4F  00B4               	movwf	___flmul@prod
 11028  0E50  0821               	movf	___flmul@b+1,w
 11029  0E51  00A8               	movwf	??___flmul
 11030  0E52  0828               	movf	??___flmul,w
 11031  0E53  00F1               	movwf	__Umul8_16@multiplicand
 11032  0E54  0825               	movf	___flmul@a+1,w
 11033  0E55  319F  2783  318D   	fcall	__Umul8_16
 11034  0E58  0872               	movf	?__Umul8_16+1,w
 11035  0E59  0020               	movlb	0	; select bank0
 11036  0E5A  00B9               	movwf	___flmul@temp+1
 11037  0E5B  0871               	movf	?__Umul8_16,w
 11038  0E5C  00B8               	movwf	___flmul@temp
 11039  0E5D  0838               	movf	___flmul@temp,w
 11040  0E5E  00A8               	movwf	??___flmul
 11041  0E5F  01A9               	clrf	??___flmul+1
 11042  0E60  01AA               	clrf	??___flmul+2
 11043  0E61  01AB               	clrf	??___flmul+3
 11044  0E62  0828               	movf	??___flmul,w
 11045  0E63  07AE               	addwf	___flmul@grs,f
 11046  0E64  0829               	movf	??___flmul+1,w
 11047  0E65  3DAF               	addwfc	___flmul@grs+1,f
 11048  0E66  082A               	movf	??___flmul+2,w
 11049  0E67  3DB0               	addwfc	___flmul@grs+2,f
 11050  0E68  082B               	movf	??___flmul+3,w
 11051  0E69  3DB1               	addwfc	___flmul@grs+3,f
 11052  0E6A  0839               	movf	___flmul@temp+1,w
 11053  0E6B  00A8               	movwf	??___flmul
 11054  0E6C  01A9               	clrf	??___flmul+1
 11055  0E6D  01AA               	clrf	??___flmul+2
 11056  0E6E  01AB               	clrf	??___flmul+3
 11057  0E6F  0828               	movf	??___flmul,w
 11058  0E70  07B4               	addwf	___flmul@prod,f
 11059  0E71  0829               	movf	??___flmul+1,w
 11060  0E72  3DB5               	addwfc	___flmul@prod+1,f
 11061  0E73  082A               	movf	??___flmul+2,w
 11062  0E74  3DB6               	addwfc	___flmul@prod+2,f
 11063  0E75  082B               	movf	??___flmul+3,w
 11064  0E76  3DB7               	addwfc	___flmul@prod+3,f
 11065  0E77  0822               	movf	___flmul@b+2,w
 11066  0E78  00A8               	movwf	??___flmul
 11067  0E79  0828               	movf	??___flmul,w
 11068  0E7A  00F1               	movwf	__Umul8_16@multiplicand
 11069  0E7B  0824               	movf	___flmul@a,w
 11070  0E7C  319F  2783  318D   	fcall	__Umul8_16
 11071  0E7F  0872               	movf	?__Umul8_16+1,w
 11072  0E80  0020               	movlb	0	; select bank0
 11073  0E81  00B9               	movwf	___flmul@temp+1
 11074  0E82  0871               	movf	?__Umul8_16,w
 11075  0E83  00B8               	movwf	___flmul@temp
 11076  0E84  0838               	movf	___flmul@temp,w
 11077  0E85  00A8               	movwf	??___flmul
 11078  0E86  01A9               	clrf	??___flmul+1
 11079  0E87  01AA               	clrf	??___flmul+2
 11080  0E88  01AB               	clrf	??___flmul+3
 11081  0E89  0828               	movf	??___flmul,w
 11082  0E8A  07AE               	addwf	___flmul@grs,f
 11083  0E8B  0829               	movf	??___flmul+1,w
 11084  0E8C  3DAF               	addwfc	___flmul@grs+1,f
 11085  0E8D  082A               	movf	??___flmul+2,w
 11086  0E8E  3DB0               	addwfc	___flmul@grs+2,f
 11087  0E8F  082B               	movf	??___flmul+3,w
 11088  0E90  3DB1               	addwfc	___flmul@grs+3,f
 11089  0E91  0839               	movf	___flmul@temp+1,w
 11090  0E92  00A8               	movwf	??___flmul
 11091  0E93  01A9               	clrf	??___flmul+1
 11092  0E94  01AA               	clrf	??___flmul+2
 11093  0E95  01AB               	clrf	??___flmul+3
 11094  0E96  0828               	movf	??___flmul,w
 11095  0E97  07B4               	addwf	___flmul@prod,f
 11096  0E98  0829               	movf	??___flmul+1,w
 11097  0E99  3DB5               	addwfc	___flmul@prod+1,f
 11098  0E9A  082A               	movf	??___flmul+2,w
 11099  0E9B  3DB6               	addwfc	___flmul@prod+2,f
 11100  0E9C  082B               	movf	??___flmul+3,w
 11101  0E9D  3DB7               	addwfc	___flmul@prod+3,f
 11102  0E9E  3008               	movlw	8
 11103  0E9F                     u4815:	
 11104  0E9F  35AE               	lslf	___flmul@grs,f
 11105  0EA0  0DAF               	rlf	___flmul@grs+1,f
 11106  0EA1  0DB0               	rlf	___flmul@grs+2,f
 11107  0EA2  0DB1               	rlf	___flmul@grs+3,f
 11108  0EA3  0B89               	decfsz	9,f
 11109  0EA4  2E9F               	goto	u4815
 11110  0EA5  0821               	movf	___flmul@b+1,w
 11111  0EA6  00A8               	movwf	??___flmul
 11112  0EA7  0828               	movf	??___flmul,w
 11113  0EA8  00F1               	movwf	__Umul8_16@multiplicand
 11114  0EA9  0824               	movf	___flmul@a,w
 11115  0EAA  319F  2783  318D   	fcall	__Umul8_16
 11116  0EAD  0872               	movf	?__Umul8_16+1,w
 11117  0EAE  0020               	movlb	0	; select bank0
 11118  0EAF  00B9               	movwf	___flmul@temp+1
 11119  0EB0  0871               	movf	?__Umul8_16,w
 11120  0EB1  00B8               	movwf	___flmul@temp
 11121  0EB2  0838               	movf	___flmul@temp,w
 11122  0EB3  07AE               	addwf	___flmul@grs,f
 11123  0EB4  0839               	movf	___flmul@temp+1,w
 11124  0EB5  3DAF               	addwfc	___flmul@grs+1,f
 11125  0EB6  3000               	movlw	0
 11126  0EB7  3DB0               	addwfc	___flmul@grs+2,f
 11127  0EB8  3DB1               	addwfc	___flmul@grs+3,f
 11128  0EB9  0820               	movf	___flmul@b,w
 11129  0EBA  00A8               	movwf	??___flmul
 11130  0EBB  0828               	movf	??___flmul,w
 11131  0EBC  00F1               	movwf	__Umul8_16@multiplicand
 11132  0EBD  0825               	movf	___flmul@a+1,w
 11133  0EBE  319F  2783  318D   	fcall	__Umul8_16
 11134  0EC1  0872               	movf	?__Umul8_16+1,w
 11135  0EC2  0020               	movlb	0	; select bank0
 11136  0EC3  00B9               	movwf	___flmul@temp+1
 11137  0EC4  0871               	movf	?__Umul8_16,w
 11138  0EC5  00B8               	movwf	___flmul@temp
 11139  0EC6  0838               	movf	___flmul@temp,w
 11140  0EC7  07AE               	addwf	___flmul@grs,f
 11141  0EC8  0839               	movf	___flmul@temp+1,w
 11142  0EC9  3DAF               	addwfc	___flmul@grs+1,f
 11143  0ECA  3000               	movlw	0
 11144  0ECB  3DB0               	addwfc	___flmul@grs+2,f
 11145  0ECC  3DB1               	addwfc	___flmul@grs+3,f
 11146  0ECD  3008               	movlw	8
 11147  0ECE                     u4825:	
 11148  0ECE  35AE               	lslf	___flmul@grs,f
 11149  0ECF  0DAF               	rlf	___flmul@grs+1,f
 11150  0ED0  0DB0               	rlf	___flmul@grs+2,f
 11151  0ED1  0DB1               	rlf	___flmul@grs+3,f
 11152  0ED2  0B89               	decfsz	9,f
 11153  0ED3  2ECE               	goto	u4825
 11154  0ED4  0820               	movf	___flmul@b,w
 11155  0ED5  00A8               	movwf	??___flmul
 11156  0ED6  0828               	movf	??___flmul,w
 11157  0ED7  00F1               	movwf	__Umul8_16@multiplicand
 11158  0ED8  0824               	movf	___flmul@a,w
 11159  0ED9  319F  2783  318D   	fcall	__Umul8_16
 11160  0EDC  0872               	movf	?__Umul8_16+1,w
 11161  0EDD  0020               	movlb	0	; select bank0
 11162  0EDE  00B9               	movwf	___flmul@temp+1
 11163  0EDF  0871               	movf	?__Umul8_16,w
 11164  0EE0  00B8               	movwf	___flmul@temp
 11165  0EE1  0838               	movf	___flmul@temp,w
 11166  0EE2  07AE               	addwf	___flmul@grs,f
 11167  0EE3  0839               	movf	___flmul@temp+1,w
 11168  0EE4  3DAF               	addwfc	___flmul@grs+1,f
 11169  0EE5  3000               	movlw	0
 11170  0EE6  3DB0               	addwfc	___flmul@grs+2,f
 11171  0EE7  3DB1               	addwfc	___flmul@grs+3,f
 11172  0EE8  0821               	movf	___flmul@b+1,w
 11173  0EE9  00A8               	movwf	??___flmul
 11174  0EEA  0828               	movf	??___flmul,w
 11175  0EEB  00F1               	movwf	__Umul8_16@multiplicand
 11176  0EEC  0826               	movf	___flmul@a+2,w
 11177  0EED  319F  2783  318D   	fcall	__Umul8_16
 11178  0EF0  0872               	movf	?__Umul8_16+1,w
 11179  0EF1  0020               	movlb	0	; select bank0
 11180  0EF2  00B9               	movwf	___flmul@temp+1
 11181  0EF3  0871               	movf	?__Umul8_16,w
 11182  0EF4  00B8               	movwf	___flmul@temp
 11183  0EF5  0838               	movf	___flmul@temp,w
 11184  0EF6  07B4               	addwf	___flmul@prod,f
 11185  0EF7  0839               	movf	___flmul@temp+1,w
 11186  0EF8  3DB5               	addwfc	___flmul@prod+1,f
 11187  0EF9  3000               	movlw	0
 11188  0EFA  3DB6               	addwfc	___flmul@prod+2,f
 11189  0EFB  3DB7               	addwfc	___flmul@prod+3,f
 11190  0EFC  0822               	movf	___flmul@b+2,w
 11191  0EFD  00A8               	movwf	??___flmul
 11192  0EFE  0828               	movf	??___flmul,w
 11193  0EFF  00F1               	movwf	__Umul8_16@multiplicand
 11194  0F00  0825               	movf	___flmul@a+1,w
 11195  0F01  319F  2783  318D   	fcall	__Umul8_16
 11196  0F04  0872               	movf	?__Umul8_16+1,w
 11197  0F05  0020               	movlb	0	; select bank0
 11198  0F06  00B9               	movwf	___flmul@temp+1
 11199  0F07  0871               	movf	?__Umul8_16,w
 11200  0F08  00B8               	movwf	___flmul@temp
 11201  0F09  0838               	movf	___flmul@temp,w
 11202  0F0A  07B4               	addwf	___flmul@prod,f
 11203  0F0B  0839               	movf	___flmul@temp+1,w
 11204  0F0C  3DB5               	addwfc	___flmul@prod+1,f
 11205  0F0D  3000               	movlw	0
 11206  0F0E  3DB6               	addwfc	___flmul@prod+2,f
 11207  0F0F  3DB7               	addwfc	___flmul@prod+3,f
 11208  0F10  0822               	movf	___flmul@b+2,w
 11209  0F11  00A8               	movwf	??___flmul
 11210  0F12  0828               	movf	??___flmul,w
 11211  0F13  00F1               	movwf	__Umul8_16@multiplicand
 11212  0F14  0826               	movf	___flmul@a+2,w
 11213  0F15  319F  2783  318D   	fcall	__Umul8_16
 11214  0F18  0872               	movf	?__Umul8_16+1,w
 11215  0F19  0020               	movlb	0	; select bank0
 11216  0F1A  00B9               	movwf	___flmul@temp+1
 11217  0F1B  0871               	movf	?__Umul8_16,w
 11218  0F1C  00B8               	movwf	___flmul@temp
 11219  0F1D  0838               	movf	___flmul@temp,w
 11220  0F1E  00A8               	movwf	??___flmul
 11221  0F1F  0839               	movf	___flmul@temp+1,w
 11222  0F20  00A9               	movwf	??___flmul+1
 11223  0F21  01AA               	clrf	??___flmul+2
 11224  0F22  01AB               	clrf	??___flmul+3
 11225  0F23  3008               	movlw	8
 11226  0F24                     u4835:	
 11227  0F24  35A8               	lslf	??___flmul,f
 11228  0F25  0DA9               	rlf	??___flmul+1,f
 11229  0F26  0DAA               	rlf	??___flmul+2,f
 11230  0F27  0DAB               	rlf	??___flmul+3,f
 11231  0F28  0B89               	decfsz	9,f
 11232  0F29  2F24               	goto	u4835
 11233  0F2A  0828               	movf	??___flmul,w
 11234  0F2B  07B4               	addwf	___flmul@prod,f
 11235  0F2C  0829               	movf	??___flmul+1,w
 11236  0F2D  3DB5               	addwfc	___flmul@prod+1,f
 11237  0F2E  082A               	movf	??___flmul+2,w
 11238  0F2F  3DB6               	addwfc	___flmul@prod+2,f
 11239  0F30  082B               	movf	??___flmul+3,w
 11240  0F31  3DB7               	addwfc	___flmul@prod+3,f
 11241  0F32  082E               	movf	___flmul@grs,w
 11242  0F33  00A8               	movwf	??___flmul
 11243  0F34  082F               	movf	___flmul@grs+1,w
 11244  0F35  00A9               	movwf	??___flmul+1
 11245  0F36  0830               	movf	___flmul@grs+2,w
 11246  0F37  00AA               	movwf	??___flmul+2
 11247  0F38  0831               	movf	___flmul@grs+3,w
 11248  0F39  00AB               	movwf	??___flmul+3
 11249  0F3A  3018               	movlw	24
 11250  0F3B                     u4845:	
 11251  0F3B  36AB               	lsrf	??___flmul+3,f
 11252  0F3C  0CAA               	rrf	??___flmul+2,f
 11253  0F3D  0CA9               	rrf	??___flmul+1,f
 11254  0F3E  0CA8               	rrf	??___flmul,f
 11255  0F3F  0B89               	decfsz	9,f
 11256  0F40  2F3B               	goto	u4845
 11257  0F41  0828               	movf	??___flmul,w
 11258  0F42  07B4               	addwf	___flmul@prod,f
 11259  0F43  0829               	movf	??___flmul+1,w
 11260  0F44  3DB5               	addwfc	___flmul@prod+1,f
 11261  0F45  082A               	movf	??___flmul+2,w
 11262  0F46  3DB6               	addwfc	___flmul@prod+2,f
 11263  0F47  082B               	movf	??___flmul+3,w
 11264  0F48  3DB7               	addwfc	___flmul@prod+3,f
 11265  0F49  3008               	movlw	8
 11266  0F4A                     u4855:	
 11267  0F4A  35AE               	lslf	___flmul@grs,f
 11268  0F4B  0DAF               	rlf	___flmul@grs+1,f
 11269  0F4C  0DB0               	rlf	___flmul@grs+2,f
 11270  0F4D  0DB1               	rlf	___flmul@grs+3,f
 11271  0F4E  0B89               	decfsz	9,f
 11272  0F4F  2F4A               	goto	u4855
 11273  0F50  0833               	movf	___flmul@bexp,w
 11274  0F51  0732               	addwf	___flmul@aexp,w
 11275  0F52  00A8               	movwf	??___flmul
 11276  0F53  01A9               	clrf	??___flmul+1
 11277  0F54  0DA9               	rlf	??___flmul+1,f
 11278  0F55  0828               	movf	??___flmul,w
 11279  0F56  3E82               	addlw	130
 11280  0F57  00B8               	movwf	___flmul@temp
 11281  0F58  30FF               	movlw	255
 11282  0F59  3D29               	addwfc	??___flmul+1,w
 11283  0F5A  00B9               	movwf	___flmul@temp+1
 11284  0F5B                     l5021:	
 11285  0F5B  1BB6               	btfsc	___flmul@prod+2,7
 11286  0F5C  2F72               	goto	l5023
 11287  0F5D  3001               	movlw	1
 11288  0F5E                     u4865:	
 11289  0F5E  35B4               	lslf	___flmul@prod,f
 11290  0F5F  0DB5               	rlf	___flmul@prod+1,f
 11291  0F60  0DB6               	rlf	___flmul@prod+2,f
 11292  0F61  0DB7               	rlf	___flmul@prod+3,f
 11293  0F62  0B89               	decfsz	9,f
 11294  0F63  2F5E               	goto	u4865
 11295  0F64  1BB1               	btfsc	___flmul@grs+3,7
 11296  0F65  1434               	bsf	___flmul@prod,0
 11297  0F66  3001               	movlw	1
 11298  0F67                     u4885:	
 11299  0F67  35AE               	lslf	___flmul@grs,f
 11300  0F68  0DAF               	rlf	___flmul@grs+1,f
 11301  0F69  0DB0               	rlf	___flmul@grs+2,f
 11302  0F6A  0DB1               	rlf	___flmul@grs+3,f
 11303  0F6B  0B89               	decfsz	9,f
 11304  0F6C  2F67               	goto	u4885
 11305  0F6D  30FF               	movlw	255
 11306  0F6E  07B8               	addwf	___flmul@temp,f
 11307  0F6F  30FF               	movlw	255
 11308  0F70  3DB9               	addwfc	___flmul@temp+1,f
 11309  0F71  2F5B               	goto	l5021
 11310  0F72                     l5023:	
 11311  0F72  01B2               	clrf	___flmul@aexp
 11312  0F73  1FB1               	btfss	___flmul@grs+3,7
 11313  0F74  2F8B               	goto	l5033
 11314  0F75  30FF               	movlw	255
 11315  0F76  052E               	andwf	___flmul@grs,w
 11316  0F77  00A8               	movwf	??___flmul
 11317  0F78  30FF               	movlw	255
 11318  0F79  052F               	andwf	___flmul@grs+1,w
 11319  0F7A  00A9               	movwf	??___flmul+1
 11320  0F7B  30FF               	movlw	255
 11321  0F7C  0530               	andwf	___flmul@grs+2,w
 11322  0F7D  00AA               	movwf	??___flmul+2
 11323  0F7E  307F               	movlw	127
 11324  0F7F  0531               	andwf	___flmul@grs+3,w
 11325  0F80  00AB               	movwf	??___flmul+3
 11326  0F81  082B               	movf	??___flmul+3,w
 11327  0F82  042A               	iorwf	??___flmul+2,w
 11328  0F83  0429               	iorwf	??___flmul+1,w
 11329  0F84  0428               	iorwf	??___flmul,w
 11330  0F85  1903               	skipnz
 11331  0F86  1834               	btfsc	___flmul@prod,0
 11332  0F87  2F89               	goto	l5029
 11333  0F88  2F8B               	goto	l5033
 11334  0F89                     l5029:	
 11335  0F89  01B2               	clrf	___flmul@aexp
 11336  0F8A  0AB2               	incf	___flmul@aexp,f
 11337  0F8B                     l5033:	
 11338  0F8B  0832               	movf	___flmul@aexp,w
 11339  0F8C  1903               	btfsc	3,2
 11340  0F8D  2FB4               	goto	l5043
 11341  0F8E  3001               	movlw	1
 11342  0F8F  07B4               	addwf	___flmul@prod,f
 11343  0F90  3000               	movlw	0
 11344  0F91  3DB5               	addwfc	___flmul@prod+1,f
 11345  0F92  3000               	movlw	0
 11346  0F93  3DB6               	addwfc	___flmul@prod+2,f
 11347  0F94  3000               	movlw	0
 11348  0F95  3DB7               	addwfc	___flmul@prod+3,f
 11349  0F96  1C37               	btfss	___flmul@prod+3,0
 11350  0F97  2FB4               	goto	l5043
 11351  0F98  0834               	movf	___flmul@prod,w
 11352  0F99  00A8               	movwf	??___flmul
 11353  0F9A  0835               	movf	___flmul@prod+1,w
 11354  0F9B  00A9               	movwf	??___flmul+1
 11355  0F9C  0836               	movf	___flmul@prod+2,w
 11356  0F9D  00AA               	movwf	??___flmul+2
 11357  0F9E  0837               	movf	___flmul@prod+3,w
 11358  0F9F  00AB               	movwf	??___flmul+3
 11359  0FA0  3001               	movlw	1
 11360  0FA1  00AC               	movwf	??___flmul+4
 11361  0FA2                     u4955:	
 11362  0FA2  37AB               	asrf	??___flmul+3,f
 11363  0FA3  0CAA               	rrf	??___flmul+2,f
 11364  0FA4  0CA9               	rrf	??___flmul+1,f
 11365  0FA5  0CA8               	rrf	??___flmul,f
 11366  0FA6  0BAC               	decfsz	??___flmul+4,f
 11367  0FA7  2FA2               	goto	u4955
 11368  0FA8  082B               	movf	??___flmul+3,w
 11369  0FA9  00B7               	movwf	___flmul@prod+3
 11370  0FAA  082A               	movf	??___flmul+2,w
 11371  0FAB  00B6               	movwf	___flmul@prod+2
 11372  0FAC  0829               	movf	??___flmul+1,w
 11373  0FAD  00B5               	movwf	___flmul@prod+1
 11374  0FAE  0828               	movf	??___flmul,w
 11375  0FAF  00B4               	movwf	___flmul@prod
 11376  0FB0  3001               	movlw	1
 11377  0FB1  07B8               	addwf	___flmul@temp,f
 11378  0FB2  3000               	movlw	0
 11379  0FB3  3DB9               	addwfc	___flmul@temp+1,f
 11380  0FB4                     l5043:	
 11381  0FB4  0839               	movf	___flmul@temp+1,w
 11382  0FB5  3A80               	xorlw	128
 11383  0FB6  00A8               	movwf	??___flmul
 11384  0FB7  3080               	movlw	128
 11385  0FB8  0228               	subwf	??___flmul,w
 11386  0FB9  1D03               	skipz
 11387  0FBA  2FBD               	goto	u4965
 11388  0FBB  30FF               	movlw	255
 11389  0FBC  0238               	subwf	___flmul@temp,w
 11390  0FBD                     u4965:	
 11391  0FBD  1C03               	skipc
 11392  0FBE  2FC9               	goto	l5047
 11393  0FBF  307F               	movlw	127
 11394  0FC0  0020               	movlb	0	; select bank0
 11395  0FC1  00B7               	movwf	___flmul@prod+3
 11396  0FC2  3080               	movlw	128
 11397  0FC3  00B6               	movwf	___flmul@prod+2
 11398  0FC4  3000               	movlw	0
 11399  0FC5  00B5               	movwf	___flmul@prod+1
 11400  0FC6  3000               	movlw	0
 11401  0FC7  00B4               	movwf	___flmul@prod
 11402  0FC8  2FF3               	goto	l1563
 11403  0FC9                     l5047:	
 11404  0FC9  0020               	movlb	0	; select bank0
 11405  0FCA  0839               	movf	___flmul@temp+1,w
 11406  0FCB  3A80               	xorlw	128
 11407  0FCC  00A8               	movwf	??___flmul
 11408  0FCD  3080               	movlw	128
 11409  0FCE  0228               	subwf	??___flmul,w
 11410  0FCF  1D03               	skipz
 11411  0FD0  2FD3               	goto	u4975
 11412  0FD1  3001               	movlw	1
 11413  0FD2  0238               	subwf	___flmul@temp,w
 11414  0FD3                     u4975:	
 11415  0FD3  1803               	skipnc
 11416  0FD4  2FE0               	goto	l5053
 11417  0FD5  3000               	movlw	0
 11418  0FD6  0020               	movlb	0	; select bank0
 11419  0FD7  00B7               	movwf	___flmul@prod+3
 11420  0FD8  3000               	movlw	0
 11421  0FD9  00B6               	movwf	___flmul@prod+2
 11422  0FDA  3000               	movlw	0
 11423  0FDB  00B5               	movwf	___flmul@prod+1
 11424  0FDC  3000               	movlw	0
 11425  0FDD  00B4               	movwf	___flmul@prod
 11426  0FDE  01AD               	clrf	___flmul@sign
 11427  0FDF  2FF3               	goto	l1563
 11428  0FE0                     l5053:	
 11429  0FE0  0020               	movlb	0	; select bank0
 11430  0FE1  0838               	movf	___flmul@temp,w
 11431  0FE2  00A8               	movwf	??___flmul
 11432  0FE3  0828               	movf	??___flmul,w
 11433  0FE4  00B3               	movwf	___flmul@bexp
 11434  0FE5  30FF               	movlw	255
 11435  0FE6  05B4               	andwf	___flmul@prod,f
 11436  0FE7  30FF               	movlw	255
 11437  0FE8  05B5               	andwf	___flmul@prod+1,f
 11438  0FE9  307F               	movlw	127
 11439  0FEA  05B6               	andwf	___flmul@prod+2,f
 11440  0FEB  3000               	movlw	0
 11441  0FEC  05B7               	andwf	___flmul@prod+3,f
 11442  0FED  1833               	btfsc	___flmul@bexp,0
 11443  0FEE  17B6               	bsf	___flmul@prod+2,7
 11444  0FEF  3633               	lsrf	___flmul@bexp,w
 11445  0FF0  00A8               	movwf	??___flmul
 11446  0FF1  0828               	movf	??___flmul,w
 11447  0FF2  00B7               	movwf	___flmul@prod+3
 11448  0FF3                     l1563:	
 11449  0FF3  082D               	movf	___flmul@sign,w
 11450  0FF4  00A8               	movwf	??___flmul
 11451  0FF5  0828               	movf	??___flmul,w
 11452  0FF6  04B7               	iorwf	___flmul@prod+3,f
 11453  0FF7  0837               	movf	___flmul@prod+3,w
 11454  0FF8  00A3               	movwf	?___flmul+3
 11455  0FF9  0836               	movf	___flmul@prod+2,w
 11456  0FFA  00A2               	movwf	?___flmul+2
 11457  0FFB  0835               	movf	___flmul@prod+1,w
 11458  0FFC  00A1               	movwf	?___flmul+1
 11459  0FFD  0834               	movf	___flmul@prod,w
 11460  0FFE  00A0               	movwf	?___flmul
 11461  0FFF  0008               	return
 11462  1000                     __end_of___flmul:	
 11463                           
 11464                           	psect	text27
 11465  1F83                     __ptext27:	
 11466 ;; *************** function __Umul8_16 *****************
 11467 ;; Defined at:
 11468 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 11469 ;; Parameters:    Size  Location     Type
 11470 ;;  multiplier      1    wreg     unsigned char 
 11471 ;;  multiplicand    1    1[COMMON] unsigned char 
 11472 ;; Auto vars:     Size  Location     Type
 11473 ;;  multiplier      1    9[COMMON] unsigned char 
 11474 ;;  word_mpld       2    7[COMMON] unsigned int 
 11475 ;;  product         2    5[COMMON] unsigned int 
 11476 ;; Return value:  Size  Location     Type
 11477 ;;                  2    1[COMMON] unsigned int 
 11478 ;; Registers used:
 11479 ;;		wreg, status,2, status,0
 11480 ;; Tracked objects:
 11481 ;;		On entry : 0/0
 11482 ;;		On exit  : 0/0
 11483 ;;		Unchanged: 0/0
 11484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11485 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11486 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11487 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11488 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11489 ;;Total ram usage:        9 bytes
 11490 ;; Hardware stack levels used:    1
 11491 ;; Hardware stack levels required when called:    4
 11492 ;; This function calls:
 11493 ;;		Nothing
 11494 ;; This function is called by:
 11495 ;;		___flmul
 11496 ;; This function uses a non-reentrant model
 11497 ;;
 11498                           
 11499                           
 11500                           ;psect for function __Umul8_16
 11501  1F83                     __Umul8_16:	
 11502                           
 11503                           ;incstack = 0
 11504                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 11505                           ;__Umul8_16@multiplier stored from wreg
 11506  1F83  00F9               	movwf	__Umul8_16@multiplier
 11507  1F84  01F5               	clrf	__Umul8_16@product
 11508  1F85  01F6               	clrf	__Umul8_16@product+1
 11509  1F86  0871               	movf	__Umul8_16@multiplicand,w
 11510  1F87  00F3               	movwf	??__Umul8_16
 11511  1F88  01F4               	clrf	??__Umul8_16+1
 11512  1F89  0873               	movf	??__Umul8_16,w
 11513  1F8A  00F7               	movwf	__Umul8_16@word_mpld
 11514  1F8B  0874               	movf	??__Umul8_16+1,w
 11515  1F8C  00F8               	movwf	__Umul8_16@word_mpld+1
 11516  1F8D                     l4511:	
 11517  1F8D  1C79               	btfss	__Umul8_16@multiplier,0
 11518  1F8E  2F93               	goto	l1699
 11519  1F8F  0877               	movf	__Umul8_16@word_mpld,w
 11520  1F90  07F5               	addwf	__Umul8_16@product,f
 11521  1F91  0878               	movf	__Umul8_16@word_mpld+1,w
 11522  1F92  3DF6               	addwfc	__Umul8_16@product+1,f
 11523  1F93                     l1699:	
 11524  1F93  3001               	movlw	1
 11525  1F94                     u3745:	
 11526  1F94  35F7               	lslf	__Umul8_16@word_mpld,f
 11527  1F95  0DF8               	rlf	__Umul8_16@word_mpld+1,f
 11528  1F96  0B89               	decfsz	9,f
 11529  1F97  2F94               	goto	u3745
 11530  1F98  1003               	clrc
 11531  1F99  0CF9               	rrf	__Umul8_16@multiplier,f
 11532  1F9A  0879               	movf	__Umul8_16@multiplier,w
 11533  1F9B  1D03               	btfss	3,2
 11534  1F9C  2F8D               	goto	l4511
 11535  1F9D  0876               	movf	__Umul8_16@product+1,w
 11536  1F9E  00F2               	movwf	?__Umul8_16+1
 11537  1F9F  0875               	movf	__Umul8_16@product,w
 11538  1FA0  00F1               	movwf	?__Umul8_16
 11539  1FA1  0008               	return
 11540  1FA2                     __end_of__Umul8_16:	
 11541                           
 11542                           	psect	text28
 11543  1577                     __ptext28:	
 11544 ;; *************** function ___flge *****************
 11545 ;; Defined at:
 11546 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 11547 ;; Parameters:    Size  Location     Type
 11548 ;;  ff1             4   26[BANK0 ] unsigned int 
 11549 ;;  ff2             4   30[BANK0 ] unsigned int 
 11550 ;; Auto vars:     Size  Location     Type
 11551 ;;		None
 11552 ;; Return value:  Size  Location     Type
 11553 ;;		None               void
 11554 ;; Registers used:
 11555 ;;		wreg, status,2, status,0
 11556 ;; Tracked objects:
 11557 ;;		On entry : 0/0
 11558 ;;		On exit  : 0/0
 11559 ;;		Unchanged: 0/0
 11560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11561 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11563 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11564 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11565 ;;Total ram usage:       12 bytes
 11566 ;; Hardware stack levels used:    1
 11567 ;; Hardware stack levels required when called:    4
 11568 ;; This function calls:
 11569 ;;		Nothing
 11570 ;; This function is called by:
 11571 ;;		_efgtoa
 11572 ;; This function uses a non-reentrant model
 11573 ;;
 11574                           
 11575                           
 11576                           ;psect for function ___flge
 11577  1577                     ___flge:	
 11578                           
 11579                           ;incstack = 0
 11580                           ; Regs used in ___flge: [wreg+status,2+status,0]
 11581  1577  3000               	movlw	0
 11582  1578  0020               	movlb	0	; select bank0
 11583  1579  053A               	andwf	___flge@ff1,w
 11584  157A  00C2               	movwf	??___flge
 11585  157B  3000               	movlw	0
 11586  157C  053B               	andwf	___flge@ff1+1,w
 11587  157D  00C3               	movwf	??___flge+1
 11588  157E  3080               	movlw	128
 11589  157F  053C               	andwf	___flge@ff1+2,w
 11590  1580  00C4               	movwf	??___flge+2
 11591  1581  307F               	movlw	127
 11592  1582  053D               	andwf	___flge@ff1+3,w
 11593  1583  00C5               	movwf	??___flge+3
 11594  1584  0845               	movf	??___flge+3,w
 11595  1585  0444               	iorwf	??___flge+2,w
 11596  1586  0443               	iorwf	??___flge+1,w
 11597  1587  0442               	iorwf	??___flge,w
 11598  1588  1D03               	skipz
 11599  1589  2D92               	goto	l1332
 11600  158A  3000               	movlw	0
 11601  158B  00BD               	movwf	___flge@ff1+3
 11602  158C  3000               	movlw	0
 11603  158D  00BC               	movwf	___flge@ff1+2
 11604  158E  3000               	movlw	0
 11605  158F  00BB               	movwf	___flge@ff1+1
 11606  1590  3000               	movlw	0
 11607  1591  00BA               	movwf	___flge@ff1
 11608  1592                     l1332:	
 11609  1592  3000               	movlw	0
 11610  1593  053E               	andwf	___flge@ff2,w
 11611  1594  00C2               	movwf	??___flge
 11612  1595  3000               	movlw	0
 11613  1596  053F               	andwf	___flge@ff2+1,w
 11614  1597  00C3               	movwf	??___flge+1
 11615  1598  3080               	movlw	128
 11616  1599  0540               	andwf	___flge@ff2+2,w
 11617  159A  00C4               	movwf	??___flge+2
 11618  159B  307F               	movlw	127
 11619  159C  0541               	andwf	___flge@ff2+3,w
 11620  159D  00C5               	movwf	??___flge+3
 11621  159E  0845               	movf	??___flge+3,w
 11622  159F  0444               	iorwf	??___flge+2,w
 11623  15A0  0443               	iorwf	??___flge+1,w
 11624  15A1  0442               	iorwf	??___flge,w
 11625  15A2  1D03               	skipz
 11626  15A3  2DAC               	goto	l4721
 11627  15A4  3000               	movlw	0
 11628  15A5  00C1               	movwf	___flge@ff2+3
 11629  15A6  3000               	movlw	0
 11630  15A7  00C0               	movwf	___flge@ff2+2
 11631  15A8  3000               	movlw	0
 11632  15A9  00BF               	movwf	___flge@ff2+1
 11633  15AA  3000               	movlw	0
 11634  15AB  00BE               	movwf	___flge@ff2
 11635  15AC                     l4721:	
 11636  15AC  1FBD               	btfss	___flge@ff1+3,7
 11637  15AD  2DC6               	goto	l4725
 11638  15AE  3000               	movlw	0
 11639  15AF  00C2               	movwf	??___flge
 11640  15B0  3000               	movlw	0
 11641  15B1  00C3               	movwf	??___flge+1
 11642  15B2  3000               	movlw	0
 11643  15B3  00C4               	movwf	??___flge+2
 11644  15B4  3080               	movlw	128
 11645  15B5  00C5               	movwf	??___flge+3
 11646  15B6  083A               	movf	___flge@ff1,w
 11647  15B7  02C2               	subwf	??___flge,f
 11648  15B8  083B               	movf	___flge@ff1+1,w
 11649  15B9  3BC3               	subwfb	??___flge+1,f
 11650  15BA  083C               	movf	___flge@ff1+2,w
 11651  15BB  3BC4               	subwfb	??___flge+2,f
 11652  15BC  083D               	movf	___flge@ff1+3,w
 11653  15BD  3BC5               	subwfb	??___flge+3,f
 11654  15BE  0845               	movf	??___flge+3,w
 11655  15BF  00BD               	movwf	___flge@ff1+3
 11656  15C0  0844               	movf	??___flge+2,w
 11657  15C1  00BC               	movwf	___flge@ff1+2
 11658  15C2  0843               	movf	??___flge+1,w
 11659  15C3  00BB               	movwf	___flge@ff1+1
 11660  15C4  0842               	movf	??___flge,w
 11661  15C5  00BA               	movwf	___flge@ff1
 11662  15C6                     l4725:	
 11663  15C6  1FC1               	btfss	___flge@ff2+3,7
 11664  15C7  2DE0               	goto	l1335
 11665  15C8  3000               	movlw	0
 11666  15C9  00C2               	movwf	??___flge
 11667  15CA  3000               	movlw	0
 11668  15CB  00C3               	movwf	??___flge+1
 11669  15CC  3000               	movlw	0
 11670  15CD  00C4               	movwf	??___flge+2
 11671  15CE  3080               	movlw	128
 11672  15CF  00C5               	movwf	??___flge+3
 11673  15D0  083E               	movf	___flge@ff2,w
 11674  15D1  02C2               	subwf	??___flge,f
 11675  15D2  083F               	movf	___flge@ff2+1,w
 11676  15D3  3BC3               	subwfb	??___flge+1,f
 11677  15D4  0840               	movf	___flge@ff2+2,w
 11678  15D5  3BC4               	subwfb	??___flge+2,f
 11679  15D6  0841               	movf	___flge@ff2+3,w
 11680  15D7  3BC5               	subwfb	??___flge+3,f
 11681  15D8  0845               	movf	??___flge+3,w
 11682  15D9  00C1               	movwf	___flge@ff2+3
 11683  15DA  0844               	movf	??___flge+2,w
 11684  15DB  00C0               	movwf	___flge@ff2+2
 11685  15DC  0843               	movf	??___flge+1,w
 11686  15DD  00BF               	movwf	___flge@ff2+1
 11687  15DE  0842               	movf	??___flge,w
 11688  15DF  00BE               	movwf	___flge@ff2
 11689  15E0                     l1335:	
 11690  15E0  3080               	movlw	128
 11691  15E1  06BD               	xorwf	___flge@ff1+3,f
 11692  15E2  3080               	movlw	128
 11693  15E3  06C1               	xorwf	___flge@ff2+3,f
 11694  15E4  0841               	movf	___flge@ff2+3,w
 11695  15E5  023D               	subwf	___flge@ff1+3,w
 11696  15E6  1D03               	skipz
 11697  15E7  0008               	return
 11698  15E8  0840               	movf	___flge@ff2+2,w
 11699  15E9  023C               	subwf	___flge@ff1+2,w
 11700  15EA  1D03               	skipz
 11701  15EB  0008               	return
 11702  15EC  083F               	movf	___flge@ff2+1,w
 11703  15ED  023B               	subwf	___flge@ff1+1,w
 11704  15EE  1D03               	skipz
 11705  15EF  0008               	return
 11706  15F0  083E               	movf	___flge@ff2,w
 11707  15F1  023A               	subwf	___flge@ff1,w
 11708  15F2  0008               	return
 11709  15F3                     __end_of___flge:	
 11710                           
 11711                           	psect	text29
 11712  1310                     __ptext29:	
 11713 ;; *************** function ___fleq *****************
 11714 ;; Defined at:
 11715 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
 11716 ;; Parameters:    Size  Location     Type
 11717 ;;  ff1             4    1[COMMON] unsigned int 
 11718 ;;  ff2             4    5[COMMON] unsigned int 
 11719 ;; Auto vars:     Size  Location     Type
 11720 ;;		None
 11721 ;; Return value:  Size  Location     Type
 11722 ;;		None               void
 11723 ;; Registers used:
 11724 ;;		wreg, status,2, status,0
 11725 ;; Tracked objects:
 11726 ;;		On entry : 0/0
 11727 ;;		On exit  : 0/0
 11728 ;;		Unchanged: 0/0
 11729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11730 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11732 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11733 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11734 ;;Total ram usage:       12 bytes
 11735 ;; Hardware stack levels used:    1
 11736 ;; Hardware stack levels required when called:    4
 11737 ;; This function calls:
 11738 ;;		Nothing
 11739 ;; This function is called by:
 11740 ;;		_efgtoa
 11741 ;; This function uses a non-reentrant model
 11742 ;;
 11743                           
 11744                           
 11745                           ;psect for function ___fleq
 11746  1310                     ___fleq:	
 11747                           
 11748                           ;incstack = 0
 11749                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 11750  1310  3000               	movlw	0
 11751  1311  0571               	andwf	___fleq@ff1,w
 11752  1312  0020               	movlb	0	; select bank0
 11753  1313  00A0               	movwf	??___fleq
 11754  1314  3000               	movlw	0
 11755  1315  0572               	andwf	___fleq@ff1+1,w
 11756  1316  00A1               	movwf	??___fleq+1
 11757  1317  3080               	movlw	128
 11758  1318  0573               	andwf	___fleq@ff1+2,w
 11759  1319  00A2               	movwf	??___fleq+2
 11760  131A  307F               	movlw	127
 11761  131B  0574               	andwf	___fleq@ff1+3,w
 11762  131C  00A3               	movwf	??___fleq+3
 11763  131D  0823               	movf	??___fleq+3,w
 11764  131E  0422               	iorwf	??___fleq+2,w
 11765  131F  0421               	iorwf	??___fleq+1,w
 11766  1320  0420               	iorwf	??___fleq,w
 11767  1321  1D03               	skipz
 11768  1322  2B2B               	goto	l1323
 11769  1323  3000               	movlw	0
 11770  1324  00F4               	movwf	___fleq@ff1+3
 11771  1325  3000               	movlw	0
 11772  1326  00F3               	movwf	___fleq@ff1+2
 11773  1327  3000               	movlw	0
 11774  1328  00F2               	movwf	___fleq@ff1+1
 11775  1329  3000               	movlw	0
 11776  132A  00F1               	movwf	___fleq@ff1
 11777  132B                     l1323:	
 11778  132B  3000               	movlw	0
 11779  132C  0575               	andwf	___fleq@ff2,w
 11780  132D  00A0               	movwf	??___fleq
 11781  132E  3000               	movlw	0
 11782  132F  0576               	andwf	___fleq@ff2+1,w
 11783  1330  00A1               	movwf	??___fleq+1
 11784  1331  3080               	movlw	128
 11785  1332  0577               	andwf	___fleq@ff2+2,w
 11786  1333  00A2               	movwf	??___fleq+2
 11787  1334  307F               	movlw	127
 11788  1335  0578               	andwf	___fleq@ff2+3,w
 11789  1336  00A3               	movwf	??___fleq+3
 11790  1337  0823               	movf	??___fleq+3,w
 11791  1338  0422               	iorwf	??___fleq+2,w
 11792  1339  0421               	iorwf	??___fleq+1,w
 11793  133A  0420               	iorwf	??___fleq,w
 11794  133B  1D03               	skipz
 11795  133C  2B45               	goto	l1324
 11796  133D  3000               	movlw	0
 11797  133E  00F8               	movwf	___fleq@ff2+3
 11798  133F  3000               	movlw	0
 11799  1340  00F7               	movwf	___fleq@ff2+2
 11800  1341  3000               	movlw	0
 11801  1342  00F6               	movwf	___fleq@ff2+1
 11802  1343  3000               	movlw	0
 11803  1344  00F5               	movwf	___fleq@ff2
 11804  1345                     l1324:	
 11805  1345  0878               	movf	___fleq@ff2+3,w
 11806  1346  0674               	xorwf	___fleq@ff1+3,w
 11807  1347  1D03               	skipz
 11808  1348  2B53               	goto	u6805
 11809  1349  0877               	movf	___fleq@ff2+2,w
 11810  134A  0673               	xorwf	___fleq@ff1+2,w
 11811  134B  1D03               	skipz
 11812  134C  2B53               	goto	u6805
 11813  134D  0876               	movf	___fleq@ff2+1,w
 11814  134E  0672               	xorwf	___fleq@ff1+1,w
 11815  134F  1D03               	skipz
 11816  1350  2B53               	goto	u6805
 11817  1351  0875               	movf	___fleq@ff2,w
 11818  1352  0671               	xorwf	___fleq@ff1,w
 11819  1353                     u6805:	
 11820  1353  1903               	skipnz
 11821  1354  2B57               	goto	l6467
 11822  1355  1003               	clrc
 11823  1356  0008               	return
 11824  1357                     l6467:	
 11825  1357  1403               	setc
 11826  1358  0008               	return
 11827  1359                     __end_of___fleq:	
 11828                           
 11829                           	psect	text30
 11830  08DF                     __ptext30:	
 11831 ;; *************** function ___fldiv *****************
 11832 ;; Defined at:
 11833 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 11834 ;; Parameters:    Size  Location     Type
 11835 ;;  a               4    6[BANK0 ] unsigned int 
 11836 ;;  b               4   10[BANK0 ] unsigned int 
 11837 ;; Auto vars:     Size  Location     Type
 11838 ;;  grs             4   26[BANK0 ] unsigned long 
 11839 ;;  rem             4   19[BANK0 ] unsigned long 
 11840 ;;  new_exp         2   24[BANK0 ] int 
 11841 ;;  aexp            1   31[BANK0 ] unsigned char 
 11842 ;;  bexp            1   30[BANK0 ] unsigned char 
 11843 ;;  sign            1   23[BANK0 ] unsigned char 
 11844 ;; Return value:  Size  Location     Type
 11845 ;;                  4    6[BANK0 ] unsigned char 
 11846 ;; Registers used:
 11847 ;;		wreg, status,2, status,0
 11848 ;; Tracked objects:
 11849 ;;		On entry : 0/0
 11850 ;;		On exit  : 0/0
 11851 ;;		Unchanged: 0/0
 11852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11853 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11854 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11855 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11856 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11857 ;;Total ram usage:       26 bytes
 11858 ;; Hardware stack levels used:    1
 11859 ;; Hardware stack levels required when called:    4
 11860 ;; This function calls:
 11861 ;;		Nothing
 11862 ;; This function is called by:
 11863 ;;		_readPressureSensor
 11864 ;;		_efgtoa
 11865 ;; This function uses a non-reentrant model
 11866 ;;
 11867                           
 11868                           
 11869                           ;psect for function ___fldiv
 11870  08DF                     ___fldiv:	
 11871                           
 11872                           ;incstack = 0
 11873                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 11874  08DF  0020               	movlb	0	; select bank0
 11875  08E0  082D               	movf	___fldiv@b+3,w
 11876  08E1  3980               	andlw	128
 11877  08E2  00AE               	movwf	??___fldiv
 11878  08E3  082E               	movf	??___fldiv,w
 11879  08E4  00B7               	movwf	___fldiv@sign
 11880  08E5  352D               	lslf	___fldiv@b+3,w
 11881  08E6  00AE               	movwf	??___fldiv
 11882  08E7  082E               	movf	??___fldiv,w
 11883  08E8  00BE               	movwf	___fldiv@bexp
 11884  08E9  1BAC               	btfsc	___fldiv@b+2,7
 11885  08EA  143E               	bsf	___fldiv@bexp,0
 11886  08EB  083E               	movf	___fldiv@bexp,w
 11887  08EC  1903               	btfsc	3,2
 11888  08ED  28FC               	goto	l4803
 11889  08EE  0A3E               	incf	___fldiv@bexp,w
 11890  08EF  1D03               	btfss	3,2
 11891  08F0  28F9               	goto	l4799
 11892  08F1  3000               	movlw	0
 11893  08F2  00AD               	movwf	___fldiv@b+3
 11894  08F3  3000               	movlw	0
 11895  08F4  00AC               	movwf	___fldiv@b+2
 11896  08F5  3000               	movlw	0
 11897  08F6  00AB               	movwf	___fldiv@b+1
 11898  08F7  3000               	movlw	0
 11899  08F8  00AA               	movwf	___fldiv@b
 11900  08F9                     l4799:	
 11901  08F9  17AC               	bsf	___fldiv@b+2,7
 11902  08FA  01AD               	clrf	___fldiv@b+3
 11903  08FB  2904               	goto	l4805
 11904  08FC                     l4803:	
 11905  08FC  3000               	movlw	0
 11906  08FD  00AD               	movwf	___fldiv@b+3
 11907  08FE  3000               	movlw	0
 11908  08FF  00AC               	movwf	___fldiv@b+2
 11909  0900  3000               	movlw	0
 11910  0901  00AB               	movwf	___fldiv@b+1
 11911  0902  3000               	movlw	0
 11912  0903  00AA               	movwf	___fldiv@b
 11913  0904                     l4805:	
 11914  0904  0829               	movf	___fldiv@a+3,w
 11915  0905  3980               	andlw	128
 11916  0906  00AE               	movwf	??___fldiv
 11917  0907  082E               	movf	??___fldiv,w
 11918  0908  06B7               	xorwf	___fldiv@sign,f
 11919  0909  3529               	lslf	___fldiv@a+3,w
 11920  090A  00AE               	movwf	??___fldiv
 11921  090B  082E               	movf	??___fldiv,w
 11922  090C  00BF               	movwf	___fldiv@aexp
 11923  090D  1BA8               	btfsc	___fldiv@a+2,7
 11924  090E  143F               	bsf	___fldiv@aexp,0
 11925  090F  083F               	movf	___fldiv@aexp,w
 11926  0910  1903               	btfsc	3,2
 11927  0911  2920               	goto	l4823
 11928  0912  0A3F               	incf	___fldiv@aexp,w
 11929  0913  1D03               	btfss	3,2
 11930  0914  291D               	goto	l4819
 11931  0915  3000               	movlw	0
 11932  0916  00A9               	movwf	___fldiv@a+3
 11933  0917  3000               	movlw	0
 11934  0918  00A8               	movwf	___fldiv@a+2
 11935  0919  3000               	movlw	0
 11936  091A  00A7               	movwf	___fldiv@a+1
 11937  091B  3000               	movlw	0
 11938  091C  00A6               	movwf	___fldiv@a
 11939  091D                     l4819:	
 11940  091D  17A8               	bsf	___fldiv@a+2,7
 11941  091E  01A9               	clrf	___fldiv@a+3
 11942  091F  2928               	goto	l1511
 11943  0920                     l4823:	
 11944  0920  3000               	movlw	0
 11945  0921  00A9               	movwf	___fldiv@a+3
 11946  0922  3000               	movlw	0
 11947  0923  00A8               	movwf	___fldiv@a+2
 11948  0924  3000               	movlw	0
 11949  0925  00A7               	movwf	___fldiv@a+1
 11950  0926  3000               	movlw	0
 11951  0927  00A6               	movwf	___fldiv@a
 11952  0928                     l1511:	
 11953  0928  0829               	movf	___fldiv@a+3,w
 11954  0929  0428               	iorwf	___fldiv@a+2,w
 11955  092A  0427               	iorwf	___fldiv@a+1,w
 11956  092B  0426               	iorwf	___fldiv@a,w
 11957  092C  1D03               	skipz
 11958  092D  2947               	goto	l4833
 11959  092E  3000               	movlw	0
 11960  092F  00AD               	movwf	___fldiv@b+3
 11961  0930  3000               	movlw	0
 11962  0931  00AC               	movwf	___fldiv@b+2
 11963  0932  3000               	movlw	0
 11964  0933  00AB               	movwf	___fldiv@b+1
 11965  0934  3000               	movlw	0
 11966  0935  00AA               	movwf	___fldiv@b
 11967  0936  3080               	movlw	128
 11968  0937  04AC               	iorwf	___fldiv@b+2,f
 11969  0938  307F               	movlw	127
 11970  0939  04AD               	iorwf	___fldiv@b+3,f
 11971  093A                     L12:	
 11972  093A  0837               	movf	___fldiv@sign,w
 11973  093B  00AE               	movwf	??___fldiv
 11974  093C  082E               	movf	??___fldiv,w
 11975  093D  04AD               	iorwf	___fldiv@b+3,f
 11976  093E  082D               	movf	___fldiv@b+3,w
 11977  093F  00A9               	movwf	?___fldiv+3
 11978  0940  082C               	movf	___fldiv@b+2,w
 11979  0941  00A8               	movwf	?___fldiv+2
 11980  0942  082B               	movf	___fldiv@b+1,w
 11981  0943  00A7               	movwf	?___fldiv+1
 11982  0944  082A               	movf	___fldiv@b,w
 11983  0945  00A6               	movwf	?___fldiv
 11984  0946  0008               	return
 11985  0947                     l4833:	
 11986  0947  083E               	movf	___fldiv@bexp,w
 11987  0948  1D03               	btfss	3,2
 11988  0949  2953               	goto	l4839
 11989  094A  3000               	movlw	0
 11990  094B  00A9               	movwf	?___fldiv+3
 11991  094C  3000               	movlw	0
 11992  094D  00A8               	movwf	?___fldiv+2
 11993  094E  3000               	movlw	0
 11994  094F  00A7               	movwf	?___fldiv+1
 11995  0950  3000               	movlw	0
 11996  0951  00A6               	movwf	?___fldiv
 11997  0952  0008               	return
 11998  0953                     l4839:	
 11999  0953  083E               	movf	___fldiv@bexp,w
 12000  0954  00AE               	movwf	??___fldiv
 12001  0955  01AF               	clrf	??___fldiv+1
 12002  0956  082F               	movf	??___fldiv+1,w
 12003  0957  00B1               	movwf	??___fldiv+3
 12004  0958  083F               	movf	___fldiv@aexp,w
 12005  0959  022E               	subwf	??___fldiv,w
 12006  095A  00B0               	movwf	??___fldiv+2
 12007  095B  1C03               	skipc
 12008  095C  03B1               	decf	??___fldiv+3,f
 12009  095D  0830               	movf	??___fldiv+2,w
 12010  095E  3E7F               	addlw	127
 12011  095F  00B8               	movwf	___fldiv@new_exp
 12012  0960  3000               	movlw	0
 12013  0961  3D31               	addwfc	??___fldiv+3,w
 12014  0962  00B9               	movwf	___fldiv@new_exp+1
 12015  0963  082D               	movf	___fldiv@b+3,w
 12016  0964  00B6               	movwf	___fldiv@rem+3
 12017  0965  082C               	movf	___fldiv@b+2,w
 12018  0966  00B5               	movwf	___fldiv@rem+2
 12019  0967  082B               	movf	___fldiv@b+1,w
 12020  0968  00B4               	movwf	___fldiv@rem+1
 12021  0969  082A               	movf	___fldiv@b,w
 12022  096A  00B3               	movwf	___fldiv@rem
 12023  096B  3000               	movlw	0
 12024  096C  00AD               	movwf	___fldiv@b+3
 12025  096D  3000               	movlw	0
 12026  096E  00AC               	movwf	___fldiv@b+2
 12027  096F  3000               	movlw	0
 12028  0970  00AB               	movwf	___fldiv@b+1
 12029  0971  3000               	movlw	0
 12030  0972  00AA               	movwf	___fldiv@b
 12031  0973  3000               	movlw	0
 12032  0974  00BD               	movwf	___fldiv@grs+3
 12033  0975  3000               	movlw	0
 12034  0976  00BC               	movwf	___fldiv@grs+2
 12035  0977  3000               	movlw	0
 12036  0978  00BB               	movwf	___fldiv@grs+1
 12037  0979  3000               	movlw	0
 12038  097A  00BA               	movwf	___fldiv@grs
 12039  097B  01BF               	clrf	___fldiv@aexp
 12040  097C                     l4867:	
 12041  097C  301A               	movlw	26
 12042  097D  023F               	subwf	___fldiv@aexp,w
 12043  097E  1803               	btfsc	3,0
 12044  097F  29B8               	goto	l4869
 12045  0980  083F               	movf	___fldiv@aexp,w
 12046  0981  1903               	btfsc	3,2
 12047  0982  299A               	goto	l4859
 12048  0983  3001               	movlw	1
 12049  0984                     u4535:	
 12050  0984  35B3               	lslf	___fldiv@rem,f
 12051  0985  0DB4               	rlf	___fldiv@rem+1,f
 12052  0986  0DB5               	rlf	___fldiv@rem+2,f
 12053  0987  0DB6               	rlf	___fldiv@rem+3,f
 12054  0988  0B89               	decfsz	9,f
 12055  0989  2984               	goto	u4535
 12056  098A  3001               	movlw	1
 12057  098B                     u4545:	
 12058  098B  35AA               	lslf	___fldiv@b,f
 12059  098C  0DAB               	rlf	___fldiv@b+1,f
 12060  098D  0DAC               	rlf	___fldiv@b+2,f
 12061  098E  0DAD               	rlf	___fldiv@b+3,f
 12062  098F  0B89               	decfsz	9,f
 12063  0990  298B               	goto	u4545
 12064  0991  1BBD               	btfsc	___fldiv@grs+3,7
 12065  0992  142A               	bsf	___fldiv@b,0
 12066  0993  3001               	movlw	1
 12067  0994                     u4565:	
 12068  0994  35BA               	lslf	___fldiv@grs,f
 12069  0995  0DBB               	rlf	___fldiv@grs+1,f
 12070  0996  0DBC               	rlf	___fldiv@grs+2,f
 12071  0997  0DBD               	rlf	___fldiv@grs+3,f
 12072  0998  0B89               	decfsz	9,f
 12073  0999  2994               	goto	u4565
 12074  099A                     l4859:	
 12075  099A  0829               	movf	___fldiv@a+3,w
 12076  099B  0236               	subwf	___fldiv@rem+3,w
 12077  099C  1D03               	skipz
 12078  099D  29A8               	goto	u4575
 12079  099E  0828               	movf	___fldiv@a+2,w
 12080  099F  0235               	subwf	___fldiv@rem+2,w
 12081  09A0  1D03               	skipz
 12082  09A1  29A8               	goto	u4575
 12083  09A2  0827               	movf	___fldiv@a+1,w
 12084  09A3  0234               	subwf	___fldiv@rem+1,w
 12085  09A4  1D03               	skipz
 12086  09A5  29A8               	goto	u4575
 12087  09A6  0826               	movf	___fldiv@a,w
 12088  09A7  0233               	subwf	___fldiv@rem,w
 12089  09A8                     u4575:	
 12090  09A8  1C03               	skipc
 12091  09A9  29B3               	goto	l4865
 12092  09AA  173D               	bsf	___fldiv@grs+3,6
 12093  09AB  0826               	movf	___fldiv@a,w
 12094  09AC  02B3               	subwf	___fldiv@rem,f
 12095  09AD  0827               	movf	___fldiv@a+1,w
 12096  09AE  3BB4               	subwfb	___fldiv@rem+1,f
 12097  09AF  0828               	movf	___fldiv@a+2,w
 12098  09B0  3BB5               	subwfb	___fldiv@rem+2,f
 12099  09B1  0829               	movf	___fldiv@a+3,w
 12100  09B2  3BB6               	subwfb	___fldiv@rem+3,f
 12101  09B3                     l4865:	
 12102  09B3  3001               	movlw	1
 12103  09B4  00AE               	movwf	??___fldiv
 12104  09B5  082E               	movf	??___fldiv,w
 12105  09B6  07BF               	addwf	___fldiv@aexp,f
 12106  09B7  297C               	goto	l4867
 12107  09B8                     l4869:	
 12108  09B8  0836               	movf	___fldiv@rem+3,w
 12109  09B9  0435               	iorwf	___fldiv@rem+2,w
 12110  09BA  0434               	iorwf	___fldiv@rem+1,w
 12111  09BB  0433               	iorwf	___fldiv@rem,w
 12112  09BC  1D03               	btfss	3,2
 12113  09BD  143A               	bsf	___fldiv@grs,0
 12114  09BE                     l4883:	
 12115  09BE  1BAC               	btfsc	___fldiv@b+2,7
 12116  09BF  29D5               	goto	l4885
 12117  09C0  3001               	movlw	1
 12118  09C1                     u4605:	
 12119  09C1  35AA               	lslf	___fldiv@b,f
 12120  09C2  0DAB               	rlf	___fldiv@b+1,f
 12121  09C3  0DAC               	rlf	___fldiv@b+2,f
 12122  09C4  0DAD               	rlf	___fldiv@b+3,f
 12123  09C5  0B89               	decfsz	9,f
 12124  09C6  29C1               	goto	u4605
 12125  09C7  1BBD               	btfsc	___fldiv@grs+3,7
 12126  09C8  142A               	bsf	___fldiv@b,0
 12127  09C9  3001               	movlw	1
 12128  09CA                     u4625:	
 12129  09CA  35BA               	lslf	___fldiv@grs,f
 12130  09CB  0DBB               	rlf	___fldiv@grs+1,f
 12131  09CC  0DBC               	rlf	___fldiv@grs+2,f
 12132  09CD  0DBD               	rlf	___fldiv@grs+3,f
 12133  09CE  0B89               	decfsz	9,f
 12134  09CF  29CA               	goto	u4625
 12135  09D0  30FF               	movlw	255
 12136  09D1  07B8               	addwf	___fldiv@new_exp,f
 12137  09D2  30FF               	movlw	255
 12138  09D3  3DB9               	addwfc	___fldiv@new_exp+1,f
 12139  09D4  29BE               	goto	l4883
 12140  09D5                     l4885:	
 12141  09D5  01BF               	clrf	___fldiv@aexp
 12142  09D6  1FBD               	btfss	___fldiv@grs+3,7
 12143  09D7  29EE               	goto	l4895
 12144  09D8  30FF               	movlw	255
 12145  09D9  053A               	andwf	___fldiv@grs,w
 12146  09DA  00AE               	movwf	??___fldiv
 12147  09DB  30FF               	movlw	255
 12148  09DC  053B               	andwf	___fldiv@grs+1,w
 12149  09DD  00AF               	movwf	??___fldiv+1
 12150  09DE  30FF               	movlw	255
 12151  09DF  053C               	andwf	___fldiv@grs+2,w
 12152  09E0  00B0               	movwf	??___fldiv+2
 12153  09E1  307F               	movlw	127
 12154  09E2  053D               	andwf	___fldiv@grs+3,w
 12155  09E3  00B1               	movwf	??___fldiv+3
 12156  09E4  0831               	movf	??___fldiv+3,w
 12157  09E5  0430               	iorwf	??___fldiv+2,w
 12158  09E6  042F               	iorwf	??___fldiv+1,w
 12159  09E7  042E               	iorwf	??___fldiv,w
 12160  09E8  1903               	skipnz
 12161  09E9  182A               	btfsc	___fldiv@b,0
 12162  09EA  29EC               	goto	l4891
 12163  09EB  29EE               	goto	l4895
 12164  09EC                     l4891:	
 12165  09EC  01BF               	clrf	___fldiv@aexp
 12166  09ED  0ABF               	incf	___fldiv@aexp,f
 12167  09EE                     l4895:	
 12168  09EE  083F               	movf	___fldiv@aexp,w
 12169  09EF  1903               	btfsc	3,2
 12170  09F0  2A17               	goto	l4905
 12171  09F1  3001               	movlw	1
 12172  09F2  07AA               	addwf	___fldiv@b,f
 12173  09F3  3000               	movlw	0
 12174  09F4  3DAB               	addwfc	___fldiv@b+1,f
 12175  09F5  3000               	movlw	0
 12176  09F6  3DAC               	addwfc	___fldiv@b+2,f
 12177  09F7  3000               	movlw	0
 12178  09F8  3DAD               	addwfc	___fldiv@b+3,f
 12179  09F9  1C2D               	btfss	___fldiv@b+3,0
 12180  09FA  2A17               	goto	l4905
 12181  09FB  082A               	movf	___fldiv@b,w
 12182  09FC  00AE               	movwf	??___fldiv
 12183  09FD  082B               	movf	___fldiv@b+1,w
 12184  09FE  00AF               	movwf	??___fldiv+1
 12185  09FF  082C               	movf	___fldiv@b+2,w
 12186  0A00  00B0               	movwf	??___fldiv+2
 12187  0A01  082D               	movf	___fldiv@b+3,w
 12188  0A02  00B1               	movwf	??___fldiv+3
 12189  0A03  3001               	movlw	1
 12190  0A04  00B2               	movwf	??___fldiv+4
 12191  0A05                     u4695:	
 12192  0A05  37B1               	asrf	??___fldiv+3,f
 12193  0A06  0CB0               	rrf	??___fldiv+2,f
 12194  0A07  0CAF               	rrf	??___fldiv+1,f
 12195  0A08  0CAE               	rrf	??___fldiv,f
 12196  0A09  0BB2               	decfsz	??___fldiv+4,f
 12197  0A0A  2A05               	goto	u4695
 12198  0A0B  0831               	movf	??___fldiv+3,w
 12199  0A0C  00AD               	movwf	___fldiv@b+3
 12200  0A0D  0830               	movf	??___fldiv+2,w
 12201  0A0E  00AC               	movwf	___fldiv@b+2
 12202  0A0F  082F               	movf	??___fldiv+1,w
 12203  0A10  00AB               	movwf	___fldiv@b+1
 12204  0A11  082E               	movf	??___fldiv,w
 12205  0A12  00AA               	movwf	___fldiv@b
 12206  0A13  3001               	movlw	1
 12207  0A14  07B8               	addwf	___fldiv@new_exp,f
 12208  0A15  3000               	movlw	0
 12209  0A16  3DB9               	addwfc	___fldiv@new_exp+1,f
 12210  0A17                     l4905:	
 12211  0A17  0839               	movf	___fldiv@new_exp+1,w
 12212  0A18  3A80               	xorlw	128
 12213  0A19  00AE               	movwf	??___fldiv
 12214  0A1A  3080               	movlw	128
 12215  0A1B  022E               	subwf	??___fldiv,w
 12216  0A1C  1D03               	skipz
 12217  0A1D  2A20               	goto	u4705
 12218  0A1E  30FF               	movlw	255
 12219  0A1F  0238               	subwf	___fldiv@new_exp,w
 12220  0A20                     u4705:	
 12221  0A20  1C03               	skipc
 12222  0A21  2A2F               	goto	l1532
 12223  0A22  30FF               	movlw	255
 12224  0A23  0020               	movlb	0	; select bank0
 12225  0A24  00B8               	movwf	___fldiv@new_exp
 12226  0A25  3000               	movlw	0
 12227  0A26  00B9               	movwf	___fldiv@new_exp+1
 12228  0A27  3000               	movlw	0
 12229  0A28  00AD               	movwf	___fldiv@b+3
 12230  0A29  3000               	movlw	0
 12231  0A2A  00AC               	movwf	___fldiv@b+2
 12232  0A2B  3000               	movlw	0
 12233  0A2C  00AB               	movwf	___fldiv@b+1
 12234  0A2D  3000               	movlw	0
 12235  0A2E  00AA               	movwf	___fldiv@b
 12236  0A2F                     l1532:	
 12237  0A2F  0020               	movlb	0	; select bank0
 12238  0A30  0839               	movf	___fldiv@new_exp+1,w
 12239  0A31  3A80               	xorlw	128
 12240  0A32  00AE               	movwf	??___fldiv
 12241  0A33  3080               	movlw	128
 12242  0A34  022E               	subwf	??___fldiv,w
 12243  0A35  1D03               	skipz
 12244  0A36  2A39               	goto	u4715
 12245  0A37  3001               	movlw	1
 12246  0A38  0238               	subwf	___fldiv@new_exp,w
 12247  0A39                     u4715:	
 12248  0A39  1803               	skipnc
 12249  0A3A  2A47               	goto	l1533
 12250  0A3B  0020               	movlb	0	; select bank0
 12251  0A3C  01B8               	clrf	___fldiv@new_exp
 12252  0A3D  01B9               	clrf	___fldiv@new_exp+1
 12253  0A3E  3000               	movlw	0
 12254  0A3F  00AD               	movwf	___fldiv@b+3
 12255  0A40  3000               	movlw	0
 12256  0A41  00AC               	movwf	___fldiv@b+2
 12257  0A42  3000               	movlw	0
 12258  0A43  00AB               	movwf	___fldiv@b+1
 12259  0A44  3000               	movlw	0
 12260  0A45  00AA               	movwf	___fldiv@b
 12261  0A46  01B7               	clrf	___fldiv@sign
 12262  0A47                     l1533:	
 12263  0A47  0020               	movlb	0	; select bank0
 12264  0A48  0838               	movf	___fldiv@new_exp,w
 12265  0A49  00AE               	movwf	??___fldiv
 12266  0A4A  082E               	movf	??___fldiv,w
 12267  0A4B  00BE               	movwf	___fldiv@bexp
 12268  0A4C  1C3E               	btfss	___fldiv@bexp,0
 12269  0A4D  2A50               	goto	l4919
 12270  0A4E  17AC               	bsf	___fldiv@b+2,7
 12271  0A4F  2A54               	goto	l1535
 12272  0A50                     l4919:	
 12273  0A50  307F               	movlw	127
 12274  0A51  00AE               	movwf	??___fldiv
 12275  0A52  082E               	movf	??___fldiv,w
 12276  0A53  05AC               	andwf	___fldiv@b+2,f
 12277  0A54                     l1535:	
 12278  0A54  363E               	lsrf	___fldiv@bexp,w
 12279  0A55  00AE               	movwf	??___fldiv
 12280  0A56  082E               	movf	??___fldiv,w
 12281  0A57  00AD               	movwf	___fldiv@b+3
 12282  0A58  293A               	goto	L12
 12283  0A59                     __end_of___fldiv:	
 12284                           
 12285                           	psect	text31
 12286  1284                     __ptext31:	
 12287 ;; *************** function ___awmod *****************
 12288 ;; Defined at:
 12289 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
 12290 ;; Parameters:    Size  Location     Type
 12291 ;;  divisor         2    1[COMMON] int 
 12292 ;;  dividend        2    3[COMMON] int 
 12293 ;; Auto vars:     Size  Location     Type
 12294 ;;  sign            1    7[COMMON] unsigned char 
 12295 ;;  counter         1    6[COMMON] unsigned char 
 12296 ;; Return value:  Size  Location     Type
 12297 ;;                  2    1[COMMON] int 
 12298 ;; Registers used:
 12299 ;;		wreg, status,2, status,0
 12300 ;; Tracked objects:
 12301 ;;		On entry : 0/0
 12302 ;;		On exit  : 0/0
 12303 ;;		Unchanged: 0/0
 12304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12305 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12306 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12307 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12308 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12309 ;;Total ram usage:        7 bytes
 12310 ;; Hardware stack levels used:    1
 12311 ;; Hardware stack levels required when called:    4
 12312 ;; This function calls:
 12313 ;;		Nothing
 12314 ;; This function is called by:
 12315 ;;		_efgtoa
 12316 ;; This function uses a non-reentrant model
 12317 ;;
 12318                           
 12319                           
 12320                           ;psect for function ___awmod
 12321  1284                     ___awmod:	
 12322                           
 12323                           ;incstack = 0
 12324                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 12325  1284  01F7               	clrf	___awmod@sign
 12326  1285  1FF4               	btfss	___awmod@dividend+1,7
 12327  1286  2A8E               	goto	l4673
 12328  1287  09F3               	comf	___awmod@dividend,f
 12329  1288  09F4               	comf	___awmod@dividend+1,f
 12330  1289  0AF3               	incf	___awmod@dividend,f
 12331  128A  1903               	skipnz
 12332  128B  0AF4               	incf	___awmod@dividend+1,f
 12333  128C  01F7               	clrf	___awmod@sign
 12334  128D  0AF7               	incf	___awmod@sign,f
 12335  128E                     l4673:	
 12336  128E  1FF2               	btfss	___awmod@divisor+1,7
 12337  128F  2A95               	goto	l4677
 12338  1290  09F1               	comf	___awmod@divisor,f
 12339  1291  09F2               	comf	___awmod@divisor+1,f
 12340  1292  0AF1               	incf	___awmod@divisor,f
 12341  1293  1903               	skipnz
 12342  1294  0AF2               	incf	___awmod@divisor+1,f
 12343  1295                     l4677:	
 12344  1295  0871               	movf	___awmod@divisor,w
 12345  1296  0472               	iorwf	___awmod@divisor+1,w
 12346  1297  1903               	btfsc	3,2
 12347  1298  2ABC               	goto	l4695
 12348  1299  01F6               	clrf	___awmod@counter
 12349  129A  0AF6               	incf	___awmod@counter,f
 12350  129B                     l4685:	
 12351  129B  1BF2               	btfsc	___awmod@divisor+1,7
 12352  129C  2AA7               	goto	l4687
 12353  129D  3001               	movlw	1
 12354  129E                     u4195:	
 12355  129E  35F1               	lslf	___awmod@divisor,f
 12356  129F  0DF2               	rlf	___awmod@divisor+1,f
 12357  12A0  0B89               	decfsz	9,f
 12358  12A1  2A9E               	goto	u4195
 12359  12A2  3001               	movlw	1
 12360  12A3  00F5               	movwf	??___awmod
 12361  12A4  0875               	movf	??___awmod,w
 12362  12A5  07F6               	addwf	___awmod@counter,f
 12363  12A6  2A9B               	goto	l4685
 12364  12A7                     l4687:	
 12365  12A7  0872               	movf	___awmod@divisor+1,w
 12366  12A8  0274               	subwf	___awmod@dividend+1,w
 12367  12A9  1D03               	skipz
 12368  12AA  2AAD               	goto	u4215
 12369  12AB  0871               	movf	___awmod@divisor,w
 12370  12AC  0273               	subwf	___awmod@dividend,w
 12371  12AD                     u4215:	
 12372  12AD  1C03               	skipc
 12373  12AE  2AB3               	goto	l4691
 12374  12AF  0871               	movf	___awmod@divisor,w
 12375  12B0  02F3               	subwf	___awmod@dividend,f
 12376  12B1  0872               	movf	___awmod@divisor+1,w
 12377  12B2  3BF4               	subwfb	___awmod@dividend+1,f
 12378  12B3                     l4691:	
 12379  12B3  3001               	movlw	1
 12380  12B4                     u4225:	
 12381  12B4  36F2               	lsrf	___awmod@divisor+1,f
 12382  12B5  0CF1               	rrf	___awmod@divisor,f
 12383  12B6  0B89               	decfsz	9,f
 12384  12B7  2AB4               	goto	u4225
 12385  12B8  3001               	movlw	1
 12386  12B9  02F6               	subwf	___awmod@counter,f
 12387  12BA  1D03               	btfss	3,2
 12388  12BB  2AA7               	goto	l4687
 12389  12BC                     l4695:	
 12390  12BC  0877               	movf	___awmod@sign,w
 12391  12BD  1903               	btfsc	3,2
 12392  12BE  2AC4               	goto	l4699
 12393  12BF  09F3               	comf	___awmod@dividend,f
 12394  12C0  09F4               	comf	___awmod@dividend+1,f
 12395  12C1  0AF3               	incf	___awmod@dividend,f
 12396  12C2  1903               	skipnz
 12397  12C3  0AF4               	incf	___awmod@dividend+1,f
 12398  12C4                     l4699:	
 12399  12C4  0874               	movf	___awmod@dividend+1,w
 12400  12C5  00F2               	movwf	?___awmod+1
 12401  12C6  0873               	movf	___awmod@dividend,w
 12402  12C7  00F1               	movwf	?___awmod
 12403  12C8  0008               	return
 12404  12C9                     __end_of___awmod:	
 12405                           
 12406                           	psect	text32
 12407  13F7                     __ptext32:	
 12408 ;; *************** function ___awdiv *****************
 12409 ;; Defined at:
 12410 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 12411 ;; Parameters:    Size  Location     Type
 12412 ;;  divisor         2    1[COMMON] int 
 12413 ;;  dividend        2    3[COMMON] int 
 12414 ;; Auto vars:     Size  Location     Type
 12415 ;;  quotient        2    8[COMMON] int 
 12416 ;;  sign            1    7[COMMON] unsigned char 
 12417 ;;  counter         1    6[COMMON] unsigned char 
 12418 ;; Return value:  Size  Location     Type
 12419 ;;                  2    1[COMMON] int 
 12420 ;; Registers used:
 12421 ;;		wreg, status,2, status,0
 12422 ;; Tracked objects:
 12423 ;;		On entry : 0/0
 12424 ;;		On exit  : 0/0
 12425 ;;		Unchanged: 0/0
 12426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12427 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12428 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12429 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12430 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12431 ;;Total ram usage:        9 bytes
 12432 ;; Hardware stack levels used:    1
 12433 ;; Hardware stack levels required when called:    4
 12434 ;; This function calls:
 12435 ;;		Nothing
 12436 ;; This function is called by:
 12437 ;;		_efgtoa
 12438 ;; This function uses a non-reentrant model
 12439 ;;
 12440                           
 12441                           
 12442                           ;psect for function ___awdiv
 12443  13F7                     ___awdiv:	
 12444                           
 12445                           ;incstack = 0
 12446                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 12447  13F7  01F7               	clrf	___awdiv@sign
 12448  13F8  1FF2               	btfss	___awdiv@divisor+1,7
 12449  13F9  2C01               	goto	l4629
 12450  13FA  09F1               	comf	___awdiv@divisor,f
 12451  13FB  09F2               	comf	___awdiv@divisor+1,f
 12452  13FC  0AF1               	incf	___awdiv@divisor,f
 12453  13FD  1903               	skipnz
 12454  13FE  0AF2               	incf	___awdiv@divisor+1,f
 12455  13FF  01F7               	clrf	___awdiv@sign
 12456  1400  0AF7               	incf	___awdiv@sign,f
 12457  1401                     l4629:	
 12458  1401  1FF4               	btfss	___awdiv@dividend+1,7
 12459  1402  2C0C               	goto	l4635
 12460  1403  09F3               	comf	___awdiv@dividend,f
 12461  1404  09F4               	comf	___awdiv@dividend+1,f
 12462  1405  0AF3               	incf	___awdiv@dividend,f
 12463  1406  1903               	skipnz
 12464  1407  0AF4               	incf	___awdiv@dividend+1,f
 12465  1408  3001               	movlw	1
 12466  1409  00F5               	movwf	??___awdiv
 12467  140A  0875               	movf	??___awdiv,w
 12468  140B  06F7               	xorwf	___awdiv@sign,f
 12469  140C                     l4635:	
 12470  140C  01F8               	clrf	___awdiv@quotient
 12471  140D  01F9               	clrf	___awdiv@quotient+1
 12472  140E  0871               	movf	___awdiv@divisor,w
 12473  140F  0472               	iorwf	___awdiv@divisor+1,w
 12474  1410  1903               	btfsc	3,2
 12475  1411  2C3B               	goto	l4657
 12476  1412  01F6               	clrf	___awdiv@counter
 12477  1413  0AF6               	incf	___awdiv@counter,f
 12478  1414                     l4645:	
 12479  1414  1BF2               	btfsc	___awdiv@divisor+1,7
 12480  1415  2C20               	goto	l4647
 12481  1416  3001               	movlw	1
 12482  1417                     u4095:	
 12483  1417  35F1               	lslf	___awdiv@divisor,f
 12484  1418  0DF2               	rlf	___awdiv@divisor+1,f
 12485  1419  0B89               	decfsz	9,f
 12486  141A  2C17               	goto	u4095
 12487  141B  3001               	movlw	1
 12488  141C  00F5               	movwf	??___awdiv
 12489  141D  0875               	movf	??___awdiv,w
 12490  141E  07F6               	addwf	___awdiv@counter,f
 12491  141F  2C14               	goto	l4645
 12492  1420                     l4647:	
 12493  1420  3001               	movlw	1
 12494  1421                     u4115:	
 12495  1421  35F8               	lslf	___awdiv@quotient,f
 12496  1422  0DF9               	rlf	___awdiv@quotient+1,f
 12497  1423  0B89               	decfsz	9,f
 12498  1424  2C21               	goto	u4115
 12499  1425  0872               	movf	___awdiv@divisor+1,w
 12500  1426  0274               	subwf	___awdiv@dividend+1,w
 12501  1427  1D03               	skipz
 12502  1428  2C2B               	goto	u4125
 12503  1429  0871               	movf	___awdiv@divisor,w
 12504  142A  0273               	subwf	___awdiv@dividend,w
 12505  142B                     u4125:	
 12506  142B  1C03               	skipc
 12507  142C  2C32               	goto	l4653
 12508  142D  0871               	movf	___awdiv@divisor,w
 12509  142E  02F3               	subwf	___awdiv@dividend,f
 12510  142F  0872               	movf	___awdiv@divisor+1,w
 12511  1430  3BF4               	subwfb	___awdiv@dividend+1,f
 12512  1431  1478               	bsf	___awdiv@quotient,0
 12513  1432                     l4653:	
 12514  1432  3001               	movlw	1
 12515  1433                     u4135:	
 12516  1433  36F2               	lsrf	___awdiv@divisor+1,f
 12517  1434  0CF1               	rrf	___awdiv@divisor,f
 12518  1435  0B89               	decfsz	9,f
 12519  1436  2C33               	goto	u4135
 12520  1437  3001               	movlw	1
 12521  1438  02F6               	subwf	___awdiv@counter,f
 12522  1439  1D03               	btfss	3,2
 12523  143A  2C20               	goto	l4647
 12524  143B                     l4657:	
 12525  143B  0877               	movf	___awdiv@sign,w
 12526  143C  1903               	btfsc	3,2
 12527  143D  2C43               	goto	l4661
 12528  143E  09F8               	comf	___awdiv@quotient,f
 12529  143F  09F9               	comf	___awdiv@quotient+1,f
 12530  1440  0AF8               	incf	___awdiv@quotient,f
 12531  1441  1903               	skipnz
 12532  1442  0AF9               	incf	___awdiv@quotient+1,f
 12533  1443                     l4661:	
 12534  1443  0879               	movf	___awdiv@quotient+1,w
 12535  1444  00F2               	movwf	?___awdiv+1
 12536  1445  0878               	movf	___awdiv@quotient,w
 12537  1446  00F1               	movwf	?___awdiv
 12538  1447  0008               	return
 12539  1448                     __end_of___awdiv:	
 12540                           
 12541                           	psect	text33
 12542  15F3                     __ptext33:	
 12543 ;; *************** function ___xxtofl *****************
 12544 ;; Defined at:
 12545 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 12546 ;; Parameters:    Size  Location     Type
 12547 ;;  sign            1    wreg     unsigned char 
 12548 ;;  val             4    1[COMMON] long 
 12549 ;; Auto vars:     Size  Location     Type
 12550 ;;  sign            1    0[BANK0 ] unsigned char 
 12551 ;;  arg             4    2[BANK0 ] unsigned long 
 12552 ;;  exp             1    1[BANK0 ] unsigned char 
 12553 ;; Return value:  Size  Location     Type
 12554 ;;                  4    1[COMMON] unsigned char 
 12555 ;; Registers used:
 12556 ;;		wreg, status,2, status,0
 12557 ;; Tracked objects:
 12558 ;;		On entry : 0/0
 12559 ;;		On exit  : 0/0
 12560 ;;		Unchanged: 0/0
 12561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12562 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12563 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12564 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12565 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12566 ;;Total ram usage:       14 bytes
 12567 ;; Hardware stack levels used:    1
 12568 ;; Hardware stack levels required when called:    4
 12569 ;; This function calls:
 12570 ;;		Nothing
 12571 ;; This function is called by:
 12572 ;;		_readPressureSensor
 12573 ;; This function uses a non-reentrant model
 12574 ;;
 12575                           
 12576                           
 12577                           ;psect for function ___xxtofl
 12578  15F3                     ___xxtofl:	
 12579                           
 12580                           ;incstack = 0
 12581                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 12582                           ;___xxtofl@sign stored from wreg
 12583  15F3  0020               	movlb	0	; select bank0
 12584  15F4  00A0               	movwf	___xxtofl@sign
 12585  15F5  0820               	movf	___xxtofl@sign,w
 12586  15F6  1D03               	btfss	3,2
 12587  15F7  1FF4               	btfss	___xxtofl@val+3,7
 12588  15F8  2E09               	goto	l5731
 12589  15F9  0971               	comf	___xxtofl@val,w
 12590  15FA  00A2               	movwf	___xxtofl@arg
 12591  15FB  0972               	comf	___xxtofl@val+1,w
 12592  15FC  00A3               	movwf	___xxtofl@arg+1
 12593  15FD  0973               	comf	___xxtofl@val+2,w
 12594  15FE  00A4               	movwf	___xxtofl@arg+2
 12595  15FF  0974               	comf	___xxtofl@val+3,w
 12596  1600  00A5               	movwf	___xxtofl@arg+3
 12597  1601  0AA2               	incf	___xxtofl@arg,f
 12598  1602  1903               	skipnz
 12599  1603  0AA3               	incf	___xxtofl@arg+1,f
 12600  1604  1903               	skipnz
 12601  1605  0AA4               	incf	___xxtofl@arg+2,f
 12602  1606  1903               	skipnz
 12603  1607  0AA5               	incf	___xxtofl@arg+3,f
 12604  1608  2E11               	goto	l1589
 12605  1609                     l5731:	
 12606  1609  0874               	movf	___xxtofl@val+3,w
 12607  160A  00A5               	movwf	___xxtofl@arg+3
 12608  160B  0873               	movf	___xxtofl@val+2,w
 12609  160C  00A4               	movwf	___xxtofl@arg+2
 12610  160D  0872               	movf	___xxtofl@val+1,w
 12611  160E  00A3               	movwf	___xxtofl@arg+1
 12612  160F  0871               	movf	___xxtofl@val,w
 12613  1610  00A2               	movwf	___xxtofl@arg
 12614  1611                     l1589:	
 12615  1611  0874               	movf	___xxtofl@val+3,w
 12616  1612  0473               	iorwf	___xxtofl@val+2,w
 12617  1613  0472               	iorwf	___xxtofl@val+1,w
 12618  1614  0471               	iorwf	___xxtofl@val,w
 12619  1615  1D03               	skipz
 12620  1616  2E20               	goto	l5737
 12621  1617  3000               	movlw	0
 12622  1618  00F4               	movwf	?___xxtofl+3
 12623  1619  3000               	movlw	0
 12624  161A  00F3               	movwf	?___xxtofl+2
 12625  161B  3000               	movlw	0
 12626  161C  00F2               	movwf	?___xxtofl+1
 12627  161D  3000               	movlw	0
 12628  161E  00F1               	movwf	?___xxtofl
 12629  161F  0008               	return
 12630  1620                     l5737:	
 12631  1620  3096               	movlw	150
 12632  1621  00F5               	movwf	??___xxtofl
 12633  1622  0875               	movf	??___xxtofl,w
 12634  1623  00A1               	movwf	___xxtofl@exp
 12635  1624                     l5741:	
 12636  1624  30FE               	movlw	254
 12637  1625  0525               	andwf	___xxtofl@arg+3,w
 12638  1626  1903               	btfsc	3,2
 12639  1627  2E47               	goto	l1595
 12640  1628  3001               	movlw	1
 12641  1629  00F5               	movwf	??___xxtofl
 12642  162A  0875               	movf	??___xxtofl,w
 12643  162B  07A1               	addwf	___xxtofl@exp,f
 12644  162C  3001               	movlw	1
 12645  162D                     u5785:	
 12646  162D  36A5               	lsrf	___xxtofl@arg+3,f
 12647  162E  0CA4               	rrf	___xxtofl@arg+2,f
 12648  162F  0CA3               	rrf	___xxtofl@arg+1,f
 12649  1630  0CA2               	rrf	___xxtofl@arg,f
 12650  1631  0B89               	decfsz	9,f
 12651  1632  2E2D               	goto	u5785
 12652  1633  2E24               	goto	l5741
 12653  1634                     l5743:	
 12654  1634  3001               	movlw	1
 12655  1635  00F5               	movwf	??___xxtofl
 12656  1636  0875               	movf	??___xxtofl,w
 12657  1637  07A1               	addwf	___xxtofl@exp,f
 12658  1638  3001               	movlw	1
 12659  1639  07A2               	addwf	___xxtofl@arg,f
 12660  163A  3000               	movlw	0
 12661  163B  3DA3               	addwfc	___xxtofl@arg+1,f
 12662  163C  3000               	movlw	0
 12663  163D  3DA4               	addwfc	___xxtofl@arg+2,f
 12664  163E  3000               	movlw	0
 12665  163F  3DA5               	addwfc	___xxtofl@arg+3,f
 12666  1640  3001               	movlw	1
 12667  1641                     u5805:	
 12668  1641  36A5               	lsrf	___xxtofl@arg+3,f
 12669  1642  0CA4               	rrf	___xxtofl@arg+2,f
 12670  1643  0CA3               	rrf	___xxtofl@arg+1,f
 12671  1644  0CA2               	rrf	___xxtofl@arg,f
 12672  1645  0B89               	decfsz	9,f
 12673  1646  2E41               	goto	u5805
 12674  1647                     l1595:	
 12675  1647  30FF               	movlw	255
 12676  1648  0525               	andwf	___xxtofl@arg+3,w
 12677  1649  1903               	btfsc	3,2
 12678  164A  2E59               	goto	l5751
 12679  164B  2E34               	goto	l5743
 12680  164C                     l5753:	
 12681  164C  3002               	movlw	2
 12682  164D  0221               	subwf	___xxtofl@exp,w
 12683  164E  1C03               	btfss	3,0
 12684  164F  2E5B               	goto	l1602
 12685  1650  3001               	movlw	1
 12686  1651  02A1               	subwf	___xxtofl@exp,f
 12687  1652  3001               	movlw	1
 12688  1653                     u5825:	
 12689  1653  35A2               	lslf	___xxtofl@arg,f
 12690  1654  0DA3               	rlf	___xxtofl@arg+1,f
 12691  1655  0DA4               	rlf	___xxtofl@arg+2,f
 12692  1656  0DA5               	rlf	___xxtofl@arg+3,f
 12693  1657  0B89               	decfsz	9,f
 12694  1658  2E53               	goto	u5825
 12695  1659                     l5751:	
 12696  1659  1FA4               	btfss	___xxtofl@arg+2,7
 12697  165A  2E4C               	goto	l5753
 12698  165B                     l1602:	
 12699  165B  1821               	btfsc	___xxtofl@exp,0
 12700  165C  2E65               	goto	l1603
 12701  165D  30FF               	movlw	255
 12702  165E  05A2               	andwf	___xxtofl@arg,f
 12703  165F  30FF               	movlw	255
 12704  1660  05A3               	andwf	___xxtofl@arg+1,f
 12705  1661  307F               	movlw	127
 12706  1662  05A4               	andwf	___xxtofl@arg+2,f
 12707  1663  30FF               	movlw	255
 12708  1664  05A5               	andwf	___xxtofl@arg+3,f
 12709  1665                     l1603:	
 12710  1665  1003               	clrc
 12711  1666  0CA1               	rrf	___xxtofl@exp,f
 12712  1667  0821               	movf	___xxtofl@exp,w
 12713  1668  00F5               	movwf	??___xxtofl
 12714  1669  01F6               	clrf	??___xxtofl+1
 12715  166A  01F7               	clrf	??___xxtofl+2
 12716  166B  01F8               	clrf	??___xxtofl+3
 12717  166C  3018               	movlw	24
 12718  166D                     u5865:	
 12719  166D  35F5               	lslf	??___xxtofl,f
 12720  166E  0DF6               	rlf	??___xxtofl+1,f
 12721  166F  0DF7               	rlf	??___xxtofl+2,f
 12722  1670  0DF8               	rlf	??___xxtofl+3,f
 12723  1671  0B89               	decfsz	9,f
 12724  1672  2E6D               	goto	u5865
 12725  1673  0875               	movf	??___xxtofl,w
 12726  1674  04A2               	iorwf	___xxtofl@arg,f
 12727  1675  0876               	movf	??___xxtofl+1,w
 12728  1676  04A3               	iorwf	___xxtofl@arg+1,f
 12729  1677  0877               	movf	??___xxtofl+2,w
 12730  1678  04A4               	iorwf	___xxtofl@arg+2,f
 12731  1679  0878               	movf	??___xxtofl+3,w
 12732  167A  04A5               	iorwf	___xxtofl@arg+3,f
 12733  167B  0820               	movf	___xxtofl@sign,w
 12734  167C  1D03               	btfss	3,2
 12735  167D  1FF4               	btfss	___xxtofl@val+3,7
 12736  167E  2E80               	goto	l5765
 12737  167F  17A5               	bsf	___xxtofl@arg+3,7
 12738  1680                     l5765:	
 12739  1680  0825               	movf	___xxtofl@arg+3,w
 12740  1681  00F4               	movwf	?___xxtofl+3
 12741  1682  0824               	movf	___xxtofl@arg+2,w
 12742  1683  00F3               	movwf	?___xxtofl+2
 12743  1684  0823               	movf	___xxtofl@arg+1,w
 12744  1685  00F2               	movwf	?___xxtofl+1
 12745  1686  0822               	movf	___xxtofl@arg,w
 12746  1687  00F1               	movwf	?___xxtofl
 12747  1688  0008               	return
 12748  1689                     __end_of___xxtofl:	
 12749                           
 12750                           	psect	text34
 12751  112F                     __ptext34:	
 12752 ;; *************** function _I2C1_Read1ByteRegister *****************
 12753 ;; Defined at:
 12754 ;;		line 63 in file "mcc_generated_files/examples/i2c1_master_example.c"
 12755 ;; Parameters:    Size  Location     Type
 12756 ;;  address         1    wreg     unsigned char 
 12757 ;;  reg             1    8[BANK0 ] unsigned char 
 12758 ;; Auto vars:     Size  Location     Type
 12759 ;;  address         1   10[BANK0 ] unsigned char 
 12760 ;;  returnValue     1   11[BANK0 ] unsigned char 
 12761 ;; Return value:  Size  Location     Type
 12762 ;;                  1    wreg      unsigned char 
 12763 ;; Registers used:
 12764 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12765 ;; Tracked objects:
 12766 ;;		On entry : 0/0
 12767 ;;		On exit  : 0/0
 12768 ;;		Unchanged: 0/0
 12769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12770 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12771 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12772 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12773 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12774 ;;Total ram usage:        4 bytes
 12775 ;; Hardware stack levels used:    1
 12776 ;; Hardware stack levels required when called:   12
 12777 ;; This function calls:
 12778 ;;		_I2C1_Close
 12779 ;;		_I2C1_MasterWrite
 12780 ;;		_I2C1_Open
 12781 ;;		_I2C1_SetAddressNackCallback
 12782 ;;		_I2C1_SetBuffer
 12783 ;;		_I2C1_SetDataCompleteCallback
 12784 ;; This function is called by:
 12785 ;;		_readPressureSensor
 12786 ;; This function uses a non-reentrant model
 12787 ;;
 12788                           
 12789                           
 12790                           ;psect for function _I2C1_Read1ByteRegister
 12791  112F                     _I2C1_Read1ByteRegister:	
 12792                           
 12793                           ;incstack = 0
 12794                           ; Regs used in _I2C1_Read1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12795                           ;I2C1_Read1ByteRegister@address stored from wreg
 12796  112F  0020               	movlb	0	; select bank0
 12797  1130  00AA               	movwf	I2C1_Read1ByteRegister@address
 12798                           
 12799                           ;mcc_generated_files/examples/i2c1_master_example.c: 63: uint8_t I2C1_Read1ByteRegister(
      +                          i2c1_address_t address, uint8_t reg);mcc_generated_files/examples/i2c1_master_example.c:
      +                           64: {;mcc_generated_files/examples/i2c1_master_example.c: 65:     uint8_t returnValue =
      +                           0x00;
 12800  1131  01AB               	clrf	I2C1_Read1ByteRegister@returnValue
 12801  1132                     l6855:	
 12802                           ;mcc_generated_files/examples/i2c1_master_example.c: 67:     while(!I2C1_Open(address));
 12803                           
 12804  1132  0020               	movlb	0	; select bank0
 12805  1133  082A               	movf	I2C1_Read1ByteRegister@address,w
 12806  1134  3187  27C9  3191   	fcall	_I2C1_Open
 12807  1137  3A00               	xorlw	0
 12808  1138  1903               	skipnz
 12809  1139  2932               	goto	l6855
 12810                           
 12811                           ;mcc_generated_files/examples/i2c1_master_example.c: 68:     I2C1_SetDataCompleteCallbac
      +                          k(rd1RegCompleteHandler,&returnValue);
 12812  113A  308F               	movlw	low _rd1RegCompleteHandler
 12813  113B  00F6               	movwf	I2C1_SetDataCompleteCallback@cb
 12814  113C  301E               	movlw	high _rd1RegCompleteHandler
 12815  113D  00F7               	movwf	I2C1_SetDataCompleteCallback@cb+1
 12816  113E  302B               	movlw	(low (I2C1_Read1ByteRegister@returnValue| 0))& (0+255)
 12817  113F  0020               	movlb	0	; select bank0
 12818  1140  00A9               	movwf	??_I2C1_Read1ByteRegister
 12819  1141  0829               	movf	??_I2C1_Read1ByteRegister,w
 12820  1142  00F8               	movwf	I2C1_SetDataCompleteCallback@ptr
 12821  1143  319E  2659  3191   	fcall	_I2C1_SetDataCompleteCallback
 12822                           
 12823                           ;mcc_generated_files/examples/i2c1_master_example.c: 69:     I2C1_SetBuffer(&reg,1);
 12824  1146  3001               	movlw	1
 12825  1147  00F1               	movwf	I2C1_SetBuffer@bufferSize
 12826  1148  3000               	movlw	0
 12827  1149  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 12828  114A  3028               	movlw	(low (I2C1_Read1ByteRegister@reg| 0))& (0+255)
 12829  114B  319E  2671  3191   	fcall	_I2C1_SetBuffer
 12830                           
 12831                           ;mcc_generated_files/examples/i2c1_master_example.c: 70:     I2C1_SetAddressNackCallback
      +                          (((void*)0),((void*)0));
 12832  114E  3000               	movlw	0
 12833  114F  00F6               	movwf	I2C1_SetAddressNackCallback@cb
 12834  1150  00F7               	movwf	I2C1_SetAddressNackCallback@cb+1
 12835  1151  01F8               	clrf	I2C1_SetAddressNackCallback@ptr
 12836  1152  319E  2665  3191   	fcall	_I2C1_SetAddressNackCallback
 12837                           
 12838                           ;mcc_generated_files/examples/i2c1_master_example.c: 71:     I2C1_MasterWrite();
 12839  1155  319D  2598  3191   	fcall	_I2C1_MasterWrite
 12840  1158                     l6865:	
 12841                           ;mcc_generated_files/examples/i2c1_master_example.c: 72:     while(I2C1_BUSY == I2C1_Clo
      +                          se());
 12842                           
 12843  1158  319F  274C  3191   	fcall	_I2C1_Close
 12844  115B  3A01               	xorlw	1
 12845  115C  1903               	skipnz
 12846  115D  2958               	goto	l6865
 12847                           
 12848                           ;mcc_generated_files/examples/i2c1_master_example.c: 74:     return returnValue;
 12849  115E  0020               	movlb	0	; select bank0
 12850  115F  082B               	movf	I2C1_Read1ByteRegister@returnValue,w
 12851  1160  0008               	return
 12852  1161                     __end_of_I2C1_Read1ByteRegister:	
 12853                           
 12854                           	psect	text35
 12855  1E65                     __ptext35:	
 12856 ;; *************** function _I2C1_SetAddressNackCallback *****************
 12857 ;; Defined at:
 12858 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 12859 ;; Parameters:    Size  Location     Type
 12860 ;;  cb              2    6[COMMON] PTR FTN(PTR void ,)enum 
 12861 ;;		 -> Absolute function(1), 
 12862 ;;  ptr             1    8[COMMON] PTR void 
 12863 ;;		 -> NULL(0), 
 12864 ;; Auto vars:     Size  Location     Type
 12865 ;;		None
 12866 ;; Return value:  Size  Location     Type
 12867 ;;                  1    wreg      void 
 12868 ;; Registers used:
 12869 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12870 ;; Tracked objects:
 12871 ;;		On entry : 0/0
 12872 ;;		On exit  : 0/0
 12873 ;;		Unchanged: 0/0
 12874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12875 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12877 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12878 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12879 ;;Total ram usage:        4 bytes
 12880 ;; Hardware stack levels used:    1
 12881 ;; Hardware stack levels required when called:    5
 12882 ;; This function calls:
 12883 ;;		_I2C1_SetCallback
 12884 ;; This function is called by:
 12885 ;;		_I2C1_Read1ByteRegister
 12886 ;;		_I2C1_Read2ByteRegister
 12887 ;;		_I2C1_Write1ByteRegister
 12888 ;;		_I2C1_Write2ByteRegister
 12889 ;;		_I2C1_WriteNBytes
 12890 ;;		_I2C1_ReadDataBlock
 12891 ;; This function uses a non-reentrant model
 12892 ;;
 12893                           
 12894                           
 12895                           ;psect for function _I2C1_SetAddressNackCallback
 12896  1E65                     _I2C1_SetAddressNackCallback:	
 12897                           
 12898                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 12899                           
 12900                           ;incstack = 0
 12901                           ; Regs used in _I2C1_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 12902  1E65  0877               	movf	I2C1_SetAddressNackCallback@cb+1,w
 12903  1E66  00F2               	movwf	I2C1_SetCallback@cb+1
 12904  1E67  0876               	movf	I2C1_SetAddressNackCallback@cb,w
 12905  1E68  00F1               	movwf	I2C1_SetCallback@cb
 12906  1E69  0878               	movf	I2C1_SetAddressNackCallback@ptr,w
 12907  1E6A  00F9               	movwf	??_I2C1_SetAddressNackCallback
 12908  1E6B  0879               	movf	??_I2C1_SetAddressNackCallback,w
 12909  1E6C  00F3               	movwf	I2C1_SetCallback@ptr
 12910  1E6D  3002               	movlw	2
 12911  1E6E  3190  207F         	fcall	_I2C1_SetCallback
 12912  1E70  0008               	return
 12913  1E71                     __end_of_I2C1_SetAddressNackCallback:	
 12914                           
 12915                           	psect	text36
 12916  07C9                     __ptext36:	
 12917 ;; *************** function _I2C1_Open *****************
 12918 ;; Defined at:
 12919 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 12920 ;; Parameters:    Size  Location     Type
 12921 ;;  address         1    wreg     unsigned char 
 12922 ;; Auto vars:     Size  Location     Type
 12923 ;;  address         1    2[COMMON] unsigned char 
 12924 ;;  returnValue     1    3[COMMON] enum E353
 12925 ;; Return value:  Size  Location     Type
 12926 ;;                  1    wreg      enum E353
 12927 ;; Registers used:
 12928 ;;		wreg, status,2, status,0, pclath, cstack
 12929 ;; Tracked objects:
 12930 ;;		On entry : 0/0
 12931 ;;		On exit  : 0/0
 12932 ;;		Unchanged: 0/0
 12933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12935 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12936 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12937 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12938 ;;Total ram usage:        3 bytes
 12939 ;; Hardware stack levels used:    1
 12940 ;; Hardware stack levels required when called:    5
 12941 ;; This function calls:
 12942 ;;		_I2C1_MasterClearIrq
 12943 ;;		_I2C1_MasterOpen
 12944 ;; This function is called by:
 12945 ;;		_I2C1_Read1ByteRegister
 12946 ;;		_I2C1_Read2ByteRegister
 12947 ;;		_I2C1_Write1ByteRegister
 12948 ;;		_I2C1_Write2ByteRegister
 12949 ;;		_I2C1_WriteNBytes
 12950 ;;		_I2C1_ReadNBytes
 12951 ;;		_I2C1_ReadDataBlock
 12952 ;; This function uses a non-reentrant model
 12953 ;;
 12954                           
 12955                           
 12956                           ;psect for function _I2C1_Open
 12957  07C9                     _I2C1_Open:	
 12958                           
 12959                           ;incstack = 0
 12960                           ; Regs used in _I2C1_Open: [wreg+status,2+status,0+pclath+cstack]
 12961                           ;I2C1_Open@address stored from wreg
 12962  07C9  00F2               	movwf	I2C1_Open@address
 12963                           
 12964                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 12965  07CA  01F3               	clrf	I2C1_Open@returnValue
 12966  07CB  0AF3               	incf	I2C1_Open@returnValue,f
 12967                           
 12968                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 12969  07CC  0023               	movlb	3	; select bank3
 12970  07CD  193C               	btfsc	(_I2C1_Status^(0+384)+28),2
 12971  07CE  2FFE               	goto	l541
 12972                           
 12973                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 12974  07CF  0872               	movf	I2C1_Open@address,w
 12975  07D0  00F1               	movwf	??_I2C1_Open
 12976  07D1  0871               	movf	??_I2C1_Open,w
 12977  07D2  00B6               	movwf	(_I2C1_Status^(0+384)+22)
 12978                           
 12979                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 12980  07D3  10BC               	bcf	(_I2C1_Status^(0+384)+28),1
 12981                           
 12982                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 12983  07D4  153C               	bsf	(_I2C1_Status^(0+384)+28),2
 12984                           
 12985                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 12986  07D5  103C               	bcf	(_I2C1_Status^(0+384)+28),0
 12987                           
 12988                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 12989  07D6  300E               	movlw	14
 12990  07D7  00F1               	movwf	??_I2C1_Open
 12991  07D8  0871               	movf	??_I2C1_Open,w
 12992  07D9  00BA               	movwf	(_I2C1_Status^(0+384)+26)
 12993                           
 12994                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 12995  07DA  30F4               	movlw	244
 12996  07DB  00B4               	movwf	(_I2C1_Status^(0+384)+20)
 12997  07DC  3001               	movlw	1
 12998  07DD  00B5               	movwf	(_I2C1_Status^(0+384)+21)
 12999                           
 13000                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 13001  07DE  15BC               	bsf	(_I2C1_Status^(0+384)+28),3
 13002                           
 13003                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 13004  07DF  3000               	movlw	low _I2C1_CallbackReturnStop
 13005  07E0  00A0               	movwf	_I2C1_Status^(0+384)
 13006  07E1  3010               	movlw	high _I2C1_CallbackReturnStop
 13007  07E2  00A1               	movwf	(_I2C1_Status^(0+384)+1)
 13008                           
 13009                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 13010  07E3  01AC               	clrf	(low ((_I2C1_Status| (0+256)+12)))^(0+128)
 13011                           
 13012                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 13013  07E4  3000               	movlw	low _I2C1_CallbackReturnStop
 13014  07E5  00A2               	movwf	(low ((_I2C1_Status| (0+256)+2)))^(0+128)
 13015  07E6  3010               	movlw	high _I2C1_CallbackReturnStop
 13016  07E7  00A3               	movwf	((low ((_I2C1_Status| (0+256)+2)))^(0+128)+1)
 13017                           
 13018                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 13019  07E8  01AD               	clrf	(low ((_I2C1_Status| (0+256)+13)))^(0+128)
 13020                           
 13021                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 13022  07E9  3000               	movlw	low _I2C1_CallbackReturnStop
 13023  07EA  00A4               	movwf	(low ((_I2C1_Status| (0+256)+4)))^(0+128)
 13024  07EB  3010               	movlw	high _I2C1_CallbackReturnStop
 13025  07EC  00A5               	movwf	((low ((_I2C1_Status| (0+256)+4)))^(0+128)+1)
 13026                           
 13027                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 13028  07ED  01AE               	clrf	(low ((_I2C1_Status| (0+256)+14)))^(0+128)
 13029                           
 13030                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 13031  07EE  3000               	movlw	low _I2C1_CallbackReturnStop
 13032  07EF  00A6               	movwf	(low ((_I2C1_Status| (0+256)+6)))^(0+128)
 13033  07F0  3010               	movlw	high _I2C1_CallbackReturnStop
 13034  07F1  00A7               	movwf	((low ((_I2C1_Status| (0+256)+6)))^(0+128)+1)
 13035                           
 13036                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 13037  07F2  01AF               	clrf	(low ((_I2C1_Status| (0+256)+15)))^(0+128)
 13038                           
 13039                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 13040  07F3  3002               	movlw	low _I2C1_CallbackReturnReset
 13041  07F4  00A8               	movwf	(low ((_I2C1_Status| (0+256)+8)))^(0+128)
 13042  07F5  3000               	movlw	high _I2C1_CallbackReturnReset
 13043  07F6  00A9               	movwf	((low ((_I2C1_Status| (0+256)+8)))^(0+128)+1)
 13044                           
 13045                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 13046  07F7  01B0               	clrf	(low ((_I2C1_Status| (0+256)+16)))^(0+128)
 13047                           
 13048                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 13049  07F8  319D  254A  3187   	fcall	_I2C1_MasterClearIrq
 13050                           
 13051                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 13052  07FB  319E  2642         	fcall	_I2C1_MasterOpen
 13053                           
 13054                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 13055  07FD  01F3               	clrf	I2C1_Open@returnValue
 13056  07FE                     l541:	
 13057                           ;mcc_generated_files/i2c1_master.c: 205:     }
 13058                           
 13059                           
 13060                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 13061  07FE  0873               	movf	I2C1_Open@returnValue,w
 13062  07FF  0008               	return
 13063  0800                     __end_of_I2C1_Open:	
 13064                           
 13065                           	psect	text37
 13066  1E42                     __ptext37:	
 13067 ;; *************** function _I2C1_MasterOpen *****************
 13068 ;; Defined at:
 13069 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 13070 ;; Parameters:    Size  Location     Type
 13071 ;;		None
 13072 ;; Auto vars:     Size  Location     Type
 13073 ;;		None
 13074 ;; Return value:  Size  Location     Type
 13075 ;;                  1    wreg      _Bool 
 13076 ;; Registers used:
 13077 ;;		wreg, status,2
 13078 ;; Tracked objects:
 13079 ;;		On entry : 0/0
 13080 ;;		On exit  : 0/0
 13081 ;;		Unchanged: 0/0
 13082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13087 ;;Total ram usage:        0 bytes
 13088 ;; Hardware stack levels used:    1
 13089 ;; Hardware stack levels required when called:    4
 13090 ;; This function calls:
 13091 ;;		Nothing
 13092 ;; This function is called by:
 13093 ;;		_I2C1_Open
 13094 ;; This function uses a non-reentrant model
 13095 ;;
 13096                           
 13097                           
 13098                           ;psect for function _I2C1_MasterOpen
 13099  1E42                     _I2C1_MasterOpen:	
 13100                           
 13101                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 13102                           
 13103                           ;incstack = 0
 13104                           ; Regs used in _I2C1_MasterOpen: [wreg+status,2]
 13105  1E42  0024               	movlb	4	; select bank4
 13106  1E43  1A95               	btfsc	21,5	;volatile
 13107  1E44  0008               	return
 13108                           
 13109                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x00;
 13110  1E45  0194               	clrf	20	;volatile
 13111                           
 13112                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 13113  1E46  3008               	movlw	8
 13114  1E47  0095               	movwf	21	;volatile
 13115                           
 13116                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 13117  1E48  0196               	clrf	22	;volatile
 13118                           
 13119                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x27;
 13120  1E49  3027               	movlw	39
 13121  1E4A  0092               	movwf	18	;volatile
 13122                           
 13123                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 13124  1E4B  1695               	bsf	21,5	;volatile
 13125  1E4C  0008               	return
 13126  1E4D                     __end_of_I2C1_MasterOpen:	
 13127                           
 13128                           	psect	text38
 13129  1D98                     __ptext38:	
 13130 ;; *************** function _I2C1_MasterWrite *****************
 13131 ;; Defined at:
 13132 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 13133 ;; Parameters:    Size  Location     Type
 13134 ;;		None
 13135 ;; Auto vars:     Size  Location     Type
 13136 ;;		None
 13137 ;; Return value:  Size  Location     Type
 13138 ;;                  1    wreg      enum E353
 13139 ;; Registers used:
 13140 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13141 ;; Tracked objects:
 13142 ;;		On entry : 0/0
 13143 ;;		On exit  : 0/0
 13144 ;;		Unchanged: 0/0
 13145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13150 ;;Total ram usage:        0 bytes
 13151 ;; Hardware stack levels used:    1
 13152 ;; Hardware stack levels required when called:   11
 13153 ;; This function calls:
 13154 ;;		_I2C1_MasterOperation
 13155 ;; This function is called by:
 13156 ;;		_I2C1_Read1ByteRegister
 13157 ;;		_I2C1_Read2ByteRegister
 13158 ;;		_I2C1_Write1ByteRegister
 13159 ;;		_I2C1_Write2ByteRegister
 13160 ;;		_I2C1_WriteNBytes
 13161 ;;		_I2C1_ReadDataBlock
 13162 ;; This function uses a non-reentrant model
 13163 ;;
 13164                           
 13165                           
 13166                           ;psect for function _I2C1_MasterWrite
 13167  1D98                     _I2C1_MasterWrite:	
 13168                           
 13169                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 13170                           
 13171                           ;incstack = 0
 13172                           ; Regs used in _I2C1_MasterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13173  1D98  3000               	movlw	0
 13174  1D99  319F  2765         	fcall	_I2C1_MasterOperation
 13175  1D9B  0008               	return
 13176  1D9C                     __end_of_I2C1_MasterWrite:	
 13177                           
 13178                           	psect	text39
 13179  1F65                     __ptext39:	
 13180 ;; *************** function _I2C1_MasterOperation *****************
 13181 ;; Defined at:
 13182 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 13183 ;; Parameters:    Size  Location     Type
 13184 ;;  read            1    wreg     _Bool 
 13185 ;; Auto vars:     Size  Location     Type
 13186 ;;  read            1    6[BANK0 ] _Bool 
 13187 ;;  returnValue     1    7[BANK0 ] enum E353
 13188 ;; Return value:  Size  Location     Type
 13189 ;;                  1    wreg      enum E353
 13190 ;; Registers used:
 13191 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13192 ;; Tracked objects:
 13193 ;;		On entry : 0/0
 13194 ;;		On exit  : 0/0
 13195 ;;		Unchanged: 0/0
 13196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13198 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13199 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13200 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13201 ;;Total ram usage:        3 bytes
 13202 ;; Hardware stack levels used:    1
 13203 ;; Hardware stack levels required when called:   10
 13204 ;; This function calls:
 13205 ;;		_I2C1_MasterStart
 13206 ;;		_I2C1_Poller
 13207 ;; This function is called by:
 13208 ;;		_I2C1_MasterWrite
 13209 ;;		_I2C1_MasterRead
 13210 ;; This function uses a non-reentrant model
 13211 ;;
 13212                           
 13213                           
 13214                           ;psect for function _I2C1_MasterOperation
 13215  1F65                     _I2C1_MasterOperation:	
 13216                           
 13217                           ;incstack = 0
 13218                           ; Regs used in _I2C1_MasterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13219                           ;I2C1_MasterOperation@read stored from wreg
 13220  1F65  0020               	movlb	0	; select bank0
 13221  1F66  00A6               	movwf	I2C1_MasterOperation@read
 13222                           
 13223                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 13224  1F67  01A7               	clrf	I2C1_MasterOperation@returnValue
 13225  1F68  0AA7               	incf	I2C1_MasterOperation@returnValue,f
 13226                           
 13227                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 13228  1F69  0023               	movlb	3	; select bank3
 13229  1F6A  18BC               	btfsc	(_I2C1_Status^(0+384)+28),1
 13230  1F6B  2F80               	goto	l5425
 13231                           
 13232                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 13233  1F6C  14BC               	bsf	(_I2C1_Status^(0+384)+28),1
 13234                           
 13235                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 13236  1F6D  0020               	movlb	0	; select bank0
 13237  1F6E  01A7               	clrf	I2C1_MasterOperation@returnValue
 13238                           
 13239                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 13240  1F6F  0826               	movf	I2C1_MasterOperation@read,w
 13241  1F70  1903               	btfsc	3,2
 13242  1F71  2F76               	goto	l5419
 13243                           
 13244                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 13245  1F72  0023               	movlb	3	; select bank3
 13246  1F73  01BA               	clrf	(_I2C1_Status^(0+384)+26)
 13247  1F74  0ABA               	incf	(_I2C1_Status^(0+384)+26),f
 13248                           
 13249                           ;mcc_generated_files/i2c1_master.c: 235:         }
 13250  1F75  2F7B               	goto	l5421
 13251  1F76                     l5419:	
 13252                           
 13253                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 13254  1F76  3002               	movlw	2
 13255  1F77  00FB               	movwf	??_I2C1_MasterOperation
 13256  1F78  087B               	movf	??_I2C1_MasterOperation,w
 13257  1F79  0023               	movlb	3	; select bank3
 13258  1F7A  00BA               	movwf	(_I2C1_Status^(0+384)+26)
 13259  1F7B                     l5421:	
 13260                           
 13261                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 13262  1F7B  319D  2553  319F   	fcall	_I2C1_MasterStart
 13263                           
 13264                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 13265  1F7E  319E  2624         	fcall	_I2C1_Poller
 13266  1F80                     l5425:	
 13267                           
 13268                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 13269  1F80  0020               	movlb	0	; select bank0
 13270  1F81  0827               	movf	I2C1_MasterOperation@returnValue,w
 13271  1F82  0008               	return
 13272  1F83                     __end_of_I2C1_MasterOperation:	
 13273                           
 13274                           	psect	text40
 13275  1E24                     __ptext40:	
 13276 ;; *************** function _I2C1_Poller *****************
 13277 ;; Defined at:
 13278 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 13279 ;; Parameters:    Size  Location     Type
 13280 ;;		None
 13281 ;; Auto vars:     Size  Location     Type
 13282 ;;		None
 13283 ;; Return value:  Size  Location     Type
 13284 ;;                  1    wreg      void 
 13285 ;; Registers used:
 13286 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13287 ;; Tracked objects:
 13288 ;;		On entry : 0/0
 13289 ;;		On exit  : 0/0
 13290 ;;		Unchanged: 0/0
 13291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13296 ;;Total ram usage:        0 bytes
 13297 ;; Hardware stack levels used:    1
 13298 ;; Hardware stack levels required when called:    9
 13299 ;; This function calls:
 13300 ;;		_I2C1_MasterFsm
 13301 ;;		_I2C1_MasterWaitForEvent
 13302 ;; This function is called by:
 13303 ;;		_I2C1_MasterOperation
 13304 ;; This function uses a non-reentrant model
 13305 ;;
 13306                           
 13307                           
 13308                           ;psect for function _I2C1_Poller
 13309  1E24                     _I2C1_Poller:	
 13310  1E24                     l5073:	
 13311                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 13312                           
 13313                           ;incstack = 0
 13314                           ; Regs used in _I2C1_Poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13315                           
 13316                           
 13317                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 13318  1E24  0023               	movlb	3	; select bank3
 13319  1E25  1CBC               	btfss	(_I2C1_Status^(0+384)+28),1
 13320  1E26  0008               	return
 13321                           
 13322                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 13323  1E27  319D  2594  319E   	fcall	_I2C1_MasterWaitForEvent
 13324                           
 13325                           ;mcc_generated_files/i2c1_master.c: 317:         I2C1_MasterFsm();
 13326  1E2A  3190  20A7  319E   	fcall	_I2C1_MasterFsm
 13327  1E2D  2E24               	goto	l5073
 13328  1E2E                     __end_of_I2C1_Poller:	
 13329                           
 13330                           	psect	text41
 13331  1D94                     __ptext41:	
 13332 ;; *************** function _I2C1_MasterWaitForEvent *****************
 13333 ;; Defined at:
 13334 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 13335 ;; Parameters:    Size  Location     Type
 13336 ;;		None
 13337 ;; Auto vars:     Size  Location     Type
 13338 ;;		None
 13339 ;; Return value:  Size  Location     Type
 13340 ;;                  1    wreg      void 
 13341 ;; Registers used:
 13342 ;;		None
 13343 ;; Tracked objects:
 13344 ;;		On entry : 0/0
 13345 ;;		On exit  : 0/0
 13346 ;;		Unchanged: 0/0
 13347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13352 ;;Total ram usage:        0 bytes
 13353 ;; Hardware stack levels used:    1
 13354 ;; Hardware stack levels required when called:    4
 13355 ;; This function calls:
 13356 ;;		Nothing
 13357 ;; This function is called by:
 13358 ;;		_I2C1_Poller
 13359 ;; This function uses a non-reentrant model
 13360 ;;
 13361                           
 13362                           
 13363                           ;psect for function _I2C1_MasterWaitForEvent
 13364  1D94                     _I2C1_MasterWaitForEvent:	
 13365  1D94                     l764:	
 13366                           ;incstack = 0
 13367                           ; Regs used in _I2C1_MasterWaitForEvent: []
 13368                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 13369                           
 13370                           
 13371                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR1bits.SSP1IF)
 13372  1D94  0020               	movlb	0	; select bank0
 13373  1D95  1991               	btfsc	17,3	;volatile
 13374  1D96  0008               	return
 13375  1D97  2D94               	goto	l764
 13376  1D98                     __end_of_I2C1_MasterWaitForEvent:	
 13377                           
 13378                           	psect	text42
 13379  10A7                     __ptext42:	
 13380 ;; *************** function _I2C1_MasterFsm *****************
 13381 ;; Defined at:
 13382 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 13383 ;; Parameters:    Size  Location     Type
 13384 ;;		None
 13385 ;; Auto vars:     Size  Location     Type
 13386 ;;		None
 13387 ;; Return value:  Size  Location     Type
 13388 ;;                  1    wreg      void 
 13389 ;; Registers used:
 13390 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13391 ;; Tracked objects:
 13392 ;;		On entry : 0/0
 13393 ;;		On exit  : 0/0
 13394 ;;		Unchanged: 0/0
 13395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13398 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13399 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13400 ;;Total ram usage:        3 bytes
 13401 ;; Hardware stack levels used:    1
 13402 ;; Hardware stack levels required when called:    8
 13403 ;; This function calls:
 13404 ;;		_I2C1_DO_ADDRESS_NACK
 13405 ;;		_I2C1_DO_IDLE
 13406 ;;		_I2C1_DO_RCEN
 13407 ;;		_I2C1_DO_RESET
 13408 ;;		_I2C1_DO_RX
 13409 ;;		_I2C1_DO_RX_ACK
 13410 ;;		_I2C1_DO_RX_NACK_RESTART
 13411 ;;		_I2C1_DO_RX_NACK_STOP
 13412 ;;		_I2C1_DO_SEND_ADR_READ
 13413 ;;		_I2C1_DO_SEND_ADR_WRITE
 13414 ;;		_I2C1_DO_SEND_RESTART
 13415 ;;		_I2C1_DO_SEND_RESTART_READ
 13416 ;;		_I2C1_DO_SEND_RESTART_WRITE
 13417 ;;		_I2C1_DO_SEND_STOP
 13418 ;;		_I2C1_DO_TX
 13419 ;;		_I2C1_DO_TX_EMPTY
 13420 ;;		_I2C1_MasterClearIrq
 13421 ;;		_I2C1_MasterIsNack
 13422 ;; This function is called by:
 13423 ;;		_I2C1_Poller
 13424 ;; This function uses a non-reentrant model
 13425 ;;
 13426                           
 13427                           
 13428                           ;psect for function _I2C1_MasterFsm
 13429  10A7                     _I2C1_MasterFsm:	
 13430                           
 13431                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 13432                           
 13433                           ;incstack = 0
 13434                           ; Regs used in _I2C1_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13435  10A7  319D  254A  3190   	fcall	_I2C1_MasterClearIrq
 13436                           
 13437                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 13438  10AA  0023               	movlb	3	; select bank3
 13439  10AB  1C3C               	btfss	(_I2C1_Status^(0+384)+28),0
 13440  10AC  28B9               	goto	l4531
 13441  10AD  319D  25D2  3190   	fcall	_I2C1_MasterIsNack
 13442  10B0  3A00               	xorlw	0
 13443  10B1  1903               	skipnz
 13444  10B2  28B9               	goto	l4531
 13445                           
 13446                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 13447  10B3  300F               	movlw	15
 13448  10B4  0020               	movlb	0	; select bank0
 13449  10B5  00A3               	movwf	??_I2C1_MasterFsm
 13450  10B6  0823               	movf	??_I2C1_MasterFsm,w
 13451  10B7  0023               	movlb	3	; select bank3
 13452  10B8  00BA               	movwf	(_I2C1_Status^(0+384)+26)
 13453  10B9                     l4531:	
 13454                           
 13455                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = fsmStateTable[I2C1_Stat
      +                          us.state]();
 13456  10B9  0023               	movlb	3	; select bank3
 13457  10BA  083A               	movf	(_I2C1_Status^(0+384)+26),w
 13458  10BB  0020               	movlb	0	; select bank0
 13459  10BC  00A3               	movwf	??_I2C1_MasterFsm
 13460  10BD  01A4               	clrf	??_I2C1_MasterFsm+1
 13461  10BE  35A3               	lslf	??_I2C1_MasterFsm,f
 13462  10BF  0DA4               	rlf	??_I2C1_MasterFsm+1,f
 13463  10C0  3000               	movlw	low (_fsmStateTable| (0+32768))
 13464  10C1  0723               	addwf	??_I2C1_MasterFsm,w
 13465  10C2  0084               	movwf	4
 13466  10C3  3098               	movlw	high (_fsmStateTable| (0+32768))
 13467  10C4  3D24               	addwfc	??_I2C1_MasterFsm+1,w
 13468  10C5  0085               	movwf	5
 13469  10C6  3F01               	moviw [1]fsr0
 13470  10C7  008A               	movwf	10
 13471  10C8  3F00               	moviw [0]fsr0
 13472  10C9  000A               	callw
 13473  10CA  3190               	pagesel	$
 13474  10CB  0020               	movlb	0	; select bank0
 13475  10CC  00A5               	movwf	??_I2C1_MasterFsm+2
 13476  10CD  0825               	movf	??_I2C1_MasterFsm+2,w
 13477  10CE  0023               	movlb	3	; select bank3
 13478  10CF  00BA               	movwf	(_I2C1_Status^(0+384)+26)
 13479  10D0  0008               	return
 13480  10D1                     __end_of_I2C1_MasterFsm:	
 13481                           
 13482                           	psect	text43
 13483  1100                     __ptext43:	
 13484 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 13485 ;; Defined at:
 13486 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 13487 ;; Parameters:    Size  Location     Type
 13488 ;;		None
 13489 ;; Auto vars:     Size  Location     Type
 13490 ;;		None
 13491 ;; Return value:  Size  Location     Type
 13492 ;;                  1    wreg      enum E7150
 13493 ;; Registers used:
 13494 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13495 ;; Tracked objects:
 13496 ;;		On entry : 0/0
 13497 ;;		On exit  : 0/0
 13498 ;;		Unchanged: 0/0
 13499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13502 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13503 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13504 ;;Total ram usage:        3 bytes
 13505 ;; Hardware stack levels used:    1
 13506 ;; Hardware stack levels required when called:    7
 13507 ;; This function calls:
 13508 ;;		Absolute function
 13509 ;;		_I2C1_CallbackReturnReset
 13510 ;;		_I2C1_CallbackReturnStop
 13511 ;;		_I2C1_DO_SEND_RESTART
 13512 ;;		_I2C1_DO_SEND_STOP
 13513 ;;		_rd1RegCompleteHandler
 13514 ;;		_rd2RegCompleteHandler
 13515 ;;		_rdBlkRegCompleteHandler
 13516 ;;		_wr1RegCompleteHandler
 13517 ;;		_wr2RegCompleteHandler
 13518 ;; This function is called by:
 13519 ;;		_I2C1_MasterFsm
 13520 ;; This function uses a non-reentrant model
 13521 ;;
 13522                           
 13523                           
 13524                           ;psect for function _I2C1_DO_ADDRESS_NACK
 13525  1100                     _I2C1_DO_ADDRESS_NACK:	
 13526                           
 13527                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 13528                           
 13529                           ;incstack = 0
 13530                           ; Regs used in _I2C1_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13531  1100  0023               	movlb	3	; select bank3
 13532  1101  103C               	bcf	(_I2C1_Status^(0+384)+28),0
 13533                           
 13534                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 13535  1102  3002               	movlw	2
 13536  1103  0020               	movlb	0	; select bank0
 13537  1104  00A0               	movwf	??_I2C1_DO_ADDRESS_NACK
 13538  1105  0820               	movf	??_I2C1_DO_ADDRESS_NACK,w
 13539  1106  0023               	movlb	3	; select bank3
 13540  1107  00BB               	movwf	(_I2C1_Status^(0+384)+27)
 13541                           
 13542                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 13543  1108  290F               	goto	l4285
 13544  1109                     l4275:	
 13545                           
 13546                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 13547  1109  319D  2580         	fcall	_I2C1_DO_SEND_RESTART
 13548  110B  0008               	return
 13549  110C                     l4279:	
 13550                           
 13551                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 13552  110C  319D  2584         	fcall	_I2C1_DO_SEND_STOP
 13553  110E  0008               	return
 13554  110F                     l4285:	
 13555  110F  082E               	movf	(low ((_I2C1_Status| (0+256)+14)))^(0+128),w
 13556  1110  0020               	movlb	0	; select bank0
 13557  1111  00A0               	movwf	??_I2C1_DO_ADDRESS_NACK
 13558  1112  0820               	movf	??_I2C1_DO_ADDRESS_NACK,w
 13559  1113  00FA               	movwf	I2C1_CallbackReturnReset@funPtr
 13560  1114  3004               	movlw	4
 13561  1115  3EA0               	addlw	(low (_I2C1_Status| (0+256)))& (0+255)
 13562  1116  0086               	movwf	6
 13563  1117  3001               	movlw	1	; select bank3/4
 13564  1118  0087               	movwf	7
 13565  1119  3F41               	moviw [1]fsr1
 13566  111A  008A               	movwf	10
 13567  111B  3F40               	moviw [0]fsr1
 13568  111C  000A               	callw
 13569  111D  3191               	pagesel	$
 13570  111E  0020               	movlb	0	; select bank0
 13571  111F  00A1               	movwf	??_I2C1_DO_ADDRESS_NACK+1
 13572  1120  01A2               	clrf	??_I2C1_DO_ADDRESS_NACK+2
 13573                           
 13574                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13575                           ; Switch size 1, requested type "simple"
 13576                           ; Number of cases is 1, Range of values is 0 to 0
 13577                           ; switch strategies available:
 13578                           ; Name         Instructions Cycles
 13579                           ; simple_byte            4     3 (average)
 13580                           ; direct_byte            8     6 (fixed)
 13581                           ; jumptable            260     6 (fixed)
 13582                           ;	Chosen strategy is simple_byte
 13583  1121  0822               	movf	??_I2C1_DO_ADDRESS_NACK+2,w
 13584  1122  3A00               	xorlw	0	; case 0
 13585  1123  1903               	skipnz
 13586  1124  2926               	goto	l7071
 13587  1125  290C               	goto	l4279
 13588  1126                     l7071:	
 13589                           
 13590                           ; Switch size 1, requested type "simple"
 13591                           ; Number of cases is 2, Range of values is 2 to 3
 13592                           ; switch strategies available:
 13593                           ; Name         Instructions Cycles
 13594                           ; simple_byte            7     4 (average)
 13595                           ; direct_byte           13     9 (fixed)
 13596                           ; jumptable            263     9 (fixed)
 13597                           ;	Chosen strategy is simple_byte
 13598  1126  0821               	movf	??_I2C1_DO_ADDRESS_NACK+1,w
 13599  1127  3A02               	xorlw	2	; case 2
 13600  1128  1903               	skipnz
 13601  1129  2909               	goto	l4275
 13602  112A  3A01               	xorlw	1	; case 3
 13603  112B  1903               	skipnz
 13604  112C  2909               	goto	l4275
 13605  112D  290C               	goto	l4279
 13606  112E  0008               	return
 13607  112F                     __end_of_I2C1_DO_ADDRESS_NACK:	
 13608                           
 13609                           	psect	text44
 13610  1DAA                     __ptext44:	
 13611 ;; *************** function _I2C1_DO_RESET *****************
 13612 ;; Defined at:
 13613 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 13614 ;; Parameters:    Size  Location     Type
 13615 ;;		None
 13616 ;; Auto vars:     Size  Location     Type
 13617 ;;		None
 13618 ;; Return value:  Size  Location     Type
 13619 ;;                  1    wreg      enum E7150
 13620 ;; Registers used:
 13621 ;;		wreg, status,2
 13622 ;; Tracked objects:
 13623 ;;		On entry : 0/0
 13624 ;;		On exit  : 0/0
 13625 ;;		Unchanged: 0/0
 13626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13631 ;;Total ram usage:        0 bytes
 13632 ;; Hardware stack levels used:    1
 13633 ;; Hardware stack levels required when called:    4
 13634 ;; This function calls:
 13635 ;;		Nothing
 13636 ;; This function is called by:
 13637 ;;		_I2C1_MasterFsm
 13638 ;; This function uses a non-reentrant model
 13639 ;;
 13640                           
 13641                           
 13642                           ;psect for function _I2C1_DO_RESET
 13643  1DAA                     _I2C1_DO_RESET:	
 13644                           
 13645                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 13646                           
 13647                           ;incstack = 0
 13648                           ; Regs used in _I2C1_DO_RESET: [wreg+status,2]
 13649  1DAA  0023               	movlb	3	; select bank3
 13650  1DAB  10BC               	bcf	(_I2C1_Status^(0+384)+28),1
 13651                           
 13652                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 13653  1DAC  01BB               	clrf	(_I2C1_Status^(0+384)+27)
 13654                           
 13655                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 13656  1DAD  300E               	movlw	14
 13657  1DAE  0008               	return
 13658  1DAF                     __end_of_I2C1_DO_RESET:	
 13659                           
 13660                           	psect	text45
 13661  1D90                     __ptext45:	
 13662 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 13663 ;; Defined at:
 13664 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 13665 ;; Parameters:    Size  Location     Type
 13666 ;;		None
 13667 ;; Auto vars:     Size  Location     Type
 13668 ;;		None
 13669 ;; Return value:  Size  Location     Type
 13670 ;;                  1    wreg      enum E7150
 13671 ;; Registers used:
 13672 ;;		wreg, status,2, status,0, pclath, cstack
 13673 ;; Tracked objects:
 13674 ;;		On entry : 0/0
 13675 ;;		On exit  : 0/0
 13676 ;;		Unchanged: 0/0
 13677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13682 ;;Total ram usage:        0 bytes
 13683 ;; Hardware stack levels used:    1
 13684 ;; Hardware stack levels required when called:    5
 13685 ;; This function calls:
 13686 ;;		_I2C1_MasterSendNack
 13687 ;; This function is called by:
 13688 ;;		_I2C1_DO_RX
 13689 ;;		_I2C1_MasterFsm
 13690 ;; This function uses a non-reentrant model
 13691 ;;
 13692                           
 13693                           
 13694                           ;psect for function _I2C1_DO_RX_NACK_RESTART
 13695  1D90                     _I2C1_DO_RX_NACK_RESTART:	
 13696                           
 13697                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 13698                           
 13699                           ;incstack = 0
 13700                           ; Regs used in _I2C1_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 13701  1D90  319D  2570         	fcall	_I2C1_MasterSendNack
 13702                           
 13703                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 13704  1D92  3009               	movlw	9
 13705  1D93  0008               	return
 13706  1D94                     __end_of_I2C1_DO_RX_NACK_RESTART:	
 13707                           
 13708                           	psect	text46
 13709  1D8C                     __ptext46:	
 13710 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 13711 ;; Defined at:
 13712 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 13713 ;; Parameters:    Size  Location     Type
 13714 ;;		None
 13715 ;; Auto vars:     Size  Location     Type
 13716 ;;		None
 13717 ;; Return value:  Size  Location     Type
 13718 ;;                  1    wreg      enum E7150
 13719 ;; Registers used:
 13720 ;;		wreg, status,2, status,0, pclath, cstack
 13721 ;; Tracked objects:
 13722 ;;		On entry : 0/0
 13723 ;;		On exit  : 0/0
 13724 ;;		Unchanged: 0/0
 13725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13730 ;;Total ram usage:        0 bytes
 13731 ;; Hardware stack levels used:    1
 13732 ;; Hardware stack levels required when called:    5
 13733 ;; This function calls:
 13734 ;;		_I2C1_MasterSendNack
 13735 ;; This function is called by:
 13736 ;;		_I2C1_DO_RX
 13737 ;;		_I2C1_MasterFsm
 13738 ;; This function uses a non-reentrant model
 13739 ;;
 13740                           
 13741                           
 13742                           ;psect for function _I2C1_DO_RX_NACK_STOP
 13743  1D8C                     _I2C1_DO_RX_NACK_STOP:	
 13744                           
 13745                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 13746                           
 13747                           ;incstack = 0
 13748                           ; Regs used in _I2C1_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 13749  1D8C  319D  2570         	fcall	_I2C1_MasterSendNack
 13750                           
 13751                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 13752  1D8E  300A               	movlw	10
 13753  1D8F  0008               	return
 13754  1D90                     __end_of_I2C1_DO_RX_NACK_STOP:	
 13755                           
 13756                           	psect	text47
 13757  1D88                     __ptext47:	
 13758 ;; *************** function _I2C1_DO_RX_ACK *****************
 13759 ;; Defined at:
 13760 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 13761 ;; Parameters:    Size  Location     Type
 13762 ;;		None
 13763 ;; Auto vars:     Size  Location     Type
 13764 ;;		None
 13765 ;; Return value:  Size  Location     Type
 13766 ;;                  1    wreg      enum E7150
 13767 ;; Registers used:
 13768 ;;		wreg, status,2, status,0, pclath, cstack
 13769 ;; Tracked objects:
 13770 ;;		On entry : 0/0
 13771 ;;		On exit  : 0/0
 13772 ;;		Unchanged: 0/0
 13773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13778 ;;Total ram usage:        0 bytes
 13779 ;; Hardware stack levels used:    1
 13780 ;; Hardware stack levels required when called:    5
 13781 ;; This function calls:
 13782 ;;		_I2C1_MasterSendAck
 13783 ;; This function is called by:
 13784 ;;		_I2C1_MasterFsm
 13785 ;; This function uses a non-reentrant model
 13786 ;;
 13787                           
 13788                           
 13789                           ;psect for function _I2C1_DO_RX_ACK
 13790  1D88                     _I2C1_DO_RX_ACK:	
 13791                           
 13792                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 13793                           
 13794                           ;incstack = 0
 13795                           ; Regs used in _I2C1_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
 13796  1D88  319D  2574         	fcall	_I2C1_MasterSendAck
 13797                           
 13798                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 13799  1D8A  3005               	movlw	5
 13800  1D8B  0008               	return
 13801  1D8C                     __end_of_I2C1_DO_RX_ACK:	
 13802                           
 13803                           	psect	text48
 13804  1D84                     __ptext48:	
 13805 ;; *************** function _I2C1_DO_SEND_STOP *****************
 13806 ;; Defined at:
 13807 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 13808 ;; Parameters:    Size  Location     Type
 13809 ;;		None
 13810 ;; Auto vars:     Size  Location     Type
 13811 ;;		None
 13812 ;; Return value:  Size  Location     Type
 13813 ;;                  1    wreg      enum E7150
 13814 ;; Registers used:
 13815 ;;		wreg, status,2, status,0, pclath, cstack
 13816 ;; Tracked objects:
 13817 ;;		On entry : 0/0
 13818 ;;		On exit  : 0/0
 13819 ;;		Unchanged: 0/0
 13820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13825 ;;Total ram usage:        0 bytes
 13826 ;; Hardware stack levels used:    1
 13827 ;; Hardware stack levels required when called:    5
 13828 ;; This function calls:
 13829 ;;		_I2C1_MasterStop
 13830 ;; This function is called by:
 13831 ;;		_I2C1_DO_TX
 13832 ;;		_I2C1_DO_TX_EMPTY
 13833 ;;		_I2C1_DO_ADDRESS_NACK
 13834 ;;		_I2C1_MasterFsm
 13835 ;; This function uses a non-reentrant model
 13836 ;;
 13837                           
 13838                           
 13839                           ;psect for function _I2C1_DO_SEND_STOP
 13840  1D84                     _I2C1_DO_SEND_STOP:	
 13841                           
 13842                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 13843                           
 13844                           ;incstack = 0
 13845                           ; Regs used in _I2C1_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 13846  1D84  319D  2559         	fcall	_I2C1_MasterStop
 13847                           
 13848                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 13849  1D86  3000               	movlw	0
 13850  1D87  0008               	return
 13851  1D88                     __end_of_I2C1_DO_SEND_STOP:	
 13852                           
 13853                           	psect	text49
 13854  1D80                     __ptext49:	
 13855 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 13856 ;; Defined at:
 13857 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 13858 ;; Parameters:    Size  Location     Type
 13859 ;;		None
 13860 ;; Auto vars:     Size  Location     Type
 13861 ;;		None
 13862 ;; Return value:  Size  Location     Type
 13863 ;;                  1    wreg      enum E7150
 13864 ;; Registers used:
 13865 ;;		wreg, status,2, status,0, pclath, cstack
 13866 ;; Tracked objects:
 13867 ;;		On entry : 0/0
 13868 ;;		On exit  : 0/0
 13869 ;;		Unchanged: 0/0
 13870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13875 ;;Total ram usage:        0 bytes
 13876 ;; Hardware stack levels used:    1
 13877 ;; Hardware stack levels required when called:    5
 13878 ;; This function calls:
 13879 ;;		_I2C1_MasterEnableRestart
 13880 ;; This function is called by:
 13881 ;;		_I2C1_DO_TX_EMPTY
 13882 ;;		_I2C1_DO_ADDRESS_NACK
 13883 ;;		_I2C1_MasterFsm
 13884 ;; This function uses a non-reentrant model
 13885 ;;
 13886                           
 13887                           
 13888                           ;psect for function _I2C1_DO_SEND_RESTART
 13889  1D80                     _I2C1_DO_SEND_RESTART:	
 13890                           
 13891                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 13892                           
 13893                           ;incstack = 0
 13894                           ; Regs used in _I2C1_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 13895  1D80  319D  2556         	fcall	_I2C1_MasterEnableRestart
 13896                           
 13897                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 13898  1D82  3001               	movlw	1
 13899  1D83  0008               	return
 13900  1D84                     __end_of_I2C1_DO_SEND_RESTART:	
 13901                           
 13902                           	psect	text50
 13903  1D7C                     __ptext50:	
 13904 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 13905 ;; Defined at:
 13906 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 13907 ;; Parameters:    Size  Location     Type
 13908 ;;		None
 13909 ;; Auto vars:     Size  Location     Type
 13910 ;;		None
 13911 ;; Return value:  Size  Location     Type
 13912 ;;                  1    wreg      enum E7150
 13913 ;; Registers used:
 13914 ;;		wreg, status,2, status,0, pclath, cstack
 13915 ;; Tracked objects:
 13916 ;;		On entry : 0/0
 13917 ;;		On exit  : 0/0
 13918 ;;		Unchanged: 0/0
 13919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13924 ;;Total ram usage:        0 bytes
 13925 ;; Hardware stack levels used:    1
 13926 ;; Hardware stack levels required when called:    5
 13927 ;; This function calls:
 13928 ;;		_I2C1_MasterEnableRestart
 13929 ;; This function is called by:
 13930 ;;		_I2C1_DO_TX
 13931 ;;		_I2C1_MasterFsm
 13932 ;; This function uses a non-reentrant model
 13933 ;;
 13934                           
 13935                           
 13936                           ;psect for function _I2C1_DO_SEND_RESTART_WRITE
 13937  1D7C                     _I2C1_DO_SEND_RESTART_WRITE:	
 13938                           
 13939                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 13940                           
 13941                           ;incstack = 0
 13942                           ; Regs used in _I2C1_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 13943  1D7C  319D  2556         	fcall	_I2C1_MasterEnableRestart
 13944                           
 13945                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 13946  1D7E  3002               	movlw	2
 13947  1D7F  0008               	return
 13948  1D80                     __end_of_I2C1_DO_SEND_RESTART_WRITE:	
 13949                           
 13950                           	psect	text51
 13951  1D78                     __ptext51:	
 13952 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 13953 ;; Defined at:
 13954 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 13955 ;; Parameters:    Size  Location     Type
 13956 ;;		None
 13957 ;; Auto vars:     Size  Location     Type
 13958 ;;		None
 13959 ;; Return value:  Size  Location     Type
 13960 ;;                  1    wreg      enum E7150
 13961 ;; Registers used:
 13962 ;;		wreg, status,2, status,0, pclath, cstack
 13963 ;; Tracked objects:
 13964 ;;		On entry : 0/0
 13965 ;;		On exit  : 0/0
 13966 ;;		Unchanged: 0/0
 13967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13972 ;;Total ram usage:        0 bytes
 13973 ;; Hardware stack levels used:    1
 13974 ;; Hardware stack levels required when called:    5
 13975 ;; This function calls:
 13976 ;;		_I2C1_MasterEnableRestart
 13977 ;; This function is called by:
 13978 ;;		_I2C1_DO_TX
 13979 ;;		_I2C1_MasterFsm
 13980 ;; This function uses a non-reentrant model
 13981 ;;
 13982                           
 13983                           
 13984                           ;psect for function _I2C1_DO_SEND_RESTART_READ
 13985  1D78                     _I2C1_DO_SEND_RESTART_READ:	
 13986                           
 13987                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 13988                           
 13989                           ;incstack = 0
 13990                           ; Regs used in _I2C1_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 13991  1D78  319D  2556         	fcall	_I2C1_MasterEnableRestart
 13992                           
 13993                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 13994  1D7A  3001               	movlw	1
 13995  1D7B  0008               	return
 13996  1D7C                     __end_of_I2C1_DO_SEND_RESTART_READ:	
 13997                           
 13998                           	psect	text52
 13999  1DD8                     __ptext52:	
 14000 ;; *************** function _I2C1_DO_RCEN *****************
 14001 ;; Defined at:
 14002 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 14003 ;; Parameters:    Size  Location     Type
 14004 ;;		None
 14005 ;; Auto vars:     Size  Location     Type
 14006 ;;		None
 14007 ;; Return value:  Size  Location     Type
 14008 ;;                  1    wreg      enum E7150
 14009 ;; Registers used:
 14010 ;;		wreg, status,2, status,0, pclath, cstack
 14011 ;; Tracked objects:
 14012 ;;		On entry : 0/0
 14013 ;;		On exit  : 0/0
 14014 ;;		Unchanged: 0/0
 14015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14020 ;;Total ram usage:        0 bytes
 14021 ;; Hardware stack levels used:    1
 14022 ;; Hardware stack levels required when called:    5
 14023 ;; This function calls:
 14024 ;;		_I2C1_MasterStartRx
 14025 ;; This function is called by:
 14026 ;;		_I2C1_MasterFsm
 14027 ;; This function uses a non-reentrant model
 14028 ;;
 14029                           
 14030                           
 14031                           ;psect for function _I2C1_DO_RCEN
 14032  1DD8                     _I2C1_DO_RCEN:	
 14033                           
 14034                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 14035                           
 14036                           ;incstack = 0
 14037                           ; Regs used in _I2C1_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
 14038  1DD8  0023               	movlb	3	; select bank3
 14039  1DD9  103C               	bcf	(_I2C1_Status^(0+384)+28),0
 14040                           
 14041                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 14042  1DDA  319D  255C         	fcall	_I2C1_MasterStartRx
 14043                           
 14044                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 14045  1DDC  3004               	movlw	4
 14046  1DDD  0008               	return
 14047  1DDE                     __end_of_I2C1_DO_RCEN:	
 14048                           
 14049                           	psect	text53
 14050  12C9                     __ptext53:	
 14051 ;; *************** function _I2C1_DO_RX *****************
 14052 ;; Defined at:
 14053 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 14054 ;; Parameters:    Size  Location     Type
 14055 ;;		None
 14056 ;; Auto vars:     Size  Location     Type
 14057 ;;		None
 14058 ;; Return value:  Size  Location     Type
 14059 ;;                  1    wreg      enum E7150
 14060 ;; Registers used:
 14061 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14062 ;; Tracked objects:
 14063 ;;		On entry : 0/0
 14064 ;;		On exit  : 0/0
 14065 ;;		Unchanged: 0/0
 14066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14069 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14070 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14071 ;;Total ram usage:        3 bytes
 14072 ;; Hardware stack levels used:    1
 14073 ;; Hardware stack levels required when called:    7
 14074 ;; This function calls:
 14075 ;;		Absolute function
 14076 ;;		_I2C1_CallbackReturnReset
 14077 ;;		_I2C1_CallbackReturnStop
 14078 ;;		_I2C1_DO_RX_NACK_RESTART
 14079 ;;		_I2C1_DO_RX_NACK_STOP
 14080 ;;		_I2C1_MasterGetRxData
 14081 ;;		_I2C1_MasterSendAck
 14082 ;;		_rd1RegCompleteHandler
 14083 ;;		_rd2RegCompleteHandler
 14084 ;;		_rdBlkRegCompleteHandler
 14085 ;;		_wr1RegCompleteHandler
 14086 ;;		_wr2RegCompleteHandler
 14087 ;; This function is called by:
 14088 ;;		_I2C1_MasterFsm
 14089 ;; This function uses a non-reentrant model
 14090 ;;
 14091                           
 14092                           
 14093                           ;psect for function _I2C1_DO_RX
 14094  12C9                     _I2C1_DO_RX:	
 14095                           
 14096                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 14097                           
 14098                           ;incstack = 0
 14099                           ; Regs used in _I2C1_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14100  12C9  319D  255F  3192   	fcall	_I2C1_MasterGetRxData
 14101  12CC  0020               	movlb	0	; select bank0
 14102  12CD  00A0               	movwf	??_I2C1_DO_RX
 14103  12CE  0023               	movlb	3	; select bank3
 14104  12CF  0837               	movf	(low ((_I2C1_Status| (0+256)+23)))^(0+128),w
 14105  12D0  0086               	movwf	6
 14106  12D1  0187               	clrf	7
 14107  12D2  0020               	movlb	0	; select bank0
 14108  12D3  0820               	movf	??_I2C1_DO_RX,w
 14109  12D4  0081               	movwf	1
 14110  12D5  3001               	movlw	1
 14111  12D6  00A0               	movwf	??_I2C1_DO_RX
 14112  12D7  0820               	movf	??_I2C1_DO_RX,w
 14113  12D8  0023               	movlb	3	; select bank3
 14114  12D9  07B7               	addwf	(low ((_I2C1_Status| (0+256)+23)))^(0+128),f
 14115                           
 14116                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 14117  12DA  3001               	movlw	1
 14118  12DB  02B8               	subwf	(_I2C1_Status^(0+384)+24),f
 14119  12DC  3000               	movlw	0
 14120  12DD  3BB9               	subwfb	((_I2C1_Status+1)^(0+384)+24),f
 14121  12DE  0838               	movf	(_I2C1_Status^(0+384)+24),w
 14122  12DF  0439               	iorwf	((_I2C1_Status+1)^(0+384)+24),w
 14123  12E0  1903               	btfsc	3,2
 14124  12E1  2AE6               	goto	l623
 14125                           
 14126                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 14127  12E2  319D  2574         	fcall	_I2C1_MasterSendAck
 14128                           
 14129                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 14130  12E4  3005               	movlw	5
 14131  12E5  0008               	return
 14132  12E6                     l623:	
 14133                           ;mcc_generated_files/i2c1_master.c: 386:     else
 14134                           
 14135                           
 14136                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 14137  12E6  15BC               	bsf	(_I2C1_Status^(0+384)+28),3
 14138                           
 14139                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 14140  12E7  2AEE               	goto	l4219
 14141  12E8                     l4209:	
 14142                           
 14143                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 14144  12E8  319D  2590         	fcall	_I2C1_DO_RX_NACK_RESTART
 14145  12EA  0008               	return
 14146  12EB                     l4213:	
 14147                           
 14148                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 14149  12EB  319D  258C         	fcall	_I2C1_DO_RX_NACK_STOP
 14150  12ED  0008               	return
 14151  12EE                     l4219:	
 14152  12EE  082C               	movf	(low ((_I2C1_Status| (0+256)+12)))^(0+128),w
 14153  12EF  0020               	movlb	0	; select bank0
 14154  12F0  00A0               	movwf	??_I2C1_DO_RX
 14155  12F1  0820               	movf	??_I2C1_DO_RX,w
 14156  12F2  00FA               	movwf	I2C1_CallbackReturnReset@funPtr
 14157  12F3  0023               	movlb	3	; select bank3
 14158  12F4  0821               	movf	(_I2C1_Status+1)^(0+384),w
 14159  12F5  008A               	movwf	10
 14160  12F6  0820               	movf	_I2C1_Status^(0+384),w
 14161  12F7  000A               	callw
 14162  12F8  3192               	pagesel	$
 14163  12F9  0020               	movlb	0	; select bank0
 14164  12FA  00A1               	movwf	??_I2C1_DO_RX+1
 14165  12FB  01A2               	clrf	??_I2C1_DO_RX+2
 14166                           
 14167                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14168                           ; Switch size 1, requested type "simple"
 14169                           ; Number of cases is 1, Range of values is 0 to 0
 14170                           ; switch strategies available:
 14171                           ; Name         Instructions Cycles
 14172                           ; simple_byte            4     3 (average)
 14173                           ; direct_byte            8     6 (fixed)
 14174                           ; jumptable            260     6 (fixed)
 14175                           ;	Chosen strategy is simple_byte
 14176  12FC  0822               	movf	??_I2C1_DO_RX+2,w
 14177  12FD  3A00               	xorlw	0	; case 0
 14178  12FE  1903               	skipnz
 14179  12FF  2B01               	goto	l7073
 14180  1300  2AEB               	goto	l4213
 14181  1301                     l7073:	
 14182                           
 14183                           ; Switch size 1, requested type "simple"
 14184                           ; Number of cases is 4, Range of values is 1 to 4
 14185                           ; switch strategies available:
 14186                           ; Name         Instructions Cycles
 14187                           ; simple_byte           13     7 (average)
 14188                           ; direct_byte           17     9 (fixed)
 14189                           ; jumptable            263     9 (fixed)
 14190                           ;	Chosen strategy is simple_byte
 14191  1301  0821               	movf	??_I2C1_DO_RX+1,w
 14192  1302  3A01               	xorlw	1	; case 1
 14193  1303  1903               	skipnz
 14194  1304  2AEB               	goto	l4213
 14195  1305  3A03               	xorlw	3	; case 2
 14196  1306  1903               	skipnz
 14197  1307  2AE8               	goto	l4209
 14198  1308  3A01               	xorlw	1	; case 3
 14199  1309  1903               	skipnz
 14200  130A  2AE8               	goto	l4209
 14201  130B  3A07               	xorlw	7	; case 4
 14202  130C  1903               	skipnz
 14203  130D  2AEB               	goto	l4213
 14204  130E  2AEB               	goto	l4213
 14205  130F  0008               	return
 14206  1310                     __end_of_I2C1_DO_RX:	
 14207                           
 14208                           	psect	text54
 14209  1448                     __ptext54:	
 14210 ;; *************** function _I2C1_DO_TX *****************
 14211 ;; Defined at:
 14212 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 14213 ;; Parameters:    Size  Location     Type
 14214 ;;		None
 14215 ;; Auto vars:     Size  Location     Type
 14216 ;;		None
 14217 ;; Return value:  Size  Location     Type
 14218 ;;                  1    wreg      enum E7150
 14219 ;; Registers used:
 14220 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14221 ;; Tracked objects:
 14222 ;;		On entry : 0/0
 14223 ;;		On exit  : 0/0
 14224 ;;		Unchanged: 0/0
 14225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14228 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14229 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14230 ;;Total ram usage:        3 bytes
 14231 ;; Hardware stack levels used:    1
 14232 ;; Hardware stack levels required when called:    7
 14233 ;; This function calls:
 14234 ;;		Absolute function
 14235 ;;		_I2C1_CallbackReturnReset
 14236 ;;		_I2C1_CallbackReturnStop
 14237 ;;		_I2C1_DO_SEND_RESTART_READ
 14238 ;;		_I2C1_DO_SEND_RESTART_WRITE
 14239 ;;		_I2C1_DO_SEND_STOP
 14240 ;;		_I2C1_MasterIsNack
 14241 ;;		_I2C1_MasterSendTxData
 14242 ;;		_rd1RegCompleteHandler
 14243 ;;		_rd2RegCompleteHandler
 14244 ;;		_rdBlkRegCompleteHandler
 14245 ;;		_wr1RegCompleteHandler
 14246 ;;		_wr2RegCompleteHandler
 14247 ;; This function is called by:
 14248 ;;		_I2C1_MasterFsm
 14249 ;; This function uses a non-reentrant model
 14250 ;;
 14251                           
 14252                           
 14253                           ;psect for function _I2C1_DO_TX
 14254  1448                     _I2C1_DO_TX:	
 14255                           
 14256                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 14257                           
 14258                           ;incstack = 0
 14259                           ; Regs used in _I2C1_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14260  1448  319D  25D2  3194   	fcall	_I2C1_MasterIsNack
 14261  144B  3A00               	xorlw	0
 14262  144C  1D03               	btfss	3,2
 14263  144D  2C58               	goto	l4179
 14264  144E  2C7E               	goto	l607
 14265  144F                     l4165:	
 14266                           
 14267                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 14268  144F  319D  2578         	fcall	_I2C1_DO_SEND_RESTART_READ
 14269  1451  0008               	return
 14270  1452                     l4169:	
 14271                           
 14272                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 14273  1452  319D  257C         	fcall	_I2C1_DO_SEND_RESTART_WRITE
 14274  1454  0008               	return
 14275  1455                     l4173:	
 14276                           
 14277                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 14278  1455  319D  2584         	fcall	_I2C1_DO_SEND_STOP
 14279  1457  0008               	return
 14280  1458                     l4179:	
 14281  1458  0023               	movlb	3	; select bank3
 14282  1459  082F               	movf	(low ((_I2C1_Status| (0+256)+15)))^(0+128),w
 14283  145A  0020               	movlb	0	; select bank0
 14284  145B  00A0               	movwf	??_I2C1_DO_TX
 14285  145C  0820               	movf	??_I2C1_DO_TX,w
 14286  145D  00FA               	movwf	I2C1_CallbackReturnReset@funPtr
 14287  145E  3006               	movlw	6
 14288  145F  3EA0               	addlw	(low (_I2C1_Status| (0+256)))& (0+255)
 14289  1460  0086               	movwf	6
 14290  1461  3001               	movlw	1	; select bank3/4
 14291  1462  0087               	movwf	7
 14292  1463  3F41               	moviw [1]fsr1
 14293  1464  008A               	movwf	10
 14294  1465  3F40               	moviw [0]fsr1
 14295  1466  000A               	callw
 14296  1467  3194               	pagesel	$
 14297  1468  0020               	movlb	0	; select bank0
 14298  1469  00A1               	movwf	??_I2C1_DO_TX+1
 14299  146A  01A2               	clrf	??_I2C1_DO_TX+2
 14300                           
 14301                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14302                           ; Switch size 1, requested type "simple"
 14303                           ; Number of cases is 1, Range of values is 0 to 0
 14304                           ; switch strategies available:
 14305                           ; Name         Instructions Cycles
 14306                           ; simple_byte            4     3 (average)
 14307                           ; direct_byte            8     6 (fixed)
 14308                           ; jumptable            260     6 (fixed)
 14309                           ;	Chosen strategy is simple_byte
 14310  146B  0822               	movf	??_I2C1_DO_TX+2,w
 14311  146C  3A00               	xorlw	0	; case 0
 14312  146D  1903               	skipnz
 14313  146E  2C70               	goto	l7075
 14314  146F  2C55               	goto	l4173
 14315  1470                     l7075:	
 14316                           
 14317                           ; Switch size 1, requested type "simple"
 14318                           ; Number of cases is 4, Range of values is 1 to 4
 14319                           ; switch strategies available:
 14320                           ; Name         Instructions Cycles
 14321                           ; simple_byte           13     7 (average)
 14322                           ; direct_byte           17     9 (fixed)
 14323                           ; jumptable            263     9 (fixed)
 14324                           ;	Chosen strategy is simple_byte
 14325  1470  0821               	movf	??_I2C1_DO_TX+1,w
 14326  1471  3A01               	xorlw	1	; case 1
 14327  1472  1903               	skipnz
 14328  1473  2C55               	goto	l4173
 14329  1474  3A03               	xorlw	3	; case 2
 14330  1475  1903               	skipnz
 14331  1476  2C4F               	goto	l4165
 14332  1477  3A01               	xorlw	1	; case 3
 14333  1478  1903               	skipnz
 14334  1479  2C52               	goto	l4169
 14335  147A  3A07               	xorlw	7	; case 4
 14336  147B  1903               	skipnz
 14337  147C  2C55               	goto	l4173
 14338  147D  2C55               	goto	l4173
 14339  147E                     l607:	
 14340                           ;mcc_generated_files/i2c1_master.c: 370:     else
 14341                           
 14342                           
 14343                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 14344  147E  0023               	movlb	3	; select bank3
 14345  147F  103C               	bcf	(_I2C1_Status^(0+384)+28),0
 14346                           
 14347                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 14348  1480  3017               	movlw	23
 14349  1481  3EA0               	addlw	(low (_I2C1_Status| (0+256)))& (0+255)
 14350  1482  0086               	movwf	6
 14351  1483  3001               	movlw	1	; select bank3/4
 14352  1484  0087               	movwf	7
 14353  1485  3F40               	moviw [0]fsr1
 14354  1486  0084               	movwf	4
 14355  1487  0185               	clrf	5
 14356  1488  0A81               	incf	1,f
 14357  1489  0800               	movf	0,w
 14358  148A  319D  25A0  3194   	fcall	_I2C1_MasterSendTxData
 14359                           
 14360                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 14361  148D  3001               	movlw	1
 14362  148E  0023               	movlb	3	; select bank3
 14363  148F  02B8               	subwf	(_I2C1_Status^(0+384)+24),f
 14364  1490  3000               	movlw	0
 14365  1491  3BB9               	subwfb	((_I2C1_Status+1)^(0+384)+24),f
 14366  1492  0838               	movf	(_I2C1_Status^(0+384)+24),w
 14367  1493  0439               	iorwf	((_I2C1_Status+1)^(0+384)+24),w
 14368  1494  1D03               	btfss	3,2
 14369  1495  2C98               	goto	l4187
 14370  1496  3006               	movlw	6
 14371  1497  0008               	return
 14372  1498                     l4187:	
 14373  1498  3003               	movlw	3
 14374  1499  0008               	return
 14375  149A                     __end_of_I2C1_DO_TX:	
 14376                           
 14377                           	psect	text55
 14378  1DEA                     __ptext55:	
 14379 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 14380 ;; Defined at:
 14381 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 14382 ;; Parameters:    Size  Location     Type
 14383 ;;		None
 14384 ;; Auto vars:     Size  Location     Type
 14385 ;;		None
 14386 ;; Return value:  Size  Location     Type
 14387 ;;                  1    wreg      enum E7150
 14388 ;; Registers used:
 14389 ;;		wreg, status,2, status,0, pclath, cstack
 14390 ;; Tracked objects:
 14391 ;;		On entry : 0/0
 14392 ;;		On exit  : 0/0
 14393 ;;		Unchanged: 0/0
 14394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14399 ;;Total ram usage:        0 bytes
 14400 ;; Hardware stack levels used:    1
 14401 ;; Hardware stack levels required when called:    5
 14402 ;; This function calls:
 14403 ;;		_I2C1_MasterSendTxData
 14404 ;; This function is called by:
 14405 ;;		_I2C1_MasterFsm
 14406 ;; This function uses a non-reentrant model
 14407 ;;
 14408                           
 14409                           
 14410                           ;psect for function _I2C1_DO_SEND_ADR_WRITE
 14411  1DEA                     _I2C1_DO_SEND_ADR_WRITE:	
 14412                           
 14413                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 14414                           
 14415                           ;incstack = 0
 14416                           ; Regs used in _I2C1_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 14417  1DEA  0023               	movlb	3	; select bank3
 14418  1DEB  143C               	bsf	(_I2C1_Status^(0+384)+28),0
 14419                           
 14420                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData(I2C1_Status.address <
      +                          < 1);
 14421  1DEC  3536               	lslf	(_I2C1_Status^(0+384)+22),w
 14422  1DED  319D  25A0         	fcall	_I2C1_MasterSendTxData
 14423                           
 14424                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 14425  1DEF  3003               	movlw	3
 14426  1DF0  0008               	return
 14427  1DF1                     __end_of_I2C1_DO_SEND_ADR_WRITE:	
 14428                           
 14429                           	psect	text56
 14430  1E01                     __ptext56:	
 14431 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 14432 ;; Defined at:
 14433 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 14434 ;; Parameters:    Size  Location     Type
 14435 ;;		None
 14436 ;; Auto vars:     Size  Location     Type
 14437 ;;		None
 14438 ;; Return value:  Size  Location     Type
 14439 ;;                  1    wreg      enum E7150
 14440 ;; Registers used:
 14441 ;;		wreg, status,2, status,0, pclath, cstack
 14442 ;; Tracked objects:
 14443 ;;		On entry : 0/0
 14444 ;;		On exit  : 0/0
 14445 ;;		Unchanged: 0/0
 14446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14451 ;;Total ram usage:        0 bytes
 14452 ;; Hardware stack levels used:    1
 14453 ;; Hardware stack levels required when called:    5
 14454 ;; This function calls:
 14455 ;;		_I2C1_MasterSendTxData
 14456 ;; This function is called by:
 14457 ;;		_I2C1_MasterFsm
 14458 ;; This function uses a non-reentrant model
 14459 ;;
 14460                           
 14461                           
 14462                           ;psect for function _I2C1_DO_SEND_ADR_READ
 14463  1E01                     _I2C1_DO_SEND_ADR_READ:	
 14464                           
 14465                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 14466                           
 14467                           ;incstack = 0
 14468                           ; Regs used in _I2C1_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 14469  1E01  0023               	movlb	3	; select bank3
 14470  1E02  143C               	bsf	(_I2C1_Status^(0+384)+28),0
 14471                           
 14472                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData(I2C1_Status.address <
      +                          < 1 | 1);
 14473  1E03  1403               	setc
 14474  1E04  0D36               	rlf	(_I2C1_Status^(0+384)+22),w
 14475  1E05  319D  25A0         	fcall	_I2C1_MasterSendTxData
 14476                           
 14477                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 14478  1E07  3005               	movlw	5
 14479  1E08  0008               	return
 14480  1E09                     __end_of_I2C1_DO_SEND_ADR_READ:	
 14481                           
 14482                           	psect	text57
 14483  1DA5                     __ptext57:	
 14484 ;; *************** function _I2C1_DO_IDLE *****************
 14485 ;; Defined at:
 14486 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 14487 ;; Parameters:    Size  Location     Type
 14488 ;;		None
 14489 ;; Auto vars:     Size  Location     Type
 14490 ;;		None
 14491 ;; Return value:  Size  Location     Type
 14492 ;;                  1    wreg      enum E7150
 14493 ;; Registers used:
 14494 ;;		wreg, status,2
 14495 ;; Tracked objects:
 14496 ;;		On entry : 0/0
 14497 ;;		On exit  : 0/0
 14498 ;;		Unchanged: 0/0
 14499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14504 ;;Total ram usage:        0 bytes
 14505 ;; Hardware stack levels used:    1
 14506 ;; Hardware stack levels required when called:    4
 14507 ;; This function calls:
 14508 ;;		Nothing
 14509 ;; This function is called by:
 14510 ;;		_I2C1_MasterFsm
 14511 ;; This function uses a non-reentrant model
 14512 ;;
 14513                           
 14514                           
 14515                           ;psect for function _I2C1_DO_IDLE
 14516  1DA5                     _I2C1_DO_IDLE:	
 14517                           
 14518                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 14519                           
 14520                           ;incstack = 0
 14521                           ; Regs used in _I2C1_DO_IDLE: [wreg+status,2]
 14522  1DA5  0023               	movlb	3	; select bank3
 14523  1DA6  10BC               	bcf	(_I2C1_Status^(0+384)+28),1
 14524                           
 14525                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 14526  1DA7  01BB               	clrf	(_I2C1_Status^(0+384)+27)
 14527                           
 14528                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 14529  1DA8  300E               	movlw	14
 14530  1DA9  0008               	return
 14531  1DAA                     __end_of_I2C1_DO_IDLE:	
 14532                           
 14533                           	psect	text58
 14534  10D1                     __ptext58:	
 14535 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 14536 ;; Defined at:
 14537 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 14538 ;; Parameters:    Size  Location     Type
 14539 ;;		None
 14540 ;; Auto vars:     Size  Location     Type
 14541 ;;		None
 14542 ;; Return value:  Size  Location     Type
 14543 ;;                  1    wreg      enum E7150
 14544 ;; Registers used:
 14545 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14546 ;; Tracked objects:
 14547 ;;		On entry : 0/0
 14548 ;;		On exit  : 0/0
 14549 ;;		Unchanged: 0/0
 14550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14553 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14554 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14555 ;;Total ram usage:        3 bytes
 14556 ;; Hardware stack levels used:    1
 14557 ;; Hardware stack levels required when called:    7
 14558 ;; This function calls:
 14559 ;;		Absolute function
 14560 ;;		_I2C1_CallbackReturnReset
 14561 ;;		_I2C1_CallbackReturnStop
 14562 ;;		_I2C1_DO_SEND_RESTART
 14563 ;;		_I2C1_DO_SEND_STOP
 14564 ;;		_I2C1_MasterSetIrq
 14565 ;;		_rd1RegCompleteHandler
 14566 ;;		_rd2RegCompleteHandler
 14567 ;;		_rdBlkRegCompleteHandler
 14568 ;;		_wr1RegCompleteHandler
 14569 ;;		_wr2RegCompleteHandler
 14570 ;; This function is called by:
 14571 ;;		_I2C1_MasterFsm
 14572 ;; This function uses a non-reentrant model
 14573 ;;
 14574                           
 14575                           
 14576                           ;psect for function _I2C1_DO_TX_EMPTY
 14577  10D1                     _I2C1_DO_TX_EMPTY:	
 14578                           
 14579                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 14580                           
 14581                           ;incstack = 0
 14582                           ; Regs used in _I2C1_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14583  10D1  0023               	movlb	3	; select bank3
 14584  10D2  15BC               	bsf	(_I2C1_Status^(0+384)+28),3
 14585                           
 14586                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 14587  10D3  28DE               	goto	l4251
 14588  10D4                     l4235:	
 14589                           
 14590                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 14591  10D4  319D  2580         	fcall	_I2C1_DO_SEND_RESTART
 14592  10D6  0008               	return
 14593  10D7                     l4239:	
 14594                           
 14595                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 14596  10D7  319D  2562         	fcall	_I2C1_MasterSetIrq
 14597                           
 14598                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 14599  10D9  3003               	movlw	3
 14600  10DA  0008               	return
 14601  10DB                     l4245:	
 14602                           
 14603                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 14604  10DB  319D  2584         	fcall	_I2C1_DO_SEND_STOP
 14605  10DD  0008               	return
 14606  10DE                     l4251:	
 14607  10DE  082C               	movf	(low ((_I2C1_Status| (0+256)+12)))^(0+128),w
 14608  10DF  0020               	movlb	0	; select bank0
 14609  10E0  00A0               	movwf	??_I2C1_DO_TX_EMPTY
 14610  10E1  0820               	movf	??_I2C1_DO_TX_EMPTY,w
 14611  10E2  00FA               	movwf	I2C1_CallbackReturnReset@funPtr
 14612  10E3  0023               	movlb	3	; select bank3
 14613  10E4  0821               	movf	(_I2C1_Status+1)^(0+384),w
 14614  10E5  008A               	movwf	10
 14615  10E6  0820               	movf	_I2C1_Status^(0+384),w
 14616  10E7  000A               	callw
 14617  10E8  3190               	pagesel	$
 14618  10E9  0020               	movlb	0	; select bank0
 14619  10EA  00A1               	movwf	??_I2C1_DO_TX_EMPTY+1
 14620  10EB  01A2               	clrf	??_I2C1_DO_TX_EMPTY+2
 14621                           
 14622                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14623                           ; Switch size 1, requested type "simple"
 14624                           ; Number of cases is 1, Range of values is 0 to 0
 14625                           ; switch strategies available:
 14626                           ; Name         Instructions Cycles
 14627                           ; simple_byte            4     3 (average)
 14628                           ; direct_byte            8     6 (fixed)
 14629                           ; jumptable            260     6 (fixed)
 14630                           ;	Chosen strategy is simple_byte
 14631  10EC  0822               	movf	??_I2C1_DO_TX_EMPTY+2,w
 14632  10ED  3A00               	xorlw	0	; case 0
 14633  10EE  1903               	skipnz
 14634  10EF  28F1               	goto	l7077
 14635  10F0  28DB               	goto	l4245
 14636  10F1                     l7077:	
 14637                           
 14638                           ; Switch size 1, requested type "simple"
 14639                           ; Number of cases is 4, Range of values is 1 to 4
 14640                           ; switch strategies available:
 14641                           ; Name         Instructions Cycles
 14642                           ; simple_byte           13     7 (average)
 14643                           ; direct_byte           17     9 (fixed)
 14644                           ; jumptable            263     9 (fixed)
 14645                           ;	Chosen strategy is simple_byte
 14646  10F1  0821               	movf	??_I2C1_DO_TX_EMPTY+1,w
 14647  10F2  3A01               	xorlw	1	; case 1
 14648  10F3  1903               	skipnz
 14649  10F4  28DB               	goto	l4245
 14650  10F5  3A03               	xorlw	3	; case 2
 14651  10F6  1903               	skipnz
 14652  10F7  28D4               	goto	l4235
 14653  10F8  3A01               	xorlw	1	; case 3
 14654  10F9  1903               	skipnz
 14655  10FA  28D4               	goto	l4235
 14656  10FB  3A07               	xorlw	7	; case 4
 14657  10FC  1903               	skipnz
 14658  10FD  28D7               	goto	l4239
 14659  10FE  28DB               	goto	l4245
 14660  10FF  0008               	return
 14661  1100                     __end_of_I2C1_DO_TX_EMPTY:	
 14662                           
 14663                           	psect	text59
 14664  1D62                     __ptext59:	
 14665 ;; *************** function _I2C1_MasterSetIrq *****************
 14666 ;; Defined at:
 14667 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 14668 ;; Parameters:    Size  Location     Type
 14669 ;;		None
 14670 ;; Auto vars:     Size  Location     Type
 14671 ;;		None
 14672 ;; Return value:  Size  Location     Type
 14673 ;;                  1    wreg      void 
 14674 ;; Registers used:
 14675 ;;		None
 14676 ;; Tracked objects:
 14677 ;;		On entry : 0/0
 14678 ;;		On exit  : 0/0
 14679 ;;		Unchanged: 0/0
 14680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14685 ;;Total ram usage:        0 bytes
 14686 ;; Hardware stack levels used:    1
 14687 ;; Hardware stack levels required when called:    4
 14688 ;; This function calls:
 14689 ;;		Nothing
 14690 ;; This function is called by:
 14691 ;;		_I2C1_DO_TX_EMPTY
 14692 ;; This function uses a non-reentrant model
 14693 ;;
 14694                           
 14695                           
 14696                           ;psect for function _I2C1_MasterSetIrq
 14697  1D62                     _I2C1_MasterSetIrq:	
 14698                           
 14699                           ;mcc_generated_files/i2c1_master.c: 647:     PIR1bits.SSP1IF = 1;
 14700                           
 14701                           ;incstack = 0
 14702                           ; Regs used in _I2C1_MasterSetIrq: []
 14703  1D62  0020               	movlb	0	; select bank0
 14704  1D63  1591               	bsf	17,3	;volatile
 14705  1D64  0008               	return
 14706  1D65                     __end_of_I2C1_MasterSetIrq:	
 14707                           
 14708                           	psect	text60
 14709  1DD2                     __ptext60:	
 14710 ;; *************** function _I2C1_MasterIsNack *****************
 14711 ;; Defined at:
 14712 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 14713 ;; Parameters:    Size  Location     Type
 14714 ;;		None
 14715 ;; Auto vars:     Size  Location     Type
 14716 ;;		None
 14717 ;; Return value:  Size  Location     Type
 14718 ;;                  1    wreg      _Bool 
 14719 ;; Registers used:
 14720 ;;		wreg, status,2, status,0
 14721 ;; Tracked objects:
 14722 ;;		On entry : 0/0
 14723 ;;		On exit  : 0/0
 14724 ;;		Unchanged: 0/0
 14725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14730 ;;Total ram usage:        0 bytes
 14731 ;; Hardware stack levels used:    1
 14732 ;; Hardware stack levels required when called:    4
 14733 ;; This function calls:
 14734 ;;		Nothing
 14735 ;; This function is called by:
 14736 ;;		_I2C1_MasterFsm
 14737 ;;		_I2C1_DO_TX
 14738 ;; This function uses a non-reentrant model
 14739 ;;
 14740                           
 14741                           
 14742                           ;psect for function _I2C1_MasterIsNack
 14743  1DD2                     _I2C1_MasterIsNack:	
 14744                           
 14745                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 14746                           
 14747                           ;incstack = 0
 14748                           ; Regs used in _I2C1_MasterIsNack: [wreg+status,2+status,0]
 14749  1DD2  0024               	movlb	4	; select bank4
 14750  1DD3  0E16               	swapf	22,w	;volatile
 14751  1DD4  0C89               	rrf	9,f
 14752  1DD5  0C89               	rrf	9,f
 14753  1DD6  3901               	andlw	1
 14754  1DD7  0008               	return
 14755  1DD8                     __end_of_I2C1_MasterIsNack:	
 14756                           
 14757                           	psect	text61
 14758  1DA0                     __ptext61:	
 14759 ;; *************** function _I2C1_MasterSendTxData *****************
 14760 ;; Defined at:
 14761 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 14762 ;; Parameters:    Size  Location     Type
 14763 ;;  data            1    wreg     unsigned char 
 14764 ;; Auto vars:     Size  Location     Type
 14765 ;;  data            1    1[COMMON] unsigned char 
 14766 ;; Return value:  Size  Location     Type
 14767 ;;                  1    wreg      void 
 14768 ;; Registers used:
 14769 ;;		wreg
 14770 ;; Tracked objects:
 14771 ;;		On entry : 0/0
 14772 ;;		On exit  : 0/0
 14773 ;;		Unchanged: 0/0
 14774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14776 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14778 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14779 ;;Total ram usage:        1 bytes
 14780 ;; Hardware stack levels used:    1
 14781 ;; Hardware stack levels required when called:    4
 14782 ;; This function calls:
 14783 ;;		Nothing
 14784 ;; This function is called by:
 14785 ;;		_I2C1_DO_SEND_ADR_READ
 14786 ;;		_I2C1_DO_SEND_ADR_WRITE
 14787 ;;		_I2C1_DO_TX
 14788 ;; This function uses a non-reentrant model
 14789 ;;
 14790                           
 14791                           
 14792                           ;psect for function _I2C1_MasterSendTxData
 14793  1DA0                     _I2C1_MasterSendTxData:	
 14794                           
 14795                           ;incstack = 0
 14796                           ; Regs used in _I2C1_MasterSendTxData: [wreg]
 14797                           ;I2C1_MasterSendTxData@data stored from wreg
 14798  1DA0  00F1               	movwf	I2C1_MasterSendTxData@data
 14799                           
 14800                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 14801  1DA1  0871               	movf	I2C1_MasterSendTxData@data,w
 14802  1DA2  0024               	movlb	4	; select bank4
 14803  1DA3  0091               	movwf	17	;volatile
 14804  1DA4  0008               	return
 14805  1DA5                     __end_of_I2C1_MasterSendTxData:	
 14806                           
 14807                           	psect	text62
 14808  1D74                     __ptext62:	
 14809 ;; *************** function _I2C1_MasterSendAck *****************
 14810 ;; Defined at:
 14811 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 14812 ;; Parameters:    Size  Location     Type
 14813 ;;		None
 14814 ;; Auto vars:     Size  Location     Type
 14815 ;;		None
 14816 ;; Return value:  Size  Location     Type
 14817 ;;                  1    wreg      void 
 14818 ;; Registers used:
 14819 ;;		None
 14820 ;; Tracked objects:
 14821 ;;		On entry : 0/0
 14822 ;;		On exit  : 0/0
 14823 ;;		Unchanged: 0/0
 14824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14829 ;;Total ram usage:        0 bytes
 14830 ;; Hardware stack levels used:    1
 14831 ;; Hardware stack levels required when called:    4
 14832 ;; This function calls:
 14833 ;;		Nothing
 14834 ;; This function is called by:
 14835 ;;		_I2C1_DO_RX
 14836 ;;		_I2C1_DO_RX_ACK
 14837 ;; This function uses a non-reentrant model
 14838 ;;
 14839                           
 14840                           
 14841                           ;psect for function _I2C1_MasterSendAck
 14842  1D74                     _I2C1_MasterSendAck:	
 14843                           
 14844                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 14845                           
 14846                           ;incstack = 0
 14847                           ; Regs used in _I2C1_MasterSendAck: []
 14848  1D74  0024               	movlb	4	; select bank4
 14849  1D75  1296               	bcf	22,5	;volatile
 14850                           
 14851                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 14852  1D76  1616               	bsf	22,4	;volatile
 14853  1D77  0008               	return
 14854  1D78                     __end_of_I2C1_MasterSendAck:	
 14855                           
 14856                           	psect	text63
 14857  1D5F                     __ptext63:	
 14858 ;; *************** function _I2C1_MasterGetRxData *****************
 14859 ;; Defined at:
 14860 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 14861 ;; Parameters:    Size  Location     Type
 14862 ;;		None
 14863 ;; Auto vars:     Size  Location     Type
 14864 ;;		None
 14865 ;; Return value:  Size  Location     Type
 14866 ;;                  1    wreg      unsigned char 
 14867 ;; Registers used:
 14868 ;;		wreg
 14869 ;; Tracked objects:
 14870 ;;		On entry : 0/0
 14871 ;;		On exit  : 0/0
 14872 ;;		Unchanged: 0/0
 14873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14878 ;;Total ram usage:        0 bytes
 14879 ;; Hardware stack levels used:    1
 14880 ;; Hardware stack levels required when called:    4
 14881 ;; This function calls:
 14882 ;;		Nothing
 14883 ;; This function is called by:
 14884 ;;		_I2C1_DO_RX
 14885 ;; This function uses a non-reentrant model
 14886 ;;
 14887                           
 14888                           
 14889                           ;psect for function _I2C1_MasterGetRxData
 14890  1D5F                     _I2C1_MasterGetRxData:	
 14891                           
 14892                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 14893                           
 14894                           ;incstack = 0
 14895                           ; Regs used in _I2C1_MasterGetRxData: [wreg]
 14896  1D5F  0024               	movlb	4	; select bank4
 14897  1D60  0811               	movf	17,w	;volatile
 14898  1D61  0008               	return
 14899  1D62                     __end_of_I2C1_MasterGetRxData:	
 14900                           
 14901                           	psect	text64
 14902  1D70                     __ptext64:	
 14903 ;; *************** function _I2C1_MasterSendNack *****************
 14904 ;; Defined at:
 14905 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 14906 ;; Parameters:    Size  Location     Type
 14907 ;;		None
 14908 ;; Auto vars:     Size  Location     Type
 14909 ;;		None
 14910 ;; Return value:  Size  Location     Type
 14911 ;;                  1    wreg      void 
 14912 ;; Registers used:
 14913 ;;		None
 14914 ;; Tracked objects:
 14915 ;;		On entry : 0/0
 14916 ;;		On exit  : 0/0
 14917 ;;		Unchanged: 0/0
 14918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14923 ;;Total ram usage:        0 bytes
 14924 ;; Hardware stack levels used:    1
 14925 ;; Hardware stack levels required when called:    4
 14926 ;; This function calls:
 14927 ;;		Nothing
 14928 ;; This function is called by:
 14929 ;;		_I2C1_DO_RX_NACK_STOP
 14930 ;;		_I2C1_DO_RX_NACK_RESTART
 14931 ;; This function uses a non-reentrant model
 14932 ;;
 14933                           
 14934                           
 14935                           ;psect for function _I2C1_MasterSendNack
 14936  1D70                     _I2C1_MasterSendNack:	
 14937                           
 14938                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 14939                           
 14940                           ;incstack = 0
 14941                           ; Regs used in _I2C1_MasterSendNack: []
 14942  1D70  0024               	movlb	4	; select bank4
 14943  1D71  1696               	bsf	22,5	;volatile
 14944                           
 14945                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 14946  1D72  1616               	bsf	22,4	;volatile
 14947  1D73  0008               	return
 14948  1D74                     __end_of_I2C1_MasterSendNack:	
 14949                           
 14950                           	psect	text65
 14951  1D5C                     __ptext65:	
 14952 ;; *************** function _I2C1_MasterStartRx *****************
 14953 ;; Defined at:
 14954 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 14955 ;; Parameters:    Size  Location     Type
 14956 ;;		None
 14957 ;; Auto vars:     Size  Location     Type
 14958 ;;		None
 14959 ;; Return value:  Size  Location     Type
 14960 ;;                  1    wreg      void 
 14961 ;; Registers used:
 14962 ;;		None
 14963 ;; Tracked objects:
 14964 ;;		On entry : 0/0
 14965 ;;		On exit  : 0/0
 14966 ;;		Unchanged: 0/0
 14967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14972 ;;Total ram usage:        0 bytes
 14973 ;; Hardware stack levels used:    1
 14974 ;; Hardware stack levels required when called:    4
 14975 ;; This function calls:
 14976 ;;		Nothing
 14977 ;; This function is called by:
 14978 ;;		_I2C1_DO_RCEN
 14979 ;; This function uses a non-reentrant model
 14980 ;;
 14981                           
 14982                           
 14983                           ;psect for function _I2C1_MasterStartRx
 14984  1D5C                     _I2C1_MasterStartRx:	
 14985                           
 14986                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 14987                           
 14988                           ;incstack = 0
 14989                           ; Regs used in _I2C1_MasterStartRx: []
 14990  1D5C  0024               	movlb	4	; select bank4
 14991  1D5D  1596               	bsf	22,3	;volatile
 14992  1D5E  0008               	return
 14993  1D5F                     __end_of_I2C1_MasterStartRx:	
 14994                           
 14995                           	psect	text66
 14996  0002                     __ptext66:	
 14997 ;; *************** function _I2C1_CallbackReturnReset *****************
 14998 ;; Defined at:
 14999 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 15000 ;; Parameters:    Size  Location     Type
 15001 ;;  funPtr          1   10[COMMON] PTR void 
 15002 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 15003 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 15004 ;; Auto vars:     Size  Location     Type
 15005 ;;		None
 15006 ;; Return value:  Size  Location     Type
 15007 ;;                  1    wreg      enum E358
 15008 ;; Registers used:
 15009 ;;		wreg
 15010 ;; Tracked objects:
 15011 ;;		On entry : 0/0
 15012 ;;		On exit  : 0/0
 15013 ;;		Unchanged: 0/0
 15014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15015 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15018 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15019 ;;Total ram usage:        1 bytes
 15020 ;; Hardware stack levels used:    1
 15021 ;; Hardware stack levels required when called:    4
 15022 ;; This function calls:
 15023 ;;		Nothing
 15024 ;; This function is called by:
 15025 ;;		_I2C1_Open
 15026 ;;		_I2C1_DO_TX
 15027 ;;		_I2C1_DO_RX
 15028 ;;		_I2C1_DO_TX_EMPTY
 15029 ;;		_I2C1_DO_ADDRESS_NACK
 15030 ;;		_I2C1_DO_RX_EMPTY
 15031 ;; This function uses a non-reentrant model
 15032 ;;
 15033                           
 15034                           
 15035                           ;psect for function _I2C1_CallbackReturnReset
 15036  0002                     _I2C1_CallbackReturnReset:	
 15037                           
 15038                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 15039                           
 15040                           ;incstack = 0
 15041                           ; Regs used in _I2C1_CallbackReturnReset: [wreg]
 15042  0002  3005               	movlw	5
 15043  0003  0008               	return
 15044  0004                     __end_of_I2C1_CallbackReturnReset:	
 15045                           
 15046                           	psect	text67
 15047  1000                     __ptext67:	
 15048 ;; *************** function _I2C1_CallbackReturnStop *****************
 15049 ;; Defined at:
 15050 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 15051 ;; Parameters:    Size  Location     Type
 15052 ;;  funPtr          1   10[COMMON] PTR void 
 15053 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 15054 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 15055 ;; Auto vars:     Size  Location     Type
 15056 ;;		None
 15057 ;; Return value:  Size  Location     Type
 15058 ;;                  1    wreg      enum E358
 15059 ;; Registers used:
 15060 ;;		wreg
 15061 ;; Tracked objects:
 15062 ;;		On entry : 0/0
 15063 ;;		On exit  : 0/0
 15064 ;;		Unchanged: 0/0
 15065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15066 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15069 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15070 ;;Total ram usage:        1 bytes
 15071 ;; Hardware stack levels used:    1
 15072 ;; Hardware stack levels required when called:    4
 15073 ;; This function calls:
 15074 ;;		Nothing
 15075 ;; This function is called by:
 15076 ;;		_I2C1_Open
 15077 ;;		_I2C1_SetCallback
 15078 ;;		_I2C1_DO_TX
 15079 ;;		_I2C1_DO_RX
 15080 ;;		_I2C1_DO_TX_EMPTY
 15081 ;;		_I2C1_DO_ADDRESS_NACK
 15082 ;;		_I2C1_DO_RX_EMPTY
 15083 ;; This function uses a non-reentrant model
 15084 ;;
 15085                           
 15086                           
 15087                           ;psect for function _I2C1_CallbackReturnStop
 15088  1000                     _I2C1_CallbackReturnStop:	
 15089                           
 15090                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 15091                           
 15092                           ;incstack = 0
 15093                           ; Regs used in _I2C1_CallbackReturnStop: [wreg]
 15094  1000  3001               	movlw	1
 15095  1001  0008               	return
 15096  1002                     __end_of_I2C1_CallbackReturnStop:	
 15097                           
 15098                           	psect	text68
 15099  1EBF                     __ptext68:	
 15100 ;; *************** function _rdBlkRegCompleteHandler *****************
 15101 ;; Defined at:
 15102 ;;		line 170 in file "mcc_generated_files/examples/i2c1_master_example.c"
 15103 ;; Parameters:    Size  Location     Type
 15104 ;;  ptr             1   10[COMMON] PTR void 
 15105 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 15106 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 15107 ;; Auto vars:     Size  Location     Type
 15108 ;;		None
 15109 ;; Return value:  Size  Location     Type
 15110 ;;                  1    wreg      enum E358
 15111 ;; Registers used:
 15112 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15113 ;; Tracked objects:
 15114 ;;		On entry : 0/0
 15115 ;;		On exit  : 0/0
 15116 ;;		Unchanged: 0/0
 15117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15118 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15121 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15122 ;;Total ram usage:        1 bytes
 15123 ;; Hardware stack levels used:    1
 15124 ;; Hardware stack levels required when called:    6
 15125 ;; This function calls:
 15126 ;;		_I2C1_SetBuffer
 15127 ;;		_I2C1_SetDataCompleteCallback
 15128 ;; This function is called by:
 15129 ;;		_I2C1_ReadDataBlock
 15130 ;;		_I2C1_DO_TX
 15131 ;;		_I2C1_DO_RX
 15132 ;;		_I2C1_DO_TX_EMPTY
 15133 ;;		_I2C1_DO_ADDRESS_NACK
 15134 ;;		_I2C1_DO_RX_EMPTY
 15135 ;; This function uses a non-reentrant model
 15136 ;;
 15137                           
 15138                           
 15139                           ;psect for function _rdBlkRegCompleteHandler
 15140  1EBF                     _rdBlkRegCompleteHandler:	
 15141                           
 15142                           ;mcc_generated_files/examples/i2c1_master_example.c: 170: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 171: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 15143                           
 15144                           ;incstack = 0
 15145                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 15146  1EBF  087A               	movf	rdBlkRegCompleteHandler@ptr,w
 15147  1EC0  0086               	movwf	6
 15148  1EC1  0187               	clrf	7
 15149  1EC2  3F40               	moviw [0]fsr1
 15150  1EC3  00F1               	movwf	I2C1_SetBuffer@bufferSize
 15151  1EC4  3F41               	moviw [1]fsr1
 15152  1EC5  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 15153  1EC6  087A               	movf	rdBlkRegCompleteHandler@ptr,w
 15154  1EC7  3E02               	addlw	2
 15155  1EC8  0086               	movwf	6
 15156  1EC9  0187               	clrf	7
 15157  1ECA  0801               	movf	1,w
 15158  1ECB  319E  2671  319E   	fcall	_I2C1_SetBuffer
 15159                           
 15160                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 15161  1ECE  3000               	movlw	0
 15162  1ECF  00F6               	movwf	I2C1_SetDataCompleteCallback@cb
 15163  1ED0  00F7               	movwf	I2C1_SetDataCompleteCallback@cb+1
 15164  1ED1  01F8               	clrf	I2C1_SetDataCompleteCallback@ptr
 15165  1ED2  319E  2659         	fcall	_I2C1_SetDataCompleteCallback
 15166                           
 15167                           ;mcc_generated_files/examples/i2c1_master_example.c: 174:     return I2C1_RESTART_READ;
 15168  1ED4  3002               	movlw	2
 15169  1ED5  0008               	return
 15170  1ED6                     __end_of_rdBlkRegCompleteHandler:	
 15171                           
 15172                           	psect	text69
 15173  1EAF                     __ptext69:	
 15174 ;; *************** function _wr1RegCompleteHandler *****************
 15175 ;; Defined at:
 15176 ;;		line 156 in file "mcc_generated_files/examples/i2c1_master_example.c"
 15177 ;; Parameters:    Size  Location     Type
 15178 ;;  ptr             1   10[COMMON] PTR void 
 15179 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 15180 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 15181 ;; Auto vars:     Size  Location     Type
 15182 ;;		None
 15183 ;; Return value:  Size  Location     Type
 15184 ;;                  1    wreg      enum E358
 15185 ;; Registers used:
 15186 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15187 ;; Tracked objects:
 15188 ;;		On entry : 0/0
 15189 ;;		On exit  : 0/0
 15190 ;;		Unchanged: 0/0
 15191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15192 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15195 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15196 ;;Total ram usage:        1 bytes
 15197 ;; Hardware stack levels used:    1
 15198 ;; Hardware stack levels required when called:    6
 15199 ;; This function calls:
 15200 ;;		_I2C1_SetBuffer
 15201 ;;		_I2C1_SetDataCompleteCallback
 15202 ;; This function is called by:
 15203 ;;		_I2C1_Write1ByteRegister
 15204 ;;		_I2C1_DO_TX
 15205 ;;		_I2C1_DO_RX
 15206 ;;		_I2C1_DO_TX_EMPTY
 15207 ;;		_I2C1_DO_ADDRESS_NACK
 15208 ;;		_I2C1_DO_RX_EMPTY
 15209 ;; This function uses a non-reentrant model
 15210 ;;
 15211                           
 15212                           
 15213                           ;psect for function _wr1RegCompleteHandler
 15214  1EAF                     _wr1RegCompleteHandler:	
 15215                           
 15216                           ;mcc_generated_files/examples/i2c1_master_example.c: 156: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 157: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetBuffer(ptr,1);
 15217                           
 15218                           ;incstack = 0
 15219                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15220  1EAF  3001               	movlw	1
 15221  1EB0  00F1               	movwf	I2C1_SetBuffer@bufferSize
 15222  1EB1  3000               	movlw	0
 15223  1EB2  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 15224  1EB3  087A               	movf	wr1RegCompleteHandler@ptr,w
 15225  1EB4  319E  2671  319E   	fcall	_I2C1_SetBuffer
 15226                           
 15227                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 15228  1EB7  3000               	movlw	0
 15229  1EB8  00F6               	movwf	I2C1_SetDataCompleteCallback@cb
 15230  1EB9  00F7               	movwf	I2C1_SetDataCompleteCallback@cb+1
 15231  1EBA  01F8               	clrf	I2C1_SetDataCompleteCallback@ptr
 15232  1EBB  319E  2659         	fcall	_I2C1_SetDataCompleteCallback
 15233                           
 15234                           ;mcc_generated_files/examples/i2c1_master_example.c: 160:     return I2C1_CONTINUE;
 15235  1EBD  3004               	movlw	4
 15236  1EBE  0008               	return
 15237  1EBF                     __end_of_wr1RegCompleteHandler:	
 15238                           
 15239                           	psect	text70
 15240  1E9F                     __ptext70:	
 15241 ;; *************** function _rd2RegCompleteHandler *****************
 15242 ;; Defined at:
 15243 ;;		line 149 in file "mcc_generated_files/examples/i2c1_master_example.c"
 15244 ;; Parameters:    Size  Location     Type
 15245 ;;  ptr             1   10[COMMON] PTR void 
 15246 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 15247 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 15248 ;; Auto vars:     Size  Location     Type
 15249 ;;		None
 15250 ;; Return value:  Size  Location     Type
 15251 ;;                  1    wreg      enum E358
 15252 ;; Registers used:
 15253 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15254 ;; Tracked objects:
 15255 ;;		On entry : 0/0
 15256 ;;		On exit  : 0/0
 15257 ;;		Unchanged: 0/0
 15258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15259 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15262 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15263 ;;Total ram usage:        1 bytes
 15264 ;; Hardware stack levels used:    1
 15265 ;; Hardware stack levels required when called:    6
 15266 ;; This function calls:
 15267 ;;		_I2C1_SetBuffer
 15268 ;;		_I2C1_SetDataCompleteCallback
 15269 ;; This function is called by:
 15270 ;;		_I2C1_Read2ByteRegister
 15271 ;;		_I2C1_DO_TX
 15272 ;;		_I2C1_DO_RX
 15273 ;;		_I2C1_DO_TX_EMPTY
 15274 ;;		_I2C1_DO_ADDRESS_NACK
 15275 ;;		_I2C1_DO_RX_EMPTY
 15276 ;; This function uses a non-reentrant model
 15277 ;;
 15278                           
 15279                           
 15280                           ;psect for function _rd2RegCompleteHandler
 15281  1E9F                     _rd2RegCompleteHandler:	
 15282                           
 15283                           ;mcc_generated_files/examples/i2c1_master_example.c: 149: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 150: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetBuffer(ptr,2);
 15284                           
 15285                           ;incstack = 0
 15286                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15287  1E9F  3002               	movlw	2
 15288  1EA0  00F1               	movwf	I2C1_SetBuffer@bufferSize
 15289  1EA1  3000               	movlw	0
 15290  1EA2  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 15291  1EA3  087A               	movf	rd2RegCompleteHandler@ptr,w
 15292  1EA4  319E  2671  319E   	fcall	_I2C1_SetBuffer
 15293                           
 15294                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 15295  1EA7  3000               	movlw	0
 15296  1EA8  00F6               	movwf	I2C1_SetDataCompleteCallback@cb
 15297  1EA9  00F7               	movwf	I2C1_SetDataCompleteCallback@cb+1
 15298  1EAA  01F8               	clrf	I2C1_SetDataCompleteCallback@ptr
 15299  1EAB  319E  2659         	fcall	_I2C1_SetDataCompleteCallback
 15300                           
 15301                           ;mcc_generated_files/examples/i2c1_master_example.c: 153:     return I2C1_RESTART_READ;
 15302  1EAD  3002               	movlw	2
 15303  1EAE  0008               	return
 15304  1EAF                     __end_of_rd2RegCompleteHandler:	
 15305                           
 15306                           	psect	text71
 15307  1E8F                     __ptext71:	
 15308 ;; *************** function _rd1RegCompleteHandler *****************
 15309 ;; Defined at:
 15310 ;;		line 142 in file "mcc_generated_files/examples/i2c1_master_example.c"
 15311 ;; Parameters:    Size  Location     Type
 15312 ;;  ptr             1   10[COMMON] PTR void 
 15313 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 15314 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 15315 ;; Auto vars:     Size  Location     Type
 15316 ;;		None
 15317 ;; Return value:  Size  Location     Type
 15318 ;;                  1    wreg      enum E358
 15319 ;; Registers used:
 15320 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15321 ;; Tracked objects:
 15322 ;;		On entry : 0/0
 15323 ;;		On exit  : 0/0
 15324 ;;		Unchanged: 0/0
 15325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15326 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15329 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15330 ;;Total ram usage:        1 bytes
 15331 ;; Hardware stack levels used:    1
 15332 ;; Hardware stack levels required when called:    6
 15333 ;; This function calls:
 15334 ;;		_I2C1_SetBuffer
 15335 ;;		_I2C1_SetDataCompleteCallback
 15336 ;; This function is called by:
 15337 ;;		_I2C1_Read1ByteRegister
 15338 ;;		_I2C1_DO_TX
 15339 ;;		_I2C1_DO_RX
 15340 ;;		_I2C1_DO_TX_EMPTY
 15341 ;;		_I2C1_DO_ADDRESS_NACK
 15342 ;;		_I2C1_DO_RX_EMPTY
 15343 ;; This function uses a non-reentrant model
 15344 ;;
 15345                           
 15346                           
 15347                           ;psect for function _rd1RegCompleteHandler
 15348  1E8F                     _rd1RegCompleteHandler:	
 15349                           
 15350                           ;mcc_generated_files/examples/i2c1_master_example.c: 142: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 143: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 144:     I2C1_SetBuffer(ptr,1);
 15351                           
 15352                           ;incstack = 0
 15353                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15354  1E8F  3001               	movlw	1
 15355  1E90  00F1               	movwf	I2C1_SetBuffer@bufferSize
 15356  1E91  3000               	movlw	0
 15357  1E92  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 15358  1E93  087A               	movf	rd1RegCompleteHandler@ptr,w
 15359  1E94  319E  2671  319E   	fcall	_I2C1_SetBuffer
 15360                           
 15361                           ;mcc_generated_files/examples/i2c1_master_example.c: 145:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 15362  1E97  3000               	movlw	0
 15363  1E98  00F6               	movwf	I2C1_SetDataCompleteCallback@cb
 15364  1E99  00F7               	movwf	I2C1_SetDataCompleteCallback@cb+1
 15365  1E9A  01F8               	clrf	I2C1_SetDataCompleteCallback@ptr
 15366  1E9B  319E  2659         	fcall	_I2C1_SetDataCompleteCallback
 15367                           
 15368                           ;mcc_generated_files/examples/i2c1_master_example.c: 146:     return I2C1_RESTART_READ;
 15369  1E9D  3002               	movlw	2
 15370  1E9E  0008               	return
 15371  1E9F                     __end_of_rd1RegCompleteHandler:	
 15372                           
 15373                           	psect	text72
 15374  1E7F                     __ptext72:	
 15375 ;; *************** function _wr2RegCompleteHandler *****************
 15376 ;; Defined at:
 15377 ;;		line 163 in file "mcc_generated_files/examples/i2c1_master_example.c"
 15378 ;; Parameters:    Size  Location     Type
 15379 ;;  ptr             1   10[COMMON] PTR void 
 15380 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 15381 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 15382 ;; Auto vars:     Size  Location     Type
 15383 ;;		None
 15384 ;; Return value:  Size  Location     Type
 15385 ;;                  1    wreg      enum E358
 15386 ;; Registers used:
 15387 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15388 ;; Tracked objects:
 15389 ;;		On entry : 0/0
 15390 ;;		On exit  : 0/0
 15391 ;;		Unchanged: 0/0
 15392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15393 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15396 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15397 ;;Total ram usage:        1 bytes
 15398 ;; Hardware stack levels used:    1
 15399 ;; Hardware stack levels required when called:    6
 15400 ;; This function calls:
 15401 ;;		_I2C1_SetBuffer
 15402 ;;		_I2C1_SetDataCompleteCallback
 15403 ;; This function is called by:
 15404 ;;		_I2C1_Write2ByteRegister
 15405 ;;		_I2C1_DO_TX
 15406 ;;		_I2C1_DO_RX
 15407 ;;		_I2C1_DO_TX_EMPTY
 15408 ;;		_I2C1_DO_ADDRESS_NACK
 15409 ;;		_I2C1_DO_RX_EMPTY
 15410 ;; This function uses a non-reentrant model
 15411 ;;
 15412                           
 15413                           
 15414                           ;psect for function _wr2RegCompleteHandler
 15415  1E7F                     _wr2RegCompleteHandler:	
 15416                           
 15417                           ;mcc_generated_files/examples/i2c1_master_example.c: 163: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 164: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetBuffer(ptr,2);
 15418                           
 15419                           ;incstack = 0
 15420                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15421  1E7F  3002               	movlw	2
 15422  1E80  00F1               	movwf	I2C1_SetBuffer@bufferSize
 15423  1E81  3000               	movlw	0
 15424  1E82  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 15425  1E83  087A               	movf	wr2RegCompleteHandler@ptr,w
 15426  1E84  319E  2671  319E   	fcall	_I2C1_SetBuffer
 15427                           
 15428                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 15429  1E87  3000               	movlw	0
 15430  1E88  00F6               	movwf	I2C1_SetDataCompleteCallback@cb
 15431  1E89  00F7               	movwf	I2C1_SetDataCompleteCallback@cb+1
 15432  1E8A  01F8               	clrf	I2C1_SetDataCompleteCallback@ptr
 15433  1E8B  319E  2659         	fcall	_I2C1_SetDataCompleteCallback
 15434                           
 15435                           ;mcc_generated_files/examples/i2c1_master_example.c: 167:     return I2C1_CONTINUE;
 15436  1E8D  3004               	movlw	4
 15437  1E8E  0008               	return
 15438  1E8F                     __end_of_wr2RegCompleteHandler:	
 15439                           
 15440                           	psect	text73
 15441  1E59                     __ptext73:	
 15442 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 15443 ;; Defined at:
 15444 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 15445 ;; Parameters:    Size  Location     Type
 15446 ;;  cb              2    6[COMMON] PTR FTN(PTR void ,)enum 
 15447 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 15448 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 15449 ;;  ptr             1    8[COMMON] PTR void 
 15450 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 15451 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 15452 ;; Auto vars:     Size  Location     Type
 15453 ;;		None
 15454 ;; Return value:  Size  Location     Type
 15455 ;;                  1    wreg      void 
 15456 ;; Registers used:
 15457 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15458 ;; Tracked objects:
 15459 ;;		On entry : 0/0
 15460 ;;		On exit  : 0/0
 15461 ;;		Unchanged: 0/0
 15462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15463 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15465 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15466 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15467 ;;Total ram usage:        4 bytes
 15468 ;; Hardware stack levels used:    1
 15469 ;; Hardware stack levels required when called:    5
 15470 ;; This function calls:
 15471 ;;		_I2C1_SetCallback
 15472 ;; This function is called by:
 15473 ;;		_I2C1_Read1ByteRegister
 15474 ;;		_rd1RegCompleteHandler
 15475 ;;		_rd2RegCompleteHandler
 15476 ;;		_wr1RegCompleteHandler
 15477 ;;		_wr2RegCompleteHandler
 15478 ;;		_rdBlkRegCompleteHandler
 15479 ;;		_I2C1_Read2ByteRegister
 15480 ;;		_I2C1_Write1ByteRegister
 15481 ;;		_I2C1_Write2ByteRegister
 15482 ;;		_I2C1_ReadDataBlock
 15483 ;; This function uses a non-reentrant model
 15484 ;;
 15485                           
 15486                           
 15487                           ;psect for function _I2C1_SetDataCompleteCallback
 15488  1E59                     _I2C1_SetDataCompleteCallback:	
 15489                           
 15490                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 15491                           
 15492                           ;incstack = 0
 15493                           ; Regs used in _I2C1_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 15494  1E59  0877               	movf	I2C1_SetDataCompleteCallback@cb+1,w
 15495  1E5A  00F2               	movwf	I2C1_SetCallback@cb+1
 15496  1E5B  0876               	movf	I2C1_SetDataCompleteCallback@cb,w
 15497  1E5C  00F1               	movwf	I2C1_SetCallback@cb
 15498  1E5D  0878               	movf	I2C1_SetDataCompleteCallback@ptr,w
 15499  1E5E  00F9               	movwf	??_I2C1_SetDataCompleteCallback
 15500  1E5F  0879               	movf	??_I2C1_SetDataCompleteCallback,w
 15501  1E60  00F3               	movwf	I2C1_SetCallback@ptr
 15502  1E61  3000               	movlw	0
 15503  1E62  3190  207F         	fcall	_I2C1_SetCallback
 15504  1E64  0008               	return
 15505  1E65                     __end_of_I2C1_SetDataCompleteCallback:	
 15506                           
 15507                           	psect	text74
 15508  107F                     __ptext74:	
 15509 ;; *************** function _I2C1_SetCallback *****************
 15510 ;; Defined at:
 15511 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 15512 ;; Parameters:    Size  Location     Type
 15513 ;;  idx             1    wreg     enum E7168
 15514 ;;  cb              2    1[COMMON] PTR FTN(PTR void ,)enum 
 15515 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 15516 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 15517 ;;  ptr             1    3[COMMON] PTR void 
 15518 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 15519 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 15520 ;; Auto vars:     Size  Location     Type
 15521 ;;  idx             1    5[COMMON] enum E7168
 15522 ;; Return value:  Size  Location     Type
 15523 ;;                  1    wreg      void 
 15524 ;; Registers used:
 15525 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15526 ;; Tracked objects:
 15527 ;;		On entry : 0/0
 15528 ;;		On exit  : 0/0
 15529 ;;		Unchanged: 0/0
 15530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15531 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15532 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15533 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15534 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15535 ;;Total ram usage:        5 bytes
 15536 ;; Hardware stack levels used:    1
 15537 ;; Hardware stack levels required when called:    4
 15538 ;; This function calls:
 15539 ;;		Nothing
 15540 ;; This function is called by:
 15541 ;;		_I2C1_SetDataCompleteCallback
 15542 ;;		_I2C1_SetAddressNackCallback
 15543 ;;		_I2C1_SetWriteCollisionCallback
 15544 ;;		_I2C1_SetDataNackCallback
 15545 ;;		_I2C1_SetTimeoutCallback
 15546 ;; This function uses a non-reentrant model
 15547 ;;
 15548                           
 15549                           
 15550                           ;psect for function _I2C1_SetCallback
 15551  107F                     _I2C1_SetCallback:	
 15552                           
 15553                           ;incstack = 0
 15554                           ; Regs used in _I2C1_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 15555                           ;I2C1_SetCallback@idx stored from wreg
 15556  107F  00F5               	movwf	I2C1_SetCallback@idx
 15557                           
 15558                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 15559  1080  0871               	movf	I2C1_SetCallback@cb,w
 15560  1081  0472               	iorwf	I2C1_SetCallback@cb+1,w
 15561  1082  1903               	btfsc	3,2
 15562  1083  2897               	goto	l4005
 15563                           
 15564                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 15565  1084  3575               	lslf	I2C1_SetCallback@idx,w
 15566  1085  3EA0               	addlw	(low (_I2C1_Status| (0+256)))& (0+255)
 15567  1086  0086               	movwf	6
 15568  1087  3001               	movlw	1	; select bank3/4
 15569  1088  0087               	movwf	7
 15570  1089  0871               	movf	I2C1_SetCallback@cb,w
 15571  108A  3FC0               	movwi [0]fsr1
 15572  108B  0872               	movf	I2C1_SetCallback@cb+1,w
 15573  108C  3FC1               	movwi [1]fsr1
 15574                           
 15575                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 15576  108D  0873               	movf	I2C1_SetCallback@ptr,w
 15577  108E  00F4               	movwf	??_I2C1_SetCallback
 15578  108F  0875               	movf	I2C1_SetCallback@idx,w
 15579  1090  3EAC               	addlw	(low ((_I2C1_Status| (0+256)+12)))& (0+255)
 15580  1091  0086               	movwf	6
 15581  1092  3001               	movlw	1	; select bank3/4
 15582  1093  0087               	movwf	7
 15583  1094  0874               	movf	??_I2C1_SetCallback,w
 15584  1095  0081               	movwf	1
 15585                           
 15586                           ;mcc_generated_files/i2c1_master.c: 304:     }
 15587  1096  0008               	return
 15588  1097                     l4005:	
 15589                           
 15590                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 15591  1097  3575               	lslf	I2C1_SetCallback@idx,w
 15592  1098  3EA0               	addlw	(low (_I2C1_Status| (0+256)))& (0+255)
 15593  1099  0086               	movwf	6
 15594  109A  3001               	movlw	1	; select bank3/4
 15595  109B  0087               	movwf	7
 15596  109C  3000               	movlw	low _I2C1_CallbackReturnStop
 15597  109D  3FC0               	movwi [0]fsr1
 15598  109E  3010               	movlw	high _I2C1_CallbackReturnStop
 15599  109F  3FC1               	movwi [1]fsr1
 15600                           
 15601                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 15602  10A0  0875               	movf	I2C1_SetCallback@idx,w
 15603  10A1  3EAC               	addlw	(low ((_I2C1_Status| (0+256)+12)))& (0+255)
 15604  10A2  0086               	movwf	6
 15605  10A3  3001               	movlw	1	; select bank3/4
 15606  10A4  0087               	movwf	7
 15607  10A5  0181               	clrf	1
 15608  10A6  0008               	return
 15609  10A7                     __end_of_I2C1_SetCallback:	
 15610                           
 15611                           	psect	text75
 15612  1E71                     __ptext75:	
 15613 ;; *************** function _I2C1_SetBuffer *****************
 15614 ;; Defined at:
 15615 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 15616 ;; Parameters:    Size  Location     Type
 15617 ;;  buffer          1    wreg     PTR void 
 15618 ;;		 -> I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteReg
      +ister@data(2), 
 15619 ;;		 -> I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRe
      +gister@returnValue(2), 
 15620 ;;		 -> NULL(0), I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), 
 15621 ;;  bufferSize      2    1[COMMON] unsigned int 
 15622 ;; Auto vars:     Size  Location     Type
 15623 ;;  buffer          1    4[COMMON] PTR void 
 15624 ;;		 -> I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteReg
      +ister@data(2), 
 15625 ;;		 -> I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRe
      +gister@returnValue(2), 
 15626 ;;		 -> NULL(0), I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), 
 15627 ;; Return value:  Size  Location     Type
 15628 ;;                  1    wreg      void 
 15629 ;; Registers used:
 15630 ;;		wreg
 15631 ;; Tracked objects:
 15632 ;;		On entry : 0/0
 15633 ;;		On exit  : 0/0
 15634 ;;		Unchanged: 0/0
 15635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15636 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15637 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15638 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15639 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15640 ;;Total ram usage:        4 bytes
 15641 ;; Hardware stack levels used:    1
 15642 ;; Hardware stack levels required when called:    4
 15643 ;; This function calls:
 15644 ;;		Nothing
 15645 ;; This function is called by:
 15646 ;;		_I2C1_Read1ByteRegister
 15647 ;;		_rd1RegCompleteHandler
 15648 ;;		_rd2RegCompleteHandler
 15649 ;;		_wr1RegCompleteHandler
 15650 ;;		_wr2RegCompleteHandler
 15651 ;;		_rdBlkRegCompleteHandler
 15652 ;;		_I2C1_Read2ByteRegister
 15653 ;;		_I2C1_Write1ByteRegister
 15654 ;;		_I2C1_Write2ByteRegister
 15655 ;;		_I2C1_WriteNBytes
 15656 ;;		_I2C1_ReadNBytes
 15657 ;;		_I2C1_ReadDataBlock
 15658 ;; This function uses a non-reentrant model
 15659 ;;
 15660                           
 15661                           
 15662                           ;psect for function _I2C1_SetBuffer
 15663  1E71                     _I2C1_SetBuffer:	
 15664                           
 15665                           ;incstack = 0
 15666                           ; Regs used in _I2C1_SetBuffer: [wreg]
 15667                           ;I2C1_SetBuffer@buffer stored from wreg
 15668  1E71  00F4               	movwf	I2C1_SetBuffer@buffer
 15669                           
 15670                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 15671  1E72  0023               	movlb	3	; select bank3
 15672  1E73  1DBC               	btfss	(_I2C1_Status^(0+384)+28),3
 15673  1E74  0008               	return
 15674                           
 15675                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 15676  1E75  0874               	movf	I2C1_SetBuffer@buffer,w
 15677  1E76  00F3               	movwf	??_I2C1_SetBuffer
 15678  1E77  0873               	movf	??_I2C1_SetBuffer,w
 15679  1E78  00B7               	movwf	(low ((_I2C1_Status| (0+256)+23)))^(0+128)
 15680                           
 15681                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 15682  1E79  0872               	movf	I2C1_SetBuffer@bufferSize+1,w
 15683  1E7A  00B9               	movwf	((_I2C1_Status+1)^(0+384)+24)
 15684  1E7B  0871               	movf	I2C1_SetBuffer@bufferSize,w
 15685  1E7C  00B8               	movwf	(_I2C1_Status^(0+384)+24)
 15686                           
 15687                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 15688  1E7D  11BC               	bcf	(_I2C1_Status^(0+384)+28),3
 15689  1E7E  0008               	return
 15690  1E7F                     __end_of_I2C1_SetBuffer:	
 15691                           
 15692                           	psect	text76
 15693  1D59                     __ptext76:	
 15694 ;; *************** function _I2C1_MasterStop *****************
 15695 ;; Defined at:
 15696 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 15697 ;; Parameters:    Size  Location     Type
 15698 ;;		None
 15699 ;; Auto vars:     Size  Location     Type
 15700 ;;		None
 15701 ;; Return value:  Size  Location     Type
 15702 ;;                  1    wreg      void 
 15703 ;; Registers used:
 15704 ;;		None
 15705 ;; Tracked objects:
 15706 ;;		On entry : 0/0
 15707 ;;		On exit  : 0/0
 15708 ;;		Unchanged: 0/0
 15709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15714 ;;Total ram usage:        0 bytes
 15715 ;; Hardware stack levels used:    1
 15716 ;; Hardware stack levels required when called:    4
 15717 ;; This function calls:
 15718 ;;		Nothing
 15719 ;; This function is called by:
 15720 ;;		_I2C1_DO_SEND_STOP
 15721 ;; This function uses a non-reentrant model
 15722 ;;
 15723                           
 15724                           
 15725                           ;psect for function _I2C1_MasterStop
 15726  1D59                     _I2C1_MasterStop:	
 15727                           
 15728                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 15729                           
 15730                           ;incstack = 0
 15731                           ; Regs used in _I2C1_MasterStop: []
 15732  1D59  0024               	movlb	4	; select bank4
 15733  1D5A  1516               	bsf	22,2	;volatile
 15734  1D5B  0008               	return
 15735  1D5C                     __end_of_I2C1_MasterStop:	
 15736                           
 15737                           	psect	text77
 15738  1D56                     __ptext77:	
 15739 ;; *************** function _I2C1_MasterEnableRestart *****************
 15740 ;; Defined at:
 15741 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 15742 ;; Parameters:    Size  Location     Type
 15743 ;;		None
 15744 ;; Auto vars:     Size  Location     Type
 15745 ;;		None
 15746 ;; Return value:  Size  Location     Type
 15747 ;;                  1    wreg      void 
 15748 ;; Registers used:
 15749 ;;		None
 15750 ;; Tracked objects:
 15751 ;;		On entry : 0/0
 15752 ;;		On exit  : 0/0
 15753 ;;		Unchanged: 0/0
 15754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15759 ;;Total ram usage:        0 bytes
 15760 ;; Hardware stack levels used:    1
 15761 ;; Hardware stack levels required when called:    4
 15762 ;; This function calls:
 15763 ;;		Nothing
 15764 ;; This function is called by:
 15765 ;;		_I2C1_DO_SEND_RESTART_READ
 15766 ;;		_I2C1_DO_SEND_RESTART_WRITE
 15767 ;;		_I2C1_DO_SEND_RESTART
 15768 ;;		_I2C1_DO_RX_EMPTY
 15769 ;; This function uses a non-reentrant model
 15770 ;;
 15771                           
 15772                           
 15773                           ;psect for function _I2C1_MasterEnableRestart
 15774  1D56                     _I2C1_MasterEnableRestart:	
 15775                           
 15776                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 15777                           
 15778                           ;incstack = 0
 15779                           ; Regs used in _I2C1_MasterEnableRestart: []
 15780  1D56  0024               	movlb	4	; select bank4
 15781  1D57  1496               	bsf	22,1	;volatile
 15782  1D58  0008               	return
 15783  1D59                     __end_of_I2C1_MasterEnableRestart:	
 15784                           
 15785                           	psect	text78
 15786  1D53                     __ptext78:	
 15787 ;; *************** function _I2C1_MasterStart *****************
 15788 ;; Defined at:
 15789 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 15790 ;; Parameters:    Size  Location     Type
 15791 ;;		None
 15792 ;; Auto vars:     Size  Location     Type
 15793 ;;		None
 15794 ;; Return value:  Size  Location     Type
 15795 ;;                  1    wreg      void 
 15796 ;; Registers used:
 15797 ;;		None
 15798 ;; Tracked objects:
 15799 ;;		On entry : 0/0
 15800 ;;		On exit  : 0/0
 15801 ;;		Unchanged: 0/0
 15802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15807 ;;Total ram usage:        0 bytes
 15808 ;; Hardware stack levels used:    1
 15809 ;; Hardware stack levels required when called:    4
 15810 ;; This function calls:
 15811 ;;		Nothing
 15812 ;; This function is called by:
 15813 ;;		_I2C1_MasterOperation
 15814 ;; This function uses a non-reentrant model
 15815 ;;
 15816                           
 15817                           
 15818                           ;psect for function _I2C1_MasterStart
 15819  1D53                     _I2C1_MasterStart:	
 15820                           
 15821                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 15822                           
 15823                           ;incstack = 0
 15824                           ; Regs used in _I2C1_MasterStart: []
 15825  1D53  0024               	movlb	4	; select bank4
 15826  1D54  1416               	bsf	22,0	;volatile
 15827  1D55  0008               	return
 15828  1D56                     __end_of_I2C1_MasterStart:	
 15829                           
 15830                           	psect	text79
 15831  1F4C                     __ptext79:	
 15832 ;; *************** function _I2C1_Close *****************
 15833 ;; Defined at:
 15834 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 15835 ;; Parameters:    Size  Location     Type
 15836 ;;		None
 15837 ;; Auto vars:     Size  Location     Type
 15838 ;;  returnValue     1    2[COMMON] enum E353
 15839 ;; Return value:  Size  Location     Type
 15840 ;;                  1    wreg      enum E353
 15841 ;; Registers used:
 15842 ;;		wreg, status,2, status,0, pclath, cstack
 15843 ;; Tracked objects:
 15844 ;;		On entry : 0/0
 15845 ;;		On exit  : 0/0
 15846 ;;		Unchanged: 0/0
 15847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15849 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15850 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15851 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15852 ;;Total ram usage:        2 bytes
 15853 ;; Hardware stack levels used:    1
 15854 ;; Hardware stack levels required when called:    5
 15855 ;; This function calls:
 15856 ;;		_I2C1_MasterClearIrq
 15857 ;;		_I2C1_MasterClose
 15858 ;;		_I2C1_MasterDisableIrq
 15859 ;; This function is called by:
 15860 ;;		_I2C1_Read1ByteRegister
 15861 ;;		_I2C1_Read2ByteRegister
 15862 ;;		_I2C1_Write1ByteRegister
 15863 ;;		_I2C1_Write2ByteRegister
 15864 ;;		_I2C1_WriteNBytes
 15865 ;;		_I2C1_ReadNBytes
 15866 ;;		_I2C1_ReadDataBlock
 15867 ;; This function uses a non-reentrant model
 15868 ;;
 15869                           
 15870                           
 15871                           ;psect for function _I2C1_Close
 15872  1F4C                     _I2C1_Close:	
 15873                           
 15874                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 15875                           
 15876                           ;incstack = 0
 15877                           ; Regs used in _I2C1_Close: [wreg+status,2+status,0+pclath+cstack]
 15878  1F4C  01F2               	clrf	I2C1_Close@returnValue
 15879  1F4D  0AF2               	incf	I2C1_Close@returnValue,f
 15880                           
 15881                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 15882  1F4E  0023               	movlb	3	; select bank3
 15883  1F4F  18BC               	btfsc	(_I2C1_Status^(0+384)+28),1
 15884  1F50  2F63               	goto	l5553
 15885                           
 15886                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 15887  1F51  113C               	bcf	(_I2C1_Status^(0+384)+28),2
 15888                           
 15889                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 15890  1F52  30FF               	movlw	255
 15891  1F53  00F1               	movwf	??_I2C1_Close
 15892  1F54  0871               	movf	??_I2C1_Close,w
 15893  1F55  00B6               	movwf	(_I2C1_Status^(0+384)+22)
 15894                           
 15895                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 15896  1F56  319D  254A  319F   	fcall	_I2C1_MasterClearIrq
 15897                           
 15898                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 15899  1F59  319D  2550  319F   	fcall	_I2C1_MasterDisableIrq
 15900                           
 15901                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 15902  1F5C  319D  254D         	fcall	_I2C1_MasterClose
 15903                           
 15904                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 15905  1F5E  0023               	movlb	3	; select bank3
 15906  1F5F  083B               	movf	(_I2C1_Status^(0+384)+27),w
 15907  1F60  00F1               	movwf	??_I2C1_Close
 15908  1F61  0871               	movf	??_I2C1_Close,w
 15909  1F62  00F2               	movwf	I2C1_Close@returnValue
 15910  1F63                     l5553:	
 15911                           
 15912                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 15913  1F63  0872               	movf	I2C1_Close@returnValue,w
 15914  1F64  0008               	return
 15915  1F65                     __end_of_I2C1_Close:	
 15916                           
 15917                           	psect	text80
 15918  1D50                     __ptext80:	
 15919 ;; *************** function _I2C1_MasterDisableIrq *****************
 15920 ;; Defined at:
 15921 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 15922 ;; Parameters:    Size  Location     Type
 15923 ;;		None
 15924 ;; Auto vars:     Size  Location     Type
 15925 ;;		None
 15926 ;; Return value:  Size  Location     Type
 15927 ;;                  1    wreg      void 
 15928 ;; Registers used:
 15929 ;;		None
 15930 ;; Tracked objects:
 15931 ;;		On entry : 0/0
 15932 ;;		On exit  : 0/0
 15933 ;;		Unchanged: 0/0
 15934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15939 ;;Total ram usage:        0 bytes
 15940 ;; Hardware stack levels used:    1
 15941 ;; Hardware stack levels required when called:    4
 15942 ;; This function calls:
 15943 ;;		Nothing
 15944 ;; This function is called by:
 15945 ;;		_I2C1_Close
 15946 ;;		_I2C1_SetTimeOut
 15947 ;; This function uses a non-reentrant model
 15948 ;;
 15949                           
 15950                           
 15951                           ;psect for function _I2C1_MasterDisableIrq
 15952  1D50                     _I2C1_MasterDisableIrq:	
 15953                           
 15954                           ;mcc_generated_files/i2c1_master.c: 637:     PIE1bits.SSP1IE = 0;
 15955                           
 15956                           ;incstack = 0
 15957                           ; Regs used in _I2C1_MasterDisableIrq: []
 15958  1D50  0021               	movlb	1	; select bank1
 15959  1D51  1191               	bcf	17,3	;volatile
 15960  1D52  0008               	return
 15961  1D53                     __end_of_I2C1_MasterDisableIrq:	
 15962                           
 15963                           	psect	text81
 15964  1D4D                     __ptext81:	
 15965 ;; *************** function _I2C1_MasterClose *****************
 15966 ;; Defined at:
 15967 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 15968 ;; Parameters:    Size  Location     Type
 15969 ;;		None
 15970 ;; Auto vars:     Size  Location     Type
 15971 ;;		None
 15972 ;; Return value:  Size  Location     Type
 15973 ;;                  1    wreg      void 
 15974 ;; Registers used:
 15975 ;;		None
 15976 ;; Tracked objects:
 15977 ;;		On entry : 0/0
 15978 ;;		On exit  : 0/0
 15979 ;;		Unchanged: 0/0
 15980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15985 ;;Total ram usage:        0 bytes
 15986 ;; Hardware stack levels used:    1
 15987 ;; Hardware stack levels required when called:    4
 15988 ;; This function calls:
 15989 ;;		Nothing
 15990 ;; This function is called by:
 15991 ;;		_I2C1_Close
 15992 ;; This function uses a non-reentrant model
 15993 ;;
 15994                           
 15995                           
 15996                           ;psect for function _I2C1_MasterClose
 15997  1D4D                     _I2C1_MasterClose:	
 15998                           
 15999                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 16000                           
 16001                           ;incstack = 0
 16002                           ; Regs used in _I2C1_MasterClose: []
 16003  1D4D  0024               	movlb	4	; select bank4
 16004  1D4E  1295               	bcf	21,5	;volatile
 16005  1D4F  0008               	return
 16006  1D50                     __end_of_I2C1_MasterClose:	
 16007                           
 16008                           	psect	text82
 16009  1D4A                     __ptext82:	
 16010 ;; *************** function _I2C1_MasterClearIrq *****************
 16011 ;; Defined at:
 16012 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 16013 ;; Parameters:    Size  Location     Type
 16014 ;;		None
 16015 ;; Auto vars:     Size  Location     Type
 16016 ;;		None
 16017 ;; Return value:  Size  Location     Type
 16018 ;;                  1    wreg      void 
 16019 ;; Registers used:
 16020 ;;		None
 16021 ;; Tracked objects:
 16022 ;;		On entry : 0/0
 16023 ;;		On exit  : 0/0
 16024 ;;		Unchanged: 0/0
 16025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16030 ;;Total ram usage:        0 bytes
 16031 ;; Hardware stack levels used:    1
 16032 ;; Hardware stack levels required when called:    4
 16033 ;; This function calls:
 16034 ;;		Nothing
 16035 ;; This function is called by:
 16036 ;;		_I2C1_Open
 16037 ;;		_I2C1_Close
 16038 ;;		_I2C1_MasterFsm
 16039 ;; This function uses a non-reentrant model
 16040 ;;
 16041                           
 16042                           
 16043                           ;psect for function _I2C1_MasterClearIrq
 16044  1D4A                     _I2C1_MasterClearIrq:	
 16045                           
 16046                           ;mcc_generated_files/i2c1_master.c: 642:     PIR1bits.SSP1IF = 0;
 16047                           
 16048                           ;incstack = 0
 16049                           ; Regs used in _I2C1_MasterClearIrq: []
 16050  1D4A  0020               	movlb	0	; select bank0
 16051  1D4B  1191               	bcf	17,3	;volatile
 16052  1D4C  0008               	return
 16053  1D4D                     __end_of_I2C1_MasterClearIrq:	
 16054                           
 16055                           	psect	text83
 16056  1F1C                     __ptext83:	
 16057 ;; *************** function _SYSTEM_Initialize *****************
 16058 ;; Defined at:
 16059 ;;		line 50 in file "mcc_generated_files/mcc.c"
 16060 ;; Parameters:    Size  Location     Type
 16061 ;;		None
 16062 ;; Auto vars:     Size  Location     Type
 16063 ;;		None
 16064 ;; Return value:  Size  Location     Type
 16065 ;;                  1    wreg      void 
 16066 ;; Registers used:
 16067 ;;		wreg, status,2, status,0, pclath, cstack
 16068 ;; Tracked objects:
 16069 ;;		On entry : 0/0
 16070 ;;		On exit  : 0/0
 16071 ;;		Unchanged: 0/0
 16072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16077 ;;Total ram usage:        0 bytes
 16078 ;; Hardware stack levels used:    1
 16079 ;; Hardware stack levels required when called:    6
 16080 ;; This function calls:
 16081 ;;		_EUSART_Initialize
 16082 ;;		_I2C1_Initialize
 16083 ;;		_OSCILLATOR_Initialize
 16084 ;;		_PIN_MANAGER_Initialize
 16085 ;;		_PMD_Initialize
 16086 ;;		_PWM5_Initialize
 16087 ;;		_TMR2_Initialize
 16088 ;;		_WDT_Initialize
 16089 ;; This function is called by:
 16090 ;;		_main
 16091 ;; This function uses a non-reentrant model
 16092 ;;
 16093                           
 16094                           
 16095                           ;psect for function _SYSTEM_Initialize
 16096  1F1C                     _SYSTEM_Initialize:	
 16097                           
 16098                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 16099                           
 16100                           ;incstack = 0
 16101                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16102  1F1C  319D  25F1  319F   	fcall	_PMD_Initialize
 16103                           
 16104                           ;mcc_generated_files/mcc.c: 54:     I2C1_Initialize();
 16105  1F1F  319E  2609  319F   	fcall	_I2C1_Initialize
 16106                           
 16107                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 16108  1F22  3191  21CA  319F   	fcall	_PIN_MANAGER_Initialize
 16109                           
 16110                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 16111  1F25  319E  2612  319F   	fcall	_OSCILLATOR_Initialize
 16112                           
 16113                           ;mcc_generated_files/mcc.c: 57:     WDT_Initialize();
 16114  1F28  319D  256C  319F   	fcall	_WDT_Initialize
 16115                           
 16116                           ;mcc_generated_files/mcc.c: 58:     PWM5_Initialize();
 16117  1F2B  319E  264D  319F   	fcall	_PWM5_Initialize
 16118                           
 16119                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 16120  1F2E  319D  25F9  319F   	fcall	_TMR2_Initialize
 16121                           
 16122                           ;mcc_generated_files/mcc.c: 60:     EUSART_Initialize();
 16123  1F31  3192  2241         	fcall	_EUSART_Initialize
 16124  1F33  0008               	return
 16125  1F34                     __end_of_SYSTEM_Initialize:	
 16126                           
 16127                           	psect	text84
 16128  1D6C                     __ptext84:	
 16129 ;; *************** function _WDT_Initialize *****************
 16130 ;; Defined at:
 16131 ;;		line 77 in file "mcc_generated_files/mcc.c"
 16132 ;; Parameters:    Size  Location     Type
 16133 ;;		None
 16134 ;; Auto vars:     Size  Location     Type
 16135 ;;		None
 16136 ;; Return value:  Size  Location     Type
 16137 ;;                  1    wreg      void 
 16138 ;; Registers used:
 16139 ;;		wreg
 16140 ;; Tracked objects:
 16141 ;;		On entry : 0/0
 16142 ;;		On exit  : 0/0
 16143 ;;		Unchanged: 0/0
 16144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16149 ;;Total ram usage:        0 bytes
 16150 ;; Hardware stack levels used:    1
 16151 ;; Hardware stack levels required when called:    4
 16152 ;; This function calls:
 16153 ;;		Nothing
 16154 ;; This function is called by:
 16155 ;;		_SYSTEM_Initialize
 16156 ;; This function uses a non-reentrant model
 16157 ;;
 16158                           
 16159                           
 16160                           ;psect for function _WDT_Initialize
 16161  1D6C                     _WDT_Initialize:	
 16162                           
 16163                           ;mcc_generated_files/mcc.c: 80:     WDTCON = 0x16;
 16164                           
 16165                           ;incstack = 0
 16166                           ; Regs used in _WDT_Initialize: [wreg]
 16167  1D6C  3016               	movlw	22
 16168  1D6D  0021               	movlb	1	; select bank1
 16169  1D6E  0097               	movwf	23	;volatile
 16170  1D6F  0008               	return
 16171  1D70                     __end_of_WDT_Initialize:	
 16172                           
 16173                           	psect	text85
 16174  1DF9                     __ptext85:	
 16175 ;; *************** function _TMR2_Initialize *****************
 16176 ;; Defined at:
 16177 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 16178 ;; Parameters:    Size  Location     Type
 16179 ;;		None
 16180 ;; Auto vars:     Size  Location     Type
 16181 ;;		None
 16182 ;; Return value:  Size  Location     Type
 16183 ;;                  1    wreg      void 
 16184 ;; Registers used:
 16185 ;;		wreg, status,2
 16186 ;; Tracked objects:
 16187 ;;		On entry : 0/0
 16188 ;;		On exit  : 0/0
 16189 ;;		Unchanged: 0/0
 16190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16195 ;;Total ram usage:        0 bytes
 16196 ;; Hardware stack levels used:    1
 16197 ;; Hardware stack levels required when called:    4
 16198 ;; This function calls:
 16199 ;;		Nothing
 16200 ;; This function is called by:
 16201 ;;		_SYSTEM_Initialize
 16202 ;; This function uses a non-reentrant model
 16203 ;;
 16204                           
 16205                           
 16206                           ;psect for function _TMR2_Initialize
 16207  1DF9                     _TMR2_Initialize:	
 16208                           
 16209                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0x68;
 16210                           
 16211                           ;incstack = 0
 16212                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 16213  1DF9  3068               	movlw	104
 16214  1DFA  0020               	movlb	0	; select bank0
 16215  1DFB  009E               	movwf	30	;volatile
 16216                           
 16217                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
 16218  1DFC  019D               	clrf	29	;volatile
 16219                           
 16220                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
 16221  1DFD  1091               	bcf	17,1	;volatile
 16222                           
 16223                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x05;
 16224  1DFE  3005               	movlw	5
 16225  1DFF  009F               	movwf	31	;volatile
 16226  1E00  0008               	return
 16227  1E01                     __end_of_TMR2_Initialize:	
 16228                           
 16229                           	psect	text86
 16230  1E4D                     __ptext86:	
 16231 ;; *************** function _PWM5_Initialize *****************
 16232 ;; Defined at:
 16233 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 16234 ;; Parameters:    Size  Location     Type
 16235 ;;		None
 16236 ;; Auto vars:     Size  Location     Type
 16237 ;;		None
 16238 ;; Return value:  Size  Location     Type
 16239 ;;                  1    wreg      void 
 16240 ;; Registers used:
 16241 ;;		wreg, status,2, status,0
 16242 ;; Tracked objects:
 16243 ;;		On entry : 0/0
 16244 ;;		On exit  : 0/0
 16245 ;;		Unchanged: 0/0
 16246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16251 ;;Total ram usage:        0 bytes
 16252 ;; Hardware stack levels used:    1
 16253 ;; Hardware stack levels required when called:    4
 16254 ;; This function calls:
 16255 ;;		Nothing
 16256 ;; This function is called by:
 16257 ;;		_SYSTEM_Initialize
 16258 ;; This function uses a non-reentrant model
 16259 ;;
 16260                           
 16261                           
 16262                           ;psect for function _PWM5_Initialize
 16263  1E4D                     _PWM5_Initialize:	
 16264                           
 16265                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
 16266                           
 16267                           ;incstack = 0
 16268                           ; Regs used in _PWM5_Initialize: [wreg+status,2+status,0]
 16269  1E4D  3080               	movlw	128
 16270  1E4E  002C               	movlb	12	; select bank12
 16271  1E4F  0099               	movwf	25	;volatile
 16272                           
 16273                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x34;
 16274  1E50  3034               	movlw	52
 16275  1E51  0098               	movwf	24	;volatile
 16276                           
 16277                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0x40;
 16278  1E52  3040               	movlw	64
 16279  1E53  0097               	movwf	23	;volatile
 16280                           
 16281                           ;mcc_generated_files/pwm5.c: 71:     PWMTMRSbits.P5TSEL = 1;
 16282  1E54  081F               	movf	31,w	;volatile
 16283  1E55  39FC               	andlw	-4
 16284  1E56  3801               	iorlw	1
 16285  1E57  009F               	movwf	31	;volatile
 16286  1E58  0008               	return
 16287  1E59                     __end_of_PWM5_Initialize:	
 16288                           
 16289                           	psect	text87
 16290  1DF1                     __ptext87:	
 16291 ;; *************** function _PMD_Initialize *****************
 16292 ;; Defined at:
 16293 ;;		line 83 in file "mcc_generated_files/mcc.c"
 16294 ;; Parameters:    Size  Location     Type
 16295 ;;		None
 16296 ;; Auto vars:     Size  Location     Type
 16297 ;;		None
 16298 ;; Return value:  Size  Location     Type
 16299 ;;                  1    wreg      void 
 16300 ;; Registers used:
 16301 ;;		status,2
 16302 ;; Tracked objects:
 16303 ;;		On entry : 0/0
 16304 ;;		On exit  : 0/0
 16305 ;;		Unchanged: 0/0
 16306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16311 ;;Total ram usage:        0 bytes
 16312 ;; Hardware stack levels used:    1
 16313 ;; Hardware stack levels required when called:    4
 16314 ;; This function calls:
 16315 ;;		Nothing
 16316 ;; This function is called by:
 16317 ;;		_SYSTEM_Initialize
 16318 ;; This function uses a non-reentrant model
 16319 ;;
 16320                           
 16321                           
 16322                           ;psect for function _PMD_Initialize
 16323  1DF1                     _PMD_Initialize:	
 16324                           
 16325                           ;mcc_generated_files/mcc.c: 86:     PMD0 = 0x00;
 16326                           
 16327                           ;incstack = 0
 16328                           ; Regs used in _PMD_Initialize: [status,2]
 16329  1DF1  0032               	movlb	18	; select bank18
 16330  1DF2  0191               	clrf	17	;volatile
 16331                           
 16332                           ;mcc_generated_files/mcc.c: 88:     PMD1 = 0x00;
 16333  1DF3  0192               	clrf	18	;volatile
 16334                           
 16335                           ;mcc_generated_files/mcc.c: 90:     PMD2 = 0x00;
 16336  1DF4  0193               	clrf	19	;volatile
 16337                           
 16338                           ;mcc_generated_files/mcc.c: 92:     PMD3 = 0x00;
 16339  1DF5  0194               	clrf	20	;volatile
 16340                           
 16341                           ;mcc_generated_files/mcc.c: 94:     PMD4 = 0x00;
 16342  1DF6  0195               	clrf	21	;volatile
 16343                           
 16344                           ;mcc_generated_files/mcc.c: 96:     PMD5 = 0x00;
 16345  1DF7  0196               	clrf	22	;volatile
 16346  1DF8  0008               	return
 16347  1DF9                     __end_of_PMD_Initialize:	
 16348                           
 16349                           	psect	text88
 16350  11CA                     __ptext88:	
 16351 ;; *************** function _PIN_MANAGER_Initialize *****************
 16352 ;; Defined at:
 16353 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 16354 ;; Parameters:    Size  Location     Type
 16355 ;;		None
 16356 ;; Auto vars:     Size  Location     Type
 16357 ;;		None
 16358 ;; Return value:  Size  Location     Type
 16359 ;;                  1    wreg      void 
 16360 ;; Registers used:
 16361 ;;		wreg, status,2
 16362 ;; Tracked objects:
 16363 ;;		On entry : 0/0
 16364 ;;		On exit  : 0/0
 16365 ;;		Unchanged: 0/0
 16366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16371 ;;Total ram usage:        0 bytes
 16372 ;; Hardware stack levels used:    1
 16373 ;; Hardware stack levels required when called:    4
 16374 ;; This function calls:
 16375 ;;		Nothing
 16376 ;; This function is called by:
 16377 ;;		_SYSTEM_Initialize
 16378 ;; This function uses a non-reentrant model
 16379 ;;
 16380                           
 16381                           
 16382                           ;psect for function _PIN_MANAGER_Initialize
 16383  11CA                     _PIN_MANAGER_Initialize:	
 16384                           
 16385                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 16386                           
 16387                           ;incstack = 0
 16388                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 16389  11CA  0022               	movlb	2	; select bank2
 16390  11CB  018C               	clrf	12	;volatile
 16391                           
 16392                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 16393  11CC  018D               	clrf	13	;volatile
 16394                           
 16395                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 16396  11CD  018E               	clrf	14	;volatile
 16397                           
 16398                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x37;
 16399  11CE  3037               	movlw	55
 16400  11CF  0021               	movlb	1	; select bank1
 16401  11D0  008C               	movwf	12	;volatile
 16402                           
 16403                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x70;
 16404  11D1  3070               	movlw	112
 16405  11D2  008D               	movwf	13	;volatile
 16406                           
 16407                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xB7;
 16408  11D3  30B7               	movlw	183
 16409  11D4  008E               	movwf	14	;volatile
 16410                           
 16411                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xE7;
 16412  11D5  30E7               	movlw	231
 16413  11D6  0023               	movlb	3	; select bank3
 16414  11D7  008E               	movwf	14	;volatile
 16415                           
 16416                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x80;
 16417  11D8  3080               	movlw	128
 16418  11D9  008D               	movwf	13	;volatile
 16419                           
 16420                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x37;
 16421  11DA  3037               	movlw	55
 16422  11DB  008C               	movwf	12	;volatile
 16423                           
 16424                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
 16425  11DC  0024               	movlb	4	; select bank4
 16426  11DD  018D               	clrf	13	;volatile
 16427                           
 16428                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
 16429  11DE  018C               	clrf	12	;volatile
 16430                           
 16431                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
 16432  11DF  018E               	clrf	14	;volatile
 16433                           
 16434                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
 16435  11E0  0025               	movlb	5	; select bank5
 16436  11E1  018C               	clrf	12	;volatile
 16437                           
 16438                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
 16439  11E2  018D               	clrf	13	;volatile
 16440                           
 16441                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
 16442  11E3  018E               	clrf	14	;volatile
 16443                           
 16444                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
 16445  11E4  3037               	movlw	55
 16446  11E5  0026               	movlb	6	; select bank6
 16447  11E6  008C               	movwf	12	;volatile
 16448                           
 16449                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
 16450  11E7  30F0               	movlw	240
 16451  11E8  008D               	movwf	13	;volatile
 16452                           
 16453                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
 16454  11E9  30FF               	movlw	255
 16455  11EA  008E               	movwf	14	;volatile
 16456                           
 16457                           ;mcc_generated_files/pin_manager.c: 102:     INLVLA = 0x3F;
 16458  11EB  303F               	movlw	63
 16459  11EC  0027               	movlb	7	; select bank7
 16460  11ED  008C               	movwf	12	;volatile
 16461                           
 16462                           ;mcc_generated_files/pin_manager.c: 103:     INLVLB = 0xF0;
 16463  11EE  30F0               	movlw	240
 16464  11EF  008D               	movwf	13	;volatile
 16465                           
 16466                           ;mcc_generated_files/pin_manager.c: 104:     INLVLC = 0xFF;
 16467  11F0  30FF               	movlw	255
 16468  11F1  008E               	movwf	14	;volatile
 16469                           
 16470                           ;mcc_generated_files/pin_manager.c: 113:     RXPPS = 0x0E;
 16471  11F2  300E               	movlw	14
 16472  11F3  003C               	movlb	28	; select bank28
 16473  11F4  00A4               	movwf	36	;volatile
 16474                           
 16475                           ;mcc_generated_files/pin_manager.c: 114:     SSP1CLKPPS = 0x0D;
 16476  11F5  300D               	movlw	13
 16477  11F6  00A0               	movwf	32	;volatile
 16478                           
 16479                           ;mcc_generated_files/pin_manager.c: 115:     RB7PPS = 0x14;
 16480  11F7  3014               	movlw	20
 16481  11F8  003D               	movlb	29	; select bank29
 16482  11F9  009F               	movwf	31	;volatile
 16483                           
 16484                           ;mcc_generated_files/pin_manager.c: 116:     RB5PPS = 0x18;
 16485  11FA  3018               	movlw	24
 16486  11FB  009D               	movwf	29	;volatile
 16487                           
 16488                           ;mcc_generated_files/pin_manager.c: 117:     RB4PPS = 0x19;
 16489  11FC  3019               	movlw	25
 16490  11FD  009C               	movwf	28	;volatile
 16491                           
 16492                           ;mcc_generated_files/pin_manager.c: 118:     RC6PPS = 0x02;
 16493  11FE  3002               	movlw	2
 16494  11FF  00A6               	movwf	38	;volatile
 16495                           
 16496                           ;mcc_generated_files/pin_manager.c: 119:     SSP1DATPPS = 0x0C;
 16497  1200  300C               	movlw	12
 16498  1201  003C               	movlb	28	; select bank28
 16499  1202  00A1               	movwf	33	;volatile
 16500  1203  0008               	return
 16501  1204                     __end_of_PIN_MANAGER_Initialize:	
 16502                           
 16503                           	psect	text89
 16504  1E12                     __ptext89:	
 16505 ;; *************** function _OSCILLATOR_Initialize *****************
 16506 ;; Defined at:
 16507 ;;		line 63 in file "mcc_generated_files/mcc.c"
 16508 ;; Parameters:    Size  Location     Type
 16509 ;;		None
 16510 ;; Auto vars:     Size  Location     Type
 16511 ;;		None
 16512 ;; Return value:  Size  Location     Type
 16513 ;;                  1    wreg      void 
 16514 ;; Registers used:
 16515 ;;		wreg, status,2
 16516 ;; Tracked objects:
 16517 ;;		On entry : 0/0
 16518 ;;		On exit  : 0/0
 16519 ;;		Unchanged: 0/0
 16520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16525 ;;Total ram usage:        0 bytes
 16526 ;; Hardware stack levels used:    1
 16527 ;; Hardware stack levels required when called:    4
 16528 ;; This function calls:
 16529 ;;		Nothing
 16530 ;; This function is called by:
 16531 ;;		_SYSTEM_Initialize
 16532 ;; This function uses a non-reentrant model
 16533 ;;
 16534                           
 16535                           
 16536                           ;psect for function _OSCILLATOR_Initialize
 16537  1E12                     _OSCILLATOR_Initialize:	
 16538                           
 16539                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x60;
 16540                           
 16541                           ;incstack = 0
 16542                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 16543  1E12  3060               	movlw	96
 16544  1E13  0032               	movlb	18	; select bank18
 16545  1E14  0099               	movwf	25	;volatile
 16546                           
 16547                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
 16548  1E15  019B               	clrf	27	;volatile
 16549                           
 16550                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
 16551  1E16  019D               	clrf	29	;volatile
 16552                           
 16553                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x06;
 16554  1E17  3006               	movlw	6
 16555  1E18  009F               	movwf	31	;volatile
 16556                           
 16557                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 16558  1E19  019E               	clrf	30	;volatile
 16559  1E1A  0008               	return
 16560  1E1B                     __end_of_OSCILLATOR_Initialize:	
 16561                           
 16562                           	psect	text90
 16563  1E09                     __ptext90:	
 16564 ;; *************** function _I2C1_Initialize *****************
 16565 ;; Defined at:
 16566 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 16567 ;; Parameters:    Size  Location     Type
 16568 ;;		None
 16569 ;; Auto vars:     Size  Location     Type
 16570 ;;		None
 16571 ;; Return value:  Size  Location     Type
 16572 ;;                  1    wreg      void 
 16573 ;; Registers used:
 16574 ;;		wreg, status,2
 16575 ;; Tracked objects:
 16576 ;;		On entry : 0/0
 16577 ;;		On exit  : 0/0
 16578 ;;		Unchanged: 0/0
 16579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16584 ;;Total ram usage:        0 bytes
 16585 ;; Hardware stack levels used:    1
 16586 ;; Hardware stack levels required when called:    4
 16587 ;; This function calls:
 16588 ;;		Nothing
 16589 ;; This function is called by:
 16590 ;;		_SYSTEM_Initialize
 16591 ;; This function uses a non-reentrant model
 16592 ;;
 16593                           
 16594                           
 16595                           ;psect for function _I2C1_Initialize
 16596  1E09                     _I2C1_Initialize:	
 16597                           
 16598                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x00;
 16599                           
 16600                           ;incstack = 0
 16601                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 16602  1E09  0024               	movlb	4	; select bank4
 16603  1E0A  0194               	clrf	20	;volatile
 16604                           
 16605                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 16606  1E0B  3008               	movlw	8
 16607  1E0C  0095               	movwf	21	;volatile
 16608                           
 16609                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 16610  1E0D  0196               	clrf	22	;volatile
 16611                           
 16612                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x27;
 16613  1E0E  3027               	movlw	39
 16614  1E0F  0092               	movwf	18	;volatile
 16615                           
 16616                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 16617  1E10  1295               	bcf	21,5	;volatile
 16618  1E11  0008               	return
 16619  1E12                     __end_of_I2C1_Initialize:	
 16620                           
 16621                           	psect	text91
 16622  1241                     __ptext91:	
 16623 ;; *************** function _EUSART_Initialize *****************
 16624 ;; Defined at:
 16625 ;;		line 88 in file "mcc_generated_files/eusart.c"
 16626 ;; Parameters:    Size  Location     Type
 16627 ;;		None
 16628 ;; Auto vars:     Size  Location     Type
 16629 ;;		None
 16630 ;; Return value:  Size  Location     Type
 16631 ;;                  1    wreg      void 
 16632 ;; Registers used:
 16633 ;;		wreg, status,2, status,0, pclath, cstack
 16634 ;; Tracked objects:
 16635 ;;		On entry : 0/0
 16636 ;;		On exit  : 0/0
 16637 ;;		Unchanged: 0/0
 16638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16641 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16642 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16643 ;;Total ram usage:        1 bytes
 16644 ;; Hardware stack levels used:    1
 16645 ;; Hardware stack levels required when called:    5
 16646 ;; This function calls:
 16647 ;;		_EUSART_SetErrorHandler
 16648 ;;		_EUSART_SetFramingErrorHandler
 16649 ;;		_EUSART_SetOverrunErrorHandler
 16650 ;;		_EUSART_SetRxInterruptHandler
 16651 ;;		_EUSART_SetTxInterruptHandler
 16652 ;; This function is called by:
 16653 ;;		_SYSTEM_Initialize
 16654 ;; This function uses a non-reentrant model
 16655 ;;
 16656                           
 16657                           
 16658                           ;psect for function _EUSART_Initialize
 16659  1241                     _EUSART_Initialize:	
 16660                           
 16661                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
 16662                           
 16663                           ;incstack = 0
 16664                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16665  1241  0021               	movlb	1	; select bank1
 16666  1242  1291               	bcf	17,5	;volatile
 16667                           
 16668                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
 16669  1243  3061               	movlw	low _EUSART_Receive_ISR
 16670  1244  00F1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
 16671  1245  3011               	movlw	high _EUSART_Receive_ISR
 16672  1246  00F2               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
 16673  1247  319D  25C6  3192   	fcall	_EUSART_SetRxInterruptHandler
 16674                           
 16675                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
 16676  124A  0021               	movlb	1	; select bank1
 16677  124B  1211               	bcf	17,4	;volatile
 16678                           
 16679                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
 16680  124C  30E0               	movlw	low _EUSART_Transmit_ISR
 16681  124D  00F1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
 16682  124E  301F               	movlw	high _EUSART_Transmit_ISR
 16683  124F  00F2               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
 16684  1250  319D  25CC  3192   	fcall	_EUSART_SetTxInterruptHandler
 16685                           
 16686                           ;mcc_generated_files/eusart.c: 98:     BAUD1CON = 0x08;
 16687  1253  3008               	movlw	8
 16688  1254  0023               	movlb	3	; select bank3
 16689  1255  009F               	movwf	31	;volatile
 16690                           
 16691                           ;mcc_generated_files/eusart.c: 101:     RC1STA = 0x90;
 16692  1256  3090               	movlw	144
 16693  1257  009D               	movwf	29	;volatile
 16694                           
 16695                           ;mcc_generated_files/eusart.c: 104:     TX1STA = 0x24;
 16696  1258  3024               	movlw	36
 16697  1259  009E               	movwf	30	;volatile
 16698                           
 16699                           ;mcc_generated_files/eusart.c: 107:     SP1BRGL = 0xA0;
 16700  125A  30A0               	movlw	160
 16701  125B  009B               	movwf	27	;volatile
 16702                           
 16703                           ;mcc_generated_files/eusart.c: 110:     SP1BRGH = 0x01;
 16704  125C  3001               	movlw	1
 16705  125D  009C               	movwf	28	;volatile
 16706                           
 16707                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
 16708  125E  3046               	movlw	low _EUSART_DefaultFramingErrorHandler
 16709  125F  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
 16710  1260  301D               	movlw	high _EUSART_DefaultFramingErrorHandler
 16711  1261  00F2               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
 16712  1262  319D  25BA  3192   	fcall	_EUSART_SetFramingErrorHandler
 16713                           
 16714                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
 16715  1265  3068               	movlw	low _EUSART_DefaultOverrunErrorHandler
 16716  1266  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
 16717  1267  301D               	movlw	high _EUSART_DefaultOverrunErrorHandler
 16718  1268  00F2               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
 16719  1269  319D  25C0  3192   	fcall	_EUSART_SetOverrunErrorHandler
 16720                           
 16721                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
 16722  126C  3047               	movlw	low _EUSART_DefaultErrorHandler
 16723  126D  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler
 16724  126E  301D               	movlw	high _EUSART_DefaultErrorHandler
 16725  126F  00F2               	movwf	EUSART_SetErrorHandler@interruptHandler+1
 16726  1270  319D  25B4         	fcall	_EUSART_SetErrorHandler
 16727                           
 16728                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
 16729  1272  0022               	movlb	2	; select bank2
 16730  1273  01E1               	clrf	_eusartRxLastError^(0+256)	;volatile
 16731                           
 16732                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
 16733  1274  0021               	movlb	1	; select bank1
 16734  1275  01EF               	clrf	_eusartTxHead^(0+128)	;volatile
 16735                           
 16736                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
 16737  1276  01EE               	clrf	_eusartTxTail^(0+128)	;volatile
 16738                           
 16739                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
 16740  1277  3008               	movlw	8
 16741  1278  00F3               	movwf	??_EUSART_Initialize
 16742  1279  0873               	movf	??_EUSART_Initialize,w
 16743  127A  0022               	movlb	2	; select bank2
 16744  127B  00EF               	movwf	_eusartTxBufferRemaining^(0+256)	;volatile
 16745                           
 16746                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
 16747  127C  01FC               	clrf	_eusartRxHead	;volatile
 16748                           
 16749                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
 16750  127D  0021               	movlb	1	; select bank1
 16751  127E  01ED               	clrf	_eusartRxTail^(0+128)	;volatile
 16752                           
 16753                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
 16754  127F  0022               	movlb	2	; select bank2
 16755  1280  01E2               	clrf	_eusartRxCount^(0+256)	;volatile
 16756                           
 16757                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
 16758  1281  0021               	movlb	1	; select bank1
 16759  1282  1691               	bsf	17,5	;volatile
 16760  1283  0008               	return
 16761  1284                     __end_of_EUSART_Initialize:	
 16762                           
 16763                           	psect	text92
 16764  1DCC                     __ptext92:	
 16765 ;; *************** function _EUSART_SetTxInterruptHandler *****************
 16766 ;; Defined at:
 16767 ;;		line 285 in file "mcc_generated_files/eusart.c"
 16768 ;; Parameters:    Size  Location     Type
 16769 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 16770 ;;		 -> EUSART_Transmit_ISR(1), 
 16771 ;; Auto vars:     Size  Location     Type
 16772 ;;		None
 16773 ;; Return value:  Size  Location     Type
 16774 ;;                  1    wreg      void 
 16775 ;; Registers used:
 16776 ;;		wreg
 16777 ;; Tracked objects:
 16778 ;;		On entry : 0/0
 16779 ;;		On exit  : 0/0
 16780 ;;		Unchanged: 0/0
 16781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16782 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16785 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16786 ;;Total ram usage:        2 bytes
 16787 ;; Hardware stack levels used:    1
 16788 ;; Hardware stack levels required when called:    4
 16789 ;; This function calls:
 16790 ;;		Nothing
 16791 ;; This function is called by:
 16792 ;;		_EUSART_Initialize
 16793 ;; This function uses a non-reentrant model
 16794 ;;
 16795                           
 16796                           
 16797                           ;psect for function _EUSART_SetTxInterruptHandler
 16798  1DCC                     _EUSART_SetTxInterruptHandler:	
 16799                           
 16800                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
 16801                           
 16802                           ;incstack = 0
 16803                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
 16804  1DCC  0872               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
 16805  1DCD  0022               	movlb	2	; select bank2
 16806  1DCE  00EE               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+256)
 16807  1DCF  0871               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
 16808  1DD0  00ED               	movwf	_EUSART_TxDefaultInterruptHandler^(0+256)
 16809  1DD1  0008               	return
 16810  1DD2                     __end_of_EUSART_SetTxInterruptHandler:	
 16811                           
 16812                           	psect	text93
 16813  1DC6                     __ptext93:	
 16814 ;; *************** function _EUSART_SetRxInterruptHandler *****************
 16815 ;; Defined at:
 16816 ;;		line 289 in file "mcc_generated_files/eusart.c"
 16817 ;; Parameters:    Size  Location     Type
 16818 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 16819 ;;		 -> EUSART_Receive_ISR(1), 
 16820 ;; Auto vars:     Size  Location     Type
 16821 ;;		None
 16822 ;; Return value:  Size  Location     Type
 16823 ;;                  1    wreg      void 
 16824 ;; Registers used:
 16825 ;;		wreg
 16826 ;; Tracked objects:
 16827 ;;		On entry : 0/0
 16828 ;;		On exit  : 0/0
 16829 ;;		Unchanged: 0/0
 16830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16831 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16834 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16835 ;;Total ram usage:        2 bytes
 16836 ;; Hardware stack levels used:    1
 16837 ;; Hardware stack levels required when called:    4
 16838 ;; This function calls:
 16839 ;;		Nothing
 16840 ;; This function is called by:
 16841 ;;		_EUSART_Initialize
 16842 ;; This function uses a non-reentrant model
 16843 ;;
 16844                           
 16845                           
 16846                           ;psect for function _EUSART_SetRxInterruptHandler
 16847  1DC6                     _EUSART_SetRxInterruptHandler:	
 16848                           
 16849                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
 16850                           
 16851                           ;incstack = 0
 16852                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
 16853  1DC6  0872               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
 16854  1DC7  0023               	movlb	3	; select bank3
 16855  1DC8  00E5               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+384)
 16856  1DC9  0871               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
 16857  1DCA  00E4               	movwf	_EUSART_RxDefaultInterruptHandler^(0+384)
 16858  1DCB  0008               	return
 16859  1DCC                     __end_of_EUSART_SetRxInterruptHandler:	
 16860                           
 16861                           	psect	text94
 16862  1DC0                     __ptext94:	
 16863 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
 16864 ;; Defined at:
 16865 ;;		line 277 in file "mcc_generated_files/eusart.c"
 16866 ;; Parameters:    Size  Location     Type
 16867 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 16868 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
 16869 ;; Auto vars:     Size  Location     Type
 16870 ;;		None
 16871 ;; Return value:  Size  Location     Type
 16872 ;;                  1    wreg      void 
 16873 ;; Registers used:
 16874 ;;		wreg
 16875 ;; Tracked objects:
 16876 ;;		On entry : 0/0
 16877 ;;		On exit  : 0/0
 16878 ;;		Unchanged: 0/0
 16879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16880 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16883 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16884 ;;Total ram usage:        2 bytes
 16885 ;; Hardware stack levels used:    1
 16886 ;; Hardware stack levels required when called:    4
 16887 ;; This function calls:
 16888 ;;		Nothing
 16889 ;; This function is called by:
 16890 ;;		_EUSART_Initialize
 16891 ;; This function uses a non-reentrant model
 16892 ;;
 16893                           
 16894                           
 16895                           ;psect for function _EUSART_SetOverrunErrorHandler
 16896  1DC0                     _EUSART_SetOverrunErrorHandler:	
 16897                           
 16898                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
 16899                           
 16900                           ;incstack = 0
 16901                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
 16902  1DC0  0872               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
 16903  1DC1  0023               	movlb	3	; select bank3
 16904  1DC2  00E1               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+384)
 16905  1DC3  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
 16906  1DC4  00E0               	movwf	_EUSART_OverrunErrorHandler^(0+384)
 16907  1DC5  0008               	return
 16908  1DC6                     __end_of_EUSART_SetOverrunErrorHandler:	
 16909                           
 16910                           	psect	text95
 16911  1DBA                     __ptext95:	
 16912 ;; *************** function _EUSART_SetFramingErrorHandler *****************
 16913 ;; Defined at:
 16914 ;;		line 273 in file "mcc_generated_files/eusart.c"
 16915 ;; Parameters:    Size  Location     Type
 16916 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 16917 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
 16918 ;; Auto vars:     Size  Location     Type
 16919 ;;		None
 16920 ;; Return value:  Size  Location     Type
 16921 ;;                  1    wreg      void 
 16922 ;; Registers used:
 16923 ;;		wreg
 16924 ;; Tracked objects:
 16925 ;;		On entry : 0/0
 16926 ;;		On exit  : 0/0
 16927 ;;		Unchanged: 0/0
 16928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16929 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16932 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16933 ;;Total ram usage:        2 bytes
 16934 ;; Hardware stack levels used:    1
 16935 ;; Hardware stack levels required when called:    4
 16936 ;; This function calls:
 16937 ;;		Nothing
 16938 ;; This function is called by:
 16939 ;;		_EUSART_Initialize
 16940 ;; This function uses a non-reentrant model
 16941 ;;
 16942                           
 16943                           
 16944                           ;psect for function _EUSART_SetFramingErrorHandler
 16945  1DBA                     _EUSART_SetFramingErrorHandler:	
 16946                           
 16947                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
 16948                           
 16949                           ;incstack = 0
 16950                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
 16951  1DBA  0872               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
 16952  1DBB  0023               	movlb	3	; select bank3
 16953  1DBC  00E3               	movwf	(_EUSART_FramingErrorHandler+1)^(0+384)
 16954  1DBD  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
 16955  1DBE  00E2               	movwf	_EUSART_FramingErrorHandler^(0+384)
 16956  1DBF  0008               	return
 16957  1DC0                     __end_of_EUSART_SetFramingErrorHandler:	
 16958                           
 16959                           	psect	text96
 16960  1DB4                     __ptext96:	
 16961 ;; *************** function _EUSART_SetErrorHandler *****************
 16962 ;; Defined at:
 16963 ;;		line 281 in file "mcc_generated_files/eusart.c"
 16964 ;; Parameters:    Size  Location     Type
 16965 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 16966 ;;		 -> EUSART_DefaultErrorHandler(1), 
 16967 ;; Auto vars:     Size  Location     Type
 16968 ;;		None
 16969 ;; Return value:  Size  Location     Type
 16970 ;;                  1    wreg      void 
 16971 ;; Registers used:
 16972 ;;		wreg
 16973 ;; Tracked objects:
 16974 ;;		On entry : 0/0
 16975 ;;		On exit  : 0/0
 16976 ;;		Unchanged: 0/0
 16977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16978 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16981 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16982 ;;Total ram usage:        2 bytes
 16983 ;; Hardware stack levels used:    1
 16984 ;; Hardware stack levels required when called:    4
 16985 ;; This function calls:
 16986 ;;		Nothing
 16987 ;; This function is called by:
 16988 ;;		_EUSART_Initialize
 16989 ;; This function uses a non-reentrant model
 16990 ;;
 16991                           
 16992                           
 16993                           ;psect for function _EUSART_SetErrorHandler
 16994  1DB4                     _EUSART_SetErrorHandler:	
 16995                           
 16996                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
 16997                           
 16998                           ;incstack = 0
 16999                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
 17000  1DB4  0872               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
 17001  1DB5  0023               	movlb	3	; select bank3
 17002  1DB6  00DF               	movwf	(_EUSART_ErrorHandler+1)^(0+384)
 17003  1DB7  0871               	movf	EUSART_SetErrorHandler@interruptHandler,w
 17004  1DB8  00DE               	movwf	_EUSART_ErrorHandler^(0+384)
 17005  1DB9  0008               	return
 17006  1DBA                     __end_of_EUSART_SetErrorHandler:	
 17007                           
 17008                           	psect	intentry
 17009  0004                     __pintentry:	
 17010 ;; *************** function _INTERRUPT_InterruptManager *****************
 17011 ;; Defined at:
 17012 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 17013 ;; Parameters:    Size  Location     Type
 17014 ;;		None
 17015 ;; Auto vars:     Size  Location     Type
 17016 ;;		None
 17017 ;; Return value:  Size  Location     Type
 17018 ;;                  1    wreg      void 
 17019 ;; Registers used:
 17020 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17021 ;; Tracked objects:
 17022 ;;		On entry : 0/0
 17023 ;;		On exit  : 0/0
 17024 ;;		Unchanged: 0/0
 17025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17030 ;;Total ram usage:        0 bytes
 17031 ;; Hardware stack levels used:    1
 17032 ;; Hardware stack levels required when called:    3
 17033 ;; This function calls:
 17034 ;;		Absolute function
 17035 ;;		_EUSART_Receive_ISR
 17036 ;;		_EUSART_Transmit_ISR
 17037 ;; This function is called by:
 17038 ;;		Interrupt level 1
 17039 ;; This function uses a non-reentrant model
 17040 ;;
 17041                           
 17042  0004                     _INTERRUPT_InterruptManager:	
 17043                           
 17044                           ;incstack = 0
 17045  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 17046                           
 17047                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 17048  0005  3180               	pagesel	$
 17049                           
 17050                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
 17051  0006  1F0B               	btfss	11,6	;volatile
 17052  0007  2821               	goto	i1l319
 17053                           
 17054                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 17055  0008  0021               	movlb	1	; select bank1
 17056  0009  1E11               	btfss	17,4	;volatile
 17057  000A  2815               	goto	i1l314
 17058  000B  0020               	movlb	0	; select bank0
 17059  000C  1E11               	btfss	17,4	;volatile
 17060  000D  2815               	goto	i1l314
 17061                           
 17062                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART_TxDefaultInterruptHandler();
 17063  000E  0022               	movlb	2	; select bank2
 17064  000F  086E               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+256),w
 17065  0010  008A               	movwf	10
 17066  0011  086D               	movf	_EUSART_TxDefaultInterruptHandler^(0+256),w
 17067  0012  000A               	callw
 17068  0013  3180               	pagesel	$
 17069                           
 17070                           ;mcc_generated_files/interrupt_manager.c: 60:         }
 17071  0014  2821               	goto	i1l319
 17072  0015                     i1l314:	
 17073                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
 17074                           
 17075  0015  0021               	movlb	1	; select bank1
 17076  0016  1E91               	btfss	17,5	;volatile
 17077  0017  2821               	goto	i1l319
 17078  0018  0020               	movlb	0	; select bank0
 17079  0019  1E91               	btfss	17,5	;volatile
 17080  001A  2821               	goto	i1l319
 17081                           
 17082                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_RxDefaultInterruptHandler();
 17083  001B  0023               	movlb	3	; select bank3
 17084  001C  0865               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+384),w
 17085  001D  008A               	movwf	10
 17086  001E  0864               	movf	_EUSART_RxDefaultInterruptHandler^(0+384),w
 17087  001F  000A               	callw
 17088  0020  3180               	pagesel	$
 17089  0021                     i1l319:	
 17090                           ;mcc_generated_files/interrupt_manager.c: 69:     }
 17091                           
 17092                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 17093                           
 17094  0021  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 17095  0022  0009               	retfie
 17096  0023                     __end_of_INTERRUPT_InterruptManager:	
 17097                           
 17098                           	psect	text98
 17099  1FE0                     __ptext98:	
 17100 ;; *************** function _EUSART_Transmit_ISR *****************
 17101 ;; Defined at:
 17102 ;;		line 206 in file "mcc_generated_files/eusart.c"
 17103 ;; Parameters:    Size  Location     Type
 17104 ;;		None
 17105 ;; Auto vars:     Size  Location     Type
 17106 ;;		None
 17107 ;; Return value:  Size  Location     Type
 17108 ;;                  1    wreg      void 
 17109 ;; Registers used:
 17110 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17111 ;; Tracked objects:
 17112 ;;		On entry : 0/0
 17113 ;;		On exit  : 0/0
 17114 ;;		Unchanged: 0/0
 17115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17118 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17119 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17120 ;;Total ram usage:        1 bytes
 17121 ;; Hardware stack levels used:    1
 17122 ;; This function calls:
 17123 ;;		Nothing
 17124 ;; This function is called by:
 17125 ;;		_EUSART_Initialize
 17126 ;;		_INTERRUPT_InterruptManager
 17127 ;; This function uses a non-reentrant model
 17128 ;;
 17129                           
 17130                           
 17131                           ;psect for function _EUSART_Transmit_ISR
 17132  1FE0                     _EUSART_Transmit_ISR:	
 17133                           
 17134                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
 17135                           
 17136                           ;incstack = 0
 17137                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 17138  1FE0  3008               	movlw	8
 17139  1FE1  0022               	movlb	2	; select bank2
 17140  1FE2  026F               	subwf	_eusartTxBufferRemaining^(0+256),w	;volatile
 17141  1FE3  1803               	skipnc
 17142  1FE4  2FFD               	goto	i1l228
 17143                           
 17144                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TX1
      +                          REG = eusartTxBuffer[eusartTxTail++];
 17145  1FE5  0021               	movlb	1	; select bank1
 17146  1FE6  086E               	movf	_eusartTxTail^(0+128),w
 17147  1FE7  3EC5               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 17148  1FE8  0086               	movwf	6
 17149  1FE9  3001               	movlw	1	; select bank3/4
 17150  1FEA  0087               	movwf	7
 17151  1FEB  0801               	movf	1,w
 17152  1FEC  0023               	movlb	3	; select bank3
 17153  1FED  009A               	movwf	26	;volatile
 17154  1FEE  3001               	movlw	1
 17155  1FEF  00F0               	movwf	??_EUSART_Transmit_ISR
 17156  1FF0  0870               	movf	??_EUSART_Transmit_ISR,w
 17157  1FF1  0021               	movlb	1	; select bank1
 17158  1FF2  07EE               	addwf	_eusartTxTail^(0+128),f	;volatile
 17159                           
 17160                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 17161  1FF3  3008               	movlw	8
 17162  1FF4  026E               	subwf	_eusartTxTail^(0+128),w	;volatile
 17163  1FF5  1803               	btfsc	3,0
 17164                           
 17165                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
 17166  1FF6  01EE               	clrf	_eusartTxTail^(0+128)	;volatile
 17167                           
 17168                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
 17169  1FF7  3001               	movlw	1
 17170  1FF8  00F0               	movwf	??_EUSART_Transmit_ISR
 17171  1FF9  0870               	movf	??_EUSART_Transmit_ISR,w
 17172  1FFA  0022               	movlb	2	; select bank2
 17173  1FFB  07EF               	addwf	_eusartTxBufferRemaining^(0+256),f	;volatile
 17174                           
 17175                           ;mcc_generated_files/eusart.c: 218:     }
 17176  1FFC  0008               	return
 17177  1FFD                     i1l228:	
 17178                           ;mcc_generated_files/eusart.c: 219:     else
 17179                           
 17180                           
 17181                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          1bits.TXIE = 0;
 17182  1FFD  0021               	movlb	1	; select bank1
 17183  1FFE  1211               	bcf	17,4	;volatile
 17184  1FFF  0008               	return
 17185  2000                     __end_of_EUSART_Transmit_ISR:	
 17186                           
 17187                           	psect	text99
 17188  1161                     __ptext99:	
 17189 ;; *************** function _EUSART_Receive_ISR *****************
 17190 ;; Defined at:
 17191 ;;		line 225 in file "mcc_generated_files/eusart.c"
 17192 ;; Parameters:    Size  Location     Type
 17193 ;;		None
 17194 ;; Auto vars:     Size  Location     Type
 17195 ;;		None
 17196 ;; Return value:  Size  Location     Type
 17197 ;;                  1    wreg      void 
 17198 ;; Registers used:
 17199 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17200 ;; Tracked objects:
 17201 ;;		On entry : 0/0
 17202 ;;		On exit  : 0/0
 17203 ;;		Unchanged: 0/0
 17204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17209 ;;Total ram usage:        0 bytes
 17210 ;; Hardware stack levels used:    1
 17211 ;; Hardware stack levels required when called:    2
 17212 ;; This function calls:
 17213 ;;		Absolute function
 17214 ;;		_EUSART_DefaultErrorHandler
 17215 ;;		_EUSART_DefaultFramingErrorHandler
 17216 ;;		_EUSART_DefaultOverrunErrorHandler
 17217 ;;		_EUSART_RxDataHandler
 17218 ;; This function is called by:
 17219 ;;		_EUSART_Initialize
 17220 ;;		_INTERRUPT_InterruptManager
 17221 ;; This function uses a non-reentrant model
 17222 ;;
 17223                           
 17224                           
 17225                           ;psect for function _EUSART_Receive_ISR
 17226  1161                     _EUSART_Receive_ISR:	
 17227                           
 17228                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 17229                           
 17230                           ;incstack = 0
 17231                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17232  1161  087C               	movf	_eusartRxHead,w	;volatile
 17233  1162  3E48               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 17234  1163  0086               	movwf	6
 17235  1164  3001               	movlw	1	; select bank2/3
 17236  1165  0087               	movwf	7
 17237  1166  0181               	clrf	1
 17238                           
 17239                           ;mcc_generated_files/eusart.c: 230:     if(RC1STAbits.FERR){
 17240  1167  0023               	movlb	3	; select bank3
 17241  1168  1D1D               	btfss	29,2	;volatile
 17242  1169  2975               	goto	i1l5811
 17243                           
 17244                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 17245  116A  087C               	movf	_eusartRxHead,w	;volatile
 17246  116B  3E48               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 17247  116C  0086               	movwf	6
 17248  116D  3001               	movlw	1	; select bank2/3
 17249  116E  0087               	movwf	7
 17250  116F  1481               	bsf	1,1
 17251                           
 17252                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
 17253  1170  0863               	movf	(_EUSART_FramingErrorHandler+1)^(0+384),w
 17254  1171  008A               	movwf	10
 17255  1172  0862               	movf	_EUSART_FramingErrorHandler^(0+384),w
 17256  1173  000A               	callw
 17257  1174  3191               	pagesel	$
 17258  1175                     i1l5811:	
 17259                           
 17260                           ;mcc_generated_files/eusart.c: 235:     if(RC1STAbits.OERR){
 17261  1175  0023               	movlb	3	; select bank3
 17262  1176  1C9D               	btfss	29,1	;volatile
 17263  1177  2983               	goto	i1l5817
 17264                           
 17265                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 17266  1178  087C               	movf	_eusartRxHead,w	;volatile
 17267  1179  3E48               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 17268  117A  0086               	movwf	6
 17269  117B  3001               	movlw	1	; select bank2/3
 17270  117C  0087               	movwf	7
 17271  117D  1501               	bsf	1,2
 17272                           
 17273                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
 17274  117E  0861               	movf	(_EUSART_OverrunErrorHandler+1)^(0+384),w
 17275  117F  008A               	movwf	10
 17276  1180  0860               	movf	_EUSART_OverrunErrorHandler^(0+384),w
 17277  1181  000A               	callw
 17278  1182  3191               	pagesel	$
 17279  1183                     i1l5817:	
 17280                           
 17281                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
 17282  1183  087C               	movf	_eusartRxHead,w	;volatile
 17283  1184  3E48               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 17284  1185  0086               	movwf	6
 17285  1186  3001               	movlw	1	; select bank2/3
 17286  1187  0087               	movwf	7
 17287  1188  0801               	movf	1,w
 17288  1189  1903               	btfsc	3,2
 17289  118A  2992               	goto	i1l5821
 17290                           
 17291                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
 17292  118B  0023               	movlb	3	; select bank3
 17293  118C  085F               	movf	(_EUSART_ErrorHandler+1)^(0+384),w
 17294  118D  008A               	movwf	10
 17295  118E  085E               	movf	_EUSART_ErrorHandler^(0+384),w
 17296  118F  000A               	callw
 17297  1190  3191               	pagesel	$
 17298                           
 17299                           ;mcc_generated_files/eusart.c: 242:     } else {
 17300  1191  0008               	return
 17301  1192                     i1l5821:	
 17302                           
 17303                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
 17304  1192  319F  2704         	fcall	_EUSART_RxDataHandler
 17305  1194  0008               	return
 17306  1195                     __end_of_EUSART_Receive_ISR:	
 17307                           
 17308                           	psect	text100
 17309  1D68                     __ptext100:	
 17310 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 17311 ;; Defined at:
 17312 ;;		line 261 in file "mcc_generated_files/eusart.c"
 17313 ;; Parameters:    Size  Location     Type
 17314 ;;		None
 17315 ;; Auto vars:     Size  Location     Type
 17316 ;;		None
 17317 ;; Return value:  Size  Location     Type
 17318 ;;                  1    wreg      void 
 17319 ;; Registers used:
 17320 ;;		None
 17321 ;; Tracked objects:
 17322 ;;		On entry : 0/0
 17323 ;;		On exit  : 0/0
 17324 ;;		Unchanged: 0/0
 17325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17330 ;;Total ram usage:        0 bytes
 17331 ;; Hardware stack levels used:    1
 17332 ;; This function calls:
 17333 ;;		Nothing
 17334 ;; This function is called by:
 17335 ;;		_EUSART_Initialize
 17336 ;;		_EUSART_Receive_ISR
 17337 ;; This function uses a non-reentrant model
 17338 ;;
 17339                           
 17340                           
 17341                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 17342  1D68                     _EUSART_DefaultOverrunErrorHandler:	
 17343                           
 17344                           ;mcc_generated_files/eusart.c: 264:     RC1STAbits.CREN = 0;
 17345                           
 17346                           ;incstack = 0
 17347                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 17348  1D68  0023               	movlb	3	; select bank3
 17349  1D69  121D               	bcf	29,4	;volatile
 17350                           
 17351                           ;mcc_generated_files/eusart.c: 265:     RC1STAbits.CREN = 1;
 17352  1D6A  161D               	bsf	29,4	;volatile
 17353  1D6B  0008               	return
 17354  1D6C                     __end_of_EUSART_DefaultOverrunErrorHandler:	
 17355                           
 17356                           	psect	text101
 17357  1D46                     __ptext101:	
 17358 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 17359 ;; Defined at:
 17360 ;;		line 259 in file "mcc_generated_files/eusart.c"
 17361 ;; Parameters:    Size  Location     Type
 17362 ;;		None
 17363 ;; Auto vars:     Size  Location     Type
 17364 ;;		None
 17365 ;; Return value:  Size  Location     Type
 17366 ;;                  1    wreg      void 
 17367 ;; Registers used:
 17368 ;;		None
 17369 ;; Tracked objects:
 17370 ;;		On entry : 0/0
 17371 ;;		On exit  : 0/0
 17372 ;;		Unchanged: 0/0
 17373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17378 ;;Total ram usage:        0 bytes
 17379 ;; Hardware stack levels used:    1
 17380 ;; This function calls:
 17381 ;;		Nothing
 17382 ;; This function is called by:
 17383 ;;		_EUSART_Initialize
 17384 ;;		_EUSART_Receive_ISR
 17385 ;; This function uses a non-reentrant model
 17386 ;;
 17387                           
 17388                           
 17389                           ;psect for function _EUSART_DefaultFramingErrorHandler
 17390  1D46                     _EUSART_DefaultFramingErrorHandler:	
 17391                           
 17392                           ;incstack = 0
 17393                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 17394  1D46  0008               	return
 17395  1D47                     __end_of_EUSART_DefaultFramingErrorHandler:	
 17396                           
 17397                           	psect	text102
 17398  1D47                     __ptext102:	
 17399 ;; *************** function _EUSART_DefaultErrorHandler *****************
 17400 ;; Defined at:
 17401 ;;		line 269 in file "mcc_generated_files/eusart.c"
 17402 ;; Parameters:    Size  Location     Type
 17403 ;;		None
 17404 ;; Auto vars:     Size  Location     Type
 17405 ;;		None
 17406 ;; Return value:  Size  Location     Type
 17407 ;;                  1    wreg      void 
 17408 ;; Registers used:
 17409 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17410 ;; Tracked objects:
 17411 ;;		On entry : 0/0
 17412 ;;		On exit  : 0/0
 17413 ;;		Unchanged: 0/0
 17414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17419 ;;Total ram usage:        0 bytes
 17420 ;; Hardware stack levels used:    1
 17421 ;; Hardware stack levels required when called:    1
 17422 ;; This function calls:
 17423 ;;		_EUSART_RxDataHandler
 17424 ;; This function is called by:
 17425 ;;		_EUSART_Initialize
 17426 ;;		_EUSART_Receive_ISR
 17427 ;; This function uses a non-reentrant model
 17428 ;;
 17429                           
 17430                           
 17431                           ;psect for function _EUSART_DefaultErrorHandler
 17432  1D47                     _EUSART_DefaultErrorHandler:	
 17433                           
 17434                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
 17435                           
 17436                           ;incstack = 0
 17437                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 17438  1D47  319F  2704         	fcall	_EUSART_RxDataHandler
 17439  1D49  0008               	return
 17440  1D4A                     __end_of_EUSART_DefaultErrorHandler:	
 17441                           
 17442                           	psect	text103
 17443  1F04                     __ptext103:	
 17444 ;; *************** function _EUSART_RxDataHandler *****************
 17445 ;; Defined at:
 17446 ;;		line 249 in file "mcc_generated_files/eusart.c"
 17447 ;; Parameters:    Size  Location     Type
 17448 ;;		None
 17449 ;; Auto vars:     Size  Location     Type
 17450 ;;		None
 17451 ;; Return value:  Size  Location     Type
 17452 ;;                  1    wreg      void 
 17453 ;; Registers used:
 17454 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17455 ;; Tracked objects:
 17456 ;;		On entry : 0/0
 17457 ;;		On exit  : 0/0
 17458 ;;		Unchanged: 0/0
 17459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17462 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17463 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17464 ;;Total ram usage:        1 bytes
 17465 ;; Hardware stack levels used:    1
 17466 ;; This function calls:
 17467 ;;		Nothing
 17468 ;; This function is called by:
 17469 ;;		_EUSART_Receive_ISR
 17470 ;;		_EUSART_DefaultErrorHandler
 17471 ;; This function uses a non-reentrant model
 17472 ;;
 17473                           
 17474                           
 17475                           ;psect for function _EUSART_RxDataHandler
 17476  1F04                     _EUSART_RxDataHandler:	
 17477                           
 17478                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RC1REG;
 17479                           
 17480                           ;incstack = 0
 17481                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 17482  1F04  0023               	movlb	3	; select bank3
 17483  1F05  0819               	movf	25,w	;volatile
 17484  1F06  00F0               	movwf	??_EUSART_RxDataHandler
 17485  1F07  087C               	movf	_eusartRxHead,w
 17486  1F08  3EBD               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 17487  1F09  0086               	movwf	6
 17488  1F0A  3001               	movlw	1	; select bank3/4
 17489  1F0B  0087               	movwf	7
 17490  1F0C  0870               	movf	??_EUSART_RxDataHandler,w
 17491  1F0D  0081               	movwf	1
 17492  1F0E  3001               	movlw	1
 17493  1F0F  00F0               	movwf	??_EUSART_RxDataHandler
 17494  1F10  0870               	movf	??_EUSART_RxDataHandler,w
 17495  1F11  07FC               	addwf	_eusartRxHead,f	;volatile
 17496                           
 17497                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 17498  1F12  3008               	movlw	8
 17499  1F13  027C               	subwf	_eusartRxHead,w	;volatile
 17500  1F14  1803               	btfsc	3,0
 17501                           
 17502                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
 17503  1F15  01FC               	clrf	_eusartRxHead	;volatile
 17504                           
 17505                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
 17506  1F16  3001               	movlw	1
 17507  1F17  00F0               	movwf	??_EUSART_RxDataHandler
 17508  1F18  0870               	movf	??_EUSART_RxDataHandler,w
 17509  1F19  0022               	movlb	2	; select bank2
 17510  1F1A  07E2               	addwf	_eusartRxCount^(0+256),f	;volatile
 17511  1F1B  0008               	return
 17512  1F1C                     __end_of_EUSART_RxDataHandler:	
 17513  007E                     btemp	set	126	;btemp
 17514  007E                     int$flags	set	126
 17515  007E                     wtemp0	set	126


Data Sizes:
    Strings     52
    Constant    32
    Data        27
    BSS         171
    Persistent  51
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80     77      80
    BANK2            80     40      80
    BANK3            80      0      70
    BANK4            80      0      80
    BANK5            80      0      23
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_DO_TX$2214$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C1_DO_TX$2219	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C1_DO_TX$2214	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_MasterFsm$2213	const PTR FTN()enum E7150 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    S701$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[15]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S1850_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    sendPWM@data	PTR unsigned char  size(1) Largest target is 9
		 -> main@EOC(BANK2[1]), main@SOC(BANK2[1]), main@hdr_trl(BANK2[4]), packet(BANK3[9]), 

    I2C1_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_SetBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@reg(BANK0[1]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    S701$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@reg(BANK0[1]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@reg(BANK0[1]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    S701$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C1_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    S701$callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    fsmStateTable	const PTR FTN()enum E7150[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    S94$data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _vfpfcnvrt->_fputc
    _efgtoa->___fltol
    _tolower->_isupper
    _pad->_fputc
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    ___flmul->__Umul8_16
    ___fldiv->___xxtofl
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback
    _SYSTEM_Initialize->_EUSART_Initialize
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    ___fldiv->___xxtofl
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _readPressureSensor->_printf
    _printf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_readPressureSensor

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                33    33      0  119141
                                             75 BANK1      2     2      0
                                              9 BANK2     31    31      0
                  _SYSTEM_Initialize
                 _readPressureSensor
                            _sendPWM
                            _setZero
 ---------------------------------------------------------------------------------
 (1) _setZero                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sendPWM                                              3     3      0     410
                                              1 COMMON     3     3      0
                            _setHigh
                             _setLow
 ---------------------------------------------------------------------------------
 (2) _setLow                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setHigh                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readPressureSensor                                   9     9      0  117784
                                              0 BANK2      9     9      0
             _I2C1_Read1ByteRegister
                            ___fldiv
                           ___xxtofl
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              10     4      6   30454
                                             65 BANK1     10     4      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3   30181
                                             57 BANK1      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           43    41      2   29722
                                             61 BANK0     19    17      2
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                              9     5      4     410
                                              1 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              66    61      5   25448
                                             52 BANK0      9     4      5
                                              0 BANK1     57    57      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1142
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               8     6      2     641
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    3241
                                              8 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     123
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    1226
                                              0 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     834
                                              4 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      66
                                              3 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (7) _EUSART_Write                                         2     2      0      44
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             32 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       16    12      4     287
                                              1 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             11     7      4     381
                                              1 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    3727
                                             26 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             20    12      8    3302
                                              1 COMMON     8     0      8
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             26    18      8    3025
                                              0 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (7) __Umul8_16                                            9     7      2     799
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     790
                                             26 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     490
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             26    18      8    2185
                                              6 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              7     3      4     448
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              9     5      4     452
                                              1 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Read1ByteRegister                               4     3      1   84671
                                              8 BANK0      4     3      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C1_SetAddressNackCallback                          4     1      3    1870
                                              6 COMMON     4     1      3
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (3) _I2C1_Open                                            3     3      0      46
                                              1 COMMON     3     3      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterWrite                                     0     0      0   78300
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterOperation                                 3     3      0   78300
                                             11 COMMON     1     1      0
                                              6 BANK0      2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (5) _I2C1_Poller                                          0     0      0   78254
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterFsm                                       3     3      0   78254
                                              3 BANK0      3     3      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_TX_EMPTY                                     3     3      0   19547
                                              0 BANK0      3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterSetIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_TX                                           3     3      0   19569
                                              0 BANK0      3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_DO_SEND_RESTART_WRITE                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C1_DO_SEND_RESTART_READ                            0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_SEND_ADR_WRITE                               0     0      0      22
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_SEND_ADR_READ                                0     0      0      22
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterSendTxData                                1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_RX_ACK                                       0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_RX                                           3     3      0   19547
                                              0 BANK0      3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterSendAck                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterGetRxData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_RX_NACK_STOP                                 0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_RX_NACK_RESTART                              0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterSendNack                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_RCEN                                         0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterStartRx                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_ADDRESS_NACK                                 3     3      0   19547
                                              0 BANK0      3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                1     0      1    3852
                                             10 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                1     0      1    3852
                                             10 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              1     0      1    3874
                                             10 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                1     0      1    3852
                                             10 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                1     0      1    3852
                                             10 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C1_SetDataCompleteCallback                         4     1      3    2478
                                              6 COMMON     4     1      3
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (4) _I2C1_SetCallback                                     5     2      3     914
                                              1 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (3) _I2C1_SetBuffer                                       4     2      2    1352
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _I2C1_DO_SEND_STOP                                    0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_DO_SEND_RESTART                                 0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_CallbackReturnStop                              1     0      1       0
                                             10 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _I2C1_CallbackReturnReset                             1     0      1     265
                                             10 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C1_Close                                           2     2      0      24
                                              1 COMMON     2     2      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                  _EUSART_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     490
                                              3 COMMON     1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          0     0      0       0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _TMR2_Initialize
     _WDT_Initialize
   _readPressureSensor
     _I2C1_Read1ByteRegister
       _I2C1_Close
         _I2C1_MasterClearIrq
         _I2C1_MasterClose
         _I2C1_MasterDisableIrq
       _I2C1_MasterWrite
         _I2C1_MasterOperation
           _I2C1_MasterStart
           _I2C1_Poller
             _I2C1_MasterFsm
               _I2C1_DO_ADDRESS_NACK *
                 Absolute function(Fake) *
                 _I2C1_CallbackReturnReset *
                 _I2C1_CallbackReturnStop *
                 _I2C1_DO_SEND_RESTART *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_STOP *
                   _I2C1_MasterStop
                 _rd1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
               _I2C1_DO_IDLE *
               _I2C1_DO_RCEN *
                 _I2C1_MasterStartRx
               _I2C1_DO_RESET *
               _I2C1_DO_RX *
                 Absolute function(Fake) *
                 _I2C1_CallbackReturnReset *
                 _I2C1_CallbackReturnStop *
                 _I2C1_DO_RX_NACK_RESTART *
                   _I2C1_MasterSendNack
                 _I2C1_DO_RX_NACK_STOP *
                   _I2C1_MasterSendNack
                 _I2C1_MasterGetRxData *
                 _I2C1_MasterSendAck *
                 _rd1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
               _I2C1_DO_RX_ACK *
                 _I2C1_MasterSendAck
               _I2C1_DO_RX_NACK_RESTART *
                 _I2C1_MasterSendNack
               _I2C1_DO_RX_NACK_STOP *
                 _I2C1_MasterSendNack
               _I2C1_DO_SEND_ADR_READ *
                 _I2C1_MasterSendTxData
               _I2C1_DO_SEND_ADR_WRITE *
                 _I2C1_MasterSendTxData
               _I2C1_DO_SEND_RESTART *
                 _I2C1_MasterEnableRestart
               _I2C1_DO_SEND_RESTART_READ *
                 _I2C1_MasterEnableRestart
               _I2C1_DO_SEND_RESTART_WRITE *
                 _I2C1_MasterEnableRestart
               _I2C1_DO_SEND_STOP *
                 _I2C1_MasterStop
               _I2C1_DO_TX *
                 Absolute function(Fake) *
                 _I2C1_CallbackReturnReset *
                 _I2C1_CallbackReturnStop *
                 _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_STOP *
                   _I2C1_MasterStop
                 _I2C1_MasterIsNack *
                 _I2C1_MasterSendTxData *
                 _rd1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
               _I2C1_DO_TX_EMPTY *
                 Absolute function(Fake) *
                 _I2C1_CallbackReturnReset *
                 _I2C1_CallbackReturnStop *
                 _I2C1_DO_SEND_RESTART *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_STOP *
                   _I2C1_MasterStop
                 _I2C1_MasterSetIrq *
                 _rd1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
               _I2C1_MasterClearIrq *
               _I2C1_MasterIsNack *
             _I2C1_MasterWaitForEvent
       _I2C1_Open
         _I2C1_MasterClearIrq
         _I2C1_MasterOpen
       _I2C1_SetAddressNackCallback
         _I2C1_SetCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
         _I2C1_SetCallback
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _printf
       _vfprintf
         _vfpfcnvrt
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
               ___xxtofl (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 __Umul8_16
             ___flmul
               __Umul8_16
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 __Umul8_16
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___xxtofl (ARG)
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART_Write
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _EUSART_Write
           _isupper
           _strncmp
           _tolower
             _isupper
   _sendPWM
     _setHigh
     _setLow
   _setZero

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4D      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     28      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      46      11       87.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     1AA      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      17      16       28.8%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     1AA      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Feb 19 20:01:12 2020

                ?_EUSART_SetRxInterruptHandler 0071                                   ___fldiv@aexp 003F  
                                 ___fldiv@bexp 003E                                   ___fldiv@sign 0037  
                                  __CFG_CP$OFF 0000                                   ___awdiv@sign 0077  
                          __Umul8_16@word_mpld 0077                                    __CFG_LVP$ON 0000  
                                          l216 1041                                            l541 07FE  
                                          l607 147E                                            l623 12E6  
                                          l764 1D94                                            _PR2 001E  
                                 __CFG_CPD$OFF 0000                          ?_I2C1_MasterOperation 0070  
                       ??_EUSART_RxDataHandler 0070                                            _pad 13A7  
               ?_EUSART_SetFramingErrorHandler 0071                        __size_of_PMD_Initialize 0008  
                                 ___awmod@sign 0077                                _TMR2_Initialize 1DF9  
                                          wreg 0009                         ?_I2C1_MasterSendTxData 0070  
            __size_of_I2C1_MasterEnableRestart 0003                           _I2C1_DO_RX_NACK_STOP 1D8C  
                                 ___flmul@aexp 0032                      ?_I2C1_MasterEnableRestart 0070  
                                 ___flmul@bexp 0033                                   ___flmul@sign 002D  
                                 ___flmul@temp 0038                                   ___flmul@prod 0034  
                         I2C1_SetBuffer@buffer 0074                                   ___fltol@exp1 007B  
                                         l1100 0494                                    main@hdr_trl 0140  
                                         l1033 13BF                                           l1036 13DF  
                      ??_rd2RegCompleteHandler 007B                                           l1037 13EB  
                                         l1071 0299                                           l1072 0286  
                                         l1082 02D7                                           l1323 132B  
                                         l1324 1345                                           l1332 1592  
                                         l1511 0928                                           l1335 15E0  
                                         l1602 165B                                           l1603 1665  
                                         l1355 14E3                                           l1532 0A2F  
                                         l4005 1097                                           l1533 0A47  
                                         l1461 0CB5                                           l1535 0A54  
                                         l1455 0C3F                                           l1625 07C0  
                                         l1563 0FF3                                           l1459 0CD2  
                                         l4131 11C1                                           l1476 0D55  
                                         l4213 12EB                                           l5021 0F5B  
                                         l5023 0F72                                           l4127 119E  
                                         l4303 1F39                                           l4209 12E8  
                                         l5033 0F8B                                           l1497 0DCC  
                                         l1489 0DB4                                           l4305 1F45  
                                         l4235 10D4                                           l4251 10DE  
                                         l4219 12EE                                           l1595 1647  
                                         l5043 0FB4                                           l4245 10DB  
                                         l4173 1455                                           l4165 144F  
                                         l1589 1611                                           l5053 0FE0  
                                         l5029 0F89                                           l4239 10D7  
                                         l4511 1F8D                                           l5047 0FC9  
                                         l4169 1452                                           l5073 1E24  
                                         l4187 1498                                           l4179 1458  
                                         l4275 1109                                           l4531 10B9  
                                         l1699 1F93                                           l4611 078A  
                                         l4285 110F                                           l5421 1F7B  
                                         ?_pad 0028                                           l4279 110C  
                                         l4615 07A3                                           l5425 1F80  
                                         l4721 15AC                                           l6401 0D88  
                                         l6321 0CBD                                           l6313 0C85  
                                         l4609 0779                                           l5419 1F76  
                                         l4635 140C                                           l4803 08FC  
                                         l6323 0CBF                                           l6331 0CCD  
                                         l4563 154A                                           l4661 1443  
                                         l4653 1432                                           l4645 1414  
                                         l4629 1401                                           l4805 0904  
                                         l4725 15C6                                           l6253 0C0F  
                                         l4573 1572                                           l6229 105D  
                                         l5381 1393                                           l7071 1126  
                                         l4647 1420                                           l4823 0920  
                                         l6423 0DC8                                           l6255 0C17  
                                         l4567 154F                                           l5383 136F  
                                         l5553 1F63                                           l7073 1301  
                                         l4657 143B                                           l4673 128E  
                                         l4905 0A17                                           l4833 0947  
                                         l6273 0C34                                           l6249 0C0C  
                                         l4745 14A3                                           l6433 13B5  
                                         l7075 1470                                           l5731 1609  
                                         l4691 12B3                                           l4819 091D  
                                         l6419 0DC4                                           l6347 0CF2  
                                         l6339 0CE0                                           l6283 0C49  
                                         l6443 13C1                                           l4579 1FCA  
                                         l6611 0300                                           l6507 00D2  
                                         l7077 10F1                                           l5741 1624  
                                         l4685 129B                                           l4677 1295  
                                         l4941 0DF0                                           l6349 0CF4  
                                         l6357 0D03                                           l6277 0C37  
                                         l4765 14D1                                           l4749 14AC  
                                         l6437 13BD                                           l6621 0312  
                                         l6517 0105                                           l6525 012A  
                                         l5389 1399                                           l5751 1659  
                                         l5743 1634                                           l4687 12A7  
                                         l4695 12BC                                           l4919 0A50  
                                         l4839 0953                                           l4943 0DF8  
                                         l6383 0D74                                           l6375 0D67  
                                         l6367 0D4D                                           l6391 0D7D  
                                         l4775 14F0                                           l4767 14DF  
                                         l6703 0608                                           l6623 03F0  
                                         l6607 02F8                                           l6551 01A3  
                                         l6535 015D                                           l6543 0182  
                                         l5753 164C                                           l5737 1620  
                                         l4865 09B3                                           l4961 0E1B  
                                         l3985 1036                                           l6721 0632  
                                         l6641 0492                                           l6633 0464  
                                         l6561 023D                                           l4699 12C4  
                                         l4891 09EC                                           l4883 09BE  
                                         l4859 099A                                           l4867 097C  
                                         l6467 1357                                           l4939 0DEE  
                                         l6731 062E                                           l6643 049B  
                                         l6627 0443                                           l6555 01D3  
                                         l6563 0262                                           l5765 1680  
                                         l4885 09D5                                           l4869 09B8  
                                         l4957 0E11                                           l6397 0D86  
                                         l6389 0D7B                                           l6741 0681  
                                         l6733 0669                                           l6581 02A4  
                                         l6573 0293                                           l6557 020D  
                                         l5853 1211                                           l4895 09EE  
                                         l4799 08F9                                           l4959 0E13  
                                         l3999 1056                                           l6719 062A  
                                         l6655 04FC                                           l6575 029C  
                                         l6495 00B8                                           l6487 00A6  
                                         l6823 0BBE                                           l4969 0E29  
                                         l6809 0B6F                                           l6817 0B9C  
                                         l6833 0BCF                                           l5857 1222  
                                         l6675 051B                                           l6683 054F  
                                         l6691 05D1                                           l6499 00BF  
                                         l6827 0BC4                                           l5859 1225  
                                         l6757 06BB                                           l6765 06DA  
                                         l6677 0539                                           l6597 02E4  
                                         l6589 02D1                                           l6855 1132  
                                         l6695 05EF                                           l6599 02E8  
                                         l6847 0809                                           l6865 1158  
                                         l6849 082A                                           l6937 0887  
                                         l6787 0AD6                                           l6891 172C  
                                         l6971 08B9                                           l6957 08A4  
                                         l6799 0B16                                           l6985 08CE  
                                         STR_1 2012                                           STR_2 2000  
                                         STR_3 2021                                           STR_4 2029  
                                         STR_7 2025                                           STR_8 202D  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           u4005 0765  
                                         u4025 0793                                           u3225 11BF  
                                         u4115 1421                                           u4125 142B  
                                         u4045 07AC                                           u4135 1433  
                                         u4215 12AD                                           u4225 12B4  
                                         u4095 1417                                           u4415 14E7  
                                         u4195 129E                                           u4355 14B5  
                                         u3900 156B                                           _PMD0 0911  
                                         u4605 09C1                                           _PMD1 0912  
                                         _PMD2 0913                                           u4535 0984  
                                         u7015 02B3                                           _PMD3 0914  
                                         _PMD4 0915                                           u4705 0A20  
                                         u4625 09CA                                           u4545 098B  
                                         u3745 1F94                                           u4385 14D2  
                                         u7025 02CD                                           _PMD5 0916  
                                         u4715 0A39                                           u3835 1520  
                                         u6260 1EE5                                           u7300 06AB  
                                         u4565 0994                                           u6270 1EE6  
                                         u7310 06AC                                           u4575 09A8  
                                         u4815 0E9F                                           u6503 0D15  
                                         u3855 1539                                           u7215 05DF  
                                         u4825 0ECE                                           u6425 0CC3  
                                         u7225 05ED                                           u3890 156A  
                                         u4835 0F24                                           u3955 0712  
                                         u6380 0CA3                                           u3980 0740  
                                         u5805 1641                                           u4845 0F3B  
                                         u3885 155C                                           u3965 072D  
                                         u6390 0CA4                                           u4695 0A05  
                                         u4855 0F4A                                           u6375 0C99  
                                         u7095 0320                                           u5825 1653  
                                         u4865 0F5E                                           u6545 0D68  
                                         u3985 073C                                           u4955 0FA2  
                                         u6900 014B                                           u7380 0B54  
                                         u6805 1353                                           u4965 0FBD  
                                         u4885 0F67                                           u6645 0D9F  
                                         u7285 0674                                           u6750 1023  
                                         u6910 014C                                           u7390 0B55  
                                         u4975 0FD3                                           u6495 0CF8  
                                         u6735 13CB                                           u7455 16C5  
                                         u6760 1024                                           u7480 086C  
                                         u5865 166D                                           u5785 162D  
                                         u7465 16F9                                           u7537 0896  
                                         u7547 120B                                           u6860 00F3  
                                         u5964 121A                                           u7557 1228  
                                         u5965 1219                                           u6870 00F4  
                                         u7567 123B                                           u7577 1764  
                                         u6985 0291                                           _TMR2 001D  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _WPUC 020E                        ??_wr2RegCompleteHandler 007B  
                             ??_I2C1_MasterFsm 0023               __size_of_I2C1_DO_RX_NACK_RESTART 0004  
                                 __CFG_WRT$OFF 0000                                  __CFG_FCMEN$ON 0000  
                    ??_I2C1_CallbackReturnStop 007B                                           _dbuf 0220  
                                         _main 0833                                           _prec 015C  
                                         _nout 0158                                           pad@i 002C  
                                         pad@p 0029                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           pad@w 002E  
                                         btemp 007E                                  __CFG_BOREN$ON 0000  
                                ___fpclassifyf 14FF                                  __CFG_BORV$LOW 0000  
                                         start 0023                               ??_I2C1_SetBuffer 0073  
                              ___fldiv@new_exp 0038                                _PWM5_Initialize 1E4D  
                                 _tolower$1910 0079                                  __CFG_CSWEN$ON 0000  
                                __CFG_MCLRE$ON 0000               __size_of_rdBlkRegCompleteHandler 0017  
                I2C1_CallbackReturnStop@funPtr 007A                                          ??_pad 002B  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 0009  
                __end_of_OSCILLATOR_Initialize 1E1B                                  ___fltol@sign1 007A  
                            __end_of_I2C1_Open 0800                                __end_of___fladd 0DD4  
                                        ?_main 0070                                __end_of___fldiv 0A59  
                              __end_of___awdiv 1448                                __end_of___flneg 1E24  
                                        STR_11 2031                                          STR_13 2031  
                                __CFG_WDTE$OFF 0000                                __end_of___awmod 12C9  
                              __end_of___flmul 1000                                __end_of___flsub 1FC1  
                              __end_of___fltol 14FF                                ___awdiv@divisor 0071  
                                        _T2CON 001F                                 __CFG_DEBUG$OFF 0000  
                                        i1l314 0015                                          i1l228 1FFD  
                                        i1l319 0021                                ___awdiv@counter 0076  
                                        _OSCEN 091D                                   vfpfcnvrt@fmt 005D  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                         ??_I2C1_MasterGetRxData 0071  
                                        _RXPPS 0E24                          ?_I2C1_DO_RX_NACK_STOP 0070  
                   ??_I2C1_CallbackReturnReset 007B                              ??_I2C1_MasterOpen 0071  
                            ??_I2C1_MasterStop 0071                              ??_I2C1_Initialize 0071  
                                        _flags 015E                                 _WDT_Initialize 1D6C  
                                        _fputc 1195                                          _fputs 1059  
                                        _value 0160                                          pad@fp 0030  
                                        _width 015A                                __end_of_sendPWM 1241  
                                        _putch 1DAF                                          main@i 0147  
                              __end_of_setHigh 1E38                                __end_of_setZero 1D68  
                              __end_of_isupper 1EED                                          pclath 000A  
                                        status 0003                    __size_of_I2C1_MasterSendAck 0004  
                                        wtemp0 007E                                 ?___fpclassifyf 0071  
                              __end_of_tolower 1035                                   ??_I2C1_DO_RX 0020  
                                 ??_I2C1_DO_TX 0020                                __end_of_strncmp 13A7  
                       ??_I2C1_DO_ADDRESS_NACK 0020                                   ??_I2C1_Close 0071  
                  __size_of_I2C1_MasterStartRx 0003                                  _fsmStateTable 1800  
                              __initialization 0025                                   __end_of_main 08DF  
                               ??_EUSART_Write 0071                        __end_of_TMR2_Initialize 1E01  
                  ?_INTERRUPT_InterruptManager 0070                 ??_EUSART_SetRxInterruptHandler 0073  
                       ??_I2C1_MasterOperation 007B                                         ??_main 00EB  
                __size_of_I2C1_DO_SEND_RESTART 0004                             __end_of_I2C1_DO_RX 1310  
                           __end_of_I2C1_DO_TX 149A                         __end_of_WDT_Initialize 1D70  
                           __end_of_I2C1_Close 1F65      __end_of_EUSART_DefaultFramingErrorHandler 1D47  
   __size_of_EUSART_DefaultFramingErrorHandler 0001            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 1D46  
                      ?_I2C1_Read1ByteRegister 0028                     _EUSART_OverrunErrorHandler 01E0  
                                       ?_fputc 0074                                         ?_fputs 0020  
                             ___awdiv@dividend 0073                                         _ANSELA 018C  
                                       ?_putch 0070                                         _ANSELB 018D  
                                       _ANSELC 018E                             __CFG_RSTOSC$HFINT1 0000  
                                       _RC1REG 0199                                         _RC1STA 019D  
                                       _RB4PPS 0E9C                                         _RB5PPS 0E9D  
                                       _RB7PPS 0E9F                                         _ODCONA 028C  
                                       _ODCONB 028D                                         _RC6PPS 0EA6  
                                       _ODCONC 028E                        __end_of_PWM5_Initialize 1E59  
                                       i1l5811 1175           __size_of_I2C1_SetAddressNackCallback 000C  
                                       i1l5821 1192                                         i1l5817 1183  
                                       _INLVLA 038C                                         _INLVLB 038D  
                                       _INLVLC 038E                                         _OSCFRQ 091F  
                                       _TX1REG 019A                                         _WDTCON 0097  
                                       _TX1STA 019E                              ?_I2C1_MasterClose 0070  
                             __end_of___xxtofl 1689                        ??_I2C1_MasterDisableIrq 0071  
                            ?_I2C1_MasterStart 0070                              ?_I2C1_MasterWrite 0070  
                     ?_I2C1_MasterWaitForEvent 0070                             ??_I2C1_MasterClose 0071  
                             _I2C1_DO_TX_EMPTY 10D1                                 __CFG_PWRTE$OFF 0000  
                           ??_I2C1_MasterStart 0071                             ??_I2C1_MasterWrite 007C  
                                 vfprintf@cfmt 00DF                                         ___flge 1577  
                                       ___fleq 1310                                      ??___fladd 0020  
                                    ??___fldiv 002E                                      ??___awdiv 0075  
                                    ??___flneg 0075                                 __CFG_STVREN$ON 0000  
                                    ??___awmod 0075                                      ??___flmul 0028  
                                    ??___flsub 007A                                      ??___fltol 0075  
                                       _efgtoa 005D                            _EUSART_Transmit_ISR 1FE0  
                                       _floorf 06F1                                         _packet 01CD  
                 __size_of_I2C1_MasterClearIrq 0003                               ___awdiv@quotient 0078  
                                       _setLow 1E38                                ___awmod@divisor 0071  
                              ___awmod@counter 0076                                         _printf 1002  
                                       pad@buf 0028                       ??_I2C1_DO_SEND_ADR_WRITE 0072  
                                       _strcpy 1FC1                                         _strlen 1F34  
                            ?_I2C1_SetCallback 0071                         ??_I2C1_DO_RX_NACK_STOP 0071  
                        _I2C1_DO_SEND_ADR_READ 1E01                                         fputc@c 0074  
                               _PMD_Initialize 1DF1                                         fputs@c 0024  
                                       fputs@i 0025                                         fputs@s 0027  
                ?_I2C1_SetDataCompleteCallback 0076                             __size_of__Umul8_16 001F  
                              ___fpclassifyf@e 0020                                ___fpclassifyf@u 0022  
                                    ??_sendPWM 0071                                ___fpclassifyf@x 0071  
                                    ??_setHigh 0071                             ??_I2C1_SetCallback 0074  
               __end_of_I2C1_Read1ByteRegister 1161                                ?_WDT_Initialize 0070  
                                    ??_setZero 0071                                      ??_isupper 0073  
                             __end_of_vfprintf 0833                                      ??_tolower 0020  
                 __size_of_I2C1_MasterSendNack 0004                                      ??_strncmp 0075  
                         ?_EUSART_Transmit_ISR 0070                        _I2C1_DO_RX_NACK_RESTART 1D90  
                                   ___flge@ff1 003A                                     ___flge@ff2 003E  
                              ??___fpclassifyf 0075                                   ___xxtofl@arg 0022  
                                 ___xxtofl@exp 0021                              _SYSTEM_Initialize 1F1C  
                                 ___xxtofl@val 0071                                     ___fleq@ff1 0071  
                                   ___fleq@ff2 0075                 I2C1_SetDataCompleteCallback@cb 0076  
                      __end_of__initialization 0059                                     ___flneg@f1 0071  
              I2C1_MasterOperation@returnValue 0027                             ?_SYSTEM_Initialize 0070  
                                   ___fltol@f1 0071                                  ??_I2C1_Poller 007B  
         __end_of_EUSART_SetTxInterruptHandler 1DD2          __size_of_EUSART_SetTxInterruptHandler 0006  
                 _EUSART_SetTxInterruptHandler 1DCC                        _rdBlkRegCompleteHandler 1EBF  
                               __pcstackCOMMON 0070                                   __pidataBANK2 1D9C  
                                 __pidataBANK5 1EED                            ??_SYSTEM_Initialize 0074  
             __end_of_I2C1_MasterEnableRestart 1D59                     __end_of_readPressureSensor 1800  
                                __end_of_fputc 11CA                                  __end_of_fputs 107F  
                                __end_of_putch 1DB4                               ?_TMR2_Initialize 0070  
                       __end_of_PMD_Initialize 1DF9                   ??_I2C1_DO_SEND_RESTART_WRITE 0071  
                      ??_I2C1_MasterSendTxData 0071                           _eusartRxStatusBuffer 0148  
                        __end_of_I2C1_DO_RESET 1DAF                ??_EUSART_SetOverrunErrorHandler 0073  
                                  sendPWM@data 0073                                        ??_fputc 0077  
                    __end_of_SYSTEM_Initialize 1F34                                        ??_fputs 0021  
                        ??_EUSART_Transmit_ISR 0070                                        ??_putch 0073  
                                   __pbssBANK1 00ED                                     __pbssBANK2 0148  
                                   __pbssBANK3 01A0                                     __pbssBANK4 0220  
              __end_of_I2C1_MasterWaitForEvent 1D98                           __end_of_EUSART_Write 1059  
                             ?_PWM5_Initialize 0070                 __size_of_rd2RegCompleteHandler 0010  
                __end_of_rd2RegCompleteHandler 1EAF                           I2C1_Open@returnValue 0073  
               __size_of_wr2RegCompleteHandler 0010                  __end_of_wr2RegCompleteHandler 1E8F  
                  __size_of_EUSART_Receive_ISR 0034                          _rd1RegCompleteHandler 1E8F  
                            _I2C1_DO_SEND_STOP 1D84                              __end_of__Umul8_16 1FA2  
                        _wr1RegCompleteHandler 1EAF            __size_of_I2C1_DO_SEND_RESTART_WRITE 0004  
                                   __pmaintext 0833                       rd1RegCompleteHandler@ptr 007A  
                                      ?___flge 003A                  ?_EUSART_SetTxInterruptHandler 0071  
                                      ?___fleq 0071               _EUSART_TxDefaultInterruptHandler 016D  
                           ?_I2C1_DO_SEND_STOP 0070                                __CFG_PPS1WAY$ON 0000  
                              _I2C1_MasterOpen 1E42                                     __pintentry 0004  
                                      ?_efgtoa 0054                                _I2C1_MasterStop 1D59  
                              _I2C1_Initialize 1E09                            __end_of_I2C1_Poller 1E2E  
                                      ?_floorf 0040                                        ?_setLow 0070  
                      __size_of_I2C1_DO_RX_ACK 0004                   ??_EUSART_DefaultErrorHandler 0071  
                                      ?_printf 00E1                                ?_PMD_Initialize 0070  
                       ?_I2C1_DO_SEND_ADR_READ 0070                            ??_I2C1_DO_SEND_STOP 0071  
                                      ?_strcpy 0071                                        ?_strlen 0071  
              __size_of_I2C1_DO_SEND_ADR_WRITE 0007                                  _eusartRxCount 0162  
                                    ?___xxtofl 0071                              _I2C1_MasterIsNack 1DD2  
                                      _SP1BRGH 019C                                        _SP1BRGL 019B  
                                      _OSCCON1 0919                                        _OSCCON3 091B  
                                    _I2C1_Open 07C9                             __size_of_vfpfcnvrt 0199  
                    ??_I2C1_DO_RX_NACK_RESTART 0071                  __size_of_EUSART_RxDataHandler 0018  
                                      _OSCTUNE 091E                                        _PWM5DCH 0618  
                                      _PWM5DCL 0617                                        _PWM5CON 0619  
                            _I2C1_MasterSetIrq 1D62             __size_of_I2C1_DO_SEND_RESTART_READ 0004  
                                      _SSP1ADD 0212                                        _SLRCONA 030C  
                                      _SLRCONB 030D                                        _SLRCONC 030E  
                                      _SSP1BUF 0211                             ?_I2C1_MasterIsNack 0070  
                   ?_I2C1_DO_SEND_RESTART_READ 0070                       ??_EUSART_SetErrorHandler 0073  
               ??_I2C1_SetDataCompleteCallback 0079                             ?_I2C1_MasterSetIrq 0070  
                               main@dummy_data 0129                            ??_I2C1_MasterIsNack 0071  
                    __end_of_I2C1_DO_SEND_STOP 1D88                      ??_rdBlkRegCompleteHandler 007B  
                           I2C1_SetCallback@cb 0071                            ??_I2C1_MasterSetIrq 0071  
          __size_of_EUSART_DefaultErrorHandler 0003                                __size_of___flge 007C  
                              __size_of___fleq 0049                                        ___fladd 0BF2  
                                      ___fldiv 08DF                                        ___awdiv 13F7  
                                      ___flneg 1E1B                                        ___awmod 1284  
                                      ___flmul 0DD4                                        ___flsub 1FA2  
                                      ___fltol 149A                                      ?_vfprintf 00D9  
                              __size_of_efgtoa 0694                                __size_of_floorf 00D8  
                                ?_I2C1_DO_IDLE 0070                                  ?_I2C1_DO_RCEN 0070  
                              __size_of_setLow 000A                                        __ptext1 1D65  
                                      __ptext2 1204                                        __ptext3 1E38  
                                      __ptext4 1E2E                                        __ptext5 1689  
                                      __ptext6 1002                                        __ptext7 0800  
                                      __ptext8 0A59                                        __ptext9 1359  
                     _I2C1_MasterEnableRestart 1D56                                __size_of_printf 0011  
                    __end_of_I2C1_MasterIsNack 1DD8                   ?_I2C1_SetAddressNackCallback 0076  
                              __size_of_strcpy 001F                                __size_of_strlen 0018  
                        _OSCILLATOR_Initialize 1E12                                      _T2CONbits 001F  
                                 __size_of_pad 0050                      __end_of_I2C1_MasterSetIrq 1D65  
                                   ??___xxtofl 0075                       __end_of_I2C1_DO_TX_EMPTY 1100  
                             ___awmod@dividend 0073                                        _sendPWM 1204  
                                      _setHigh 1E2E                       ??_PIN_MANAGER_Initialize 0071  
                     wr1RegCompleteHandler@ptr 007A                                     ?_I2C1_Open 0070  
                                      _setZero 1D65                                        _isupper 1ED6  
                                      efgtoa@c 0058                                        efgtoa@d 00B8  
                                      efgtoa@e 00D1                                        efgtoa@f 0054  
                                      efgtoa@g 00CD                                        efgtoa@h 00C3  
                                      efgtoa@i 00CB                                        efgtoa@l 00C7  
                                      efgtoa@m 00B4                                        efgtoa@n 00D3  
                                      efgtoa@p 00BD                                        efgtoa@t 00B0  
                                      efgtoa@u 00D5                                        efgtoa@w 00C0  
                __size_of_I2C1_MasterGetRxData 0003                                        main@EOC 0146  
                                      main@SOC 0145                       ?_I2C1_CallbackReturnStop 007A  
                   __size_of_SYSTEM_Initialize 0018                                        _tolower 1013  
                                      clrloop0 1DDF                                        _strncmp 1359  
            __end_of_I2C1_DO_SEND_RESTART_READ 1D7C                           end_of_initialization 0059  
                   __end_of_I2C1_MasterSendAck 1D78                                        floorf@e 004E  
                                      floorf@m 004A                                        floorf@u 0050  
                                      floorf@x 0040                            _I2C1_MasterClearIrq 1D4A  
        __end_of_EUSART_SetOverrunErrorHandler 1DC6         __size_of_EUSART_SetOverrunErrorHandler 0006  
                _EUSART_SetOverrunErrorHandler 1DC0                                        fputc@fp 0076  
                                      init_ram 1DE4                     __end_of_I2C1_MasterStartRx 1D5F  
                                      fputs@fp 0020                         ?_rd1RegCompleteHandler 007A  
                                      initloop 1DE5                         _I2C1_DO_SEND_ADR_WRITE 1DEA  
                 __end_of_I2C1_DO_SEND_RESTART 1D84                              _EUSART_Initialize 1241  
                      __end_of_I2C1_MasterOpen 1E4D                         ?_wr1RegCompleteHandler 007A  
                      __end_of_I2C1_MasterStop 1D5C                        __end_of_I2C1_Initialize 1E12  
            __size_of_I2C1_CallbackReturnReset 0002                                    _I2C1_Poller 1E24  
               __size_of_I2C1_MasterDisableIrq 0003                      ?_I2C1_CallbackReturnReset 007A  
                __end_of_I2C1_MasterDisableIrq 1D53                                    _I2C1_Status 01A0  
                __size_of_I2C1_DO_ADDRESS_NACK 002F                             ?_EUSART_Initialize 0070  
                            __end_of_vfpfcnvrt 0BF2                                     efgtoa@mode 00C2  
                                   efgtoa@sign 00BA                        __size_of_I2C1_MasterFsm 002A  
                          _I2C1_MasterSendNack 1D70            __end_of_I2C1_SetAddressNackCallback 1E71  
                  _I2C1_SetAddressNackCallback 1E65                                     ??_vfprintf 00DC  
                         ?_I2C1_MasterClearIrq 0070                                 ??_I2C1_DO_IDLE 0071  
                               ??_I2C1_DO_RCEN 0071             __end_of_I2C1_DO_SEND_RESTART_WRITE 1D80  
                   _I2C1_DO_SEND_RESTART_WRITE 1D7C                                        strcpy@d 0077  
                                      strlen@a 0074                                        strcpy@s 0075  
                                      strlen@s 0075                      __size_of_I2C1_MasterClose 0003  
                          ??_EUSART_Initialize 0073                               ??_WDT_Initialize 0071  
               ??_EUSART_SetTxInterruptHandler 0073                                _raw_temperature 0167  
                                    _PORTCbits 000E                        __size_of_I2C1_SetBuffer 000E  
              __end_of_rdBlkRegCompleteHandler 1ED6               __size_of_I2C1_MasterWaitForEvent 0004  
                    __size_of_I2C1_MasterStart 0003                      __size_of_I2C1_MasterWrite 0004  
                                  ___fladd@grs 002B                  __size_of_I2C1_MasterOperation 001E  
                ??_I2C1_SetAddressNackCallback 0079                      I2C1_Read1ByteRegister@reg 0028  
                                ___xxtofl@sign 0020                I2C1_SetDataCompleteCallback@ptr 0078  
                        __size_of_EUSART_Write 0024                                    ___fldiv@grs 003A  
                                  ___fldiv@rem 0033                 I2C1_CallbackReturnReset@funPtr 007A  
                         ?_I2C1_MasterSendNack 0070                               __CFG_FEXTOSC$OFF 0000  
              __size_of_EUSART_SetErrorHandler 0006                                    ___flmul@grs 002E  
                    __end_of_EUSART_Initialize 1284                      __size_of_I2C1_SetCallback 0028  
                   rdBlkRegCompleteHandler@ptr 007A                     __size_of_I2C1_DO_SEND_STOP 0004  
                        ??_I2C1_MasterClearIrq 0071                                 __end_of___flge 15F3  
                               __end_of___fleq 1359             __end_of_EUSART_DefaultErrorHandler 1D4A  
                   _EUSART_DefaultErrorHandler 1D47                                    vfpfcnvrt@ap 005E  
                                  vfpfcnvrt@ct 0067                                    vfpfcnvrt@fp 006F  
                               _I2C1_DO_RX_ACK 1D88                                 __end_of_efgtoa 06F1  
                                 _EUSART_Write 1035                                 __end_of_floorf 07C9  
                       ?_OSCILLATOR_Initialize 0070                                     floorf@F524 0150  
                   __size_of_I2C1_MasterIsNack 0006                                 __end_of_setLow 1E42  
              __end_of_I2C1_CallbackReturnStop 1002                                 __end_of_printf 1013  
               __size_of_I2C1_MasterSendTxData 0005                  __end_of_I2C1_MasterSendTxData 1DA5  
                   __size_of_I2C1_MasterSetIrq 0003                                 __end_of_strcpy 1FE0  
                               __end_of_strlen 1F4C                            start_initialization 0025  
                                  ??_I2C1_Open 0071                  __size_of_I2C1_DO_RX_NACK_STOP 0004  
              __size_of_PIN_MANAGER_Initialize 003A                             _readPressureSensor 1689  
                                  __end_of_pad 13F7                          ??_I2C1_MasterSendNack 0071  
 EUSART_SetRxInterruptHandler@interruptHandler 0071   EUSART_SetTxInterruptHandler@interruptHandler 0071  
                                  putch@txData 0073                            ?_readPressureSensor 0070  
                        __end_of___fpclassifyf 1577                       I2C1_SetBuffer@bufferSize 0071  
                             ?_I2C1_MasterOpen 0070                               ?_I2C1_MasterStop 0070  
                             ?_I2C1_Initialize 0070                 ?_EUSART_SetOverrunErrorHandler 0071  
                             __CFG_LPBOREN$OFF 0000                                    vfprintf@fmt 00D9  
                   _EUSART_FramingErrorHandler 01E2                                       ??___flge 0042  
                                     ??___fleq 0020                               ??_PMD_Initialize 0071  
                       __end_of_I2C1_DO_RX_ACK 1D8C                         _EUSART_SetErrorHandler 1DB4  
                      ??_I2C1_DO_SEND_ADR_READ 0071                                       ??_efgtoa 0059  
                                    __Umul8_16 1F83                                    __pdataBANK2 0169  
                                  __pdataBANK5 02A0                                       ??_floorf 0044  
                                     ??_setLow 0071                           ??_readPressureSensor 0120  
                                     ??_printf 00E7                                       ??_strcpy 0073  
                                     ??_strlen 0073                               I2C1_Open@address 0072  
                                    ___fladd@a 0075                                      ___fladd@b 0071  
                                    ___fldiv@a 0026                                      ___fldiv@b 002A  
                  __end_of_EUSART_Transmit_ISR 2000                                      ___flmul@a 0024  
                                    ___flmul@b 0020                                    __pbssCOMMON 007C  
                         _I2C1_DO_SEND_RESTART 1D80                                      ___flsub@a 003A  
                                    ___flsub@b 003E                                      ___latbits 0003  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                                __pcstackBANK2 0120                       __size_of_TMR2_Initialize 0008  
                            __size_of___xxtofl 0096                    ??_I2C1_DO_SEND_RESTART_READ 0071  
                   __end_of_EUSART_Receive_ISR 1195                           __end_of_I2C1_DO_IDLE 1DAA  
                         __end_of_I2C1_DO_RCEN 1DDE                     __size_of_EUSART_Initialize 0043  
             _EUSART_RxDefaultInterruptHandler 01E4                  I2C1_SetAddressNackCallback@cb 0076  
                                    __pnvBANK2 016D                                      __pnvBANK3 01D6  
                        _rd2RegCompleteHandler 1E9F                          __end_of_fsmStateTable 1820  
                                  _efgtoa$1500 00A4                                    _efgtoa$1501 00A6  
                                  _efgtoa$1510 00AA                                    _efgtoa$1511 00AC  
                                  _efgtoa$1512 00AE                                    _efgtoa$1506 00A8  
                 __end_of_EUSART_RxDataHandler 1F1C                         _PIN_MANAGER_Initialize 11CA  
                        _wr2RegCompleteHandler 1E7F                     ??_I2C1_MasterEnableRestart 0071  
                     __size_of_PWM5_Initialize 000C                       rd2RegCompleteHandler@ptr 007A  
                               _I2C1_MasterFsm 10A7                         __size_of_I2C1_DO_RESET 0005  
                                     ?___fladd 0071                                ?_I2C1_DO_RX_ACK 0070  
                                     ?___fldiv 0026                                       ?___awdiv 0071  
                                    __ptext100 1D68                                      __ptext101 1D46  
                                    __ptext102 1D47                                       ?___flneg 0071  
                                    __ptext103 1F04                                       ?___awmod 0071  
                                     ?___flmul 0020                                       ?___flsub 003A  
                                     ?___fltol 0071                                     ?__Umul8_16 0071  
                                 _eusartRxHead 007C                                   _eusartTxHead 00EF  
                                 _eusartRxTail 00ED                                   _eusartTxTail 00EE  
                      _I2C1_MasterWaitForEvent 1D94                               _I2C1_MasterClose 1D4D  
                     ??_I2C1_Read1ByteRegister 0029                                 _I2C1_SetBuffer 1E71  
                 ??_INTERRUPT_InterruptManager 0071                               _I2C1_MasterStart 1D53  
                            __size_of_vfprintf 0033                               _I2C1_MasterWrite 1D98  
                      _eusartTxBufferRemaining 016F                                       _BAUD1CON 019F  
                        ?_I2C1_DO_SEND_RESTART 0070                                       ?_sendPWM 0070  
                                     ?_setHigh 0070                              ?_I2C1_DO_TX_EMPTY 0070  
                                     ?_setZero 0070                                       ?_isupper 0071  
             __end_of_I2C1_CallbackReturnReset 0004                             ??_I2C1_DO_TX_EMPTY 0020  
                                     ?_tolower 0077                                 __size_of_fputc 0035  
                               __size_of_fputs 0026                        ??_rd1RegCompleteHandler 007B  
                                     ?_strncmp 0071                        ?_I2C1_DO_SEND_ADR_WRITE 0070  
                    I2C1_MasterSendTxData@data 0071                                 __size_of_putch 0005  
                               _eusartRxBuffer 01BD                        ??_wr1RegCompleteHandler 007B  
                               _eusartTxBuffer 01C5                               _I2C1_SetCallback 107F  
       EUSART_SetErrorHandler@interruptHandler 0071                                       _LATCbits 010E  
                                   _I2C1_DO_RX 12C9                                     _I2C1_DO_TX 1448  
                                    clear_ram0 1DDE                                       _PIE1bits 0091  
                            _eusartRxLastError 0161                                     _I2C1_Close 1F4C  
                                 ?_I2C1_Poller 0070                         __end_of_I2C1_MasterFsm 10D1  
          __size_of_INTERRUPT_InterruptManager 001F                   __end_of_I2C1_MasterGetRxData 1D62  
                                     _PIR1bits 0011               __size_of_I2C1_CallbackReturnStop 0002  
              ??_EUSART_SetFramingErrorHandler 0073                             _I2C1_MasterSendAck 1D74  
                    _I2C1_DO_SEND_RESTART_READ 1D78                                      main@F7271 0169  
                                    main@F7275 02A0                                       _SSP1CON1 0215  
                                     _SSP1CON2 0216      __end_of_EUSART_DefaultOverrunErrorHandler 1D6C  
   __size_of_EUSART_DefaultOverrunErrorHandler 0004            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 1D68  
                       __end_of_I2C1_SetBuffer 1E7F                                       _SSP1STAT 0214  
         __end_of_I2C1_SetDataCompleteCallback 1E65          __size_of_I2C1_SetDataCompleteCallback 000C  
                 _I2C1_SetDataCompleteCallback 1E59                             _I2C1_MasterStartRx 1D5C  
                                    _vfpfcnvrt 0A59                    ?_I2C1_DO_SEND_RESTART_WRITE 0070  
                          ?_I2C1_MasterSendAck 0070                       ?_I2C1_DO_RX_NACK_RESTART 0070  
                          ?_I2C1_MasterStartRx 0070                   __end_of_I2C1_DO_ADDRESS_NACK 112F  
                     wr2RegCompleteHandler@ptr 007A                 __end_of_I2C1_DO_SEND_ADR_WRITE 1DF1  
                                _I2C1_DO_RESET 1DAA                                     vfpfcnvrt@c 006E  
                                   vfpfcnvrt@f 006A                          I2C1_Close@returnValue 0072  
                     ?_rdBlkRegCompleteHandler 007A                            I2C1_SetCallback@idx 0075  
                          I2C1_SetCallback@ptr 0073                           ??_I2C1_MasterSendAck 0071  
                            ??_TMR2_Initialize 0071                         ?_rd2RegCompleteHandler 007A  
                 __end_of_I2C1_MasterOperation 1F83                         ?_wr2RegCompleteHandler 007A  
                         ??_I2C1_MasterStartRx 0071                                ?_I2C1_MasterFsm 0070  
                                   vfprintf@ap 00DB                                     vfprintf@fp 00DE  
                    ??_I2C1_MasterWaitForEvent 0071                          _I2C1_MasterDisableIrq 1D50  
                      ??_OSCILLATOR_Initialize 0071                                    ??__Umul8_16 0073  
                          _EUSART_ErrorHandler 01DE                                ?_I2C1_SetBuffer 0071  
                             __size_of___fladd 01E2                               __size_of___fldiv 017A  
                             __size_of___awdiv 0051                               __size_of___flneg 0009  
                             __size_of___awmod 0045                               __size_of___flmul 022C  
                             __size_of___flsub 001F                               __size_of___fltol 0065  
                  ?_EUSART_DefaultErrorHandler 0070                                     ?_vfpfcnvrt 005D  
                                 _raw_pressure 0163                __size_of_I2C1_Read1ByteRegister 0032  
                            ??_PWM5_Initialize 0071              I2C1_Read1ByteRegister@returnValue 002B  
                       ??_I2C1_DO_SEND_RESTART 0071                             ___fpclassifyf@F463 0154  
                                     ___xxtofl 15F3                                 ?_I2C1_DO_RESET 0070  
                             __size_of_sendPWM 003D                           _EUSART_RxDataHandler 1F04  
                        __size_of_I2C1_DO_IDLE 0005                               __size_of_setHigh 000A  
                        __size_of_I2C1_DO_RCEN 0006                                       __ptext10 005D  
                                     __ptext11 1013                                       __ptext20 06F1  
                                     __ptext12 1ED6                                       __ptext21 14FF  
                                     __ptext13 1FC1                                       __ptext30 08DF  
                                     __ptext22 149A                                       __ptext14 13A7  
                                     __ptext31 1284                                       __ptext23 1FA2  
                                     __ptext15 1F34                                       __ptext40 1E24  
                                     __ptext32 13F7                                       __ptext24 0BF2  
                                     __ptext16 1059                                       __ptext41 1D94  
                                     __ptext33 15F3                                       __ptext25 1E1B  
                                     __ptext17 1195                               __size_of_setZero 0003  
                                     __ptext50 1D7C                                       __ptext42 10A7  
                                     __ptext34 112F                                       __ptext26 0DD4  
                                     __ptext18 1DAF                                       __ptext51 1D78  
                                     __ptext43 1100                                       __ptext35 1E65  
                                     __ptext27 1F83                                       __ptext19 1035  
                                     __ptext60 1DD2                                       __ptext52 1DD8  
                                     __ptext44 1DAA                                       __ptext36 07C9  
                                     __ptext28 1577                                       __ptext61 1DA0  
                                     __ptext53 12C9                                       __ptext45 1D90  
                                     __ptext37 1E42                                       __ptext29 1310  
                                     __ptext70 1E9F                                       __ptext62 1D74  
                                     __ptext54 1448                                       __ptext46 1D8C  
                                     __ptext38 1D98                                       __ptext71 1E8F  
                                     __ptext63 1D5F                                       __ptext55 1DEA  
                                     __ptext47 1D88                                       __ptext39 1F65  
                                     __ptext80 1D50                                       __ptext72 1E7F  
                                     __ptext64 1D70                                       __ptext56 1E01  
                                     __ptext48 1D84                                       __ptext81 1D4D  
                                     __ptext73 1E59                                       __ptext65 1D5C  
                                     __ptext57 1DA5                                       __ptext49 1D80  
                                     __ptext90 1E09                                       __ptext82 1D4A  
                                     __ptext74 107F                                       __ptext66 0002  
                                     __ptext58 10D1                                       __ptext91 1241  
                                     __ptext83 1F1C                                       __ptext75 1E71  
                                     __ptext67 1000                                       __ptext59 1D62  
                                     __ptext92 1DCC                                       __ptext84 1D6C  
                                     __ptext76 1D59                                       __ptext68 1EBF  
                                     __ptext93 1DC6                                       __ptext85 1DF9  
                                     __ptext77 1D56                                       __ptext69 1EAF  
                                     __ptext94 1DC0                                       __ptext86 1E4D  
                                     __ptext78 1D53                                       __ptext95 1DBA  
                                     __ptext87 1DF1                                       __ptext79 1F4C  
                                     __ptext96 1DB4                                       __ptext88 11CA  
                                     __ptext89 1E12                                       __ptext98 1FE0  
                                     __ptext99 1161                               __size_of_isupper 0017  
                                 _SSP1CON1bits 0215                                   _SSP1CON2bits 0216  
                             __size_of_tolower 0022                                     strcpy@dest 0078  
                             __size_of_strncmp 004E                       _I2C1_CallbackReturnReset 0002  
                                __size_of_main 00AC                                    ?_I2C1_DO_RX 0070  
                                  ?_I2C1_DO_TX 0070                    __end_of_I2C1_MasterClearIrq 1D4D  
                 __end_of_I2C1_DO_RX_NACK_STOP 1D90                                    ?_I2C1_Close 0070  
                      ?_EUSART_SetErrorHandler 0071                                     _RC1STAbits 019D  
                                     efgtoa@fp 00BC                                       efgtoa@ne 00B6  
                                     efgtoa@pp 00B2                                       efgtoa@ou 00A0  
EUSART_SetOverrunErrorHandler@interruptHandler 0071                                       int$flags 007E  
                                     _pressure 01DA                __end_of_I2C1_DO_RX_NACK_RESTART 1D94  
                     I2C1_MasterOperation@read 0026                                       _vfprintf 0800  
           __end_of_INTERRUPT_InterruptManager 0023                     _INTERRUPT_InterruptManager 0004  
                                    printf@fmt 00E1          __end_of_EUSART_SetFramingErrorHandler 1DC0  
       __size_of_EUSART_SetFramingErrorHandler 0006                  _EUSART_SetFramingErrorHandler 1DBA  
                                 _SSP1STATbits 0214                 __size_of_I2C1_DO_SEND_ADR_READ 0008  
                __end_of_I2C1_DO_SEND_ADR_READ 1E09                                   _I2C1_DO_IDLE 1DA5  
                                 _I2C1_DO_RCEN 1DD8                    __end_of_I2C1_MasterSendNack 1D74  
                               _vfpfcnvrt$1529 0065                                     _INTCONbits 000B  
                        ?_EUSART_RxDataHandler 0070                 I2C1_SetAddressNackCallback@ptr 0078  
                         _I2C1_MasterGetRxData 1D5F                          _I2C1_MasterSendTxData 1DA0  
                      __size_of_WDT_Initialize 0004                                       intlevel1 0000  
                                     sendPWM@j 0072                       __end_of_I2C1_MasterClose 1D50  
                       _I2C1_Read1ByteRegister 112F                        ?_PIN_MANAGER_Initialize 0070  
                I2C1_Read1ByteRegister@address 002A                       __end_of_I2C1_MasterStart 1D56  
                     __end_of_I2C1_MasterWrite 1D9C                 __end_of_EUSART_SetErrorHandler 1DBA  
                            __CFG_CLKOUTEN$OFF 0000                                      strcpy@src 0071  
                             ??_I2C1_DO_RX_ACK 0071                                       isupper@c 0071  
                      _I2C1_CallbackReturnStop 1000                                      strncmp@_l 0076  
                                    strncmp@_r 0071           __end_of_EUSART_SetRxInterruptHandler 1DCC  
        __size_of_EUSART_SetRxInterruptHandler 0006                   _EUSART_SetRxInterruptHandler 1DC6  
                         _I2C1_DO_ADDRESS_NACK 1100                         ?_I2C1_MasterDisableIrq 0070  
                                  efgtoa@nmode 00BF                           __size_of_I2C1_Poller 000A  
                                     printf@ap 00EA                             _EUSART_Receive_ISR 1161  
EUSART_SetFramingErrorHandler@interruptHandler 0071                                    ??_vfpfcnvrt 005F  
                     __size_of_I2C1_MasterOpen 000B                       __size_of_I2C1_MasterStop 0003  
                     __size_of_I2C1_Initialize 0009                                  __pstringtext1 1800  
                                __pstringtext2 2000                                  __pstringtext3 2012  
                                __pstringtext4 2021                                  __pstringtext5 2025  
                                __pstringtext6 2029                                  __pstringtext7 202D  
                                __pstringtext8 2031                    __size_of_readPressureSensor 0177  
                                __pstringtext9 0000                       __end_of_I2C1_SetCallback 10A7  
                       __Umul8_16@multiplicand 0071                                    _temperature 01D6  
                                     tolower@c 0077                            ?_EUSART_Receive_ISR 0070  
                                   _SSP1DATPPS 0E21                         __size_of___fpclassifyf 0078  
                                   _SSP1CLKPPS 0E20                            __size_of_I2C1_DO_RX 0047  
                          __size_of_I2C1_DO_TX 0052                                ??_I2C1_DO_RESET 0071  
                         _I2C1_MasterOperation 1F65                                       strncmp@l 0079  
                                     strncmp@n 0073                                       strncmp@r 0077  
                          __size_of_I2C1_Close 0019                          ?_I2C1_MasterGetRxData 0070  
                                   _TX1STAbits 019E                                  ___fladd@signs 0028  
                           EUSART_Write@txData 0072                   __size_of_EUSART_Transmit_ISR 0020  
               __end_of_PIN_MANAGER_Initialize 1204                 __size_of_rd1RegCompleteHandler 0010  
                __end_of_rd1RegCompleteHandler 1E9F                             __size_of_I2C1_Open 0037  
                                  _PWMTMRSbits 061F                                   ___fladd@aexp 0029  
                                 ___fladd@bexp 002A                 __size_of_wr1RegCompleteHandler 0010  
                         ??_EUSART_Receive_ISR 0071                           __Umul8_16@multiplier 0079  
                __end_of_wr1RegCompleteHandler 1EBF                      __size_of_I2C1_DO_TX_EMPTY 002F  
                        ?_I2C1_DO_ADDRESS_NACK 0070                              __Umul8_16@product 0075  
