

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Feb 19 16:09:03 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18346
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	idataBANK5,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
     9                           	psect	stringtext2,global,class=STRCODE,delta=2
    10                           	psect	stringtext3,global,class=STRCODE,delta=2
    11                           	psect	stringtext4,global,class=STRCODE,delta=2
    12                           	psect	stringtext5,global,class=STRCODE,delta=2
    13                           	psect	stringtext6,global,class=STRCODE,delta=2
    14                           	psect	stringtext7,global,class=STRCODE,delta=2
    15                           	psect	stringtext8,global,class=STRCODE,delta=2
    16                           	psect	stringtext9,global,class=STRCODE,delta=2
    17                           	psect	cinit,global,class=CODE,merge=1,delta=2
    18                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    19                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    22                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    23                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    24                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    25                           	psect	inittext,global,class=CODE,delta=2
    26                           	psect	clrtext,global,class=CODE,delta=2
    27                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    28                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    29                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    30                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    31                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    32                           	psect	text1,local,class=CODE,merge=1,delta=2
    33                           	psect	text2,local,class=CODE,merge=1,delta=2
    34                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text4,local,class=CODE,merge=1,delta=2
    36                           	psect	text5,local,class=CODE,merge=1,delta=2
    37                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text7,local,class=CODE,merge=1,delta=2
    39                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text11,local,class=CODE,merge=1,delta=2
    43                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text15,local,class=CODE,merge=1,delta=2
    47                           	psect	text16,local,class=CODE,merge=1,delta=2
    48                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    54                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    55                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    59                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    60                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text31,local,class=CODE,merge=1,delta=2
    63                           	psect	text32,local,class=CODE,merge=1,delta=2
    64                           	psect	text33,local,class=CODE,merge=1,delta=2
    65                           	psect	text34,local,class=CODE,merge=1,inline,delta=2
    66                           	psect	text35,local,class=CODE,merge=1,delta=2
    67                           	psect	text36,local,class=CODE,merge=1,delta=2
    68                           	psect	text37,local,class=CODE,merge=1,delta=2
    69                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    71                           	psect	text40,local,class=CODE,merge=1,delta=2
    72                           	psect	text41,local,class=CODE,merge=1,delta=2
    73                           	psect	text42,local,class=CODE,merge=1,delta=2
    74                           	psect	text43,local,class=CODE,merge=1,delta=2
    75                           	psect	text44,local,class=CODE,merge=1,delta=2
    76                           	psect	text45,local,class=CODE,merge=1,delta=2
    77                           	psect	text46,local,class=CODE,merge=1,delta=2
    78                           	psect	text47,local,class=CODE,merge=1,delta=2
    79                           	psect	text48,local,class=CODE,merge=1,delta=2
    80                           	psect	text49,local,class=CODE,merge=1,delta=2
    81                           	psect	text50,local,class=CODE,merge=1,delta=2
    82                           	psect	text51,local,class=CODE,merge=1,delta=2
    83                           	psect	text52,local,class=CODE,merge=1,delta=2
    84                           	psect	text53,local,class=CODE,merge=1,delta=2
    85                           	psect	text54,local,class=CODE,merge=1,delta=2
    86                           	psect	text55,local,class=CODE,merge=1,delta=2
    87                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    88                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
    89                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
    90                           	psect	text59,local,class=CODE,merge=1,inline,delta=2
    91                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
    92                           	psect	text61,local,class=CODE,merge=1,inline,delta=2
    93                           	psect	text62,local,class=CODE,merge=1,inline,delta=2
    94                           	psect	text63,local,class=CODE,merge=1,delta=2
    95                           	psect	text64,local,class=CODE,merge=1,delta=2
    96                           	psect	text65,local,class=CODE,merge=1,delta=2
    97                           	psect	text66,local,class=CODE,merge=1,delta=2
    98                           	psect	text67,local,class=CODE,merge=1,delta=2
    99                           	psect	text68,local,class=CODE,merge=1,delta=2
   100                           	psect	text69,local,class=CODE,merge=1,delta=2
   101                           	psect	text70,local,class=CODE,merge=1,delta=2
   102                           	psect	text71,local,class=CODE,merge=1,delta=2
   103                           	psect	text72,local,class=CODE,merge=1,delta=2
   104                           	psect	text73,local,class=CODE,merge=1,inline,delta=2
   105                           	psect	text74,local,class=CODE,merge=1,inline,delta=2
   106                           	psect	text75,local,class=CODE,merge=1,inline,delta=2
   107                           	psect	text76,local,class=CODE,merge=1,delta=2
   108                           	psect	text77,local,class=CODE,merge=1,inline,delta=2
   109                           	psect	text78,local,class=CODE,merge=1,inline,delta=2
   110                           	psect	text79,local,class=CODE,merge=1,inline,delta=2
   111                           	psect	text80,local,class=CODE,merge=1,delta=2
   112                           	psect	text81,local,class=CODE,merge=1,delta=2
   113                           	psect	text82,local,class=CODE,merge=1,delta=2
   114                           	psect	text83,local,class=CODE,merge=1,delta=2
   115                           	psect	text84,local,class=CODE,merge=1,delta=2
   116                           	psect	text85,local,class=CODE,merge=1,delta=2
   117                           	psect	text86,local,class=CODE,merge=1,delta=2
   118                           	psect	text87,local,class=CODE,merge=1,delta=2
   119                           	psect	text88,local,class=CODE,merge=1,delta=2
   120                           	psect	text89,local,class=CODE,merge=1,delta=2
   121                           	psect	text90,local,class=CODE,merge=1,delta=2
   122                           	psect	text91,local,class=CODE,merge=1,delta=2
   123                           	psect	text92,local,class=CODE,merge=1,delta=2
   124                           	psect	text93,local,class=CODE,merge=1,delta=2
   125                           	psect	intentry,global,class=CODE,delta=2
   126                           	psect	text95,local,class=CODE,merge=1,delta=2
   127                           	psect	text96,local,class=CODE,merge=1,delta=2
   128                           	psect	text97,local,class=CODE,merge=1,delta=2
   129                           	psect	text98,local,class=CODE,merge=1,delta=2
   130                           	psect	text99,local,class=CODE,merge=1,delta=2
   131                           	psect	text100,local,class=CODE,merge=1,delta=2
   132                           	dabs	1,0x7E,2
   133  0000                     
   134                           ; Version 2.05
   135                           ; Generated 20/12/2018 GMT
   136                           ; 
   137                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   138                           ; All rights reserved.
   139                           ; 
   140                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   141                           ; 
   142                           ; Redistribution and use in source and binary forms, with or without modification, are
   143                           ; permitted provided that the following conditions are met:
   144                           ; 
   145                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   146                           ;        conditions and the following disclaimer.
   147                           ; 
   148                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   149                           ;        of conditions and the following disclaimer in the documentation and/or other
   150                           ;        materials provided with the distribution.
   151                           ; 
   152                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   153                           ;        software without specific prior written permission.
   154                           ; 
   155                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   156                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   157                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   158                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   159                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   160                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   161                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   162                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   163                           ; 
   164                           ; 
   165                           ; Code-generator required, PIC16F18346 Definitions
   166                           ; 
   167                           ; SFR Addresses
   168  0000                     	;# 
   169  0001                     	;# 
   170  0002                     	;# 
   171  0003                     	;# 
   172  0004                     	;# 
   173  0005                     	;# 
   174  0006                     	;# 
   175  0007                     	;# 
   176  0008                     	;# 
   177  0009                     	;# 
   178  000A                     	;# 
   179  000B                     	;# 
   180  000C                     	;# 
   181  000D                     	;# 
   182  000E                     	;# 
   183  0010                     	;# 
   184  0011                     	;# 
   185  0012                     	;# 
   186  0013                     	;# 
   187  0014                     	;# 
   188  0015                     	;# 
   189  0015                     	;# 
   190  0016                     	;# 
   191  0016                     	;# 
   192  0017                     	;# 
   193  0018                     	;# 
   194  0019                     	;# 
   195  0019                     	;# 
   196  001A                     	;# 
   197  001B                     	;# 
   198  001C                     	;# 
   199  001D                     	;# 
   200  001E                     	;# 
   201  001F                     	;# 
   202  008C                     	;# 
   203  008D                     	;# 
   204  008E                     	;# 
   205  0090                     	;# 
   206  0091                     	;# 
   207  0092                     	;# 
   208  0093                     	;# 
   209  0094                     	;# 
   210  0097                     	;# 
   211  009B                     	;# 
   212  009B                     	;# 
   213  009C                     	;# 
   214  009D                     	;# 
   215  009E                     	;# 
   216  009F                     	;# 
   217  010C                     	;# 
   218  010D                     	;# 
   219  010E                     	;# 
   220  0111                     	;# 
   221  0112                     	;# 
   222  0113                     	;# 
   223  0114                     	;# 
   224  0115                     	;# 
   225  0116                     	;# 
   226  0117                     	;# 
   227  0118                     	;# 
   228  0119                     	;# 
   229  018C                     	;# 
   230  018D                     	;# 
   231  018E                     	;# 
   232  0197                     	;# 
   233  0199                     	;# 
   234  0199                     	;# 
   235  0199                     	;# 
   236  019A                     	;# 
   237  019A                     	;# 
   238  019A                     	;# 
   239  019B                     	;# 
   240  019B                     	;# 
   241  019B                     	;# 
   242  019B                     	;# 
   243  019B                     	;# 
   244  019C                     	;# 
   245  019C                     	;# 
   246  019C                     	;# 
   247  019D                     	;# 
   248  019D                     	;# 
   249  019D                     	;# 
   250  019E                     	;# 
   251  019E                     	;# 
   252  019E                     	;# 
   253  019F                     	;# 
   254  019F                     	;# 
   255  019F                     	;# 
   256  019F                     	;# 
   257  019F                     	;# 
   258  020C                     	;# 
   259  020D                     	;# 
   260  020E                     	;# 
   261  0211                     	;# 
   262  0211                     	;# 
   263  0212                     	;# 
   264  0212                     	;# 
   265  0213                     	;# 
   266  0213                     	;# 
   267  0214                     	;# 
   268  0214                     	;# 
   269  0215                     	;# 
   270  0215                     	;# 
   271  0215                     	;# 
   272  0215                     	;# 
   273  0216                     	;# 
   274  0216                     	;# 
   275  0217                     	;# 
   276  0217                     	;# 
   277  0219                     	;# 
   278  021A                     	;# 
   279  021B                     	;# 
   280  021C                     	;# 
   281  021D                     	;# 
   282  021D                     	;# 
   283  021E                     	;# 
   284  021F                     	;# 
   285  028C                     	;# 
   286  028D                     	;# 
   287  028E                     	;# 
   288  0291                     	;# 
   289  0291                     	;# 
   290  0292                     	;# 
   291  0293                     	;# 
   292  0294                     	;# 
   293  0295                     	;# 
   294  0295                     	;# 
   295  0296                     	;# 
   296  0297                     	;# 
   297  0298                     	;# 
   298  029F                     	;# 
   299  030C                     	;# 
   300  030D                     	;# 
   301  030E                     	;# 
   302  0311                     	;# 
   303  0311                     	;# 
   304  0312                     	;# 
   305  0313                     	;# 
   306  0314                     	;# 
   307  0315                     	;# 
   308  0315                     	;# 
   309  0316                     	;# 
   310  0317                     	;# 
   311  0318                     	;# 
   312  038C                     	;# 
   313  038D                     	;# 
   314  038E                     	;# 
   315  0391                     	;# 
   316  0392                     	;# 
   317  0393                     	;# 
   318  0394                     	;# 
   319  0395                     	;# 
   320  0396                     	;# 
   321  0397                     	;# 
   322  0398                     	;# 
   323  0399                     	;# 
   324  039A                     	;# 
   325  039C                     	;# 
   326  039D                     	;# 
   327  039E                     	;# 
   328  039F                     	;# 
   329  0411                     	;# 
   330  0411                     	;# 
   331  0412                     	;# 
   332  0413                     	;# 
   333  0414                     	;# 
   334  0415                     	;# 
   335  0416                     	;# 
   336  0417                     	;# 
   337  0418                     	;# 
   338  0418                     	;# 
   339  0419                     	;# 
   340  041A                     	;# 
   341  041B                     	;# 
   342  041C                     	;# 
   343  041D                     	;# 
   344  041E                     	;# 
   345  041F                     	;# 
   346  0498                     	;# 
   347  0498                     	;# 
   348  0499                     	;# 
   349  049A                     	;# 
   350  049B                     	;# 
   351  049B                     	;# 
   352  049C                     	;# 
   353  049D                     	;# 
   354  049E                     	;# 
   355  049F                     	;# 
   356  0617                     	;# 
   357  0618                     	;# 
   358  0619                     	;# 
   359  0619                     	;# 
   360  061A                     	;# 
   361  061B                     	;# 
   362  061C                     	;# 
   363  061C                     	;# 
   364  061F                     	;# 
   365  0691                     	;# 
   366  0692                     	;# 
   367  0693                     	;# 
   368  0694                     	;# 
   369  0695                     	;# 
   370  0696                     	;# 
   371  0697                     	;# 
   372  0698                     	;# 
   373  0699                     	;# 
   374  0711                     	;# 
   375  0712                     	;# 
   376  0713                     	;# 
   377  0714                     	;# 
   378  0715                     	;# 
   379  0716                     	;# 
   380  0717                     	;# 
   381  0718                     	;# 
   382  0719                     	;# 
   383  0891                     	;# 
   384  0891                     	;# 
   385  0891                     	;# 
   386  0891                     	;# 
   387  0891                     	;# 
   388  0891                     	;# 
   389  0892                     	;# 
   390  0892                     	;# 
   391  0892                     	;# 
   392  0893                     	;# 
   393  0893                     	;# 
   394  0893                     	;# 
   395  0893                     	;# 
   396  0893                     	;# 
   397  0893                     	;# 
   398  0894                     	;# 
   399  0894                     	;# 
   400  0894                     	;# 
   401  0895                     	;# 
   402  0895                     	;# 
   403  0895                     	;# 
   404  0896                     	;# 
   405  0896                     	;# 
   406  0896                     	;# 
   407  089B                     	;# 
   408  0911                     	;# 
   409  0912                     	;# 
   410  0913                     	;# 
   411  0914                     	;# 
   412  0915                     	;# 
   413  0916                     	;# 
   414  0918                     	;# 
   415  0919                     	;# 
   416  091A                     	;# 
   417  091B                     	;# 
   418  091C                     	;# 
   419  091D                     	;# 
   420  091E                     	;# 
   421  091F                     	;# 
   422  0E0F                     	;# 
   423  0E10                     	;# 
   424  0E11                     	;# 
   425  0E12                     	;# 
   426  0E13                     	;# 
   427  0E14                     	;# 
   428  0E15                     	;# 
   429  0E16                     	;# 
   430  0E17                     	;# 
   431  0E18                     	;# 
   432  0E19                     	;# 
   433  0E1A                     	;# 
   434  0E1B                     	;# 
   435  0E1C                     	;# 
   436  0E1D                     	;# 
   437  0E1E                     	;# 
   438  0E1F                     	;# 
   439  0E20                     	;# 
   440  0E21                     	;# 
   441  0E22                     	;# 
   442  0E24                     	;# 
   443  0E25                     	;# 
   444  0E28                     	;# 
   445  0E29                     	;# 
   446  0E2A                     	;# 
   447  0E2B                     	;# 
   448  0E2C                     	;# 
   449  0E2D                     	;# 
   450  0E2E                     	;# 
   451  0E2F                     	;# 
   452  0E90                     	;# 
   453  0E91                     	;# 
   454  0E92                     	;# 
   455  0E94                     	;# 
   456  0E95                     	;# 
   457  0E9C                     	;# 
   458  0E9D                     	;# 
   459  0E9E                     	;# 
   460  0E9F                     	;# 
   461  0EA0                     	;# 
   462  0EA1                     	;# 
   463  0EA2                     	;# 
   464  0EA3                     	;# 
   465  0EA4                     	;# 
   466  0EA5                     	;# 
   467  0EA6                     	;# 
   468  0EA7                     	;# 
   469  0F0F                     	;# 
   470  0F10                     	;# 
   471  0F11                     	;# 
   472  0F12                     	;# 
   473  0F13                     	;# 
   474  0F14                     	;# 
   475  0F15                     	;# 
   476  0F16                     	;# 
   477  0F17                     	;# 
   478  0F18                     	;# 
   479  0F19                     	;# 
   480  0F1A                     	;# 
   481  0F1B                     	;# 
   482  0F1C                     	;# 
   483  0F1D                     	;# 
   484  0F1E                     	;# 
   485  0F1F                     	;# 
   486  0F20                     	;# 
   487  0F21                     	;# 
   488  0F22                     	;# 
   489  0F23                     	;# 
   490  0F24                     	;# 
   491  0F25                     	;# 
   492  0F26                     	;# 
   493  0F27                     	;# 
   494  0F28                     	;# 
   495  0F29                     	;# 
   496  0F2A                     	;# 
   497  0F2B                     	;# 
   498  0F2C                     	;# 
   499  0F2D                     	;# 
   500  0F2E                     	;# 
   501  0F2F                     	;# 
   502  0F30                     	;# 
   503  0F31                     	;# 
   504  0F32                     	;# 
   505  0F33                     	;# 
   506  0F34                     	;# 
   507  0F35                     	;# 
   508  0F36                     	;# 
   509  0F37                     	;# 
   510  0FE4                     	;# 
   511  0FE5                     	;# 
   512  0FE6                     	;# 
   513  0FE7                     	;# 
   514  0FE8                     	;# 
   515  0FE9                     	;# 
   516  0FEA                     	;# 
   517  0FEB                     	;# 
   518  0FED                     	;# 
   519  0FEE                     	;# 
   520  0FEF                     	;# 
   521  0000                     	;# 
   522  0001                     	;# 
   523  0002                     	;# 
   524  0003                     	;# 
   525  0004                     	;# 
   526  0005                     	;# 
   527  0006                     	;# 
   528  0007                     	;# 
   529  0008                     	;# 
   530  0009                     	;# 
   531  000A                     	;# 
   532  000B                     	;# 
   533  000C                     	;# 
   534  000D                     	;# 
   535  000E                     	;# 
   536  0010                     	;# 
   537  0011                     	;# 
   538  0012                     	;# 
   539  0013                     	;# 
   540  0014                     	;# 
   541  0015                     	;# 
   542  0015                     	;# 
   543  0016                     	;# 
   544  0016                     	;# 
   545  0017                     	;# 
   546  0018                     	;# 
   547  0019                     	;# 
   548  0019                     	;# 
   549  001A                     	;# 
   550  001B                     	;# 
   551  001C                     	;# 
   552  001D                     	;# 
   553  001E                     	;# 
   554  001F                     	;# 
   555  008C                     	;# 
   556  008D                     	;# 
   557  008E                     	;# 
   558  0090                     	;# 
   559  0091                     	;# 
   560  0092                     	;# 
   561  0093                     	;# 
   562  0094                     	;# 
   563  0097                     	;# 
   564  009B                     	;# 
   565  009B                     	;# 
   566  009C                     	;# 
   567  009D                     	;# 
   568  009E                     	;# 
   569  009F                     	;# 
   570  010C                     	;# 
   571  010D                     	;# 
   572  010E                     	;# 
   573  0111                     	;# 
   574  0112                     	;# 
   575  0113                     	;# 
   576  0114                     	;# 
   577  0115                     	;# 
   578  0116                     	;# 
   579  0117                     	;# 
   580  0118                     	;# 
   581  0119                     	;# 
   582  018C                     	;# 
   583  018D                     	;# 
   584  018E                     	;# 
   585  0197                     	;# 
   586  0199                     	;# 
   587  0199                     	;# 
   588  0199                     	;# 
   589  019A                     	;# 
   590  019A                     	;# 
   591  019A                     	;# 
   592  019B                     	;# 
   593  019B                     	;# 
   594  019B                     	;# 
   595  019B                     	;# 
   596  019B                     	;# 
   597  019C                     	;# 
   598  019C                     	;# 
   599  019C                     	;# 
   600  019D                     	;# 
   601  019D                     	;# 
   602  019D                     	;# 
   603  019E                     	;# 
   604  019E                     	;# 
   605  019E                     	;# 
   606  019F                     	;# 
   607  019F                     	;# 
   608  019F                     	;# 
   609  019F                     	;# 
   610  019F                     	;# 
   611  020C                     	;# 
   612  020D                     	;# 
   613  020E                     	;# 
   614  0211                     	;# 
   615  0211                     	;# 
   616  0212                     	;# 
   617  0212                     	;# 
   618  0213                     	;# 
   619  0213                     	;# 
   620  0214                     	;# 
   621  0214                     	;# 
   622  0215                     	;# 
   623  0215                     	;# 
   624  0215                     	;# 
   625  0215                     	;# 
   626  0216                     	;# 
   627  0216                     	;# 
   628  0217                     	;# 
   629  0217                     	;# 
   630  0219                     	;# 
   631  021A                     	;# 
   632  021B                     	;# 
   633  021C                     	;# 
   634  021D                     	;# 
   635  021D                     	;# 
   636  021E                     	;# 
   637  021F                     	;# 
   638  028C                     	;# 
   639  028D                     	;# 
   640  028E                     	;# 
   641  0291                     	;# 
   642  0291                     	;# 
   643  0292                     	;# 
   644  0293                     	;# 
   645  0294                     	;# 
   646  0295                     	;# 
   647  0295                     	;# 
   648  0296                     	;# 
   649  0297                     	;# 
   650  0298                     	;# 
   651  029F                     	;# 
   652  030C                     	;# 
   653  030D                     	;# 
   654  030E                     	;# 
   655  0311                     	;# 
   656  0311                     	;# 
   657  0312                     	;# 
   658  0313                     	;# 
   659  0314                     	;# 
   660  0315                     	;# 
   661  0315                     	;# 
   662  0316                     	;# 
   663  0317                     	;# 
   664  0318                     	;# 
   665  038C                     	;# 
   666  038D                     	;# 
   667  038E                     	;# 
   668  0391                     	;# 
   669  0392                     	;# 
   670  0393                     	;# 
   671  0394                     	;# 
   672  0395                     	;# 
   673  0396                     	;# 
   674  0397                     	;# 
   675  0398                     	;# 
   676  0399                     	;# 
   677  039A                     	;# 
   678  039C                     	;# 
   679  039D                     	;# 
   680  039E                     	;# 
   681  039F                     	;# 
   682  0411                     	;# 
   683  0411                     	;# 
   684  0412                     	;# 
   685  0413                     	;# 
   686  0414                     	;# 
   687  0415                     	;# 
   688  0416                     	;# 
   689  0417                     	;# 
   690  0418                     	;# 
   691  0418                     	;# 
   692  0419                     	;# 
   693  041A                     	;# 
   694  041B                     	;# 
   695  041C                     	;# 
   696  041D                     	;# 
   697  041E                     	;# 
   698  041F                     	;# 
   699  0498                     	;# 
   700  0498                     	;# 
   701  0499                     	;# 
   702  049A                     	;# 
   703  049B                     	;# 
   704  049B                     	;# 
   705  049C                     	;# 
   706  049D                     	;# 
   707  049E                     	;# 
   708  049F                     	;# 
   709  0617                     	;# 
   710  0618                     	;# 
   711  0619                     	;# 
   712  0619                     	;# 
   713  061A                     	;# 
   714  061B                     	;# 
   715  061C                     	;# 
   716  061C                     	;# 
   717  061F                     	;# 
   718  0691                     	;# 
   719  0692                     	;# 
   720  0693                     	;# 
   721  0694                     	;# 
   722  0695                     	;# 
   723  0696                     	;# 
   724  0697                     	;# 
   725  0698                     	;# 
   726  0699                     	;# 
   727  0711                     	;# 
   728  0712                     	;# 
   729  0713                     	;# 
   730  0714                     	;# 
   731  0715                     	;# 
   732  0716                     	;# 
   733  0717                     	;# 
   734  0718                     	;# 
   735  0719                     	;# 
   736  0891                     	;# 
   737  0891                     	;# 
   738  0891                     	;# 
   739  0891                     	;# 
   740  0891                     	;# 
   741  0891                     	;# 
   742  0892                     	;# 
   743  0892                     	;# 
   744  0892                     	;# 
   745  0893                     	;# 
   746  0893                     	;# 
   747  0893                     	;# 
   748  0893                     	;# 
   749  0893                     	;# 
   750  0893                     	;# 
   751  0894                     	;# 
   752  0894                     	;# 
   753  0894                     	;# 
   754  0895                     	;# 
   755  0895                     	;# 
   756  0895                     	;# 
   757  0896                     	;# 
   758  0896                     	;# 
   759  0896                     	;# 
   760  089B                     	;# 
   761  0911                     	;# 
   762  0912                     	;# 
   763  0913                     	;# 
   764  0914                     	;# 
   765  0915                     	;# 
   766  0916                     	;# 
   767  0918                     	;# 
   768  0919                     	;# 
   769  091A                     	;# 
   770  091B                     	;# 
   771  091C                     	;# 
   772  091D                     	;# 
   773  091E                     	;# 
   774  091F                     	;# 
   775  0E0F                     	;# 
   776  0E10                     	;# 
   777  0E11                     	;# 
   778  0E12                     	;# 
   779  0E13                     	;# 
   780  0E14                     	;# 
   781  0E15                     	;# 
   782  0E16                     	;# 
   783  0E17                     	;# 
   784  0E18                     	;# 
   785  0E19                     	;# 
   786  0E1A                     	;# 
   787  0E1B                     	;# 
   788  0E1C                     	;# 
   789  0E1D                     	;# 
   790  0E1E                     	;# 
   791  0E1F                     	;# 
   792  0E20                     	;# 
   793  0E21                     	;# 
   794  0E22                     	;# 
   795  0E24                     	;# 
   796  0E25                     	;# 
   797  0E28                     	;# 
   798  0E29                     	;# 
   799  0E2A                     	;# 
   800  0E2B                     	;# 
   801  0E2C                     	;# 
   802  0E2D                     	;# 
   803  0E2E                     	;# 
   804  0E2F                     	;# 
   805  0E90                     	;# 
   806  0E91                     	;# 
   807  0E92                     	;# 
   808  0E94                     	;# 
   809  0E95                     	;# 
   810  0E9C                     	;# 
   811  0E9D                     	;# 
   812  0E9E                     	;# 
   813  0E9F                     	;# 
   814  0EA0                     	;# 
   815  0EA1                     	;# 
   816  0EA2                     	;# 
   817  0EA3                     	;# 
   818  0EA4                     	;# 
   819  0EA5                     	;# 
   820  0EA6                     	;# 
   821  0EA7                     	;# 
   822  0F0F                     	;# 
   823  0F10                     	;# 
   824  0F11                     	;# 
   825  0F12                     	;# 
   826  0F13                     	;# 
   827  0F14                     	;# 
   828  0F15                     	;# 
   829  0F16                     	;# 
   830  0F17                     	;# 
   831  0F18                     	;# 
   832  0F19                     	;# 
   833  0F1A                     	;# 
   834  0F1B                     	;# 
   835  0F1C                     	;# 
   836  0F1D                     	;# 
   837  0F1E                     	;# 
   838  0F1F                     	;# 
   839  0F20                     	;# 
   840  0F21                     	;# 
   841  0F22                     	;# 
   842  0F23                     	;# 
   843  0F24                     	;# 
   844  0F25                     	;# 
   845  0F26                     	;# 
   846  0F27                     	;# 
   847  0F28                     	;# 
   848  0F29                     	;# 
   849  0F2A                     	;# 
   850  0F2B                     	;# 
   851  0F2C                     	;# 
   852  0F2D                     	;# 
   853  0F2E                     	;# 
   854  0F2F                     	;# 
   855  0F30                     	;# 
   856  0F31                     	;# 
   857  0F32                     	;# 
   858  0F33                     	;# 
   859  0F34                     	;# 
   860  0F35                     	;# 
   861  0F36                     	;# 
   862  0F37                     	;# 
   863  0FE4                     	;# 
   864  0FE5                     	;# 
   865  0FE6                     	;# 
   866  0FE7                     	;# 
   867  0FE8                     	;# 
   868  0FE9                     	;# 
   869  0FEA                     	;# 
   870  0FEB                     	;# 
   871  0FED                     	;# 
   872  0FEE                     	;# 
   873  0FEF                     	;# 
   874  0000                     	;# 
   875  0001                     	;# 
   876  0002                     	;# 
   877  0003                     	;# 
   878  0004                     	;# 
   879  0005                     	;# 
   880  0006                     	;# 
   881  0007                     	;# 
   882  0008                     	;# 
   883  0009                     	;# 
   884  000A                     	;# 
   885  000B                     	;# 
   886  000C                     	;# 
   887  000D                     	;# 
   888  000E                     	;# 
   889  0010                     	;# 
   890  0011                     	;# 
   891  0012                     	;# 
   892  0013                     	;# 
   893  0014                     	;# 
   894  0015                     	;# 
   895  0015                     	;# 
   896  0016                     	;# 
   897  0016                     	;# 
   898  0017                     	;# 
   899  0018                     	;# 
   900  0019                     	;# 
   901  0019                     	;# 
   902  001A                     	;# 
   903  001B                     	;# 
   904  001C                     	;# 
   905  001D                     	;# 
   906  001E                     	;# 
   907  001F                     	;# 
   908  008C                     	;# 
   909  008D                     	;# 
   910  008E                     	;# 
   911  0090                     	;# 
   912  0091                     	;# 
   913  0092                     	;# 
   914  0093                     	;# 
   915  0094                     	;# 
   916  0097                     	;# 
   917  009B                     	;# 
   918  009B                     	;# 
   919  009C                     	;# 
   920  009D                     	;# 
   921  009E                     	;# 
   922  009F                     	;# 
   923  010C                     	;# 
   924  010D                     	;# 
   925  010E                     	;# 
   926  0111                     	;# 
   927  0112                     	;# 
   928  0113                     	;# 
   929  0114                     	;# 
   930  0115                     	;# 
   931  0116                     	;# 
   932  0117                     	;# 
   933  0118                     	;# 
   934  0119                     	;# 
   935  018C                     	;# 
   936  018D                     	;# 
   937  018E                     	;# 
   938  0197                     	;# 
   939  0199                     	;# 
   940  0199                     	;# 
   941  0199                     	;# 
   942  019A                     	;# 
   943  019A                     	;# 
   944  019A                     	;# 
   945  019B                     	;# 
   946  019B                     	;# 
   947  019B                     	;# 
   948  019B                     	;# 
   949  019B                     	;# 
   950  019C                     	;# 
   951  019C                     	;# 
   952  019C                     	;# 
   953  019D                     	;# 
   954  019D                     	;# 
   955  019D                     	;# 
   956  019E                     	;# 
   957  019E                     	;# 
   958  019E                     	;# 
   959  019F                     	;# 
   960  019F                     	;# 
   961  019F                     	;# 
   962  019F                     	;# 
   963  019F                     	;# 
   964  020C                     	;# 
   965  020D                     	;# 
   966  020E                     	;# 
   967  0211                     	;# 
   968  0211                     	;# 
   969  0212                     	;# 
   970  0212                     	;# 
   971  0213                     	;# 
   972  0213                     	;# 
   973  0214                     	;# 
   974  0214                     	;# 
   975  0215                     	;# 
   976  0215                     	;# 
   977  0215                     	;# 
   978  0215                     	;# 
   979  0216                     	;# 
   980  0216                     	;# 
   981  0217                     	;# 
   982  0217                     	;# 
   983  0219                     	;# 
   984  021A                     	;# 
   985  021B                     	;# 
   986  021C                     	;# 
   987  021D                     	;# 
   988  021D                     	;# 
   989  021E                     	;# 
   990  021F                     	;# 
   991  028C                     	;# 
   992  028D                     	;# 
   993  028E                     	;# 
   994  0291                     	;# 
   995  0291                     	;# 
   996  0292                     	;# 
   997  0293                     	;# 
   998  0294                     	;# 
   999  0295                     	;# 
  1000  0295                     	;# 
  1001  0296                     	;# 
  1002  0297                     	;# 
  1003  0298                     	;# 
  1004  029F                     	;# 
  1005  030C                     	;# 
  1006  030D                     	;# 
  1007  030E                     	;# 
  1008  0311                     	;# 
  1009  0311                     	;# 
  1010  0312                     	;# 
  1011  0313                     	;# 
  1012  0314                     	;# 
  1013  0315                     	;# 
  1014  0315                     	;# 
  1015  0316                     	;# 
  1016  0317                     	;# 
  1017  0318                     	;# 
  1018  038C                     	;# 
  1019  038D                     	;# 
  1020  038E                     	;# 
  1021  0391                     	;# 
  1022  0392                     	;# 
  1023  0393                     	;# 
  1024  0394                     	;# 
  1025  0395                     	;# 
  1026  0396                     	;# 
  1027  0397                     	;# 
  1028  0398                     	;# 
  1029  0399                     	;# 
  1030  039A                     	;# 
  1031  039C                     	;# 
  1032  039D                     	;# 
  1033  039E                     	;# 
  1034  039F                     	;# 
  1035  0411                     	;# 
  1036  0411                     	;# 
  1037  0412                     	;# 
  1038  0413                     	;# 
  1039  0414                     	;# 
  1040  0415                     	;# 
  1041  0416                     	;# 
  1042  0417                     	;# 
  1043  0418                     	;# 
  1044  0418                     	;# 
  1045  0419                     	;# 
  1046  041A                     	;# 
  1047  041B                     	;# 
  1048  041C                     	;# 
  1049  041D                     	;# 
  1050  041E                     	;# 
  1051  041F                     	;# 
  1052  0498                     	;# 
  1053  0498                     	;# 
  1054  0499                     	;# 
  1055  049A                     	;# 
  1056  049B                     	;# 
  1057  049B                     	;# 
  1058  049C                     	;# 
  1059  049D                     	;# 
  1060  049E                     	;# 
  1061  049F                     	;# 
  1062  0617                     	;# 
  1063  0618                     	;# 
  1064  0619                     	;# 
  1065  0619                     	;# 
  1066  061A                     	;# 
  1067  061B                     	;# 
  1068  061C                     	;# 
  1069  061C                     	;# 
  1070  061F                     	;# 
  1071  0691                     	;# 
  1072  0692                     	;# 
  1073  0693                     	;# 
  1074  0694                     	;# 
  1075  0695                     	;# 
  1076  0696                     	;# 
  1077  0697                     	;# 
  1078  0698                     	;# 
  1079  0699                     	;# 
  1080  0711                     	;# 
  1081  0712                     	;# 
  1082  0713                     	;# 
  1083  0714                     	;# 
  1084  0715                     	;# 
  1085  0716                     	;# 
  1086  0717                     	;# 
  1087  0718                     	;# 
  1088  0719                     	;# 
  1089  0891                     	;# 
  1090  0891                     	;# 
  1091  0891                     	;# 
  1092  0891                     	;# 
  1093  0891                     	;# 
  1094  0891                     	;# 
  1095  0892                     	;# 
  1096  0892                     	;# 
  1097  0892                     	;# 
  1098  0893                     	;# 
  1099  0893                     	;# 
  1100  0893                     	;# 
  1101  0893                     	;# 
  1102  0893                     	;# 
  1103  0893                     	;# 
  1104  0894                     	;# 
  1105  0894                     	;# 
  1106  0894                     	;# 
  1107  0895                     	;# 
  1108  0895                     	;# 
  1109  0895                     	;# 
  1110  0896                     	;# 
  1111  0896                     	;# 
  1112  0896                     	;# 
  1113  089B                     	;# 
  1114  0911                     	;# 
  1115  0912                     	;# 
  1116  0913                     	;# 
  1117  0914                     	;# 
  1118  0915                     	;# 
  1119  0916                     	;# 
  1120  0918                     	;# 
  1121  0919                     	;# 
  1122  091A                     	;# 
  1123  091B                     	;# 
  1124  091C                     	;# 
  1125  091D                     	;# 
  1126  091E                     	;# 
  1127  091F                     	;# 
  1128  0E0F                     	;# 
  1129  0E10                     	;# 
  1130  0E11                     	;# 
  1131  0E12                     	;# 
  1132  0E13                     	;# 
  1133  0E14                     	;# 
  1134  0E15                     	;# 
  1135  0E16                     	;# 
  1136  0E17                     	;# 
  1137  0E18                     	;# 
  1138  0E19                     	;# 
  1139  0E1A                     	;# 
  1140  0E1B                     	;# 
  1141  0E1C                     	;# 
  1142  0E1D                     	;# 
  1143  0E1E                     	;# 
  1144  0E1F                     	;# 
  1145  0E20                     	;# 
  1146  0E21                     	;# 
  1147  0E22                     	;# 
  1148  0E24                     	;# 
  1149  0E25                     	;# 
  1150  0E28                     	;# 
  1151  0E29                     	;# 
  1152  0E2A                     	;# 
  1153  0E2B                     	;# 
  1154  0E2C                     	;# 
  1155  0E2D                     	;# 
  1156  0E2E                     	;# 
  1157  0E2F                     	;# 
  1158  0E90                     	;# 
  1159  0E91                     	;# 
  1160  0E92                     	;# 
  1161  0E94                     	;# 
  1162  0E95                     	;# 
  1163  0E9C                     	;# 
  1164  0E9D                     	;# 
  1165  0E9E                     	;# 
  1166  0E9F                     	;# 
  1167  0EA0                     	;# 
  1168  0EA1                     	;# 
  1169  0EA2                     	;# 
  1170  0EA3                     	;# 
  1171  0EA4                     	;# 
  1172  0EA5                     	;# 
  1173  0EA6                     	;# 
  1174  0EA7                     	;# 
  1175  0F0F                     	;# 
  1176  0F10                     	;# 
  1177  0F11                     	;# 
  1178  0F12                     	;# 
  1179  0F13                     	;# 
  1180  0F14                     	;# 
  1181  0F15                     	;# 
  1182  0F16                     	;# 
  1183  0F17                     	;# 
  1184  0F18                     	;# 
  1185  0F19                     	;# 
  1186  0F1A                     	;# 
  1187  0F1B                     	;# 
  1188  0F1C                     	;# 
  1189  0F1D                     	;# 
  1190  0F1E                     	;# 
  1191  0F1F                     	;# 
  1192  0F20                     	;# 
  1193  0F21                     	;# 
  1194  0F22                     	;# 
  1195  0F23                     	;# 
  1196  0F24                     	;# 
  1197  0F25                     	;# 
  1198  0F26                     	;# 
  1199  0F27                     	;# 
  1200  0F28                     	;# 
  1201  0F29                     	;# 
  1202  0F2A                     	;# 
  1203  0F2B                     	;# 
  1204  0F2C                     	;# 
  1205  0F2D                     	;# 
  1206  0F2E                     	;# 
  1207  0F2F                     	;# 
  1208  0F30                     	;# 
  1209  0F31                     	;# 
  1210  0F32                     	;# 
  1211  0F33                     	;# 
  1212  0F34                     	;# 
  1213  0F35                     	;# 
  1214  0F36                     	;# 
  1215  0F37                     	;# 
  1216  0FE4                     	;# 
  1217  0FE5                     	;# 
  1218  0FE6                     	;# 
  1219  0FE7                     	;# 
  1220  0FE8                     	;# 
  1221  0FE9                     	;# 
  1222  0FEA                     	;# 
  1223  0FEB                     	;# 
  1224  0FED                     	;# 
  1225  0FEE                     	;# 
  1226  0FEF                     	;# 
  1227  0000                     	;# 
  1228  0001                     	;# 
  1229  0002                     	;# 
  1230  0003                     	;# 
  1231  0004                     	;# 
  1232  0005                     	;# 
  1233  0006                     	;# 
  1234  0007                     	;# 
  1235  0008                     	;# 
  1236  0009                     	;# 
  1237  000A                     	;# 
  1238  000B                     	;# 
  1239  000C                     	;# 
  1240  000D                     	;# 
  1241  000E                     	;# 
  1242  0010                     	;# 
  1243  0011                     	;# 
  1244  0012                     	;# 
  1245  0013                     	;# 
  1246  0014                     	;# 
  1247  0015                     	;# 
  1248  0015                     	;# 
  1249  0016                     	;# 
  1250  0016                     	;# 
  1251  0017                     	;# 
  1252  0018                     	;# 
  1253  0019                     	;# 
  1254  0019                     	;# 
  1255  001A                     	;# 
  1256  001B                     	;# 
  1257  001C                     	;# 
  1258  001D                     	;# 
  1259  001E                     	;# 
  1260  001F                     	;# 
  1261  008C                     	;# 
  1262  008D                     	;# 
  1263  008E                     	;# 
  1264  0090                     	;# 
  1265  0091                     	;# 
  1266  0092                     	;# 
  1267  0093                     	;# 
  1268  0094                     	;# 
  1269  0097                     	;# 
  1270  009B                     	;# 
  1271  009B                     	;# 
  1272  009C                     	;# 
  1273  009D                     	;# 
  1274  009E                     	;# 
  1275  009F                     	;# 
  1276  010C                     	;# 
  1277  010D                     	;# 
  1278  010E                     	;# 
  1279  0111                     	;# 
  1280  0112                     	;# 
  1281  0113                     	;# 
  1282  0114                     	;# 
  1283  0115                     	;# 
  1284  0116                     	;# 
  1285  0117                     	;# 
  1286  0118                     	;# 
  1287  0119                     	;# 
  1288  018C                     	;# 
  1289  018D                     	;# 
  1290  018E                     	;# 
  1291  0197                     	;# 
  1292  0199                     	;# 
  1293  0199                     	;# 
  1294  0199                     	;# 
  1295  019A                     	;# 
  1296  019A                     	;# 
  1297  019A                     	;# 
  1298  019B                     	;# 
  1299  019B                     	;# 
  1300  019B                     	;# 
  1301  019B                     	;# 
  1302  019B                     	;# 
  1303  019C                     	;# 
  1304  019C                     	;# 
  1305  019C                     	;# 
  1306  019D                     	;# 
  1307  019D                     	;# 
  1308  019D                     	;# 
  1309  019E                     	;# 
  1310  019E                     	;# 
  1311  019E                     	;# 
  1312  019F                     	;# 
  1313  019F                     	;# 
  1314  019F                     	;# 
  1315  019F                     	;# 
  1316  019F                     	;# 
  1317  020C                     	;# 
  1318  020D                     	;# 
  1319  020E                     	;# 
  1320  0211                     	;# 
  1321  0211                     	;# 
  1322  0212                     	;# 
  1323  0212                     	;# 
  1324  0213                     	;# 
  1325  0213                     	;# 
  1326  0214                     	;# 
  1327  0214                     	;# 
  1328  0215                     	;# 
  1329  0215                     	;# 
  1330  0215                     	;# 
  1331  0215                     	;# 
  1332  0216                     	;# 
  1333  0216                     	;# 
  1334  0217                     	;# 
  1335  0217                     	;# 
  1336  0219                     	;# 
  1337  021A                     	;# 
  1338  021B                     	;# 
  1339  021C                     	;# 
  1340  021D                     	;# 
  1341  021D                     	;# 
  1342  021E                     	;# 
  1343  021F                     	;# 
  1344  028C                     	;# 
  1345  028D                     	;# 
  1346  028E                     	;# 
  1347  0291                     	;# 
  1348  0291                     	;# 
  1349  0292                     	;# 
  1350  0293                     	;# 
  1351  0294                     	;# 
  1352  0295                     	;# 
  1353  0295                     	;# 
  1354  0296                     	;# 
  1355  0297                     	;# 
  1356  0298                     	;# 
  1357  029F                     	;# 
  1358  030C                     	;# 
  1359  030D                     	;# 
  1360  030E                     	;# 
  1361  0311                     	;# 
  1362  0311                     	;# 
  1363  0312                     	;# 
  1364  0313                     	;# 
  1365  0314                     	;# 
  1366  0315                     	;# 
  1367  0315                     	;# 
  1368  0316                     	;# 
  1369  0317                     	;# 
  1370  0318                     	;# 
  1371  038C                     	;# 
  1372  038D                     	;# 
  1373  038E                     	;# 
  1374  0391                     	;# 
  1375  0392                     	;# 
  1376  0393                     	;# 
  1377  0394                     	;# 
  1378  0395                     	;# 
  1379  0396                     	;# 
  1380  0397                     	;# 
  1381  0398                     	;# 
  1382  0399                     	;# 
  1383  039A                     	;# 
  1384  039C                     	;# 
  1385  039D                     	;# 
  1386  039E                     	;# 
  1387  039F                     	;# 
  1388  0411                     	;# 
  1389  0411                     	;# 
  1390  0412                     	;# 
  1391  0413                     	;# 
  1392  0414                     	;# 
  1393  0415                     	;# 
  1394  0416                     	;# 
  1395  0417                     	;# 
  1396  0418                     	;# 
  1397  0418                     	;# 
  1398  0419                     	;# 
  1399  041A                     	;# 
  1400  041B                     	;# 
  1401  041C                     	;# 
  1402  041D                     	;# 
  1403  041E                     	;# 
  1404  041F                     	;# 
  1405  0498                     	;# 
  1406  0498                     	;# 
  1407  0499                     	;# 
  1408  049A                     	;# 
  1409  049B                     	;# 
  1410  049B                     	;# 
  1411  049C                     	;# 
  1412  049D                     	;# 
  1413  049E                     	;# 
  1414  049F                     	;# 
  1415  0617                     	;# 
  1416  0618                     	;# 
  1417  0619                     	;# 
  1418  0619                     	;# 
  1419  061A                     	;# 
  1420  061B                     	;# 
  1421  061C                     	;# 
  1422  061C                     	;# 
  1423  061F                     	;# 
  1424  0691                     	;# 
  1425  0692                     	;# 
  1426  0693                     	;# 
  1427  0694                     	;# 
  1428  0695                     	;# 
  1429  0696                     	;# 
  1430  0697                     	;# 
  1431  0698                     	;# 
  1432  0699                     	;# 
  1433  0711                     	;# 
  1434  0712                     	;# 
  1435  0713                     	;# 
  1436  0714                     	;# 
  1437  0715                     	;# 
  1438  0716                     	;# 
  1439  0717                     	;# 
  1440  0718                     	;# 
  1441  0719                     	;# 
  1442  0891                     	;# 
  1443  0891                     	;# 
  1444  0891                     	;# 
  1445  0891                     	;# 
  1446  0891                     	;# 
  1447  0891                     	;# 
  1448  0892                     	;# 
  1449  0892                     	;# 
  1450  0892                     	;# 
  1451  0893                     	;# 
  1452  0893                     	;# 
  1453  0893                     	;# 
  1454  0893                     	;# 
  1455  0893                     	;# 
  1456  0893                     	;# 
  1457  0894                     	;# 
  1458  0894                     	;# 
  1459  0894                     	;# 
  1460  0895                     	;# 
  1461  0895                     	;# 
  1462  0895                     	;# 
  1463  0896                     	;# 
  1464  0896                     	;# 
  1465  0896                     	;# 
  1466  089B                     	;# 
  1467  0911                     	;# 
  1468  0912                     	;# 
  1469  0913                     	;# 
  1470  0914                     	;# 
  1471  0915                     	;# 
  1472  0916                     	;# 
  1473  0918                     	;# 
  1474  0919                     	;# 
  1475  091A                     	;# 
  1476  091B                     	;# 
  1477  091C                     	;# 
  1478  091D                     	;# 
  1479  091E                     	;# 
  1480  091F                     	;# 
  1481  0E0F                     	;# 
  1482  0E10                     	;# 
  1483  0E11                     	;# 
  1484  0E12                     	;# 
  1485  0E13                     	;# 
  1486  0E14                     	;# 
  1487  0E15                     	;# 
  1488  0E16                     	;# 
  1489  0E17                     	;# 
  1490  0E18                     	;# 
  1491  0E19                     	;# 
  1492  0E1A                     	;# 
  1493  0E1B                     	;# 
  1494  0E1C                     	;# 
  1495  0E1D                     	;# 
  1496  0E1E                     	;# 
  1497  0E1F                     	;# 
  1498  0E20                     	;# 
  1499  0E21                     	;# 
  1500  0E22                     	;# 
  1501  0E24                     	;# 
  1502  0E25                     	;# 
  1503  0E28                     	;# 
  1504  0E29                     	;# 
  1505  0E2A                     	;# 
  1506  0E2B                     	;# 
  1507  0E2C                     	;# 
  1508  0E2D                     	;# 
  1509  0E2E                     	;# 
  1510  0E2F                     	;# 
  1511  0E90                     	;# 
  1512  0E91                     	;# 
  1513  0E92                     	;# 
  1514  0E94                     	;# 
  1515  0E95                     	;# 
  1516  0E9C                     	;# 
  1517  0E9D                     	;# 
  1518  0E9E                     	;# 
  1519  0E9F                     	;# 
  1520  0EA0                     	;# 
  1521  0EA1                     	;# 
  1522  0EA2                     	;# 
  1523  0EA3                     	;# 
  1524  0EA4                     	;# 
  1525  0EA5                     	;# 
  1526  0EA6                     	;# 
  1527  0EA7                     	;# 
  1528  0F0F                     	;# 
  1529  0F10                     	;# 
  1530  0F11                     	;# 
  1531  0F12                     	;# 
  1532  0F13                     	;# 
  1533  0F14                     	;# 
  1534  0F15                     	;# 
  1535  0F16                     	;# 
  1536  0F17                     	;# 
  1537  0F18                     	;# 
  1538  0F19                     	;# 
  1539  0F1A                     	;# 
  1540  0F1B                     	;# 
  1541  0F1C                     	;# 
  1542  0F1D                     	;# 
  1543  0F1E                     	;# 
  1544  0F1F                     	;# 
  1545  0F20                     	;# 
  1546  0F21                     	;# 
  1547  0F22                     	;# 
  1548  0F23                     	;# 
  1549  0F24                     	;# 
  1550  0F25                     	;# 
  1551  0F26                     	;# 
  1552  0F27                     	;# 
  1553  0F28                     	;# 
  1554  0F29                     	;# 
  1555  0F2A                     	;# 
  1556  0F2B                     	;# 
  1557  0F2C                     	;# 
  1558  0F2D                     	;# 
  1559  0F2E                     	;# 
  1560  0F2F                     	;# 
  1561  0F30                     	;# 
  1562  0F31                     	;# 
  1563  0F32                     	;# 
  1564  0F33                     	;# 
  1565  0F34                     	;# 
  1566  0F35                     	;# 
  1567  0F36                     	;# 
  1568  0F37                     	;# 
  1569  0FE4                     	;# 
  1570  0FE5                     	;# 
  1571  0FE6                     	;# 
  1572  0FE7                     	;# 
  1573  0FE8                     	;# 
  1574  0FE9                     	;# 
  1575  0FEA                     	;# 
  1576  0FEB                     	;# 
  1577  0FED                     	;# 
  1578  0FEE                     	;# 
  1579  0FEF                     	;# 
  1580  0000                     	;# 
  1581  0001                     	;# 
  1582  0002                     	;# 
  1583  0003                     	;# 
  1584  0004                     	;# 
  1585  0005                     	;# 
  1586  0006                     	;# 
  1587  0007                     	;# 
  1588  0008                     	;# 
  1589  0009                     	;# 
  1590  000A                     	;# 
  1591  000B                     	;# 
  1592  000C                     	;# 
  1593  000D                     	;# 
  1594  000E                     	;# 
  1595  0010                     	;# 
  1596  0011                     	;# 
  1597  0012                     	;# 
  1598  0013                     	;# 
  1599  0014                     	;# 
  1600  0015                     	;# 
  1601  0015                     	;# 
  1602  0016                     	;# 
  1603  0016                     	;# 
  1604  0017                     	;# 
  1605  0018                     	;# 
  1606  0019                     	;# 
  1607  0019                     	;# 
  1608  001A                     	;# 
  1609  001B                     	;# 
  1610  001C                     	;# 
  1611  001D                     	;# 
  1612  001E                     	;# 
  1613  001F                     	;# 
  1614  008C                     	;# 
  1615  008D                     	;# 
  1616  008E                     	;# 
  1617  0090                     	;# 
  1618  0091                     	;# 
  1619  0092                     	;# 
  1620  0093                     	;# 
  1621  0094                     	;# 
  1622  0097                     	;# 
  1623  009B                     	;# 
  1624  009B                     	;# 
  1625  009C                     	;# 
  1626  009D                     	;# 
  1627  009E                     	;# 
  1628  009F                     	;# 
  1629  010C                     	;# 
  1630  010D                     	;# 
  1631  010E                     	;# 
  1632  0111                     	;# 
  1633  0112                     	;# 
  1634  0113                     	;# 
  1635  0114                     	;# 
  1636  0115                     	;# 
  1637  0116                     	;# 
  1638  0117                     	;# 
  1639  0118                     	;# 
  1640  0119                     	;# 
  1641  018C                     	;# 
  1642  018D                     	;# 
  1643  018E                     	;# 
  1644  0197                     	;# 
  1645  0199                     	;# 
  1646  0199                     	;# 
  1647  0199                     	;# 
  1648  019A                     	;# 
  1649  019A                     	;# 
  1650  019A                     	;# 
  1651  019B                     	;# 
  1652  019B                     	;# 
  1653  019B                     	;# 
  1654  019B                     	;# 
  1655  019B                     	;# 
  1656  019C                     	;# 
  1657  019C                     	;# 
  1658  019C                     	;# 
  1659  019D                     	;# 
  1660  019D                     	;# 
  1661  019D                     	;# 
  1662  019E                     	;# 
  1663  019E                     	;# 
  1664  019E                     	;# 
  1665  019F                     	;# 
  1666  019F                     	;# 
  1667  019F                     	;# 
  1668  019F                     	;# 
  1669  019F                     	;# 
  1670  020C                     	;# 
  1671  020D                     	;# 
  1672  020E                     	;# 
  1673  0211                     	;# 
  1674  0211                     	;# 
  1675  0212                     	;# 
  1676  0212                     	;# 
  1677  0213                     	;# 
  1678  0213                     	;# 
  1679  0214                     	;# 
  1680  0214                     	;# 
  1681  0215                     	;# 
  1682  0215                     	;# 
  1683  0215                     	;# 
  1684  0215                     	;# 
  1685  0216                     	;# 
  1686  0216                     	;# 
  1687  0217                     	;# 
  1688  0217                     	;# 
  1689  0219                     	;# 
  1690  021A                     	;# 
  1691  021B                     	;# 
  1692  021C                     	;# 
  1693  021D                     	;# 
  1694  021D                     	;# 
  1695  021E                     	;# 
  1696  021F                     	;# 
  1697  028C                     	;# 
  1698  028D                     	;# 
  1699  028E                     	;# 
  1700  0291                     	;# 
  1701  0291                     	;# 
  1702  0292                     	;# 
  1703  0293                     	;# 
  1704  0294                     	;# 
  1705  0295                     	;# 
  1706  0295                     	;# 
  1707  0296                     	;# 
  1708  0297                     	;# 
  1709  0298                     	;# 
  1710  029F                     	;# 
  1711  030C                     	;# 
  1712  030D                     	;# 
  1713  030E                     	;# 
  1714  0311                     	;# 
  1715  0311                     	;# 
  1716  0312                     	;# 
  1717  0313                     	;# 
  1718  0314                     	;# 
  1719  0315                     	;# 
  1720  0315                     	;# 
  1721  0316                     	;# 
  1722  0317                     	;# 
  1723  0318                     	;# 
  1724  038C                     	;# 
  1725  038D                     	;# 
  1726  038E                     	;# 
  1727  0391                     	;# 
  1728  0392                     	;# 
  1729  0393                     	;# 
  1730  0394                     	;# 
  1731  0395                     	;# 
  1732  0396                     	;# 
  1733  0397                     	;# 
  1734  0398                     	;# 
  1735  0399                     	;# 
  1736  039A                     	;# 
  1737  039C                     	;# 
  1738  039D                     	;# 
  1739  039E                     	;# 
  1740  039F                     	;# 
  1741  0411                     	;# 
  1742  0411                     	;# 
  1743  0412                     	;# 
  1744  0413                     	;# 
  1745  0414                     	;# 
  1746  0415                     	;# 
  1747  0416                     	;# 
  1748  0417                     	;# 
  1749  0418                     	;# 
  1750  0418                     	;# 
  1751  0419                     	;# 
  1752  041A                     	;# 
  1753  041B                     	;# 
  1754  041C                     	;# 
  1755  041D                     	;# 
  1756  041E                     	;# 
  1757  041F                     	;# 
  1758  0498                     	;# 
  1759  0498                     	;# 
  1760  0499                     	;# 
  1761  049A                     	;# 
  1762  049B                     	;# 
  1763  049B                     	;# 
  1764  049C                     	;# 
  1765  049D                     	;# 
  1766  049E                     	;# 
  1767  049F                     	;# 
  1768  0617                     	;# 
  1769  0618                     	;# 
  1770  0619                     	;# 
  1771  0619                     	;# 
  1772  061A                     	;# 
  1773  061B                     	;# 
  1774  061C                     	;# 
  1775  061C                     	;# 
  1776  061F                     	;# 
  1777  0691                     	;# 
  1778  0692                     	;# 
  1779  0693                     	;# 
  1780  0694                     	;# 
  1781  0695                     	;# 
  1782  0696                     	;# 
  1783  0697                     	;# 
  1784  0698                     	;# 
  1785  0699                     	;# 
  1786  0711                     	;# 
  1787  0712                     	;# 
  1788  0713                     	;# 
  1789  0714                     	;# 
  1790  0715                     	;# 
  1791  0716                     	;# 
  1792  0717                     	;# 
  1793  0718                     	;# 
  1794  0719                     	;# 
  1795  0891                     	;# 
  1796  0891                     	;# 
  1797  0891                     	;# 
  1798  0891                     	;# 
  1799  0891                     	;# 
  1800  0891                     	;# 
  1801  0892                     	;# 
  1802  0892                     	;# 
  1803  0892                     	;# 
  1804  0893                     	;# 
  1805  0893                     	;# 
  1806  0893                     	;# 
  1807  0893                     	;# 
  1808  0893                     	;# 
  1809  0893                     	;# 
  1810  0894                     	;# 
  1811  0894                     	;# 
  1812  0894                     	;# 
  1813  0895                     	;# 
  1814  0895                     	;# 
  1815  0895                     	;# 
  1816  0896                     	;# 
  1817  0896                     	;# 
  1818  0896                     	;# 
  1819  089B                     	;# 
  1820  0911                     	;# 
  1821  0912                     	;# 
  1822  0913                     	;# 
  1823  0914                     	;# 
  1824  0915                     	;# 
  1825  0916                     	;# 
  1826  0918                     	;# 
  1827  0919                     	;# 
  1828  091A                     	;# 
  1829  091B                     	;# 
  1830  091C                     	;# 
  1831  091D                     	;# 
  1832  091E                     	;# 
  1833  091F                     	;# 
  1834  0E0F                     	;# 
  1835  0E10                     	;# 
  1836  0E11                     	;# 
  1837  0E12                     	;# 
  1838  0E13                     	;# 
  1839  0E14                     	;# 
  1840  0E15                     	;# 
  1841  0E16                     	;# 
  1842  0E17                     	;# 
  1843  0E18                     	;# 
  1844  0E19                     	;# 
  1845  0E1A                     	;# 
  1846  0E1B                     	;# 
  1847  0E1C                     	;# 
  1848  0E1D                     	;# 
  1849  0E1E                     	;# 
  1850  0E1F                     	;# 
  1851  0E20                     	;# 
  1852  0E21                     	;# 
  1853  0E22                     	;# 
  1854  0E24                     	;# 
  1855  0E25                     	;# 
  1856  0E28                     	;# 
  1857  0E29                     	;# 
  1858  0E2A                     	;# 
  1859  0E2B                     	;# 
  1860  0E2C                     	;# 
  1861  0E2D                     	;# 
  1862  0E2E                     	;# 
  1863  0E2F                     	;# 
  1864  0E90                     	;# 
  1865  0E91                     	;# 
  1866  0E92                     	;# 
  1867  0E94                     	;# 
  1868  0E95                     	;# 
  1869  0E9C                     	;# 
  1870  0E9D                     	;# 
  1871  0E9E                     	;# 
  1872  0E9F                     	;# 
  1873  0EA0                     	;# 
  1874  0EA1                     	;# 
  1875  0EA2                     	;# 
  1876  0EA3                     	;# 
  1877  0EA4                     	;# 
  1878  0EA5                     	;# 
  1879  0EA6                     	;# 
  1880  0EA7                     	;# 
  1881  0F0F                     	;# 
  1882  0F10                     	;# 
  1883  0F11                     	;# 
  1884  0F12                     	;# 
  1885  0F13                     	;# 
  1886  0F14                     	;# 
  1887  0F15                     	;# 
  1888  0F16                     	;# 
  1889  0F17                     	;# 
  1890  0F18                     	;# 
  1891  0F19                     	;# 
  1892  0F1A                     	;# 
  1893  0F1B                     	;# 
  1894  0F1C                     	;# 
  1895  0F1D                     	;# 
  1896  0F1E                     	;# 
  1897  0F1F                     	;# 
  1898  0F20                     	;# 
  1899  0F21                     	;# 
  1900  0F22                     	;# 
  1901  0F23                     	;# 
  1902  0F24                     	;# 
  1903  0F25                     	;# 
  1904  0F26                     	;# 
  1905  0F27                     	;# 
  1906  0F28                     	;# 
  1907  0F29                     	;# 
  1908  0F2A                     	;# 
  1909  0F2B                     	;# 
  1910  0F2C                     	;# 
  1911  0F2D                     	;# 
  1912  0F2E                     	;# 
  1913  0F2F                     	;# 
  1914  0F30                     	;# 
  1915  0F31                     	;# 
  1916  0F32                     	;# 
  1917  0F33                     	;# 
  1918  0F34                     	;# 
  1919  0F35                     	;# 
  1920  0F36                     	;# 
  1921  0F37                     	;# 
  1922  0FE4                     	;# 
  1923  0FE5                     	;# 
  1924  0FE6                     	;# 
  1925  0FE7                     	;# 
  1926  0FE8                     	;# 
  1927  0FE9                     	;# 
  1928  0FEA                     	;# 
  1929  0FEB                     	;# 
  1930  0FED                     	;# 
  1931  0FEE                     	;# 
  1932  0FEF                     	;# 
  1933  0000                     	;# 
  1934  0001                     	;# 
  1935  0002                     	;# 
  1936  0003                     	;# 
  1937  0004                     	;# 
  1938  0005                     	;# 
  1939  0006                     	;# 
  1940  0007                     	;# 
  1941  0008                     	;# 
  1942  0009                     	;# 
  1943  000A                     	;# 
  1944  000B                     	;# 
  1945  000C                     	;# 
  1946  000D                     	;# 
  1947  000E                     	;# 
  1948  0010                     	;# 
  1949  0011                     	;# 
  1950  0012                     	;# 
  1951  0013                     	;# 
  1952  0014                     	;# 
  1953  0015                     	;# 
  1954  0015                     	;# 
  1955  0016                     	;# 
  1956  0016                     	;# 
  1957  0017                     	;# 
  1958  0018                     	;# 
  1959  0019                     	;# 
  1960  0019                     	;# 
  1961  001A                     	;# 
  1962  001B                     	;# 
  1963  001C                     	;# 
  1964  001D                     	;# 
  1965  001E                     	;# 
  1966  001F                     	;# 
  1967  008C                     	;# 
  1968  008D                     	;# 
  1969  008E                     	;# 
  1970  0090                     	;# 
  1971  0091                     	;# 
  1972  0092                     	;# 
  1973  0093                     	;# 
  1974  0094                     	;# 
  1975  0097                     	;# 
  1976  009B                     	;# 
  1977  009B                     	;# 
  1978  009C                     	;# 
  1979  009D                     	;# 
  1980  009E                     	;# 
  1981  009F                     	;# 
  1982  010C                     	;# 
  1983  010D                     	;# 
  1984  010E                     	;# 
  1985  0111                     	;# 
  1986  0112                     	;# 
  1987  0113                     	;# 
  1988  0114                     	;# 
  1989  0115                     	;# 
  1990  0116                     	;# 
  1991  0117                     	;# 
  1992  0118                     	;# 
  1993  0119                     	;# 
  1994  018C                     	;# 
  1995  018D                     	;# 
  1996  018E                     	;# 
  1997  0197                     	;# 
  1998  0199                     	;# 
  1999  0199                     	;# 
  2000  0199                     	;# 
  2001  019A                     	;# 
  2002  019A                     	;# 
  2003  019A                     	;# 
  2004  019B                     	;# 
  2005  019B                     	;# 
  2006  019B                     	;# 
  2007  019B                     	;# 
  2008  019B                     	;# 
  2009  019C                     	;# 
  2010  019C                     	;# 
  2011  019C                     	;# 
  2012  019D                     	;# 
  2013  019D                     	;# 
  2014  019D                     	;# 
  2015  019E                     	;# 
  2016  019E                     	;# 
  2017  019E                     	;# 
  2018  019F                     	;# 
  2019  019F                     	;# 
  2020  019F                     	;# 
  2021  019F                     	;# 
  2022  019F                     	;# 
  2023  020C                     	;# 
  2024  020D                     	;# 
  2025  020E                     	;# 
  2026  0211                     	;# 
  2027  0211                     	;# 
  2028  0212                     	;# 
  2029  0212                     	;# 
  2030  0213                     	;# 
  2031  0213                     	;# 
  2032  0214                     	;# 
  2033  0214                     	;# 
  2034  0215                     	;# 
  2035  0215                     	;# 
  2036  0215                     	;# 
  2037  0215                     	;# 
  2038  0216                     	;# 
  2039  0216                     	;# 
  2040  0217                     	;# 
  2041  0217                     	;# 
  2042  0219                     	;# 
  2043  021A                     	;# 
  2044  021B                     	;# 
  2045  021C                     	;# 
  2046  021D                     	;# 
  2047  021D                     	;# 
  2048  021E                     	;# 
  2049  021F                     	;# 
  2050  028C                     	;# 
  2051  028D                     	;# 
  2052  028E                     	;# 
  2053  0291                     	;# 
  2054  0291                     	;# 
  2055  0292                     	;# 
  2056  0293                     	;# 
  2057  0294                     	;# 
  2058  0295                     	;# 
  2059  0295                     	;# 
  2060  0296                     	;# 
  2061  0297                     	;# 
  2062  0298                     	;# 
  2063  029F                     	;# 
  2064  030C                     	;# 
  2065  030D                     	;# 
  2066  030E                     	;# 
  2067  0311                     	;# 
  2068  0311                     	;# 
  2069  0312                     	;# 
  2070  0313                     	;# 
  2071  0314                     	;# 
  2072  0315                     	;# 
  2073  0315                     	;# 
  2074  0316                     	;# 
  2075  0317                     	;# 
  2076  0318                     	;# 
  2077  038C                     	;# 
  2078  038D                     	;# 
  2079  038E                     	;# 
  2080  0391                     	;# 
  2081  0392                     	;# 
  2082  0393                     	;# 
  2083  0394                     	;# 
  2084  0395                     	;# 
  2085  0396                     	;# 
  2086  0397                     	;# 
  2087  0398                     	;# 
  2088  0399                     	;# 
  2089  039A                     	;# 
  2090  039C                     	;# 
  2091  039D                     	;# 
  2092  039E                     	;# 
  2093  039F                     	;# 
  2094  0411                     	;# 
  2095  0411                     	;# 
  2096  0412                     	;# 
  2097  0413                     	;# 
  2098  0414                     	;# 
  2099  0415                     	;# 
  2100  0416                     	;# 
  2101  0417                     	;# 
  2102  0418                     	;# 
  2103  0418                     	;# 
  2104  0419                     	;# 
  2105  041A                     	;# 
  2106  041B                     	;# 
  2107  041C                     	;# 
  2108  041D                     	;# 
  2109  041E                     	;# 
  2110  041F                     	;# 
  2111  0498                     	;# 
  2112  0498                     	;# 
  2113  0499                     	;# 
  2114  049A                     	;# 
  2115  049B                     	;# 
  2116  049B                     	;# 
  2117  049C                     	;# 
  2118  049D                     	;# 
  2119  049E                     	;# 
  2120  049F                     	;# 
  2121  0617                     	;# 
  2122  0618                     	;# 
  2123  0619                     	;# 
  2124  0619                     	;# 
  2125  061A                     	;# 
  2126  061B                     	;# 
  2127  061C                     	;# 
  2128  061C                     	;# 
  2129  061F                     	;# 
  2130  0691                     	;# 
  2131  0692                     	;# 
  2132  0693                     	;# 
  2133  0694                     	;# 
  2134  0695                     	;# 
  2135  0696                     	;# 
  2136  0697                     	;# 
  2137  0698                     	;# 
  2138  0699                     	;# 
  2139  0711                     	;# 
  2140  0712                     	;# 
  2141  0713                     	;# 
  2142  0714                     	;# 
  2143  0715                     	;# 
  2144  0716                     	;# 
  2145  0717                     	;# 
  2146  0718                     	;# 
  2147  0719                     	;# 
  2148  0891                     	;# 
  2149  0891                     	;# 
  2150  0891                     	;# 
  2151  0891                     	;# 
  2152  0891                     	;# 
  2153  0891                     	;# 
  2154  0892                     	;# 
  2155  0892                     	;# 
  2156  0892                     	;# 
  2157  0893                     	;# 
  2158  0893                     	;# 
  2159  0893                     	;# 
  2160  0893                     	;# 
  2161  0893                     	;# 
  2162  0893                     	;# 
  2163  0894                     	;# 
  2164  0894                     	;# 
  2165  0894                     	;# 
  2166  0895                     	;# 
  2167  0895                     	;# 
  2168  0895                     	;# 
  2169  0896                     	;# 
  2170  0896                     	;# 
  2171  0896                     	;# 
  2172  089B                     	;# 
  2173  0911                     	;# 
  2174  0912                     	;# 
  2175  0913                     	;# 
  2176  0914                     	;# 
  2177  0915                     	;# 
  2178  0916                     	;# 
  2179  0918                     	;# 
  2180  0919                     	;# 
  2181  091A                     	;# 
  2182  091B                     	;# 
  2183  091C                     	;# 
  2184  091D                     	;# 
  2185  091E                     	;# 
  2186  091F                     	;# 
  2187  0E0F                     	;# 
  2188  0E10                     	;# 
  2189  0E11                     	;# 
  2190  0E12                     	;# 
  2191  0E13                     	;# 
  2192  0E14                     	;# 
  2193  0E15                     	;# 
  2194  0E16                     	;# 
  2195  0E17                     	;# 
  2196  0E18                     	;# 
  2197  0E19                     	;# 
  2198  0E1A                     	;# 
  2199  0E1B                     	;# 
  2200  0E1C                     	;# 
  2201  0E1D                     	;# 
  2202  0E1E                     	;# 
  2203  0E1F                     	;# 
  2204  0E20                     	;# 
  2205  0E21                     	;# 
  2206  0E22                     	;# 
  2207  0E24                     	;# 
  2208  0E25                     	;# 
  2209  0E28                     	;# 
  2210  0E29                     	;# 
  2211  0E2A                     	;# 
  2212  0E2B                     	;# 
  2213  0E2C                     	;# 
  2214  0E2D                     	;# 
  2215  0E2E                     	;# 
  2216  0E2F                     	;# 
  2217  0E90                     	;# 
  2218  0E91                     	;# 
  2219  0E92                     	;# 
  2220  0E94                     	;# 
  2221  0E95                     	;# 
  2222  0E9C                     	;# 
  2223  0E9D                     	;# 
  2224  0E9E                     	;# 
  2225  0E9F                     	;# 
  2226  0EA0                     	;# 
  2227  0EA1                     	;# 
  2228  0EA2                     	;# 
  2229  0EA3                     	;# 
  2230  0EA4                     	;# 
  2231  0EA5                     	;# 
  2232  0EA6                     	;# 
  2233  0EA7                     	;# 
  2234  0F0F                     	;# 
  2235  0F10                     	;# 
  2236  0F11                     	;# 
  2237  0F12                     	;# 
  2238  0F13                     	;# 
  2239  0F14                     	;# 
  2240  0F15                     	;# 
  2241  0F16                     	;# 
  2242  0F17                     	;# 
  2243  0F18                     	;# 
  2244  0F19                     	;# 
  2245  0F1A                     	;# 
  2246  0F1B                     	;# 
  2247  0F1C                     	;# 
  2248  0F1D                     	;# 
  2249  0F1E                     	;# 
  2250  0F1F                     	;# 
  2251  0F20                     	;# 
  2252  0F21                     	;# 
  2253  0F22                     	;# 
  2254  0F23                     	;# 
  2255  0F24                     	;# 
  2256  0F25                     	;# 
  2257  0F26                     	;# 
  2258  0F27                     	;# 
  2259  0F28                     	;# 
  2260  0F29                     	;# 
  2261  0F2A                     	;# 
  2262  0F2B                     	;# 
  2263  0F2C                     	;# 
  2264  0F2D                     	;# 
  2265  0F2E                     	;# 
  2266  0F2F                     	;# 
  2267  0F30                     	;# 
  2268  0F31                     	;# 
  2269  0F32                     	;# 
  2270  0F33                     	;# 
  2271  0F34                     	;# 
  2272  0F35                     	;# 
  2273  0F36                     	;# 
  2274  0F37                     	;# 
  2275  0FE4                     	;# 
  2276  0FE5                     	;# 
  2277  0FE6                     	;# 
  2278  0FE7                     	;# 
  2279  0FE8                     	;# 
  2280  0FE9                     	;# 
  2281  0FEA                     	;# 
  2282  0FEB                     	;# 
  2283  0FED                     	;# 
  2284  0FEE                     	;# 
  2285  0FEF                     	;# 
  2286  0000                     	;# 
  2287  0001                     	;# 
  2288  0002                     	;# 
  2289  0003                     	;# 
  2290  0004                     	;# 
  2291  0005                     	;# 
  2292  0006                     	;# 
  2293  0007                     	;# 
  2294  0008                     	;# 
  2295  0009                     	;# 
  2296  000A                     	;# 
  2297  000B                     	;# 
  2298  000C                     	;# 
  2299  000D                     	;# 
  2300  000E                     	;# 
  2301  0010                     	;# 
  2302  0011                     	;# 
  2303  0012                     	;# 
  2304  0013                     	;# 
  2305  0014                     	;# 
  2306  0015                     	;# 
  2307  0015                     	;# 
  2308  0016                     	;# 
  2309  0016                     	;# 
  2310  0017                     	;# 
  2311  0018                     	;# 
  2312  0019                     	;# 
  2313  0019                     	;# 
  2314  001A                     	;# 
  2315  001B                     	;# 
  2316  001C                     	;# 
  2317  001D                     	;# 
  2318  001E                     	;# 
  2319  001F                     	;# 
  2320  008C                     	;# 
  2321  008D                     	;# 
  2322  008E                     	;# 
  2323  0090                     	;# 
  2324  0091                     	;# 
  2325  0092                     	;# 
  2326  0093                     	;# 
  2327  0094                     	;# 
  2328  0097                     	;# 
  2329  009B                     	;# 
  2330  009B                     	;# 
  2331  009C                     	;# 
  2332  009D                     	;# 
  2333  009E                     	;# 
  2334  009F                     	;# 
  2335  010C                     	;# 
  2336  010D                     	;# 
  2337  010E                     	;# 
  2338  0111                     	;# 
  2339  0112                     	;# 
  2340  0113                     	;# 
  2341  0114                     	;# 
  2342  0115                     	;# 
  2343  0116                     	;# 
  2344  0117                     	;# 
  2345  0118                     	;# 
  2346  0119                     	;# 
  2347  018C                     	;# 
  2348  018D                     	;# 
  2349  018E                     	;# 
  2350  0197                     	;# 
  2351  0199                     	;# 
  2352  0199                     	;# 
  2353  0199                     	;# 
  2354  019A                     	;# 
  2355  019A                     	;# 
  2356  019A                     	;# 
  2357  019B                     	;# 
  2358  019B                     	;# 
  2359  019B                     	;# 
  2360  019B                     	;# 
  2361  019B                     	;# 
  2362  019C                     	;# 
  2363  019C                     	;# 
  2364  019C                     	;# 
  2365  019D                     	;# 
  2366  019D                     	;# 
  2367  019D                     	;# 
  2368  019E                     	;# 
  2369  019E                     	;# 
  2370  019E                     	;# 
  2371  019F                     	;# 
  2372  019F                     	;# 
  2373  019F                     	;# 
  2374  019F                     	;# 
  2375  019F                     	;# 
  2376  020C                     	;# 
  2377  020D                     	;# 
  2378  020E                     	;# 
  2379  0211                     	;# 
  2380  0211                     	;# 
  2381  0212                     	;# 
  2382  0212                     	;# 
  2383  0213                     	;# 
  2384  0213                     	;# 
  2385  0214                     	;# 
  2386  0214                     	;# 
  2387  0215                     	;# 
  2388  0215                     	;# 
  2389  0215                     	;# 
  2390  0215                     	;# 
  2391  0216                     	;# 
  2392  0216                     	;# 
  2393  0217                     	;# 
  2394  0217                     	;# 
  2395  0219                     	;# 
  2396  021A                     	;# 
  2397  021B                     	;# 
  2398  021C                     	;# 
  2399  021D                     	;# 
  2400  021D                     	;# 
  2401  021E                     	;# 
  2402  021F                     	;# 
  2403  028C                     	;# 
  2404  028D                     	;# 
  2405  028E                     	;# 
  2406  0291                     	;# 
  2407  0291                     	;# 
  2408  0292                     	;# 
  2409  0293                     	;# 
  2410  0294                     	;# 
  2411  0295                     	;# 
  2412  0295                     	;# 
  2413  0296                     	;# 
  2414  0297                     	;# 
  2415  0298                     	;# 
  2416  029F                     	;# 
  2417  030C                     	;# 
  2418  030D                     	;# 
  2419  030E                     	;# 
  2420  0311                     	;# 
  2421  0311                     	;# 
  2422  0312                     	;# 
  2423  0313                     	;# 
  2424  0314                     	;# 
  2425  0315                     	;# 
  2426  0315                     	;# 
  2427  0316                     	;# 
  2428  0317                     	;# 
  2429  0318                     	;# 
  2430  038C                     	;# 
  2431  038D                     	;# 
  2432  038E                     	;# 
  2433  0391                     	;# 
  2434  0392                     	;# 
  2435  0393                     	;# 
  2436  0394                     	;# 
  2437  0395                     	;# 
  2438  0396                     	;# 
  2439  0397                     	;# 
  2440  0398                     	;# 
  2441  0399                     	;# 
  2442  039A                     	;# 
  2443  039C                     	;# 
  2444  039D                     	;# 
  2445  039E                     	;# 
  2446  039F                     	;# 
  2447  0411                     	;# 
  2448  0411                     	;# 
  2449  0412                     	;# 
  2450  0413                     	;# 
  2451  0414                     	;# 
  2452  0415                     	;# 
  2453  0416                     	;# 
  2454  0417                     	;# 
  2455  0418                     	;# 
  2456  0418                     	;# 
  2457  0419                     	;# 
  2458  041A                     	;# 
  2459  041B                     	;# 
  2460  041C                     	;# 
  2461  041D                     	;# 
  2462  041E                     	;# 
  2463  041F                     	;# 
  2464  0498                     	;# 
  2465  0498                     	;# 
  2466  0499                     	;# 
  2467  049A                     	;# 
  2468  049B                     	;# 
  2469  049B                     	;# 
  2470  049C                     	;# 
  2471  049D                     	;# 
  2472  049E                     	;# 
  2473  049F                     	;# 
  2474  0617                     	;# 
  2475  0618                     	;# 
  2476  0619                     	;# 
  2477  0619                     	;# 
  2478  061A                     	;# 
  2479  061B                     	;# 
  2480  061C                     	;# 
  2481  061C                     	;# 
  2482  061F                     	;# 
  2483  0691                     	;# 
  2484  0692                     	;# 
  2485  0693                     	;# 
  2486  0694                     	;# 
  2487  0695                     	;# 
  2488  0696                     	;# 
  2489  0697                     	;# 
  2490  0698                     	;# 
  2491  0699                     	;# 
  2492  0711                     	;# 
  2493  0712                     	;# 
  2494  0713                     	;# 
  2495  0714                     	;# 
  2496  0715                     	;# 
  2497  0716                     	;# 
  2498  0717                     	;# 
  2499  0718                     	;# 
  2500  0719                     	;# 
  2501  0891                     	;# 
  2502  0891                     	;# 
  2503  0891                     	;# 
  2504  0891                     	;# 
  2505  0891                     	;# 
  2506  0891                     	;# 
  2507  0892                     	;# 
  2508  0892                     	;# 
  2509  0892                     	;# 
  2510  0893                     	;# 
  2511  0893                     	;# 
  2512  0893                     	;# 
  2513  0893                     	;# 
  2514  0893                     	;# 
  2515  0893                     	;# 
  2516  0894                     	;# 
  2517  0894                     	;# 
  2518  0894                     	;# 
  2519  0895                     	;# 
  2520  0895                     	;# 
  2521  0895                     	;# 
  2522  0896                     	;# 
  2523  0896                     	;# 
  2524  0896                     	;# 
  2525  089B                     	;# 
  2526  0911                     	;# 
  2527  0912                     	;# 
  2528  0913                     	;# 
  2529  0914                     	;# 
  2530  0915                     	;# 
  2531  0916                     	;# 
  2532  0918                     	;# 
  2533  0919                     	;# 
  2534  091A                     	;# 
  2535  091B                     	;# 
  2536  091C                     	;# 
  2537  091D                     	;# 
  2538  091E                     	;# 
  2539  091F                     	;# 
  2540  0E0F                     	;# 
  2541  0E10                     	;# 
  2542  0E11                     	;# 
  2543  0E12                     	;# 
  2544  0E13                     	;# 
  2545  0E14                     	;# 
  2546  0E15                     	;# 
  2547  0E16                     	;# 
  2548  0E17                     	;# 
  2549  0E18                     	;# 
  2550  0E19                     	;# 
  2551  0E1A                     	;# 
  2552  0E1B                     	;# 
  2553  0E1C                     	;# 
  2554  0E1D                     	;# 
  2555  0E1E                     	;# 
  2556  0E1F                     	;# 
  2557  0E20                     	;# 
  2558  0E21                     	;# 
  2559  0E22                     	;# 
  2560  0E24                     	;# 
  2561  0E25                     	;# 
  2562  0E28                     	;# 
  2563  0E29                     	;# 
  2564  0E2A                     	;# 
  2565  0E2B                     	;# 
  2566  0E2C                     	;# 
  2567  0E2D                     	;# 
  2568  0E2E                     	;# 
  2569  0E2F                     	;# 
  2570  0E90                     	;# 
  2571  0E91                     	;# 
  2572  0E92                     	;# 
  2573  0E94                     	;# 
  2574  0E95                     	;# 
  2575  0E9C                     	;# 
  2576  0E9D                     	;# 
  2577  0E9E                     	;# 
  2578  0E9F                     	;# 
  2579  0EA0                     	;# 
  2580  0EA1                     	;# 
  2581  0EA2                     	;# 
  2582  0EA3                     	;# 
  2583  0EA4                     	;# 
  2584  0EA5                     	;# 
  2585  0EA6                     	;# 
  2586  0EA7                     	;# 
  2587  0F0F                     	;# 
  2588  0F10                     	;# 
  2589  0F11                     	;# 
  2590  0F12                     	;# 
  2591  0F13                     	;# 
  2592  0F14                     	;# 
  2593  0F15                     	;# 
  2594  0F16                     	;# 
  2595  0F17                     	;# 
  2596  0F18                     	;# 
  2597  0F19                     	;# 
  2598  0F1A                     	;# 
  2599  0F1B                     	;# 
  2600  0F1C                     	;# 
  2601  0F1D                     	;# 
  2602  0F1E                     	;# 
  2603  0F1F                     	;# 
  2604  0F20                     	;# 
  2605  0F21                     	;# 
  2606  0F22                     	;# 
  2607  0F23                     	;# 
  2608  0F24                     	;# 
  2609  0F25                     	;# 
  2610  0F26                     	;# 
  2611  0F27                     	;# 
  2612  0F28                     	;# 
  2613  0F29                     	;# 
  2614  0F2A                     	;# 
  2615  0F2B                     	;# 
  2616  0F2C                     	;# 
  2617  0F2D                     	;# 
  2618  0F2E                     	;# 
  2619  0F2F                     	;# 
  2620  0F30                     	;# 
  2621  0F31                     	;# 
  2622  0F32                     	;# 
  2623  0F33                     	;# 
  2624  0F34                     	;# 
  2625  0F35                     	;# 
  2626  0F36                     	;# 
  2627  0F37                     	;# 
  2628  0FE4                     	;# 
  2629  0FE5                     	;# 
  2630  0FE6                     	;# 
  2631  0FE7                     	;# 
  2632  0FE8                     	;# 
  2633  0FE9                     	;# 
  2634  0FEA                     	;# 
  2635  0FEB                     	;# 
  2636  0FED                     	;# 
  2637  0FEE                     	;# 
  2638  0FEF                     	;# 
  2639  0000                     	;# 
  2640  0001                     	;# 
  2641  0002                     	;# 
  2642  0003                     	;# 
  2643  0004                     	;# 
  2644  0005                     	;# 
  2645  0006                     	;# 
  2646  0007                     	;# 
  2647  0008                     	;# 
  2648  0009                     	;# 
  2649  000A                     	;# 
  2650  000B                     	;# 
  2651  000C                     	;# 
  2652  000D                     	;# 
  2653  000E                     	;# 
  2654  0010                     	;# 
  2655  0011                     	;# 
  2656  0012                     	;# 
  2657  0013                     	;# 
  2658  0014                     	;# 
  2659  0015                     	;# 
  2660  0015                     	;# 
  2661  0016                     	;# 
  2662  0016                     	;# 
  2663  0017                     	;# 
  2664  0018                     	;# 
  2665  0019                     	;# 
  2666  0019                     	;# 
  2667  001A                     	;# 
  2668  001B                     	;# 
  2669  001C                     	;# 
  2670  001D                     	;# 
  2671  001E                     	;# 
  2672  001F                     	;# 
  2673  008C                     	;# 
  2674  008D                     	;# 
  2675  008E                     	;# 
  2676  0090                     	;# 
  2677  0091                     	;# 
  2678  0092                     	;# 
  2679  0093                     	;# 
  2680  0094                     	;# 
  2681  0097                     	;# 
  2682  009B                     	;# 
  2683  009B                     	;# 
  2684  009C                     	;# 
  2685  009D                     	;# 
  2686  009E                     	;# 
  2687  009F                     	;# 
  2688  010C                     	;# 
  2689  010D                     	;# 
  2690  010E                     	;# 
  2691  0111                     	;# 
  2692  0112                     	;# 
  2693  0113                     	;# 
  2694  0114                     	;# 
  2695  0115                     	;# 
  2696  0116                     	;# 
  2697  0117                     	;# 
  2698  0118                     	;# 
  2699  0119                     	;# 
  2700  018C                     	;# 
  2701  018D                     	;# 
  2702  018E                     	;# 
  2703  0197                     	;# 
  2704  0199                     	;# 
  2705  0199                     	;# 
  2706  0199                     	;# 
  2707  019A                     	;# 
  2708  019A                     	;# 
  2709  019A                     	;# 
  2710  019B                     	;# 
  2711  019B                     	;# 
  2712  019B                     	;# 
  2713  019B                     	;# 
  2714  019B                     	;# 
  2715  019C                     	;# 
  2716  019C                     	;# 
  2717  019C                     	;# 
  2718  019D                     	;# 
  2719  019D                     	;# 
  2720  019D                     	;# 
  2721  019E                     	;# 
  2722  019E                     	;# 
  2723  019E                     	;# 
  2724  019F                     	;# 
  2725  019F                     	;# 
  2726  019F                     	;# 
  2727  019F                     	;# 
  2728  019F                     	;# 
  2729  020C                     	;# 
  2730  020D                     	;# 
  2731  020E                     	;# 
  2732  0211                     	;# 
  2733  0211                     	;# 
  2734  0212                     	;# 
  2735  0212                     	;# 
  2736  0213                     	;# 
  2737  0213                     	;# 
  2738  0214                     	;# 
  2739  0214                     	;# 
  2740  0215                     	;# 
  2741  0215                     	;# 
  2742  0215                     	;# 
  2743  0215                     	;# 
  2744  0216                     	;# 
  2745  0216                     	;# 
  2746  0217                     	;# 
  2747  0217                     	;# 
  2748  0219                     	;# 
  2749  021A                     	;# 
  2750  021B                     	;# 
  2751  021C                     	;# 
  2752  021D                     	;# 
  2753  021D                     	;# 
  2754  021E                     	;# 
  2755  021F                     	;# 
  2756  028C                     	;# 
  2757  028D                     	;# 
  2758  028E                     	;# 
  2759  0291                     	;# 
  2760  0291                     	;# 
  2761  0292                     	;# 
  2762  0293                     	;# 
  2763  0294                     	;# 
  2764  0295                     	;# 
  2765  0295                     	;# 
  2766  0296                     	;# 
  2767  0297                     	;# 
  2768  0298                     	;# 
  2769  029F                     	;# 
  2770  030C                     	;# 
  2771  030D                     	;# 
  2772  030E                     	;# 
  2773  0311                     	;# 
  2774  0311                     	;# 
  2775  0312                     	;# 
  2776  0313                     	;# 
  2777  0314                     	;# 
  2778  0315                     	;# 
  2779  0315                     	;# 
  2780  0316                     	;# 
  2781  0317                     	;# 
  2782  0318                     	;# 
  2783  038C                     	;# 
  2784  038D                     	;# 
  2785  038E                     	;# 
  2786  0391                     	;# 
  2787  0392                     	;# 
  2788  0393                     	;# 
  2789  0394                     	;# 
  2790  0395                     	;# 
  2791  0396                     	;# 
  2792  0397                     	;# 
  2793  0398                     	;# 
  2794  0399                     	;# 
  2795  039A                     	;# 
  2796  039C                     	;# 
  2797  039D                     	;# 
  2798  039E                     	;# 
  2799  039F                     	;# 
  2800  0411                     	;# 
  2801  0411                     	;# 
  2802  0412                     	;# 
  2803  0413                     	;# 
  2804  0414                     	;# 
  2805  0415                     	;# 
  2806  0416                     	;# 
  2807  0417                     	;# 
  2808  0418                     	;# 
  2809  0418                     	;# 
  2810  0419                     	;# 
  2811  041A                     	;# 
  2812  041B                     	;# 
  2813  041C                     	;# 
  2814  041D                     	;# 
  2815  041E                     	;# 
  2816  041F                     	;# 
  2817  0498                     	;# 
  2818  0498                     	;# 
  2819  0499                     	;# 
  2820  049A                     	;# 
  2821  049B                     	;# 
  2822  049B                     	;# 
  2823  049C                     	;# 
  2824  049D                     	;# 
  2825  049E                     	;# 
  2826  049F                     	;# 
  2827  0617                     	;# 
  2828  0618                     	;# 
  2829  0619                     	;# 
  2830  0619                     	;# 
  2831  061A                     	;# 
  2832  061B                     	;# 
  2833  061C                     	;# 
  2834  061C                     	;# 
  2835  061F                     	;# 
  2836  0691                     	;# 
  2837  0692                     	;# 
  2838  0693                     	;# 
  2839  0694                     	;# 
  2840  0695                     	;# 
  2841  0696                     	;# 
  2842  0697                     	;# 
  2843  0698                     	;# 
  2844  0699                     	;# 
  2845  0711                     	;# 
  2846  0712                     	;# 
  2847  0713                     	;# 
  2848  0714                     	;# 
  2849  0715                     	;# 
  2850  0716                     	;# 
  2851  0717                     	;# 
  2852  0718                     	;# 
  2853  0719                     	;# 
  2854  0891                     	;# 
  2855  0891                     	;# 
  2856  0891                     	;# 
  2857  0891                     	;# 
  2858  0891                     	;# 
  2859  0891                     	;# 
  2860  0892                     	;# 
  2861  0892                     	;# 
  2862  0892                     	;# 
  2863  0893                     	;# 
  2864  0893                     	;# 
  2865  0893                     	;# 
  2866  0893                     	;# 
  2867  0893                     	;# 
  2868  0893                     	;# 
  2869  0894                     	;# 
  2870  0894                     	;# 
  2871  0894                     	;# 
  2872  0895                     	;# 
  2873  0895                     	;# 
  2874  0895                     	;# 
  2875  0896                     	;# 
  2876  0896                     	;# 
  2877  0896                     	;# 
  2878  089B                     	;# 
  2879  0911                     	;# 
  2880  0912                     	;# 
  2881  0913                     	;# 
  2882  0914                     	;# 
  2883  0915                     	;# 
  2884  0916                     	;# 
  2885  0918                     	;# 
  2886  0919                     	;# 
  2887  091A                     	;# 
  2888  091B                     	;# 
  2889  091C                     	;# 
  2890  091D                     	;# 
  2891  091E                     	;# 
  2892  091F                     	;# 
  2893  0E0F                     	;# 
  2894  0E10                     	;# 
  2895  0E11                     	;# 
  2896  0E12                     	;# 
  2897  0E13                     	;# 
  2898  0E14                     	;# 
  2899  0E15                     	;# 
  2900  0E16                     	;# 
  2901  0E17                     	;# 
  2902  0E18                     	;# 
  2903  0E19                     	;# 
  2904  0E1A                     	;# 
  2905  0E1B                     	;# 
  2906  0E1C                     	;# 
  2907  0E1D                     	;# 
  2908  0E1E                     	;# 
  2909  0E1F                     	;# 
  2910  0E20                     	;# 
  2911  0E21                     	;# 
  2912  0E22                     	;# 
  2913  0E24                     	;# 
  2914  0E25                     	;# 
  2915  0E28                     	;# 
  2916  0E29                     	;# 
  2917  0E2A                     	;# 
  2918  0E2B                     	;# 
  2919  0E2C                     	;# 
  2920  0E2D                     	;# 
  2921  0E2E                     	;# 
  2922  0E2F                     	;# 
  2923  0E90                     	;# 
  2924  0E91                     	;# 
  2925  0E92                     	;# 
  2926  0E94                     	;# 
  2927  0E95                     	;# 
  2928  0E9C                     	;# 
  2929  0E9D                     	;# 
  2930  0E9E                     	;# 
  2931  0E9F                     	;# 
  2932  0EA0                     	;# 
  2933  0EA1                     	;# 
  2934  0EA2                     	;# 
  2935  0EA3                     	;# 
  2936  0EA4                     	;# 
  2937  0EA5                     	;# 
  2938  0EA6                     	;# 
  2939  0EA7                     	;# 
  2940  0F0F                     	;# 
  2941  0F10                     	;# 
  2942  0F11                     	;# 
  2943  0F12                     	;# 
  2944  0F13                     	;# 
  2945  0F14                     	;# 
  2946  0F15                     	;# 
  2947  0F16                     	;# 
  2948  0F17                     	;# 
  2949  0F18                     	;# 
  2950  0F19                     	;# 
  2951  0F1A                     	;# 
  2952  0F1B                     	;# 
  2953  0F1C                     	;# 
  2954  0F1D                     	;# 
  2955  0F1E                     	;# 
  2956  0F1F                     	;# 
  2957  0F20                     	;# 
  2958  0F21                     	;# 
  2959  0F22                     	;# 
  2960  0F23                     	;# 
  2961  0F24                     	;# 
  2962  0F25                     	;# 
  2963  0F26                     	;# 
  2964  0F27                     	;# 
  2965  0F28                     	;# 
  2966  0F29                     	;# 
  2967  0F2A                     	;# 
  2968  0F2B                     	;# 
  2969  0F2C                     	;# 
  2970  0F2D                     	;# 
  2971  0F2E                     	;# 
  2972  0F2F                     	;# 
  2973  0F30                     	;# 
  2974  0F31                     	;# 
  2975  0F32                     	;# 
  2976  0F33                     	;# 
  2977  0F34                     	;# 
  2978  0F35                     	;# 
  2979  0F36                     	;# 
  2980  0F37                     	;# 
  2981  0FE4                     	;# 
  2982  0FE5                     	;# 
  2983  0FE6                     	;# 
  2984  0FE7                     	;# 
  2985  0FE8                     	;# 
  2986  0FE9                     	;# 
  2987  0FEA                     	;# 
  2988  0FEB                     	;# 
  2989  0FED                     	;# 
  2990  0FEE                     	;# 
  2991  0FEF                     	;# 
  2992  0000                     	;# 
  2993  0001                     	;# 
  2994  0002                     	;# 
  2995  0003                     	;# 
  2996  0004                     	;# 
  2997  0005                     	;# 
  2998  0006                     	;# 
  2999  0007                     	;# 
  3000  0008                     	;# 
  3001  0009                     	;# 
  3002  000A                     	;# 
  3003  000B                     	;# 
  3004  000C                     	;# 
  3005  000D                     	;# 
  3006  000E                     	;# 
  3007  0010                     	;# 
  3008  0011                     	;# 
  3009  0012                     	;# 
  3010  0013                     	;# 
  3011  0014                     	;# 
  3012  0015                     	;# 
  3013  0015                     	;# 
  3014  0016                     	;# 
  3015  0016                     	;# 
  3016  0017                     	;# 
  3017  0018                     	;# 
  3018  0019                     	;# 
  3019  0019                     	;# 
  3020  001A                     	;# 
  3021  001B                     	;# 
  3022  001C                     	;# 
  3023  001D                     	;# 
  3024  001E                     	;# 
  3025  001F                     	;# 
  3026  008C                     	;# 
  3027  008D                     	;# 
  3028  008E                     	;# 
  3029  0090                     	;# 
  3030  0091                     	;# 
  3031  0092                     	;# 
  3032  0093                     	;# 
  3033  0094                     	;# 
  3034  0097                     	;# 
  3035  009B                     	;# 
  3036  009B                     	;# 
  3037  009C                     	;# 
  3038  009D                     	;# 
  3039  009E                     	;# 
  3040  009F                     	;# 
  3041  010C                     	;# 
  3042  010D                     	;# 
  3043  010E                     	;# 
  3044  0111                     	;# 
  3045  0112                     	;# 
  3046  0113                     	;# 
  3047  0114                     	;# 
  3048  0115                     	;# 
  3049  0116                     	;# 
  3050  0117                     	;# 
  3051  0118                     	;# 
  3052  0119                     	;# 
  3053  018C                     	;# 
  3054  018D                     	;# 
  3055  018E                     	;# 
  3056  0197                     	;# 
  3057  0199                     	;# 
  3058  0199                     	;# 
  3059  0199                     	;# 
  3060  019A                     	;# 
  3061  019A                     	;# 
  3062  019A                     	;# 
  3063  019B                     	;# 
  3064  019B                     	;# 
  3065  019B                     	;# 
  3066  019B                     	;# 
  3067  019B                     	;# 
  3068  019C                     	;# 
  3069  019C                     	;# 
  3070  019C                     	;# 
  3071  019D                     	;# 
  3072  019D                     	;# 
  3073  019D                     	;# 
  3074  019E                     	;# 
  3075  019E                     	;# 
  3076  019E                     	;# 
  3077  019F                     	;# 
  3078  019F                     	;# 
  3079  019F                     	;# 
  3080  019F                     	;# 
  3081  019F                     	;# 
  3082  020C                     	;# 
  3083  020D                     	;# 
  3084  020E                     	;# 
  3085  0211                     	;# 
  3086  0211                     	;# 
  3087  0212                     	;# 
  3088  0212                     	;# 
  3089  0213                     	;# 
  3090  0213                     	;# 
  3091  0214                     	;# 
  3092  0214                     	;# 
  3093  0215                     	;# 
  3094  0215                     	;# 
  3095  0215                     	;# 
  3096  0215                     	;# 
  3097  0216                     	;# 
  3098  0216                     	;# 
  3099  0217                     	;# 
  3100  0217                     	;# 
  3101  0219                     	;# 
  3102  021A                     	;# 
  3103  021B                     	;# 
  3104  021C                     	;# 
  3105  021D                     	;# 
  3106  021D                     	;# 
  3107  021E                     	;# 
  3108  021F                     	;# 
  3109  028C                     	;# 
  3110  028D                     	;# 
  3111  028E                     	;# 
  3112  0291                     	;# 
  3113  0291                     	;# 
  3114  0292                     	;# 
  3115  0293                     	;# 
  3116  0294                     	;# 
  3117  0295                     	;# 
  3118  0295                     	;# 
  3119  0296                     	;# 
  3120  0297                     	;# 
  3121  0298                     	;# 
  3122  029F                     	;# 
  3123  030C                     	;# 
  3124  030D                     	;# 
  3125  030E                     	;# 
  3126  0311                     	;# 
  3127  0311                     	;# 
  3128  0312                     	;# 
  3129  0313                     	;# 
  3130  0314                     	;# 
  3131  0315                     	;# 
  3132  0315                     	;# 
  3133  0316                     	;# 
  3134  0317                     	;# 
  3135  0318                     	;# 
  3136  038C                     	;# 
  3137  038D                     	;# 
  3138  038E                     	;# 
  3139  0391                     	;# 
  3140  0392                     	;# 
  3141  0393                     	;# 
  3142  0394                     	;# 
  3143  0395                     	;# 
  3144  0396                     	;# 
  3145  0397                     	;# 
  3146  0398                     	;# 
  3147  0399                     	;# 
  3148  039A                     	;# 
  3149  039C                     	;# 
  3150  039D                     	;# 
  3151  039E                     	;# 
  3152  039F                     	;# 
  3153  0411                     	;# 
  3154  0411                     	;# 
  3155  0412                     	;# 
  3156  0413                     	;# 
  3157  0414                     	;# 
  3158  0415                     	;# 
  3159  0416                     	;# 
  3160  0417                     	;# 
  3161  0418                     	;# 
  3162  0418                     	;# 
  3163  0419                     	;# 
  3164  041A                     	;# 
  3165  041B                     	;# 
  3166  041C                     	;# 
  3167  041D                     	;# 
  3168  041E                     	;# 
  3169  041F                     	;# 
  3170  0498                     	;# 
  3171  0498                     	;# 
  3172  0499                     	;# 
  3173  049A                     	;# 
  3174  049B                     	;# 
  3175  049B                     	;# 
  3176  049C                     	;# 
  3177  049D                     	;# 
  3178  049E                     	;# 
  3179  049F                     	;# 
  3180  0617                     	;# 
  3181  0618                     	;# 
  3182  0619                     	;# 
  3183  0619                     	;# 
  3184  061A                     	;# 
  3185  061B                     	;# 
  3186  061C                     	;# 
  3187  061C                     	;# 
  3188  061F                     	;# 
  3189  0691                     	;# 
  3190  0692                     	;# 
  3191  0693                     	;# 
  3192  0694                     	;# 
  3193  0695                     	;# 
  3194  0696                     	;# 
  3195  0697                     	;# 
  3196  0698                     	;# 
  3197  0699                     	;# 
  3198  0711                     	;# 
  3199  0712                     	;# 
  3200  0713                     	;# 
  3201  0714                     	;# 
  3202  0715                     	;# 
  3203  0716                     	;# 
  3204  0717                     	;# 
  3205  0718                     	;# 
  3206  0719                     	;# 
  3207  0891                     	;# 
  3208  0891                     	;# 
  3209  0891                     	;# 
  3210  0891                     	;# 
  3211  0891                     	;# 
  3212  0891                     	;# 
  3213  0892                     	;# 
  3214  0892                     	;# 
  3215  0892                     	;# 
  3216  0893                     	;# 
  3217  0893                     	;# 
  3218  0893                     	;# 
  3219  0893                     	;# 
  3220  0893                     	;# 
  3221  0893                     	;# 
  3222  0894                     	;# 
  3223  0894                     	;# 
  3224  0894                     	;# 
  3225  0895                     	;# 
  3226  0895                     	;# 
  3227  0895                     	;# 
  3228  0896                     	;# 
  3229  0896                     	;# 
  3230  0896                     	;# 
  3231  089B                     	;# 
  3232  0911                     	;# 
  3233  0912                     	;# 
  3234  0913                     	;# 
  3235  0914                     	;# 
  3236  0915                     	;# 
  3237  0916                     	;# 
  3238  0918                     	;# 
  3239  0919                     	;# 
  3240  091A                     	;# 
  3241  091B                     	;# 
  3242  091C                     	;# 
  3243  091D                     	;# 
  3244  091E                     	;# 
  3245  091F                     	;# 
  3246  0E0F                     	;# 
  3247  0E10                     	;# 
  3248  0E11                     	;# 
  3249  0E12                     	;# 
  3250  0E13                     	;# 
  3251  0E14                     	;# 
  3252  0E15                     	;# 
  3253  0E16                     	;# 
  3254  0E17                     	;# 
  3255  0E18                     	;# 
  3256  0E19                     	;# 
  3257  0E1A                     	;# 
  3258  0E1B                     	;# 
  3259  0E1C                     	;# 
  3260  0E1D                     	;# 
  3261  0E1E                     	;# 
  3262  0E1F                     	;# 
  3263  0E20                     	;# 
  3264  0E21                     	;# 
  3265  0E22                     	;# 
  3266  0E24                     	;# 
  3267  0E25                     	;# 
  3268  0E28                     	;# 
  3269  0E29                     	;# 
  3270  0E2A                     	;# 
  3271  0E2B                     	;# 
  3272  0E2C                     	;# 
  3273  0E2D                     	;# 
  3274  0E2E                     	;# 
  3275  0E2F                     	;# 
  3276  0E90                     	;# 
  3277  0E91                     	;# 
  3278  0E92                     	;# 
  3279  0E94                     	;# 
  3280  0E95                     	;# 
  3281  0E9C                     	;# 
  3282  0E9D                     	;# 
  3283  0E9E                     	;# 
  3284  0E9F                     	;# 
  3285  0EA0                     	;# 
  3286  0EA1                     	;# 
  3287  0EA2                     	;# 
  3288  0EA3                     	;# 
  3289  0EA4                     	;# 
  3290  0EA5                     	;# 
  3291  0EA6                     	;# 
  3292  0EA7                     	;# 
  3293  0F0F                     	;# 
  3294  0F10                     	;# 
  3295  0F11                     	;# 
  3296  0F12                     	;# 
  3297  0F13                     	;# 
  3298  0F14                     	;# 
  3299  0F15                     	;# 
  3300  0F16                     	;# 
  3301  0F17                     	;# 
  3302  0F18                     	;# 
  3303  0F19                     	;# 
  3304  0F1A                     	;# 
  3305  0F1B                     	;# 
  3306  0F1C                     	;# 
  3307  0F1D                     	;# 
  3308  0F1E                     	;# 
  3309  0F1F                     	;# 
  3310  0F20                     	;# 
  3311  0F21                     	;# 
  3312  0F22                     	;# 
  3313  0F23                     	;# 
  3314  0F24                     	;# 
  3315  0F25                     	;# 
  3316  0F26                     	;# 
  3317  0F27                     	;# 
  3318  0F28                     	;# 
  3319  0F29                     	;# 
  3320  0F2A                     	;# 
  3321  0F2B                     	;# 
  3322  0F2C                     	;# 
  3323  0F2D                     	;# 
  3324  0F2E                     	;# 
  3325  0F2F                     	;# 
  3326  0F30                     	;# 
  3327  0F31                     	;# 
  3328  0F32                     	;# 
  3329  0F33                     	;# 
  3330  0F34                     	;# 
  3331  0F35                     	;# 
  3332  0F36                     	;# 
  3333  0F37                     	;# 
  3334  0FE4                     	;# 
  3335  0FE5                     	;# 
  3336  0FE6                     	;# 
  3337  0FE7                     	;# 
  3338  0FE8                     	;# 
  3339  0FE9                     	;# 
  3340  0FEA                     	;# 
  3341  0FEB                     	;# 
  3342  0FED                     	;# 
  3343  0FEE                     	;# 
  3344  0FEF                     	;# 
  3345                           
  3346                           	psect	idataBANK2
  3347  1E7B                     __pidataBANK2:	
  3348                           
  3349                           ;initializer for main@F7270
  3350  1E7B  34FF               	retlw	255
  3351  1E7C  3400               	retlw	0
  3352  1E7D  34FF               	retlw	255
  3353  1E7E  3400               	retlw	0
  3354                           
  3355                           	psect	idataBANK5
  3356  1FB9                     __pidataBANK5:	
  3357                           
  3358                           ;initializer for main@F7272
  3359  1FB9  34FF               	retlw	255
  3360  1FBA  3400               	retlw	0
  3361  1FBB  34FF               	retlw	255
  3362  1FBC  3400               	retlw	0
  3363  1FBD  3416               	retlw	22
  3364  1FBE  3448               	retlw	72
  3365  1FBF  3445               	retlw	69
  3366  1FC0  344C               	retlw	76
  3367  1FC1  344C               	retlw	76
  3368  1FC2  344F               	retlw	79
  3369  1FC3  3420               	retlw	32
  3370  1FC4  3453               	retlw	83
  3371  1FC5  3445               	retlw	69
  3372  1FC6  344E               	retlw	78
  3373  1FC7  3453               	retlw	83
  3374  1FC8  344F               	retlw	79
  3375  1FC9  3452               	retlw	82
  3376  1FCA  3453               	retlw	83
  3377  1FCB  3417               	retlw	23
  3378  1FCC  34FF               	retlw	255
  3379  1FCD  3400               	retlw	0
  3380  1FCE  34FF               	retlw	255
  3381  1FCF  3400               	retlw	0
  3382                           
  3383                           	psect	stringtext1
  3384  1800                     __pstringtext1:	
  3385  1800                     _fsmStateTable:	
  3386  1800  3484               	retlw	low _I2C1_DO_IDLE
  3387  1801  341E               	retlw	high _I2C1_DO_IDLE
  3388  1802  34E0               	retlw	low _I2C1_DO_SEND_ADR_READ
  3389  1803  341E               	retlw	high _I2C1_DO_SEND_ADR_READ
  3390  1804  34C9               	retlw	low _I2C1_DO_SEND_ADR_WRITE
  3391  1805  341E               	retlw	high _I2C1_DO_SEND_ADR_WRITE
  3392  1806  34FF               	retlw	low _I2C1_DO_TX
  3393  1807  3414               	retlw	high _I2C1_DO_TX
  3394  1808  34C9               	retlw	low _I2C1_DO_RX
  3395  1809  3413               	retlw	high _I2C1_DO_RX
  3396  180A  34B7               	retlw	low _I2C1_DO_RCEN
  3397  180B  341E               	retlw	high _I2C1_DO_RCEN
  3398  180C  349A               	retlw	low _I2C1_DO_TX_EMPTY
  3399  180D  3411               	retlw	high _I2C1_DO_TX_EMPTY
  3400  180E  3457               	retlw	low _I2C1_DO_SEND_RESTART_READ
  3401  180F  341E               	retlw	high _I2C1_DO_SEND_RESTART_READ
  3402  1810  345B               	retlw	low _I2C1_DO_SEND_RESTART_WRITE
  3403  1811  341E               	retlw	high _I2C1_DO_SEND_RESTART_WRITE
  3404  1812  345F               	retlw	low _I2C1_DO_SEND_RESTART
  3405  1813  341E               	retlw	high _I2C1_DO_SEND_RESTART
  3406  1814  3463               	retlw	low _I2C1_DO_SEND_STOP
  3407  1815  341E               	retlw	high _I2C1_DO_SEND_STOP
  3408  1816  3467               	retlw	low _I2C1_DO_RX_ACK
  3409  1817  341E               	retlw	high _I2C1_DO_RX_ACK
  3410  1818  346B               	retlw	low _I2C1_DO_RX_NACK_STOP
  3411  1819  341E               	retlw	high _I2C1_DO_RX_NACK_STOP
  3412  181A  346F               	retlw	low _I2C1_DO_RX_NACK_RESTART
  3413  181B  341E               	retlw	high _I2C1_DO_RX_NACK_RESTART
  3414  181C  3489               	retlw	low _I2C1_DO_RESET
  3415  181D  341E               	retlw	high _I2C1_DO_RESET
  3416  181E  34C9               	retlw	low _I2C1_DO_ADDRESS_NACK
  3417  181F  3411               	retlw	high _I2C1_DO_ADDRESS_NACK
  3418  1820                     __end_of_fsmStateTable:	
  3419                           
  3420                           	psect	nvBANK2
  3421  0161                     __pnvBANK2:	
  3422  0161                     _EUSART_RxDefaultInterruptHandler:	
  3423  0161                     	ds	2
  3424  0163                     _EUSART_TxDefaultInterruptHandler:	
  3425  0163                     	ds	2
  3426  0165                     _eusartTxBufferRemaining:	
  3427  0165                     	ds	1
  3428  0166                     _raw_pressure:	
  3429  0166                     	ds	4
  3430                           
  3431                           	psect	nvBANK3
  3432  01CD                     __pnvBANK3:	
  3433  01CD                     _temperature:	
  3434  01CD                     	ds	4
  3435  01D1                     _pressure:	
  3436  01D1                     	ds	4
  3437  01D5                     _EUSART_ErrorHandler:	
  3438  01D5                     	ds	2
  3439  01D7                     _EUSART_OverrunErrorHandler:	
  3440  01D7                     	ds	2
  3441  01D9                     _EUSART_FramingErrorHandler:	
  3442  01D9                     	ds	2
  3443  000B                     _INTCONbits	set	11
  3444  001F                     _T2CONbits	set	31
  3445  001F                     _T2CON	set	31
  3446  0011                     _PIR1bits	set	17
  3447  001D                     _TMR2	set	29
  3448  001E                     _PR2	set	30
  3449  008E                     _TRISC	set	142
  3450  008D                     _TRISB	set	141
  3451  008C                     _TRISA	set	140
  3452  0097                     _WDTCON	set	151
  3453  0091                     _PIE1bits	set	145
  3454  010E                     _LATC	set	270
  3455  010D                     _LATB	set	269
  3456  010C                     _LATA	set	268
  3457  018C                     _ANSELA	set	396
  3458  018D                     _ANSELB	set	397
  3459  018E                     _ANSELC	set	398
  3460  0199                     _RC1REG	set	409
  3461  019D                     _RC1STAbits	set	413
  3462  019A                     _TX1REG	set	410
  3463  019E                     _TX1STAbits	set	414
  3464  019C                     _SP1BRGH	set	412
  3465  019B                     _SP1BRGL	set	411
  3466  019E                     _TX1STA	set	414
  3467  019D                     _RC1STA	set	413
  3468  019F                     _BAUD1CON	set	415
  3469  0214                     _SSP1STATbits	set	532
  3470  0216                     _SSP1CON2bits	set	534
  3471  0211                     _SSP1BUF	set	529
  3472  0215                     _SSP1CON1bits	set	533
  3473  0212                     _SSP1ADD	set	530
  3474  0216                     _SSP1CON2	set	534
  3475  0215                     _SSP1CON1	set	533
  3476  0214                     _SSP1STAT	set	532
  3477  020E                     _WPUC	set	526
  3478  020C                     _WPUA	set	524
  3479  020D                     _WPUB	set	525
  3480  028E                     _ODCONC	set	654
  3481  028D                     _ODCONB	set	653
  3482  028C                     _ODCONA	set	652
  3483  030E                     _SLRCONC	set	782
  3484  030D                     _SLRCONB	set	781
  3485  030C                     _SLRCONA	set	780
  3486  038E                     _INLVLC	set	910
  3487  038D                     _INLVLB	set	909
  3488  038C                     _INLVLA	set	908
  3489  061F                     _PWMTMRSbits	set	1567
  3490  0617                     _PWM5DCL	set	1559
  3491  0618                     _PWM5DCH	set	1560
  3492  0619                     _PWM5CON	set	1561
  3493  0916                     _PMD5	set	2326
  3494  0915                     _PMD4	set	2325
  3495  0914                     _PMD3	set	2324
  3496  0913                     _PMD2	set	2323
  3497  0912                     _PMD1	set	2322
  3498  0911                     _PMD0	set	2321
  3499  091E                     _OSCTUNE	set	2334
  3500  091F                     _OSCFRQ	set	2335
  3501  091D                     _OSCEN	set	2333
  3502  091B                     _OSCCON3	set	2331
  3503  0919                     _OSCCON1	set	2329
  3504  0E21                     _SSP1DATPPS	set	3617
  3505  0E20                     _SSP1CLKPPS	set	3616
  3506  0E24                     _RXPPS	set	3620
  3507  0EA6                     _RC6PPS	set	3750
  3508  0E9C                     _RB4PPS	set	3740
  3509  0E9D                     _RB5PPS	set	3741
  3510  0E9F                     _RB7PPS	set	3743
  3511                           
  3512                           	psect	stringtext2
  3513  2000                     __pstringtext2:	
  3514  2000                     STR_2:	
  3515  2000  3454               	retlw	84	;'T'
  3516  2001  3465               	retlw	101	;'e'
  3517  2002  346D               	retlw	109	;'m'
  3518  2003  3470               	retlw	112	;'p'
  3519  2004  3465               	retlw	101	;'e'
  3520  2005  3472               	retlw	114	;'r'
  3521  2006  3461               	retlw	97	;'a'
  3522  2007  3474               	retlw	116	;'t'
  3523  2008  3475               	retlw	117	;'u'
  3524  2009  3472               	retlw	114	;'r'
  3525  200A  3465               	retlw	101	;'e'
  3526  200B  3420               	retlw	32	;' '
  3527  200C  343A               	retlw	58	;':'
  3528  200D  3420               	retlw	32	;' '
  3529  200E  3425               	retlw	37	;'%'
  3530  200F  3466               	retlw	102	;'f'
  3531  2010  340A               	retlw	10
  3532  2011  3400               	retlw	0
  3533                           
  3534                           	psect	stringtext3
  3535  2012                     __pstringtext3:	
  3536  2012                     STR_1:	
  3537  2012  3450               	retlw	80	;'P'
  3538  2013  3472               	retlw	114	;'r'
  3539  2014  3465               	retlw	101	;'e'
  3540  2015  3473               	retlw	115	;'s'
  3541  2016  3473               	retlw	115	;'s'
  3542  2017  3475               	retlw	117	;'u'
  3543  2018  3472               	retlw	114	;'r'
  3544  2019  3465               	retlw	101	;'e'
  3545  201A  3420               	retlw	32	;' '
  3546  201B  343A               	retlw	58	;':'
  3547  201C  3420               	retlw	32	;' '
  3548  201D  3425               	retlw	37	;'%'
  3549  201E  3466               	retlw	102	;'f'
  3550  201F  340A               	retlw	10
  3551  2020  3400               	retlw	0
  3552                           
  3553                           	psect	stringtext4
  3554  2021                     __pstringtext4:	
  3555  2021                     STR_3:	
  3556  2021  3449               	retlw	73	;'I'
  3557  2022  344E               	retlw	78	;'N'
  3558  2023  3446               	retlw	70	;'F'
  3559  2024  3400               	retlw	0
  3560                           
  3561                           	psect	stringtext5
  3562  2025                     __pstringtext5:	
  3563  2025                     STR_7:	
  3564  2025  344E               	retlw	78	;'N'
  3565  2026  3441               	retlw	65	;'A'
  3566  2027  344E               	retlw	78	;'N'
  3567  2028  3400               	retlw	0
  3568                           
  3569                           	psect	stringtext6
  3570  2029                     __pstringtext6:	
  3571  2029                     STR_4:	
  3572  2029  3469               	retlw	105	;'i'
  3573  202A  346E               	retlw	110	;'n'
  3574  202B  3466               	retlw	102	;'f'
  3575  202C  3400               	retlw	0
  3576                           
  3577                           	psect	stringtext7
  3578  202D                     __pstringtext7:	
  3579  202D                     STR_8:	
  3580  202D  346E               	retlw	110	;'n'
  3581  202E  3461               	retlw	97	;'a'
  3582  202F  346E               	retlw	110	;'n'
  3583  2030  3400               	retlw	0
  3584                           
  3585                           	psect	stringtext8
  3586  2031                     __pstringtext8:	
  3587  2031                     STR_11:	
  3588  2031  346C               	retlw	108	;'l'
  3589  2032  3466               	retlw	102	;'f'
  3590  2033  3400               	retlw	0
  3591                           
  3592                           	psect	stringtext9
  3593  0000                     __pstringtext9:	
  3594  2031                     
  3595                           ; #config settings
  3596  0000                     
  3597                           	psect	cinit
  3598  0025                     start_initialization:	
  3599  0025                     __initialization:	
  3600                           
  3601                           ; Initialize objects allocated to BANK2
  3602  0025  307B               	movlw	low __pidataBANK2
  3603  0026  0084               	movwf	4
  3604  0027  309E               	movlw	(high __pidataBANK2)| (0+128)
  3605  0028  0085               	movwf	5
  3606  0029  306A               	movlw	low __pdataBANK2
  3607  002A  0086               	movwf	6
  3608  002B  3001               	movlw	high __pdataBANK2
  3609  002C  0087               	movwf	7
  3610  002D  3004               	movlw	4
  3611  002E  319E  26C3  3180   	fcall	init_ram
  3612                           
  3613                           ; Initialize objects allocated to BANK5
  3614  0031  30B9               	movlw	low __pidataBANK5
  3615  0032  0084               	movwf	4
  3616  0033  309F               	movlw	(high __pidataBANK5)| (0+128)
  3617  0034  0085               	movwf	5
  3618  0035  30A0               	movlw	low __pdataBANK5
  3619  0036  0086               	movwf	6
  3620  0037  3002               	movlw	high __pdataBANK5
  3621  0038  0087               	movwf	7
  3622  0039  3017               	movlw	23
  3623  003A  319E  26C3  3180   	fcall	init_ram
  3624                           
  3625                           ; Clear objects allocated to COMMON
  3626  003D  01FC               	clrf	__pbssCOMMON& (0+127)
  3627                           
  3628                           ; Clear objects allocated to BANK1
  3629  003E  0021               	movlb	1	; select bank1
  3630  003F  01ED               	clrf	__pbssBANK1& (0+127)
  3631  0040  01EE               	clrf	(__pbssBANK1+1)& (0+127)
  3632  0041  01EF               	clrf	(__pbssBANK1+2)& (0+127)
  3633                           
  3634                           ; Clear objects allocated to BANK2
  3635  0042  3044               	movlw	low __pbssBANK2
  3636  0043  0084               	movwf	4
  3637  0044  3001               	movlw	high __pbssBANK2
  3638  0045  0085               	movwf	5
  3639  0046  301D               	movlw	29
  3640  0047  319E  26BD  3180   	fcall	clear_ram0
  3641                           
  3642                           ; Clear objects allocated to BANK3
  3643  004A  30A0               	movlw	low __pbssBANK3
  3644  004B  0084               	movwf	4
  3645  004C  3001               	movlw	high __pbssBANK3
  3646  004D  0085               	movwf	5
  3647  004E  302D               	movlw	45
  3648  004F  319E  26BD  3180   	fcall	clear_ram0
  3649                           
  3650                           ; Clear objects allocated to BANK4
  3651  0052  3020               	movlw	low __pbssBANK4
  3652  0053  0084               	movwf	4
  3653  0054  3002               	movlw	high __pbssBANK4
  3654  0055  0085               	movwf	5
  3655  0056  3050               	movlw	80
  3656  0057  319E  26BD         	fcall	clear_ram0
  3657  0059                     end_of_initialization:	
  3658                           ;End of C runtime variable initialization code
  3659                           
  3660  0059                     __end_of__initialization:	
  3661  0059  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3662  005A  0020               	movlb	0
  3663  005B  3193  2B00         	ljmp	_main	;jump to C main() function
  3664                           
  3665                           	psect	bssCOMMON
  3666  007C                     __pbssCOMMON:	
  3667  007C                     _eusartRxHead:	
  3668  007C                     	ds	1
  3669                           
  3670                           	psect	bssBANK1
  3671  00ED                     __pbssBANK1:	
  3672  00ED                     _eusartRxTail:	
  3673  00ED                     	ds	1
  3674  00EE                     _eusartTxTail:	
  3675  00EE                     	ds	1
  3676  00EF                     _eusartTxHead:	
  3677  00EF                     	ds	1
  3678                           
  3679                           	psect	bssBANK2
  3680  0144                     __pbssBANK2:	
  3681  0144                     _eusartRxStatusBuffer:	
  3682  0144                     	ds	8
  3683  014C                     floorf@F524:	
  3684  014C                     	ds	4
  3685  0150                     ___fpclassifyf@F463:	
  3686  0150                     	ds	4
  3687  0154                     _nout:	
  3688  0154                     	ds	2
  3689  0156                     _width:	
  3690  0156                     	ds	2
  3691  0158                     _prec:	
  3692  0158                     	ds	2
  3693  015A                     _flags:	
  3694  015A                     	ds	2
  3695  015C                     _raw_temperature:	
  3696  015C                     	ds	2
  3697  015E                     _value:	
  3698  015E                     	ds	1
  3699  015F                     _eusartRxLastError:	
  3700  015F                     	ds	1
  3701  0160                     _eusartRxCount:	
  3702  0160                     	ds	1
  3703                           
  3704                           	psect	dataBANK2
  3705  016A                     __pdataBANK2:	
  3706  016A                     main@F7270:	
  3707  016A                     	ds	4
  3708                           
  3709                           	psect	bssBANK3
  3710  01A0                     __pbssBANK3:	
  3711  01A0                     _I2C1_Status:	
  3712  01A0                     	ds	29
  3713  01BD                     _eusartRxBuffer:	
  3714  01BD                     	ds	8
  3715  01C5                     _eusartTxBuffer:	
  3716  01C5                     	ds	8
  3717                           
  3718                           	psect	bssBANK4
  3719  0220                     __pbssBANK4:	
  3720  0220                     _dbuf:	
  3721  0220                     	ds	80
  3722                           
  3723                           	psect	dataBANK5
  3724  02A0                     __pdataBANK5:	
  3725  02A0                     main@F7272:	
  3726  02A0                     	ds	23
  3727                           
  3728                           	psect	inittext
  3729  1EC3                     init_ram:	
  3730  1EC3  00FE               	movwf	126
  3731  1EC4                     initloop:	
  3732  1EC4  0012               	moviw fsr0++
  3733  1EC5  001E               	movwi fsr1++
  3734  1EC6  0BFE               	decfsz	126,f
  3735  1EC7  2EC4               	goto	initloop
  3736  1EC8  3400               	retlw	0
  3737                           
  3738                           	psect	clrtext
  3739  1EBD                     clear_ram0:	
  3740                           ;	Called with FSR0 containing the base address, and
  3741                           ;	WREG with the size to clear
  3742                           
  3743  1EBD  0064               	clrwdt	;clear the watchdog before getting into this loop
  3744  1EBE                     clrloop0:	
  3745  1EBE  0180               	clrf	0	;clear RAM location pointed to by FSR
  3746  1EBF  3101               	addfsr 0,1
  3747  1EC0  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3748  1EC1  2EBE               	goto	clrloop0	;have we reached the end yet?
  3749  1EC2  3400               	retlw	0	;all done for this memory range, return
  3750                           
  3751                           	psect	cstackBANK2
  3752  0120                     __pcstackBANK2:	
  3753  0120                     ??_readPressureSensor:	
  3754                           
  3755                           ; 1 bytes @ 0x0
  3756  0120                     	ds	9
  3757  0129                     main@dummy_data:	
  3758                           
  3759                           ; 23 bytes @ 0x9
  3760  0129                     	ds	23
  3761  0140                     main@hdr_trl:	
  3762                           
  3763                           ; 4 bytes @ 0x20
  3764  0140                     	ds	4
  3765                           
  3766                           	psect	cstackBANK1
  3767  00A0                     __pcstackBANK1:	
  3768  00A0                     efgtoa@ou:	
  3769                           
  3770                           ; 4 bytes @ 0x0
  3771  00A0                     	ds	4
  3772  00A4                     _efgtoa$1438:	
  3773                           
  3774                           ; 2 bytes @ 0x4
  3775  00A4                     	ds	2
  3776  00A6                     _efgtoa$1439:	
  3777                           
  3778                           ; 2 bytes @ 0x6
  3779  00A6                     	ds	2
  3780  00A8                     _efgtoa$1444:	
  3781                           
  3782                           ; 2 bytes @ 0x8
  3783  00A8                     	ds	2
  3784  00AA                     _efgtoa$1448:	
  3785                           
  3786                           ; 2 bytes @ 0xA
  3787  00AA                     	ds	2
  3788  00AC                     _efgtoa$1449:	
  3789                           
  3790                           ; 2 bytes @ 0xC
  3791  00AC                     	ds	2
  3792  00AE                     _efgtoa$1450:	
  3793                           
  3794                           ; 2 bytes @ 0xE
  3795  00AE                     	ds	2
  3796  00B0                     efgtoa@t:	
  3797                           
  3798                           ; 2 bytes @ 0x10
  3799  00B0                     	ds	2
  3800  00B2                     efgtoa@pp:	
  3801                           
  3802                           ; 2 bytes @ 0x12
  3803  00B2                     	ds	2
  3804  00B4                     efgtoa@m:	
  3805                           
  3806                           ; 2 bytes @ 0x14
  3807  00B4                     	ds	2
  3808  00B6                     efgtoa@ne:	
  3809                           
  3810                           ; 2 bytes @ 0x16
  3811  00B6                     	ds	2
  3812  00B8                     efgtoa@d:	
  3813                           
  3814                           ; 2 bytes @ 0x18
  3815  00B8                     	ds	2
  3816  00BA                     efgtoa@sign:	
  3817                           
  3818                           ; 2 bytes @ 0x1A
  3819  00BA                     	ds	2
  3820  00BC                     efgtoa@fp:	
  3821                           
  3822                           ; 1 bytes @ 0x1C
  3823  00BC                     	ds	1
  3824  00BD                     efgtoa@p:	
  3825                           
  3826                           ; 2 bytes @ 0x1D
  3827  00BD                     	ds	2
  3828  00BF                     efgtoa@nmode:	
  3829                           
  3830                           ; 1 bytes @ 0x1F
  3831  00BF                     	ds	1
  3832  00C0                     efgtoa@w:	
  3833                           
  3834                           ; 2 bytes @ 0x20
  3835  00C0                     	ds	2
  3836  00C2                     efgtoa@mode:	
  3837                           
  3838                           ; 1 bytes @ 0x22
  3839  00C2                     	ds	1
  3840  00C3                     efgtoa@h:	
  3841                           
  3842                           ; 4 bytes @ 0x23
  3843  00C3                     	ds	4
  3844  00C7                     efgtoa@l:	
  3845                           
  3846                           ; 4 bytes @ 0x27
  3847  00C7                     	ds	4
  3848  00CB                     efgtoa@i:	
  3849                           
  3850                           ; 2 bytes @ 0x2B
  3851  00CB                     	ds	2
  3852  00CD                     efgtoa@g:	
  3853                           
  3854                           ; 4 bytes @ 0x2D
  3855  00CD                     	ds	4
  3856  00D1                     efgtoa@e:	
  3857                           
  3858                           ; 2 bytes @ 0x31
  3859  00D1                     	ds	2
  3860  00D3                     efgtoa@n:	
  3861                           
  3862                           ; 2 bytes @ 0x33
  3863  00D3                     	ds	2
  3864  00D5                     efgtoa@u:	
  3865                           
  3866                           ; 4 bytes @ 0x35
  3867  00D5                     	ds	4
  3868  00D9                     ?_vfprintf:	
  3869  00D9                     vfprintf@fmt:	
  3870                           ; 2 bytes @ 0x39
  3871                           
  3872                           
  3873                           ; 2 bytes @ 0x39
  3874  00D9                     	ds	2
  3875  00DB                     vfprintf@ap:	
  3876                           
  3877                           ; 1 bytes @ 0x3B
  3878  00DB                     	ds	1
  3879  00DC                     ??_vfprintf:	
  3880                           
  3881                           ; 1 bytes @ 0x3C
  3882  00DC                     	ds	2
  3883  00DE                     vfprintf@fp:	
  3884                           
  3885                           ; 1 bytes @ 0x3E
  3886  00DE                     	ds	1
  3887  00DF                     vfprintf@cfmt:	
  3888                           
  3889                           ; 2 bytes @ 0x3F
  3890  00DF                     	ds	2
  3891  00E1                     ?_printf:	
  3892  00E1                     printf@fmt:	
  3893                           ; 2 bytes @ 0x41
  3894                           
  3895                           
  3896                           ; 2 bytes @ 0x41
  3897  00E1                     	ds	6
  3898  00E7                     ??_printf:	
  3899                           
  3900                           ; 1 bytes @ 0x47
  3901  00E7                     	ds	3
  3902  00EA                     printf@ap:	
  3903                           
  3904                           ; 1 bytes @ 0x4A
  3905  00EA                     	ds	1
  3906  00EB                     ??_main:	
  3907                           
  3908                           ; 1 bytes @ 0x4B
  3909  00EB                     	ds	2
  3910                           
  3911                           	psect	cstackCOMMON
  3912  0070                     __pcstackCOMMON:	
  3913  0070                     ?_I2C1_Open:	
  3914  0070                     ?_I2C1_MasterWrite:	
  3915                           ; 1 bytes @ 0x0
  3916                           
  3917  0070                     ?_I2C1_Close:	
  3918                           ; 1 bytes @ 0x0
  3919                           
  3920  0070                     ?_EUSART_Receive_ISR:	
  3921                           ; 1 bytes @ 0x0
  3922                           
  3923  0070                     ?_EUSART_Transmit_ISR:	
  3924                           ; 1 bytes @ 0x0
  3925                           
  3926  0070                     ??_EUSART_Transmit_ISR:	
  3927                           ; 1 bytes @ 0x0
  3928                           
  3929  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  3930                           ; 1 bytes @ 0x0
  3931                           
  3932  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  3933                           ; 1 bytes @ 0x0
  3934                           
  3935  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  3936                           ; 1 bytes @ 0x0
  3937                           
  3938  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  3939                           ; 1 bytes @ 0x0
  3940                           
  3941  0070                     ?_EUSART_DefaultErrorHandler:	
  3942                           ; 1 bytes @ 0x0
  3943                           
  3944  0070                     ?_EUSART_RxDataHandler:	
  3945                           ; 1 bytes @ 0x0
  3946                           
  3947  0070                     ??_EUSART_RxDataHandler:	
  3948                           ; 1 bytes @ 0x0
  3949                           
  3950  0070                     ?_PMD_Initialize:	
  3951                           ; 1 bytes @ 0x0
  3952                           
  3953  0070                     ?_I2C1_Initialize:	
  3954                           ; 1 bytes @ 0x0
  3955                           
  3956  0070                     ?_PIN_MANAGER_Initialize:	
  3957                           ; 1 bytes @ 0x0
  3958                           
  3959  0070                     ?_OSCILLATOR_Initialize:	
  3960                           ; 1 bytes @ 0x0
  3961                           
  3962  0070                     ?_WDT_Initialize:	
  3963                           ; 1 bytes @ 0x0
  3964                           
  3965  0070                     ?_I2C1_DO_IDLE:	
  3966                           ; 1 bytes @ 0x0
  3967                           
  3968  0070                     ?_I2C1_DO_SEND_ADR_READ:	
  3969                           ; 1 bytes @ 0x0
  3970                           
  3971  0070                     ?_I2C1_DO_SEND_ADR_WRITE:	
  3972                           ; 1 bytes @ 0x0
  3973                           
  3974  0070                     ?_I2C1_DO_TX:	
  3975                           ; 1 bytes @ 0x0
  3976                           
  3977  0070                     ?_I2C1_DO_RX:	
  3978                           ; 1 bytes @ 0x0
  3979                           
  3980  0070                     ?_I2C1_DO_RCEN:	
  3981                           ; 1 bytes @ 0x0
  3982                           
  3983  0070                     ?_I2C1_DO_TX_EMPTY:	
  3984                           ; 1 bytes @ 0x0
  3985                           
  3986  0070                     ?_I2C1_DO_SEND_RESTART_READ:	
  3987                           ; 1 bytes @ 0x0
  3988                           
  3989  0070                     ?_I2C1_DO_SEND_RESTART_WRITE:	
  3990                           ; 1 bytes @ 0x0
  3991                           
  3992  0070                     ?_I2C1_DO_SEND_RESTART:	
  3993                           ; 1 bytes @ 0x0
  3994                           
  3995  0070                     ?_I2C1_DO_SEND_STOP:	
  3996                           ; 1 bytes @ 0x0
  3997                           
  3998  0070                     ?_I2C1_DO_RX_ACK:	
  3999                           ; 1 bytes @ 0x0
  4000                           
  4001  0070                     ?_I2C1_DO_RX_NACK_STOP:	
  4002                           ; 1 bytes @ 0x0
  4003                           
  4004  0070                     ?_I2C1_DO_RX_NACK_RESTART:	
  4005                           ; 1 bytes @ 0x0
  4006                           
  4007  0070                     ?_I2C1_DO_RESET:	
  4008                           ; 1 bytes @ 0x0
  4009                           
  4010  0070                     ?_I2C1_DO_ADDRESS_NACK:	
  4011                           ; 1 bytes @ 0x0
  4012                           
  4013  0070                     ?_I2C1_MasterClearIrq:	
  4014                           ; 1 bytes @ 0x0
  4015                           
  4016  0070                     ?_I2C1_MasterOpen:	
  4017                           ; 1 bytes @ 0x0
  4018                           
  4019  0070                     ?_I2C1_MasterDisableIrq:	
  4020                           ; 1 bytes @ 0x0
  4021                           
  4022  0070                     ?_I2C1_MasterClose:	
  4023                           ; 1 bytes @ 0x0
  4024                           
  4025  0070                     ?_I2C1_MasterStart:	
  4026                           ; 1 bytes @ 0x0
  4027                           
  4028  0070                     ?_I2C1_Poller:	
  4029                           ; 1 bytes @ 0x0
  4030                           
  4031  0070                     ?_I2C1_MasterWaitForEvent:	
  4032                           ; 1 bytes @ 0x0
  4033                           
  4034  0070                     ?_I2C1_MasterFsm:	
  4035                           ; 1 bytes @ 0x0
  4036                           
  4037  0070                     ?_I2C1_MasterIsNack:	
  4038                           ; 1 bytes @ 0x0
  4039                           
  4040  0070                     ?_I2C1_MasterSendTxData:	
  4041                           ; 1 bytes @ 0x0
  4042                           
  4043  0070                     ?_I2C1_MasterGetRxData:	
  4044                           ; 1 bytes @ 0x0
  4045                           
  4046  0070                     ?_I2C1_MasterSendAck:	
  4047                           ; 1 bytes @ 0x0
  4048                           
  4049  0070                     ?_I2C1_MasterStartRx:	
  4050                           ; 1 bytes @ 0x0
  4051                           
  4052  0070                     ?_I2C1_MasterSetIrq:	
  4053                           ; 1 bytes @ 0x0
  4054                           
  4055  0070                     ?_I2C1_MasterEnableRestart:	
  4056                           ; 1 bytes @ 0x0
  4057                           
  4058  0070                     ?_I2C1_MasterStop:	
  4059                           ; 1 bytes @ 0x0
  4060                           
  4061  0070                     ?_I2C1_MasterSendNack:	
  4062                           ; 1 bytes @ 0x0
  4063                           
  4064  0070                     ?_PWM5_Initialize:	
  4065                           ; 1 bytes @ 0x0
  4066                           
  4067  0070                     ?_EUSART_Initialize:	
  4068                           ; 1 bytes @ 0x0
  4069                           
  4070  0070                     ?_EUSART_Write:	
  4071                           ; 1 bytes @ 0x0
  4072                           
  4073  0070                     ?_putch:	
  4074                           ; 1 bytes @ 0x0
  4075                           
  4076  0070                     ?_TMR2_Initialize:	
  4077                           ; 1 bytes @ 0x0
  4078                           
  4079  0070                     ?_INTERRUPT_InterruptManager:	
  4080                           ; 1 bytes @ 0x0
  4081                           
  4082  0070                     ?_SYSTEM_Initialize:	
  4083                           ; 1 bytes @ 0x0
  4084                           
  4085  0070                     ?_I2C1_MasterOperation:	
  4086                           ; 1 bytes @ 0x0
  4087                           
  4088  0070                     ?_setZero:	
  4089                           ; 1 bytes @ 0x0
  4090                           
  4091  0070                     ?_readPressureSensor:	
  4092                           ; 1 bytes @ 0x0
  4093                           
  4094  0070                     ?_main:	
  4095                           ; 1 bytes @ 0x0
  4096                           
  4097                           
  4098                           ; 1 bytes @ 0x0
  4099  0070                     	ds	1
  4100  0071                     ?___fleq:	
  4101  0071                     ??_I2C1_Open:	
  4102                           ; 1 bit 
  4103                           
  4104  0071                     ?_I2C1_SetBuffer:	
  4105                           ; 1 bytes @ 0x1
  4106                           
  4107  0071                     ??_I2C1_Close:	
  4108                           ; 1 bytes @ 0x1
  4109                           
  4110  0071                     ?_EUSART_SetRxInterruptHandler:	
  4111                           ; 1 bytes @ 0x1
  4112                           
  4113  0071                     ??_EUSART_Receive_ISR:	
  4114                           ; 1 bytes @ 0x1
  4115                           
  4116  0071                     ?_EUSART_SetTxInterruptHandler:	
  4117                           ; 1 bytes @ 0x1
  4118                           
  4119  0071                     ?_EUSART_SetFramingErrorHandler:	
  4120                           ; 1 bytes @ 0x1
  4121                           
  4122  0071                     ?_EUSART_SetOverrunErrorHandler:	
  4123                           ; 1 bytes @ 0x1
  4124                           
  4125  0071                     ?_EUSART_SetErrorHandler:	
  4126                           ; 1 bytes @ 0x1
  4127                           
  4128  0071                     ??_EUSART_DefaultErrorHandler:	
  4129                           ; 1 bytes @ 0x1
  4130                           
  4131  0071                     ??_PMD_Initialize:	
  4132                           ; 1 bytes @ 0x1
  4133                           
  4134  0071                     ??_I2C1_Initialize:	
  4135                           ; 1 bytes @ 0x1
  4136                           
  4137  0071                     ??_PIN_MANAGER_Initialize:	
  4138                           ; 1 bytes @ 0x1
  4139                           
  4140  0071                     ??_OSCILLATOR_Initialize:	
  4141                           ; 1 bytes @ 0x1
  4142                           
  4143  0071                     ??_WDT_Initialize:	
  4144                           ; 1 bytes @ 0x1
  4145                           
  4146  0071                     ??_I2C1_DO_IDLE:	
  4147                           ; 1 bytes @ 0x1
  4148                           
  4149  0071                     ??_I2C1_DO_SEND_ADR_READ:	
  4150                           ; 1 bytes @ 0x1
  4151                           
  4152  0071                     ??_I2C1_DO_RCEN:	
  4153                           ; 1 bytes @ 0x1
  4154                           
  4155  0071                     ??_I2C1_DO_SEND_RESTART_READ:	
  4156                           ; 1 bytes @ 0x1
  4157                           
  4158  0071                     ??_I2C1_DO_SEND_RESTART_WRITE:	
  4159                           ; 1 bytes @ 0x1
  4160                           
  4161  0071                     ??_I2C1_DO_SEND_RESTART:	
  4162                           ; 1 bytes @ 0x1
  4163                           
  4164  0071                     ??_I2C1_DO_SEND_STOP:	
  4165                           ; 1 bytes @ 0x1
  4166                           
  4167  0071                     ??_I2C1_DO_RX_ACK:	
  4168                           ; 1 bytes @ 0x1
  4169                           
  4170  0071                     ??_I2C1_DO_RX_NACK_STOP:	
  4171                           ; 1 bytes @ 0x1
  4172                           
  4173  0071                     ??_I2C1_DO_RX_NACK_RESTART:	
  4174                           ; 1 bytes @ 0x1
  4175                           
  4176  0071                     ??_I2C1_DO_RESET:	
  4177                           ; 1 bytes @ 0x1
  4178                           
  4179  0071                     ??_I2C1_MasterClearIrq:	
  4180                           ; 1 bytes @ 0x1
  4181                           
  4182  0071                     ??_I2C1_MasterOpen:	
  4183                           ; 1 bytes @ 0x1
  4184                           
  4185  0071                     ??_I2C1_MasterDisableIrq:	
  4186                           ; 1 bytes @ 0x1
  4187                           
  4188  0071                     ??_I2C1_MasterClose:	
  4189                           ; 1 bytes @ 0x1
  4190                           
  4191  0071                     ??_I2C1_MasterStart:	
  4192                           ; 1 bytes @ 0x1
  4193                           
  4194  0071                     ?_I2C1_SetCallback:	
  4195                           ; 1 bytes @ 0x1
  4196                           
  4197  0071                     ??_I2C1_MasterWaitForEvent:	
  4198                           ; 1 bytes @ 0x1
  4199                           
  4200  0071                     ??_I2C1_MasterIsNack:	
  4201                           ; 1 bytes @ 0x1
  4202                           
  4203  0071                     ??_I2C1_MasterSendTxData:	
  4204                           ; 1 bytes @ 0x1
  4205                           
  4206  0071                     ??_I2C1_MasterGetRxData:	
  4207                           ; 1 bytes @ 0x1
  4208                           
  4209  0071                     ??_I2C1_MasterSendAck:	
  4210                           ; 1 bytes @ 0x1
  4211                           
  4212  0071                     ??_I2C1_MasterStartRx:	
  4213                           ; 1 bytes @ 0x1
  4214                           
  4215  0071                     ??_I2C1_MasterSetIrq:	
  4216                           ; 1 bytes @ 0x1
  4217                           
  4218  0071                     ??_I2C1_MasterEnableRestart:	
  4219                           ; 1 bytes @ 0x1
  4220                           
  4221  0071                     ??_I2C1_MasterStop:	
  4222                           ; 1 bytes @ 0x1
  4223                           
  4224  0071                     ??_I2C1_MasterSendNack:	
  4225                           ; 1 bytes @ 0x1
  4226                           
  4227  0071                     ?_strcpy:	
  4228                           ; 1 bytes @ 0x1
  4229                           
  4230  0071                     ??_PWM5_Initialize:	
  4231                           ; 1 bytes @ 0x1
  4232                           
  4233  0071                     ??_EUSART_Write:	
  4234                           ; 1 bytes @ 0x1
  4235                           
  4236  0071                     ??_TMR2_Initialize:	
  4237                           ; 1 bytes @ 0x1
  4238                           
  4239  0071                     ??_INTERRUPT_InterruptManager:	
  4240                           ; 1 bytes @ 0x1
  4241                           
  4242  0071                     ??_setZero:	
  4243                           ; 1 bytes @ 0x1
  4244                           
  4245  0071                     ?_strlen:	
  4246                           ; 1 bytes @ 0x1
  4247                           
  4248  0071                     ?___fpclassifyf:	
  4249                           ; 2 bytes @ 0x1
  4250                           
  4251  0071                     ?_isupper:	
  4252                           ; 2 bytes @ 0x1
  4253                           
  4254  0071                     ?_strncmp:	
  4255                           ; 2 bytes @ 0x1
  4256                           
  4257  0071                     ?__Umul8_16:	
  4258                           ; 2 bytes @ 0x1
  4259                           
  4260  0071                     ?___awdiv:	
  4261                           ; 2 bytes @ 0x1
  4262                           
  4263  0071                     ?___awmod:	
  4264                           ; 2 bytes @ 0x1
  4265                           
  4266  0071                     ?___flneg:	
  4267                           ; 2 bytes @ 0x1
  4268                           
  4269  0071                     ?___fltol:	
  4270                           ; 4 bytes @ 0x1
  4271                           
  4272  0071                     ?___fladd:	
  4273                           ; 4 bytes @ 0x1
  4274                           
  4275  0071                     ?___xxtofl:	
  4276                           ; 4 bytes @ 0x1
  4277                           
  4278  0071                     I2C1_MasterSendTxData@data:	
  4279                           ; 4 bytes @ 0x1
  4280                           
  4281  0071                     __Umul8_16@multiplicand:	
  4282                           ; 1 bytes @ 0x1
  4283                           
  4284  0071                     EUSART_SetFramingErrorHandler@interruptHandler:	
  4285                           ; 1 bytes @ 0x1
  4286                           
  4287  0071                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  4288                           ; 2 bytes @ 0x1
  4289                           
  4290  0071                     EUSART_SetErrorHandler@interruptHandler:	
  4291                           ; 2 bytes @ 0x1
  4292                           
  4293  0071                     EUSART_SetTxInterruptHandler@interruptHandler:	
  4294                           ; 2 bytes @ 0x1
  4295                           
  4296  0071                     EUSART_SetRxInterruptHandler@interruptHandler:	
  4297                           ; 2 bytes @ 0x1
  4298                           
  4299  0071                     I2C1_SetBuffer@bufferSize:	
  4300                           ; 2 bytes @ 0x1
  4301                           
  4302  0071                     I2C1_SetCallback@cb:	
  4303                           ; 2 bytes @ 0x1
  4304                           
  4305  0071                     ___awdiv@divisor:	
  4306                           ; 2 bytes @ 0x1
  4307                           
  4308  0071                     ___awmod@divisor:	
  4309                           ; 2 bytes @ 0x1
  4310                           
  4311  0071                     isupper@c:	
  4312                           ; 2 bytes @ 0x1
  4313                           
  4314  0071                     strcpy@src:	
  4315                           ; 2 bytes @ 0x1
  4316                           
  4317  0071                     strncmp@_r:	
  4318                           ; 2 bytes @ 0x1
  4319                           
  4320  0071                     ___fleq@ff1:	
  4321                           ; 2 bytes @ 0x1
  4322                           
  4323  0071                     ___flneg@f1:	
  4324                           ; 4 bytes @ 0x1
  4325                           
  4326  0071                     ___fltol@f1:	
  4327                           ; 4 bytes @ 0x1
  4328                           
  4329  0071                     ___fladd@b:	
  4330                           ; 4 bytes @ 0x1
  4331                           
  4332  0071                     ___xxtofl@val:	
  4333                           ; 4 bytes @ 0x1
  4334                           
  4335  0071                     ___fpclassifyf@x:	
  4336                           ; 4 bytes @ 0x1
  4337                           
  4338                           
  4339                           ; 4 bytes @ 0x1
  4340  0071                     	ds	1
  4341  0072                     ??_I2C1_DO_SEND_ADR_WRITE:	
  4342  0072                     EUSART_Write@txData:	
  4343                           ; 1 bytes @ 0x2
  4344                           
  4345  0072                     I2C1_Open@address:	
  4346                           ; 1 bytes @ 0x2
  4347                           
  4348  0072                     I2C1_Close@returnValue:	
  4349                           ; 1 bytes @ 0x2
  4350                           
  4351                           
  4352                           ; 1 bytes @ 0x2
  4353  0072                     	ds	1
  4354  0073                     ??_I2C1_SetBuffer:	
  4355  0073                     ??_EUSART_SetRxInterruptHandler:	
  4356                           ; 1 bytes @ 0x3
  4357                           
  4358  0073                     ??_EUSART_SetTxInterruptHandler:	
  4359                           ; 1 bytes @ 0x3
  4360                           
  4361  0073                     ??_EUSART_SetFramingErrorHandler:	
  4362                           ; 1 bytes @ 0x3
  4363                           
  4364  0073                     ??_EUSART_SetOverrunErrorHandler:	
  4365                           ; 1 bytes @ 0x3
  4366                           
  4367  0073                     ??_EUSART_SetErrorHandler:	
  4368                           ; 1 bytes @ 0x3
  4369                           
  4370  0073                     ??_strlen:	
  4371                           ; 1 bytes @ 0x3
  4372                           
  4373  0073                     ??_isupper:	
  4374                           ; 1 bytes @ 0x3
  4375                           
  4376  0073                     ??_strcpy:	
  4377                           ; 1 bytes @ 0x3
  4378                           
  4379  0073                     ??__Umul8_16:	
  4380                           ; 1 bytes @ 0x3
  4381                           
  4382  0073                     ??_EUSART_Initialize:	
  4383                           ; 1 bytes @ 0x3
  4384                           
  4385  0073                     ??_putch:	
  4386                           ; 1 bytes @ 0x3
  4387                           
  4388  0073                     putch@txData:	
  4389                           ; 1 bytes @ 0x3
  4390                           
  4391  0073                     I2C1_Open@returnValue:	
  4392                           ; 1 bytes @ 0x3
  4393                           
  4394  0073                     I2C1_SetCallback@ptr:	
  4395                           ; 1 bytes @ 0x3
  4396                           
  4397  0073                     ___awdiv@dividend:	
  4398                           ; 1 bytes @ 0x3
  4399                           
  4400  0073                     ___awmod@dividend:	
  4401                           ; 2 bytes @ 0x3
  4402                           
  4403  0073                     strncmp@n:	
  4404                           ; 2 bytes @ 0x3
  4405                           
  4406                           
  4407                           ; 2 bytes @ 0x3
  4408  0073                     	ds	1
  4409  0074                     ??_I2C1_SetCallback:	
  4410  0074                     ??_SYSTEM_Initialize:	
  4411                           ; 1 bytes @ 0x4
  4412                           
  4413  0074                     ?_fputc:	
  4414                           ; 1 bytes @ 0x4
  4415                           
  4416  0074                     I2C1_SetBuffer@buffer:	
  4417                           ; 2 bytes @ 0x4
  4418                           
  4419  0074                     strlen@a:	
  4420                           ; 1 bytes @ 0x4
  4421                           
  4422  0074                     fputc@c:	
  4423                           ; 1 bytes @ 0x4
  4424                           
  4425                           
  4426                           ; 2 bytes @ 0x4
  4427  0074                     	ds	1
  4428  0075                     ??___fpclassifyf:	
  4429  0075                     ??_strncmp:	
  4430                           ; 1 bytes @ 0x5
  4431                           
  4432  0075                     ??___awdiv:	
  4433                           ; 1 bytes @ 0x5
  4434                           
  4435  0075                     ??___awmod:	
  4436                           ; 1 bytes @ 0x5
  4437                           
  4438  0075                     ??___flneg:	
  4439                           ; 1 bytes @ 0x5
  4440                           
  4441  0075                     ??___fltol:	
  4442                           ; 1 bytes @ 0x5
  4443                           
  4444  0075                     ??___xxtofl:	
  4445                           ; 1 bytes @ 0x5
  4446                           
  4447  0075                     I2C1_SetCallback@idx:	
  4448                           ; 1 bytes @ 0x5
  4449                           
  4450  0075                     strlen@s:	
  4451                           ; 1 bytes @ 0x5
  4452                           
  4453  0075                     strcpy@s:	
  4454                           ; 1 bytes @ 0x5
  4455                           
  4456  0075                     __Umul8_16@product:	
  4457                           ; 2 bytes @ 0x5
  4458                           
  4459  0075                     ___fleq@ff2:	
  4460                           ; 2 bytes @ 0x5
  4461                           
  4462  0075                     ___fladd@a:	
  4463                           ; 4 bytes @ 0x5
  4464                           
  4465                           
  4466                           ; 4 bytes @ 0x5
  4467  0075                     	ds	1
  4468  0076                     ?_I2C1_SetDataCompleteCallback:	
  4469  0076                     ?_I2C1_SetAddressNackCallback:	
  4470                           ; 1 bytes @ 0x6
  4471                           
  4472  0076                     ___awdiv@counter:	
  4473                           ; 1 bytes @ 0x6
  4474                           
  4475  0076                     ___awmod@counter:	
  4476                           ; 1 bytes @ 0x6
  4477                           
  4478  0076                     fputc@fp:	
  4479                           ; 1 bytes @ 0x6
  4480                           
  4481  0076                     strncmp@_l:	
  4482                           ; 1 bytes @ 0x6
  4483                           
  4484  0076                     I2C1_SetDataCompleteCallback@cb:	
  4485                           ; 1 bytes @ 0x6
  4486                           
  4487  0076                     I2C1_SetAddressNackCallback@cb:	
  4488                           ; 2 bytes @ 0x6
  4489                           
  4490                           
  4491                           ; 2 bytes @ 0x6
  4492  0076                     	ds	1
  4493  0077                     ??_fputc:	
  4494  0077                     ?_tolower:	
  4495                           ; 1 bytes @ 0x7
  4496                           
  4497  0077                     ___awdiv@sign:	
  4498                           ; 2 bytes @ 0x7
  4499                           
  4500  0077                     ___awmod@sign:	
  4501                           ; 1 bytes @ 0x7
  4502                           
  4503  0077                     strcpy@d:	
  4504                           ; 1 bytes @ 0x7
  4505                           
  4506  0077                     strncmp@r:	
  4507                           ; 1 bytes @ 0x7
  4508                           
  4509  0077                     tolower@c:	
  4510                           ; 2 bytes @ 0x7
  4511                           
  4512  0077                     __Umul8_16@word_mpld:	
  4513                           ; 2 bytes @ 0x7
  4514                           
  4515                           
  4516                           ; 2 bytes @ 0x7
  4517  0077                     	ds	1
  4518  0078                     I2C1_SetDataCompleteCallback@ptr:	
  4519  0078                     I2C1_SetAddressNackCallback@ptr:	
  4520                           ; 1 bytes @ 0x8
  4521                           
  4522  0078                     strcpy@dest:	
  4523                           ; 1 bytes @ 0x8
  4524                           
  4525  0078                     ___awdiv@quotient:	
  4526                           ; 1 bytes @ 0x8
  4527                           
  4528                           
  4529                           ; 2 bytes @ 0x8
  4530  0078                     	ds	1
  4531  0079                     ??_I2C1_SetDataCompleteCallback:	
  4532  0079                     ??_I2C1_SetAddressNackCallback:	
  4533                           ; 1 bytes @ 0x9
  4534                           
  4535  0079                     strncmp@l:	
  4536                           ; 1 bytes @ 0x9
  4537                           
  4538  0079                     __Umul8_16@multiplier:	
  4539                           ; 1 bytes @ 0x9
  4540                           
  4541  0079                     _tolower$1848:	
  4542                           ; 1 bytes @ 0x9
  4543                           
  4544                           
  4545                           ; 2 bytes @ 0x9
  4546  0079                     	ds	1
  4547  007A                     ?_rd1RegCompleteHandler:	
  4548  007A                     ?_rd2RegCompleteHandler:	
  4549                           ; 1 bytes @ 0xA
  4550                           
  4551  007A                     ?_wr1RegCompleteHandler:	
  4552                           ; 1 bytes @ 0xA
  4553                           
  4554  007A                     ?_wr2RegCompleteHandler:	
  4555                           ; 1 bytes @ 0xA
  4556                           
  4557  007A                     ?_rdBlkRegCompleteHandler:	
  4558                           ; 1 bytes @ 0xA
  4559                           
  4560  007A                     ?_I2C1_CallbackReturnStop:	
  4561                           ; 1 bytes @ 0xA
  4562                           
  4563  007A                     ?_I2C1_CallbackReturnReset:	
  4564                           ; 1 bytes @ 0xA
  4565                           
  4566  007A                     ??___flsub:	
  4567                           ; 1 bytes @ 0xA
  4568                           
  4569  007A                     rd1RegCompleteHandler@ptr:	
  4570                           ; 1 bytes @ 0xA
  4571                           
  4572  007A                     rd2RegCompleteHandler@ptr:	
  4573                           ; 1 bytes @ 0xA
  4574                           
  4575  007A                     wr1RegCompleteHandler@ptr:	
  4576                           ; 1 bytes @ 0xA
  4577                           
  4578  007A                     wr2RegCompleteHandler@ptr:	
  4579                           ; 1 bytes @ 0xA
  4580                           
  4581  007A                     rdBlkRegCompleteHandler@ptr:	
  4582                           ; 1 bytes @ 0xA
  4583                           
  4584  007A                     I2C1_CallbackReturnStop@funPtr:	
  4585                           ; 1 bytes @ 0xA
  4586                           
  4587  007A                     I2C1_CallbackReturnReset@funPtr:	
  4588                           ; 1 bytes @ 0xA
  4589                           
  4590  007A                     ___fltol@sign1:	
  4591                           ; 1 bytes @ 0xA
  4592                           
  4593                           
  4594                           ; 1 bytes @ 0xA
  4595  007A                     	ds	1
  4596  007B                     ??_rd1RegCompleteHandler:	
  4597  007B                     ??_rd2RegCompleteHandler:	
  4598                           ; 1 bytes @ 0xB
  4599                           
  4600  007B                     ??_wr1RegCompleteHandler:	
  4601                           ; 1 bytes @ 0xB
  4602                           
  4603  007B                     ??_wr2RegCompleteHandler:	
  4604                           ; 1 bytes @ 0xB
  4605                           
  4606  007B                     ??_rdBlkRegCompleteHandler:	
  4607                           ; 1 bytes @ 0xB
  4608                           
  4609  007B                     ??_I2C1_CallbackReturnStop:	
  4610                           ; 1 bytes @ 0xB
  4611                           
  4612  007B                     ??_I2C1_CallbackReturnReset:	
  4613                           ; 1 bytes @ 0xB
  4614                           
  4615  007B                     ??_I2C1_Poller:	
  4616                           ; 1 bytes @ 0xB
  4617                           
  4618  007B                     ??_I2C1_MasterOperation:	
  4619                           ; 1 bytes @ 0xB
  4620                           
  4621  007B                     ___fltol@exp1:	
  4622                           ; 1 bytes @ 0xB
  4623                           
  4624                           
  4625                           ; 1 bytes @ 0xB
  4626  007B                     	ds	1
  4627  007C                     ??_I2C1_MasterWrite:	
  4628                           
  4629                           	psect	cstackBANK0
  4630  0020                     __pcstackBANK0:	
  4631                           ; 1 bytes @ 0xC
  4632                           
  4633  0020                     ??_I2C1_DO_TX:	
  4634  0020                     ??_I2C1_DO_RX:	
  4635                           ; 1 bytes @ 0x0
  4636                           
  4637  0020                     ??_I2C1_DO_TX_EMPTY:	
  4638                           ; 1 bytes @ 0x0
  4639                           
  4640  0020                     ??_I2C1_DO_ADDRESS_NACK:	
  4641                           ; 1 bytes @ 0x0
  4642                           
  4643  0020                     ??_tolower:	
  4644                           ; 1 bytes @ 0x0
  4645                           
  4646  0020                     ??___fleq:	
  4647                           ; 1 bytes @ 0x0
  4648                           
  4649  0020                     ??___fladd:	
  4650                           ; 1 bytes @ 0x0
  4651                           
  4652  0020                     ?_fputs:	
  4653                           ; 1 bytes @ 0x0
  4654                           
  4655  0020                     ?___flmul:	
  4656                           ; 2 bytes @ 0x0
  4657                           
  4658  0020                     ___xxtofl@sign:	
  4659                           ; 4 bytes @ 0x0
  4660                           
  4661  0020                     fputs@fp:	
  4662                           ; 1 bytes @ 0x0
  4663                           
  4664  0020                     ___fpclassifyf@e:	
  4665                           ; 1 bytes @ 0x0
  4666                           
  4667  0020                     ___flmul@b:	
  4668                           ; 2 bytes @ 0x0
  4669                           
  4670                           
  4671                           ; 4 bytes @ 0x0
  4672  0020                     	ds	1
  4673  0021                     ??_fputs:	
  4674  0021                     ___xxtofl@exp:	
  4675                           ; 1 bytes @ 0x1
  4676                           
  4677                           
  4678                           ; 1 bytes @ 0x1
  4679  0021                     	ds	1
  4680  0022                     ___xxtofl@arg:	
  4681  0022                     ___fpclassifyf@u:	
  4682                           ; 4 bytes @ 0x2
  4683                           
  4684                           
  4685                           ; 4 bytes @ 0x2
  4686  0022                     	ds	1
  4687  0023                     ??_I2C1_MasterFsm:	
  4688                           
  4689                           ; 1 bytes @ 0x3
  4690  0023                     	ds	1
  4691  0024                     fputs@c:	
  4692  0024                     ___flmul@a:	
  4693                           ; 1 bytes @ 0x4
  4694                           
  4695                           
  4696                           ; 4 bytes @ 0x4
  4697  0024                     	ds	1
  4698  0025                     fputs@i:	
  4699                           
  4700                           ; 2 bytes @ 0x5
  4701  0025                     	ds	1
  4702  0026                     ?___fldiv:	
  4703  0026                     I2C1_MasterOperation@read:	
  4704                           ; 4 bytes @ 0x6
  4705                           
  4706  0026                     ___fldiv@a:	
  4707                           ; 1 bytes @ 0x6
  4708                           
  4709                           
  4710                           ; 4 bytes @ 0x6
  4711  0026                     	ds	1
  4712  0027                     I2C1_MasterOperation@returnValue:	
  4713  0027                     fputs@s:	
  4714                           ; 1 bytes @ 0x7
  4715                           
  4716                           
  4717                           ; 1 bytes @ 0x7
  4718  0027                     	ds	1
  4719  0028                     ?_I2C1_Read1ByteRegister:	
  4720  0028                     ??___flmul:	
  4721                           ; 1 bytes @ 0x8
  4722                           
  4723  0028                     ?_pad:	
  4724                           ; 1 bytes @ 0x8
  4725                           
  4726  0028                     I2C1_Read1ByteRegister@reg:	
  4727                           ; 2 bytes @ 0x8
  4728                           
  4729  0028                     pad@buf:	
  4730                           ; 1 bytes @ 0x8
  4731                           
  4732  0028                     ___fladd@signs:	
  4733                           ; 1 bytes @ 0x8
  4734                           
  4735                           
  4736                           ; 1 bytes @ 0x8
  4737  0028                     	ds	1
  4738  0029                     ??_I2C1_Read1ByteRegister:	
  4739  0029                     ___fladd@aexp:	
  4740                           ; 1 bytes @ 0x9
  4741                           
  4742  0029                     pad@p:	
  4743                           ; 1 bytes @ 0x9
  4744                           
  4745                           
  4746                           ; 2 bytes @ 0x9
  4747  0029                     	ds	1
  4748  002A                     I2C1_Read1ByteRegister@address:	
  4749  002A                     ___fladd@bexp:	
  4750                           ; 1 bytes @ 0xA
  4751                           
  4752  002A                     ___fldiv@b:	
  4753                           ; 1 bytes @ 0xA
  4754                           
  4755                           
  4756                           ; 4 bytes @ 0xA
  4757  002A                     	ds	1
  4758  002B                     ??_pad:	
  4759  002B                     I2C1_Read1ByteRegister@returnValue:	
  4760                           ; 1 bytes @ 0xB
  4761                           
  4762  002B                     ___fladd@grs:	
  4763                           ; 1 bytes @ 0xB
  4764                           
  4765                           
  4766                           ; 1 bytes @ 0xB
  4767  002B                     	ds	1
  4768  002C                     pad@i:	
  4769                           
  4770                           ; 2 bytes @ 0xC
  4771  002C                     	ds	1
  4772  002D                     ___flmul@sign:	
  4773                           
  4774                           ; 1 bytes @ 0xD
  4775  002D                     	ds	1
  4776  002E                     ??___fldiv:	
  4777  002E                     pad@w:	
  4778                           ; 1 bytes @ 0xE
  4779                           
  4780  002E                     ___flmul@grs:	
  4781                           ; 2 bytes @ 0xE
  4782                           
  4783                           
  4784                           ; 4 bytes @ 0xE
  4785  002E                     	ds	2
  4786  0030                     pad@fp:	
  4787                           
  4788                           ; 1 bytes @ 0x10
  4789  0030                     	ds	2
  4790  0032                     ___flmul@aexp:	
  4791                           
  4792                           ; 1 bytes @ 0x12
  4793  0032                     	ds	1
  4794  0033                     ___flmul@bexp:	
  4795  0033                     ___fldiv@rem:	
  4796                           ; 1 bytes @ 0x13
  4797                           
  4798                           
  4799                           ; 4 bytes @ 0x13
  4800  0033                     	ds	1
  4801  0034                     ___flmul@prod:	
  4802                           
  4803                           ; 4 bytes @ 0x14
  4804  0034                     	ds	3
  4805  0037                     ___fldiv@sign:	
  4806                           
  4807                           ; 1 bytes @ 0x17
  4808  0037                     	ds	1
  4809  0038                     ___fldiv@new_exp:	
  4810  0038                     ___flmul@temp:	
  4811                           ; 2 bytes @ 0x18
  4812                           
  4813                           
  4814                           ; 2 bytes @ 0x18
  4815  0038                     	ds	2
  4816  003A                     ?___flge:	
  4817  003A                     ?___flsub:	
  4818                           ; 1 bit 
  4819                           
  4820  003A                     ___flge@ff1:	
  4821                           ; 4 bytes @ 0x1A
  4822                           
  4823  003A                     ___flsub@a:	
  4824                           ; 4 bytes @ 0x1A
  4825                           
  4826  003A                     ___fldiv@grs:	
  4827                           ; 4 bytes @ 0x1A
  4828                           
  4829                           
  4830                           ; 4 bytes @ 0x1A
  4831  003A                     	ds	4
  4832  003E                     ___fldiv@bexp:	
  4833  003E                     ___flge@ff2:	
  4834                           ; 1 bytes @ 0x1E
  4835                           
  4836  003E                     ___flsub@b:	
  4837                           ; 4 bytes @ 0x1E
  4838                           
  4839                           
  4840                           ; 4 bytes @ 0x1E
  4841  003E                     	ds	1
  4842  003F                     ___fldiv@aexp:	
  4843                           
  4844                           ; 1 bytes @ 0x1F
  4845  003F                     	ds	1
  4846  0040                     ?_floorf:	
  4847  0040                     floorf@x:	
  4848                           ; 4 bytes @ 0x20
  4849                           
  4850                           
  4851                           ; 4 bytes @ 0x20
  4852  0040                     	ds	2
  4853  0042                     ??___flge:	
  4854                           
  4855                           ; 1 bytes @ 0x22
  4856  0042                     	ds	2
  4857  0044                     ??_floorf:	
  4858                           
  4859                           ; 1 bytes @ 0x24
  4860  0044                     	ds	6
  4861  004A                     floorf@m:	
  4862                           
  4863                           ; 4 bytes @ 0x2A
  4864  004A                     	ds	4
  4865  004E                     floorf@e:	
  4866                           
  4867                           ; 2 bytes @ 0x2E
  4868  004E                     	ds	2
  4869  0050                     floorf@u:	
  4870                           
  4871                           ; 4 bytes @ 0x30
  4872  0050                     	ds	4
  4873  0054                     ?_efgtoa:	
  4874  0054                     efgtoa@f:	
  4875                           ; 2 bytes @ 0x34
  4876                           
  4877                           
  4878                           ; 4 bytes @ 0x34
  4879  0054                     	ds	4
  4880  0058                     efgtoa@c:	
  4881                           
  4882                           ; 1 bytes @ 0x38
  4883  0058                     	ds	1
  4884  0059                     ??_efgtoa:	
  4885                           
  4886                           ; 1 bytes @ 0x39
  4887  0059                     	ds	4
  4888  005D                     ?_vfpfcnvrt:	
  4889  005D                     vfpfcnvrt@fmt:	
  4890                           ; 2 bytes @ 0x3D
  4891                           
  4892                           
  4893                           ; 1 bytes @ 0x3D
  4894  005D                     	ds	1
  4895  005E                     vfpfcnvrt@ap:	
  4896                           
  4897                           ; 1 bytes @ 0x3E
  4898  005E                     	ds	1
  4899  005F                     ??_vfpfcnvrt:	
  4900                           
  4901                           ; 1 bytes @ 0x3F
  4902  005F                     	ds	6
  4903  0065                     _vfpfcnvrt$1467:	
  4904                           
  4905                           ; 2 bytes @ 0x45
  4906  0065                     	ds	2
  4907  0067                     vfpfcnvrt@ct:	
  4908                           
  4909                           ; 3 bytes @ 0x47
  4910  0067                     	ds	3
  4911  006A                     vfpfcnvrt@f:	
  4912                           
  4913                           ; 4 bytes @ 0x4A
  4914  006A                     	ds	4
  4915  006E                     vfpfcnvrt@c:	
  4916                           
  4917                           ; 1 bytes @ 0x4E
  4918  006E                     	ds	1
  4919  006F                     vfpfcnvrt@fp:	
  4920                           
  4921                           ; 1 bytes @ 0x4F
  4922  006F                     	ds	1
  4923                           
  4924                           	psect	maintext
  4925  1300                     __pmaintext:	
  4926 ;;
  4927 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4928 ;;
  4929 ;; *************** function _main *****************
  4930 ;; Defined at:
  4931 ;;		line 148 in file "main.c"
  4932 ;; Parameters:    Size  Location     Type
  4933 ;;		None
  4934 ;; Auto vars:     Size  Location     Type
  4935 ;;  dummy_data     23    9[BANK2 ] unsigned char [23]
  4936 ;;  hdr_trl         4   32[BANK2 ] unsigned char [4]
  4937 ;;  i               1    0        unsigned char 
  4938 ;;  n               1    0        unsigned char 
  4939 ;; Return value:  Size  Location     Type
  4940 ;;                  1    wreg      void 
  4941 ;; Registers used:
  4942 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4943 ;; Tracked objects:
  4944 ;;		On entry : B1F/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4949 ;;      Locals:         0       0       0      29       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4950 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4951 ;;      Totals:         0       0       2      29       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4952 ;;Total ram usage:       31 bytes
  4953 ;; Hardware stack levels required when called:   14
  4954 ;; This function calls:
  4955 ;;		_SYSTEM_Initialize
  4956 ;;		_readPressureSensor
  4957 ;;		_setZero
  4958 ;; This function is called by:
  4959 ;;		Startup code after reset
  4960 ;; This function uses a non-reentrant model
  4961 ;;
  4962                           
  4963                           
  4964                           ;psect for function _main
  4965  1300                     _main:	
  4966                           
  4967                           ;main.c: 150:     char hdr_trl[] = {0xFF, 0x00, 0xFF, 0x00};
  4968                           
  4969                           ;incstack = 0
  4970                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4971  1300  0022               	movlb	2	; select bank2
  4972  1301  086D               	movf	(main@F7270+3)^(0+256),w
  4973  1302  00C3               	movwf	(main@hdr_trl+3)^(0+256)
  4974  1303  086C               	movf	(main@F7270+2)^(0+256),w
  4975  1304  00C2               	movwf	(main@hdr_trl+2)^(0+256)
  4976  1305  086B               	movf	(main@F7270+1)^(0+256),w
  4977  1306  00C1               	movwf	(main@hdr_trl+1)^(0+256)
  4978  1307  086A               	movf	main@F7270^(0+256),w
  4979  1308  00C0               	movwf	main@hdr_trl^(0+256)
  4980                           
  4981                           ;main.c: 152:     SYSTEM_Initialize();
  4982  1309  319F  27E8  3193   	fcall	_SYSTEM_Initialize
  4983                           
  4984                           ;main.c: 153:     setZero();
  4985  130C  319E  2644  3193   	fcall	_setZero
  4986                           
  4987                           ;main.c: 154:     pressure = 1013.134;
  4988  130F  3044               	movlw	68
  4989  1310  0023               	movlb	3	; select bank3
  4990  1311  00D4               	movwf	(_pressure+3)^(0+384)
  4991  1312  307D               	movlw	125
  4992  1313  00D3               	movwf	(_pressure+2)^(0+384)
  4993  1314  3048               	movlw	72
  4994  1315  00D2               	movwf	(_pressure+1)^(0+384)
  4995  1316  3093               	movlw	147
  4996  1317  00D1               	movwf	_pressure^(0+384)
  4997                           
  4998                           ;main.c: 155:     temperature = 24.76;
  4999  1318  3041               	movlw	65
  5000  1319  00D0               	movwf	(_temperature+3)^(0+384)
  5001  131A  30C6               	movlw	198
  5002  131B  00CF               	movwf	(_temperature+2)^(0+384)
  5003  131C  3014               	movlw	20
  5004  131D  00CE               	movwf	(_temperature+1)^(0+384)
  5005  131E  307B               	movlw	123
  5006  131F  00CD               	movwf	_temperature^(0+384)
  5007                           
  5008                           ;main.c: 160:     (INTCONbits.GIE = 1);
  5009  1320  178B               	bsf	11,7	;volatile
  5010                           
  5011                           ;main.c: 163:     (INTCONbits.PEIE = 1);
  5012  1321  170B               	bsf	11,6	;volatile
  5013                           
  5014                           ;main.c: 170:     char dummy_data[] = {0xFF, 0x00, 0xFF, 0x00, 0x16, 'H', 'E', 'L', 'L',
      +                           'O', ' ', 'S', 'E', 'N', 'S', 'O', 'R', 'S', 0x17, 0xFF, 0x00, 0xFF, 0x00};
  5015  1322  30A0               	movlw	low main@F7272
  5016  1323  0086               	movwf	6
  5017  1324  3002               	movlw	high main@F7272
  5018  1325  0087               	movwf	7
  5019  1326  3029               	movlw	low main@dummy_data
  5020  1327  0084               	movwf	4
  5021  1328  3001               	movlw	high main@dummy_data
  5022  1329  0085               	movwf	5
  5023  132A  3017               	movlw	23
  5024  132B  0021               	movlb	1	; select bank1
  5025  132C  00EB               	movwf	??_main^(0+128)
  5026  132D                     u7370:	
  5027  132D  0016               	moviw fsr1++
  5028  132E  001A               	movwi fsr0++
  5029  132F  0BEB               	decfsz	??_main^(0+128),f
  5030  1330  2B2D               	goto	u7370
  5031  1331                     l6739:	
  5032                           
  5033                           ;main.c: 175:         readPressureSensor();
  5034  1331  3196  26AA  3193   	fcall	_readPressureSensor
  5035                           
  5036                           ;main.c: 176:         _delay((unsigned long)((1000)*(32000000/4000.0)));
  5037  1334  3029               	movlw	41
  5038  1335  0021               	movlb	1	; select bank1
  5039  1336  00EC               	movwf	(??_main^(0+128)+1)
  5040  1337  3096               	movlw	150
  5041  1338  00EB               	movwf	??_main^(0+128)
  5042  1339  307F               	movlw	127
  5043  133A                     u7387:	
  5044  133A  0B89               	decfsz	9,f
  5045  133B  2B3A               	goto	u7387
  5046  133C  0BEB               	decfsz	??_main^(0+128),f
  5047  133D  2B3A               	goto	u7387
  5048  133E  0BEC               	decfsz	(??_main^(0+128)+1),f
  5049  133F  2B3A               	goto	u7387
  5050  1340  2B31               	goto	l6739
  5051  1341                     __end_of_main:	
  5052                           
  5053                           	psect	text1
  5054  1E44                     __ptext1:	
  5055 ;; *************** function _setZero *****************
  5056 ;; Defined at:
  5057 ;;		line 85 in file "main.c"
  5058 ;; Parameters:    Size  Location     Type
  5059 ;;		None
  5060 ;; Auto vars:     Size  Location     Type
  5061 ;;		None
  5062 ;; Return value:  Size  Location     Type
  5063 ;;                  1    wreg      void 
  5064 ;; Registers used:
  5065 ;;		status,2
  5066 ;; Tracked objects:
  5067 ;;		On entry : 0/0
  5068 ;;		On exit  : 0/0
  5069 ;;		Unchanged: 0/0
  5070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5075 ;;Total ram usage:        0 bytes
  5076 ;; Hardware stack levels used:    1
  5077 ;; Hardware stack levels required when called:    4
  5078 ;; This function calls:
  5079 ;;		Nothing
  5080 ;; This function is called by:
  5081 ;;		_main
  5082 ;; This function uses a non-reentrant model
  5083 ;;
  5084                           
  5085                           
  5086                           ;psect for function _setZero
  5087  1E44                     _setZero:	
  5088                           
  5089                           ;main.c: 87:     PWM5CON = 0x00;
  5090                           
  5091                           ;incstack = 0
  5092                           ; Regs used in _setZero: [status,2]
  5093  1E44  002C               	movlb	12	; select bank12
  5094  1E45  0199               	clrf	25	;volatile
  5095  1E46  0008               	return
  5096  1E47                     __end_of_setZero:	
  5097                           
  5098                           	psect	text2
  5099  16AA                     __ptext2:	
  5100 ;; *************** function _readPressureSensor *****************
  5101 ;; Defined at:
  5102 ;;		line 108 in file "main.c"
  5103 ;; Parameters:    Size  Location     Type
  5104 ;;		None
  5105 ;; Auto vars:     Size  Location     Type
  5106 ;;		None
  5107 ;; Return value:  Size  Location     Type
  5108 ;;                  1    wreg      void 
  5109 ;; Registers used:
  5110 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5111 ;; Tracked objects:
  5112 ;;		On entry : 0/0
  5113 ;;		On exit  : 0/0
  5114 ;;		Unchanged: 0/0
  5115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5118 ;;      Temps:          0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5119 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5120 ;;Total ram usage:        9 bytes
  5121 ;; Hardware stack levels used:    1
  5122 ;; Hardware stack levels required when called:   13
  5123 ;; This function calls:
  5124 ;;		_I2C1_Read1ByteRegister
  5125 ;;		___fldiv
  5126 ;;		___xxtofl
  5127 ;;		_printf
  5128 ;; This function is called by:
  5129 ;;		_main
  5130 ;; This function uses a non-reentrant model
  5131 ;;
  5132                           
  5133                           
  5134                           ;psect for function _readPressureSensor
  5135  16AA                     _readPressureSensor:	
  5136                           
  5137                           ;main.c: 111:     raw_pressure = 0;
  5138                           
  5139                           ;incstack = 0
  5140                           ; Regs used in _readPressureSensor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5141  16AA  3000               	movlw	0
  5142  16AB  0022               	movlb	2	; select bank2
  5143  16AC  00E9               	movwf	(_raw_pressure+3)^(0+256)
  5144  16AD  3000               	movlw	0
  5145  16AE  00E8               	movwf	(_raw_pressure+2)^(0+256)
  5146  16AF  3000               	movlw	0
  5147  16B0  00E7               	movwf	(_raw_pressure+1)^(0+256)
  5148  16B1  3000               	movlw	0
  5149  16B2  00E6               	movwf	_raw_pressure^(0+256)
  5150                           
  5151                           ;main.c: 112:     raw_pressure = I2C1_Read1ByteRegister(0x5D, 0x2A);
  5152  16B3  302A               	movlw	42
  5153  16B4  00A0               	movwf	??_readPressureSensor^(0+256)
  5154  16B5  0820               	movf	??_readPressureSensor^(0+256),w
  5155  16B6  0020               	movlb	0	; select bank0
  5156  16B7  00A8               	movwf	I2C1_Read1ByteRegister@reg
  5157  16B8  305D               	movlw	93
  5158  16B9  3191  21F8  3196   	fcall	_I2C1_Read1ByteRegister
  5159  16BC  0022               	movlb	2	; select bank2
  5160  16BD  00A1               	movwf	(??_readPressureSensor+1)^(0+256)
  5161  16BE  01A2               	clrf	((??_readPressureSensor+1)^(0+256)+1)
  5162  16BF  01A3               	clrf	((??_readPressureSensor+1)^(0+256)+2)
  5163  16C0  01A4               	clrf	((??_readPressureSensor+1)^(0+256)+3)
  5164  16C1  0824               	movf	(??_readPressureSensor+4)^(0+256),w
  5165  16C2  00E9               	movwf	(_raw_pressure+3)^(0+256)
  5166  16C3  0823               	movf	(??_readPressureSensor+3)^(0+256),w
  5167  16C4  00E8               	movwf	(_raw_pressure+2)^(0+256)
  5168  16C5  0822               	movf	(??_readPressureSensor+2)^(0+256),w
  5169  16C6  00E7               	movwf	(_raw_pressure+1)^(0+256)
  5170  16C7  0821               	movf	(??_readPressureSensor+1)^(0+256),w
  5171  16C8  00E6               	movwf	_raw_pressure^(0+256)
  5172                           
  5173                           ;main.c: 113:     raw_pressure = (raw_pressure << 8) + I2C1_Read1ByteRegister(0x5D, 0x29
      +                          );
  5174  16C9  3029               	movlw	41
  5175  16CA  00A0               	movwf	??_readPressureSensor^(0+256)
  5176  16CB  0820               	movf	??_readPressureSensor^(0+256),w
  5177  16CC  0020               	movlb	0	; select bank0
  5178  16CD  00A8               	movwf	I2C1_Read1ByteRegister@reg
  5179  16CE  305D               	movlw	93
  5180  16CF  3191  21F8  3196   	fcall	_I2C1_Read1ByteRegister
  5181  16D2  0022               	movlb	2	; select bank2
  5182  16D3  00A1               	movwf	(??_readPressureSensor+1)^(0+256)
  5183  16D4  01A2               	clrf	((??_readPressureSensor+1)^(0+256)+1)
  5184  16D5  01A3               	clrf	((??_readPressureSensor+1)^(0+256)+2)
  5185  16D6  01A4               	clrf	((??_readPressureSensor+1)^(0+256)+3)
  5186  16D7  0866               	movf	_raw_pressure^(0+256),w
  5187  16D8  00A5               	movwf	(??_readPressureSensor+5)^(0+256)
  5188  16D9  0867               	movf	(_raw_pressure+1)^(0+256),w
  5189  16DA  00A6               	movwf	((??_readPressureSensor+5)^(0+256)+1)
  5190  16DB  0868               	movf	(_raw_pressure+2)^(0+256),w
  5191  16DC  00A7               	movwf	((??_readPressureSensor+5)^(0+256)+2)
  5192  16DD  0869               	movf	(_raw_pressure+3)^(0+256),w
  5193  16DE  00A8               	movwf	((??_readPressureSensor+5)^(0+256)+3)
  5194  16DF  3008               	movlw	8
  5195  16E0                     u7345:	
  5196  16E0  35A5               	lslf	(??_readPressureSensor+5)^(0+256),f
  5197  16E1  0DA6               	rlf	((??_readPressureSensor+5)^(0+256)+1),f
  5198  16E2  0DA7               	rlf	((??_readPressureSensor+5)^(0+256)+2),f
  5199  16E3  0DA8               	rlf	((??_readPressureSensor+5)^(0+256)+3),f
  5200  16E4  0B89               	decfsz	9,f
  5201  16E5  2EE0               	goto	u7345
  5202  16E6  0825               	movf	(??_readPressureSensor+5)^(0+256),w
  5203  16E7  07A1               	addwf	(??_readPressureSensor+1)^(0+256),f
  5204  16E8  0826               	movf	(??_readPressureSensor+6)^(0+256),w
  5205  16E9  3DA2               	addwfc	((??_readPressureSensor+1)^(0+256)+1),f
  5206  16EA  0827               	movf	(??_readPressureSensor+7)^(0+256),w
  5207  16EB  3DA3               	addwfc	((??_readPressureSensor+1)^(0+256)+2),f
  5208  16EC  0828               	movf	(??_readPressureSensor+8)^(0+256),w
  5209  16ED  3DA4               	addwfc	((??_readPressureSensor+1)^(0+256)+3),f
  5210  16EE  0824               	movf	(??_readPressureSensor+4)^(0+256),w
  5211  16EF  00E9               	movwf	(_raw_pressure+3)^(0+256)
  5212  16F0  0823               	movf	(??_readPressureSensor+3)^(0+256),w
  5213  16F1  00E8               	movwf	(_raw_pressure+2)^(0+256)
  5214  16F2  0822               	movf	(??_readPressureSensor+2)^(0+256),w
  5215  16F3  00E7               	movwf	(_raw_pressure+1)^(0+256)
  5216  16F4  0821               	movf	(??_readPressureSensor+1)^(0+256),w
  5217  16F5  00E6               	movwf	_raw_pressure^(0+256)
  5218                           
  5219                           ;main.c: 114:     raw_pressure = (raw_pressure << 8) + I2C1_Read1ByteRegister(0x5D, 0x28
      +                          );
  5220  16F6  3028               	movlw	40
  5221  16F7  00A0               	movwf	??_readPressureSensor^(0+256)
  5222  16F8  0820               	movf	??_readPressureSensor^(0+256),w
  5223  16F9  0020               	movlb	0	; select bank0
  5224  16FA  00A8               	movwf	I2C1_Read1ByteRegister@reg
  5225  16FB  305D               	movlw	93
  5226  16FC  3191  21F8  3196   	fcall	_I2C1_Read1ByteRegister
  5227  16FF  0022               	movlb	2	; select bank2
  5228  1700  00A1               	movwf	(??_readPressureSensor+1)^(0+256)
  5229  1701  01A2               	clrf	((??_readPressureSensor+1)^(0+256)+1)
  5230  1702  01A3               	clrf	((??_readPressureSensor+1)^(0+256)+2)
  5231  1703  01A4               	clrf	((??_readPressureSensor+1)^(0+256)+3)
  5232  1704  0866               	movf	_raw_pressure^(0+256),w
  5233  1705  00A5               	movwf	(??_readPressureSensor+5)^(0+256)
  5234  1706  0867               	movf	(_raw_pressure+1)^(0+256),w
  5235  1707  00A6               	movwf	((??_readPressureSensor+5)^(0+256)+1)
  5236  1708  0868               	movf	(_raw_pressure+2)^(0+256),w
  5237  1709  00A7               	movwf	((??_readPressureSensor+5)^(0+256)+2)
  5238  170A  0869               	movf	(_raw_pressure+3)^(0+256),w
  5239  170B  00A8               	movwf	((??_readPressureSensor+5)^(0+256)+3)
  5240  170C  3008               	movlw	8
  5241  170D                     u7355:	
  5242  170D  35A5               	lslf	(??_readPressureSensor+5)^(0+256),f
  5243  170E  0DA6               	rlf	((??_readPressureSensor+5)^(0+256)+1),f
  5244  170F  0DA7               	rlf	((??_readPressureSensor+5)^(0+256)+2),f
  5245  1710  0DA8               	rlf	((??_readPressureSensor+5)^(0+256)+3),f
  5246  1711  0B89               	decfsz	9,f
  5247  1712  2F0D               	goto	u7355
  5248  1713  0825               	movf	(??_readPressureSensor+5)^(0+256),w
  5249  1714  07A1               	addwf	(??_readPressureSensor+1)^(0+256),f
  5250  1715  0826               	movf	(??_readPressureSensor+6)^(0+256),w
  5251  1716  3DA2               	addwfc	((??_readPressureSensor+1)^(0+256)+1),f
  5252  1717  0827               	movf	(??_readPressureSensor+7)^(0+256),w
  5253  1718  3DA3               	addwfc	((??_readPressureSensor+1)^(0+256)+2),f
  5254  1719  0828               	movf	(??_readPressureSensor+8)^(0+256),w
  5255  171A  3DA4               	addwfc	((??_readPressureSensor+1)^(0+256)+3),f
  5256  171B  0824               	movf	(??_readPressureSensor+4)^(0+256),w
  5257  171C  00E9               	movwf	(_raw_pressure+3)^(0+256)
  5258  171D  0823               	movf	(??_readPressureSensor+3)^(0+256),w
  5259  171E  00E8               	movwf	(_raw_pressure+2)^(0+256)
  5260  171F  0822               	movf	(??_readPressureSensor+2)^(0+256),w
  5261  1720  00E7               	movwf	(_raw_pressure+1)^(0+256)
  5262  1721  0821               	movf	(??_readPressureSensor+1)^(0+256),w
  5263  1722  00E6               	movwf	_raw_pressure^(0+256)
  5264                           
  5265                           ;main.c: 116:     if (raw_pressure & 0x800000) {
  5266  1723  1FE8               	btfss	(_raw_pressure+2)^(0+256),7
  5267  1724  2F39               	goto	l6705
  5268                           
  5269                           ;main.c: 117:         raw_pressure = (0xff000000 | raw_pressure);
  5270  1725  3000               	movlw	0
  5271  1726  0466               	iorwf	_raw_pressure^(0+256),w
  5272  1727  00A0               	movwf	??_readPressureSensor^(0+256)
  5273  1728  3000               	movlw	0
  5274  1729  0467               	iorwf	(_raw_pressure+1)^(0+256),w
  5275  172A  00A1               	movwf	(??_readPressureSensor^(0+256)+1)
  5276  172B  3000               	movlw	0
  5277  172C  0468               	iorwf	(_raw_pressure+2)^(0+256),w
  5278  172D  00A2               	movwf	(??_readPressureSensor^(0+256)+2)
  5279  172E  30FF               	movlw	255
  5280  172F  0469               	iorwf	(_raw_pressure+3)^(0+256),w
  5281  1730  00A3               	movwf	(??_readPressureSensor^(0+256)+3)
  5282  1731  0823               	movf	(??_readPressureSensor+3)^(0+256),w
  5283  1732  00E9               	movwf	(_raw_pressure+3)^(0+256)
  5284  1733  0822               	movf	(??_readPressureSensor+2)^(0+256),w
  5285  1734  00E8               	movwf	(_raw_pressure+2)^(0+256)
  5286  1735  0821               	movf	(??_readPressureSensor+1)^(0+256),w
  5287  1736  00E7               	movwf	(_raw_pressure+1)^(0+256)
  5288  1737  0820               	movf	??_readPressureSensor^(0+256),w
  5289  1738  00E6               	movwf	_raw_pressure^(0+256)
  5290  1739                     l6705:	
  5291                           
  5292                           ;main.c: 119:     pressure = (float) (raw_pressure) / 4096.0;
  5293  1739  3045               	movlw	69
  5294  173A  0020               	movlb	0	; select bank0
  5295  173B  00A9               	movwf	___fldiv@a+3
  5296  173C  3080               	movlw	128
  5297  173D  00A8               	movwf	___fldiv@a+2
  5298  173E  3000               	movlw	0
  5299  173F  00A7               	movwf	___fldiv@a+1
  5300  1740  3000               	movlw	0
  5301  1741  00A6               	movwf	___fldiv@a
  5302  1742  0022               	movlb	2	; select bank2
  5303  1743  0869               	movf	(_raw_pressure+3)^(0+256),w
  5304  1744  00F4               	movwf	___xxtofl@val+3
  5305  1745  0868               	movf	(_raw_pressure+2)^(0+256),w
  5306  1746  00F3               	movwf	___xxtofl@val+2
  5307  1747  0867               	movf	(_raw_pressure+1)^(0+256),w
  5308  1748  00F2               	movwf	___xxtofl@val+1
  5309  1749  0866               	movf	_raw_pressure^(0+256),w
  5310  174A  00F1               	movwf	___xxtofl@val
  5311  174B  3000               	movlw	0
  5312  174C  3188  2049  3196   	fcall	___xxtofl
  5313  174F  0874               	movf	?___xxtofl+3,w
  5314  1750  0020               	movlb	0	; select bank0
  5315  1751  00AD               	movwf	___fldiv@b+3
  5316  1752  0873               	movf	?___xxtofl+2,w
  5317  1753  00AC               	movwf	___fldiv@b+2
  5318  1754  0872               	movf	?___xxtofl+1,w
  5319  1755  00AB               	movwf	___fldiv@b+1
  5320  1756  0871               	movf	?___xxtofl,w
  5321  1757  00AA               	movwf	___fldiv@b
  5322  1758  3188  20DF  3196   	fcall	___fldiv
  5323  175B  0020               	movlb	0	; select bank0
  5324  175C  0829               	movf	?___fldiv+3,w
  5325  175D  0023               	movlb	3	; select bank3
  5326  175E  00D4               	movwf	(_pressure+3)^(0+384)
  5327  175F  0020               	movlb	0	; select bank0
  5328  1760  0828               	movf	?___fldiv+2,w
  5329  1761  0023               	movlb	3	; select bank3
  5330  1762  00D3               	movwf	(_pressure+2)^(0+384)
  5331  1763  0020               	movlb	0	; select bank0
  5332  1764  0827               	movf	?___fldiv+1,w
  5333  1765  0023               	movlb	3	; select bank3
  5334  1766  00D2               	movwf	(_pressure+1)^(0+384)
  5335  1767  0020               	movlb	0	; select bank0
  5336  1768  0826               	movf	?___fldiv,w
  5337  1769  0023               	movlb	3	; select bank3
  5338  176A  00D1               	movwf	_pressure^(0+384)
  5339                           
  5340                           ;main.c: 120:     _delay((unsigned long)((500)*(32000000/4000.0)));
  5341  176B  3015               	movlw	21
  5342  176C  0022               	movlb	2	; select bank2
  5343  176D  00A1               	movwf	(??_readPressureSensor^(0+256)+1)
  5344  176E  304B               	movlw	75
  5345  176F  00A0               	movwf	??_readPressureSensor^(0+256)
  5346  1770  30BE               	movlw	190
  5347  1771                     u7397:	
  5348  1771  0B89               	decfsz	9,f
  5349  1772  2F71               	goto	u7397
  5350  1773  0BA0               	decfsz	??_readPressureSensor^(0+256),f
  5351  1774  2F71               	goto	u7397
  5352  1775  0BA1               	decfsz	(??_readPressureSensor^(0+256)+1),f
  5353  1776  2F71               	goto	u7397
  5354  1777  0000               	nop
  5355                           
  5356                           ;main.c: 123:     raw_temperature = 0;
  5357  1778  0022               	movlb	2	; select bank2
  5358  1779  01DC               	clrf	_raw_temperature^(0+256)
  5359  177A  01DD               	clrf	(_raw_temperature+1)^(0+256)
  5360                           
  5361                           ;main.c: 129:     raw_temperature = I2C1_Read1ByteRegister(0x5D, 0x2C);
  5362  177B  302C               	movlw	44
  5363  177C  00A0               	movwf	??_readPressureSensor^(0+256)
  5364  177D  0820               	movf	??_readPressureSensor^(0+256),w
  5365  177E  0020               	movlb	0	; select bank0
  5366  177F  00A8               	movwf	I2C1_Read1ByteRegister@reg
  5367  1780  305D               	movlw	93
  5368  1781  3191  21F8  3196   	fcall	_I2C1_Read1ByteRegister
  5369  1784  0022               	movlb	2	; select bank2
  5370  1785  00A1               	movwf	(??_readPressureSensor+1)^(0+256)
  5371  1786  01A2               	clrf	((??_readPressureSensor+1)^(0+256)+1)
  5372  1787  0821               	movf	(??_readPressureSensor+1)^(0+256),w
  5373  1788  00DC               	movwf	_raw_temperature^(0+256)
  5374  1789  0822               	movf	(??_readPressureSensor+2)^(0+256),w
  5375  178A  00DD               	movwf	(_raw_temperature+1)^(0+256)
  5376                           
  5377                           ;main.c: 130:     raw_temperature = (raw_temperature << 8) + I2C1_Read1ByteRegister(0x5D
      +                          , 0x2B);
  5378  178B  302B               	movlw	43
  5379  178C  00A0               	movwf	??_readPressureSensor^(0+256)
  5380  178D  0820               	movf	??_readPressureSensor^(0+256),w
  5381  178E  0020               	movlb	0	; select bank0
  5382  178F  00A8               	movwf	I2C1_Read1ByteRegister@reg
  5383  1790  305D               	movlw	93
  5384  1791  3191  21F8  3196   	fcall	_I2C1_Read1ByteRegister
  5385  1794  0022               	movlb	2	; select bank2
  5386  1795  00A1               	movwf	(??_readPressureSensor+1)^(0+256)
  5387  1796  01A2               	clrf	((??_readPressureSensor+1)^(0+256)+1)
  5388  1797  085C               	movf	_raw_temperature^(0+256),w
  5389  1798  00A4               	movwf	((??_readPressureSensor+3)^(0+256)+1)
  5390  1799  01A3               	clrf	(??_readPressureSensor+3)^(0+256)
  5391  179A  0821               	movf	(??_readPressureSensor+1)^(0+256),w
  5392  179B  0723               	addwf	(??_readPressureSensor+3)^(0+256),w
  5393  179C  00DC               	movwf	_raw_temperature^(0+256)
  5394  179D  0822               	movf	(??_readPressureSensor+2)^(0+256),w
  5395  179E  3D24               	addwfc	(??_readPressureSensor+4)^(0+256),w
  5396  179F  00DD               	movwf	(_raw_temperature+1)^(0+256)
  5397                           
  5398                           ;main.c: 131:     temperature = (float) (raw_temperature) / 100.00;
  5399  17A0  3042               	movlw	66
  5400  17A1  0020               	movlb	0	; select bank0
  5401  17A2  00A9               	movwf	___fldiv@a+3
  5402  17A3  30C8               	movlw	200
  5403  17A4  00A8               	movwf	___fldiv@a+2
  5404  17A5  3000               	movlw	0
  5405  17A6  00A7               	movwf	___fldiv@a+1
  5406  17A7  3000               	movlw	0
  5407  17A8  00A6               	movwf	___fldiv@a
  5408  17A9  0022               	movlb	2	; select bank2
  5409  17AA  085C               	movf	_raw_temperature^(0+256),w
  5410  17AB  00F1               	movwf	___xxtofl@val
  5411  17AC  085D               	movf	(_raw_temperature+1)^(0+256),w
  5412  17AD  00F2               	movwf	___xxtofl@val+1
  5413  17AE  01F3               	clrf	___xxtofl@val+2
  5414  17AF  01F4               	clrf	___xxtofl@val+3
  5415  17B0  3000               	movlw	0
  5416  17B1  3188  2049  3196   	fcall	___xxtofl
  5417  17B4  0874               	movf	?___xxtofl+3,w
  5418  17B5  0020               	movlb	0	; select bank0
  5419  17B6  00AD               	movwf	___fldiv@b+3
  5420  17B7  0873               	movf	?___xxtofl+2,w
  5421  17B8  00AC               	movwf	___fldiv@b+2
  5422  17B9  0872               	movf	?___xxtofl+1,w
  5423  17BA  00AB               	movwf	___fldiv@b+1
  5424  17BB  0871               	movf	?___xxtofl,w
  5425  17BC  00AA               	movwf	___fldiv@b
  5426  17BD  3188  20DF  3196   	fcall	___fldiv
  5427  17C0  0020               	movlb	0	; select bank0
  5428  17C1  0829               	movf	?___fldiv+3,w
  5429  17C2  0023               	movlb	3	; select bank3
  5430  17C3  00D0               	movwf	(_temperature+3)^(0+384)
  5431  17C4  0020               	movlb	0	; select bank0
  5432  17C5  0828               	movf	?___fldiv+2,w
  5433  17C6  0023               	movlb	3	; select bank3
  5434  17C7  00CF               	movwf	(_temperature+2)^(0+384)
  5435  17C8  0020               	movlb	0	; select bank0
  5436  17C9  0827               	movf	?___fldiv+1,w
  5437  17CA  0023               	movlb	3	; select bank3
  5438  17CB  00CE               	movwf	(_temperature+1)^(0+384)
  5439  17CC  0020               	movlb	0	; select bank0
  5440  17CD  0826               	movf	?___fldiv,w
  5441  17CE  0023               	movlb	3	; select bank3
  5442  17CF  00CD               	movwf	_temperature^(0+384)
  5443                           
  5444                           ;main.c: 133:     printf("Pressure : %f\n", pressure);
  5445  17D0  3012               	movlw	low (STR_1| (0+32768))
  5446  17D1  0021               	movlb	1	; select bank1
  5447  17D2  00E1               	movwf	printf@fmt^(0+128)
  5448  17D3  30A0               	movlw	high (STR_1| (0+32768))
  5449  17D4  00E2               	movwf	(printf@fmt^(0+128)+1)
  5450  17D5  0023               	movlb	3	; select bank3
  5451  17D6  0854               	movf	(_pressure+3)^(0+384),w
  5452  17D7  0021               	movlb	1	; select bank1
  5453  17D8  00E6               	movwf	((?_printf+3)^(0+128)+2)
  5454  17D9  0023               	movlb	3	; select bank3
  5455  17DA  0853               	movf	(_pressure+2)^(0+384),w
  5456  17DB  0021               	movlb	1	; select bank1
  5457  17DC  00E5               	movwf	((?_printf+2)^(0+128)+2)
  5458  17DD  0023               	movlb	3	; select bank3
  5459  17DE  0852               	movf	(_pressure+1)^(0+384),w
  5460  17DF  0021               	movlb	1	; select bank1
  5461  17E0  00E4               	movwf	((?_printf+1)^(0+128)+2)
  5462  17E1  0023               	movlb	3	; select bank3
  5463  17E2  0851               	movf	_pressure^(0+384),w
  5464  17E3  0021               	movlb	1	; select bank1
  5465  17E4  00E3               	movwf	(?_printf^(0+128)+2)
  5466  17E5  319F  277A  3196   	fcall	_printf
  5467                           
  5468                           ;main.c: 134:     printf("Temperature : %f\n", temperature);
  5469  17E8  3000               	movlw	low (STR_2| (0+32768))
  5470  17E9  0021               	movlb	1	; select bank1
  5471  17EA  00E1               	movwf	printf@fmt^(0+128)
  5472  17EB  30A0               	movlw	high (STR_2| (0+32768))
  5473  17EC  00E2               	movwf	(printf@fmt^(0+128)+1)
  5474  17ED  0023               	movlb	3	; select bank3
  5475  17EE  0850               	movf	(_temperature+3)^(0+384),w
  5476  17EF  0021               	movlb	1	; select bank1
  5477  17F0  00E6               	movwf	((?_printf+3)^(0+128)+2)
  5478  17F1  0023               	movlb	3	; select bank3
  5479  17F2  084F               	movf	(_temperature+2)^(0+384),w
  5480  17F3  0021               	movlb	1	; select bank1
  5481  17F4  00E5               	movwf	((?_printf+2)^(0+128)+2)
  5482  17F5  0023               	movlb	3	; select bank3
  5483  17F6  084E               	movf	(_temperature+1)^(0+384),w
  5484  17F7  0021               	movlb	1	; select bank1
  5485  17F8  00E4               	movwf	((?_printf+1)^(0+128)+2)
  5486  17F9  0023               	movlb	3	; select bank3
  5487  17FA  084D               	movf	_temperature^(0+384),w
  5488  17FB  0021               	movlb	1	; select bank1
  5489  17FC  00E3               	movwf	(?_printf^(0+128)+2)
  5490  17FD  319F  277A         	fcall	_printf
  5491  17FF  0008               	return
  5492  1800                     __end_of_readPressureSensor:	
  5493                           
  5494                           	psect	text3
  5495  1F7A                     __ptext3:	
  5496 ;; *************** function _printf *****************
  5497 ;; Defined at:
  5498 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  5499 ;; Parameters:    Size  Location     Type
  5500 ;;  fmt             2   65[BANK1 ] PTR const unsigned char 
  5501 ;;		 -> STR_2(18), STR_1(15), 
  5502 ;; Auto vars:     Size  Location     Type
  5503 ;;  ret             2    0        int 
  5504 ;;  ap              1   74[BANK1 ] PTR void [1]
  5505 ;;		 -> ?_printf(2), 
  5506 ;; Return value:  Size  Location     Type
  5507 ;;                  2   65[BANK1 ] int 
  5508 ;; Registers used:
  5509 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5510 ;; Tracked objects:
  5511 ;;		On entry : 0/0
  5512 ;;		On exit  : 0/0
  5513 ;;		Unchanged: 0/0
  5514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5515 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5516 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5517 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5518 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5519 ;;Total ram usage:       10 bytes
  5520 ;; Hardware stack levels used:    1
  5521 ;; Hardware stack levels required when called:   12
  5522 ;; This function calls:
  5523 ;;		_vfprintf
  5524 ;; This function is called by:
  5525 ;;		_readPressureSensor
  5526 ;; This function uses a non-reentrant model
  5527 ;;
  5528                           
  5529                           
  5530                           ;psect for function _printf
  5531  1F7A                     _printf:	
  5532                           
  5533                           ;incstack = 0
  5534                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5535  1F7A  30E3               	movlw	(low ((?_printf| 0+2)))& (0+255)
  5536  1F7B  0021               	movlb	1	; select bank1
  5537  1F7C  00E7               	movwf	??_printf^(0+128)
  5538  1F7D  0867               	movf	??_printf^(0+128),w
  5539  1F7E  00EA               	movwf	printf@ap^(0+128)
  5540  1F7F  0862               	movf	(printf@fmt+1)^(0+128),w
  5541  1F80  00DA               	movwf	(vfprintf@fmt+1)^(0+128)
  5542  1F81  0861               	movf	printf@fmt^(0+128),w
  5543  1F82  00D9               	movwf	vfprintf@fmt^(0+128)
  5544  1F83  30EA               	movlw	(low (printf@ap| 0))& (0+255)
  5545  1F84  00E7               	movwf	??_printf^(0+128)
  5546  1F85  0867               	movf	??_printf^(0+128),w
  5547  1F86  00DB               	movwf	vfprintf@ap^(0+128)
  5548  1F87  3000               	movlw	0
  5549  1F88  3192  222A         	fcall	_vfprintf
  5550  1F8A  0008               	return
  5551  1F8B                     __end_of_printf:	
  5552                           
  5553                           	psect	text4
  5554  122A                     __ptext4:	
  5555 ;; *************** function _vfprintf *****************
  5556 ;; Defined at:
  5557 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5558 ;; Parameters:    Size  Location     Type
  5559 ;;  fp              1    wreg     PTR struct _IO_FILE
  5560 ;;		 -> NULL(0), 
  5561 ;;  fmt             2   57[BANK1 ] PTR const unsigned char 
  5562 ;;		 -> STR_2(18), STR_1(15), 
  5563 ;;  ap              1   59[BANK1 ] PTR PTR void 
  5564 ;;		 -> printf@ap(1), 
  5565 ;; Auto vars:     Size  Location     Type
  5566 ;;  fp              1   62[BANK1 ] PTR struct _IO_FILE
  5567 ;;		 -> NULL(0), 
  5568 ;;  cfmt            2   63[BANK1 ] PTR unsigned char 
  5569 ;;		 -> STR_2(18), STR_1(15), 
  5570 ;; Return value:  Size  Location     Type
  5571 ;;                  2   57[BANK1 ] int 
  5572 ;; Registers used:
  5573 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5574 ;; Tracked objects:
  5575 ;;		On entry : 0/0
  5576 ;;		On exit  : 0/0
  5577 ;;		Unchanged: 0/0
  5578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5579 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5580 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5581 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5582 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5583 ;;Total ram usage:        8 bytes
  5584 ;; Hardware stack levels used:    1
  5585 ;; Hardware stack levels required when called:   11
  5586 ;; This function calls:
  5587 ;;		_vfpfcnvrt
  5588 ;; This function is called by:
  5589 ;;		_printf
  5590 ;; This function uses a non-reentrant model
  5591 ;;
  5592                           
  5593                           
  5594                           ;psect for function _vfprintf
  5595  122A                     _vfprintf:	
  5596                           
  5597                           ;incstack = 0
  5598                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5599                           ;vfprintf@fp stored from wreg
  5600  122A  0021               	movlb	1	; select bank1
  5601  122B  00DE               	movwf	vfprintf@fp^(0+128)
  5602                           
  5603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  5604  122C  085A               	movf	(vfprintf@fmt+1)^(0+128),w
  5605  122D  00E0               	movwf	(vfprintf@cfmt+1)^(0+128)
  5606  122E  0859               	movf	vfprintf@fmt^(0+128),w
  5607  122F  00DF               	movwf	vfprintf@cfmt^(0+128)
  5608                           
  5609                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  5610  1230  0022               	movlb	2	; select bank2
  5611  1231  01D4               	clrf	_nout^(0+256)
  5612  1232  01D5               	clrf	(_nout+1)^(0+256)
  5613  1233                     l6663:	
  5614                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5615                           
  5616                           
  5617                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5618  1233  0021               	movlb	1	; select bank1
  5619  1234  085F               	movf	vfprintf@cfmt^(0+128),w
  5620  1235  0084               	movwf	4
  5621  1236  0860               	movf	(vfprintf@cfmt+1)^(0+128),w
  5622  1237  0085               	movwf	5
  5623  1238  0012               	moviw fsr0++
  5624  1239  1903               	btfsc	3,2
  5625  123A  2A54               	goto	l6665
  5626                           
  5627                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  5628  123B  30DF               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  5629  123C  00DC               	movwf	??_vfprintf^(0+128)
  5630  123D  085C               	movf	??_vfprintf^(0+128),w
  5631  123E  0020               	movlb	0	; select bank0
  5632  123F  00DD               	movwf	vfpfcnvrt@fmt
  5633  1240  0021               	movlb	1	; select bank1
  5634  1241  085B               	movf	vfprintf@ap^(0+128),w
  5635  1242  00DD               	movwf	(??_vfprintf+1)^(0+128)
  5636  1243  085D               	movf	(??_vfprintf+1)^(0+128),w
  5637  1244  0020               	movlb	0	; select bank0
  5638  1245  00DE               	movwf	vfpfcnvrt@ap
  5639  1246  0021               	movlb	1	; select bank1
  5640  1247  085E               	movf	vfprintf@fp^(0+128),w
  5641  1248  318A  2259  3192   	fcall	_vfpfcnvrt
  5642  124B  0020               	movlb	0	; select bank0
  5643  124C  085D               	movf	?_vfpfcnvrt,w
  5644  124D  0022               	movlb	2	; select bank2
  5645  124E  07D4               	addwf	_nout^(0+256),f
  5646  124F  0020               	movlb	0	; select bank0
  5647  1250  085E               	movf	?_vfpfcnvrt+1,w
  5648  1251  0022               	movlb	2	; select bank2
  5649  1252  3DD5               	addwfc	(_nout+1)^(0+256),f
  5650  1253  2A33               	goto	l6663
  5651  1254                     l6665:	
  5652                           
  5653                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  5654  1254  0022               	movlb	2	; select bank2
  5655  1255  0855               	movf	(_nout+1)^(0+256),w
  5656  1256  0021               	movlb	1	; select bank1
  5657  1257  00DA               	movwf	(?_vfprintf+1)^(0+128)
  5658  1258  0022               	movlb	2	; select bank2
  5659  1259  0854               	movf	_nout^(0+256),w
  5660  125A  0021               	movlb	1	; select bank1
  5661  125B  00D9               	movwf	?_vfprintf^(0+128)
  5662  125C  0008               	return
  5663  125D                     __end_of_vfprintf:	
  5664                           
  5665                           	psect	text5
  5666  0A59                     __ptext5:	
  5667 ;; *************** function _vfpfcnvrt *****************
  5668 ;; Defined at:
  5669 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5670 ;; Parameters:    Size  Location     Type
  5671 ;;  fp              1    wreg     PTR struct _IO_FILE
  5672 ;;		 -> NULL(0), 
  5673 ;;  fmt             1   61[BANK0 ] PTR PTR unsigned char 
  5674 ;;		 -> vfprintf@cfmt(2), 
  5675 ;;  ap              1   62[BANK0 ] PTR PTR void 
  5676 ;;		 -> printf@ap(1), 
  5677 ;; Auto vars:     Size  Location     Type
  5678 ;;  fp              1   79[BANK0 ] PTR struct _IO_FILE
  5679 ;;		 -> NULL(0), 
  5680 ;;  llu             8    0        unsigned long long 
  5681 ;;  ll              8    0        long long 
  5682 ;;  f               4   74[BANK0 ] long long 
  5683 ;;  ct              3   71[BANK0 ] unsigned char [3]
  5684 ;;  vp              2    0        PTR void 
  5685 ;;  i               2    0        int 
  5686 ;;  done            2    0        int 
  5687 ;;  cp              2    0        PTR unsigned char 
  5688 ;;  c               1   78[BANK0 ] unsigned char 
  5689 ;; Return value:  Size  Location     Type
  5690 ;;                  2   61[BANK0 ] int 
  5691 ;; Registers used:
  5692 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5693 ;; Tracked objects:
  5694 ;;		On entry : 0/0
  5695 ;;		On exit  : 0/0
  5696 ;;		Unchanged: 0/0
  5697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5698 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5699 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5700 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5701 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5702 ;;Total ram usage:       19 bytes
  5703 ;; Hardware stack levels used:    1
  5704 ;; Hardware stack levels required when called:   10
  5705 ;; This function calls:
  5706 ;;		_efgtoa
  5707 ;;		_fputc
  5708 ;;		_isupper
  5709 ;;		_strncmp
  5710 ;;		_tolower
  5711 ;; This function is called by:
  5712 ;;		_vfprintf
  5713 ;; This function uses a non-reentrant model
  5714 ;;
  5715                           
  5716                           
  5717                           ;psect for function _vfpfcnvrt
  5718  0A59                     _vfpfcnvrt:	
  5719                           
  5720                           ;incstack = 0
  5721                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5722                           ;vfpfcnvrt@fp stored from wreg
  5723  0A59  0020               	movlb	0	; select bank0
  5724  0A5A  00EF               	movwf	vfpfcnvrt@fp
  5725                           
  5726                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  5727  0A5B  085D               	movf	vfpfcnvrt@fmt,w
  5728  0A5C  0086               	movwf	6
  5729  0A5D  0187               	clrf	7
  5730  0A5E  3F40               	moviw [0]fsr1
  5731  0A5F  00DF               	movwf	??_vfpfcnvrt
  5732  0A60  3F41               	moviw [1]fsr1
  5733  0A61  00E0               	movwf	??_vfpfcnvrt+1
  5734  0A62  085F               	movf	??_vfpfcnvrt,w
  5735  0A63  0084               	movwf	4
  5736  0A64  0860               	movf	??_vfpfcnvrt+1,w
  5737  0A65  0085               	movwf	5
  5738  0A66  0012               	moviw fsr0++
  5739  0A67  3A25               	xorlw	37
  5740  0A68  1D03               	btfss	3,2
  5741  0A69  2BCF               	goto	l6649
  5742                           
  5743                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  5744  0A6A  085D               	movf	vfpfcnvrt@fmt,w
  5745  0A6B  0086               	movwf	6
  5746  0A6C  0187               	clrf	7
  5747  0A6D  3001               	movlw	1
  5748  0A6E  0781               	addwf	1,f
  5749  0A6F  3141               	addfsr 1,1
  5750  0A70  1803               	skipnc
  5751  0A71  0A81               	incf	1,f
  5752                           
  5753                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  5754  0A72  0022               	movlb	2	; select bank2
  5755  0A73  01D6               	clrf	_width^(0+256)
  5756  0A74  01D7               	clrf	(_width+1)^(0+256)
  5757  0A75  01DA               	clrf	_flags^(0+256)
  5758  0A76  01DB               	clrf	(_flags+1)^(0+256)
  5759                           
  5760                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  5761  0A77  30FF               	movlw	255
  5762  0A78  00D8               	movwf	_prec^(0+256)
  5763  0A79  30FF               	movlw	255
  5764  0A7A  00D9               	movwf	(_prec^(0+256)+1)
  5765                           
  5766                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  5767  0A7B  0020               	movlb	0	; select bank0
  5768  0A7C  085D               	movf	vfpfcnvrt@fmt,w
  5769  0A7D  0086               	movwf	6
  5770  0A7E  0187               	clrf	7
  5771  0A7F  3F40               	moviw [0]fsr1
  5772  0A80  00DF               	movwf	??_vfpfcnvrt
  5773  0A81  3F41               	moviw [1]fsr1
  5774  0A82  00E0               	movwf	??_vfpfcnvrt+1
  5775  0A83  085F               	movf	??_vfpfcnvrt,w
  5776  0A84  0084               	movwf	4
  5777  0A85  0860               	movf	??_vfpfcnvrt+1,w
  5778  0A86  0085               	movwf	5
  5779  0A87  0800               	movf	0,w	;code access
  5780  0A88  00E1               	movwf	??_vfpfcnvrt+2
  5781  0A89  01E2               	clrf	??_vfpfcnvrt+3
  5782  0A8A  0861               	movf	??_vfpfcnvrt+2,w
  5783  0A8B  00F7               	movwf	tolower@c
  5784  0A8C  0862               	movf	??_vfpfcnvrt+3,w
  5785  0A8D  00F8               	movwf	tolower@c+1
  5786  0A8E  3190  20DC  318A   	fcall	_tolower
  5787  0A91  0877               	movf	?_tolower,w
  5788  0A92  0020               	movlb	0	; select bank0
  5789  0A93  00E3               	movwf	??_vfpfcnvrt+4
  5790  0A94  0863               	movf	??_vfpfcnvrt+4,w
  5791  0A95  00E7               	movwf	vfpfcnvrt@ct
  5792                           
  5793                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  5794  0A96  0867               	movf	vfpfcnvrt@ct,w
  5795  0A97  1903               	btfsc	3,2
  5796  0A98  2AD6               	goto	l6603
  5797                           
  5798                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  5799  0A99  085D               	movf	vfpfcnvrt@fmt,w
  5800  0A9A  0086               	movwf	6
  5801  0A9B  0187               	clrf	7
  5802  0A9C  3F40               	moviw [0]fsr1
  5803  0A9D  00DF               	movwf	??_vfpfcnvrt
  5804  0A9E  3F41               	moviw [1]fsr1
  5805  0A9F  00E0               	movwf	??_vfpfcnvrt+1
  5806  0AA0  3001               	movlw	1
  5807  0AA1  075F               	addwf	??_vfpfcnvrt,w
  5808  0AA2  0084               	movwf	4
  5809  0AA3  0860               	movf	??_vfpfcnvrt+1,w
  5810  0AA4  1803               	skipnc
  5811  0AA5  0A60               	incf	??_vfpfcnvrt+1,w
  5812  0AA6  0085               	movwf	5
  5813  0AA7  0800               	movf	0,w	;code access
  5814  0AA8  00E1               	movwf	??_vfpfcnvrt+2
  5815  0AA9  01E2               	clrf	??_vfpfcnvrt+3
  5816  0AAA  0861               	movf	??_vfpfcnvrt+2,w
  5817  0AAB  00F7               	movwf	tolower@c
  5818  0AAC  0862               	movf	??_vfpfcnvrt+3,w
  5819  0AAD  00F8               	movwf	tolower@c+1
  5820  0AAE  3190  20DC  318A   	fcall	_tolower
  5821  0AB1  0877               	movf	?_tolower,w
  5822  0AB2  0020               	movlb	0	; select bank0
  5823  0AB3  00E3               	movwf	??_vfpfcnvrt+4
  5824  0AB4  0863               	movf	??_vfpfcnvrt+4,w
  5825  0AB5  00E8               	movwf	vfpfcnvrt@ct+1
  5826                           
  5827                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  5828  0AB6  0868               	movf	vfpfcnvrt@ct+1,w
  5829  0AB7  1903               	btfsc	3,2
  5830  0AB8  2AD6               	goto	l6603
  5831                           
  5832                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  5833  0AB9  085D               	movf	vfpfcnvrt@fmt,w
  5834  0ABA  0086               	movwf	6
  5835  0ABB  0187               	clrf	7
  5836  0ABC  3F40               	moviw [0]fsr1
  5837  0ABD  00DF               	movwf	??_vfpfcnvrt
  5838  0ABE  3F41               	moviw [1]fsr1
  5839  0ABF  00E0               	movwf	??_vfpfcnvrt+1
  5840  0AC0  3002               	movlw	2
  5841  0AC1  075F               	addwf	??_vfpfcnvrt,w
  5842  0AC2  0084               	movwf	4
  5843  0AC3  0860               	movf	??_vfpfcnvrt+1,w
  5844  0AC4  1803               	skipnc
  5845  0AC5  0A60               	incf	??_vfpfcnvrt+1,w
  5846  0AC6  0085               	movwf	5
  5847  0AC7  0800               	movf	0,w	;code access
  5848  0AC8  00E1               	movwf	??_vfpfcnvrt+2
  5849  0AC9  01E2               	clrf	??_vfpfcnvrt+3
  5850  0ACA  0861               	movf	??_vfpfcnvrt+2,w
  5851  0ACB  00F7               	movwf	tolower@c
  5852  0ACC  0862               	movf	??_vfpfcnvrt+3,w
  5853  0ACD  00F8               	movwf	tolower@c+1
  5854  0ACE  3190  20DC  318A   	fcall	_tolower
  5855  0AD1  0877               	movf	?_tolower,w
  5856  0AD2  0020               	movlb	0	; select bank0
  5857  0AD3  00E3               	movwf	??_vfpfcnvrt+4
  5858  0AD4  0863               	movf	??_vfpfcnvrt+4,w
  5859  0AD5  00E9               	movwf	vfpfcnvrt@ct+2
  5860  0AD6                     l6603:	
  5861                           
  5862                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  5863  0AD6  3066               	movlw	102
  5864  0AD7  0667               	xorwf	vfpfcnvrt@ct,w
  5865  0AD8  1D03               	btfss	3,2
  5866  0AD9  2B16               	goto	l6615
  5867                           
  5868                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  5869  0ADA  085D               	movf	vfpfcnvrt@fmt,w
  5870  0ADB  0086               	movwf	6
  5871  0ADC  0187               	clrf	7
  5872  0ADD  3F40               	moviw [0]fsr1
  5873  0ADE  00DF               	movwf	??_vfpfcnvrt
  5874  0ADF  3F41               	moviw [1]fsr1
  5875  0AE0  00E0               	movwf	??_vfpfcnvrt+1
  5876  0AE1  085F               	movf	??_vfpfcnvrt,w
  5877  0AE2  0084               	movwf	4
  5878  0AE3  0860               	movf	??_vfpfcnvrt+1,w
  5879  0AE4  0085               	movwf	5
  5880  0AE5  0800               	movf	0,w	;code access
  5881  0AE6  00E1               	movwf	??_vfpfcnvrt+2
  5882  0AE7  0861               	movf	??_vfpfcnvrt+2,w
  5883  0AE8  00EE               	movwf	vfpfcnvrt@c
  5884                           
  5885                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  5886  0AE9  085D               	movf	vfpfcnvrt@fmt,w
  5887  0AEA  0086               	movwf	6
  5888  0AEB  0187               	clrf	7
  5889  0AEC  3001               	movlw	1
  5890  0AED  0781               	addwf	1,f
  5891  0AEE  3141               	addfsr 1,1
  5892  0AEF  1803               	skipnc
  5893  0AF0  0A81               	incf	1,f
  5894                           
  5895                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5896  0AF1  085E               	movf	vfpfcnvrt@ap,w
  5897  0AF2  0086               	movwf	6
  5898  0AF3  0187               	clrf	7
  5899  0AF4  0801               	movf	1,w
  5900  0AF5  0084               	movwf	4
  5901  0AF6  0185               	clrf	5
  5902  0AF7  3004               	movlw	4
  5903  0AF8  0781               	addwf	1,f
  5904  0AF9  3F00               	moviw [0]fsr0
  5905  0AFA  00EA               	movwf	vfpfcnvrt@f
  5906  0AFB  3F01               	moviw [1]fsr0
  5907  0AFC  00EB               	movwf	vfpfcnvrt@f+1
  5908  0AFD  3F02               	moviw [2]fsr0
  5909  0AFE  00EC               	movwf	vfpfcnvrt@f+2
  5910  0AFF  3F03               	moviw [3]fsr0
  5911  0B00  00ED               	movwf	vfpfcnvrt@f+3
  5912                           
  5913                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  5914  0B01  086D               	movf	vfpfcnvrt@f+3,w
  5915  0B02  00D7               	movwf	efgtoa@f+3
  5916  0B03  086C               	movf	vfpfcnvrt@f+2,w
  5917  0B04  00D6               	movwf	efgtoa@f+2
  5918  0B05  086B               	movf	vfpfcnvrt@f+1,w
  5919  0B06  00D5               	movwf	efgtoa@f+1
  5920  0B07  086A               	movf	vfpfcnvrt@f,w
  5921  0B08  00D4               	movwf	efgtoa@f
  5922  0B09  086E               	movf	vfpfcnvrt@c,w
  5923  0B0A  00DF               	movwf	??_vfpfcnvrt
  5924  0B0B  085F               	movf	??_vfpfcnvrt,w
  5925  0B0C  00D8               	movwf	efgtoa@c
  5926  0B0D  086F               	movf	vfpfcnvrt@fp,w
  5927  0B0E  3180  205D         	fcall	_efgtoa
  5928  0B10  0020               	movlb	0	; select bank0
  5929  0B11  0855               	movf	?_efgtoa+1,w
  5930  0B12  00DE               	movwf	?_vfpfcnvrt+1
  5931  0B13  0854               	movf	?_efgtoa,w
  5932  0B14  00DD               	movwf	?_vfpfcnvrt
  5933  0B15  0008               	return
  5934  0B16                     l6615:	
  5935                           
  5936                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  5937  0B16  3031               	movlw	low (STR_11| (0+32768))
  5938  0B17  00F1               	movwf	strncmp@_r
  5939  0B18  30A0               	movlw	high (STR_11| (0+32768))
  5940  0B19  00F2               	movwf	strncmp@_r+1
  5941  0B1A  3002               	movlw	2
  5942  0B1B  00F3               	movwf	strncmp@n
  5943  0B1C  3000               	movlw	0
  5944  0B1D  00F4               	movwf	strncmp@n+1
  5945  0B1E  3067               	movlw	(low (vfpfcnvrt@ct| 0))& (0+255)
  5946  0B1F  3194  2410  318A   	fcall	_strncmp
  5947  0B22  0871               	movf	?_strncmp,w
  5948  0B23  0472               	iorwf	?_strncmp+1,w
  5949  0B24  1D03               	btfss	3,2
  5950  0B25  2B9C               	goto	l6633
  5951                           
  5952                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  5953  0B26  0020               	movlb	0	; select bank0
  5954  0B27  085D               	movf	vfpfcnvrt@fmt,w
  5955  0B28  0086               	movwf	6
  5956  0B29  0187               	clrf	7
  5957  0B2A  3F40               	moviw [0]fsr1
  5958  0B2B  00DF               	movwf	??_vfpfcnvrt
  5959  0B2C  3F41               	moviw [1]fsr1
  5960  0B2D  00E0               	movwf	??_vfpfcnvrt+1
  5961  0B2E  3001               	movlw	1
  5962  0B2F  075F               	addwf	??_vfpfcnvrt,w
  5963  0B30  0084               	movwf	4
  5964  0B31  0860               	movf	??_vfpfcnvrt+1,w
  5965  0B32  1803               	skipnc
  5966  0B33  0A60               	incf	??_vfpfcnvrt+1,w
  5967  0B34  0085               	movwf	5
  5968  0B35  0800               	movf	0,w	;code access
  5969  0B36  00E1               	movwf	??_vfpfcnvrt+2
  5970  0B37  0861               	movf	??_vfpfcnvrt+2,w
  5971  0B38  00EE               	movwf	vfpfcnvrt@c
  5972  0B39  085D               	movf	vfpfcnvrt@fmt,w
  5973  0B3A  0086               	movwf	6
  5974  0B3B  0187               	clrf	7
  5975  0B3C  3F40               	moviw [0]fsr1
  5976  0B3D  00DF               	movwf	??_vfpfcnvrt
  5977  0B3E  3F41               	moviw [1]fsr1
  5978  0B3F  00E0               	movwf	??_vfpfcnvrt+1
  5979  0B40  085F               	movf	??_vfpfcnvrt,w
  5980  0B41  0084               	movwf	4
  5981  0B42  0860               	movf	??_vfpfcnvrt+1,w
  5982  0B43  0085               	movwf	5
  5983  0B44  0800               	movf	0,w	;code access
  5984  0B45  3EBF               	addlw	191
  5985  0B46  00E1               	movwf	??_vfpfcnvrt+2
  5986  0B47  30FF               	movlw	255
  5987  0B48  1803               	skipnc
  5988  0B49  3000               	movlw	0
  5989  0B4A  00E2               	movwf	??_vfpfcnvrt+3
  5990  0B4B  3000               	movlw	0
  5991  0B4C  0262               	subwf	??_vfpfcnvrt+3,w
  5992  0B4D  301A               	movlw	26
  5993  0B4E  1903               	skipnz
  5994  0B4F  0261               	subwf	??_vfpfcnvrt+2,w
  5995  0B50  1803               	btfsc	3,0
  5996  0B51  2B54               	goto	u7270
  5997  0B52  3001               	movlw	1
  5998  0B53  2B55               	goto	u7280
  5999  0B54                     u7270:	
  6000  0B54  3000               	movlw	0
  6001  0B55                     u7280:	
  6002  0B55  00E3               	movwf	??_vfpfcnvrt+4
  6003  0B56  01E4               	clrf	??_vfpfcnvrt+5
  6004  0B57  0863               	movf	??_vfpfcnvrt+4,w
  6005  0B58  00E5               	movwf	_vfpfcnvrt$1467
  6006  0B59  0864               	movf	??_vfpfcnvrt+5,w
  6007  0B5A  00E6               	movwf	_vfpfcnvrt$1467+1
  6008  0B5B  0865               	movf	_vfpfcnvrt$1467,w
  6009  0B5C  0466               	iorwf	_vfpfcnvrt$1467+1,w
  6010  0B5D  1903               	btfsc	3,2
  6011  0B5E  2B6F               	goto	l6625
  6012                           
  6013                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  6014  0B5F  085E               	movf	vfpfcnvrt@ap,w
  6015  0B60  0086               	movwf	6
  6016  0B61  0187               	clrf	7
  6017  0B62  0801               	movf	1,w
  6018  0B63  0084               	movwf	4
  6019  0B64  0185               	clrf	5
  6020  0B65  3004               	movlw	4
  6021  0B66  0781               	addwf	1,f
  6022  0B67  3F00               	moviw [0]fsr0
  6023  0B68  00EA               	movwf	vfpfcnvrt@f
  6024  0B69  3F01               	moviw [1]fsr0
  6025  0B6A  00EB               	movwf	vfpfcnvrt@f+1
  6026  0B6B  3F02               	moviw [2]fsr0
  6027  0B6C  00EC               	movwf	vfpfcnvrt@f+2
  6028  0B6D  3F03               	moviw [3]fsr0
  6029  0B6E  2B7E               	goto	L1
  6030  0B6F                     l6625:	
  6031                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  6032                           
  6033                           
  6034                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6035  0B6F  085E               	movf	vfpfcnvrt@ap,w
  6036  0B70  0086               	movwf	6
  6037  0B71  0187               	clrf	7
  6038  0B72  0801               	movf	1,w
  6039  0B73  0084               	movwf	4
  6040  0B74  0185               	clrf	5
  6041  0B75  3004               	movlw	4
  6042  0B76  0781               	addwf	1,f
  6043  0B77  3F00               	moviw [0]fsr0
  6044  0B78  00EA               	movwf	vfpfcnvrt@f
  6045  0B79  3F01               	moviw [1]fsr0
  6046  0B7A  00EB               	movwf	vfpfcnvrt@f+1
  6047  0B7B  3F02               	moviw [2]fsr0
  6048  0B7C  00EC               	movwf	vfpfcnvrt@f+2
  6049  0B7D  3F03               	moviw [3]fsr0
  6050  0B7E                     L1:	
  6051  0B7E  00ED               	movwf	vfpfcnvrt@f+3
  6052                           
  6053                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  6054  0B7F  085D               	movf	vfpfcnvrt@fmt,w
  6055  0B80  0086               	movwf	6
  6056  0B81  0187               	clrf	7
  6057  0B82  3002               	movlw	2
  6058  0B83  0781               	addwf	1,f
  6059  0B84  3141               	addfsr 1,1
  6060  0B85  1803               	skipnc
  6061  0B86  0A81               	incf	1,f
  6062                           
  6063                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 938:       
      +                                return efgtoa(fp, f, c);
  6064  0B87  086D               	movf	vfpfcnvrt@f+3,w
  6065  0B88  00D7               	movwf	efgtoa@f+3
  6066  0B89  086C               	movf	vfpfcnvrt@f+2,w
  6067  0B8A  00D6               	movwf	efgtoa@f+2
  6068  0B8B  086B               	movf	vfpfcnvrt@f+1,w
  6069  0B8C  00D5               	movwf	efgtoa@f+1
  6070  0B8D  086A               	movf	vfpfcnvrt@f,w
  6071  0B8E  00D4               	movwf	efgtoa@f
  6072  0B8F  086E               	movf	vfpfcnvrt@c,w
  6073  0B90  00DF               	movwf	??_vfpfcnvrt
  6074  0B91  085F               	movf	??_vfpfcnvrt,w
  6075  0B92  00D8               	movwf	efgtoa@c
  6076  0B93  086F               	movf	vfpfcnvrt@fp,w
  6077  0B94  3180  205D         	fcall	_efgtoa
  6078  0B96  0020               	movlb	0	; select bank0
  6079  0B97  0855               	movf	?_efgtoa+1,w
  6080  0B98  00DE               	movwf	?_vfpfcnvrt+1
  6081  0B99  0854               	movf	?_efgtoa,w
  6082  0B9A  00DD               	movwf	?_vfpfcnvrt
  6083  0B9B  0008               	return
  6084  0B9C                     l6633:	
  6085                           
  6086                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  6087  0B9C  0020               	movlb	0	; select bank0
  6088  0B9D  085D               	movf	vfpfcnvrt@fmt,w
  6089  0B9E  0086               	movwf	6
  6090  0B9F  0187               	clrf	7
  6091  0BA0  3F40               	moviw [0]fsr1
  6092  0BA1  00DF               	movwf	??_vfpfcnvrt
  6093  0BA2  3F41               	moviw [1]fsr1
  6094  0BA3  00E0               	movwf	??_vfpfcnvrt+1
  6095  0BA4  085F               	movf	??_vfpfcnvrt,w
  6096  0BA5  0084               	movwf	4
  6097  0BA6  0860               	movf	??_vfpfcnvrt+1,w
  6098  0BA7  0085               	movwf	5
  6099  0BA8  0012               	moviw fsr0++
  6100  0BA9  3A25               	xorlw	37
  6101  0BAA  1D03               	btfss	3,2
  6102  0BAB  2BC4               	goto	l6643
  6103                           
  6104                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  6105  0BAC  085D               	movf	vfpfcnvrt@fmt,w
  6106  0BAD  0086               	movwf	6
  6107  0BAE  0187               	clrf	7
  6108  0BAF  3001               	movlw	1
  6109  0BB0  0781               	addwf	1,f
  6110  0BB1  3141               	addfsr 1,1
  6111  0BB2  1803               	skipnc
  6112  0BB3  0A81               	incf	1,f
  6113                           
  6114                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  6115  0BB4  3025               	movlw	37
  6116  0BB5  00F4               	movwf	fputc@c
  6117  0BB6  3000               	movlw	0
  6118  0BB7  00F5               	movwf	fputc@c+1
  6119  0BB8  086F               	movf	vfpfcnvrt@fp,w
  6120  0BB9  00DF               	movwf	??_vfpfcnvrt
  6121  0BBA  085F               	movf	??_vfpfcnvrt,w
  6122  0BBB  00F6               	movwf	fputc@fp
  6123  0BBC  3192  2291         	fcall	_fputc
  6124  0BBE                     l6639:	
  6125                           
  6126                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  6127  0BBE  3001               	movlw	1
  6128  0BBF  0020               	movlb	0	; select bank0
  6129  0BC0  00DD               	movwf	?_vfpfcnvrt
  6130  0BC1  3000               	movlw	0
  6131  0BC2  00DE               	movwf	?_vfpfcnvrt+1
  6132  0BC3  0008               	return
  6133  0BC4                     l6643:	
  6134                           
  6135                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  6136  0BC4  085D               	movf	vfpfcnvrt@fmt,w
  6137  0BC5  0086               	movwf	6
  6138  0BC6  0187               	clrf	7
  6139  0BC7  3001               	movlw	1
  6140  0BC8  0781               	addwf	1,f
  6141  0BC9  3141               	addfsr 1,1
  6142  0BCA  1803               	skipnc
  6143  0BCB  0A81               	incf	1,f
  6144                           
  6145                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  6146  0BCC  01DD               	clrf	?_vfpfcnvrt
  6147  0BCD  01DE               	clrf	?_vfpfcnvrt+1
  6148  0BCE  0008               	return
  6149  0BCF                     l6649:	
  6150                           
  6151                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  6152  0BCF  085D               	movf	vfpfcnvrt@fmt,w
  6153  0BD0  0086               	movwf	6
  6154  0BD1  0187               	clrf	7
  6155  0BD2  3F40               	moviw [0]fsr1
  6156  0BD3  00DF               	movwf	??_vfpfcnvrt
  6157  0BD4  3F41               	moviw [1]fsr1
  6158  0BD5  00E0               	movwf	??_vfpfcnvrt+1
  6159  0BD6  085F               	movf	??_vfpfcnvrt,w
  6160  0BD7  0084               	movwf	4
  6161  0BD8  0860               	movf	??_vfpfcnvrt+1,w
  6162  0BD9  0085               	movwf	5
  6163  0BDA  0800               	movf	0,w	;code access
  6164  0BDB  00E1               	movwf	??_vfpfcnvrt+2
  6165  0BDC  01E2               	clrf	??_vfpfcnvrt+3
  6166  0BDD  0861               	movf	??_vfpfcnvrt+2,w
  6167  0BDE  00F4               	movwf	fputc@c
  6168  0BDF  0862               	movf	??_vfpfcnvrt+3,w
  6169  0BE0  00F5               	movwf	fputc@c+1
  6170  0BE1  086F               	movf	vfpfcnvrt@fp,w
  6171  0BE2  00E3               	movwf	??_vfpfcnvrt+4
  6172  0BE3  0863               	movf	??_vfpfcnvrt+4,w
  6173  0BE4  00F6               	movwf	fputc@fp
  6174  0BE5  3192  2291  318A   	fcall	_fputc
  6175                           
  6176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  6177  0BE8  0020               	movlb	0	; select bank0
  6178  0BE9  085D               	movf	vfpfcnvrt@fmt,w
  6179  0BEA  0086               	movwf	6
  6180  0BEB  0187               	clrf	7
  6181  0BEC  3001               	movlw	1
  6182  0BED  0781               	addwf	1,f
  6183  0BEE  3141               	addfsr 1,1
  6184  0BEF  1803               	skipnc
  6185  0BF0  0A81               	incf	1,f
  6186  0BF1  2BBE               	goto	l6639
  6187  0BF2                     __end_of_vfpfcnvrt:	
  6188                           
  6189                           	psect	text6
  6190  1410                     __ptext6:	
  6191 ;; *************** function _strncmp *****************
  6192 ;; Defined at:
  6193 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  6194 ;; Parameters:    Size  Location     Type
  6195 ;;  _l              1    wreg     PTR const unsigned char 
  6196 ;;		 -> vfpfcnvrt@ct(3), 
  6197 ;;  _r              2    1[COMMON] PTR const unsigned char 
  6198 ;;		 -> STR_13(3), 
  6199 ;;  n               2    3[COMMON] unsigned int 
  6200 ;; Auto vars:     Size  Location     Type
  6201 ;;  _l              1    6[COMMON] PTR const unsigned char 
  6202 ;;		 -> vfpfcnvrt@ct(3), 
  6203 ;;  r               2    7[COMMON] PTR const unsigned char 
  6204 ;;		 -> STR_13(3), 
  6205 ;;  l               1    9[COMMON] PTR const unsigned char 
  6206 ;;		 -> vfpfcnvrt@ct(3), 
  6207 ;; Return value:  Size  Location     Type
  6208 ;;                  2    1[COMMON] int 
  6209 ;; Registers used:
  6210 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  6211 ;; Tracked objects:
  6212 ;;		On entry : 0/0
  6213 ;;		On exit  : 0/0
  6214 ;;		Unchanged: 0/0
  6215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6216 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6217 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6218 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6219 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6220 ;;Total ram usage:        9 bytes
  6221 ;; Hardware stack levels used:    1
  6222 ;; Hardware stack levels required when called:    4
  6223 ;; This function calls:
  6224 ;;		Nothing
  6225 ;; This function is called by:
  6226 ;;		_vfpfcnvrt
  6227 ;; This function uses a non-reentrant model
  6228 ;;
  6229                           
  6230                           
  6231                           ;psect for function _strncmp
  6232  1410                     _strncmp:	
  6233                           
  6234                           ;incstack = 0
  6235                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  6236                           ;strncmp@_l stored from wreg
  6237  1410  00F6               	movwf	strncmp@_l
  6238  1411  0876               	movf	strncmp@_l,w
  6239  1412  00F5               	movwf	??_strncmp
  6240  1413  0875               	movf	??_strncmp,w
  6241  1414  00F9               	movwf	strncmp@l
  6242  1415  0872               	movf	strncmp@_r+1,w
  6243  1416  00F8               	movwf	strncmp@r+1
  6244  1417  0871               	movf	strncmp@_r,w
  6245  1418  00F7               	movwf	strncmp@r
  6246  1419  3001               	movlw	1
  6247  141A  02F3               	subwf	strncmp@n,f
  6248  141B  3000               	movlw	0
  6249  141C  3BF4               	subwfb	strncmp@n+1,f
  6250  141D  0A73               	incf	strncmp@n,w
  6251  141E  1D03               	skipz
  6252  141F  2C4A               	goto	l5307
  6253  1420  0A74               	incf	strncmp@n+1,w
  6254  1421  1D03               	btfss	3,2
  6255  1422  2C4A               	goto	l5307
  6256  1423  01F1               	clrf	?_strncmp
  6257  1424  01F2               	clrf	?_strncmp+1
  6258  1425  0008               	return
  6259  1426                     l5309:	
  6260  1426  0877               	movf	strncmp@r,w
  6261  1427  0084               	movwf	4
  6262  1428  0878               	movf	strncmp@r+1,w
  6263  1429  0085               	movwf	5
  6264  142A  0012               	moviw fsr0++
  6265  142B  1903               	btfsc	3,2
  6266  142C  2C50               	goto	l5315
  6267  142D  0873               	movf	strncmp@n,w
  6268  142E  0474               	iorwf	strncmp@n+1,w
  6269  142F  1903               	btfsc	3,2
  6270  1430  2C50               	goto	l5315
  6271  1431  0877               	movf	strncmp@r,w
  6272  1432  0084               	movwf	4
  6273  1433  0878               	movf	strncmp@r+1,w
  6274  1434  0085               	movwf	5
  6275  1435  0800               	movf	0,w	;code access
  6276  1436  00F5               	movwf	??_strncmp
  6277  1437  0879               	movf	strncmp@l,w
  6278  1438  0086               	movwf	6
  6279  1439  0187               	clrf	7
  6280  143A  0801               	movf	1,w
  6281  143B  0675               	xorwf	??_strncmp,w
  6282  143C  1D03               	btfss	3,2
  6283  143D  2C50               	goto	l5315
  6284  143E  3001               	movlw	1
  6285  143F  00F5               	movwf	??_strncmp
  6286  1440  0875               	movf	??_strncmp,w
  6287  1441  07F9               	addwf	strncmp@l,f
  6288  1442  3001               	movlw	1
  6289  1443  07F7               	addwf	strncmp@r,f
  6290  1444  3000               	movlw	0
  6291  1445  3DF8               	addwfc	strncmp@r+1,f
  6292  1446  3001               	movlw	1
  6293  1447  02F3               	subwf	strncmp@n,f
  6294  1448  3000               	movlw	0
  6295  1449  3BF4               	subwfb	strncmp@n+1,f
  6296  144A                     l5307:	
  6297  144A  0879               	movf	strncmp@l,w
  6298  144B  0086               	movwf	6
  6299  144C  0187               	clrf	7
  6300  144D  0801               	movf	1,w
  6301  144E  1D03               	btfss	3,2
  6302  144F  2C26               	goto	l5309
  6303  1450                     l5315:	
  6304  1450  0879               	movf	strncmp@l,w
  6305  1451  0086               	movwf	6
  6306  1452  0187               	clrf	7
  6307  1453  0877               	movf	strncmp@r,w
  6308  1454  0084               	movwf	4
  6309  1455  0878               	movf	strncmp@r+1,w
  6310  1456  0085               	movwf	5
  6311  1457  0800               	movf	0,w	;code access
  6312  1458  0201               	subwf	1,w
  6313  1459  00F1               	movwf	?_strncmp
  6314  145A  01F2               	clrf	?_strncmp+1
  6315  145B  1C03               	skipc
  6316  145C  03F2               	decf	?_strncmp+1,f
  6317  145D  0008               	return
  6318  145E                     __end_of_strncmp:	
  6319                           
  6320                           	psect	text7
  6321  005D                     __ptext7:	
  6322 ;; *************** function _efgtoa *****************
  6323 ;; Defined at:
  6324 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6325 ;; Parameters:    Size  Location     Type
  6326 ;;  fp              1    wreg     PTR struct _IO_FILE
  6327 ;;		 -> NULL(0), 
  6328 ;;  f               4   52[BANK0 ] PTR struct _IO_FILE
  6329 ;;  c               1   56[BANK0 ] unsigned char 
  6330 ;; Auto vars:     Size  Location     Type
  6331 ;;  fp              1   28[BANK1 ] PTR struct _IO_FILE
  6332 ;;		 -> NULL(0), 
  6333 ;;  u               4   53[BANK1 ] PTR struct _IO_FILE
  6334 ;;  g               4   45[BANK1 ] PTR struct _IO_FILE
  6335 ;;  l               4   39[BANK1 ] PTR struct _IO_FILE
  6336 ;;  h               4   35[BANK1 ] PTR struct _IO_FILE
  6337 ;;  ou              4    0[BANK1 ] PTR struct _IO_FILE
  6338 ;;  n               2   51[BANK1 ] int 
  6339 ;;  e               2   49[BANK1 ] int 
  6340 ;;  i               2   43[BANK1 ] int 
  6341 ;;  w               2   32[BANK1 ] int 
  6342 ;;  p               2   29[BANK1 ] int 
  6343 ;;  sign            2   26[BANK1 ] int 
  6344 ;;  d               2   24[BANK1 ] int 
  6345 ;;  ne              2   22[BANK1 ] int 
  6346 ;;  m               2   20[BANK1 ] int 
  6347 ;;  pp              2   18[BANK1 ] int 
  6348 ;;  t               2   16[BANK1 ] int 
  6349 ;;  mode            1   34[BANK1 ] unsigned char 
  6350 ;;  nmode           1   31[BANK1 ] unsigned char 
  6351 ;; Return value:  Size  Location     Type
  6352 ;;                  2   52[BANK0 ] int 
  6353 ;; Registers used:
  6354 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6355 ;; Tracked objects:
  6356 ;;		On entry : 0/0
  6357 ;;		On exit  : 0/0
  6358 ;;		Unchanged: 0/0
  6359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6360 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6361 ;;      Locals:         0       0      57       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6362 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6363 ;;      Totals:         0       9      57       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6364 ;;Total ram usage:       66 bytes
  6365 ;; Hardware stack levels used:    1
  6366 ;; Hardware stack levels required when called:    9
  6367 ;; This function calls:
  6368 ;;		___awdiv
  6369 ;;		___awmod
  6370 ;;		___fladd
  6371 ;;		___fldiv
  6372 ;;		___fleq
  6373 ;;		___flge
  6374 ;;		___flmul
  6375 ;;		___flneg
  6376 ;;		___flsub
  6377 ;;		___fltol
  6378 ;;		___fpclassifyf
  6379 ;;		_floorf
  6380 ;;		_isupper
  6381 ;;		_pad
  6382 ;;		_strcpy
  6383 ;;		_tolower
  6384 ;; This function is called by:
  6385 ;;		_vfpfcnvrt
  6386 ;; This function uses a non-reentrant model
  6387 ;;
  6388                           
  6389                           
  6390                           ;psect for function _efgtoa
  6391  005D                     _efgtoa:	
  6392                           
  6393                           ;incstack = 0
  6394                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6395                           ;efgtoa@fp stored from wreg
  6396  005D  0021               	movlb	1	; select bank1
  6397  005E  00BC               	movwf	efgtoa@fp^(0+128)
  6398                           
  6399                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  6400  005F  01BA               	clrf	efgtoa@sign^(0+128)
  6401  0060  01BB               	clrf	(efgtoa@sign+1)^(0+128)
  6402                           
  6403                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  6404  0061  0020               	movlb	0	; select bank0
  6405  0062  0857               	movf	efgtoa@f+3,w
  6406  0063  0021               	movlb	1	; select bank1
  6407  0064  00D0               	movwf	(efgtoa@g+3)^(0+128)
  6408  0065  0020               	movlb	0	; select bank0
  6409  0066  0856               	movf	efgtoa@f+2,w
  6410  0067  0021               	movlb	1	; select bank1
  6411  0068  00CF               	movwf	(efgtoa@g+2)^(0+128)
  6412  0069  0020               	movlb	0	; select bank0
  6413  006A  0855               	movf	efgtoa@f+1,w
  6414  006B  0021               	movlb	1	; select bank1
  6415  006C  00CE               	movwf	(efgtoa@g+1)^(0+128)
  6416  006D  0020               	movlb	0	; select bank0
  6417  006E  0854               	movf	efgtoa@f,w
  6418  006F  0021               	movlb	1	; select bank1
  6419  0070  00CD               	movwf	efgtoa@g^(0+128)
  6420                           
  6421                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  6422  0071  0850               	movf	(efgtoa@g+3)^(0+128),w
  6423  0072  0020               	movlb	0	; select bank0
  6424  0073  00BD               	movwf	___flge@ff1+3
  6425  0074  0021               	movlb	1	; select bank1
  6426  0075  084F               	movf	(efgtoa@g+2)^(0+128),w
  6427  0076  0020               	movlb	0	; select bank0
  6428  0077  00BC               	movwf	___flge@ff1+2
  6429  0078  0021               	movlb	1	; select bank1
  6430  0079  084E               	movf	(efgtoa@g+1)^(0+128),w
  6431  007A  0020               	movlb	0	; select bank0
  6432  007B  00BB               	movwf	___flge@ff1+1
  6433  007C  0021               	movlb	1	; select bank1
  6434  007D  084D               	movf	efgtoa@g^(0+128),w
  6435  007E  0020               	movlb	0	; select bank0
  6436  007F  00BA               	movwf	___flge@ff1
  6437  0080  3000               	movlw	0
  6438  0081  00C1               	movwf	___flge@ff2+3
  6439  0082  3000               	movlw	0
  6440  0083  00C0               	movwf	___flge@ff2+2
  6441  0084  3000               	movlw	0
  6442  0085  00BF               	movwf	___flge@ff2+1
  6443  0086  3000               	movlw	0
  6444  0087  00BE               	movwf	___flge@ff2
  6445  0088  3196  262E  3180   	fcall	___flge
  6446  008B  1803               	btfsc	3,0
  6447  008C  28A6               	goto	l6303
  6448                           
  6449                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  6450  008D  3001               	movlw	1
  6451  008E  0021               	movlb	1	; select bank1
  6452  008F  00BA               	movwf	efgtoa@sign^(0+128)
  6453  0090  3000               	movlw	0
  6454  0091  00BB               	movwf	(efgtoa@sign^(0+128)+1)
  6455                           
  6456                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  6457  0092  0850               	movf	(efgtoa@g+3)^(0+128),w
  6458  0093  00F4               	movwf	___flneg@f1+3
  6459  0094  084F               	movf	(efgtoa@g+2)^(0+128),w
  6460  0095  00F3               	movwf	___flneg@f1+2
  6461  0096  084E               	movf	(efgtoa@g+1)^(0+128),w
  6462  0097  00F2               	movwf	___flneg@f1+1
  6463  0098  084D               	movf	efgtoa@g^(0+128),w
  6464  0099  00F1               	movwf	___flneg@f1
  6465  009A  319E  26FA  3180   	fcall	___flneg
  6466  009D  0874               	movf	?___flneg+3,w
  6467  009E  0021               	movlb	1	; select bank1
  6468  009F  00D0               	movwf	(efgtoa@g+3)^(0+128)
  6469  00A0  0873               	movf	?___flneg+2,w
  6470  00A1  00CF               	movwf	(efgtoa@g+2)^(0+128)
  6471  00A2  0872               	movf	?___flneg+1,w
  6472  00A3  00CE               	movwf	(efgtoa@g+1)^(0+128)
  6473  00A4  0871               	movf	?___flneg,w
  6474  00A5  00CD               	movwf	efgtoa@g^(0+128)
  6475  00A6                     l6303:	
  6476                           
  6477                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  6478  00A6  0021               	movlb	1	; select bank1
  6479  00A7  01D3               	clrf	efgtoa@n^(0+128)
  6480  00A8  01D4               	clrf	(efgtoa@n+1)^(0+128)
  6481                           
  6482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  6483  00A9  0022               	movlb	2	; select bank2
  6484  00AA  0857               	movf	(_width+1)^(0+256),w
  6485  00AB  0021               	movlb	1	; select bank1
  6486  00AC  00C1               	movwf	(efgtoa@w+1)^(0+128)
  6487  00AD  0022               	movlb	2	; select bank2
  6488  00AE  0856               	movf	_width^(0+256),w
  6489  00AF  0021               	movlb	1	; select bank1
  6490  00B0  00C0               	movwf	efgtoa@w^(0+128)
  6491                           
  6492                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  6493  00B1  083A               	movf	efgtoa@sign^(0+128),w
  6494  00B2  043B               	iorwf	(efgtoa@sign+1)^(0+128),w
  6495  00B3  1D03               	btfss	3,2
  6496  00B4  28B8               	goto	l6311
  6497  00B5  0022               	movlb	2	; select bank2
  6498  00B6  1D5A               	btfss	_flags^(0+256),2
  6499  00B7  28D2               	goto	l6323
  6500  00B8                     l6311:	
  6501                           
  6502                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  6503  00B8  0021               	movlb	1	; select bank1
  6504  00B9  083A               	movf	efgtoa@sign^(0+128),w
  6505  00BA  043B               	iorwf	(efgtoa@sign+1)^(0+128),w
  6506  00BB  1D03               	btfss	3,2
  6507  00BC  28BF               	goto	l6315
  6508  00BD  302B               	movlw	43
  6509  00BE  28C0               	goto	L2
  6510  00BF                     l6315:	
  6511  00BF  302D               	movlw	45
  6512  00C0                     L2:	
  6513  00C0  00A4               	movwf	_efgtoa$1438^(0+128)
  6514  00C1  3000               	movlw	0
  6515  00C2  00A5               	movwf	(_efgtoa$1438^(0+128)+1)
  6516  00C3  0824               	movf	_efgtoa$1438^(0+128),w
  6517  00C4  0020               	movlb	0	; select bank0
  6518  00C5  00D9               	movwf	??_efgtoa
  6519  00C6  0859               	movf	??_efgtoa,w
  6520  00C7  0024               	movlb	4	; select bank4
  6521  00C8  00A0               	movwf	_dbuf^(0+512)
  6522                           
  6523                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  6524  00C9  3001               	movlw	1
  6525  00CA  0021               	movlb	1	; select bank1
  6526  00CB  07D3               	addwf	efgtoa@n^(0+128),f
  6527  00CC  3000               	movlw	0
  6528  00CD  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  6529                           
  6530                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  6531  00CE  30FF               	movlw	255
  6532  00CF  07C0               	addwf	efgtoa@w^(0+128),f
  6533  00D0  30FF               	movlw	255
  6534  00D1  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  6535  00D2                     l6323:	
  6536                           
  6537                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  6538  00D2  0021               	movlb	1	; select bank1
  6539  00D3  0850               	movf	(efgtoa@g+3)^(0+128),w
  6540  00D4  00F4               	movwf	___fpclassifyf@x+3
  6541  00D5  084F               	movf	(efgtoa@g+2)^(0+128),w
  6542  00D6  00F3               	movwf	___fpclassifyf@x+2
  6543  00D7  084E               	movf	(efgtoa@g+1)^(0+128),w
  6544  00D8  00F2               	movwf	___fpclassifyf@x+1
  6545  00D9  084D               	movf	efgtoa@g^(0+128),w
  6546  00DA  00F1               	movwf	___fpclassifyf@x
  6547  00DB  3195  25B6  3180   	fcall	___fpclassifyf
  6548  00DE  0371               	decf	?___fpclassifyf,w
  6549  00DF  0472               	iorwf	?___fpclassifyf+1,w
  6550  00E0  1D03               	btfss	3,2
  6551  00E1  292A               	goto	l6341
  6552  00E2  0020               	movlb	0	; select bank0
  6553  00E3  0858               	movf	efgtoa@c,w
  6554  00E4  3EBF               	addlw	191
  6555  00E5  00D9               	movwf	??_efgtoa
  6556  00E6  30FF               	movlw	255
  6557  00E7  1803               	skipnc
  6558  00E8  3000               	movlw	0
  6559  00E9  00DA               	movwf	??_efgtoa+1
  6560  00EA  3000               	movlw	0
  6561  00EB  025A               	subwf	??_efgtoa+1,w
  6562  00EC  301A               	movlw	26
  6563  00ED  1903               	skipnz
  6564  00EE  0259               	subwf	??_efgtoa,w
  6565  00EF  1803               	btfsc	3,0
  6566  00F0  28F3               	goto	u6750
  6567  00F1  3001               	movlw	1
  6568  00F2  28F4               	goto	u6760
  6569  00F3                     u6750:	
  6570  00F3  3000               	movlw	0
  6571  00F4                     u6760:	
  6572  00F4  00DB               	movwf	??_efgtoa+2
  6573  00F5  01DC               	clrf	??_efgtoa+3
  6574  00F6  085B               	movf	??_efgtoa+2,w
  6575  00F7  0021               	movlb	1	; select bank1
  6576  00F8  00A6               	movwf	_efgtoa$1439^(0+128)
  6577  00F9  0020               	movlb	0	; select bank0
  6578  00FA  085C               	movf	??_efgtoa+3,w
  6579  00FB  0021               	movlb	1	; select bank1
  6580  00FC  00A7               	movwf	(_efgtoa$1439+1)^(0+128)
  6581  00FD  0826               	movf	_efgtoa$1439^(0+128),w
  6582  00FE  0427               	iorwf	(_efgtoa$1439+1)^(0+128),w
  6583  00FF  1903               	btfsc	3,2
  6584  0100  2905               	goto	l6333
  6585                           
  6586                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  6587  0101  3021               	movlw	low (STR_3| (0+32768))
  6588  0102  00F1               	movwf	strcpy@src
  6589  0103  30A0               	movlw	high (STR_3| (0+32768))
  6590  0104  2908               	goto	L3
  6591  0105                     l6333:	
  6592                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  6593                           
  6594                           
  6595                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  6596  0105  3029               	movlw	low (STR_4| (0+32768))
  6597  0106  00F1               	movwf	strcpy@src
  6598  0107  30A0               	movlw	high (STR_4| (0+32768))
  6599  0108                     L3:	
  6600  0108  00F2               	movwf	strcpy@src+1
  6601  0109  0853               	movf	efgtoa@n^(0+128),w
  6602  010A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6603  010B  3190  209D  3180   	fcall	_strcpy
  6604                           
  6605                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  6606  010E  30FD               	movlw	253
  6607  010F  0021               	movlb	1	; select bank1
  6608  0110  07C0               	addwf	efgtoa@w^(0+128),f
  6609  0111  30FF               	movlw	255
  6610  0112  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  6611                           
  6612                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  6613  0113  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  6614  0114  0020               	movlb	0	; select bank0
  6615  0115  00D9               	movwf	??_efgtoa
  6616  0116  0859               	movf	??_efgtoa,w
  6617  0117  00A8               	movwf	pad@buf
  6618  0118  0021               	movlb	1	; select bank1
  6619  0119  0841               	movf	(efgtoa@w+1)^(0+128),w
  6620  011A  0020               	movlb	0	; select bank0
  6621  011B  00AA               	movwf	pad@p+1
  6622  011C  0021               	movlb	1	; select bank1
  6623  011D  0840               	movf	efgtoa@w^(0+128),w
  6624  011E  0020               	movlb	0	; select bank0
  6625  011F  00A9               	movwf	pad@p
  6626  0120  0021               	movlb	1	; select bank1
  6627  0121  083C               	movf	efgtoa@fp^(0+128),w
  6628  0122  3194  245E         	fcall	_pad
  6629  0124  0020               	movlb	0	; select bank0
  6630  0125  0829               	movf	?_pad+1,w
  6631  0126  00D5               	movwf	?_efgtoa+1
  6632  0127  0828               	movf	?_pad,w
  6633  0128  00D4               	movwf	?_efgtoa
  6634  0129  0008               	return
  6635  012A                     l6341:	
  6636                           
  6637                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  6638  012A  0021               	movlb	1	; select bank1
  6639  012B  0850               	movf	(efgtoa@g+3)^(0+128),w
  6640  012C  00F4               	movwf	___fpclassifyf@x+3
  6641  012D  084F               	movf	(efgtoa@g+2)^(0+128),w
  6642  012E  00F3               	movwf	___fpclassifyf@x+2
  6643  012F  084E               	movf	(efgtoa@g+1)^(0+128),w
  6644  0130  00F2               	movwf	___fpclassifyf@x+1
  6645  0131  084D               	movf	efgtoa@g^(0+128),w
  6646  0132  00F1               	movwf	___fpclassifyf@x
  6647  0133  3195  25B6  3180   	fcall	___fpclassifyf
  6648  0136  0871               	movf	?___fpclassifyf,w
  6649  0137  0472               	iorwf	?___fpclassifyf+1,w
  6650  0138  1D03               	btfss	3,2
  6651  0139  2982               	goto	l6359
  6652  013A  0020               	movlb	0	; select bank0
  6653  013B  0858               	movf	efgtoa@c,w
  6654  013C  3EBF               	addlw	191
  6655  013D  00D9               	movwf	??_efgtoa
  6656  013E  30FF               	movlw	255
  6657  013F  1803               	skipnc
  6658  0140  3000               	movlw	0
  6659  0141  00DA               	movwf	??_efgtoa+1
  6660  0142  3000               	movlw	0
  6661  0143  025A               	subwf	??_efgtoa+1,w
  6662  0144  301A               	movlw	26
  6663  0145  1903               	skipnz
  6664  0146  0259               	subwf	??_efgtoa,w
  6665  0147  1803               	btfsc	3,0
  6666  0148  294B               	goto	u6790
  6667  0149  3001               	movlw	1
  6668  014A  294C               	goto	u6800
  6669  014B                     u6790:	
  6670  014B  3000               	movlw	0
  6671  014C                     u6800:	
  6672  014C  00DB               	movwf	??_efgtoa+2
  6673  014D  01DC               	clrf	??_efgtoa+3
  6674  014E  085B               	movf	??_efgtoa+2,w
  6675  014F  0021               	movlb	1	; select bank1
  6676  0150  00A8               	movwf	_efgtoa$1444^(0+128)
  6677  0151  0020               	movlb	0	; select bank0
  6678  0152  085C               	movf	??_efgtoa+3,w
  6679  0153  0021               	movlb	1	; select bank1
  6680  0154  00A9               	movwf	(_efgtoa$1444+1)^(0+128)
  6681  0155  0828               	movf	_efgtoa$1444^(0+128),w
  6682  0156  0429               	iorwf	(_efgtoa$1444+1)^(0+128),w
  6683  0157  1903               	btfsc	3,2
  6684  0158  295D               	goto	l6351
  6685                           
  6686                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  6687  0159  3025               	movlw	low (STR_7| (0+32768))
  6688  015A  00F1               	movwf	strcpy@src
  6689  015B  30A0               	movlw	high (STR_7| (0+32768))
  6690  015C  2960               	goto	L4
  6691  015D                     l6351:	
  6692                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  6693                           
  6694                           
  6695                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  6696  015D  302D               	movlw	low (STR_8| (0+32768))
  6697  015E  00F1               	movwf	strcpy@src
  6698  015F  30A0               	movlw	high (STR_8| (0+32768))
  6699  0160                     L4:	
  6700  0160  00F2               	movwf	strcpy@src+1
  6701  0161  0853               	movf	efgtoa@n^(0+128),w
  6702  0162  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6703  0163  3190  209D  3180   	fcall	_strcpy
  6704                           
  6705                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 358:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  6706  0166  30FD               	movlw	253
  6707  0167  0021               	movlb	1	; select bank1
  6708  0168  07C0               	addwf	efgtoa@w^(0+128),f
  6709  0169  30FF               	movlw	255
  6710  016A  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  6711                           
  6712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 359:       
      +                            return pad(fp, &dbuf[0], w);
  6713  016B  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  6714  016C  0020               	movlb	0	; select bank0
  6715  016D  00D9               	movwf	??_efgtoa
  6716  016E  0859               	movf	??_efgtoa,w
  6717  016F  00A8               	movwf	pad@buf
  6718  0170  0021               	movlb	1	; select bank1
  6719  0171  0841               	movf	(efgtoa@w+1)^(0+128),w
  6720  0172  0020               	movlb	0	; select bank0
  6721  0173  00AA               	movwf	pad@p+1
  6722  0174  0021               	movlb	1	; select bank1
  6723  0175  0840               	movf	efgtoa@w^(0+128),w
  6724  0176  0020               	movlb	0	; select bank0
  6725  0177  00A9               	movwf	pad@p
  6726  0178  0021               	movlb	1	; select bank1
  6727  0179  083C               	movf	efgtoa@fp^(0+128),w
  6728  017A  3194  245E         	fcall	_pad
  6729  017C  0020               	movlb	0	; select bank0
  6730  017D  0829               	movf	?_pad+1,w
  6731  017E  00D5               	movwf	?_efgtoa+1
  6732  017F  0828               	movf	?_pad,w
  6733  0180  00D4               	movwf	?_efgtoa
  6734  0181  0008               	return
  6735  0182                     l6359:	
  6736                           
  6737                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  6738  0182  303F               	movlw	63
  6739  0183  0021               	movlb	1	; select bank1
  6740  0184  00D8               	movwf	(efgtoa@u+3)^(0+128)
  6741  0185  3080               	movlw	128
  6742  0186  00D7               	movwf	(efgtoa@u+2)^(0+128)
  6743  0187  3000               	movlw	0
  6744  0188  00D6               	movwf	(efgtoa@u+1)^(0+128)
  6745  0189  3000               	movlw	0
  6746  018A  00D5               	movwf	efgtoa@u^(0+128)
  6747                           
  6748                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  6749  018B  01D1               	clrf	efgtoa@e^(0+128)
  6750  018C  01D2               	clrf	(efgtoa@e+1)^(0+128)
  6751                           
  6752                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  6753  018D  0850               	movf	(efgtoa@g+3)^(0+128),w
  6754  018E  00F4               	movwf	___fleq@ff1+3
  6755  018F  084F               	movf	(efgtoa@g+2)^(0+128),w
  6756  0190  00F3               	movwf	___fleq@ff1+2
  6757  0191  084E               	movf	(efgtoa@g+1)^(0+128),w
  6758  0192  00F2               	movwf	___fleq@ff1+1
  6759  0193  084D               	movf	efgtoa@g^(0+128),w
  6760  0194  00F1               	movwf	___fleq@ff1
  6761  0195  3000               	movlw	0
  6762  0196  00F8               	movwf	___fleq@ff2+3
  6763  0197  3000               	movlw	0
  6764  0198  00F7               	movwf	___fleq@ff2+2
  6765  0199  3000               	movlw	0
  6766  019A  00F6               	movwf	___fleq@ff2+1
  6767  019B  3000               	movlw	0
  6768  019C  00F5               	movwf	___fleq@ff2
  6769  019D  3188  2000  3180   	fcall	___fleq
  6770  01A0  1C03               	btfss	3,0
  6771  01A1  29D3               	goto	l6371
  6772  01A2  2A62               	goto	l6379
  6773  01A3                     l6367:	
  6774                           
  6775                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  6776  01A3  3041               	movlw	65
  6777  01A4  0020               	movlb	0	; select bank0
  6778  01A5  00A3               	movwf	___flmul@b+3
  6779  01A6  3020               	movlw	32
  6780  01A7  00A2               	movwf	___flmul@b+2
  6781  01A8  3000               	movlw	0
  6782  01A9  00A1               	movwf	___flmul@b+1
  6783  01AA  3000               	movlw	0
  6784  01AB  00A0               	movwf	___flmul@b
  6785  01AC  0021               	movlb	1	; select bank1
  6786  01AD  0858               	movf	(efgtoa@u+3)^(0+128),w
  6787  01AE  0020               	movlb	0	; select bank0
  6788  01AF  00A7               	movwf	___flmul@a+3
  6789  01B0  0021               	movlb	1	; select bank1
  6790  01B1  0857               	movf	(efgtoa@u+2)^(0+128),w
  6791  01B2  0020               	movlb	0	; select bank0
  6792  01B3  00A6               	movwf	___flmul@a+2
  6793  01B4  0021               	movlb	1	; select bank1
  6794  01B5  0856               	movf	(efgtoa@u+1)^(0+128),w
  6795  01B6  0020               	movlb	0	; select bank0
  6796  01B7  00A5               	movwf	___flmul@a+1
  6797  01B8  0021               	movlb	1	; select bank1
  6798  01B9  0855               	movf	efgtoa@u^(0+128),w
  6799  01BA  0020               	movlb	0	; select bank0
  6800  01BB  00A4               	movwf	___flmul@a
  6801  01BC  318D  25D4  3180   	fcall	___flmul
  6802  01BF  0020               	movlb	0	; select bank0
  6803  01C0  0823               	movf	?___flmul+3,w
  6804  01C1  0021               	movlb	1	; select bank1
  6805  01C2  00D8               	movwf	(efgtoa@u+3)^(0+128)
  6806  01C3  0020               	movlb	0	; select bank0
  6807  01C4  0822               	movf	?___flmul+2,w
  6808  01C5  0021               	movlb	1	; select bank1
  6809  01C6  00D7               	movwf	(efgtoa@u+2)^(0+128)
  6810  01C7  0020               	movlb	0	; select bank0
  6811  01C8  0821               	movf	?___flmul+1,w
  6812  01C9  0021               	movlb	1	; select bank1
  6813  01CA  00D6               	movwf	(efgtoa@u+1)^(0+128)
  6814  01CB  0020               	movlb	0	; select bank0
  6815  01CC  0820               	movf	?___flmul,w
  6816  01CD  0021               	movlb	1	; select bank1
  6817  01CE  00D5               	movwf	efgtoa@u^(0+128)
  6818                           
  6819                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  6820  01CF  3001               	movlw	1
  6821  01D0  07D1               	addwf	efgtoa@e^(0+128),f
  6822  01D1  3000               	movlw	0
  6823  01D2  3DD2               	addwfc	(efgtoa@e+1)^(0+128),f
  6824  01D3                     l6371:	
  6825                           
  6826                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  6827  01D3  0021               	movlb	1	; select bank1
  6828  01D4  0850               	movf	(efgtoa@g+3)^(0+128),w
  6829  01D5  0020               	movlb	0	; select bank0
  6830  01D6  00BD               	movwf	___flge@ff1+3
  6831  01D7  0021               	movlb	1	; select bank1
  6832  01D8  084F               	movf	(efgtoa@g+2)^(0+128),w
  6833  01D9  0020               	movlb	0	; select bank0
  6834  01DA  00BC               	movwf	___flge@ff1+2
  6835  01DB  0021               	movlb	1	; select bank1
  6836  01DC  084E               	movf	(efgtoa@g+1)^(0+128),w
  6837  01DD  0020               	movlb	0	; select bank0
  6838  01DE  00BB               	movwf	___flge@ff1+1
  6839  01DF  0021               	movlb	1	; select bank1
  6840  01E0  084D               	movf	efgtoa@g^(0+128),w
  6841  01E1  0020               	movlb	0	; select bank0
  6842  01E2  00BA               	movwf	___flge@ff1
  6843  01E3  3041               	movlw	65
  6844  01E4  00A3               	movwf	___flmul@b+3
  6845  01E5  3020               	movlw	32
  6846  01E6  00A2               	movwf	___flmul@b+2
  6847  01E7  3000               	movlw	0
  6848  01E8  00A1               	movwf	___flmul@b+1
  6849  01E9  3000               	movlw	0
  6850  01EA  00A0               	movwf	___flmul@b
  6851  01EB  0021               	movlb	1	; select bank1
  6852  01EC  0858               	movf	(efgtoa@u+3)^(0+128),w
  6853  01ED  0020               	movlb	0	; select bank0
  6854  01EE  00A7               	movwf	___flmul@a+3
  6855  01EF  0021               	movlb	1	; select bank1
  6856  01F0  0857               	movf	(efgtoa@u+2)^(0+128),w
  6857  01F1  0020               	movlb	0	; select bank0
  6858  01F2  00A6               	movwf	___flmul@a+2
  6859  01F3  0021               	movlb	1	; select bank1
  6860  01F4  0856               	movf	(efgtoa@u+1)^(0+128),w
  6861  01F5  0020               	movlb	0	; select bank0
  6862  01F6  00A5               	movwf	___flmul@a+1
  6863  01F7  0021               	movlb	1	; select bank1
  6864  01F8  0855               	movf	efgtoa@u^(0+128),w
  6865  01F9  0020               	movlb	0	; select bank0
  6866  01FA  00A4               	movwf	___flmul@a
  6867  01FB  318D  25D4  3180   	fcall	___flmul
  6868  01FE  0020               	movlb	0	; select bank0
  6869  01FF  0823               	movf	?___flmul+3,w
  6870  0200  00C1               	movwf	___flge@ff2+3
  6871  0201  0822               	movf	?___flmul+2,w
  6872  0202  00C0               	movwf	___flge@ff2+2
  6873  0203  0821               	movf	?___flmul+1,w
  6874  0204  00BF               	movwf	___flge@ff2+1
  6875  0205  0820               	movf	?___flmul,w
  6876  0206  00BE               	movwf	___flge@ff2
  6877  0207  3196  262E  3180   	fcall	___flge
  6878  020A  1C03               	btfss	3,0
  6879  020B  2A3D               	goto	l6377
  6880  020C  29A3               	goto	l6367
  6881  020D                     l6373:	
  6882                           
  6883                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  6884  020D  3041               	movlw	65
  6885  020E  0020               	movlb	0	; select bank0
  6886  020F  00A9               	movwf	___fldiv@a+3
  6887  0210  3020               	movlw	32
  6888  0211  00A8               	movwf	___fldiv@a+2
  6889  0212  3000               	movlw	0
  6890  0213  00A7               	movwf	___fldiv@a+1
  6891  0214  3000               	movlw	0
  6892  0215  00A6               	movwf	___fldiv@a
  6893  0216  0021               	movlb	1	; select bank1
  6894  0217  0858               	movf	(efgtoa@u+3)^(0+128),w
  6895  0218  0020               	movlb	0	; select bank0
  6896  0219  00AD               	movwf	___fldiv@b+3
  6897  021A  0021               	movlb	1	; select bank1
  6898  021B  0857               	movf	(efgtoa@u+2)^(0+128),w
  6899  021C  0020               	movlb	0	; select bank0
  6900  021D  00AC               	movwf	___fldiv@b+2
  6901  021E  0021               	movlb	1	; select bank1
  6902  021F  0856               	movf	(efgtoa@u+1)^(0+128),w
  6903  0220  0020               	movlb	0	; select bank0
  6904  0221  00AB               	movwf	___fldiv@b+1
  6905  0222  0021               	movlb	1	; select bank1
  6906  0223  0855               	movf	efgtoa@u^(0+128),w
  6907  0224  0020               	movlb	0	; select bank0
  6908  0225  00AA               	movwf	___fldiv@b
  6909  0226  3188  20DF  3180   	fcall	___fldiv
  6910  0229  0020               	movlb	0	; select bank0
  6911  022A  0829               	movf	?___fldiv+3,w
  6912  022B  0021               	movlb	1	; select bank1
  6913  022C  00D8               	movwf	(efgtoa@u+3)^(0+128)
  6914  022D  0020               	movlb	0	; select bank0
  6915  022E  0828               	movf	?___fldiv+2,w
  6916  022F  0021               	movlb	1	; select bank1
  6917  0230  00D7               	movwf	(efgtoa@u+2)^(0+128)
  6918  0231  0020               	movlb	0	; select bank0
  6919  0232  0827               	movf	?___fldiv+1,w
  6920  0233  0021               	movlb	1	; select bank1
  6921  0234  00D6               	movwf	(efgtoa@u+1)^(0+128)
  6922  0235  0020               	movlb	0	; select bank0
  6923  0236  0826               	movf	?___fldiv,w
  6924  0237  0021               	movlb	1	; select bank1
  6925  0238  00D5               	movwf	efgtoa@u^(0+128)
  6926                           
  6927                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  6928  0239  30FF               	movlw	255
  6929  023A  07D1               	addwf	efgtoa@e^(0+128),f
  6930  023B  30FF               	movlw	255
  6931  023C  3DD2               	addwfc	(efgtoa@e+1)^(0+128),f
  6932  023D                     l6377:	
  6933                           
  6934                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  6935  023D  0021               	movlb	1	; select bank1
  6936  023E  0850               	movf	(efgtoa@g+3)^(0+128),w
  6937  023F  0020               	movlb	0	; select bank0
  6938  0240  00BD               	movwf	___flge@ff1+3
  6939  0241  0021               	movlb	1	; select bank1
  6940  0242  084F               	movf	(efgtoa@g+2)^(0+128),w
  6941  0243  0020               	movlb	0	; select bank0
  6942  0244  00BC               	movwf	___flge@ff1+2
  6943  0245  0021               	movlb	1	; select bank1
  6944  0246  084E               	movf	(efgtoa@g+1)^(0+128),w
  6945  0247  0020               	movlb	0	; select bank0
  6946  0248  00BB               	movwf	___flge@ff1+1
  6947  0249  0021               	movlb	1	; select bank1
  6948  024A  084D               	movf	efgtoa@g^(0+128),w
  6949  024B  0020               	movlb	0	; select bank0
  6950  024C  00BA               	movwf	___flge@ff1
  6951  024D  0021               	movlb	1	; select bank1
  6952  024E  0858               	movf	(efgtoa@u+3)^(0+128),w
  6953  024F  0020               	movlb	0	; select bank0
  6954  0250  00C1               	movwf	___flge@ff2+3
  6955  0251  0021               	movlb	1	; select bank1
  6956  0252  0857               	movf	(efgtoa@u+2)^(0+128),w
  6957  0253  0020               	movlb	0	; select bank0
  6958  0254  00C0               	movwf	___flge@ff2+2
  6959  0255  0021               	movlb	1	; select bank1
  6960  0256  0856               	movf	(efgtoa@u+1)^(0+128),w
  6961  0257  0020               	movlb	0	; select bank0
  6962  0258  00BF               	movwf	___flge@ff2+1
  6963  0259  0021               	movlb	1	; select bank1
  6964  025A  0855               	movf	efgtoa@u^(0+128),w
  6965  025B  0020               	movlb	0	; select bank0
  6966  025C  00BE               	movwf	___flge@ff2
  6967  025D  3196  262E  3180   	fcall	___flge
  6968  0260  1C03               	btfss	3,0
  6969  0261  2A0D               	goto	l6373
  6970  0262                     l6379:	
  6971                           
  6972                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  6973  0262  0020               	movlb	0	; select bank0
  6974  0263  0858               	movf	efgtoa@c,w
  6975  0264  00D9               	movwf	??_efgtoa
  6976  0265  01DA               	clrf	??_efgtoa+1
  6977  0266  0859               	movf	??_efgtoa,w
  6978  0267  00F7               	movwf	tolower@c
  6979  0268  085A               	movf	??_efgtoa+1,w
  6980  0269  00F8               	movwf	tolower@c+1
  6981  026A  3190  20DC  3180   	fcall	_tolower
  6982  026D  0877               	movf	?_tolower,w
  6983  026E  0020               	movlb	0	; select bank0
  6984  026F  00DB               	movwf	??_efgtoa+2
  6985  0270  085B               	movf	??_efgtoa+2,w
  6986  0271  0021               	movlb	1	; select bank1
  6987  0272  00C2               	movwf	efgtoa@mode^(0+128)
  6988                           
  6989                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  6990  0273  0842               	movf	efgtoa@mode^(0+128),w
  6991  0274  0020               	movlb	0	; select bank0
  6992  0275  00D9               	movwf	??_efgtoa
  6993  0276  0859               	movf	??_efgtoa,w
  6994  0277  0021               	movlb	1	; select bank1
  6995  0278  00BF               	movwf	efgtoa@nmode^(0+128)
  6996                           
  6997                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  6998  0279  3067               	movlw	103
  6999  027A  0642               	xorwf	efgtoa@mode^(0+128),w
  7000  027B  1D03               	btfss	3,2
  7001  027C  2A99               	goto	l1055
  7002                           
  7003                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  7004  027D  0022               	movlb	2	; select bank2
  7005  027E  0858               	movf	_prec^(0+256),w
  7006  027F  0459               	iorwf	(_prec+1)^(0+256),w
  7007  0280  1D03               	btfss	3,2
  7008  0281  2A86               	goto	l1056
  7009                           
  7010                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  7011  0282  3001               	movlw	1
  7012  0283  00D8               	movwf	_prec^(0+256)
  7013  0284  3000               	movlw	0
  7014  0285  00D9               	movwf	(_prec^(0+256)+1)
  7015  0286                     l1056:	
  7016                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 382:   }
  7017                           
  7018                           
  7019                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  7020  0286  0859               	movf	(_prec+1)^(0+256),w
  7021  0287  3A80               	xorlw	128
  7022  0288  0020               	movlb	0	; select bank0
  7023  0289  00D9               	movwf	??_efgtoa
  7024  028A  3080               	movlw	128
  7025  028B  0259               	subwf	??_efgtoa,w
  7026  028C  1D03               	skipz
  7027  028D  2A91               	goto	u6875
  7028  028E  3001               	movlw	1
  7029  028F  0022               	movlb	2	; select bank2
  7030  0290  0258               	subwf	_prec^(0+256),w
  7031  0291                     u6875:	
  7032  0291  1803               	skipnc
  7033  0292  2A9C               	goto	l6391
  7034  0293                     l6389:	
  7035  0293  3006               	movlw	6
  7036  0294  0021               	movlb	1	; select bank1
  7037  0295  00BD               	movwf	efgtoa@p^(0+128)
  7038  0296  3000               	movlw	0
  7039  0297  00BE               	movwf	(efgtoa@p^(0+128)+1)
  7040  0298  2AA4               	goto	l6397
  7041  0299                     l1055:	
  7042                           
  7043                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  7044  0299  0022               	movlb	2	; select bank2
  7045  029A  1BD9               	btfsc	(_prec+1)^(0+256),7
  7046  029B  2A93               	goto	l6389
  7047  029C                     l6391:	
  7048  029C  0022               	movlb	2	; select bank2
  7049  029D  0859               	movf	(_prec+1)^(0+256),w
  7050  029E  0021               	movlb	1	; select bank1
  7051  029F  00BE               	movwf	(efgtoa@p+1)^(0+128)
  7052  02A0  0022               	movlb	2	; select bank2
  7053  02A1  0858               	movf	_prec^(0+256),w
  7054  02A2  0021               	movlb	1	; select bank1
  7055  02A3  00BD               	movwf	efgtoa@p^(0+128)
  7056  02A4                     l6397:	
  7057                           
  7058                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  7059  02A4  3067               	movlw	103
  7060  02A5  0642               	xorwf	efgtoa@mode^(0+128),w
  7061  02A6  1D03               	btfss	3,2
  7062  02A7  2AD7               	goto	l1066
  7063                           
  7064                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  7065  02A8  0852               	movf	(efgtoa@e+1)^(0+128),w
  7066  02A9  3A80               	xorlw	128
  7067  02AA  0020               	movlb	0	; select bank0
  7068  02AB  00D9               	movwf	??_efgtoa
  7069  02AC  307F               	movlw	127
  7070  02AD  0259               	subwf	??_efgtoa,w
  7071  02AE  1D03               	skipz
  7072  02AF  2AB3               	goto	u6905
  7073  02B0  30FC               	movlw	252
  7074  02B1  0021               	movlb	1	; select bank1
  7075  02B2  0251               	subwf	efgtoa@e^(0+128),w
  7076  02B3                     u6905:	
  7077  02B3  1C03               	skipc
  7078  02B4  2AD1               	goto	l6405
  7079  02B5  0021               	movlb	1	; select bank1
  7080  02B6  083D               	movf	efgtoa@p^(0+128),w
  7081  02B7  3EFF               	addlw	255
  7082  02B8  0020               	movlb	0	; select bank0
  7083  02B9  00D9               	movwf	??_efgtoa
  7084  02BA  30FF               	movlw	255
  7085  02BB  0021               	movlb	1	; select bank1
  7086  02BC  3D3E               	addwfc	(efgtoa@p+1)^(0+128),w
  7087  02BD  0020               	movlb	0	; select bank0
  7088  02BE  00DA               	movwf	??_efgtoa+1
  7089  02BF  085A               	movf	??_efgtoa+1,w
  7090  02C0  3A80               	xorlw	128
  7091  02C1  00DB               	movwf	??_efgtoa+2
  7092  02C2  0021               	movlb	1	; select bank1
  7093  02C3  0852               	movf	(efgtoa@e+1)^(0+128),w
  7094  02C4  3A80               	xorlw	128
  7095  02C5  0020               	movlb	0	; select bank0
  7096  02C6  025B               	subwf	??_efgtoa+2,w
  7097  02C7  1D03               	skipz
  7098  02C8  2ACD               	goto	u6915
  7099  02C9  0021               	movlb	1	; select bank1
  7100  02CA  0851               	movf	efgtoa@e^(0+128),w
  7101  02CB  0020               	movlb	0	; select bank0
  7102  02CC  0259               	subwf	??_efgtoa,w
  7103  02CD                     u6915:	
  7104  02CD  1C03               	skipc
  7105  02CE  2AD1               	goto	l6405
  7106                           
  7107                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  7108  02CF  3066               	movlw	102
  7109  02D0  2AD2               	goto	L5
  7110  02D1                     l6405:	
  7111                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  7112                           
  7113                           
  7114                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  7115  02D1  3065               	movlw	101
  7116  02D2                     L5:	
  7117  02D2  0020               	movlb	0	; select bank0
  7118  02D3  00D9               	movwf	??_efgtoa
  7119  02D4  0859               	movf	??_efgtoa,w
  7120  02D5  0021               	movlb	1	; select bank1
  7121  02D6  00BF               	movwf	efgtoa@nmode^(0+128)
  7122  02D7                     l1066:	
  7123                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 395:     }
  7124                           
  7125                           
  7126                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  7127  02D7  083E               	movf	(efgtoa@p+1)^(0+128),w
  7128  02D8  00B5               	movwf	(efgtoa@m+1)^(0+128)
  7129  02D9  083D               	movf	efgtoa@p^(0+128),w
  7130  02DA  00B4               	movwf	efgtoa@m^(0+128)
  7131                           
  7132                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  7133  02DB  3067               	movlw	103
  7134  02DC  0642               	xorwf	efgtoa@mode^(0+128),w
  7135  02DD  1D03               	btfss	3,2
  7136  02DE  2AE4               	goto	l6413
  7137  02DF  3066               	movlw	102
  7138  02E0  063F               	xorwf	efgtoa@nmode^(0+128),w
  7139  02E1  1903               	btfsc	3,2
  7140  02E2  1FD2               	btfss	(efgtoa@e+1)^(0+128),7
  7141  02E3  2AE8               	goto	l6415
  7142  02E4                     l6413:	
  7143                           
  7144                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  7145  02E4  3001               	movlw	1
  7146  02E5  07B4               	addwf	efgtoa@m^(0+128),f
  7147  02E6  3000               	movlw	0
  7148  02E7  3DB5               	addwfc	(efgtoa@m+1)^(0+128),f
  7149  02E8                     l6415:	
  7150                           
  7151                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  7152  02E8  3066               	movlw	102
  7153  02E9  063F               	xorwf	efgtoa@nmode^(0+128),w
  7154  02EA  1D03               	btfss	3,2
  7155  02EB  2B00               	goto	l6427
  7156                           
  7157                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  7158  02EC  1FD2               	btfss	(efgtoa@e+1)^(0+128),7
  7159  02ED  2AF8               	goto	l6423
  7160                           
  7161                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  7162  02EE  303F               	movlw	63
  7163  02EF  00D8               	movwf	(efgtoa@u+3)^(0+128)
  7164  02F0  3080               	movlw	128
  7165  02F1  00D7               	movwf	(efgtoa@u+2)^(0+128)
  7166  02F2  3000               	movlw	0
  7167  02F3  00D6               	movwf	(efgtoa@u+1)^(0+128)
  7168  02F4  3000               	movlw	0
  7169  02F5  00D5               	movwf	efgtoa@u^(0+128)
  7170                           
  7171                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  7172  02F6  01D1               	clrf	efgtoa@e^(0+128)
  7173  02F7  01D2               	clrf	(efgtoa@e+1)^(0+128)
  7174  02F8                     l6423:	
  7175                           
  7176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  7177  02F8  3067               	movlw	103
  7178  02F9  0642               	xorwf	efgtoa@mode^(0+128),w
  7179  02FA  1903               	btfsc	3,2
  7180  02FB  2B00               	goto	l6427
  7181                           
  7182                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  7183  02FC  0851               	movf	efgtoa@e^(0+128),w
  7184  02FD  07B4               	addwf	efgtoa@m^(0+128),f
  7185  02FE  0852               	movf	(efgtoa@e+1)^(0+128),w
  7186  02FF  3DB5               	addwfc	(efgtoa@m+1)^(0+128),f
  7187  0300                     l6427:	
  7188                           
  7189                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  7190  0300  01CB               	clrf	efgtoa@i^(0+128)
  7191  0301  01CC               	clrf	(efgtoa@i+1)^(0+128)
  7192                           
  7193                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  7194  0302  0850               	movf	(efgtoa@g+3)^(0+128),w
  7195  0303  00C6               	movwf	(efgtoa@h+3)^(0+128)
  7196  0304  084F               	movf	(efgtoa@g+2)^(0+128),w
  7197  0305  00C5               	movwf	(efgtoa@h+2)^(0+128)
  7198  0306  084E               	movf	(efgtoa@g+1)^(0+128),w
  7199  0307  00C4               	movwf	(efgtoa@h+1)^(0+128)
  7200  0308  084D               	movf	efgtoa@g^(0+128),w
  7201  0309  00C3               	movwf	efgtoa@h^(0+128)
  7202                           
  7203                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  7204  030A  0858               	movf	(efgtoa@u+3)^(0+128),w
  7205  030B  00A3               	movwf	(efgtoa@ou+3)^(0+128)
  7206  030C  0857               	movf	(efgtoa@u+2)^(0+128),w
  7207  030D  00A2               	movwf	(efgtoa@ou+2)^(0+128)
  7208  030E  0856               	movf	(efgtoa@u+1)^(0+128),w
  7209  030F  00A1               	movwf	(efgtoa@ou+1)^(0+128)
  7210  0310  0855               	movf	efgtoa@u^(0+128),w
  7211  0311  00A0               	movwf	efgtoa@ou^(0+128)
  7212  0312                     l6437:	
  7213                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  7214                           
  7215                           
  7216                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  7217  0312  084C               	movf	(efgtoa@i+1)^(0+128),w
  7218  0313  3A80               	xorlw	128
  7219  0314  0020               	movlb	0	; select bank0
  7220  0315  00D9               	movwf	??_efgtoa
  7221  0316  0021               	movlb	1	; select bank1
  7222  0317  0835               	movf	(efgtoa@m+1)^(0+128),w
  7223  0318  3A80               	xorlw	128
  7224  0319  0020               	movlb	0	; select bank0
  7225  031A  0259               	subwf	??_efgtoa,w
  7226  031B  1D03               	skipz
  7227  031C  2B20               	goto	u6985
  7228  031D  0021               	movlb	1	; select bank1
  7229  031E  0834               	movf	efgtoa@m^(0+128),w
  7230  031F  024B               	subwf	efgtoa@i^(0+128),w
  7231  0320                     u6985:	
  7232  0320  1803               	btfsc	3,0
  7233  0321  2BF0               	goto	l6439
  7234                           
  7235                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  7236  0322  0021               	movlb	1	; select bank1
  7237  0323  0858               	movf	(efgtoa@u+3)^(0+128),w
  7238  0324  0020               	movlb	0	; select bank0
  7239  0325  00A9               	movwf	___fldiv@a+3
  7240  0326  0021               	movlb	1	; select bank1
  7241  0327  0857               	movf	(efgtoa@u+2)^(0+128),w
  7242  0328  0020               	movlb	0	; select bank0
  7243  0329  00A8               	movwf	___fldiv@a+2
  7244  032A  0021               	movlb	1	; select bank1
  7245  032B  0856               	movf	(efgtoa@u+1)^(0+128),w
  7246  032C  0020               	movlb	0	; select bank0
  7247  032D  00A7               	movwf	___fldiv@a+1
  7248  032E  0021               	movlb	1	; select bank1
  7249  032F  0855               	movf	efgtoa@u^(0+128),w
  7250  0330  0020               	movlb	0	; select bank0
  7251  0331  00A6               	movwf	___fldiv@a
  7252  0332  0021               	movlb	1	; select bank1
  7253  0333  0846               	movf	(efgtoa@h+3)^(0+128),w
  7254  0334  0020               	movlb	0	; select bank0
  7255  0335  00AD               	movwf	___fldiv@b+3
  7256  0336  0021               	movlb	1	; select bank1
  7257  0337  0845               	movf	(efgtoa@h+2)^(0+128),w
  7258  0338  0020               	movlb	0	; select bank0
  7259  0339  00AC               	movwf	___fldiv@b+2
  7260  033A  0021               	movlb	1	; select bank1
  7261  033B  0844               	movf	(efgtoa@h+1)^(0+128),w
  7262  033C  0020               	movlb	0	; select bank0
  7263  033D  00AB               	movwf	___fldiv@b+1
  7264  033E  0021               	movlb	1	; select bank1
  7265  033F  0843               	movf	efgtoa@h^(0+128),w
  7266  0340  0020               	movlb	0	; select bank0
  7267  0341  00AA               	movwf	___fldiv@b
  7268  0342  3188  20DF  3180   	fcall	___fldiv
  7269  0345  0020               	movlb	0	; select bank0
  7270  0346  0829               	movf	?___fldiv+3,w
  7271  0347  00C3               	movwf	floorf@x+3
  7272  0348  0828               	movf	?___fldiv+2,w
  7273  0349  00C2               	movwf	floorf@x+2
  7274  034A  0827               	movf	?___fldiv+1,w
  7275  034B  00C1               	movwf	floorf@x+1
  7276  034C  0826               	movf	?___fldiv,w
  7277  034D  00C0               	movwf	floorf@x
  7278  034E  3186  26F1  3180   	fcall	_floorf
  7279  0351  0020               	movlb	0	; select bank0
  7280  0352  0843               	movf	?_floorf+3,w
  7281  0353  0021               	movlb	1	; select bank1
  7282  0354  00CA               	movwf	(efgtoa@l+3)^(0+128)
  7283  0355  0020               	movlb	0	; select bank0
  7284  0356  0842               	movf	?_floorf+2,w
  7285  0357  0021               	movlb	1	; select bank1
  7286  0358  00C9               	movwf	(efgtoa@l+2)^(0+128)
  7287  0359  0020               	movlb	0	; select bank0
  7288  035A  0841               	movf	?_floorf+1,w
  7289  035B  0021               	movlb	1	; select bank1
  7290  035C  00C8               	movwf	(efgtoa@l+1)^(0+128)
  7291  035D  0020               	movlb	0	; select bank0
  7292  035E  0840               	movf	?_floorf,w
  7293  035F  0021               	movlb	1	; select bank1
  7294  0360  00C7               	movwf	efgtoa@l^(0+128)
  7295                           
  7296                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  7297  0361  084A               	movf	(efgtoa@l+3)^(0+128),w
  7298  0362  00F4               	movwf	___fltol@f1+3
  7299  0363  0849               	movf	(efgtoa@l+2)^(0+128),w
  7300  0364  00F3               	movwf	___fltol@f1+2
  7301  0365  0848               	movf	(efgtoa@l+1)^(0+128),w
  7302  0366  00F2               	movwf	___fltol@f1+1
  7303  0367  0847               	movf	efgtoa@l^(0+128),w
  7304  0368  00F1               	movwf	___fltol@f1
  7305  0369  3195  2551  3180   	fcall	___fltol
  7306  036C  0872               	movf	?___fltol+1,w
  7307  036D  0021               	movlb	1	; select bank1
  7308  036E  00B9               	movwf	(efgtoa@d+1)^(0+128)
  7309  036F  0871               	movf	?___fltol,w
  7310  0370  00B8               	movwf	efgtoa@d^(0+128)
  7311                           
  7312                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  7313  0371  084A               	movf	(efgtoa@l+3)^(0+128),w
  7314  0372  0020               	movlb	0	; select bank0
  7315  0373  00A7               	movwf	___flmul@a+3
  7316  0374  0021               	movlb	1	; select bank1
  7317  0375  0849               	movf	(efgtoa@l+2)^(0+128),w
  7318  0376  0020               	movlb	0	; select bank0
  7319  0377  00A6               	movwf	___flmul@a+2
  7320  0378  0021               	movlb	1	; select bank1
  7321  0379  0848               	movf	(efgtoa@l+1)^(0+128),w
  7322  037A  0020               	movlb	0	; select bank0
  7323  037B  00A5               	movwf	___flmul@a+1
  7324  037C  0021               	movlb	1	; select bank1
  7325  037D  0847               	movf	efgtoa@l^(0+128),w
  7326  037E  0020               	movlb	0	; select bank0
  7327  037F  00A4               	movwf	___flmul@a
  7328  0380  0021               	movlb	1	; select bank1
  7329  0381  0858               	movf	(efgtoa@u+3)^(0+128),w
  7330  0382  0020               	movlb	0	; select bank0
  7331  0383  00A3               	movwf	___flmul@b+3
  7332  0384  0021               	movlb	1	; select bank1
  7333  0385  0857               	movf	(efgtoa@u+2)^(0+128),w
  7334  0386  0020               	movlb	0	; select bank0
  7335  0387  00A2               	movwf	___flmul@b+2
  7336  0388  0021               	movlb	1	; select bank1
  7337  0389  0856               	movf	(efgtoa@u+1)^(0+128),w
  7338  038A  0020               	movlb	0	; select bank0
  7339  038B  00A1               	movwf	___flmul@b+1
  7340  038C  0021               	movlb	1	; select bank1
  7341  038D  0855               	movf	efgtoa@u^(0+128),w
  7342  038E  0020               	movlb	0	; select bank0
  7343  038F  00A0               	movwf	___flmul@b
  7344  0390  318D  25D4  3180   	fcall	___flmul
  7345  0393  0020               	movlb	0	; select bank0
  7346  0394  0823               	movf	?___flmul+3,w
  7347  0395  00BD               	movwf	___flsub@a+3
  7348  0396  0822               	movf	?___flmul+2,w
  7349  0397  00BC               	movwf	___flsub@a+2
  7350  0398  0821               	movf	?___flmul+1,w
  7351  0399  00BB               	movwf	___flsub@a+1
  7352  039A  0820               	movf	?___flmul,w
  7353  039B  00BA               	movwf	___flsub@a
  7354  039C  0021               	movlb	1	; select bank1
  7355  039D  0846               	movf	(efgtoa@h+3)^(0+128),w
  7356  039E  0020               	movlb	0	; select bank0
  7357  039F  00C1               	movwf	___flsub@b+3
  7358  03A0  0021               	movlb	1	; select bank1
  7359  03A1  0845               	movf	(efgtoa@h+2)^(0+128),w
  7360  03A2  0020               	movlb	0	; select bank0
  7361  03A3  00C0               	movwf	___flsub@b+2
  7362  03A4  0021               	movlb	1	; select bank1
  7363  03A5  0844               	movf	(efgtoa@h+1)^(0+128),w
  7364  03A6  0020               	movlb	0	; select bank0
  7365  03A7  00BF               	movwf	___flsub@b+1
  7366  03A8  0021               	movlb	1	; select bank1
  7367  03A9  0843               	movf	efgtoa@h^(0+128),w
  7368  03AA  0020               	movlb	0	; select bank0
  7369  03AB  00BE               	movwf	___flsub@b
  7370  03AC  3190  207E  3180   	fcall	___flsub
  7371  03AF  0020               	movlb	0	; select bank0
  7372  03B0  083D               	movf	?___flsub+3,w
  7373  03B1  0021               	movlb	1	; select bank1
  7374  03B2  00C6               	movwf	(efgtoa@h+3)^(0+128)
  7375  03B3  0020               	movlb	0	; select bank0
  7376  03B4  083C               	movf	?___flsub+2,w
  7377  03B5  0021               	movlb	1	; select bank1
  7378  03B6  00C5               	movwf	(efgtoa@h+2)^(0+128)
  7379  03B7  0020               	movlb	0	; select bank0
  7380  03B8  083B               	movf	?___flsub+1,w
  7381  03B9  0021               	movlb	1	; select bank1
  7382  03BA  00C4               	movwf	(efgtoa@h+1)^(0+128)
  7383  03BB  0020               	movlb	0	; select bank0
  7384  03BC  083A               	movf	?___flsub,w
  7385  03BD  0021               	movlb	1	; select bank1
  7386  03BE  00C3               	movwf	efgtoa@h^(0+128)
  7387                           
  7388                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  7389  03BF  3041               	movlw	65
  7390  03C0  0020               	movlb	0	; select bank0
  7391  03C1  00A9               	movwf	___fldiv@a+3
  7392  03C2  3020               	movlw	32
  7393  03C3  00A8               	movwf	___fldiv@a+2
  7394  03C4  3000               	movlw	0
  7395  03C5  00A7               	movwf	___fldiv@a+1
  7396  03C6  3000               	movlw	0
  7397  03C7  00A6               	movwf	___fldiv@a
  7398  03C8  0021               	movlb	1	; select bank1
  7399  03C9  0858               	movf	(efgtoa@u+3)^(0+128),w
  7400  03CA  0020               	movlb	0	; select bank0
  7401  03CB  00AD               	movwf	___fldiv@b+3
  7402  03CC  0021               	movlb	1	; select bank1
  7403  03CD  0857               	movf	(efgtoa@u+2)^(0+128),w
  7404  03CE  0020               	movlb	0	; select bank0
  7405  03CF  00AC               	movwf	___fldiv@b+2
  7406  03D0  0021               	movlb	1	; select bank1
  7407  03D1  0856               	movf	(efgtoa@u+1)^(0+128),w
  7408  03D2  0020               	movlb	0	; select bank0
  7409  03D3  00AB               	movwf	___fldiv@b+1
  7410  03D4  0021               	movlb	1	; select bank1
  7411  03D5  0855               	movf	efgtoa@u^(0+128),w
  7412  03D6  0020               	movlb	0	; select bank0
  7413  03D7  00AA               	movwf	___fldiv@b
  7414  03D8  3188  20DF  3180   	fcall	___fldiv
  7415  03DB  0020               	movlb	0	; select bank0
  7416  03DC  0829               	movf	?___fldiv+3,w
  7417  03DD  0021               	movlb	1	; select bank1
  7418  03DE  00D8               	movwf	(efgtoa@u+3)^(0+128)
  7419  03DF  0020               	movlb	0	; select bank0
  7420  03E0  0828               	movf	?___fldiv+2,w
  7421  03E1  0021               	movlb	1	; select bank1
  7422  03E2  00D7               	movwf	(efgtoa@u+2)^(0+128)
  7423  03E3  0020               	movlb	0	; select bank0
  7424  03E4  0827               	movf	?___fldiv+1,w
  7425  03E5  0021               	movlb	1	; select bank1
  7426  03E6  00D6               	movwf	(efgtoa@u+1)^(0+128)
  7427  03E7  0020               	movlb	0	; select bank0
  7428  03E8  0826               	movf	?___fldiv,w
  7429  03E9  0021               	movlb	1	; select bank1
  7430  03EA  00D5               	movwf	efgtoa@u^(0+128)
  7431                           
  7432                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  7433  03EB  3001               	movlw	1
  7434  03EC  07CB               	addwf	efgtoa@i^(0+128),f
  7435  03ED  3000               	movlw	0
  7436  03EE  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  7437  03EF  2B12               	goto	l6437
  7438  03F0                     l6439:	
  7439                           
  7440                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  7441  03F0  3040               	movlw	64
  7442  03F1  0020               	movlb	0	; select bank0
  7443  03F2  00A3               	movwf	___flmul@b+3
  7444  03F3  30A0               	movlw	160
  7445  03F4  00A2               	movwf	___flmul@b+2
  7446  03F5  3000               	movlw	0
  7447  03F6  00A1               	movwf	___flmul@b+1
  7448  03F7  3000               	movlw	0
  7449  03F8  00A0               	movwf	___flmul@b
  7450  03F9  0021               	movlb	1	; select bank1
  7451  03FA  0858               	movf	(efgtoa@u+3)^(0+128),w
  7452  03FB  0020               	movlb	0	; select bank0
  7453  03FC  00A7               	movwf	___flmul@a+3
  7454  03FD  0021               	movlb	1	; select bank1
  7455  03FE  0857               	movf	(efgtoa@u+2)^(0+128),w
  7456  03FF  0020               	movlb	0	; select bank0
  7457  0400  00A6               	movwf	___flmul@a+2
  7458  0401  0021               	movlb	1	; select bank1
  7459  0402  0856               	movf	(efgtoa@u+1)^(0+128),w
  7460  0403  0020               	movlb	0	; select bank0
  7461  0404  00A5               	movwf	___flmul@a+1
  7462  0405  0021               	movlb	1	; select bank1
  7463  0406  0855               	movf	efgtoa@u^(0+128),w
  7464  0407  0020               	movlb	0	; select bank0
  7465  0408  00A4               	movwf	___flmul@a
  7466  0409  318D  25D4  3180   	fcall	___flmul
  7467  040C  0020               	movlb	0	; select bank0
  7468  040D  0823               	movf	?___flmul+3,w
  7469  040E  0021               	movlb	1	; select bank1
  7470  040F  00CA               	movwf	(efgtoa@l+3)^(0+128)
  7471  0410  0020               	movlb	0	; select bank0
  7472  0411  0822               	movf	?___flmul+2,w
  7473  0412  0021               	movlb	1	; select bank1
  7474  0413  00C9               	movwf	(efgtoa@l+2)^(0+128)
  7475  0414  0020               	movlb	0	; select bank0
  7476  0415  0821               	movf	?___flmul+1,w
  7477  0416  0021               	movlb	1	; select bank1
  7478  0417  00C8               	movwf	(efgtoa@l+1)^(0+128)
  7479  0418  0020               	movlb	0	; select bank0
  7480  0419  0820               	movf	?___flmul,w
  7481  041A  0021               	movlb	1	; select bank1
  7482  041B  00C7               	movwf	efgtoa@l^(0+128)
  7483                           
  7484                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  7485  041C  0846               	movf	(efgtoa@h+3)^(0+128),w
  7486  041D  0020               	movlb	0	; select bank0
  7487  041E  00BD               	movwf	___flge@ff1+3
  7488  041F  0021               	movlb	1	; select bank1
  7489  0420  0845               	movf	(efgtoa@h+2)^(0+128),w
  7490  0421  0020               	movlb	0	; select bank0
  7491  0422  00BC               	movwf	___flge@ff1+2
  7492  0423  0021               	movlb	1	; select bank1
  7493  0424  0844               	movf	(efgtoa@h+1)^(0+128),w
  7494  0425  0020               	movlb	0	; select bank0
  7495  0426  00BB               	movwf	___flge@ff1+1
  7496  0427  0021               	movlb	1	; select bank1
  7497  0428  0843               	movf	efgtoa@h^(0+128),w
  7498  0429  0020               	movlb	0	; select bank0
  7499  042A  00BA               	movwf	___flge@ff1
  7500  042B  0021               	movlb	1	; select bank1
  7501  042C  084A               	movf	(efgtoa@l+3)^(0+128),w
  7502  042D  0020               	movlb	0	; select bank0
  7503  042E  00C1               	movwf	___flge@ff2+3
  7504  042F  0021               	movlb	1	; select bank1
  7505  0430  0849               	movf	(efgtoa@l+2)^(0+128),w
  7506  0431  0020               	movlb	0	; select bank0
  7507  0432  00C0               	movwf	___flge@ff2+2
  7508  0433  0021               	movlb	1	; select bank1
  7509  0434  0848               	movf	(efgtoa@l+1)^(0+128),w
  7510  0435  0020               	movlb	0	; select bank0
  7511  0436  00BF               	movwf	___flge@ff2+1
  7512  0437  0021               	movlb	1	; select bank1
  7513  0438  0847               	movf	efgtoa@l^(0+128),w
  7514  0439  0020               	movlb	0	; select bank0
  7515  043A  00BE               	movwf	___flge@ff2
  7516  043B  3196  262E  3180   	fcall	___flge
  7517  043E  1803               	btfsc	3,0
  7518  043F  2C43               	goto	l6443
  7519                           
  7520                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  7521  0440  3000               	movlw	0
  7522  0441  0021               	movlb	1	; select bank1
  7523  0442  2C5D               	goto	L6
  7524  0443                     l6443:	
  7525                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  7526                           
  7527                           
  7528                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  7529  0443  0021               	movlb	1	; select bank1
  7530  0444  0846               	movf	(efgtoa@h+3)^(0+128),w
  7531  0445  00F4               	movwf	___fleq@ff1+3
  7532  0446  0845               	movf	(efgtoa@h+2)^(0+128),w
  7533  0447  00F3               	movwf	___fleq@ff1+2
  7534  0448  0844               	movf	(efgtoa@h+1)^(0+128),w
  7535  0449  00F2               	movwf	___fleq@ff1+1
  7536  044A  0843               	movf	efgtoa@h^(0+128),w
  7537  044B  00F1               	movwf	___fleq@ff1
  7538  044C  084A               	movf	(efgtoa@l+3)^(0+128),w
  7539  044D  00F8               	movwf	___fleq@ff2+3
  7540  044E  0849               	movf	(efgtoa@l+2)^(0+128),w
  7541  044F  00F7               	movwf	___fleq@ff2+2
  7542  0450  0848               	movf	(efgtoa@l+1)^(0+128),w
  7543  0451  00F6               	movwf	___fleq@ff2+1
  7544  0452  0847               	movf	efgtoa@l^(0+128),w
  7545  0453  00F5               	movwf	___fleq@ff2
  7546  0454  3188  2000  3180   	fcall	___fleq
  7547  0457  1C03               	btfss	3,0
  7548  0458  2C64               	goto	l6449
  7549  0459  0021               	movlb	1	; select bank1
  7550  045A  1838               	btfsc	efgtoa@d^(0+128),0
  7551  045B  2C64               	goto	l6449
  7552                           
  7553                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  7554  045C  3000               	movlw	0
  7555  045D                     L6:	
  7556  045D  00CA               	movwf	(efgtoa@l+3)^(0+128)
  7557  045E  3000               	movlw	0
  7558  045F  00C9               	movwf	(efgtoa@l+2)^(0+128)
  7559  0460  3000               	movlw	0
  7560  0461  00C8               	movwf	(efgtoa@l+1)^(0+128)
  7561  0462  3000               	movlw	0
  7562  0463  00C7               	movwf	efgtoa@l^(0+128)
  7563  0464                     l6449:	
  7564                           
  7565                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  7566  0464  0021               	movlb	1	; select bank1
  7567  0465  084A               	movf	(efgtoa@l+3)^(0+128),w
  7568  0466  00F4               	movwf	___fladd@b+3
  7569  0467  0849               	movf	(efgtoa@l+2)^(0+128),w
  7570  0468  00F3               	movwf	___fladd@b+2
  7571  0469  0848               	movf	(efgtoa@l+1)^(0+128),w
  7572  046A  00F2               	movwf	___fladd@b+1
  7573  046B  0847               	movf	efgtoa@l^(0+128),w
  7574  046C  00F1               	movwf	___fladd@b
  7575  046D  0850               	movf	(efgtoa@g+3)^(0+128),w
  7576  046E  00F8               	movwf	___fladd@a+3
  7577  046F  084F               	movf	(efgtoa@g+2)^(0+128),w
  7578  0470  00F7               	movwf	___fladd@a+2
  7579  0471  084E               	movf	(efgtoa@g+1)^(0+128),w
  7580  0472  00F6               	movwf	___fladd@a+1
  7581  0473  084D               	movf	efgtoa@g^(0+128),w
  7582  0474  00F5               	movwf	___fladd@a
  7583  0475  318B  23F2  3180   	fcall	___fladd
  7584  0478  0874               	movf	?___fladd+3,w
  7585  0479  0021               	movlb	1	; select bank1
  7586  047A  00C6               	movwf	(efgtoa@h+3)^(0+128)
  7587  047B  0873               	movf	?___fladd+2,w
  7588  047C  00C5               	movwf	(efgtoa@h+2)^(0+128)
  7589  047D  0872               	movf	?___fladd+1,w
  7590  047E  00C4               	movwf	(efgtoa@h+1)^(0+128)
  7591  047F  0871               	movf	?___fladd,w
  7592  0480  00C3               	movwf	efgtoa@h^(0+128)
  7593                           
  7594                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  7595  0481  0823               	movf	(efgtoa@ou+3)^(0+128),w
  7596  0482  00D8               	movwf	(efgtoa@u+3)^(0+128)
  7597  0483  0822               	movf	(efgtoa@ou+2)^(0+128),w
  7598  0484  00D7               	movwf	(efgtoa@u+2)^(0+128)
  7599  0485  0821               	movf	(efgtoa@ou+1)^(0+128),w
  7600  0486  00D6               	movwf	(efgtoa@u+1)^(0+128)
  7601  0487  0820               	movf	efgtoa@ou^(0+128),w
  7602  0488  00D5               	movwf	efgtoa@u^(0+128)
  7603                           
  7604                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  7605  0489  3065               	movlw	101
  7606  048A  063F               	xorwf	efgtoa@nmode^(0+128),w
  7607  048B  1903               	btfsc	3,2
  7608  048C  2C92               	goto	l6457
  7609  048D  0852               	movf	(efgtoa@e+1)^(0+128),w
  7610  048E  00B7               	movwf	(efgtoa@ne+1)^(0+128)
  7611  048F  0851               	movf	efgtoa@e^(0+128),w
  7612  0490  00B6               	movwf	efgtoa@ne^(0+128)
  7613  0491  2C94               	goto	l1084
  7614  0492                     l6457:	
  7615  0492  01B6               	clrf	efgtoa@ne^(0+128)
  7616  0493  01B7               	clrf	(efgtoa@ne+1)^(0+128)
  7617  0494                     l1084:	
  7618                           
  7619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  7620  0494  01B2               	clrf	efgtoa@pp^(0+128)
  7621  0495  01B3               	clrf	(efgtoa@pp+1)^(0+128)
  7622                           
  7623                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  7624  0496  01B0               	clrf	efgtoa@t^(0+128)
  7625  0497  01B1               	clrf	(efgtoa@t+1)^(0+128)
  7626                           
  7627                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  7628  0498  01CB               	clrf	efgtoa@i^(0+128)
  7629  0499  01CC               	clrf	(efgtoa@i+1)^(0+128)
  7630                           
  7631                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  7632  049A  2DD1               	goto	l6507
  7633  049B                     l6459:	
  7634                           
  7635                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  7636  049B  0021               	movlb	1	; select bank1
  7637  049C  0858               	movf	(efgtoa@u+3)^(0+128),w
  7638  049D  0020               	movlb	0	; select bank0
  7639  049E  00A9               	movwf	___fldiv@a+3
  7640  049F  0021               	movlb	1	; select bank1
  7641  04A0  0857               	movf	(efgtoa@u+2)^(0+128),w
  7642  04A1  0020               	movlb	0	; select bank0
  7643  04A2  00A8               	movwf	___fldiv@a+2
  7644  04A3  0021               	movlb	1	; select bank1
  7645  04A4  0856               	movf	(efgtoa@u+1)^(0+128),w
  7646  04A5  0020               	movlb	0	; select bank0
  7647  04A6  00A7               	movwf	___fldiv@a+1
  7648  04A7  0021               	movlb	1	; select bank1
  7649  04A8  0855               	movf	efgtoa@u^(0+128),w
  7650  04A9  0020               	movlb	0	; select bank0
  7651  04AA  00A6               	movwf	___fldiv@a
  7652  04AB  0021               	movlb	1	; select bank1
  7653  04AC  0846               	movf	(efgtoa@h+3)^(0+128),w
  7654  04AD  0020               	movlb	0	; select bank0
  7655  04AE  00AD               	movwf	___fldiv@b+3
  7656  04AF  0021               	movlb	1	; select bank1
  7657  04B0  0845               	movf	(efgtoa@h+2)^(0+128),w
  7658  04B1  0020               	movlb	0	; select bank0
  7659  04B2  00AC               	movwf	___fldiv@b+2
  7660  04B3  0021               	movlb	1	; select bank1
  7661  04B4  0844               	movf	(efgtoa@h+1)^(0+128),w
  7662  04B5  0020               	movlb	0	; select bank0
  7663  04B6  00AB               	movwf	___fldiv@b+1
  7664  04B7  0021               	movlb	1	; select bank1
  7665  04B8  0843               	movf	efgtoa@h^(0+128),w
  7666  04B9  0020               	movlb	0	; select bank0
  7667  04BA  00AA               	movwf	___fldiv@b
  7668  04BB  3188  20DF  3180   	fcall	___fldiv
  7669  04BE  0020               	movlb	0	; select bank0
  7670  04BF  0829               	movf	?___fldiv+3,w
  7671  04C0  00C3               	movwf	floorf@x+3
  7672  04C1  0828               	movf	?___fldiv+2,w
  7673  04C2  00C2               	movwf	floorf@x+2
  7674  04C3  0827               	movf	?___fldiv+1,w
  7675  04C4  00C1               	movwf	floorf@x+1
  7676  04C5  0826               	movf	?___fldiv,w
  7677  04C6  00C0               	movwf	floorf@x
  7678  04C7  3186  26F1  3180   	fcall	_floorf
  7679  04CA  0020               	movlb	0	; select bank0
  7680  04CB  0843               	movf	?_floorf+3,w
  7681  04CC  0021               	movlb	1	; select bank1
  7682  04CD  00CA               	movwf	(efgtoa@l+3)^(0+128)
  7683  04CE  0020               	movlb	0	; select bank0
  7684  04CF  0842               	movf	?_floorf+2,w
  7685  04D0  0021               	movlb	1	; select bank1
  7686  04D1  00C9               	movwf	(efgtoa@l+2)^(0+128)
  7687  04D2  0020               	movlb	0	; select bank0
  7688  04D3  0841               	movf	?_floorf+1,w
  7689  04D4  0021               	movlb	1	; select bank1
  7690  04D5  00C8               	movwf	(efgtoa@l+1)^(0+128)
  7691  04D6  0020               	movlb	0	; select bank0
  7692  04D7  0840               	movf	?_floorf,w
  7693  04D8  0021               	movlb	1	; select bank1
  7694  04D9  00C7               	movwf	efgtoa@l^(0+128)
  7695                           
  7696                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  7697  04DA  084A               	movf	(efgtoa@l+3)^(0+128),w
  7698  04DB  00F4               	movwf	___fltol@f1+3
  7699  04DC  0849               	movf	(efgtoa@l+2)^(0+128),w
  7700  04DD  00F3               	movwf	___fltol@f1+2
  7701  04DE  0848               	movf	(efgtoa@l+1)^(0+128),w
  7702  04DF  00F2               	movwf	___fltol@f1+1
  7703  04E0  0847               	movf	efgtoa@l^(0+128),w
  7704  04E1  00F1               	movwf	___fltol@f1
  7705  04E2  3195  2551  3180   	fcall	___fltol
  7706  04E5  0872               	movf	?___fltol+1,w
  7707  04E6  0021               	movlb	1	; select bank1
  7708  04E7  00B9               	movwf	(efgtoa@d+1)^(0+128)
  7709  04E8  0871               	movf	?___fltol,w
  7710  04E9  00B8               	movwf	efgtoa@d^(0+128)
  7711                           
  7712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  7713  04EA  0022               	movlb	2	; select bank2
  7714  04EB  1A5A               	btfsc	_flags^(0+256),4
  7715  04EC  2CFC               	goto	l6471
  7716  04ED  0021               	movlb	1	; select bank1
  7717  04EE  0838               	movf	efgtoa@d^(0+128),w
  7718  04EF  0439               	iorwf	(efgtoa@d+1)^(0+128),w
  7719  04F0  1D03               	btfss	3,2
  7720  04F1  2CFC               	goto	l6471
  7721  04F2  3067               	movlw	103
  7722  04F3  0642               	xorwf	efgtoa@mode^(0+128),w
  7723  04F4  1903               	btfsc	3,2
  7724  04F5  1FB7               	btfss	(efgtoa@ne+1)^(0+128),7
  7725  04F6  2CFC               	goto	l6471
  7726                           
  7727                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  7728  04F7  3001               	movlw	1
  7729  04F8  07B0               	addwf	efgtoa@t^(0+128),f
  7730  04F9  3000               	movlw	0
  7731  04FA  3DB1               	addwfc	(efgtoa@t+1)^(0+128),f
  7732                           
  7733                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  7734  04FB  2D4F               	goto	l6499
  7735  04FC                     l6471:	
  7736                           
  7737                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  7738  04FC  0021               	movlb	1	; select bank1
  7739  04FD  0832               	movf	efgtoa@pp^(0+128),w
  7740  04FE  0433               	iorwf	(efgtoa@pp+1)^(0+128),w
  7741  04FF  1903               	btfsc	3,2
  7742  0500  1FB7               	btfss	(efgtoa@ne+1)^(0+128),7
  7743  0501  2D1B               	goto	l6491
  7744                           
  7745                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  7746  0502  302E               	movlw	46
  7747  0503  0020               	movlb	0	; select bank0
  7748  0504  00D9               	movwf	??_efgtoa
  7749  0505  0021               	movlb	1	; select bank1
  7750  0506  0853               	movf	efgtoa@n^(0+128),w
  7751  0507  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7752  0508  0086               	movwf	6
  7753  0509  3002               	movlw	2	; select bank4/5
  7754  050A  0087               	movwf	7
  7755  050B  0020               	movlb	0	; select bank0
  7756  050C  0859               	movf	??_efgtoa,w
  7757  050D  0081               	movwf	1
  7758  050E  3001               	movlw	1
  7759  050F  0021               	movlb	1	; select bank1
  7760  0510  07D3               	addwf	efgtoa@n^(0+128),f
  7761  0511  3000               	movlw	0
  7762  0512  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  7763                           
  7764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  7765  0513  30FF               	movlw	255
  7766  0514  07C0               	addwf	efgtoa@w^(0+128),f
  7767  0515  30FF               	movlw	255
  7768  0516  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  7769                           
  7770                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  7771  0517  3001               	movlw	1
  7772  0518  00B2               	movwf	efgtoa@pp^(0+128)
  7773  0519  3000               	movlw	0
  7774  051A  00B3               	movwf	(efgtoa@pp^(0+128)+1)
  7775  051B                     l6491:	
  7776                           
  7777                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  7778  051B  0830               	movf	efgtoa@t^(0+128),w
  7779  051C  0431               	iorwf	(efgtoa@t+1)^(0+128),w
  7780  051D  1903               	btfsc	3,2
  7781  051E  2D39               	goto	l6493
  7782                           
  7783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  7784  051F  3030               	movlw	48
  7785  0520  0020               	movlb	0	; select bank0
  7786  0521  00D9               	movwf	??_efgtoa
  7787  0522  0021               	movlb	1	; select bank1
  7788  0523  0853               	movf	efgtoa@n^(0+128),w
  7789  0524  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7790  0525  0086               	movwf	6
  7791  0526  3002               	movlw	2	; select bank4/5
  7792  0527  0087               	movwf	7
  7793  0528  0020               	movlb	0	; select bank0
  7794  0529  0859               	movf	??_efgtoa,w
  7795  052A  0081               	movwf	1
  7796  052B  3001               	movlw	1
  7797  052C  0021               	movlb	1	; select bank1
  7798  052D  07D3               	addwf	efgtoa@n^(0+128),f
  7799  052E  3000               	movlw	0
  7800  052F  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  7801                           
  7802                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  7803  0530  30FF               	movlw	255
  7804  0531  07C0               	addwf	efgtoa@w^(0+128),f
  7805  0532  30FF               	movlw	255
  7806  0533  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  7807                           
  7808                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  7809  0534  30FF               	movlw	255
  7810  0535  07B0               	addwf	efgtoa@t^(0+128),f
  7811  0536  30FF               	movlw	255
  7812  0537  3DB1               	addwfc	(efgtoa@t+1)^(0+128),f
  7813  0538  2D1B               	goto	l6491
  7814  0539                     l6493:	
  7815                           
  7816                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  7817  0539  0838               	movf	efgtoa@d^(0+128),w
  7818  053A  3E30               	addlw	48
  7819  053B  0020               	movlb	0	; select bank0
  7820  053C  00D9               	movwf	??_efgtoa
  7821  053D  0021               	movlb	1	; select bank1
  7822  053E  0853               	movf	efgtoa@n^(0+128),w
  7823  053F  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7824  0540  0086               	movwf	6
  7825  0541  3002               	movlw	2	; select bank4/5
  7826  0542  0087               	movwf	7
  7827  0543  0020               	movlb	0	; select bank0
  7828  0544  0859               	movf	??_efgtoa,w
  7829  0545  0081               	movwf	1
  7830  0546  3001               	movlw	1
  7831  0547  0021               	movlb	1	; select bank1
  7832  0548  07D3               	addwf	efgtoa@n^(0+128),f
  7833  0549  3000               	movlw	0
  7834  054A  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  7835                           
  7836                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  7837  054B  30FF               	movlw	255
  7838  054C  07C0               	addwf	efgtoa@w^(0+128),f
  7839  054D  30FF               	movlw	255
  7840  054E  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  7841  054F                     l6499:	
  7842                           
  7843                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  7844  054F  084A               	movf	(efgtoa@l+3)^(0+128),w
  7845  0550  0020               	movlb	0	; select bank0
  7846  0551  00A7               	movwf	___flmul@a+3
  7847  0552  0021               	movlb	1	; select bank1
  7848  0553  0849               	movf	(efgtoa@l+2)^(0+128),w
  7849  0554  0020               	movlb	0	; select bank0
  7850  0555  00A6               	movwf	___flmul@a+2
  7851  0556  0021               	movlb	1	; select bank1
  7852  0557  0848               	movf	(efgtoa@l+1)^(0+128),w
  7853  0558  0020               	movlb	0	; select bank0
  7854  0559  00A5               	movwf	___flmul@a+1
  7855  055A  0021               	movlb	1	; select bank1
  7856  055B  0847               	movf	efgtoa@l^(0+128),w
  7857  055C  0020               	movlb	0	; select bank0
  7858  055D  00A4               	movwf	___flmul@a
  7859  055E  0021               	movlb	1	; select bank1
  7860  055F  0858               	movf	(efgtoa@u+3)^(0+128),w
  7861  0560  0020               	movlb	0	; select bank0
  7862  0561  00A3               	movwf	___flmul@b+3
  7863  0562  0021               	movlb	1	; select bank1
  7864  0563  0857               	movf	(efgtoa@u+2)^(0+128),w
  7865  0564  0020               	movlb	0	; select bank0
  7866  0565  00A2               	movwf	___flmul@b+2
  7867  0566  0021               	movlb	1	; select bank1
  7868  0567  0856               	movf	(efgtoa@u+1)^(0+128),w
  7869  0568  0020               	movlb	0	; select bank0
  7870  0569  00A1               	movwf	___flmul@b+1
  7871  056A  0021               	movlb	1	; select bank1
  7872  056B  0855               	movf	efgtoa@u^(0+128),w
  7873  056C  0020               	movlb	0	; select bank0
  7874  056D  00A0               	movwf	___flmul@b
  7875  056E  318D  25D4  3180   	fcall	___flmul
  7876  0571  0020               	movlb	0	; select bank0
  7877  0572  0823               	movf	?___flmul+3,w
  7878  0573  00BD               	movwf	___flsub@a+3
  7879  0574  0822               	movf	?___flmul+2,w
  7880  0575  00BC               	movwf	___flsub@a+2
  7881  0576  0821               	movf	?___flmul+1,w
  7882  0577  00BB               	movwf	___flsub@a+1
  7883  0578  0820               	movf	?___flmul,w
  7884  0579  00BA               	movwf	___flsub@a
  7885  057A  0021               	movlb	1	; select bank1
  7886  057B  0846               	movf	(efgtoa@h+3)^(0+128),w
  7887  057C  0020               	movlb	0	; select bank0
  7888  057D  00C1               	movwf	___flsub@b+3
  7889  057E  0021               	movlb	1	; select bank1
  7890  057F  0845               	movf	(efgtoa@h+2)^(0+128),w
  7891  0580  0020               	movlb	0	; select bank0
  7892  0581  00C0               	movwf	___flsub@b+2
  7893  0582  0021               	movlb	1	; select bank1
  7894  0583  0844               	movf	(efgtoa@h+1)^(0+128),w
  7895  0584  0020               	movlb	0	; select bank0
  7896  0585  00BF               	movwf	___flsub@b+1
  7897  0586  0021               	movlb	1	; select bank1
  7898  0587  0843               	movf	efgtoa@h^(0+128),w
  7899  0588  0020               	movlb	0	; select bank0
  7900  0589  00BE               	movwf	___flsub@b
  7901  058A  3190  207E  3180   	fcall	___flsub
  7902  058D  0020               	movlb	0	; select bank0
  7903  058E  083D               	movf	?___flsub+3,w
  7904  058F  0021               	movlb	1	; select bank1
  7905  0590  00C6               	movwf	(efgtoa@h+3)^(0+128)
  7906  0591  0020               	movlb	0	; select bank0
  7907  0592  083C               	movf	?___flsub+2,w
  7908  0593  0021               	movlb	1	; select bank1
  7909  0594  00C5               	movwf	(efgtoa@h+2)^(0+128)
  7910  0595  0020               	movlb	0	; select bank0
  7911  0596  083B               	movf	?___flsub+1,w
  7912  0597  0021               	movlb	1	; select bank1
  7913  0598  00C4               	movwf	(efgtoa@h+1)^(0+128)
  7914  0599  0020               	movlb	0	; select bank0
  7915  059A  083A               	movf	?___flsub,w
  7916  059B  0021               	movlb	1	; select bank1
  7917  059C  00C3               	movwf	efgtoa@h^(0+128)
  7918                           
  7919                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  7920  059D  3041               	movlw	65
  7921  059E  0020               	movlb	0	; select bank0
  7922  059F  00A9               	movwf	___fldiv@a+3
  7923  05A0  3020               	movlw	32
  7924  05A1  00A8               	movwf	___fldiv@a+2
  7925  05A2  3000               	movlw	0
  7926  05A3  00A7               	movwf	___fldiv@a+1
  7927  05A4  3000               	movlw	0
  7928  05A5  00A6               	movwf	___fldiv@a
  7929  05A6  0021               	movlb	1	; select bank1
  7930  05A7  0858               	movf	(efgtoa@u+3)^(0+128),w
  7931  05A8  0020               	movlb	0	; select bank0
  7932  05A9  00AD               	movwf	___fldiv@b+3
  7933  05AA  0021               	movlb	1	; select bank1
  7934  05AB  0857               	movf	(efgtoa@u+2)^(0+128),w
  7935  05AC  0020               	movlb	0	; select bank0
  7936  05AD  00AC               	movwf	___fldiv@b+2
  7937  05AE  0021               	movlb	1	; select bank1
  7938  05AF  0856               	movf	(efgtoa@u+1)^(0+128),w
  7939  05B0  0020               	movlb	0	; select bank0
  7940  05B1  00AB               	movwf	___fldiv@b+1
  7941  05B2  0021               	movlb	1	; select bank1
  7942  05B3  0855               	movf	efgtoa@u^(0+128),w
  7943  05B4  0020               	movlb	0	; select bank0
  7944  05B5  00AA               	movwf	___fldiv@b
  7945  05B6  3188  20DF  3180   	fcall	___fldiv
  7946  05B9  0020               	movlb	0	; select bank0
  7947  05BA  0829               	movf	?___fldiv+3,w
  7948  05BB  0021               	movlb	1	; select bank1
  7949  05BC  00D8               	movwf	(efgtoa@u+3)^(0+128)
  7950  05BD  0020               	movlb	0	; select bank0
  7951  05BE  0828               	movf	?___fldiv+2,w
  7952  05BF  0021               	movlb	1	; select bank1
  7953  05C0  00D7               	movwf	(efgtoa@u+2)^(0+128)
  7954  05C1  0020               	movlb	0	; select bank0
  7955  05C2  0827               	movf	?___fldiv+1,w
  7956  05C3  0021               	movlb	1	; select bank1
  7957  05C4  00D6               	movwf	(efgtoa@u+1)^(0+128)
  7958  05C5  0020               	movlb	0	; select bank0
  7959  05C6  0826               	movf	?___fldiv,w
  7960  05C7  0021               	movlb	1	; select bank1
  7961  05C8  00D5               	movwf	efgtoa@u^(0+128)
  7962                           
  7963                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  7964  05C9  30FF               	movlw	255
  7965  05CA  07B6               	addwf	efgtoa@ne^(0+128),f
  7966  05CB  30FF               	movlw	255
  7967  05CC  3DB7               	addwfc	(efgtoa@ne+1)^(0+128),f
  7968                           
  7969                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  7970  05CD  3001               	movlw	1
  7971  05CE  07CB               	addwf	efgtoa@i^(0+128),f
  7972  05CF  3000               	movlw	0
  7973  05D0  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  7974  05D1                     l6507:	
  7975                           
  7976                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  7977  05D1  084C               	movf	(efgtoa@i+1)^(0+128),w
  7978  05D2  3A80               	xorlw	128
  7979  05D3  0020               	movlb	0	; select bank0
  7980  05D4  00D9               	movwf	??_efgtoa
  7981  05D5  0021               	movlb	1	; select bank1
  7982  05D6  0835               	movf	(efgtoa@m+1)^(0+128),w
  7983  05D7  3A80               	xorlw	128
  7984  05D8  0020               	movlb	0	; select bank0
  7985  05D9  0259               	subwf	??_efgtoa,w
  7986  05DA  1D03               	skipz
  7987  05DB  2DDF               	goto	u7105
  7988  05DC  0021               	movlb	1	; select bank1
  7989  05DD  0834               	movf	efgtoa@m^(0+128),w
  7990  05DE  024B               	subwf	efgtoa@i^(0+128),w
  7991  05DF                     u7105:	
  7992  05DF  1803               	skipnc
  7993  05E0  2DEF               	goto	l6511
  7994  05E1  0021               	movlb	1	; select bank1
  7995  05E2  0854               	movf	(efgtoa@n+1)^(0+128),w
  7996  05E3  3A80               	xorlw	128
  7997  05E4  0020               	movlb	0	; select bank0
  7998  05E5  00D9               	movwf	??_efgtoa
  7999  05E6  3080               	movlw	128
  8000  05E7  0259               	subwf	??_efgtoa,w
  8001  05E8  1D03               	skipz
  8002  05E9  2DED               	goto	u7115
  8003  05EA  304B               	movlw	75
  8004  05EB  0021               	movlb	1	; select bank1
  8005  05EC  0253               	subwf	efgtoa@n^(0+128),w
  8006  05ED                     u7115:	
  8007  05ED  1C03               	skipc
  8008  05EE  2C9B               	goto	l6459
  8009  05EF                     l6511:	
  8010                           
  8011                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  8012  05EF  0021               	movlb	1	; select bank1
  8013  05F0  0832               	movf	efgtoa@pp^(0+128),w
  8014  05F1  0433               	iorwf	(efgtoa@pp+1)^(0+128),w
  8015  05F2  1D03               	btfss	3,2
  8016  05F3  2E08               	goto	l6519
  8017  05F4  0022               	movlb	2	; select bank2
  8018  05F5  1E5A               	btfss	_flags^(0+256),4
  8019  05F6  2E08               	goto	l6519
  8020                           
  8021                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  8022  05F7  302E               	movlw	46
  8023  05F8  0020               	movlb	0	; select bank0
  8024  05F9  00D9               	movwf	??_efgtoa
  8025  05FA  0021               	movlb	1	; select bank1
  8026  05FB  0853               	movf	efgtoa@n^(0+128),w
  8027  05FC  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8028  05FD  0086               	movwf	6
  8029  05FE  3002               	movlw	2	; select bank4/5
  8030  05FF  0087               	movwf	7
  8031  0600  0020               	movlb	0	; select bank0
  8032  0601  0859               	movf	??_efgtoa,w
  8033  0602  0081               	movwf	1
  8034  0603  3001               	movlw	1
  8035  0604  0021               	movlb	1	; select bank1
  8036  0605  07D3               	addwf	efgtoa@n^(0+128),f
  8037  0606  3000               	movlw	0
  8038  0607  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  8039  0608                     l6519:	
  8040                           
  8041                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  8042  0608  0021               	movlb	1	; select bank1
  8043  0609  0853               	movf	efgtoa@n^(0+128),w
  8044  060A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8045  060B  0086               	movwf	6
  8046  060C  3002               	movlw	2	; select bank4/5
  8047  060D  0087               	movwf	7
  8048  060E  0181               	clrf	1
  8049                           
  8050                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  8051  060F  3065               	movlw	101
  8052  0610  063F               	xorwf	efgtoa@nmode^(0+128),w
  8053  0611  1D03               	btfss	3,2
  8054  0612  2EDA               	goto	l6581
  8055                           
  8056                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  8057  0613  304F               	movlw	79
  8058  0614  00CB               	movwf	efgtoa@i^(0+128)
  8059  0615  3000               	movlw	0
  8060  0616  00CC               	movwf	(efgtoa@i^(0+128)+1)
  8061                           
  8062                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  8063  0617  084B               	movf	efgtoa@i^(0+128),w
  8064  0618  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8065  0619  0086               	movwf	6
  8066  061A  3002               	movlw	2	; select bank4/5
  8067  061B  0087               	movwf	7
  8068  061C  0181               	clrf	1
  8069                           
  8070                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  8071  061D  01BA               	clrf	efgtoa@sign^(0+128)
  8072  061E  01BB               	clrf	(efgtoa@sign+1)^(0+128)
  8073                           
  8074                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  8075  061F  1FD2               	btfss	(efgtoa@e+1)^(0+128),7
  8076  0620  2E2A               	goto	l6535
  8077                           
  8078                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  8079  0621  3001               	movlw	1
  8080  0622  00BA               	movwf	efgtoa@sign^(0+128)
  8081  0623  3000               	movlw	0
  8082  0624  00BB               	movwf	(efgtoa@sign^(0+128)+1)
  8083                           
  8084                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  8085  0625  09D1               	comf	efgtoa@e^(0+128),f
  8086  0626  09D2               	comf	(efgtoa@e+1)^(0+128),f
  8087  0627  0AD1               	incf	efgtoa@e^(0+128),f
  8088  0628  1903               	skipnz
  8089  0629  0AD2               	incf	(efgtoa@e+1)^(0+128),f
  8090  062A                     l6535:	
  8091                           
  8092                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  8093  062A  3002               	movlw	2
  8094  062B  00BD               	movwf	efgtoa@p^(0+128)
  8095  062C  3000               	movlw	0
  8096  062D  00BE               	movwf	(efgtoa@p^(0+128)+1)
  8097  062E                     l6547:	
  8098                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  8099                           
  8100                           
  8101                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  8102  062E  0851               	movf	efgtoa@e^(0+128),w
  8103  062F  0452               	iorwf	(efgtoa@e+1)^(0+128),w
  8104  0630  1903               	btfsc	3,2
  8105  0631  2E69               	goto	l6549
  8106  0632                     l6537:	
  8107                           
  8108                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  8109  0632  30FF               	movlw	255
  8110  0633  0021               	movlb	1	; select bank1
  8111  0634  07CB               	addwf	efgtoa@i^(0+128),f
  8112  0635  30FF               	movlw	255
  8113  0636  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  8114                           
  8115                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  8116  0637  300A               	movlw	10
  8117  0638  00F1               	movwf	___awmod@divisor
  8118  0639  3000               	movlw	0
  8119  063A  00F2               	movwf	___awmod@divisor+1
  8120  063B  0852               	movf	(efgtoa@e+1)^(0+128),w
  8121  063C  00F4               	movwf	___awmod@dividend+1
  8122  063D  0851               	movf	efgtoa@e^(0+128),w
  8123  063E  00F3               	movwf	___awmod@dividend
  8124  063F  3193  2384  3180   	fcall	___awmod
  8125  0642  0871               	movf	?___awmod,w
  8126  0643  3E30               	addlw	48
  8127  0644  0020               	movlb	0	; select bank0
  8128  0645  00D9               	movwf	??_efgtoa
  8129  0646  0021               	movlb	1	; select bank1
  8130  0647  084B               	movf	efgtoa@i^(0+128),w
  8131  0648  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8132  0649  0086               	movwf	6
  8133  064A  3002               	movlw	2	; select bank4/5
  8134  064B  0087               	movwf	7
  8135  064C  0020               	movlb	0	; select bank0
  8136  064D  0859               	movf	??_efgtoa,w
  8137  064E  0081               	movwf	1
  8138                           
  8139                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  8140  064F  300A               	movlw	10
  8141  0650  00F1               	movwf	___awdiv@divisor
  8142  0651  3000               	movlw	0
  8143  0652  00F2               	movwf	___awdiv@divisor+1
  8144  0653  0021               	movlb	1	; select bank1
  8145  0654  0852               	movf	(efgtoa@e+1)^(0+128),w
  8146  0655  00F4               	movwf	___awdiv@dividend+1
  8147  0656  0851               	movf	efgtoa@e^(0+128),w
  8148  0657  00F3               	movwf	___awdiv@dividend
  8149  0658  3194  24AE  3180   	fcall	___awdiv
  8150  065B  0872               	movf	?___awdiv+1,w
  8151  065C  0021               	movlb	1	; select bank1
  8152  065D  00D2               	movwf	(efgtoa@e+1)^(0+128)
  8153  065E  0871               	movf	?___awdiv,w
  8154  065F  00D1               	movwf	efgtoa@e^(0+128)
  8155                           
  8156                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  8157  0660  30FF               	movlw	255
  8158  0661  07BD               	addwf	efgtoa@p^(0+128),f
  8159  0662  30FF               	movlw	255
  8160  0663  3DBE               	addwfc	(efgtoa@p+1)^(0+128),f
  8161                           
  8162                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  8163  0664  30FF               	movlw	255
  8164  0665  07C0               	addwf	efgtoa@w^(0+128),f
  8165  0666  30FF               	movlw	255
  8166  0667  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  8167  0668  2E2E               	goto	l6547
  8168  0669                     l6549:	
  8169  0669  083E               	movf	(efgtoa@p+1)^(0+128),w
  8170  066A  3A80               	xorlw	128
  8171  066B  0020               	movlb	0	; select bank0
  8172  066C  00D9               	movwf	??_efgtoa
  8173  066D  3080               	movlw	128
  8174  066E  0259               	subwf	??_efgtoa,w
  8175  066F  1D03               	skipz
  8176  0670  2E74               	goto	u7175
  8177  0671  3001               	movlw	1
  8178  0672  0021               	movlb	1	; select bank1
  8179  0673  023D               	subwf	efgtoa@p^(0+128),w
  8180  0674                     u7175:	
  8181  0674  1803               	skipnc
  8182  0675  2E32               	goto	l6537
  8183                           
  8184                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  8185  0676  30FF               	movlw	255
  8186  0677  0021               	movlb	1	; select bank1
  8187  0678  07CB               	addwf	efgtoa@i^(0+128),f
  8188  0679  30FF               	movlw	255
  8189  067A  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  8190                           
  8191                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  8192  067B  083A               	movf	efgtoa@sign^(0+128),w
  8193  067C  043B               	iorwf	(efgtoa@sign+1)^(0+128),w
  8194  067D  1D03               	btfss	3,2
  8195  067E  2E81               	goto	l6557
  8196  067F  302B               	movlw	43
  8197  0680  2E82               	goto	L7
  8198  0681                     l6557:	
  8199  0681  302D               	movlw	45
  8200  0682                     L7:	
  8201  0682  00AA               	movwf	_efgtoa$1448^(0+128)
  8202  0683  3000               	movlw	0
  8203  0684  00AB               	movwf	(_efgtoa$1448^(0+128)+1)
  8204  0685  082A               	movf	_efgtoa$1448^(0+128),w
  8205  0686  0020               	movlb	0	; select bank0
  8206  0687  00D9               	movwf	??_efgtoa
  8207  0688  0021               	movlb	1	; select bank1
  8208  0689  084B               	movf	efgtoa@i^(0+128),w
  8209  068A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8210  068B  0086               	movwf	6
  8211  068C  3002               	movlw	2	; select bank4/5
  8212  068D  0087               	movwf	7
  8213  068E  0020               	movlb	0	; select bank0
  8214  068F  0859               	movf	??_efgtoa,w
  8215  0690  0081               	movwf	1
  8216                           
  8217                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  8218  0691  30FF               	movlw	255
  8219  0692  0021               	movlb	1	; select bank1
  8220  0693  07C0               	addwf	efgtoa@w^(0+128),f
  8221  0694  30FF               	movlw	255
  8222  0695  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  8223                           
  8224                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  8225  0696  30FF               	movlw	255
  8226  0697  07CB               	addwf	efgtoa@i^(0+128),f
  8227  0698  30FF               	movlw	255
  8228  0699  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  8229  069A  0020               	movlb	0	; select bank0
  8230  069B  0858               	movf	efgtoa@c,w
  8231  069C  3EBF               	addlw	191
  8232  069D  00D9               	movwf	??_efgtoa
  8233  069E  30FF               	movlw	255
  8234  069F  1803               	skipnc
  8235  06A0  3000               	movlw	0
  8236  06A1  00DA               	movwf	??_efgtoa+1
  8237  06A2  3000               	movlw	0
  8238  06A3  025A               	subwf	??_efgtoa+1,w
  8239  06A4  301A               	movlw	26
  8240  06A5  1903               	skipnz
  8241  06A6  0259               	subwf	??_efgtoa,w
  8242  06A7  1803               	btfsc	3,0
  8243  06A8  2EAB               	goto	u7190
  8244  06A9  3001               	movlw	1
  8245  06AA  2EAC               	goto	u7200
  8246  06AB                     u7190:	
  8247  06AB  3000               	movlw	0
  8248  06AC                     u7200:	
  8249  06AC  00DB               	movwf	??_efgtoa+2
  8250  06AD  01DC               	clrf	??_efgtoa+3
  8251  06AE  085B               	movf	??_efgtoa+2,w
  8252  06AF  0021               	movlb	1	; select bank1
  8253  06B0  00AE               	movwf	_efgtoa$1450^(0+128)
  8254  06B1  0020               	movlb	0	; select bank0
  8255  06B2  085C               	movf	??_efgtoa+3,w
  8256  06B3  0021               	movlb	1	; select bank1
  8257  06B4  00AF               	movwf	(_efgtoa$1450+1)^(0+128)
  8258  06B5  082E               	movf	_efgtoa$1450^(0+128),w
  8259  06B6  042F               	iorwf	(_efgtoa$1450+1)^(0+128),w
  8260  06B7  1D03               	btfss	3,2
  8261  06B8  2EBB               	goto	l6573
  8262  06B9  3065               	movlw	101
  8263  06BA  2EBC               	goto	L8
  8264  06BB                     l6573:	
  8265  06BB  3045               	movlw	69
  8266  06BC                     L8:	
  8267  06BC  00AC               	movwf	_efgtoa$1449^(0+128)
  8268  06BD  3000               	movlw	0
  8269  06BE  00AD               	movwf	(_efgtoa$1449^(0+128)+1)
  8270  06BF  082C               	movf	_efgtoa$1449^(0+128),w
  8271  06C0  0020               	movlb	0	; select bank0
  8272  06C1  00D9               	movwf	??_efgtoa
  8273  06C2  0021               	movlb	1	; select bank1
  8274  06C3  084B               	movf	efgtoa@i^(0+128),w
  8275  06C4  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8276  06C5  0086               	movwf	6
  8277  06C6  3002               	movlw	2	; select bank4/5
  8278  06C7  0087               	movwf	7
  8279  06C8  0020               	movlb	0	; select bank0
  8280  06C9  0859               	movf	??_efgtoa,w
  8281  06CA  0081               	movwf	1
  8282                           
  8283                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  8284  06CB  30FF               	movlw	255
  8285  06CC  0021               	movlb	1	; select bank1
  8286  06CD  07C0               	addwf	efgtoa@w^(0+128),f
  8287  06CE  30FF               	movlw	255
  8288  06CF  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  8289                           
  8290                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  8291  06D0  084B               	movf	efgtoa@i^(0+128),w
  8292  06D1  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8293  06D2  00F1               	movwf	strcpy@src
  8294  06D3  3002               	movlw	2
  8295  06D4  00F2               	movwf	strcpy@src+1
  8296  06D5  0853               	movf	efgtoa@n^(0+128),w
  8297  06D6  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8298  06D7  3190  209D  3180   	fcall	_strcpy
  8299  06DA                     l6581:	
  8300                           
  8301                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 502:     re
      +                          turn pad(fp, &dbuf[0], w);
  8302  06DA  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  8303  06DB  0020               	movlb	0	; select bank0
  8304  06DC  00D9               	movwf	??_efgtoa
  8305  06DD  0859               	movf	??_efgtoa,w
  8306  06DE  00A8               	movwf	pad@buf
  8307  06DF  0021               	movlb	1	; select bank1
  8308  06E0  0841               	movf	(efgtoa@w+1)^(0+128),w
  8309  06E1  0020               	movlb	0	; select bank0
  8310  06E2  00AA               	movwf	pad@p+1
  8311  06E3  0021               	movlb	1	; select bank1
  8312  06E4  0840               	movf	efgtoa@w^(0+128),w
  8313  06E5  0020               	movlb	0	; select bank0
  8314  06E6  00A9               	movwf	pad@p
  8315  06E7  0021               	movlb	1	; select bank1
  8316  06E8  083C               	movf	efgtoa@fp^(0+128),w
  8317  06E9  3194  245E         	fcall	_pad
  8318  06EB  0020               	movlb	0	; select bank0
  8319  06EC  0829               	movf	?_pad+1,w
  8320  06ED  00D5               	movwf	?_efgtoa+1
  8321  06EE  0828               	movf	?_pad,w
  8322  06EF  00D4               	movwf	?_efgtoa
  8323  06F0  0008               	return
  8324  06F1                     __end_of_efgtoa:	
  8325                           
  8326                           	psect	text8
  8327  10DC                     __ptext8:	
  8328 ;; *************** function _tolower *****************
  8329 ;; Defined at:
  8330 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
  8331 ;; Parameters:    Size  Location     Type
  8332 ;;  c               2    7[COMMON] int 
  8333 ;; Auto vars:     Size  Location     Type
  8334 ;;		None
  8335 ;; Return value:  Size  Location     Type
  8336 ;;                  2    7[COMMON] int 
  8337 ;; Registers used:
  8338 ;;		wreg, status,2, status,0
  8339 ;; Tracked objects:
  8340 ;;		On entry : 0/0
  8341 ;;		On exit  : 0/0
  8342 ;;		Unchanged: 0/0
  8343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8344 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8345 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8346 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8347 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8348 ;;Total ram usage:        8 bytes
  8349 ;; Hardware stack levels used:    1
  8350 ;; Hardware stack levels required when called:    5
  8351 ;; This function calls:
  8352 ;;		_isupper
  8353 ;; This function is called by:
  8354 ;;		_efgtoa
  8355 ;;		_vfpfcnvrt
  8356 ;; This function uses a non-reentrant model
  8357 ;;
  8358                           
  8359                           
  8360                           ;psect for function _tolower
  8361  10DC                     _tolower:	
  8362                           
  8363                           ;incstack = 0
  8364                           ; Regs used in _tolower: [wreg+status,2+status,0]
  8365  10DC  0877               	movf	tolower@c,w
  8366  10DD  3EBF               	addlw	191
  8367  10DE  0020               	movlb	0	; select bank0
  8368  10DF  00A0               	movwf	??_tolower
  8369  10E0  30FF               	movlw	255
  8370  10E1  3D78               	addwfc	tolower@c+1,w
  8371  10E2  00A1               	movwf	??_tolower+1
  8372  10E3  3000               	movlw	0
  8373  10E4  0221               	subwf	??_tolower+1,w
  8374  10E5  301A               	movlw	26
  8375  10E6  1903               	skipnz
  8376  10E7  0220               	subwf	??_tolower,w
  8377  10E8  1803               	btfsc	3,0
  8378  10E9  28EC               	goto	u6640
  8379  10EA  3001               	movlw	1
  8380  10EB  28ED               	goto	u6650
  8381  10EC                     u6640:	
  8382  10EC  3000               	movlw	0
  8383  10ED                     u6650:	
  8384  10ED  00A2               	movwf	??_tolower+2
  8385  10EE  01A3               	clrf	??_tolower+3
  8386  10EF  0822               	movf	??_tolower+2,w
  8387  10F0  00F9               	movwf	_tolower$1848
  8388  10F1  0823               	movf	??_tolower+3,w
  8389  10F2  00FA               	movwf	_tolower$1848+1
  8390  10F3  0879               	movf	_tolower$1848,w
  8391  10F4  047A               	iorwf	_tolower$1848+1,w
  8392  10F5  1903               	btfsc	3,2
  8393  10F6  0008               	return
  8394  10F7  3020               	movlw	32
  8395  10F8  0477               	iorwf	tolower@c,w
  8396  10F9  00F7               	movwf	?_tolower
  8397  10FA  3000               	movlw	0
  8398  10FB  0478               	iorwf	tolower@c+1,w
  8399  10FC  00F8               	movwf	?_tolower+1
  8400  10FD  0008               	return
  8401  10FE                     __end_of_tolower:	
  8402                           
  8403                           	psect	text9
  8404  1FA2                     __ptext9:	
  8405 ;; *************** function _isupper *****************
  8406 ;; Defined at:
  8407 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  8408 ;; Parameters:    Size  Location     Type
  8409 ;;  c               2    1[COMMON] int 
  8410 ;; Auto vars:     Size  Location     Type
  8411 ;;		None
  8412 ;; Return value:  Size  Location     Type
  8413 ;;                  2    1[COMMON] int 
  8414 ;; Registers used:
  8415 ;;		wreg, status,2, status,0
  8416 ;; Tracked objects:
  8417 ;;		On entry : 0/0
  8418 ;;		On exit  : 0/0
  8419 ;;		Unchanged: 0/0
  8420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8421 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8423 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8424 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8425 ;;Total ram usage:        6 bytes
  8426 ;; Hardware stack levels used:    1
  8427 ;; Hardware stack levels required when called:    4
  8428 ;; This function calls:
  8429 ;;		Nothing
  8430 ;; This function is called by:
  8431 ;;		_efgtoa
  8432 ;;		_vfpfcnvrt
  8433 ;;		_tolower
  8434 ;; This function uses a non-reentrant model
  8435 ;;
  8436                           
  8437                           
  8438                           ;psect for function _isupper
  8439  1FA2                     _isupper:	
  8440                           
  8441                           ;incstack = 0
  8442                           ; Regs used in _isupper: [wreg+status,2+status,0]
  8443  1FA2  0871               	movf	isupper@c,w
  8444  1FA3  3EBF               	addlw	191
  8445  1FA4  00F3               	movwf	??_isupper
  8446  1FA5  30FF               	movlw	255
  8447  1FA6  3D72               	addwfc	isupper@c+1,w
  8448  1FA7  00F4               	movwf	??_isupper+1
  8449  1FA8  3000               	movlw	0
  8450  1FA9  0274               	subwf	??_isupper+1,w
  8451  1FAA  301A               	movlw	26
  8452  1FAB  1903               	skipnz
  8453  1FAC  0273               	subwf	??_isupper,w
  8454  1FAD  1803               	btfsc	3,0
  8455  1FAE  2FB1               	goto	u6150
  8456  1FAF  3001               	movlw	1
  8457  1FB0  2FB2               	goto	u6160
  8458  1FB1                     u6150:	
  8459  1FB1  3000               	movlw	0
  8460  1FB2                     u6160:	
  8461  1FB2  00F5               	movwf	??_isupper+2
  8462  1FB3  01F6               	clrf	??_isupper+3
  8463  1FB4  0875               	movf	??_isupper+2,w
  8464  1FB5  00F1               	movwf	?_isupper
  8465  1FB6  0876               	movf	??_isupper+3,w
  8466  1FB7  00F2               	movwf	?_isupper+1
  8467  1FB8  0008               	return
  8468  1FB9                     __end_of_isupper:	
  8469                           
  8470                           	psect	text10
  8471  109D                     __ptext10:	
  8472 ;; *************** function _strcpy *****************
  8473 ;; Defined at:
  8474 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
  8475 ;; Parameters:    Size  Location     Type
  8476 ;;  dest            1    wreg     PTR unsigned char 
  8477 ;;		 -> dbuf(80), 
  8478 ;;  src             2    1[COMMON] PTR const unsigned char 
  8479 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  8480 ;;		 -> dbuf(80), 
  8481 ;; Auto vars:     Size  Location     Type
  8482 ;;  dest            1    8[COMMON] PTR unsigned char 
  8483 ;;		 -> dbuf(80), 
  8484 ;;  s               2    5[COMMON] PTR const unsigned char 
  8485 ;;		 -> STR_8(4), STR_7(4), STR_4(4), STR_3(4), 
  8486 ;;		 -> dbuf(80), 
  8487 ;;  d               1    7[COMMON] PTR unsigned char 
  8488 ;;		 -> dbuf(80), 
  8489 ;; Return value:  Size  Location     Type
  8490 ;;                  1    wreg      PTR unsigned char 
  8491 ;; Registers used:
  8492 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  8493 ;; Tracked objects:
  8494 ;;		On entry : 0/0
  8495 ;;		On exit  : 0/0
  8496 ;;		Unchanged: 0/0
  8497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8498 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8499 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8500 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8501 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8502 ;;Total ram usage:        8 bytes
  8503 ;; Hardware stack levels used:    1
  8504 ;; Hardware stack levels required when called:    4
  8505 ;; This function calls:
  8506 ;;		Nothing
  8507 ;; This function is called by:
  8508 ;;		_efgtoa
  8509 ;; This function uses a non-reentrant model
  8510 ;;
  8511                           
  8512                           
  8513                           ;psect for function _strcpy
  8514  109D                     _strcpy:	
  8515                           
  8516                           ;incstack = 0
  8517                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  8518                           ;strcpy@dest stored from wreg
  8519  109D  00F8               	movwf	strcpy@dest
  8520  109E  0872               	movf	strcpy@src+1,w
  8521  109F  00F6               	movwf	strcpy@s+1
  8522  10A0  0871               	movf	strcpy@src,w
  8523  10A1  00F5               	movwf	strcpy@s
  8524  10A2  0878               	movf	strcpy@dest,w
  8525  10A3  00F3               	movwf	??_strcpy
  8526  10A4  0873               	movf	??_strcpy,w
  8527  10A5  00F7               	movwf	strcpy@d
  8528  10A6                     l4505:	
  8529  10A6  0877               	movf	strcpy@d,w
  8530  10A7  0086               	movwf	6
  8531  10A8  3002               	movlw	2	; select bank4/5
  8532  10A9  0087               	movwf	7
  8533  10AA  0AF7               	incf	strcpy@d,f
  8534  10AB  0876               	movf	strcpy@s+1,w
  8535  10AC  00F4               	movwf	??_strcpy+1
  8536  10AD  0875               	movf	strcpy@s,w
  8537  10AE  00F3               	movwf	??_strcpy
  8538  10AF  0AF5               	incf	strcpy@s,f
  8539  10B0  1903               	skipnz
  8540  10B1  0AF6               	incf	strcpy@s+1,f
  8541  10B2  0873               	movf	??_strcpy,w
  8542  10B3  0084               	movwf	4
  8543  10B4  0874               	movf	??_strcpy+1,w
  8544  10B5  0085               	movwf	5
  8545  10B6  0800               	movf	0,w	;code access
  8546  10B7  3FC0               	movwi [0]fsr1
  8547  10B8  0889               	movf	9,f
  8548  10B9  1903               	btfsc	3,2
  8549  10BA  0008               	return
  8550  10BB  28A6               	goto	l4505
  8551  10BC                     __end_of_strcpy:	
  8552                           
  8553                           	psect	text11
  8554  145E                     __ptext11:	
  8555 ;; *************** function _pad *****************
  8556 ;; Defined at:
  8557 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8558 ;; Parameters:    Size  Location     Type
  8559 ;;  fp              1    wreg     PTR struct _IO_FILE
  8560 ;;		 -> NULL(0), 
  8561 ;;  buf             1    8[BANK0 ] PTR unsigned char 
  8562 ;;		 -> dbuf(80), 
  8563 ;;  p               2    9[BANK0 ] int 
  8564 ;; Auto vars:     Size  Location     Type
  8565 ;;  fp              1   16[BANK0 ] PTR struct _IO_FILE
  8566 ;;		 -> NULL(0), 
  8567 ;;  w               2   14[BANK0 ] int 
  8568 ;;  i               2   12[BANK0 ] int 
  8569 ;; Return value:  Size  Location     Type
  8570 ;;                  2    8[BANK0 ] int 
  8571 ;; Registers used:
  8572 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8573 ;; Tracked objects:
  8574 ;;		On entry : 0/0
  8575 ;;		On exit  : 0/0
  8576 ;;		Unchanged: 0/0
  8577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8578 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8579 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8580 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8581 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8582 ;;Total ram usage:        9 bytes
  8583 ;; Hardware stack levels used:    1
  8584 ;; Hardware stack levels required when called:    8
  8585 ;; This function calls:
  8586 ;;		_fputc
  8587 ;;		_fputs
  8588 ;;		_strlen
  8589 ;; This function is called by:
  8590 ;;		_efgtoa
  8591 ;; This function uses a non-reentrant model
  8592 ;;
  8593                           
  8594                           
  8595                           ;psect for function _pad
  8596  145E                     _pad:	
  8597                           
  8598                           ;incstack = 0
  8599                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8600                           ;pad@fp stored from wreg
  8601  145E  0020               	movlb	0	; select bank0
  8602  145F  00B0               	movwf	pad@fp
  8603                           
  8604                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  8605  1460  0022               	movlb	2	; select bank2
  8606  1461  1C5A               	btfss	_flags^(0+256),0
  8607  1462  2C6C               	goto	l6249
  8608                           
  8609                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  8610  1463  0020               	movlb	0	; select bank0
  8611  1464  0830               	movf	pad@fp,w
  8612  1465  00AB               	movwf	??_pad
  8613  1466  082B               	movf	??_pad,w
  8614  1467  00A0               	movwf	fputs@fp
  8615  1468  0828               	movf	pad@buf,w
  8616  1469  3191  2122  3194   	fcall	_fputs
  8617  146C                     l6249:	
  8618                           
  8619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  8620  146C  0020               	movlb	0	; select bank0
  8621  146D  1BAA               	btfsc	pad@p+1,7
  8622  146E  2C74               	goto	l6253
  8623  146F  082A               	movf	pad@p+1,w
  8624  1470  00AF               	movwf	pad@w+1
  8625  1471  0829               	movf	pad@p,w
  8626  1472  00AE               	movwf	pad@w
  8627  1473  2C76               	goto	l1017
  8628  1474                     l6253:	
  8629  1474  01AE               	clrf	pad@w
  8630  1475  01AF               	clrf	pad@w+1
  8631  1476                     l1017:	
  8632                           
  8633                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  8634  1476  01AC               	clrf	pad@i
  8635  1477  01AD               	clrf	pad@i+1
  8636  1478                     l6259:	
  8637                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8638                           
  8639                           
  8640                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8641  1478  082D               	movf	pad@i+1,w
  8642  1479  3A80               	xorlw	128
  8643  147A  00AB               	movwf	??_pad
  8644  147B  082F               	movf	pad@w+1,w
  8645  147C  3A80               	xorlw	128
  8646  147D  022B               	subwf	??_pad,w
  8647  147E  1D03               	skipz
  8648  147F  2C82               	goto	u6625
  8649  1480  082E               	movf	pad@w,w
  8650  1481  022C               	subwf	pad@i,w
  8651  1482                     u6625:	
  8652  1482  1803               	btfsc	3,0
  8653  1483  2C96               	goto	l1020
  8654                           
  8655                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  8656  1484  3020               	movlw	32
  8657  1485  00F4               	movwf	fputc@c
  8658  1486  3000               	movlw	0
  8659  1487  00F5               	movwf	fputc@c+1
  8660  1488  0020               	movlb	0	; select bank0
  8661  1489  0830               	movf	pad@fp,w
  8662  148A  00AB               	movwf	??_pad
  8663  148B  082B               	movf	??_pad,w
  8664  148C  00F6               	movwf	fputc@fp
  8665  148D  3192  2291  3194   	fcall	_fputc
  8666                           
  8667                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  8668  1490  3001               	movlw	1
  8669  1491  0020               	movlb	0	; select bank0
  8670  1492  07AC               	addwf	pad@i,f
  8671  1493  3000               	movlw	0
  8672  1494  3DAD               	addwfc	pad@i+1,f
  8673  1495  2C78               	goto	l6259
  8674  1496                     l1020:	
  8675                           
  8676                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  8677  1496  0022               	movlb	2	; select bank2
  8678  1497  185A               	btfsc	_flags^(0+256),0
  8679  1498  2CA2               	goto	l1021
  8680                           
  8681                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  8682  1499  0020               	movlb	0	; select bank0
  8683  149A  0830               	movf	pad@fp,w
  8684  149B  00AB               	movwf	??_pad
  8685  149C  082B               	movf	??_pad,w
  8686  149D  00A0               	movwf	fputs@fp
  8687  149E  0828               	movf	pad@buf,w
  8688  149F  3191  2122  3194   	fcall	_fputs
  8689  14A2                     l1021:	
  8690                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 92:     }
  8691                           
  8692                           
  8693                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  8694  14A2  0020               	movlb	0	; select bank0
  8695  14A3  0828               	movf	pad@buf,w
  8696  14A4  3190  2010         	fcall	_strlen
  8697  14A6  0020               	movlb	0	; select bank0
  8698  14A7  082E               	movf	pad@w,w
  8699  14A8  0771               	addwf	?_strlen,w
  8700  14A9  00A8               	movwf	?_pad
  8701  14AA  082F               	movf	pad@w+1,w
  8702  14AB  3D72               	addwfc	?_strlen+1,w
  8703  14AC  00A9               	movwf	?_pad+1
  8704  14AD  0008               	return
  8705  14AE                     __end_of_pad:	
  8706                           
  8707                           	psect	text12
  8708  1010                     __ptext12:	
  8709 ;; *************** function _strlen *****************
  8710 ;; Defined at:
  8711 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  8712 ;; Parameters:    Size  Location     Type
  8713 ;;  s               1    wreg     PTR const unsigned char 
  8714 ;;		 -> dbuf(80), 
  8715 ;; Auto vars:     Size  Location     Type
  8716 ;;  s               1    5[COMMON] PTR const unsigned char 
  8717 ;;		 -> dbuf(80), 
  8718 ;;  a               1    4[COMMON] PTR const unsigned char 
  8719 ;;		 -> dbuf(80), 
  8720 ;; Return value:  Size  Location     Type
  8721 ;;                  2    1[COMMON] unsigned int 
  8722 ;; Registers used:
  8723 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8724 ;; Tracked objects:
  8725 ;;		On entry : 0/0
  8726 ;;		On exit  : 0/0
  8727 ;;		Unchanged: 0/0
  8728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8729 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8730 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8731 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8732 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8733 ;;Total ram usage:        5 bytes
  8734 ;; Hardware stack levels used:    1
  8735 ;; Hardware stack levels required when called:    4
  8736 ;; This function calls:
  8737 ;;		Nothing
  8738 ;; This function is called by:
  8739 ;;		_pad
  8740 ;; This function uses a non-reentrant model
  8741 ;;
  8742                           
  8743                           
  8744                           ;psect for function _strlen
  8745  1010                     _strlen:	
  8746                           
  8747                           ;incstack = 0
  8748                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  8749                           ;strlen@s stored from wreg
  8750  1010  00F5               	movwf	strlen@s
  8751  1011  0875               	movf	strlen@s,w
  8752  1012  00F3               	movwf	??_strlen
  8753  1013  0873               	movf	??_strlen,w
  8754  1014  00F4               	movwf	strlen@a
  8755  1015                     l4229:	
  8756  1015  0875               	movf	strlen@s,w
  8757  1016  0086               	movwf	6
  8758  1017  3002               	movlw	2	; select bank4/5
  8759  1018  0087               	movwf	7
  8760  1019  0801               	movf	1,w
  8761  101A  1903               	btfsc	3,2
  8762  101B  2821               	goto	l4231
  8763  101C  3001               	movlw	1
  8764  101D  00F3               	movwf	??_strlen
  8765  101E  0873               	movf	??_strlen,w
  8766  101F  07F5               	addwf	strlen@s,f
  8767  1020  2815               	goto	l4229
  8768  1021                     l4231:	
  8769  1021  0874               	movf	strlen@a,w
  8770  1022  0275               	subwf	strlen@s,w
  8771  1023  00F1               	movwf	?_strlen
  8772  1024  01F2               	clrf	?_strlen+1
  8773  1025  1BF1               	btfsc	?_strlen,7
  8774  1026  03F2               	decf	?_strlen+1,f
  8775  1027  0008               	return
  8776  1028                     __end_of_strlen:	
  8777                           
  8778                           	psect	text13
  8779  1122                     __ptext13:	
  8780 ;; *************** function _fputs *****************
  8781 ;; Defined at:
  8782 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  8783 ;; Parameters:    Size  Location     Type
  8784 ;;  s               1    wreg     PTR const unsigned char 
  8785 ;;		 -> dbuf(80), 
  8786 ;;  fp              1    0[BANK0 ] PTR struct _IO_FILE
  8787 ;;		 -> NULL(0), 
  8788 ;; Auto vars:     Size  Location     Type
  8789 ;;  s               1    7[BANK0 ] PTR const unsigned char 
  8790 ;;		 -> dbuf(80), 
  8791 ;;  i               2    5[BANK0 ] int 
  8792 ;;  c               1    4[BANK0 ] unsigned char 
  8793 ;; Return value:  Size  Location     Type
  8794 ;;                  2    0[BANK0 ] int 
  8795 ;; Registers used:
  8796 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8797 ;; Tracked objects:
  8798 ;;		On entry : 0/0
  8799 ;;		On exit  : 0/0
  8800 ;;		Unchanged: 0/0
  8801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8802 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8803 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8804 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8805 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8806 ;;Total ram usage:        8 bytes
  8807 ;; Hardware stack levels used:    1
  8808 ;; Hardware stack levels required when called:    7
  8809 ;; This function calls:
  8810 ;;		_fputc
  8811 ;; This function is called by:
  8812 ;;		_pad
  8813 ;; This function uses a non-reentrant model
  8814 ;;
  8815                           
  8816                           
  8817                           ;psect for function _fputs
  8818  1122                     _fputs:	
  8819                           
  8820                           ;incstack = 0
  8821                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8822                           ;fputs@s stored from wreg
  8823  1122  0020               	movlb	0	; select bank0
  8824  1123  00A7               	movwf	fputs@s
  8825  1124  01A5               	clrf	fputs@i
  8826  1125  01A6               	clrf	fputs@i+1
  8827  1126                     l6045:	
  8828  1126  0825               	movf	fputs@i,w
  8829  1127  0727               	addwf	fputs@s,w
  8830  1128  00A1               	movwf	??_fputs
  8831  1129  0821               	movf	??_fputs,w
  8832  112A  0086               	movwf	6
  8833  112B  3002               	movlw	2	; select bank4/5
  8834  112C  0087               	movwf	7
  8835  112D  0801               	movf	1,w
  8836  112E  00A2               	movwf	??_fputs+1
  8837  112F  0822               	movf	??_fputs+1,w
  8838  1130  00A4               	movwf	fputs@c
  8839  1131  0824               	movf	fputs@c,w
  8840  1132  1903               	btfsc	3,2
  8841  1133  0008               	return
  8842  1134  0824               	movf	fputs@c,w
  8843  1135  00A1               	movwf	??_fputs
  8844  1136  01A2               	clrf	??_fputs+1
  8845  1137  0821               	movf	??_fputs,w
  8846  1138  00F4               	movwf	fputc@c
  8847  1139  0822               	movf	??_fputs+1,w
  8848  113A  00F5               	movwf	fputc@c+1
  8849  113B  0820               	movf	fputs@fp,w
  8850  113C  00A3               	movwf	??_fputs+2
  8851  113D  0823               	movf	??_fputs+2,w
  8852  113E  00F6               	movwf	fputc@fp
  8853  113F  3192  2291  3191   	fcall	_fputc
  8854  1142  3001               	movlw	1
  8855  1143  0020               	movlb	0	; select bank0
  8856  1144  07A5               	addwf	fputs@i,f
  8857  1145  3000               	movlw	0
  8858  1146  3DA6               	addwfc	fputs@i+1,f
  8859  1147  2926               	goto	l6045
  8860  1148                     __end_of_fputs:	
  8861                           
  8862                           	psect	text14
  8863  1291                     __ptext14:	
  8864 ;; *************** function _fputc *****************
  8865 ;; Defined at:
  8866 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  8867 ;; Parameters:    Size  Location     Type
  8868 ;;  c               2    4[COMMON] int 
  8869 ;;  fp              1    6[COMMON] PTR struct _IO_FILE
  8870 ;;		 -> NULL(0), 
  8871 ;; Auto vars:     Size  Location     Type
  8872 ;;		None
  8873 ;; Return value:  Size  Location     Type
  8874 ;;                  2    4[COMMON] int 
  8875 ;; Registers used:
  8876 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8877 ;; Tracked objects:
  8878 ;;		On entry : 0/0
  8879 ;;		On exit  : 0/0
  8880 ;;		Unchanged: 0/0
  8881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8882 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8884 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8885 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8886 ;;Total ram usage:        8 bytes
  8887 ;; Hardware stack levels used:    1
  8888 ;; Hardware stack levels required when called:    6
  8889 ;; This function calls:
  8890 ;;		_putch
  8891 ;; This function is called by:
  8892 ;;		_pad
  8893 ;;		_vfpfcnvrt
  8894 ;;		_fputs
  8895 ;; This function uses a non-reentrant model
  8896 ;;
  8897                           
  8898                           
  8899                           ;psect for function _fputc
  8900  1291                     _fputc:	
  8901                           
  8902                           ;incstack = 0
  8903                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8904  1291  0876               	movf	fputc@fp,w
  8905  1292  1D03               	btfss	3,2
  8906  1293  0876               	movf	fputc@fp,w
  8907  1294  1D03               	btfss	3,2
  8908  1295  2A9A               	goto	l4053
  8909  1296  0874               	movf	fputc@c,w
  8910  1297  319E  268E         	fcall	_putch
  8911  1299  0008               	return
  8912  129A                     l4053:	
  8913  129A  0876               	movf	fputc@fp,w
  8914  129B  3E03               	addlw	3
  8915  129C  0086               	movwf	6
  8916  129D  0187               	clrf	7
  8917  129E  0016               	moviw fsr1++
  8918  129F  0401               	iorwf	1,w
  8919  12A0  1903               	btfsc	3,2
  8920  12A1  2ABD               	goto	l4057
  8921  12A2  0876               	movf	fputc@fp,w
  8922  12A3  3E03               	addlw	3
  8923  12A4  0086               	movwf	6
  8924  12A5  0187               	clrf	7
  8925  12A6  3F40               	moviw [0]fsr1
  8926  12A7  00F7               	movwf	??_fputc
  8927  12A8  3F41               	moviw [1]fsr1
  8928  12A9  00F8               	movwf	??_fputc+1
  8929  12AA  0A76               	incf	fputc@fp,w
  8930  12AB  0086               	movwf	6
  8931  12AC  0187               	clrf	7
  8932  12AD  3F40               	moviw [0]fsr1
  8933  12AE  00F9               	movwf	??_fputc+2
  8934  12AF  3F41               	moviw [1]fsr1
  8935  12B0  00FA               	movwf	??_fputc+3
  8936  12B1  087A               	movf	??_fputc+3,w
  8937  12B2  3A80               	xorlw	128
  8938  12B3  00FB               	movwf	??_fputc+4
  8939  12B4  0878               	movf	??_fputc+1,w
  8940  12B5  3A80               	xorlw	128
  8941  12B6  027B               	subwf	??_fputc+4,w
  8942  12B7  1D03               	skipz
  8943  12B8  2ABB               	goto	u3185
  8944  12B9  0877               	movf	??_fputc,w
  8945  12BA  0279               	subwf	??_fputc+2,w
  8946  12BB                     u3185:	
  8947  12BB  1803               	skipnc
  8948  12BC  0008               	return
  8949  12BD                     l4057:	
  8950  12BD  0A76               	incf	fputc@fp,w
  8951  12BE  0086               	movwf	6
  8952  12BF  0187               	clrf	7
  8953  12C0  3001               	movlw	1
  8954  12C1  0781               	addwf	1,f
  8955  12C2  3141               	addfsr 1,1
  8956  12C3  1803               	skipnc
  8957  12C4  0A81               	incf	1,f
  8958  12C5  0008               	return
  8959  12C6                     __end_of_fputc:	
  8960                           
  8961                           	psect	text15
  8962  1E8E                     __ptext15:	
  8963 ;; *************** function _putch *****************
  8964 ;; Defined at:
  8965 ;;		line 201 in file "mcc_generated_files/eusart.c"
  8966 ;; Parameters:    Size  Location     Type
  8967 ;;  txData          1    wreg     unsigned char 
  8968 ;; Auto vars:     Size  Location     Type
  8969 ;;  txData          1    3[COMMON] unsigned char 
  8970 ;; Return value:  Size  Location     Type
  8971 ;;                  1    wreg      void 
  8972 ;; Registers used:
  8973 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8974 ;; Tracked objects:
  8975 ;;		On entry : 0/0
  8976 ;;		On exit  : 0/0
  8977 ;;		Unchanged: 0/0
  8978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8980 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8982 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8983 ;;Total ram usage:        1 bytes
  8984 ;; Hardware stack levels used:    1
  8985 ;; Hardware stack levels required when called:    5
  8986 ;; This function calls:
  8987 ;;		_EUSART_Write
  8988 ;; This function is called by:
  8989 ;;		_fputc
  8990 ;; This function uses a non-reentrant model
  8991 ;;
  8992                           
  8993                           
  8994                           ;psect for function _putch
  8995  1E8E                     _putch:	
  8996                           
  8997                           ;incstack = 0
  8998                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8999                           ;putch@txData stored from wreg
  9000  1E8E  00F3               	movwf	putch@txData
  9001                           
  9002                           ;mcc_generated_files/eusart.c: 201: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 202: {;mcc_generated_files/eusart.c: 203:     EUSART_Write(txData);
  9003  1E8F  0873               	movf	putch@txData,w
  9004  1E90  3190  20FE         	fcall	_EUSART_Write
  9005  1E92  0008               	return
  9006  1E93                     __end_of_putch:	
  9007                           
  9008                           	psect	text16
  9009  10FE                     __ptext16:	
  9010 ;; *************** function _EUSART_Write *****************
  9011 ;; Defined at:
  9012 ;;		line 173 in file "mcc_generated_files/eusart.c"
  9013 ;; Parameters:    Size  Location     Type
  9014 ;;  txData          1    wreg     unsigned char 
  9015 ;; Auto vars:     Size  Location     Type
  9016 ;;  txData          1    2[COMMON] unsigned char 
  9017 ;; Return value:  Size  Location     Type
  9018 ;;                  1    wreg      void 
  9019 ;; Registers used:
  9020 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9021 ;; Tracked objects:
  9022 ;;		On entry : 0/0
  9023 ;;		On exit  : 0/0
  9024 ;;		Unchanged: 0/0
  9025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9027 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9028 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9029 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9030 ;;Total ram usage:        2 bytes
  9031 ;; Hardware stack levels used:    1
  9032 ;; Hardware stack levels required when called:    4
  9033 ;; This function calls:
  9034 ;;		Nothing
  9035 ;; This function is called by:
  9036 ;;		_putch
  9037 ;; This function uses a non-reentrant model
  9038 ;;
  9039                           
  9040                           
  9041                           ;psect for function _EUSART_Write
  9042  10FE                     _EUSART_Write:	
  9043                           
  9044                           ;incstack = 0
  9045                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  9046                           ;EUSART_Write@txData stored from wreg
  9047  10FE  00F2               	movwf	EUSART_Write@txData
  9048  10FF                     l3911:	
  9049                           ;mcc_generated_files/eusart.c: 173: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 174: {;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemai
      +                          ning)
  9050                           
  9051                           
  9052                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
  9053  10FF  0022               	movlb	2	; select bank2
  9054  1100  0865               	movf	_eusartTxBufferRemaining^(0+256),w	;volatile
  9055  1101  1903               	btfsc	3,2
  9056  1102  28FF               	goto	l3911
  9057                           
  9058                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TXIE)
  9059  1103  0021               	movlb	1	; select bank1
  9060  1104  1A11               	btfsc	17,4	;volatile
  9061  1105  290A               	goto	l216
  9062                           
  9063                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TX1
      +                          REG = txData;
  9064  1106  0872               	movf	EUSART_Write@txData,w
  9065  1107  0023               	movlb	3	; select bank3
  9066  1108  009A               	movwf	26	;volatile
  9067                           
  9068                           ;mcc_generated_files/eusart.c: 182:     }
  9069  1109  291F               	goto	l3925
  9070  110A                     l216:	
  9071                           ;mcc_generated_files/eusart.c: 183:     else
  9072                           
  9073                           
  9074                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TXIE = 0;
  9075  110A  1211               	bcf	17,4	;volatile
  9076                           
  9077                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
  9078  110B  0872               	movf	EUSART_Write@txData,w
  9079  110C  00F1               	movwf	??_EUSART_Write
  9080  110D  086F               	movf	_eusartTxHead^(0+128),w
  9081  110E  3EC5               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
  9082  110F  0086               	movwf	6
  9083  1110  3001               	movlw	1	; select bank3/4
  9084  1111  0087               	movwf	7
  9085  1112  0871               	movf	??_EUSART_Write,w
  9086  1113  0081               	movwf	1
  9087  1114  3001               	movlw	1
  9088  1115  00F1               	movwf	??_EUSART_Write
  9089  1116  0871               	movf	??_EUSART_Write,w
  9090  1117  07EF               	addwf	_eusartTxHead^(0+128),f	;volatile
  9091                           
  9092                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  9093  1118  3008               	movlw	8
  9094  1119  026F               	subwf	_eusartTxHead^(0+128),w	;volatile
  9095  111A  1803               	btfsc	3,0
  9096                           
  9097                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
  9098  111B  01EF               	clrf	_eusartTxHead^(0+128)	;volatile
  9099                           
  9100                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
  9101  111C  3001               	movlw	1
  9102  111D  0022               	movlb	2	; select bank2
  9103  111E  02E5               	subwf	_eusartTxBufferRemaining^(0+256),f	;volatile
  9104  111F                     l3925:	
  9105                           
  9106                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TXIE = 1;
  9107  111F  0021               	movlb	1	; select bank1
  9108  1120  1611               	bsf	17,4	;volatile
  9109  1121  0008               	return
  9110  1122                     __end_of_EUSART_Write:	
  9111                           
  9112                           	psect	text17
  9113  06F1                     __ptext17:	
  9114 ;; *************** function _floorf *****************
  9115 ;; Defined at:
  9116 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
  9117 ;; Parameters:    Size  Location     Type
  9118 ;;  x               4   32[BANK0 ] float 
  9119 ;; Auto vars:     Size  Location     Type
  9120 ;;  u               4   48[BANK0 ] struct .
  9121 ;;  m               4   42[BANK0 ] unsigned long 
  9122 ;;  e               2   46[BANK0 ] int 
  9123 ;; Return value:  Size  Location     Type
  9124 ;;                  4   32[BANK0 ] float 
  9125 ;; Registers used:
  9126 ;;		wreg, status,2, status,0
  9127 ;; Tracked objects:
  9128 ;;		On entry : 0/0
  9129 ;;		On exit  : 0/0
  9130 ;;		Unchanged: 0/0
  9131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9132 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9133 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9134 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9135 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9136 ;;Total ram usage:       20 bytes
  9137 ;; Hardware stack levels used:    1
  9138 ;; Hardware stack levels required when called:    4
  9139 ;; This function calls:
  9140 ;;		Nothing
  9141 ;; This function is called by:
  9142 ;;		_efgtoa
  9143 ;; This function uses a non-reentrant model
  9144 ;;
  9145                           
  9146                           
  9147                           ;psect for function _floorf
  9148  06F1                     _floorf:	
  9149                           
  9150                           ;incstack = 0
  9151                           ; Regs used in _floorf: [wreg+status,2+status,0]
  9152  06F1  0022               	movlb	2	; select bank2
  9153  06F2  084F               	movf	(floorf@F524+3)^(0+256),w
  9154  06F3  0020               	movlb	0	; select bank0
  9155  06F4  00D3               	movwf	floorf@u+3
  9156  06F5  0022               	movlb	2	; select bank2
  9157  06F6  084E               	movf	(floorf@F524+2)^(0+256),w
  9158  06F7  0020               	movlb	0	; select bank0
  9159  06F8  00D2               	movwf	floorf@u+2
  9160  06F9  0022               	movlb	2	; select bank2
  9161  06FA  084D               	movf	(floorf@F524+1)^(0+256),w
  9162  06FB  0020               	movlb	0	; select bank0
  9163  06FC  00D1               	movwf	floorf@u+1
  9164  06FD  0022               	movlb	2	; select bank2
  9165  06FE  084C               	movf	floorf@F524^(0+256),w
  9166  06FF  0020               	movlb	0	; select bank0
  9167  0700  00D0               	movwf	floorf@u
  9168  0701  0843               	movf	floorf@x+3,w
  9169  0702  00D3               	movwf	floorf@u+3
  9170  0703  0842               	movf	floorf@x+2,w
  9171  0704  00D2               	movwf	floorf@u+2
  9172  0705  0841               	movf	floorf@x+1,w
  9173  0706  00D1               	movwf	floorf@u+1
  9174  0707  0840               	movf	floorf@x,w
  9175  0708  00D0               	movwf	floorf@u
  9176  0709  0850               	movf	floorf@u,w
  9177  070A  00C4               	movwf	??_floorf
  9178  070B  0851               	movf	floorf@u+1,w
  9179  070C  00C5               	movwf	??_floorf+1
  9180  070D  0852               	movf	floorf@u+2,w
  9181  070E  00C6               	movwf	??_floorf+2
  9182  070F  0853               	movf	floorf@u+3,w
  9183  0710  00C7               	movwf	??_floorf+3
  9184  0711  3017               	movlw	23
  9185  0712                     u3915:	
  9186  0712  36C7               	lsrf	??_floorf+3,f
  9187  0713  0CC6               	rrf	??_floorf+2,f
  9188  0714  0CC5               	rrf	??_floorf+1,f
  9189  0715  0CC4               	rrf	??_floorf,f
  9190  0716  0B89               	decfsz	9,f
  9191  0717  2F12               	goto	u3915
  9192  0718  30FF               	movlw	255
  9193  0719  0544               	andwf	??_floorf,w
  9194  071A  00C8               	movwf	??_floorf+4
  9195  071B  3000               	movlw	0
  9196  071C  0545               	andwf	??_floorf+1,w
  9197  071D  00C9               	movwf	??_floorf+5
  9198  071E  0848               	movf	??_floorf+4,w
  9199  071F  3E81               	addlw	129
  9200  0720  00CE               	movwf	floorf@e
  9201  0721  30FF               	movlw	255
  9202  0722  3D49               	addwfc	??_floorf+5,w
  9203  0723  00CF               	movwf	floorf@e+1
  9204  0724  084F               	movf	floorf@e+1,w
  9205  0725  3A80               	xorlw	128
  9206  0726  00C4               	movwf	??_floorf
  9207  0727  3080               	movlw	128
  9208  0728  0244               	subwf	??_floorf,w
  9209  0729  1D03               	skipz
  9210  072A  2F2D               	goto	u3925
  9211  072B  3017               	movlw	23
  9212  072C  024E               	subwf	floorf@e,w
  9213  072D                     u3925:	
  9214  072D  1803               	btfsc	3,0
  9215  072E  0008               	return
  9216  072F  0020               	movlb	0	; select bank0
  9217  0730  1BCF               	btfsc	floorf@e+1,7
  9218  0731  2F8A               	goto	l4537
  9219  0732  30FF               	movlw	255
  9220  0733  00C4               	movwf	??_floorf
  9221  0734  30FF               	movlw	255
  9222  0735  00C5               	movwf	??_floorf+1
  9223  0736  307F               	movlw	127
  9224  0737  00C6               	movwf	??_floorf+2
  9225  0738  3000               	movlw	0
  9226  0739  00C7               	movwf	??_floorf+3
  9227  073A  0A4E               	incf	floorf@e,w
  9228  073B  2F40               	goto	u3940
  9229  073C                     u3945:	
  9230  073C  37C7               	asrf	??_floorf+3,f
  9231  073D  0CC6               	rrf	??_floorf+2,f
  9232  073E  0CC5               	rrf	??_floorf+1,f
  9233  073F  0CC4               	rrf	??_floorf,f
  9234  0740                     u3940:	
  9235  0740  0B89               	decfsz	9,f
  9236  0741  2F3C               	goto	u3945
  9237  0742  0847               	movf	??_floorf+3,w
  9238  0743  00CD               	movwf	floorf@m+3
  9239  0744  0846               	movf	??_floorf+2,w
  9240  0745  00CC               	movwf	floorf@m+2
  9241  0746  0845               	movf	??_floorf+1,w
  9242  0747  00CB               	movwf	floorf@m+1
  9243  0748  0844               	movf	??_floorf,w
  9244  0749  00CA               	movwf	floorf@m
  9245  074A  0850               	movf	floorf@u,w
  9246  074B  054A               	andwf	floorf@m,w
  9247  074C  00C4               	movwf	??_floorf
  9248  074D  0851               	movf	floorf@u+1,w
  9249  074E  054B               	andwf	floorf@m+1,w
  9250  074F  00C5               	movwf	??_floorf+1
  9251  0750  0852               	movf	floorf@u+2,w
  9252  0751  054C               	andwf	floorf@m+2,w
  9253  0752  00C6               	movwf	??_floorf+2
  9254  0753  0853               	movf	floorf@u+3,w
  9255  0754  054D               	andwf	floorf@m+3,w
  9256  0755  00C7               	movwf	??_floorf+3
  9257  0756  0847               	movf	??_floorf+3,w
  9258  0757  0446               	iorwf	??_floorf+2,w
  9259  0758  0445               	iorwf	??_floorf+1,w
  9260  0759  0444               	iorwf	??_floorf,w
  9261  075A  1903               	btfsc	3,2
  9262  075B  0008               	return
  9263  075C  0850               	movf	floorf@u,w
  9264  075D  00C4               	movwf	??_floorf
  9265  075E  0851               	movf	floorf@u+1,w
  9266  075F  00C5               	movwf	??_floorf+1
  9267  0760  0852               	movf	floorf@u+2,w
  9268  0761  00C6               	movwf	??_floorf+2
  9269  0762  0853               	movf	floorf@u+3,w
  9270  0763  00C7               	movwf	??_floorf+3
  9271  0764  301F               	movlw	31
  9272  0765                     u3965:	
  9273  0765  36C7               	lsrf	??_floorf+3,f
  9274  0766  0CC6               	rrf	??_floorf+2,f
  9275  0767  0CC5               	rrf	??_floorf+1,f
  9276  0768  0CC4               	rrf	??_floorf,f
  9277  0769  0B89               	decfsz	9,f
  9278  076A  2F65               	goto	u3965
  9279  076B  0847               	movf	??_floorf+3,w
  9280  076C  0446               	iorwf	??_floorf+2,w
  9281  076D  0445               	iorwf	??_floorf+1,w
  9282  076E  0444               	iorwf	??_floorf,w
  9283  076F  1903               	skipnz
  9284  0770  2F79               	goto	l4535
  9285  0771  084A               	movf	floorf@m,w
  9286  0772  07D0               	addwf	floorf@u,f
  9287  0773  084B               	movf	floorf@m+1,w
  9288  0774  3DD1               	addwfc	floorf@u+1,f
  9289  0775  084C               	movf	floorf@m+2,w
  9290  0776  3DD2               	addwfc	floorf@u+2,f
  9291  0777  084D               	movf	floorf@m+3,w
  9292  0778  3DD3               	addwfc	floorf@u+3,f
  9293  0779                     l4535:	
  9294  0779  094A               	comf	floorf@m,w
  9295  077A  00C4               	movwf	??_floorf
  9296  077B  094B               	comf	floorf@m+1,w
  9297  077C  00C5               	movwf	??_floorf+1
  9298  077D  094C               	comf	floorf@m+2,w
  9299  077E  00C6               	movwf	??_floorf+2
  9300  077F  094D               	comf	floorf@m+3,w
  9301  0780  00C7               	movwf	??_floorf+3
  9302  0781  0844               	movf	??_floorf,w
  9303  0782  05D0               	andwf	floorf@u,f
  9304  0783  0845               	movf	??_floorf+1,w
  9305  0784  05D1               	andwf	floorf@u+1,f
  9306  0785  0846               	movf	??_floorf+2,w
  9307  0786  05D2               	andwf	floorf@u+2,f
  9308  0787  0847               	movf	??_floorf+3,w
  9309  0788  05D3               	andwf	floorf@u+3,f
  9310  0789  2FC0               	goto	l1609
  9311  078A                     l4537:	
  9312  078A  0850               	movf	floorf@u,w
  9313  078B  00C4               	movwf	??_floorf
  9314  078C  0851               	movf	floorf@u+1,w
  9315  078D  00C5               	movwf	??_floorf+1
  9316  078E  0852               	movf	floorf@u+2,w
  9317  078F  00C6               	movwf	??_floorf+2
  9318  0790  0853               	movf	floorf@u+3,w
  9319  0791  00C7               	movwf	??_floorf+3
  9320  0792  301F               	movlw	31
  9321  0793                     u3985:	
  9322  0793  36C7               	lsrf	??_floorf+3,f
  9323  0794  0CC6               	rrf	??_floorf+2,f
  9324  0795  0CC5               	rrf	??_floorf+1,f
  9325  0796  0CC4               	rrf	??_floorf,f
  9326  0797  0B89               	decfsz	9,f
  9327  0798  2F93               	goto	u3985
  9328  0799  0847               	movf	??_floorf+3,w
  9329  079A  0446               	iorwf	??_floorf+2,w
  9330  079B  0445               	iorwf	??_floorf+1,w
  9331  079C  0444               	iorwf	??_floorf,w
  9332  079D  1D03               	skipz
  9333  079E  2FA3               	goto	l4541
  9334  079F  3000               	movlw	0
  9335  07A0  00D3               	movwf	floorf@u+3
  9336  07A1  3000               	movlw	0
  9337  07A2  2FBB               	goto	L9
  9338  07A3                     l4541:	
  9339  07A3  0850               	movf	floorf@u,w
  9340  07A4  00C4               	movwf	??_floorf
  9341  07A5  0851               	movf	floorf@u+1,w
  9342  07A6  00C5               	movwf	??_floorf+1
  9343  07A7  0852               	movf	floorf@u+2,w
  9344  07A8  00C6               	movwf	??_floorf+2
  9345  07A9  0853               	movf	floorf@u+3,w
  9346  07AA  00C7               	movwf	??_floorf+3
  9347  07AB  3001               	movlw	1
  9348  07AC                     u4005:	
  9349  07AC  35C4               	lslf	??_floorf,f
  9350  07AD  0DC5               	rlf	??_floorf+1,f
  9351  07AE  0DC6               	rlf	??_floorf+2,f
  9352  07AF  0DC7               	rlf	??_floorf+3,f
  9353  07B0  0B89               	decfsz	9,f
  9354  07B1  2FAC               	goto	u4005
  9355  07B2  0847               	movf	??_floorf+3,w
  9356  07B3  0446               	iorwf	??_floorf+2,w
  9357  07B4  0445               	iorwf	??_floorf+1,w
  9358  07B5  0444               	iorwf	??_floorf,w
  9359  07B6  1903               	skipnz
  9360  07B7  2FC0               	goto	l1609
  9361  07B8  30BF               	movlw	191
  9362  07B9  00D3               	movwf	floorf@u+3
  9363  07BA  3080               	movlw	128
  9364  07BB                     L9:	
  9365  07BB  00D2               	movwf	floorf@u+2
  9366  07BC  3000               	movlw	0
  9367  07BD  00D1               	movwf	floorf@u+1
  9368  07BE  3000               	movlw	0
  9369  07BF  00D0               	movwf	floorf@u
  9370  07C0                     l1609:	
  9371  07C0  0853               	movf	floorf@u+3,w
  9372  07C1  00C3               	movwf	?_floorf+3
  9373  07C2  0852               	movf	floorf@u+2,w
  9374  07C3  00C2               	movwf	?_floorf+2
  9375  07C4  0851               	movf	floorf@u+1,w
  9376  07C5  00C1               	movwf	?_floorf+1
  9377  07C6  0850               	movf	floorf@u,w
  9378  07C7  00C0               	movwf	?_floorf
  9379  07C8  0008               	return
  9380  07C9                     __end_of_floorf:	
  9381                           
  9382                           	psect	text18
  9383  15B6                     __ptext18:	
  9384 ;; *************** function ___fpclassifyf *****************
  9385 ;; Defined at:
  9386 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
  9387 ;; Parameters:    Size  Location     Type
  9388 ;;  x               4    1[COMMON] float 
  9389 ;; Auto vars:     Size  Location     Type
  9390 ;;  u               4    2[BANK0 ] struct .
  9391 ;;  e               2    0[BANK0 ] int 
  9392 ;; Return value:  Size  Location     Type
  9393 ;;                  2    1[COMMON] int 
  9394 ;; Registers used:
  9395 ;;		wreg, status,2, status,0
  9396 ;; Tracked objects:
  9397 ;;		On entry : 0/0
  9398 ;;		On exit  : 0/0
  9399 ;;		Unchanged: 0/0
  9400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9401 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9402 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9403 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9404 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9405 ;;Total ram usage:       16 bytes
  9406 ;; Hardware stack levels used:    1
  9407 ;; Hardware stack levels required when called:    4
  9408 ;; This function calls:
  9409 ;;		Nothing
  9410 ;; This function is called by:
  9411 ;;		_efgtoa
  9412 ;; This function uses a non-reentrant model
  9413 ;;
  9414                           
  9415                           
  9416                           ;psect for function ___fpclassifyf
  9417  15B6                     ___fpclassifyf:	
  9418                           
  9419                           ;incstack = 0
  9420                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  9421  15B6  0022               	movlb	2	; select bank2
  9422  15B7  0853               	movf	(___fpclassifyf@F463+3)^(0+256),w
  9423  15B8  0020               	movlb	0	; select bank0
  9424  15B9  00A5               	movwf	___fpclassifyf@u+3
  9425  15BA  0022               	movlb	2	; select bank2
  9426  15BB  0852               	movf	(___fpclassifyf@F463+2)^(0+256),w
  9427  15BC  0020               	movlb	0	; select bank0
  9428  15BD  00A4               	movwf	___fpclassifyf@u+2
  9429  15BE  0022               	movlb	2	; select bank2
  9430  15BF  0851               	movf	(___fpclassifyf@F463+1)^(0+256),w
  9431  15C0  0020               	movlb	0	; select bank0
  9432  15C1  00A3               	movwf	___fpclassifyf@u+1
  9433  15C2  0022               	movlb	2	; select bank2
  9434  15C3  0850               	movf	___fpclassifyf@F463^(0+256),w
  9435  15C4  0020               	movlb	0	; select bank0
  9436  15C5  00A2               	movwf	___fpclassifyf@u
  9437  15C6  0874               	movf	___fpclassifyf@x+3,w
  9438  15C7  00A5               	movwf	___fpclassifyf@u+3
  9439  15C8  0873               	movf	___fpclassifyf@x+2,w
  9440  15C9  00A4               	movwf	___fpclassifyf@u+2
  9441  15CA  0872               	movf	___fpclassifyf@x+1,w
  9442  15CB  00A3               	movwf	___fpclassifyf@u+1
  9443  15CC  0871               	movf	___fpclassifyf@x,w
  9444  15CD  00A2               	movwf	___fpclassifyf@u
  9445  15CE  0822               	movf	___fpclassifyf@u,w
  9446  15CF  00F5               	movwf	??___fpclassifyf
  9447  15D0  0823               	movf	___fpclassifyf@u+1,w
  9448  15D1  00F6               	movwf	??___fpclassifyf+1
  9449  15D2  0824               	movf	___fpclassifyf@u+2,w
  9450  15D3  00F7               	movwf	??___fpclassifyf+2
  9451  15D4  0825               	movf	___fpclassifyf@u+3,w
  9452  15D5  00F8               	movwf	??___fpclassifyf+3
  9453  15D6  3017               	movlw	23
  9454  15D7                     u3795:	
  9455  15D7  36F8               	lsrf	??___fpclassifyf+3,f
  9456  15D8  0CF7               	rrf	??___fpclassifyf+2,f
  9457  15D9  0CF6               	rrf	??___fpclassifyf+1,f
  9458  15DA  0CF5               	rrf	??___fpclassifyf,f
  9459  15DB  0B89               	decfsz	9,f
  9460  15DC  2DD7               	goto	u3795
  9461  15DD  30FF               	movlw	255
  9462  15DE  0575               	andwf	??___fpclassifyf,w
  9463  15DF  00A0               	movwf	___fpclassifyf@e
  9464  15E0  3000               	movlw	0
  9465  15E1  0576               	andwf	??___fpclassifyf+1,w
  9466  15E2  00A1               	movwf	___fpclassifyf@e+1
  9467  15E3  0820               	movf	___fpclassifyf@e,w
  9468  15E4  0421               	iorwf	___fpclassifyf@e+1,w
  9469  15E5  1D03               	btfss	3,2
  9470  15E6  2E06               	goto	l4493
  9471  15E7  0822               	movf	___fpclassifyf@u,w
  9472  15E8  00F5               	movwf	??___fpclassifyf
  9473  15E9  0823               	movf	___fpclassifyf@u+1,w
  9474  15EA  00F6               	movwf	??___fpclassifyf+1
  9475  15EB  0824               	movf	___fpclassifyf@u+2,w
  9476  15EC  00F7               	movwf	??___fpclassifyf+2
  9477  15ED  0825               	movf	___fpclassifyf@u+3,w
  9478  15EE  00F8               	movwf	??___fpclassifyf+3
  9479  15EF  3001               	movlw	1
  9480  15F0                     u3815:	
  9481  15F0  35F5               	lslf	??___fpclassifyf,f
  9482  15F1  0DF6               	rlf	??___fpclassifyf+1,f
  9483  15F2  0DF7               	rlf	??___fpclassifyf+2,f
  9484  15F3  0DF8               	rlf	??___fpclassifyf+3,f
  9485  15F4  0B89               	decfsz	9,f
  9486  15F5  2DF0               	goto	u3815
  9487  15F6  0878               	movf	??___fpclassifyf+3,w
  9488  15F7  0477               	iorwf	??___fpclassifyf+2,w
  9489  15F8  0476               	iorwf	??___fpclassifyf+1,w
  9490  15F9  0475               	iorwf	??___fpclassifyf,w
  9491  15FA  1D03               	skipz
  9492  15FB  2E01               	goto	l4489
  9493  15FC  3002               	movlw	2
  9494  15FD  00F1               	movwf	?___fpclassifyf
  9495  15FE  3000               	movlw	0
  9496  15FF  00F2               	movwf	?___fpclassifyf+1
  9497  1600  0008               	return
  9498  1601                     l4489:	
  9499  1601  3003               	movlw	3
  9500  1602  00F1               	movwf	?___fpclassifyf
  9501  1603  3000               	movlw	0
  9502  1604  00F2               	movwf	?___fpclassifyf+1
  9503  1605  0008               	return
  9504  1606                     l4493:	
  9505  1606  0A20               	incf	___fpclassifyf@e,w
  9506  1607  0421               	iorwf	___fpclassifyf@e+1,w
  9507  1608  1D03               	btfss	3,2
  9508  1609  2E29               	goto	l4499
  9509  160A  0822               	movf	___fpclassifyf@u,w
  9510  160B  00F5               	movwf	??___fpclassifyf
  9511  160C  0823               	movf	___fpclassifyf@u+1,w
  9512  160D  00F6               	movwf	??___fpclassifyf+1
  9513  160E  0824               	movf	___fpclassifyf@u+2,w
  9514  160F  00F7               	movwf	??___fpclassifyf+2
  9515  1610  0825               	movf	___fpclassifyf@u+3,w
  9516  1611  00F8               	movwf	??___fpclassifyf+3
  9517  1612  3009               	movlw	9
  9518  1613                     u3845:	
  9519  1613  35F5               	lslf	??___fpclassifyf,f
  9520  1614  0DF6               	rlf	??___fpclassifyf+1,f
  9521  1615  0DF7               	rlf	??___fpclassifyf+2,f
  9522  1616  0DF8               	rlf	??___fpclassifyf+3,f
  9523  1617  0B89               	decfsz	9,f
  9524  1618  2E13               	goto	u3845
  9525  1619  0878               	movf	??___fpclassifyf+3,w
  9526  161A  0477               	iorwf	??___fpclassifyf+2,w
  9527  161B  0476               	iorwf	??___fpclassifyf+1,w
  9528  161C  0475               	iorwf	??___fpclassifyf,w
  9529  161D  1D03               	btfss	3,2
  9530  161E  2E21               	goto	u3850
  9531  161F  3001               	movlw	1
  9532  1620  2E22               	goto	u3860
  9533  1621                     u3850:	
  9534  1621  3000               	movlw	0
  9535  1622                     u3860:	
  9536  1622  00F9               	movwf	??___fpclassifyf+4
  9537  1623  01FA               	clrf	??___fpclassifyf+5
  9538  1624  0879               	movf	??___fpclassifyf+4,w
  9539  1625  00F1               	movwf	?___fpclassifyf
  9540  1626  087A               	movf	??___fpclassifyf+5,w
  9541  1627  00F2               	movwf	?___fpclassifyf+1
  9542  1628  0008               	return
  9543  1629                     l4499:	
  9544  1629  3004               	movlw	4
  9545  162A  00F1               	movwf	?___fpclassifyf
  9546  162B  3000               	movlw	0
  9547  162C  00F2               	movwf	?___fpclassifyf+1
  9548  162D  0008               	return
  9549  162E                     __end_of___fpclassifyf:	
  9550                           
  9551                           	psect	text19
  9552  1551                     __ptext19:	
  9553 ;; *************** function ___fltol *****************
  9554 ;; Defined at:
  9555 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  9556 ;; Parameters:    Size  Location     Type
  9557 ;;  f1              4    1[COMMON] int 
  9558 ;; Auto vars:     Size  Location     Type
  9559 ;;  exp1            1   11[COMMON] unsigned char 
  9560 ;;  sign1           1   10[COMMON] unsigned char 
  9561 ;; Return value:  Size  Location     Type
  9562 ;;                  4    1[COMMON] long 
  9563 ;; Registers used:
  9564 ;;		wreg, status,2, status,0
  9565 ;; Tracked objects:
  9566 ;;		On entry : 0/0
  9567 ;;		On exit  : 0/0
  9568 ;;		Unchanged: 0/0
  9569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9570 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9571 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9572 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9573 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9574 ;;Total ram usage:       11 bytes
  9575 ;; Hardware stack levels used:    1
  9576 ;; Hardware stack levels required when called:    4
  9577 ;; This function calls:
  9578 ;;		Nothing
  9579 ;; This function is called by:
  9580 ;;		_efgtoa
  9581 ;; This function uses a non-reentrant model
  9582 ;;
  9583                           
  9584                           
  9585                           ;psect for function ___fltol
  9586  1551                     ___fltol:	
  9587                           
  9588                           ;incstack = 0
  9589                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  9590  1551  1003               	clrc
  9591  1552  0D73               	rlf	___fltol@f1+2,w
  9592  1553  0D74               	rlf	___fltol@f1+3,w
  9593  1554  00F5               	movwf	??___fltol
  9594  1555  0875               	movf	??___fltol,w
  9595  1556  00FB               	movwf	___fltol@exp1
  9596  1557  087B               	movf	___fltol@exp1,w
  9597  1558  1D03               	btfss	3,2
  9598  1559  2D63               	goto	l4675
  9599  155A                     l4671:	
  9600  155A  3000               	movlw	0
  9601  155B  00F4               	movwf	?___fltol+3
  9602  155C  3000               	movlw	0
  9603  155D  00F3               	movwf	?___fltol+2
  9604  155E  3000               	movlw	0
  9605  155F  00F2               	movwf	?___fltol+1
  9606  1560  3000               	movlw	0
  9607  1561  00F1               	movwf	?___fltol
  9608  1562  0008               	return
  9609  1563                     l4675:	
  9610  1563  0871               	movf	___fltol@f1,w
  9611  1564  00F5               	movwf	??___fltol
  9612  1565  0872               	movf	___fltol@f1+1,w
  9613  1566  00F6               	movwf	??___fltol+1
  9614  1567  0873               	movf	___fltol@f1+2,w
  9615  1568  00F7               	movwf	??___fltol+2
  9616  1569  0874               	movf	___fltol@f1+3,w
  9617  156A  00F8               	movwf	??___fltol+3
  9618  156B  301F               	movlw	31
  9619  156C                     u4315:	
  9620  156C  36F8               	lsrf	??___fltol+3,f
  9621  156D  0CF7               	rrf	??___fltol+2,f
  9622  156E  0CF6               	rrf	??___fltol+1,f
  9623  156F  0CF5               	rrf	??___fltol,f
  9624  1570  0B89               	decfsz	9,f
  9625  1571  2D6C               	goto	u4315
  9626  1572  0875               	movf	??___fltol,w
  9627  1573  00F9               	movwf	??___fltol+4
  9628  1574  0879               	movf	??___fltol+4,w
  9629  1575  00FA               	movwf	___fltol@sign1
  9630  1576  17F3               	bsf	___fltol@f1+2,7
  9631  1577  30FF               	movlw	255
  9632  1578  05F1               	andwf	___fltol@f1,f
  9633  1579  30FF               	movlw	255
  9634  157A  05F2               	andwf	___fltol@f1+1,f
  9635  157B  30FF               	movlw	255
  9636  157C  05F3               	andwf	___fltol@f1+2,f
  9637  157D  3000               	movlw	0
  9638  157E  05F4               	andwf	___fltol@f1+3,f
  9639  157F  3096               	movlw	150
  9640  1580  02FB               	subwf	___fltol@exp1,f
  9641  1581  1FFB               	btfss	___fltol@exp1,7
  9642  1582  2D96               	goto	l4693
  9643  1583  087B               	movf	___fltol@exp1,w
  9644  1584  3A80               	xorlw	128
  9645  1585  3E97               	addlw	151
  9646  1586  1C03               	btfss	3,0
  9647  1587  2D5A               	goto	l4671
  9648  1588                     l4691:	
  9649  1588  3001               	movlw	1
  9650  1589                     u4345:	
  9651  1589  36F4               	lsrf	___fltol@f1+3,f
  9652  158A  0CF3               	rrf	___fltol@f1+2,f
  9653  158B  0CF2               	rrf	___fltol@f1+1,f
  9654  158C  0CF1               	rrf	___fltol@f1,f
  9655  158D  0B89               	decfsz	9,f
  9656  158E  2D89               	goto	u4345
  9657  158F  3001               	movlw	1
  9658  1590  00F5               	movwf	??___fltol
  9659  1591  0875               	movf	??___fltol,w
  9660  1592  07FB               	addwf	___fltol@exp1,f
  9661  1593  1903               	btfsc	3,2
  9662  1594  2DA7               	goto	l4701
  9663  1595  2D88               	goto	l4691
  9664  1596                     l4693:	
  9665  1596  3020               	movlw	32
  9666  1597  027B               	subwf	___fltol@exp1,w
  9667  1598  1803               	btfsc	3,0
  9668  1599  2D5A               	goto	l4671
  9669  159A                     l1339:	
  9670  159A  087B               	movf	___fltol@exp1,w
  9671  159B  1903               	btfsc	3,2
  9672  159C  2DA7               	goto	l4701
  9673  159D  3001               	movlw	1
  9674  159E                     u4375:	
  9675  159E  35F1               	lslf	___fltol@f1,f
  9676  159F  0DF2               	rlf	___fltol@f1+1,f
  9677  15A0  0DF3               	rlf	___fltol@f1+2,f
  9678  15A1  0DF4               	rlf	___fltol@f1+3,f
  9679  15A2  0B89               	decfsz	9,f
  9680  15A3  2D9E               	goto	u4375
  9681  15A4  3001               	movlw	1
  9682  15A5  02FB               	subwf	___fltol@exp1,f
  9683  15A6  2D9A               	goto	l1339
  9684  15A7                     l4701:	
  9685  15A7  087A               	movf	___fltol@sign1,w
  9686  15A8  1903               	btfsc	3,2
  9687  15A9  0008               	return
  9688  15AA  09F1               	comf	___fltol@f1,f
  9689  15AB  09F2               	comf	___fltol@f1+1,f
  9690  15AC  09F3               	comf	___fltol@f1+2,f
  9691  15AD  09F4               	comf	___fltol@f1+3,f
  9692  15AE  0AF1               	incf	___fltol@f1,f
  9693  15AF  1903               	skipnz
  9694  15B0  0AF2               	incf	___fltol@f1+1,f
  9695  15B1  1903               	skipnz
  9696  15B2  0AF3               	incf	___fltol@f1+2,f
  9697  15B3  1903               	skipnz
  9698  15B4  0AF4               	incf	___fltol@f1+3,f
  9699  15B5  0008               	return
  9700  15B6                     __end_of___fltol:	
  9701                           
  9702                           	psect	text20
  9703  107E                     __ptext20:	
  9704 ;; *************** function ___flsub *****************
  9705 ;; Defined at:
  9706 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  9707 ;; Parameters:    Size  Location     Type
  9708 ;;  a               4   26[BANK0 ] long 
  9709 ;;  b               4   30[BANK0 ] long 
  9710 ;; Auto vars:     Size  Location     Type
  9711 ;;		None
  9712 ;; Return value:  Size  Location     Type
  9713 ;;                  4   26[BANK0 ] long 
  9714 ;; Registers used:
  9715 ;;		wreg, status,2, status,0, pclath, cstack
  9716 ;; Tracked objects:
  9717 ;;		On entry : 0/0
  9718 ;;		On exit  : 0/0
  9719 ;;		Unchanged: 0/0
  9720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9721 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9724 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9725 ;;Total ram usage:        8 bytes
  9726 ;; Hardware stack levels used:    1
  9727 ;; Hardware stack levels required when called:    5
  9728 ;; This function calls:
  9729 ;;		___fladd
  9730 ;; This function is called by:
  9731 ;;		_efgtoa
  9732 ;; This function uses a non-reentrant model
  9733 ;;
  9734                           
  9735                           
  9736                           ;psect for function ___flsub
  9737  107E                     ___flsub:	
  9738                           
  9739                           ;incstack = 0
  9740                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  9741  107E  3080               	movlw	128
  9742  107F  0020               	movlb	0	; select bank0
  9743  1080  06BD               	xorwf	___flsub@a+3,f
  9744  1081  0841               	movf	___flsub@b+3,w
  9745  1082  00F4               	movwf	___fladd@b+3
  9746  1083  0840               	movf	___flsub@b+2,w
  9747  1084  00F3               	movwf	___fladd@b+2
  9748  1085  083F               	movf	___flsub@b+1,w
  9749  1086  00F2               	movwf	___fladd@b+1
  9750  1087  083E               	movf	___flsub@b,w
  9751  1088  00F1               	movwf	___fladd@b
  9752  1089  083D               	movf	___flsub@a+3,w
  9753  108A  00F8               	movwf	___fladd@a+3
  9754  108B  083C               	movf	___flsub@a+2,w
  9755  108C  00F7               	movwf	___fladd@a+2
  9756  108D  083B               	movf	___flsub@a+1,w
  9757  108E  00F6               	movwf	___fladd@a+1
  9758  108F  083A               	movf	___flsub@a,w
  9759  1090  00F5               	movwf	___fladd@a
  9760  1091  318B  23F2         	fcall	___fladd
  9761  1093  0874               	movf	?___fladd+3,w
  9762  1094  0020               	movlb	0	; select bank0
  9763  1095  00BD               	movwf	?___flsub+3
  9764  1096  0873               	movf	?___fladd+2,w
  9765  1097  00BC               	movwf	?___flsub+2
  9766  1098  0872               	movf	?___fladd+1,w
  9767  1099  00BB               	movwf	?___flsub+1
  9768  109A  0871               	movf	?___fladd,w
  9769  109B  00BA               	movwf	?___flsub
  9770  109C  0008               	return
  9771  109D                     __end_of___flsub:	
  9772                           
  9773                           	psect	text21
  9774  0BF2                     __ptext21:	
  9775 ;; *************** function ___fladd *****************
  9776 ;; Defined at:
  9777 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  9778 ;; Parameters:    Size  Location     Type
  9779 ;;  b               4    1[COMMON] long 
  9780 ;;  a               4    5[COMMON] long 
  9781 ;; Auto vars:     Size  Location     Type
  9782 ;;  grs             1   11[BANK0 ] unsigned char 
  9783 ;;  bexp            1   10[BANK0 ] unsigned char 
  9784 ;;  aexp            1    9[BANK0 ] unsigned char 
  9785 ;;  signs           1    8[BANK0 ] unsigned char 
  9786 ;; Return value:  Size  Location     Type
  9787 ;;                  4    1[COMMON] unsigned char 
  9788 ;; Registers used:
  9789 ;;		wreg, status,2, status,0
  9790 ;; Tracked objects:
  9791 ;;		On entry : 0/0
  9792 ;;		On exit  : 0/0
  9793 ;;		Unchanged: 0/0
  9794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9795 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9796 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9797 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9798 ;;      Totals:         8      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9799 ;;Total ram usage:       20 bytes
  9800 ;; Hardware stack levels used:    1
  9801 ;; Hardware stack levels required when called:    4
  9802 ;; This function calls:
  9803 ;;		Nothing
  9804 ;; This function is called by:
  9805 ;;		_efgtoa
  9806 ;;		___flsub
  9807 ;; This function uses a non-reentrant model
  9808 ;;
  9809                           
  9810                           
  9811                           ;psect for function ___fladd
  9812  0BF2                     ___fladd:	
  9813                           
  9814                           ;incstack = 0
  9815                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  9816  0BF2  0874               	movf	___fladd@b+3,w
  9817  0BF3  3980               	andlw	128
  9818  0BF4  0020               	movlb	0	; select bank0
  9819  0BF5  00A0               	movwf	??___fladd
  9820  0BF6  0820               	movf	??___fladd,w
  9821  0BF7  00A8               	movwf	___fladd@signs
  9822  0BF8  3574               	lslf	___fladd@b+3,w
  9823  0BF9  00A0               	movwf	??___fladd
  9824  0BFA  0820               	movf	??___fladd,w
  9825  0BFB  00AA               	movwf	___fladd@bexp
  9826  0BFC  1BF3               	btfsc	___fladd@b+2,7
  9827  0BFD  142A               	bsf	___fladd@bexp,0
  9828  0BFE  082A               	movf	___fladd@bexp,w
  9829  0BFF  1903               	btfsc	3,2
  9830  0C00  2C0F               	goto	l6069
  9831  0C01  0A2A               	incf	___fladd@bexp,w
  9832  0C02  1D03               	btfss	3,2
  9833  0C03  2C0C               	goto	l6065
  9834  0C04  3000               	movlw	0
  9835  0C05  00F4               	movwf	___fladd@b+3
  9836  0C06  3000               	movlw	0
  9837  0C07  00F3               	movwf	___fladd@b+2
  9838  0C08  3000               	movlw	0
  9839  0C09  00F2               	movwf	___fladd@b+1
  9840  0C0A  3000               	movlw	0
  9841  0C0B  00F1               	movwf	___fladd@b
  9842  0C0C                     l6065:	
  9843  0C0C  17F3               	bsf	___fladd@b+2,7
  9844  0C0D  01F4               	clrf	___fladd@b+3
  9845  0C0E  2C17               	goto	l6071
  9846  0C0F                     l6069:	
  9847  0C0F  3000               	movlw	0
  9848  0C10  00F4               	movwf	___fladd@b+3
  9849  0C11  3000               	movlw	0
  9850  0C12  00F3               	movwf	___fladd@b+2
  9851  0C13  3000               	movlw	0
  9852  0C14  00F2               	movwf	___fladd@b+1
  9853  0C15  3000               	movlw	0
  9854  0C16  00F1               	movwf	___fladd@b
  9855  0C17                     l6071:	
  9856  0C17  0878               	movf	___fladd@a+3,w
  9857  0C18  3980               	andlw	128
  9858  0C19  00A0               	movwf	??___fladd
  9859  0C1A  0820               	movf	??___fladd,w
  9860  0C1B  00A9               	movwf	___fladd@aexp
  9861  0C1C  0829               	movf	___fladd@aexp,w
  9862  0C1D  0628               	xorwf	___fladd@signs,w
  9863  0C1E  1D03               	btfss	3,2
  9864  0C1F  1728               	bsf	___fladd@signs,6
  9865  0C20  3578               	lslf	___fladd@a+3,w
  9866  0C21  00A0               	movwf	??___fladd
  9867  0C22  0820               	movf	??___fladd,w
  9868  0C23  00A9               	movwf	___fladd@aexp
  9869  0C24  1BF7               	btfsc	___fladd@a+2,7
  9870  0C25  1429               	bsf	___fladd@aexp,0
  9871  0C26  0829               	movf	___fladd@aexp,w
  9872  0C27  1903               	btfsc	3,2
  9873  0C28  2C37               	goto	l6093
  9874  0C29  0A29               	incf	___fladd@aexp,w
  9875  0C2A  1D03               	btfss	3,2
  9876  0C2B  2C34               	goto	l6089
  9877  0C2C  3000               	movlw	0
  9878  0C2D  00F8               	movwf	___fladd@a+3
  9879  0C2E  3000               	movlw	0
  9880  0C2F  00F7               	movwf	___fladd@a+2
  9881  0C30  3000               	movlw	0
  9882  0C31  00F6               	movwf	___fladd@a+1
  9883  0C32  3000               	movlw	0
  9884  0C33  00F5               	movwf	___fladd@a
  9885  0C34                     l6089:	
  9886  0C34  17F7               	bsf	___fladd@a+2,7
  9887  0C35  01F8               	clrf	___fladd@a+3
  9888  0C36  2C3F               	goto	l1439
  9889  0C37                     l6093:	
  9890  0C37  3000               	movlw	0
  9891  0C38  00F8               	movwf	___fladd@a+3
  9892  0C39  3000               	movlw	0
  9893  0C3A  00F7               	movwf	___fladd@a+2
  9894  0C3B  3000               	movlw	0
  9895  0C3C  00F6               	movwf	___fladd@a+1
  9896  0C3D  3000               	movlw	0
  9897  0C3E  00F5               	movwf	___fladd@a
  9898  0C3F                     l1439:	
  9899  0C3F  082A               	movf	___fladd@bexp,w
  9900  0C40  0229               	subwf	___fladd@aexp,w
  9901  0C41  1803               	skipnc
  9902  0C42  2C85               	goto	l6129
  9903  0C43  1F28               	btfss	___fladd@signs,6
  9904  0C44  2C49               	goto	l6099
  9905  0C45  3080               	movlw	128
  9906  0C46  00A0               	movwf	??___fladd
  9907  0C47  0820               	movf	??___fladd,w
  9908  0C48  06A8               	xorwf	___fladd@signs,f
  9909  0C49                     l6099:	
  9910  0C49  082A               	movf	___fladd@bexp,w
  9911  0C4A  00A0               	movwf	??___fladd
  9912  0C4B  0820               	movf	??___fladd,w
  9913  0C4C  00AB               	movwf	___fladd@grs
  9914  0C4D  0829               	movf	___fladd@aexp,w
  9915  0C4E  00A0               	movwf	??___fladd
  9916  0C4F  0820               	movf	??___fladd,w
  9917  0C50  00AA               	movwf	___fladd@bexp
  9918  0C51  082B               	movf	___fladd@grs,w
  9919  0C52  00A0               	movwf	??___fladd
  9920  0C53  0820               	movf	??___fladd,w
  9921  0C54  00A9               	movwf	___fladd@aexp
  9922  0C55  0871               	movf	___fladd@b,w
  9923  0C56  00A0               	movwf	??___fladd
  9924  0C57  0820               	movf	??___fladd,w
  9925  0C58  00AB               	movwf	___fladd@grs
  9926  0C59  0875               	movf	___fladd@a,w
  9927  0C5A  00A0               	movwf	??___fladd
  9928  0C5B  0820               	movf	??___fladd,w
  9929  0C5C  00F1               	movwf	___fladd@b
  9930  0C5D  082B               	movf	___fladd@grs,w
  9931  0C5E  00A0               	movwf	??___fladd
  9932  0C5F  0820               	movf	??___fladd,w
  9933  0C60  00F5               	movwf	___fladd@a
  9934  0C61  0872               	movf	___fladd@b+1,w
  9935  0C62  00A0               	movwf	??___fladd
  9936  0C63  0820               	movf	??___fladd,w
  9937  0C64  00AB               	movwf	___fladd@grs
  9938  0C65  0876               	movf	___fladd@a+1,w
  9939  0C66  00A0               	movwf	??___fladd
  9940  0C67  0820               	movf	??___fladd,w
  9941  0C68  00F2               	movwf	___fladd@b+1
  9942  0C69  082B               	movf	___fladd@grs,w
  9943  0C6A  00A0               	movwf	??___fladd
  9944  0C6B  0820               	movf	??___fladd,w
  9945  0C6C  00F6               	movwf	___fladd@a+1
  9946  0C6D  0873               	movf	___fladd@b+2,w
  9947  0C6E  00A0               	movwf	??___fladd
  9948  0C6F  0820               	movf	??___fladd,w
  9949  0C70  00AB               	movwf	___fladd@grs
  9950  0C71  0877               	movf	___fladd@a+2,w
  9951  0C72  00A0               	movwf	??___fladd
  9952  0C73  0820               	movf	??___fladd,w
  9953  0C74  00F3               	movwf	___fladd@b+2
  9954  0C75  082B               	movf	___fladd@grs,w
  9955  0C76  00A0               	movwf	??___fladd
  9956  0C77  0820               	movf	??___fladd,w
  9957  0C78  00F7               	movwf	___fladd@a+2
  9958  0C79  0874               	movf	___fladd@b+3,w
  9959  0C7A  00A0               	movwf	??___fladd
  9960  0C7B  0820               	movf	??___fladd,w
  9961  0C7C  00AB               	movwf	___fladd@grs
  9962  0C7D  0878               	movf	___fladd@a+3,w
  9963  0C7E  00A0               	movwf	??___fladd
  9964  0C7F  0820               	movf	??___fladd,w
  9965  0C80  00F4               	movwf	___fladd@b+3
  9966  0C81  082B               	movf	___fladd@grs,w
  9967  0C82  00A0               	movwf	??___fladd
  9968  0C83  0820               	movf	??___fladd,w
  9969  0C84  00F8               	movwf	___fladd@a+3
  9970  0C85                     l6129:	
  9971  0C85  01AB               	clrf	___fladd@grs
  9972  0C86  0829               	movf	___fladd@aexp,w
  9973  0C87  00A0               	movwf	??___fladd
  9974  0C88  01A1               	clrf	??___fladd+1
  9975  0C89  0821               	movf	??___fladd+1,w
  9976  0C8A  00A3               	movwf	??___fladd+3
  9977  0C8B  082A               	movf	___fladd@bexp,w
  9978  0C8C  0220               	subwf	??___fladd,w
  9979  0C8D  00A2               	movwf	??___fladd+2
  9980  0C8E  1C03               	skipc
  9981  0C8F  03A3               	decf	??___fladd+3,f
  9982  0C90  0823               	movf	??___fladd+3,w
  9983  0C91  3A80               	xorlw	128
  9984  0C92  00A4               	movwf	??___fladd+4
  9985  0C93  3080               	movlw	128
  9986  0C94  0224               	subwf	??___fladd+4,w
  9987  0C95  1D03               	skipz
  9988  0C96  2C99               	goto	u6265
  9989  0C97  301A               	movlw	26
  9990  0C98  0222               	subwf	??___fladd+2,w
  9991  0C99                     u6265:	
  9992  0C99  1C03               	skipc
  9993  0C9A  2CCD               	goto	l6147
  9994  0C9B  0874               	movf	___fladd@b+3,w
  9995  0C9C  0473               	iorwf	___fladd@b+2,w
  9996  0C9D  0472               	iorwf	___fladd@b+1,w
  9997  0C9E  0471               	iorwf	___fladd@b,w
  9998  0C9F  1903               	btfsc	3,2
  9999  0CA0  2CA3               	goto	u6270
 10000  0CA1  3001               	movlw	1
 10001  0CA2  2CA4               	goto	u6280
 10002  0CA3                     u6270:	
 10003  0CA3  3000               	movlw	0
 10004  0CA4                     u6280:	
 10005  0CA4  0020               	movlb	0	; select bank0
 10006  0CA5  00A0               	movwf	??___fladd
 10007  0CA6  0820               	movf	??___fladd,w
 10008  0CA7  00AB               	movwf	___fladd@grs
 10009  0CA8  3000               	movlw	0
 10010  0CA9  00F4               	movwf	___fladd@b+3
 10011  0CAA  3000               	movlw	0
 10012  0CAB  00F3               	movwf	___fladd@b+2
 10013  0CAC  3000               	movlw	0
 10014  0CAD  00F2               	movwf	___fladd@b+1
 10015  0CAE  3000               	movlw	0
 10016  0CAF  00F1               	movwf	___fladd@b
 10017  0CB0  0829               	movf	___fladd@aexp,w
 10018  0CB1  00A0               	movwf	??___fladd
 10019  0CB2  0820               	movf	??___fladd,w
 10020  0CB3  00AA               	movwf	___fladd@bexp
 10021  0CB4  2CD2               	goto	l1443
 10022  0CB5                     l1445:	
 10023  0CB5  1C2B               	btfss	___fladd@grs,0
 10024  0CB6  2CBD               	goto	l6137
 10025  0CB7  362B               	lsrf	___fladd@grs,w
 10026  0CB8  3801               	iorlw	1
 10027  0CB9  00A0               	movwf	??___fladd
 10028  0CBA  0820               	movf	??___fladd,w
 10029  0CBB  00AB               	movwf	___fladd@grs
 10030  0CBC  2CBF               	goto	l6139
 10031  0CBD                     l6137:	
 10032  0CBD  1003               	clrc
 10033  0CBE  0CAB               	rrf	___fladd@grs,f
 10034  0CBF                     l6139:	
 10035  0CBF  1871               	btfsc	___fladd@b,0
 10036  0CC0  17AB               	bsf	___fladd@grs,7
 10037  0CC1  3001               	movlw	1
 10038  0CC2  00A0               	movwf	??___fladd
 10039  0CC3                     u6315:	
 10040  0CC3  37F4               	asrf	___fladd@b+3,f
 10041  0CC4  0CF3               	rrf	___fladd@b+2,f
 10042  0CC5  0CF2               	rrf	___fladd@b+1,f
 10043  0CC6  0CF1               	rrf	___fladd@b,f
 10044  0CC7  0BA0               	decfsz	??___fladd& (0+127),f
 10045  0CC8  2CC3               	goto	u6315
 10046  0CC9  3001               	movlw	1
 10047  0CCA  00A0               	movwf	??___fladd
 10048  0CCB  0820               	movf	??___fladd,w
 10049  0CCC  07AA               	addwf	___fladd@bexp,f
 10050  0CCD                     l6147:	
 10051  0CCD  0020               	movlb	0	; select bank0
 10052  0CCE  0829               	movf	___fladd@aexp,w
 10053  0CCF  022A               	subwf	___fladd@bexp,w
 10054  0CD0  1C03               	skipc
 10055  0CD1  2CB5               	goto	l1445
 10056  0CD2                     l1443:	
 10057  0CD2  1B28               	btfsc	___fladd@signs,6
 10058  0CD3  2D03               	goto	l6173
 10059  0CD4  082A               	movf	___fladd@bexp,w
 10060  0CD5  1D03               	btfss	3,2
 10061  0CD6  2CE0               	goto	l6155
 10062  0CD7  3000               	movlw	0
 10063  0CD8  00F4               	movwf	?___fladd+3
 10064  0CD9  3000               	movlw	0
 10065  0CDA  00F3               	movwf	?___fladd+2
 10066  0CDB  3000               	movlw	0
 10067  0CDC  00F2               	movwf	?___fladd+1
 10068  0CDD  3000               	movlw	0
 10069  0CDE  00F1               	movwf	?___fladd
 10070  0CDF  0008               	return
 10071  0CE0                     l6155:	
 10072  0CE0  0875               	movf	___fladd@a,w
 10073  0CE1  07F1               	addwf	___fladd@b,f
 10074  0CE2  0876               	movf	___fladd@a+1,w
 10075  0CE3  3DF2               	addwfc	___fladd@b+1,f
 10076  0CE4  0877               	movf	___fladd@a+2,w
 10077  0CE5  3DF3               	addwfc	___fladd@b+2,f
 10078  0CE6  0878               	movf	___fladd@a+3,w
 10079  0CE7  3DF4               	addwfc	___fladd@b+3,f
 10080  0CE8  1C74               	btfss	___fladd@b+3,0
 10081  0CE9  2D7D               	goto	l6207
 10082  0CEA  1C2B               	btfss	___fladd@grs,0
 10083  0CEB  2CF2               	goto	l6163
 10084  0CEC  362B               	lsrf	___fladd@grs,w
 10085  0CED  3801               	iorlw	1
 10086  0CEE  00A0               	movwf	??___fladd
 10087  0CEF  0820               	movf	??___fladd,w
 10088  0CF0  00AB               	movwf	___fladd@grs
 10089  0CF1  2CF4               	goto	l6165
 10090  0CF2                     l6163:	
 10091  0CF2  1003               	clrc
 10092  0CF3  0CAB               	rrf	___fladd@grs,f
 10093  0CF4                     l6165:	
 10094  0CF4  1871               	btfsc	___fladd@b,0
 10095  0CF5  17AB               	bsf	___fladd@grs,7
 10096  0CF6  3001               	movlw	1
 10097  0CF7  00A0               	movwf	??___fladd
 10098  0CF8                     u6385:	
 10099  0CF8  37F4               	asrf	___fladd@b+3,f
 10100  0CF9  0CF3               	rrf	___fladd@b+2,f
 10101  0CFA  0CF2               	rrf	___fladd@b+1,f
 10102  0CFB  0CF1               	rrf	___fladd@b,f
 10103  0CFC  0BA0               	decfsz	??___fladd& (0+127),f
 10104  0CFD  2CF8               	goto	u6385
 10105  0CFE  3001               	movlw	1
 10106  0CFF  00A0               	movwf	??___fladd
 10107  0D00  0820               	movf	??___fladd,w
 10108  0D01  07AA               	addwf	___fladd@bexp,f
 10109  0D02  2D7D               	goto	l6207
 10110  0D03                     l6173:	
 10111  0D03  0874               	movf	___fladd@b+3,w
 10112  0D04  3A80               	xorlw	128
 10113  0D05  00A0               	movwf	??___fladd
 10114  0D06  0878               	movf	___fladd@a+3,w
 10115  0D07  3A80               	xorlw	128
 10116  0D08  0220               	subwf	??___fladd,w
 10117  0D09  1D03               	skipz
 10118  0D0A  2D15               	goto	u6393
 10119  0D0B  0877               	movf	___fladd@a+2,w
 10120  0D0C  0273               	subwf	___fladd@b+2,w
 10121  0D0D  1D03               	skipz
 10122  0D0E  2D15               	goto	u6393
 10123  0D0F  0876               	movf	___fladd@a+1,w
 10124  0D10  0272               	subwf	___fladd@b+1,w
 10125  0D11  1D03               	skipz
 10126  0D12  2D15               	goto	u6393
 10127  0D13  0875               	movf	___fladd@a,w
 10128  0D14  0271               	subwf	___fladd@b,w
 10129  0D15                     u6393:	
 10130  0D15  1803               	skipnc
 10131  0D16  2D4D               	goto	l6183
 10132  0D17  30FF               	movlw	255
 10133  0D18  00A0               	movwf	??___fladd
 10134  0D19  30FF               	movlw	255
 10135  0D1A  00A1               	movwf	??___fladd+1
 10136  0D1B  30FF               	movlw	255
 10137  0D1C  00A2               	movwf	??___fladd+2
 10138  0D1D  30FF               	movlw	255
 10139  0D1E  00A3               	movwf	??___fladd+3
 10140  0D1F  0871               	movf	___fladd@b,w
 10141  0D20  0275               	subwf	___fladd@a,w
 10142  0D21  00A4               	movwf	??___fladd+4
 10143  0D22  0872               	movf	___fladd@b+1,w
 10144  0D23  3B76               	subwfb	___fladd@a+1,w
 10145  0D24  00A5               	movwf	??___fladd+5
 10146  0D25  0873               	movf	___fladd@b+2,w
 10147  0D26  3B77               	subwfb	___fladd@a+2,w
 10148  0D27  00A6               	movwf	??___fladd+6
 10149  0D28  0874               	movf	___fladd@b+3,w
 10150  0D29  3B78               	subwfb	___fladd@a+3,w
 10151  0D2A  00A7               	movwf	??___fladd+7
 10152  0D2B  0824               	movf	??___fladd+4,w
 10153  0D2C  07A0               	addwf	??___fladd,f
 10154  0D2D  0825               	movf	??___fladd+5,w
 10155  0D2E  3DA1               	addwfc	??___fladd+1,f
 10156  0D2F  0826               	movf	??___fladd+6,w
 10157  0D30  3DA2               	addwfc	??___fladd+2,f
 10158  0D31  0827               	movf	??___fladd+7,w
 10159  0D32  3DA3               	addwfc	??___fladd+3,f
 10160  0D33  0823               	movf	??___fladd+3,w
 10161  0D34  00F4               	movwf	___fladd@b+3
 10162  0D35  0822               	movf	??___fladd+2,w
 10163  0D36  00F3               	movwf	___fladd@b+2
 10164  0D37  0821               	movf	??___fladd+1,w
 10165  0D38  00F2               	movwf	___fladd@b+1
 10166  0D39  0820               	movf	??___fladd,w
 10167  0D3A  00F1               	movwf	___fladd@b
 10168  0D3B  3080               	movlw	128
 10169  0D3C  00A0               	movwf	??___fladd
 10170  0D3D  0820               	movf	??___fladd,w
 10171  0D3E  06A8               	xorwf	___fladd@signs,f
 10172  0D3F  09AB               	comf	___fladd@grs,f
 10173  0D40  0AAB               	incf	___fladd@grs,f
 10174  0D41  082B               	movf	___fladd@grs,w
 10175  0D42  1D03               	btfss	3,2
 10176  0D43  2D55               	goto	l1460
 10177  0D44  3001               	movlw	1
 10178  0D45  07F1               	addwf	___fladd@b,f
 10179  0D46  3000               	movlw	0
 10180  0D47  3DF2               	addwfc	___fladd@b+1,f
 10181  0D48  3000               	movlw	0
 10182  0D49  3DF3               	addwfc	___fladd@b+2,f
 10183  0D4A  3000               	movlw	0
 10184  0D4B  3DF4               	addwfc	___fladd@b+3,f
 10185  0D4C  2D55               	goto	l1460
 10186  0D4D                     l6183:	
 10187  0D4D  0875               	movf	___fladd@a,w
 10188  0D4E  02F1               	subwf	___fladd@b,f
 10189  0D4F  0876               	movf	___fladd@a+1,w
 10190  0D50  3BF2               	subwfb	___fladd@b+1,f
 10191  0D51  0877               	movf	___fladd@a+2,w
 10192  0D52  3BF3               	subwfb	___fladd@b+2,f
 10193  0D53  0878               	movf	___fladd@a+3,w
 10194  0D54  3BF4               	subwfb	___fladd@b+3,f
 10195  0D55                     l1460:	
 10196  0D55  0874               	movf	___fladd@b+3,w
 10197  0D56  0473               	iorwf	___fladd@b+2,w
 10198  0D57  0472               	iorwf	___fladd@b+1,w
 10199  0D58  0471               	iorwf	___fladd@b,w
 10200  0D59  1D03               	skipz
 10201  0D5A  2D7B               	goto	l6205
 10202  0D5B  082B               	movf	___fladd@grs,w
 10203  0D5C  1D03               	btfss	3,2
 10204  0D5D  2D7B               	goto	l6205
 10205  0D5E  3000               	movlw	0
 10206  0D5F  00F4               	movwf	?___fladd+3
 10207  0D60  3000               	movlw	0
 10208  0D61  00F3               	movwf	?___fladd+2
 10209  0D62  3000               	movlw	0
 10210  0D63  00F2               	movwf	?___fladd+1
 10211  0D64  3000               	movlw	0
 10212  0D65  00F1               	movwf	?___fladd
 10213  0D66  0008               	return
 10214  0D67                     l6191:	
 10215  0D67  3001               	movlw	1
 10216  0D68                     u6435:	
 10217  0D68  35F1               	lslf	___fladd@b,f
 10218  0D69  0DF2               	rlf	___fladd@b+1,f
 10219  0D6A  0DF3               	rlf	___fladd@b+2,f
 10220  0D6B  0DF4               	rlf	___fladd@b+3,f
 10221  0D6C  0B89               	decfsz	9,f
 10222  0D6D  2D68               	goto	u6435
 10223  0D6E  1BAB               	btfsc	___fladd@grs,7
 10224  0D6F  1471               	bsf	___fladd@b,0
 10225  0D70  1C2B               	btfss	___fladd@grs,0
 10226  0D71  2D74               	goto	l6199
 10227  0D72  1403               	setc
 10228  0D73  2D75               	goto	L10
 10229  0D74                     l6199:	
 10230  0D74  1003               	clrc
 10231  0D75                     L10:	
 10232  0D75  0DAB               	rlf	___fladd@grs,f
 10233  0D76  082A               	movf	___fladd@bexp,w
 10234  0D77  1903               	btfsc	3,2
 10235  0D78  2D7B               	goto	l6205
 10236  0D79  3001               	movlw	1
 10237  0D7A  02AA               	subwf	___fladd@bexp,f
 10238  0D7B                     l6205:	
 10239  0D7B  1FF3               	btfss	___fladd@b+2,7
 10240  0D7C  2D67               	goto	l6191
 10241  0D7D                     l6207:	
 10242  0D7D  01A9               	clrf	___fladd@aexp
 10243  0D7E  1FAB               	btfss	___fladd@grs,7
 10244  0D7F  2D88               	goto	l6217
 10245  0D80  082B               	movf	___fladd@grs,w
 10246  0D81  397F               	andlw	127
 10247  0D82  1903               	btfsc	3,2
 10248  0D83  1871               	btfsc	___fladd@b,0
 10249  0D84  2D86               	goto	l6213
 10250  0D85  2D88               	goto	l6217
 10251  0D86                     l6213:	
 10252  0D86  01A9               	clrf	___fladd@aexp
 10253  0D87  0AA9               	incf	___fladd@aexp,f
 10254  0D88                     l6217:	
 10255  0D88  0829               	movf	___fladd@aexp,w
 10256  0D89  1903               	btfsc	3,2
 10257  0D8A  2DB4               	goto	l1473
 10258  0D8B  3001               	movlw	1
 10259  0D8C  07F1               	addwf	___fladd@b,f
 10260  0D8D  3000               	movlw	0
 10261  0D8E  3DF2               	addwfc	___fladd@b+1,f
 10262  0D8F  3000               	movlw	0
 10263  0D90  3DF3               	addwfc	___fladd@b+2,f
 10264  0D91  3000               	movlw	0
 10265  0D92  3DF4               	addwfc	___fladd@b+3,f
 10266  0D93  1C74               	btfss	___fladd@b+3,0
 10267  0D94  2DB4               	goto	l1473
 10268  0D95  0871               	movf	___fladd@b,w
 10269  0D96  00A0               	movwf	??___fladd
 10270  0D97  0872               	movf	___fladd@b+1,w
 10271  0D98  00A1               	movwf	??___fladd+1
 10272  0D99  0873               	movf	___fladd@b+2,w
 10273  0D9A  00A2               	movwf	??___fladd+2
 10274  0D9B  0874               	movf	___fladd@b+3,w
 10275  0D9C  00A3               	movwf	??___fladd+3
 10276  0D9D  3001               	movlw	1
 10277  0D9E  00A4               	movwf	??___fladd+4
 10278  0D9F                     u6535:	
 10279  0D9F  37A3               	asrf	??___fladd+3,f
 10280  0DA0  0CA2               	rrf	??___fladd+2,f
 10281  0DA1  0CA1               	rrf	??___fladd+1,f
 10282  0DA2  0CA0               	rrf	??___fladd,f
 10283  0DA3  0BA4               	decfsz	??___fladd+4,f
 10284  0DA4  2D9F               	goto	u6535
 10285  0DA5  0823               	movf	??___fladd+3,w
 10286  0DA6  00F4               	movwf	___fladd@b+3
 10287  0DA7  0822               	movf	??___fladd+2,w
 10288  0DA8  00F3               	movwf	___fladd@b+2
 10289  0DA9  0821               	movf	??___fladd+1,w
 10290  0DAA  00F2               	movwf	___fladd@b+1
 10291  0DAB  0820               	movf	??___fladd,w
 10292  0DAC  00F1               	movwf	___fladd@b
 10293  0DAD  0A2A               	incf	___fladd@bexp,w
 10294  0DAE  1903               	btfsc	3,2
 10295  0DAF  2DB4               	goto	l1473
 10296  0DB0  3001               	movlw	1
 10297  0DB1  00A0               	movwf	??___fladd
 10298  0DB2  0820               	movf	??___fladd,w
 10299  0DB3  07AA               	addwf	___fladd@bexp,f
 10300  0DB4                     l1473:	
 10301  0DB4  0A2A               	incf	___fladd@bexp,w
 10302  0DB5  1D03               	btfss	3,2
 10303  0DB6  082A               	movf	___fladd@bexp,w
 10304  0DB7  1D03               	btfss	3,2
 10305  0DB8  2DC4               	goto	l6235
 10306  0DB9  3000               	movlw	0
 10307  0DBA  00F4               	movwf	___fladd@b+3
 10308  0DBB  3000               	movlw	0
 10309  0DBC  00F3               	movwf	___fladd@b+2
 10310  0DBD  3000               	movlw	0
 10311  0DBE  00F2               	movwf	___fladd@b+1
 10312  0DBF  3000               	movlw	0
 10313  0DC0  00F1               	movwf	___fladd@b
 10314  0DC1  082A               	movf	___fladd@bexp,w
 10315  0DC2  1903               	btfsc	3,2
 10316  0DC3  01A8               	clrf	___fladd@signs
 10317  0DC4                     l6235:	
 10318  0DC4  1C2A               	btfss	___fladd@bexp,0
 10319  0DC5  2DC8               	goto	l6239
 10320  0DC6  17F3               	bsf	___fladd@b+2,7
 10321  0DC7  2DCC               	goto	l1481
 10322  0DC8                     l6239:	
 10323  0DC8  307F               	movlw	127
 10324  0DC9  00A0               	movwf	??___fladd
 10325  0DCA  0820               	movf	??___fladd,w
 10326  0DCB  05F3               	andwf	___fladd@b+2,f
 10327  0DCC                     l1481:	
 10328  0DCC  362A               	lsrf	___fladd@bexp,w
 10329  0DCD  00A0               	movwf	??___fladd
 10330  0DCE  0820               	movf	??___fladd,w
 10331  0DCF  00F4               	movwf	___fladd@b+3
 10332  0DD0  1FA8               	btfss	___fladd@signs,7
 10333  0DD1  0008               	return
 10334  0DD2  17F4               	bsf	___fladd@b+3,7
 10335  0DD3  0008               	return
 10336  0DD4                     __end_of___fladd:	
 10337                           
 10338                           	psect	text22
 10339  1EFA                     __ptext22:	
 10340 ;; *************** function ___flneg *****************
 10341 ;; Defined at:
 10342 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
 10343 ;; Parameters:    Size  Location     Type
 10344 ;;  f1              4    1[COMMON] unsigned char 
 10345 ;; Auto vars:     Size  Location     Type
 10346 ;;		None
 10347 ;; Return value:  Size  Location     Type
 10348 ;;                  4    1[COMMON] unsigned char 
 10349 ;; Registers used:
 10350 ;;		wreg
 10351 ;; Tracked objects:
 10352 ;;		On entry : 0/0
 10353 ;;		On exit  : 0/0
 10354 ;;		Unchanged: 0/0
 10355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10356 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10359 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10360 ;;Total ram usage:        4 bytes
 10361 ;; Hardware stack levels used:    1
 10362 ;; Hardware stack levels required when called:    4
 10363 ;; This function calls:
 10364 ;;		Nothing
 10365 ;; This function is called by:
 10366 ;;		_efgtoa
 10367 ;; This function uses a non-reentrant model
 10368 ;;
 10369                           
 10370                           
 10371                           ;psect for function ___flneg
 10372  1EFA                     ___flneg:	
 10373                           
 10374                           ;incstack = 0
 10375                           ; Regs used in ___flneg: [wreg]
 10376  1EFA  0874               	movf	___flneg@f1+3,w
 10377  1EFB  0473               	iorwf	___flneg@f1+2,w
 10378  1EFC  0472               	iorwf	___flneg@f1+1,w
 10379  1EFD  0471               	iorwf	___flneg@f1,w
 10380  1EFE  1903               	skipnz
 10381  1EFF  0008               	return
 10382  1F00  3080               	movlw	128
 10383  1F01  06F4               	xorwf	___flneg@f1+3,f
 10384  1F02  0008               	return
 10385  1F03                     __end_of___flneg:	
 10386                           
 10387                           	psect	text23
 10388  0DD4                     __ptext23:	
 10389 ;; *************** function ___flmul *****************
 10390 ;; Defined at:
 10391 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 10392 ;; Parameters:    Size  Location     Type
 10393 ;;  b               4    0[BANK0 ] unsigned char 
 10394 ;;  a               4    4[BANK0 ] unsigned char 
 10395 ;; Auto vars:     Size  Location     Type
 10396 ;;  prod            4   20[BANK0 ] struct .
 10397 ;;  grs             4   14[BANK0 ] unsigned long 
 10398 ;;  temp            2   24[BANK0 ] struct .
 10399 ;;  bexp            1   19[BANK0 ] unsigned char 
 10400 ;;  aexp            1   18[BANK0 ] unsigned char 
 10401 ;;  sign            1   13[BANK0 ] unsigned char 
 10402 ;; Return value:  Size  Location     Type
 10403 ;;                  4    0[BANK0 ] unsigned char 
 10404 ;; Registers used:
 10405 ;;		wreg, status,2, status,0, pclath, cstack
 10406 ;; Tracked objects:
 10407 ;;		On entry : 0/0
 10408 ;;		On exit  : 0/0
 10409 ;;		Unchanged: 0/0
 10410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10411 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10412 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10413 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10414 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10415 ;;Total ram usage:       26 bytes
 10416 ;; Hardware stack levels used:    1
 10417 ;; Hardware stack levels required when called:    5
 10418 ;; This function calls:
 10419 ;;		__Umul8_16
 10420 ;; This function is called by:
 10421 ;;		_efgtoa
 10422 ;; This function uses a non-reentrant model
 10423 ;;
 10424                           
 10425                           
 10426                           ;psect for function ___flmul
 10427  0DD4                     ___flmul:	
 10428                           
 10429                           ;incstack = 0
 10430                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 10431  0DD4  0020               	movlb	0	; select bank0
 10432  0DD5  0823               	movf	___flmul@b+3,w
 10433  0DD6  3980               	andlw	128
 10434  0DD7  00A8               	movwf	??___flmul
 10435  0DD8  0828               	movf	??___flmul,w
 10436  0DD9  00AD               	movwf	___flmul@sign
 10437  0DDA  3523               	lslf	___flmul@b+3,w
 10438  0DDB  00A8               	movwf	??___flmul
 10439  0DDC  0828               	movf	??___flmul,w
 10440  0DDD  00B3               	movwf	___flmul@bexp
 10441  0DDE  1BA2               	btfsc	___flmul@b+2,7
 10442  0DDF  1433               	bsf	___flmul@bexp,0
 10443  0DE0  0833               	movf	___flmul@bexp,w
 10444  0DE1  1903               	btfsc	3,2
 10445  0DE2  2DF0               	goto	l4867
 10446  0DE3  0A33               	incf	___flmul@bexp,w
 10447  0DE4  1D03               	btfss	3,2
 10448  0DE5  2DEE               	goto	l4865
 10449  0DE6  3000               	movlw	0
 10450  0DE7  00A3               	movwf	___flmul@b+3
 10451  0DE8  3000               	movlw	0
 10452  0DE9  00A2               	movwf	___flmul@b+2
 10453  0DEA  3000               	movlw	0
 10454  0DEB  00A1               	movwf	___flmul@b+1
 10455  0DEC  3000               	movlw	0
 10456  0DED  00A0               	movwf	___flmul@b
 10457  0DEE                     l4865:	
 10458  0DEE  17A2               	bsf	___flmul@b+2,7
 10459  0DEF  2DF8               	goto	l4869
 10460  0DF0                     l4867:	
 10461  0DF0  3000               	movlw	0
 10462  0DF1  00A3               	movwf	___flmul@b+3
 10463  0DF2  3000               	movlw	0
 10464  0DF3  00A2               	movwf	___flmul@b+2
 10465  0DF4  3000               	movlw	0
 10466  0DF5  00A1               	movwf	___flmul@b+1
 10467  0DF6  3000               	movlw	0
 10468  0DF7  00A0               	movwf	___flmul@b
 10469  0DF8                     l4869:	
 10470  0DF8  0827               	movf	___flmul@a+3,w
 10471  0DF9  3980               	andlw	128
 10472  0DFA  00A8               	movwf	??___flmul
 10473  0DFB  0828               	movf	??___flmul,w
 10474  0DFC  06AD               	xorwf	___flmul@sign,f
 10475  0DFD  3527               	lslf	___flmul@a+3,w
 10476  0DFE  00A8               	movwf	??___flmul
 10477  0DFF  0828               	movf	??___flmul,w
 10478  0E00  00B2               	movwf	___flmul@aexp
 10479  0E01  1BA6               	btfsc	___flmul@a+2,7
 10480  0E02  1432               	bsf	___flmul@aexp,0
 10481  0E03  0832               	movf	___flmul@aexp,w
 10482  0E04  1903               	btfsc	3,2
 10483  0E05  2E13               	goto	l4885
 10484  0E06  0A32               	incf	___flmul@aexp,w
 10485  0E07  1D03               	btfss	3,2
 10486  0E08  2E11               	goto	l4883
 10487  0E09  3000               	movlw	0
 10488  0E0A  00A7               	movwf	___flmul@a+3
 10489  0E0B  3000               	movlw	0
 10490  0E0C  00A6               	movwf	___flmul@a+2
 10491  0E0D  3000               	movlw	0
 10492  0E0E  00A5               	movwf	___flmul@a+1
 10493  0E0F  3000               	movlw	0
 10494  0E10  00A4               	movwf	___flmul@a
 10495  0E11                     l4883:	
 10496  0E11  17A6               	bsf	___flmul@a+2,7
 10497  0E12  2E1B               	goto	l4887
 10498  0E13                     l4885:	
 10499  0E13  3000               	movlw	0
 10500  0E14  00A7               	movwf	___flmul@a+3
 10501  0E15  3000               	movlw	0
 10502  0E16  00A6               	movwf	___flmul@a+2
 10503  0E17  3000               	movlw	0
 10504  0E18  00A5               	movwf	___flmul@a+1
 10505  0E19  3000               	movlw	0
 10506  0E1A  00A4               	movwf	___flmul@a
 10507  0E1B                     l4887:	
 10508  0E1B  0832               	movf	___flmul@aexp,w
 10509  0E1C  1D03               	btfss	3,2
 10510  0E1D  0833               	movf	___flmul@bexp,w
 10511  0E1E  1D03               	btfss	3,2
 10512  0E1F  2E29               	goto	l4895
 10513  0E20  3000               	movlw	0
 10514  0E21  00A3               	movwf	?___flmul+3
 10515  0E22  3000               	movlw	0
 10516  0E23  00A2               	movwf	?___flmul+2
 10517  0E24  3000               	movlw	0
 10518  0E25  00A1               	movwf	?___flmul+1
 10519  0E26  3000               	movlw	0
 10520  0E27  00A0               	movwf	?___flmul
 10521  0E28  0008               	return
 10522  0E29                     l4895:	
 10523  0E29  0820               	movf	___flmul@b,w
 10524  0E2A  00A8               	movwf	??___flmul
 10525  0E2B  0828               	movf	??___flmul,w
 10526  0E2C  00F1               	movwf	__Umul8_16@multiplicand
 10527  0E2D  0826               	movf	___flmul@a+2,w
 10528  0E2E  3190  205F  318D   	fcall	__Umul8_16
 10529  0E31  0872               	movf	?__Umul8_16+1,w
 10530  0E32  0020               	movlb	0	; select bank0
 10531  0E33  00B9               	movwf	___flmul@temp+1
 10532  0E34  0871               	movf	?__Umul8_16,w
 10533  0E35  00B8               	movwf	___flmul@temp
 10534  0E36  0838               	movf	___flmul@temp,w
 10535  0E37  00A8               	movwf	??___flmul
 10536  0E38  01A9               	clrf	??___flmul+1
 10537  0E39  01AA               	clrf	??___flmul+2
 10538  0E3A  01AB               	clrf	??___flmul+3
 10539  0E3B  082B               	movf	??___flmul+3,w
 10540  0E3C  00B1               	movwf	___flmul@grs+3
 10541  0E3D  082A               	movf	??___flmul+2,w
 10542  0E3E  00B0               	movwf	___flmul@grs+2
 10543  0E3F  0829               	movf	??___flmul+1,w
 10544  0E40  00AF               	movwf	___flmul@grs+1
 10545  0E41  0828               	movf	??___flmul,w
 10546  0E42  00AE               	movwf	___flmul@grs
 10547  0E43  0839               	movf	___flmul@temp+1,w
 10548  0E44  00A8               	movwf	??___flmul
 10549  0E45  01A9               	clrf	??___flmul+1
 10550  0E46  01AA               	clrf	??___flmul+2
 10551  0E47  01AB               	clrf	??___flmul+3
 10552  0E48  082B               	movf	??___flmul+3,w
 10553  0E49  00B7               	movwf	___flmul@prod+3
 10554  0E4A  082A               	movf	??___flmul+2,w
 10555  0E4B  00B6               	movwf	___flmul@prod+2
 10556  0E4C  0829               	movf	??___flmul+1,w
 10557  0E4D  00B5               	movwf	___flmul@prod+1
 10558  0E4E  0828               	movf	??___flmul,w
 10559  0E4F  00B4               	movwf	___flmul@prod
 10560  0E50  0821               	movf	___flmul@b+1,w
 10561  0E51  00A8               	movwf	??___flmul
 10562  0E52  0828               	movf	??___flmul,w
 10563  0E53  00F1               	movwf	__Umul8_16@multiplicand
 10564  0E54  0825               	movf	___flmul@a+1,w
 10565  0E55  3190  205F  318D   	fcall	__Umul8_16
 10566  0E58  0872               	movf	?__Umul8_16+1,w
 10567  0E59  0020               	movlb	0	; select bank0
 10568  0E5A  00B9               	movwf	___flmul@temp+1
 10569  0E5B  0871               	movf	?__Umul8_16,w
 10570  0E5C  00B8               	movwf	___flmul@temp
 10571  0E5D  0838               	movf	___flmul@temp,w
 10572  0E5E  00A8               	movwf	??___flmul
 10573  0E5F  01A9               	clrf	??___flmul+1
 10574  0E60  01AA               	clrf	??___flmul+2
 10575  0E61  01AB               	clrf	??___flmul+3
 10576  0E62  0828               	movf	??___flmul,w
 10577  0E63  07AE               	addwf	___flmul@grs,f
 10578  0E64  0829               	movf	??___flmul+1,w
 10579  0E65  3DAF               	addwfc	___flmul@grs+1,f
 10580  0E66  082A               	movf	??___flmul+2,w
 10581  0E67  3DB0               	addwfc	___flmul@grs+2,f
 10582  0E68  082B               	movf	??___flmul+3,w
 10583  0E69  3DB1               	addwfc	___flmul@grs+3,f
 10584  0E6A  0839               	movf	___flmul@temp+1,w
 10585  0E6B  00A8               	movwf	??___flmul
 10586  0E6C  01A9               	clrf	??___flmul+1
 10587  0E6D  01AA               	clrf	??___flmul+2
 10588  0E6E  01AB               	clrf	??___flmul+3
 10589  0E6F  0828               	movf	??___flmul,w
 10590  0E70  07B4               	addwf	___flmul@prod,f
 10591  0E71  0829               	movf	??___flmul+1,w
 10592  0E72  3DB5               	addwfc	___flmul@prod+1,f
 10593  0E73  082A               	movf	??___flmul+2,w
 10594  0E74  3DB6               	addwfc	___flmul@prod+2,f
 10595  0E75  082B               	movf	??___flmul+3,w
 10596  0E76  3DB7               	addwfc	___flmul@prod+3,f
 10597  0E77  0822               	movf	___flmul@b+2,w
 10598  0E78  00A8               	movwf	??___flmul
 10599  0E79  0828               	movf	??___flmul,w
 10600  0E7A  00F1               	movwf	__Umul8_16@multiplicand
 10601  0E7B  0824               	movf	___flmul@a,w
 10602  0E7C  3190  205F  318D   	fcall	__Umul8_16
 10603  0E7F  0872               	movf	?__Umul8_16+1,w
 10604  0E80  0020               	movlb	0	; select bank0
 10605  0E81  00B9               	movwf	___flmul@temp+1
 10606  0E82  0871               	movf	?__Umul8_16,w
 10607  0E83  00B8               	movwf	___flmul@temp
 10608  0E84  0838               	movf	___flmul@temp,w
 10609  0E85  00A8               	movwf	??___flmul
 10610  0E86  01A9               	clrf	??___flmul+1
 10611  0E87  01AA               	clrf	??___flmul+2
 10612  0E88  01AB               	clrf	??___flmul+3
 10613  0E89  0828               	movf	??___flmul,w
 10614  0E8A  07AE               	addwf	___flmul@grs,f
 10615  0E8B  0829               	movf	??___flmul+1,w
 10616  0E8C  3DAF               	addwfc	___flmul@grs+1,f
 10617  0E8D  082A               	movf	??___flmul+2,w
 10618  0E8E  3DB0               	addwfc	___flmul@grs+2,f
 10619  0E8F  082B               	movf	??___flmul+3,w
 10620  0E90  3DB1               	addwfc	___flmul@grs+3,f
 10621  0E91  0839               	movf	___flmul@temp+1,w
 10622  0E92  00A8               	movwf	??___flmul
 10623  0E93  01A9               	clrf	??___flmul+1
 10624  0E94  01AA               	clrf	??___flmul+2
 10625  0E95  01AB               	clrf	??___flmul+3
 10626  0E96  0828               	movf	??___flmul,w
 10627  0E97  07B4               	addwf	___flmul@prod,f
 10628  0E98  0829               	movf	??___flmul+1,w
 10629  0E99  3DB5               	addwfc	___flmul@prod+1,f
 10630  0E9A  082A               	movf	??___flmul+2,w
 10631  0E9B  3DB6               	addwfc	___flmul@prod+2,f
 10632  0E9C  082B               	movf	??___flmul+3,w
 10633  0E9D  3DB7               	addwfc	___flmul@prod+3,f
 10634  0E9E  3008               	movlw	8
 10635  0E9F                     u4775:	
 10636  0E9F  35AE               	lslf	___flmul@grs,f
 10637  0EA0  0DAF               	rlf	___flmul@grs+1,f
 10638  0EA1  0DB0               	rlf	___flmul@grs+2,f
 10639  0EA2  0DB1               	rlf	___flmul@grs+3,f
 10640  0EA3  0B89               	decfsz	9,f
 10641  0EA4  2E9F               	goto	u4775
 10642  0EA5  0821               	movf	___flmul@b+1,w
 10643  0EA6  00A8               	movwf	??___flmul
 10644  0EA7  0828               	movf	??___flmul,w
 10645  0EA8  00F1               	movwf	__Umul8_16@multiplicand
 10646  0EA9  0824               	movf	___flmul@a,w
 10647  0EAA  3190  205F  318D   	fcall	__Umul8_16
 10648  0EAD  0872               	movf	?__Umul8_16+1,w
 10649  0EAE  0020               	movlb	0	; select bank0
 10650  0EAF  00B9               	movwf	___flmul@temp+1
 10651  0EB0  0871               	movf	?__Umul8_16,w
 10652  0EB1  00B8               	movwf	___flmul@temp
 10653  0EB2  0838               	movf	___flmul@temp,w
 10654  0EB3  07AE               	addwf	___flmul@grs,f
 10655  0EB4  0839               	movf	___flmul@temp+1,w
 10656  0EB5  3DAF               	addwfc	___flmul@grs+1,f
 10657  0EB6  3000               	movlw	0
 10658  0EB7  3DB0               	addwfc	___flmul@grs+2,f
 10659  0EB8  3DB1               	addwfc	___flmul@grs+3,f
 10660  0EB9  0820               	movf	___flmul@b,w
 10661  0EBA  00A8               	movwf	??___flmul
 10662  0EBB  0828               	movf	??___flmul,w
 10663  0EBC  00F1               	movwf	__Umul8_16@multiplicand
 10664  0EBD  0825               	movf	___flmul@a+1,w
 10665  0EBE  3190  205F  318D   	fcall	__Umul8_16
 10666  0EC1  0872               	movf	?__Umul8_16+1,w
 10667  0EC2  0020               	movlb	0	; select bank0
 10668  0EC3  00B9               	movwf	___flmul@temp+1
 10669  0EC4  0871               	movf	?__Umul8_16,w
 10670  0EC5  00B8               	movwf	___flmul@temp
 10671  0EC6  0838               	movf	___flmul@temp,w
 10672  0EC7  07AE               	addwf	___flmul@grs,f
 10673  0EC8  0839               	movf	___flmul@temp+1,w
 10674  0EC9  3DAF               	addwfc	___flmul@grs+1,f
 10675  0ECA  3000               	movlw	0
 10676  0ECB  3DB0               	addwfc	___flmul@grs+2,f
 10677  0ECC  3DB1               	addwfc	___flmul@grs+3,f
 10678  0ECD  3008               	movlw	8
 10679  0ECE                     u4785:	
 10680  0ECE  35AE               	lslf	___flmul@grs,f
 10681  0ECF  0DAF               	rlf	___flmul@grs+1,f
 10682  0ED0  0DB0               	rlf	___flmul@grs+2,f
 10683  0ED1  0DB1               	rlf	___flmul@grs+3,f
 10684  0ED2  0B89               	decfsz	9,f
 10685  0ED3  2ECE               	goto	u4785
 10686  0ED4  0820               	movf	___flmul@b,w
 10687  0ED5  00A8               	movwf	??___flmul
 10688  0ED6  0828               	movf	??___flmul,w
 10689  0ED7  00F1               	movwf	__Umul8_16@multiplicand
 10690  0ED8  0824               	movf	___flmul@a,w
 10691  0ED9  3190  205F  318D   	fcall	__Umul8_16
 10692  0EDC  0872               	movf	?__Umul8_16+1,w
 10693  0EDD  0020               	movlb	0	; select bank0
 10694  0EDE  00B9               	movwf	___flmul@temp+1
 10695  0EDF  0871               	movf	?__Umul8_16,w
 10696  0EE0  00B8               	movwf	___flmul@temp
 10697  0EE1  0838               	movf	___flmul@temp,w
 10698  0EE2  07AE               	addwf	___flmul@grs,f
 10699  0EE3  0839               	movf	___flmul@temp+1,w
 10700  0EE4  3DAF               	addwfc	___flmul@grs+1,f
 10701  0EE5  3000               	movlw	0
 10702  0EE6  3DB0               	addwfc	___flmul@grs+2,f
 10703  0EE7  3DB1               	addwfc	___flmul@grs+3,f
 10704  0EE8  0821               	movf	___flmul@b+1,w
 10705  0EE9  00A8               	movwf	??___flmul
 10706  0EEA  0828               	movf	??___flmul,w
 10707  0EEB  00F1               	movwf	__Umul8_16@multiplicand
 10708  0EEC  0826               	movf	___flmul@a+2,w
 10709  0EED  3190  205F  318D   	fcall	__Umul8_16
 10710  0EF0  0872               	movf	?__Umul8_16+1,w
 10711  0EF1  0020               	movlb	0	; select bank0
 10712  0EF2  00B9               	movwf	___flmul@temp+1
 10713  0EF3  0871               	movf	?__Umul8_16,w
 10714  0EF4  00B8               	movwf	___flmul@temp
 10715  0EF5  0838               	movf	___flmul@temp,w
 10716  0EF6  07B4               	addwf	___flmul@prod,f
 10717  0EF7  0839               	movf	___flmul@temp+1,w
 10718  0EF8  3DB5               	addwfc	___flmul@prod+1,f
 10719  0EF9  3000               	movlw	0
 10720  0EFA  3DB6               	addwfc	___flmul@prod+2,f
 10721  0EFB  3DB7               	addwfc	___flmul@prod+3,f
 10722  0EFC  0822               	movf	___flmul@b+2,w
 10723  0EFD  00A8               	movwf	??___flmul
 10724  0EFE  0828               	movf	??___flmul,w
 10725  0EFF  00F1               	movwf	__Umul8_16@multiplicand
 10726  0F00  0825               	movf	___flmul@a+1,w
 10727  0F01  3190  205F  318D   	fcall	__Umul8_16
 10728  0F04  0872               	movf	?__Umul8_16+1,w
 10729  0F05  0020               	movlb	0	; select bank0
 10730  0F06  00B9               	movwf	___flmul@temp+1
 10731  0F07  0871               	movf	?__Umul8_16,w
 10732  0F08  00B8               	movwf	___flmul@temp
 10733  0F09  0838               	movf	___flmul@temp,w
 10734  0F0A  07B4               	addwf	___flmul@prod,f
 10735  0F0B  0839               	movf	___flmul@temp+1,w
 10736  0F0C  3DB5               	addwfc	___flmul@prod+1,f
 10737  0F0D  3000               	movlw	0
 10738  0F0E  3DB6               	addwfc	___flmul@prod+2,f
 10739  0F0F  3DB7               	addwfc	___flmul@prod+3,f
 10740  0F10  0822               	movf	___flmul@b+2,w
 10741  0F11  00A8               	movwf	??___flmul
 10742  0F12  0828               	movf	??___flmul,w
 10743  0F13  00F1               	movwf	__Umul8_16@multiplicand
 10744  0F14  0826               	movf	___flmul@a+2,w
 10745  0F15  3190  205F  318D   	fcall	__Umul8_16
 10746  0F18  0872               	movf	?__Umul8_16+1,w
 10747  0F19  0020               	movlb	0	; select bank0
 10748  0F1A  00B9               	movwf	___flmul@temp+1
 10749  0F1B  0871               	movf	?__Umul8_16,w
 10750  0F1C  00B8               	movwf	___flmul@temp
 10751  0F1D  0838               	movf	___flmul@temp,w
 10752  0F1E  00A8               	movwf	??___flmul
 10753  0F1F  0839               	movf	___flmul@temp+1,w
 10754  0F20  00A9               	movwf	??___flmul+1
 10755  0F21  01AA               	clrf	??___flmul+2
 10756  0F22  01AB               	clrf	??___flmul+3
 10757  0F23  3008               	movlw	8
 10758  0F24                     u4795:	
 10759  0F24  35A8               	lslf	??___flmul,f
 10760  0F25  0DA9               	rlf	??___flmul+1,f
 10761  0F26  0DAA               	rlf	??___flmul+2,f
 10762  0F27  0DAB               	rlf	??___flmul+3,f
 10763  0F28  0B89               	decfsz	9,f
 10764  0F29  2F24               	goto	u4795
 10765  0F2A  0828               	movf	??___flmul,w
 10766  0F2B  07B4               	addwf	___flmul@prod,f
 10767  0F2C  0829               	movf	??___flmul+1,w
 10768  0F2D  3DB5               	addwfc	___flmul@prod+1,f
 10769  0F2E  082A               	movf	??___flmul+2,w
 10770  0F2F  3DB6               	addwfc	___flmul@prod+2,f
 10771  0F30  082B               	movf	??___flmul+3,w
 10772  0F31  3DB7               	addwfc	___flmul@prod+3,f
 10773  0F32  082E               	movf	___flmul@grs,w
 10774  0F33  00A8               	movwf	??___flmul
 10775  0F34  082F               	movf	___flmul@grs+1,w
 10776  0F35  00A9               	movwf	??___flmul+1
 10777  0F36  0830               	movf	___flmul@grs+2,w
 10778  0F37  00AA               	movwf	??___flmul+2
 10779  0F38  0831               	movf	___flmul@grs+3,w
 10780  0F39  00AB               	movwf	??___flmul+3
 10781  0F3A  3018               	movlw	24
 10782  0F3B                     u4805:	
 10783  0F3B  36AB               	lsrf	??___flmul+3,f
 10784  0F3C  0CAA               	rrf	??___flmul+2,f
 10785  0F3D  0CA9               	rrf	??___flmul+1,f
 10786  0F3E  0CA8               	rrf	??___flmul,f
 10787  0F3F  0B89               	decfsz	9,f
 10788  0F40  2F3B               	goto	u4805
 10789  0F41  0828               	movf	??___flmul,w
 10790  0F42  07B4               	addwf	___flmul@prod,f
 10791  0F43  0829               	movf	??___flmul+1,w
 10792  0F44  3DB5               	addwfc	___flmul@prod+1,f
 10793  0F45  082A               	movf	??___flmul+2,w
 10794  0F46  3DB6               	addwfc	___flmul@prod+2,f
 10795  0F47  082B               	movf	??___flmul+3,w
 10796  0F48  3DB7               	addwfc	___flmul@prod+3,f
 10797  0F49  3008               	movlw	8
 10798  0F4A                     u4815:	
 10799  0F4A  35AE               	lslf	___flmul@grs,f
 10800  0F4B  0DAF               	rlf	___flmul@grs+1,f
 10801  0F4C  0DB0               	rlf	___flmul@grs+2,f
 10802  0F4D  0DB1               	rlf	___flmul@grs+3,f
 10803  0F4E  0B89               	decfsz	9,f
 10804  0F4F  2F4A               	goto	u4815
 10805  0F50  0833               	movf	___flmul@bexp,w
 10806  0F51  0732               	addwf	___flmul@aexp,w
 10807  0F52  00A8               	movwf	??___flmul
 10808  0F53  01A9               	clrf	??___flmul+1
 10809  0F54  0DA9               	rlf	??___flmul+1,f
 10810  0F55  0828               	movf	??___flmul,w
 10811  0F56  3E82               	addlw	130
 10812  0F57  00B8               	movwf	___flmul@temp
 10813  0F58  30FF               	movlw	255
 10814  0F59  3D29               	addwfc	??___flmul+1,w
 10815  0F5A  00B9               	movwf	___flmul@temp+1
 10816  0F5B                     l4947:	
 10817  0F5B  1BB6               	btfsc	___flmul@prod+2,7
 10818  0F5C  2F72               	goto	l4949
 10819  0F5D  3001               	movlw	1
 10820  0F5E                     u4825:	
 10821  0F5E  35B4               	lslf	___flmul@prod,f
 10822  0F5F  0DB5               	rlf	___flmul@prod+1,f
 10823  0F60  0DB6               	rlf	___flmul@prod+2,f
 10824  0F61  0DB7               	rlf	___flmul@prod+3,f
 10825  0F62  0B89               	decfsz	9,f
 10826  0F63  2F5E               	goto	u4825
 10827  0F64  1BB1               	btfsc	___flmul@grs+3,7
 10828  0F65  1434               	bsf	___flmul@prod,0
 10829  0F66  3001               	movlw	1
 10830  0F67                     u4845:	
 10831  0F67  35AE               	lslf	___flmul@grs,f
 10832  0F68  0DAF               	rlf	___flmul@grs+1,f
 10833  0F69  0DB0               	rlf	___flmul@grs+2,f
 10834  0F6A  0DB1               	rlf	___flmul@grs+3,f
 10835  0F6B  0B89               	decfsz	9,f
 10836  0F6C  2F67               	goto	u4845
 10837  0F6D  30FF               	movlw	255
 10838  0F6E  07B8               	addwf	___flmul@temp,f
 10839  0F6F  30FF               	movlw	255
 10840  0F70  3DB9               	addwfc	___flmul@temp+1,f
 10841  0F71  2F5B               	goto	l4947
 10842  0F72                     l4949:	
 10843  0F72  01B2               	clrf	___flmul@aexp
 10844  0F73  1FB1               	btfss	___flmul@grs+3,7
 10845  0F74  2F8B               	goto	l4959
 10846  0F75  30FF               	movlw	255
 10847  0F76  052E               	andwf	___flmul@grs,w
 10848  0F77  00A8               	movwf	??___flmul
 10849  0F78  30FF               	movlw	255
 10850  0F79  052F               	andwf	___flmul@grs+1,w
 10851  0F7A  00A9               	movwf	??___flmul+1
 10852  0F7B  30FF               	movlw	255
 10853  0F7C  0530               	andwf	___flmul@grs+2,w
 10854  0F7D  00AA               	movwf	??___flmul+2
 10855  0F7E  307F               	movlw	127
 10856  0F7F  0531               	andwf	___flmul@grs+3,w
 10857  0F80  00AB               	movwf	??___flmul+3
 10858  0F81  082B               	movf	??___flmul+3,w
 10859  0F82  042A               	iorwf	??___flmul+2,w
 10860  0F83  0429               	iorwf	??___flmul+1,w
 10861  0F84  0428               	iorwf	??___flmul,w
 10862  0F85  1903               	skipnz
 10863  0F86  1834               	btfsc	___flmul@prod,0
 10864  0F87  2F89               	goto	l4955
 10865  0F88  2F8B               	goto	l4959
 10866  0F89                     l4955:	
 10867  0F89  01B2               	clrf	___flmul@aexp
 10868  0F8A  0AB2               	incf	___flmul@aexp,f
 10869  0F8B                     l4959:	
 10870  0F8B  0832               	movf	___flmul@aexp,w
 10871  0F8C  1903               	btfsc	3,2
 10872  0F8D  2FB4               	goto	l4969
 10873  0F8E  3001               	movlw	1
 10874  0F8F  07B4               	addwf	___flmul@prod,f
 10875  0F90  3000               	movlw	0
 10876  0F91  3DB5               	addwfc	___flmul@prod+1,f
 10877  0F92  3000               	movlw	0
 10878  0F93  3DB6               	addwfc	___flmul@prod+2,f
 10879  0F94  3000               	movlw	0
 10880  0F95  3DB7               	addwfc	___flmul@prod+3,f
 10881  0F96  1C37               	btfss	___flmul@prod+3,0
 10882  0F97  2FB4               	goto	l4969
 10883  0F98  0834               	movf	___flmul@prod,w
 10884  0F99  00A8               	movwf	??___flmul
 10885  0F9A  0835               	movf	___flmul@prod+1,w
 10886  0F9B  00A9               	movwf	??___flmul+1
 10887  0F9C  0836               	movf	___flmul@prod+2,w
 10888  0F9D  00AA               	movwf	??___flmul+2
 10889  0F9E  0837               	movf	___flmul@prod+3,w
 10890  0F9F  00AB               	movwf	??___flmul+3
 10891  0FA0  3001               	movlw	1
 10892  0FA1  00AC               	movwf	??___flmul+4
 10893  0FA2                     u4915:	
 10894  0FA2  37AB               	asrf	??___flmul+3,f
 10895  0FA3  0CAA               	rrf	??___flmul+2,f
 10896  0FA4  0CA9               	rrf	??___flmul+1,f
 10897  0FA5  0CA8               	rrf	??___flmul,f
 10898  0FA6  0BAC               	decfsz	??___flmul+4,f
 10899  0FA7  2FA2               	goto	u4915
 10900  0FA8  082B               	movf	??___flmul+3,w
 10901  0FA9  00B7               	movwf	___flmul@prod+3
 10902  0FAA  082A               	movf	??___flmul+2,w
 10903  0FAB  00B6               	movwf	___flmul@prod+2
 10904  0FAC  0829               	movf	??___flmul+1,w
 10905  0FAD  00B5               	movwf	___flmul@prod+1
 10906  0FAE  0828               	movf	??___flmul,w
 10907  0FAF  00B4               	movwf	___flmul@prod
 10908  0FB0  3001               	movlw	1
 10909  0FB1  07B8               	addwf	___flmul@temp,f
 10910  0FB2  3000               	movlw	0
 10911  0FB3  3DB9               	addwfc	___flmul@temp+1,f
 10912  0FB4                     l4969:	
 10913  0FB4  0839               	movf	___flmul@temp+1,w
 10914  0FB5  3A80               	xorlw	128
 10915  0FB6  00A8               	movwf	??___flmul
 10916  0FB7  3080               	movlw	128
 10917  0FB8  0228               	subwf	??___flmul,w
 10918  0FB9  1D03               	skipz
 10919  0FBA  2FBD               	goto	u4925
 10920  0FBB  30FF               	movlw	255
 10921  0FBC  0238               	subwf	___flmul@temp,w
 10922  0FBD                     u4925:	
 10923  0FBD  1C03               	skipc
 10924  0FBE  2FC9               	goto	l4973
 10925  0FBF  307F               	movlw	127
 10926  0FC0  0020               	movlb	0	; select bank0
 10927  0FC1  00B7               	movwf	___flmul@prod+3
 10928  0FC2  3080               	movlw	128
 10929  0FC3  00B6               	movwf	___flmul@prod+2
 10930  0FC4  3000               	movlw	0
 10931  0FC5  00B5               	movwf	___flmul@prod+1
 10932  0FC6  3000               	movlw	0
 10933  0FC7  00B4               	movwf	___flmul@prod
 10934  0FC8  2FF3               	goto	l1547
 10935  0FC9                     l4973:	
 10936  0FC9  0020               	movlb	0	; select bank0
 10937  0FCA  0839               	movf	___flmul@temp+1,w
 10938  0FCB  3A80               	xorlw	128
 10939  0FCC  00A8               	movwf	??___flmul
 10940  0FCD  3080               	movlw	128
 10941  0FCE  0228               	subwf	??___flmul,w
 10942  0FCF  1D03               	skipz
 10943  0FD0  2FD3               	goto	u4935
 10944  0FD1  3001               	movlw	1
 10945  0FD2  0238               	subwf	___flmul@temp,w
 10946  0FD3                     u4935:	
 10947  0FD3  1803               	skipnc
 10948  0FD4  2FE0               	goto	l4979
 10949  0FD5  3000               	movlw	0
 10950  0FD6  0020               	movlb	0	; select bank0
 10951  0FD7  00B7               	movwf	___flmul@prod+3
 10952  0FD8  3000               	movlw	0
 10953  0FD9  00B6               	movwf	___flmul@prod+2
 10954  0FDA  3000               	movlw	0
 10955  0FDB  00B5               	movwf	___flmul@prod+1
 10956  0FDC  3000               	movlw	0
 10957  0FDD  00B4               	movwf	___flmul@prod
 10958  0FDE  01AD               	clrf	___flmul@sign
 10959  0FDF  2FF3               	goto	l1547
 10960  0FE0                     l4979:	
 10961  0FE0  0020               	movlb	0	; select bank0
 10962  0FE1  0838               	movf	___flmul@temp,w
 10963  0FE2  00A8               	movwf	??___flmul
 10964  0FE3  0828               	movf	??___flmul,w
 10965  0FE4  00B3               	movwf	___flmul@bexp
 10966  0FE5  30FF               	movlw	255
 10967  0FE6  05B4               	andwf	___flmul@prod,f
 10968  0FE7  30FF               	movlw	255
 10969  0FE8  05B5               	andwf	___flmul@prod+1,f
 10970  0FE9  307F               	movlw	127
 10971  0FEA  05B6               	andwf	___flmul@prod+2,f
 10972  0FEB  3000               	movlw	0
 10973  0FEC  05B7               	andwf	___flmul@prod+3,f
 10974  0FED  1833               	btfsc	___flmul@bexp,0
 10975  0FEE  17B6               	bsf	___flmul@prod+2,7
 10976  0FEF  3633               	lsrf	___flmul@bexp,w
 10977  0FF0  00A8               	movwf	??___flmul
 10978  0FF1  0828               	movf	??___flmul,w
 10979  0FF2  00B7               	movwf	___flmul@prod+3
 10980  0FF3                     l1547:	
 10981  0FF3  082D               	movf	___flmul@sign,w
 10982  0FF4  00A8               	movwf	??___flmul
 10983  0FF5  0828               	movf	??___flmul,w
 10984  0FF6  04B7               	iorwf	___flmul@prod+3,f
 10985  0FF7  0837               	movf	___flmul@prod+3,w
 10986  0FF8  00A3               	movwf	?___flmul+3
 10987  0FF9  0836               	movf	___flmul@prod+2,w
 10988  0FFA  00A2               	movwf	?___flmul+2
 10989  0FFB  0835               	movf	___flmul@prod+1,w
 10990  0FFC  00A1               	movwf	?___flmul+1
 10991  0FFD  0834               	movf	___flmul@prod,w
 10992  0FFE  00A0               	movwf	?___flmul
 10993  0FFF  0008               	return
 10994  1000                     __end_of___flmul:	
 10995                           
 10996                           	psect	text24
 10997  105F                     __ptext24:	
 10998 ;; *************** function __Umul8_16 *****************
 10999 ;; Defined at:
 11000 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 11001 ;; Parameters:    Size  Location     Type
 11002 ;;  multiplier      1    wreg     unsigned char 
 11003 ;;  multiplicand    1    1[COMMON] unsigned char 
 11004 ;; Auto vars:     Size  Location     Type
 11005 ;;  multiplier      1    9[COMMON] unsigned char 
 11006 ;;  word_mpld       2    7[COMMON] unsigned int 
 11007 ;;  product         2    5[COMMON] unsigned int 
 11008 ;; Return value:  Size  Location     Type
 11009 ;;                  2    1[COMMON] unsigned int 
 11010 ;; Registers used:
 11011 ;;		wreg, status,2, status,0
 11012 ;; Tracked objects:
 11013 ;;		On entry : 0/0
 11014 ;;		On exit  : 0/0
 11015 ;;		Unchanged: 0/0
 11016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11017 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11018 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11019 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11020 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11021 ;;Total ram usage:        9 bytes
 11022 ;; Hardware stack levels used:    1
 11023 ;; Hardware stack levels required when called:    4
 11024 ;; This function calls:
 11025 ;;		Nothing
 11026 ;; This function is called by:
 11027 ;;		___flmul
 11028 ;; This function uses a non-reentrant model
 11029 ;;
 11030                           
 11031                           
 11032                           ;psect for function __Umul8_16
 11033  105F                     __Umul8_16:	
 11034                           
 11035                           ;incstack = 0
 11036                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 11037                           ;__Umul8_16@multiplier stored from wreg
 11038  105F  00F9               	movwf	__Umul8_16@multiplier
 11039  1060  01F5               	clrf	__Umul8_16@product
 11040  1061  01F6               	clrf	__Umul8_16@product+1
 11041  1062  0871               	movf	__Umul8_16@multiplicand,w
 11042  1063  00F3               	movwf	??__Umul8_16
 11043  1064  01F4               	clrf	??__Umul8_16+1
 11044  1065  0873               	movf	??__Umul8_16,w
 11045  1066  00F7               	movwf	__Umul8_16@word_mpld
 11046  1067  0874               	movf	??__Umul8_16+1,w
 11047  1068  00F8               	movwf	__Umul8_16@word_mpld+1
 11048  1069                     l4437:	
 11049  1069  1C79               	btfss	__Umul8_16@multiplier,0
 11050  106A  286F               	goto	l1683
 11051  106B  0877               	movf	__Umul8_16@word_mpld,w
 11052  106C  07F5               	addwf	__Umul8_16@product,f
 11053  106D  0878               	movf	__Umul8_16@word_mpld+1,w
 11054  106E  3DF6               	addwfc	__Umul8_16@product+1,f
 11055  106F                     l1683:	
 11056  106F  3001               	movlw	1
 11057  1070                     u3705:	
 11058  1070  35F7               	lslf	__Umul8_16@word_mpld,f
 11059  1071  0DF8               	rlf	__Umul8_16@word_mpld+1,f
 11060  1072  0B89               	decfsz	9,f
 11061  1073  2870               	goto	u3705
 11062  1074  1003               	clrc
 11063  1075  0CF9               	rrf	__Umul8_16@multiplier,f
 11064  1076  0879               	movf	__Umul8_16@multiplier,w
 11065  1077  1D03               	btfss	3,2
 11066  1078  2869               	goto	l4437
 11067  1079  0876               	movf	__Umul8_16@product+1,w
 11068  107A  00F2               	movwf	?__Umul8_16+1
 11069  107B  0875               	movf	__Umul8_16@product,w
 11070  107C  00F1               	movwf	?__Umul8_16
 11071  107D  0008               	return
 11072  107E                     __end_of__Umul8_16:	
 11073                           
 11074                           	psect	text25
 11075  162E                     __ptext25:	
 11076 ;; *************** function ___flge *****************
 11077 ;; Defined at:
 11078 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 11079 ;; Parameters:    Size  Location     Type
 11080 ;;  ff1             4   26[BANK0 ] unsigned int 
 11081 ;;  ff2             4   30[BANK0 ] unsigned int 
 11082 ;; Auto vars:     Size  Location     Type
 11083 ;;		None
 11084 ;; Return value:  Size  Location     Type
 11085 ;;		None               void
 11086 ;; Registers used:
 11087 ;;		wreg, status,2, status,0
 11088 ;; Tracked objects:
 11089 ;;		On entry : 0/0
 11090 ;;		On exit  : 0/0
 11091 ;;		Unchanged: 0/0
 11092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11093 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11095 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11096 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11097 ;;Total ram usage:       12 bytes
 11098 ;; Hardware stack levels used:    1
 11099 ;; Hardware stack levels required when called:    4
 11100 ;; This function calls:
 11101 ;;		Nothing
 11102 ;; This function is called by:
 11103 ;;		_efgtoa
 11104 ;; This function uses a non-reentrant model
 11105 ;;
 11106                           
 11107                           
 11108                           ;psect for function ___flge
 11109  162E                     ___flge:	
 11110                           
 11111                           ;incstack = 0
 11112                           ; Regs used in ___flge: [wreg+status,2+status,0]
 11113  162E  3000               	movlw	0
 11114  162F  0020               	movlb	0	; select bank0
 11115  1630  053A               	andwf	___flge@ff1,w
 11116  1631  00C2               	movwf	??___flge
 11117  1632  3000               	movlw	0
 11118  1633  053B               	andwf	___flge@ff1+1,w
 11119  1634  00C3               	movwf	??___flge+1
 11120  1635  3080               	movlw	128
 11121  1636  053C               	andwf	___flge@ff1+2,w
 11122  1637  00C4               	movwf	??___flge+2
 11123  1638  307F               	movlw	127
 11124  1639  053D               	andwf	___flge@ff1+3,w
 11125  163A  00C5               	movwf	??___flge+3
 11126  163B  0845               	movf	??___flge+3,w
 11127  163C  0444               	iorwf	??___flge+2,w
 11128  163D  0443               	iorwf	??___flge+1,w
 11129  163E  0442               	iorwf	??___flge,w
 11130  163F  1D03               	skipz
 11131  1640  2E49               	goto	l1316
 11132  1641  3000               	movlw	0
 11133  1642  00BD               	movwf	___flge@ff1+3
 11134  1643  3000               	movlw	0
 11135  1644  00BC               	movwf	___flge@ff1+2
 11136  1645  3000               	movlw	0
 11137  1646  00BB               	movwf	___flge@ff1+1
 11138  1647  3000               	movlw	0
 11139  1648  00BA               	movwf	___flge@ff1
 11140  1649                     l1316:	
 11141  1649  3000               	movlw	0
 11142  164A  053E               	andwf	___flge@ff2,w
 11143  164B  00C2               	movwf	??___flge
 11144  164C  3000               	movlw	0
 11145  164D  053F               	andwf	___flge@ff2+1,w
 11146  164E  00C3               	movwf	??___flge+1
 11147  164F  3080               	movlw	128
 11148  1650  0540               	andwf	___flge@ff2+2,w
 11149  1651  00C4               	movwf	??___flge+2
 11150  1652  307F               	movlw	127
 11151  1653  0541               	andwf	___flge@ff2+3,w
 11152  1654  00C5               	movwf	??___flge+3
 11153  1655  0845               	movf	??___flge+3,w
 11154  1656  0444               	iorwf	??___flge+2,w
 11155  1657  0443               	iorwf	??___flge+1,w
 11156  1658  0442               	iorwf	??___flge,w
 11157  1659  1D03               	skipz
 11158  165A  2E63               	goto	l4647
 11159  165B  3000               	movlw	0
 11160  165C  00C1               	movwf	___flge@ff2+3
 11161  165D  3000               	movlw	0
 11162  165E  00C0               	movwf	___flge@ff2+2
 11163  165F  3000               	movlw	0
 11164  1660  00BF               	movwf	___flge@ff2+1
 11165  1661  3000               	movlw	0
 11166  1662  00BE               	movwf	___flge@ff2
 11167  1663                     l4647:	
 11168  1663  1FBD               	btfss	___flge@ff1+3,7
 11169  1664  2E7D               	goto	l4651
 11170  1665  3000               	movlw	0
 11171  1666  00C2               	movwf	??___flge
 11172  1667  3000               	movlw	0
 11173  1668  00C3               	movwf	??___flge+1
 11174  1669  3000               	movlw	0
 11175  166A  00C4               	movwf	??___flge+2
 11176  166B  3080               	movlw	128
 11177  166C  00C5               	movwf	??___flge+3
 11178  166D  083A               	movf	___flge@ff1,w
 11179  166E  02C2               	subwf	??___flge,f
 11180  166F  083B               	movf	___flge@ff1+1,w
 11181  1670  3BC3               	subwfb	??___flge+1,f
 11182  1671  083C               	movf	___flge@ff1+2,w
 11183  1672  3BC4               	subwfb	??___flge+2,f
 11184  1673  083D               	movf	___flge@ff1+3,w
 11185  1674  3BC5               	subwfb	??___flge+3,f
 11186  1675  0845               	movf	??___flge+3,w
 11187  1676  00BD               	movwf	___flge@ff1+3
 11188  1677  0844               	movf	??___flge+2,w
 11189  1678  00BC               	movwf	___flge@ff1+2
 11190  1679  0843               	movf	??___flge+1,w
 11191  167A  00BB               	movwf	___flge@ff1+1
 11192  167B  0842               	movf	??___flge,w
 11193  167C  00BA               	movwf	___flge@ff1
 11194  167D                     l4651:	
 11195  167D  1FC1               	btfss	___flge@ff2+3,7
 11196  167E  2E97               	goto	l1319
 11197  167F  3000               	movlw	0
 11198  1680  00C2               	movwf	??___flge
 11199  1681  3000               	movlw	0
 11200  1682  00C3               	movwf	??___flge+1
 11201  1683  3000               	movlw	0
 11202  1684  00C4               	movwf	??___flge+2
 11203  1685  3080               	movlw	128
 11204  1686  00C5               	movwf	??___flge+3
 11205  1687  083E               	movf	___flge@ff2,w
 11206  1688  02C2               	subwf	??___flge,f
 11207  1689  083F               	movf	___flge@ff2+1,w
 11208  168A  3BC3               	subwfb	??___flge+1,f
 11209  168B  0840               	movf	___flge@ff2+2,w
 11210  168C  3BC4               	subwfb	??___flge+2,f
 11211  168D  0841               	movf	___flge@ff2+3,w
 11212  168E  3BC5               	subwfb	??___flge+3,f
 11213  168F  0845               	movf	??___flge+3,w
 11214  1690  00C1               	movwf	___flge@ff2+3
 11215  1691  0844               	movf	??___flge+2,w
 11216  1692  00C0               	movwf	___flge@ff2+2
 11217  1693  0843               	movf	??___flge+1,w
 11218  1694  00BF               	movwf	___flge@ff2+1
 11219  1695  0842               	movf	??___flge,w
 11220  1696  00BE               	movwf	___flge@ff2
 11221  1697                     l1319:	
 11222  1697  3080               	movlw	128
 11223  1698  06BD               	xorwf	___flge@ff1+3,f
 11224  1699  3080               	movlw	128
 11225  169A  06C1               	xorwf	___flge@ff2+3,f
 11226  169B  0841               	movf	___flge@ff2+3,w
 11227  169C  023D               	subwf	___flge@ff1+3,w
 11228  169D  1D03               	skipz
 11229  169E  0008               	return
 11230  169F  0840               	movf	___flge@ff2+2,w
 11231  16A0  023C               	subwf	___flge@ff1+2,w
 11232  16A1  1D03               	skipz
 11233  16A2  0008               	return
 11234  16A3  083F               	movf	___flge@ff2+1,w
 11235  16A4  023B               	subwf	___flge@ff1+1,w
 11236  16A5  1D03               	skipz
 11237  16A6  0008               	return
 11238  16A7  083E               	movf	___flge@ff2,w
 11239  16A8  023A               	subwf	___flge@ff1,w
 11240  16A9  0008               	return
 11241  16AA                     __end_of___flge:	
 11242                           
 11243                           	psect	text26
 11244  0800                     __ptext26:	
 11245 ;; *************** function ___fleq *****************
 11246 ;; Defined at:
 11247 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
 11248 ;; Parameters:    Size  Location     Type
 11249 ;;  ff1             4    1[COMMON] unsigned int 
 11250 ;;  ff2             4    5[COMMON] unsigned int 
 11251 ;; Auto vars:     Size  Location     Type
 11252 ;;		None
 11253 ;; Return value:  Size  Location     Type
 11254 ;;		None               void
 11255 ;; Registers used:
 11256 ;;		wreg, status,2, status,0
 11257 ;; Tracked objects:
 11258 ;;		On entry : 0/0
 11259 ;;		On exit  : 0/0
 11260 ;;		Unchanged: 0/0
 11261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11262 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11264 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11265 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11266 ;;Total ram usage:       12 bytes
 11267 ;; Hardware stack levels used:    1
 11268 ;; Hardware stack levels required when called:    4
 11269 ;; This function calls:
 11270 ;;		Nothing
 11271 ;; This function is called by:
 11272 ;;		_efgtoa
 11273 ;; This function uses a non-reentrant model
 11274 ;;
 11275                           
 11276                           
 11277                           ;psect for function ___fleq
 11278  0800                     ___fleq:	
 11279                           
 11280                           ;incstack = 0
 11281                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 11282  0800  3000               	movlw	0
 11283  0801  0571               	andwf	___fleq@ff1,w
 11284  0802  0020               	movlb	0	; select bank0
 11285  0803  00A0               	movwf	??___fleq
 11286  0804  3000               	movlw	0
 11287  0805  0572               	andwf	___fleq@ff1+1,w
 11288  0806  00A1               	movwf	??___fleq+1
 11289  0807  3080               	movlw	128
 11290  0808  0573               	andwf	___fleq@ff1+2,w
 11291  0809  00A2               	movwf	??___fleq+2
 11292  080A  307F               	movlw	127
 11293  080B  0574               	andwf	___fleq@ff1+3,w
 11294  080C  00A3               	movwf	??___fleq+3
 11295  080D  0823               	movf	??___fleq+3,w
 11296  080E  0422               	iorwf	??___fleq+2,w
 11297  080F  0421               	iorwf	??___fleq+1,w
 11298  0810  0420               	iorwf	??___fleq,w
 11299  0811  1D03               	skipz
 11300  0812  281B               	goto	l1307
 11301  0813  3000               	movlw	0
 11302  0814  00F4               	movwf	___fleq@ff1+3
 11303  0815  3000               	movlw	0
 11304  0816  00F3               	movwf	___fleq@ff1+2
 11305  0817  3000               	movlw	0
 11306  0818  00F2               	movwf	___fleq@ff1+1
 11307  0819  3000               	movlw	0
 11308  081A  00F1               	movwf	___fleq@ff1
 11309  081B                     l1307:	
 11310  081B  3000               	movlw	0
 11311  081C  0575               	andwf	___fleq@ff2,w
 11312  081D  00A0               	movwf	??___fleq
 11313  081E  3000               	movlw	0
 11314  081F  0576               	andwf	___fleq@ff2+1,w
 11315  0820  00A1               	movwf	??___fleq+1
 11316  0821  3080               	movlw	128
 11317  0822  0577               	andwf	___fleq@ff2+2,w
 11318  0823  00A2               	movwf	??___fleq+2
 11319  0824  307F               	movlw	127
 11320  0825  0578               	andwf	___fleq@ff2+3,w
 11321  0826  00A3               	movwf	??___fleq+3
 11322  0827  0823               	movf	??___fleq+3,w
 11323  0828  0422               	iorwf	??___fleq+2,w
 11324  0829  0421               	iorwf	??___fleq+1,w
 11325  082A  0420               	iorwf	??___fleq,w
 11326  082B  1D03               	skipz
 11327  082C  2835               	goto	l1308
 11328  082D  3000               	movlw	0
 11329  082E  00F8               	movwf	___fleq@ff2+3
 11330  082F  3000               	movlw	0
 11331  0830  00F7               	movwf	___fleq@ff2+2
 11332  0831  3000               	movlw	0
 11333  0832  00F6               	movwf	___fleq@ff2+1
 11334  0833  3000               	movlw	0
 11335  0834  00F5               	movwf	___fleq@ff2
 11336  0835                     l1308:	
 11337  0835  0878               	movf	___fleq@ff2+3,w
 11338  0836  0674               	xorwf	___fleq@ff1+3,w
 11339  0837  1D03               	skipz
 11340  0838  2843               	goto	u6695
 11341  0839  0877               	movf	___fleq@ff2+2,w
 11342  083A  0673               	xorwf	___fleq@ff1+2,w
 11343  083B  1D03               	skipz
 11344  083C  2843               	goto	u6695
 11345  083D  0876               	movf	___fleq@ff2+1,w
 11346  083E  0672               	xorwf	___fleq@ff1+1,w
 11347  083F  1D03               	skipz
 11348  0840  2843               	goto	u6695
 11349  0841  0875               	movf	___fleq@ff2,w
 11350  0842  0671               	xorwf	___fleq@ff1,w
 11351  0843                     u6695:	
 11352  0843  1903               	skipnz
 11353  0844  2847               	goto	l6283
 11354  0845  1003               	clrc
 11355  0846  0008               	return
 11356  0847                     l6283:	
 11357  0847  1403               	setc
 11358  0848  0008               	return
 11359  0849                     __end_of___fleq:	
 11360                           
 11361                           	psect	text27
 11362  08DF                     __ptext27:	
 11363 ;; *************** function ___fldiv *****************
 11364 ;; Defined at:
 11365 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 11366 ;; Parameters:    Size  Location     Type
 11367 ;;  a               4    6[BANK0 ] unsigned int 
 11368 ;;  b               4   10[BANK0 ] unsigned int 
 11369 ;; Auto vars:     Size  Location     Type
 11370 ;;  grs             4   26[BANK0 ] unsigned long 
 11371 ;;  rem             4   19[BANK0 ] unsigned long 
 11372 ;;  new_exp         2   24[BANK0 ] int 
 11373 ;;  aexp            1   31[BANK0 ] unsigned char 
 11374 ;;  bexp            1   30[BANK0 ] unsigned char 
 11375 ;;  sign            1   23[BANK0 ] unsigned char 
 11376 ;; Return value:  Size  Location     Type
 11377 ;;                  4    6[BANK0 ] unsigned char 
 11378 ;; Registers used:
 11379 ;;		wreg, status,2, status,0
 11380 ;; Tracked objects:
 11381 ;;		On entry : 0/0
 11382 ;;		On exit  : 0/0
 11383 ;;		Unchanged: 0/0
 11384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11385 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11386 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11387 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11388 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11389 ;;Total ram usage:       26 bytes
 11390 ;; Hardware stack levels used:    1
 11391 ;; Hardware stack levels required when called:    4
 11392 ;; This function calls:
 11393 ;;		Nothing
 11394 ;; This function is called by:
 11395 ;;		_readPressureSensor
 11396 ;;		_efgtoa
 11397 ;; This function uses a non-reentrant model
 11398 ;;
 11399                           
 11400                           
 11401                           ;psect for function ___fldiv
 11402  08DF                     ___fldiv:	
 11403                           
 11404                           ;incstack = 0
 11405                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 11406  08DF  0020               	movlb	0	; select bank0
 11407  08E0  082D               	movf	___fldiv@b+3,w
 11408  08E1  3980               	andlw	128
 11409  08E2  00AE               	movwf	??___fldiv
 11410  08E3  082E               	movf	??___fldiv,w
 11411  08E4  00B7               	movwf	___fldiv@sign
 11412  08E5  352D               	lslf	___fldiv@b+3,w
 11413  08E6  00AE               	movwf	??___fldiv
 11414  08E7  082E               	movf	??___fldiv,w
 11415  08E8  00BE               	movwf	___fldiv@bexp
 11416  08E9  1BAC               	btfsc	___fldiv@b+2,7
 11417  08EA  143E               	bsf	___fldiv@bexp,0
 11418  08EB  083E               	movf	___fldiv@bexp,w
 11419  08EC  1903               	btfsc	3,2
 11420  08ED  28FC               	goto	l4729
 11421  08EE  0A3E               	incf	___fldiv@bexp,w
 11422  08EF  1D03               	btfss	3,2
 11423  08F0  28F9               	goto	l4725
 11424  08F1  3000               	movlw	0
 11425  08F2  00AD               	movwf	___fldiv@b+3
 11426  08F3  3000               	movlw	0
 11427  08F4  00AC               	movwf	___fldiv@b+2
 11428  08F5  3000               	movlw	0
 11429  08F6  00AB               	movwf	___fldiv@b+1
 11430  08F7  3000               	movlw	0
 11431  08F8  00AA               	movwf	___fldiv@b
 11432  08F9                     l4725:	
 11433  08F9  17AC               	bsf	___fldiv@b+2,7
 11434  08FA  01AD               	clrf	___fldiv@b+3
 11435  08FB  2904               	goto	l4731
 11436  08FC                     l4729:	
 11437  08FC  3000               	movlw	0
 11438  08FD  00AD               	movwf	___fldiv@b+3
 11439  08FE  3000               	movlw	0
 11440  08FF  00AC               	movwf	___fldiv@b+2
 11441  0900  3000               	movlw	0
 11442  0901  00AB               	movwf	___fldiv@b+1
 11443  0902  3000               	movlw	0
 11444  0903  00AA               	movwf	___fldiv@b
 11445  0904                     l4731:	
 11446  0904  0829               	movf	___fldiv@a+3,w
 11447  0905  3980               	andlw	128
 11448  0906  00AE               	movwf	??___fldiv
 11449  0907  082E               	movf	??___fldiv,w
 11450  0908  06B7               	xorwf	___fldiv@sign,f
 11451  0909  3529               	lslf	___fldiv@a+3,w
 11452  090A  00AE               	movwf	??___fldiv
 11453  090B  082E               	movf	??___fldiv,w
 11454  090C  00BF               	movwf	___fldiv@aexp
 11455  090D  1BA8               	btfsc	___fldiv@a+2,7
 11456  090E  143F               	bsf	___fldiv@aexp,0
 11457  090F  083F               	movf	___fldiv@aexp,w
 11458  0910  1903               	btfsc	3,2
 11459  0911  2920               	goto	l4749
 11460  0912  0A3F               	incf	___fldiv@aexp,w
 11461  0913  1D03               	btfss	3,2
 11462  0914  291D               	goto	l4745
 11463  0915  3000               	movlw	0
 11464  0916  00A9               	movwf	___fldiv@a+3
 11465  0917  3000               	movlw	0
 11466  0918  00A8               	movwf	___fldiv@a+2
 11467  0919  3000               	movlw	0
 11468  091A  00A7               	movwf	___fldiv@a+1
 11469  091B  3000               	movlw	0
 11470  091C  00A6               	movwf	___fldiv@a
 11471  091D                     l4745:	
 11472  091D  17A8               	bsf	___fldiv@a+2,7
 11473  091E  01A9               	clrf	___fldiv@a+3
 11474  091F  2928               	goto	l1495
 11475  0920                     l4749:	
 11476  0920  3000               	movlw	0
 11477  0921  00A9               	movwf	___fldiv@a+3
 11478  0922  3000               	movlw	0
 11479  0923  00A8               	movwf	___fldiv@a+2
 11480  0924  3000               	movlw	0
 11481  0925  00A7               	movwf	___fldiv@a+1
 11482  0926  3000               	movlw	0
 11483  0927  00A6               	movwf	___fldiv@a
 11484  0928                     l1495:	
 11485  0928  0829               	movf	___fldiv@a+3,w
 11486  0929  0428               	iorwf	___fldiv@a+2,w
 11487  092A  0427               	iorwf	___fldiv@a+1,w
 11488  092B  0426               	iorwf	___fldiv@a,w
 11489  092C  1D03               	skipz
 11490  092D  2947               	goto	l4759
 11491  092E  3000               	movlw	0
 11492  092F  00AD               	movwf	___fldiv@b+3
 11493  0930  3000               	movlw	0
 11494  0931  00AC               	movwf	___fldiv@b+2
 11495  0932  3000               	movlw	0
 11496  0933  00AB               	movwf	___fldiv@b+1
 11497  0934  3000               	movlw	0
 11498  0935  00AA               	movwf	___fldiv@b
 11499  0936  3080               	movlw	128
 11500  0937  04AC               	iorwf	___fldiv@b+2,f
 11501  0938  307F               	movlw	127
 11502  0939  04AD               	iorwf	___fldiv@b+3,f
 11503  093A                     L12:	
 11504  093A  0837               	movf	___fldiv@sign,w
 11505  093B  00AE               	movwf	??___fldiv
 11506  093C  082E               	movf	??___fldiv,w
 11507  093D  04AD               	iorwf	___fldiv@b+3,f
 11508  093E  082D               	movf	___fldiv@b+3,w
 11509  093F  00A9               	movwf	?___fldiv+3
 11510  0940  082C               	movf	___fldiv@b+2,w
 11511  0941  00A8               	movwf	?___fldiv+2
 11512  0942  082B               	movf	___fldiv@b+1,w
 11513  0943  00A7               	movwf	?___fldiv+1
 11514  0944  082A               	movf	___fldiv@b,w
 11515  0945  00A6               	movwf	?___fldiv
 11516  0946  0008               	return
 11517  0947                     l4759:	
 11518  0947  083E               	movf	___fldiv@bexp,w
 11519  0948  1D03               	btfss	3,2
 11520  0949  2953               	goto	l4765
 11521  094A  3000               	movlw	0
 11522  094B  00A9               	movwf	?___fldiv+3
 11523  094C  3000               	movlw	0
 11524  094D  00A8               	movwf	?___fldiv+2
 11525  094E  3000               	movlw	0
 11526  094F  00A7               	movwf	?___fldiv+1
 11527  0950  3000               	movlw	0
 11528  0951  00A6               	movwf	?___fldiv
 11529  0952  0008               	return
 11530  0953                     l4765:	
 11531  0953  083E               	movf	___fldiv@bexp,w
 11532  0954  00AE               	movwf	??___fldiv
 11533  0955  01AF               	clrf	??___fldiv+1
 11534  0956  082F               	movf	??___fldiv+1,w
 11535  0957  00B1               	movwf	??___fldiv+3
 11536  0958  083F               	movf	___fldiv@aexp,w
 11537  0959  022E               	subwf	??___fldiv,w
 11538  095A  00B0               	movwf	??___fldiv+2
 11539  095B  1C03               	skipc
 11540  095C  03B1               	decf	??___fldiv+3,f
 11541  095D  0830               	movf	??___fldiv+2,w
 11542  095E  3E7F               	addlw	127
 11543  095F  00B8               	movwf	___fldiv@new_exp
 11544  0960  3000               	movlw	0
 11545  0961  3D31               	addwfc	??___fldiv+3,w
 11546  0962  00B9               	movwf	___fldiv@new_exp+1
 11547  0963  082D               	movf	___fldiv@b+3,w
 11548  0964  00B6               	movwf	___fldiv@rem+3
 11549  0965  082C               	movf	___fldiv@b+2,w
 11550  0966  00B5               	movwf	___fldiv@rem+2
 11551  0967  082B               	movf	___fldiv@b+1,w
 11552  0968  00B4               	movwf	___fldiv@rem+1
 11553  0969  082A               	movf	___fldiv@b,w
 11554  096A  00B3               	movwf	___fldiv@rem
 11555  096B  3000               	movlw	0
 11556  096C  00AD               	movwf	___fldiv@b+3
 11557  096D  3000               	movlw	0
 11558  096E  00AC               	movwf	___fldiv@b+2
 11559  096F  3000               	movlw	0
 11560  0970  00AB               	movwf	___fldiv@b+1
 11561  0971  3000               	movlw	0
 11562  0972  00AA               	movwf	___fldiv@b
 11563  0973  3000               	movlw	0
 11564  0974  00BD               	movwf	___fldiv@grs+3
 11565  0975  3000               	movlw	0
 11566  0976  00BC               	movwf	___fldiv@grs+2
 11567  0977  3000               	movlw	0
 11568  0978  00BB               	movwf	___fldiv@grs+1
 11569  0979  3000               	movlw	0
 11570  097A  00BA               	movwf	___fldiv@grs
 11571  097B  01BF               	clrf	___fldiv@aexp
 11572  097C                     l4793:	
 11573  097C  301A               	movlw	26
 11574  097D  023F               	subwf	___fldiv@aexp,w
 11575  097E  1803               	btfsc	3,0
 11576  097F  29B8               	goto	l4795
 11577  0980  083F               	movf	___fldiv@aexp,w
 11578  0981  1903               	btfsc	3,2
 11579  0982  299A               	goto	l4785
 11580  0983  3001               	movlw	1
 11581  0984                     u4495:	
 11582  0984  35B3               	lslf	___fldiv@rem,f
 11583  0985  0DB4               	rlf	___fldiv@rem+1,f
 11584  0986  0DB5               	rlf	___fldiv@rem+2,f
 11585  0987  0DB6               	rlf	___fldiv@rem+3,f
 11586  0988  0B89               	decfsz	9,f
 11587  0989  2984               	goto	u4495
 11588  098A  3001               	movlw	1
 11589  098B                     u4505:	
 11590  098B  35AA               	lslf	___fldiv@b,f
 11591  098C  0DAB               	rlf	___fldiv@b+1,f
 11592  098D  0DAC               	rlf	___fldiv@b+2,f
 11593  098E  0DAD               	rlf	___fldiv@b+3,f
 11594  098F  0B89               	decfsz	9,f
 11595  0990  298B               	goto	u4505
 11596  0991  1BBD               	btfsc	___fldiv@grs+3,7
 11597  0992  142A               	bsf	___fldiv@b,0
 11598  0993  3001               	movlw	1
 11599  0994                     u4525:	
 11600  0994  35BA               	lslf	___fldiv@grs,f
 11601  0995  0DBB               	rlf	___fldiv@grs+1,f
 11602  0996  0DBC               	rlf	___fldiv@grs+2,f
 11603  0997  0DBD               	rlf	___fldiv@grs+3,f
 11604  0998  0B89               	decfsz	9,f
 11605  0999  2994               	goto	u4525
 11606  099A                     l4785:	
 11607  099A  0829               	movf	___fldiv@a+3,w
 11608  099B  0236               	subwf	___fldiv@rem+3,w
 11609  099C  1D03               	skipz
 11610  099D  29A8               	goto	u4535
 11611  099E  0828               	movf	___fldiv@a+2,w
 11612  099F  0235               	subwf	___fldiv@rem+2,w
 11613  09A0  1D03               	skipz
 11614  09A1  29A8               	goto	u4535
 11615  09A2  0827               	movf	___fldiv@a+1,w
 11616  09A3  0234               	subwf	___fldiv@rem+1,w
 11617  09A4  1D03               	skipz
 11618  09A5  29A8               	goto	u4535
 11619  09A6  0826               	movf	___fldiv@a,w
 11620  09A7  0233               	subwf	___fldiv@rem,w
 11621  09A8                     u4535:	
 11622  09A8  1C03               	skipc
 11623  09A9  29B3               	goto	l4791
 11624  09AA  173D               	bsf	___fldiv@grs+3,6
 11625  09AB  0826               	movf	___fldiv@a,w
 11626  09AC  02B3               	subwf	___fldiv@rem,f
 11627  09AD  0827               	movf	___fldiv@a+1,w
 11628  09AE  3BB4               	subwfb	___fldiv@rem+1,f
 11629  09AF  0828               	movf	___fldiv@a+2,w
 11630  09B0  3BB5               	subwfb	___fldiv@rem+2,f
 11631  09B1  0829               	movf	___fldiv@a+3,w
 11632  09B2  3BB6               	subwfb	___fldiv@rem+3,f
 11633  09B3                     l4791:	
 11634  09B3  3001               	movlw	1
 11635  09B4  00AE               	movwf	??___fldiv
 11636  09B5  082E               	movf	??___fldiv,w
 11637  09B6  07BF               	addwf	___fldiv@aexp,f
 11638  09B7  297C               	goto	l4793
 11639  09B8                     l4795:	
 11640  09B8  0836               	movf	___fldiv@rem+3,w
 11641  09B9  0435               	iorwf	___fldiv@rem+2,w
 11642  09BA  0434               	iorwf	___fldiv@rem+1,w
 11643  09BB  0433               	iorwf	___fldiv@rem,w
 11644  09BC  1D03               	btfss	3,2
 11645  09BD  143A               	bsf	___fldiv@grs,0
 11646  09BE                     l4809:	
 11647  09BE  1BAC               	btfsc	___fldiv@b+2,7
 11648  09BF  29D5               	goto	l4811
 11649  09C0  3001               	movlw	1
 11650  09C1                     u4565:	
 11651  09C1  35AA               	lslf	___fldiv@b,f
 11652  09C2  0DAB               	rlf	___fldiv@b+1,f
 11653  09C3  0DAC               	rlf	___fldiv@b+2,f
 11654  09C4  0DAD               	rlf	___fldiv@b+3,f
 11655  09C5  0B89               	decfsz	9,f
 11656  09C6  29C1               	goto	u4565
 11657  09C7  1BBD               	btfsc	___fldiv@grs+3,7
 11658  09C8  142A               	bsf	___fldiv@b,0
 11659  09C9  3001               	movlw	1
 11660  09CA                     u4585:	
 11661  09CA  35BA               	lslf	___fldiv@grs,f
 11662  09CB  0DBB               	rlf	___fldiv@grs+1,f
 11663  09CC  0DBC               	rlf	___fldiv@grs+2,f
 11664  09CD  0DBD               	rlf	___fldiv@grs+3,f
 11665  09CE  0B89               	decfsz	9,f
 11666  09CF  29CA               	goto	u4585
 11667  09D0  30FF               	movlw	255
 11668  09D1  07B8               	addwf	___fldiv@new_exp,f
 11669  09D2  30FF               	movlw	255
 11670  09D3  3DB9               	addwfc	___fldiv@new_exp+1,f
 11671  09D4  29BE               	goto	l4809
 11672  09D5                     l4811:	
 11673  09D5  01BF               	clrf	___fldiv@aexp
 11674  09D6  1FBD               	btfss	___fldiv@grs+3,7
 11675  09D7  29EE               	goto	l4821
 11676  09D8  30FF               	movlw	255
 11677  09D9  053A               	andwf	___fldiv@grs,w
 11678  09DA  00AE               	movwf	??___fldiv
 11679  09DB  30FF               	movlw	255
 11680  09DC  053B               	andwf	___fldiv@grs+1,w
 11681  09DD  00AF               	movwf	??___fldiv+1
 11682  09DE  30FF               	movlw	255
 11683  09DF  053C               	andwf	___fldiv@grs+2,w
 11684  09E0  00B0               	movwf	??___fldiv+2
 11685  09E1  307F               	movlw	127
 11686  09E2  053D               	andwf	___fldiv@grs+3,w
 11687  09E3  00B1               	movwf	??___fldiv+3
 11688  09E4  0831               	movf	??___fldiv+3,w
 11689  09E5  0430               	iorwf	??___fldiv+2,w
 11690  09E6  042F               	iorwf	??___fldiv+1,w
 11691  09E7  042E               	iorwf	??___fldiv,w
 11692  09E8  1903               	skipnz
 11693  09E9  182A               	btfsc	___fldiv@b,0
 11694  09EA  29EC               	goto	l4817
 11695  09EB  29EE               	goto	l4821
 11696  09EC                     l4817:	
 11697  09EC  01BF               	clrf	___fldiv@aexp
 11698  09ED  0ABF               	incf	___fldiv@aexp,f
 11699  09EE                     l4821:	
 11700  09EE  083F               	movf	___fldiv@aexp,w
 11701  09EF  1903               	btfsc	3,2
 11702  09F0  2A17               	goto	l4831
 11703  09F1  3001               	movlw	1
 11704  09F2  07AA               	addwf	___fldiv@b,f
 11705  09F3  3000               	movlw	0
 11706  09F4  3DAB               	addwfc	___fldiv@b+1,f
 11707  09F5  3000               	movlw	0
 11708  09F6  3DAC               	addwfc	___fldiv@b+2,f
 11709  09F7  3000               	movlw	0
 11710  09F8  3DAD               	addwfc	___fldiv@b+3,f
 11711  09F9  1C2D               	btfss	___fldiv@b+3,0
 11712  09FA  2A17               	goto	l4831
 11713  09FB  082A               	movf	___fldiv@b,w
 11714  09FC  00AE               	movwf	??___fldiv
 11715  09FD  082B               	movf	___fldiv@b+1,w
 11716  09FE  00AF               	movwf	??___fldiv+1
 11717  09FF  082C               	movf	___fldiv@b+2,w
 11718  0A00  00B0               	movwf	??___fldiv+2
 11719  0A01  082D               	movf	___fldiv@b+3,w
 11720  0A02  00B1               	movwf	??___fldiv+3
 11721  0A03  3001               	movlw	1
 11722  0A04  00B2               	movwf	??___fldiv+4
 11723  0A05                     u4655:	
 11724  0A05  37B1               	asrf	??___fldiv+3,f
 11725  0A06  0CB0               	rrf	??___fldiv+2,f
 11726  0A07  0CAF               	rrf	??___fldiv+1,f
 11727  0A08  0CAE               	rrf	??___fldiv,f
 11728  0A09  0BB2               	decfsz	??___fldiv+4,f
 11729  0A0A  2A05               	goto	u4655
 11730  0A0B  0831               	movf	??___fldiv+3,w
 11731  0A0C  00AD               	movwf	___fldiv@b+3
 11732  0A0D  0830               	movf	??___fldiv+2,w
 11733  0A0E  00AC               	movwf	___fldiv@b+2
 11734  0A0F  082F               	movf	??___fldiv+1,w
 11735  0A10  00AB               	movwf	___fldiv@b+1
 11736  0A11  082E               	movf	??___fldiv,w
 11737  0A12  00AA               	movwf	___fldiv@b
 11738  0A13  3001               	movlw	1
 11739  0A14  07B8               	addwf	___fldiv@new_exp,f
 11740  0A15  3000               	movlw	0
 11741  0A16  3DB9               	addwfc	___fldiv@new_exp+1,f
 11742  0A17                     l4831:	
 11743  0A17  0839               	movf	___fldiv@new_exp+1,w
 11744  0A18  3A80               	xorlw	128
 11745  0A19  00AE               	movwf	??___fldiv
 11746  0A1A  3080               	movlw	128
 11747  0A1B  022E               	subwf	??___fldiv,w
 11748  0A1C  1D03               	skipz
 11749  0A1D  2A20               	goto	u4665
 11750  0A1E  30FF               	movlw	255
 11751  0A1F  0238               	subwf	___fldiv@new_exp,w
 11752  0A20                     u4665:	
 11753  0A20  1C03               	skipc
 11754  0A21  2A2F               	goto	l1516
 11755  0A22  30FF               	movlw	255
 11756  0A23  0020               	movlb	0	; select bank0
 11757  0A24  00B8               	movwf	___fldiv@new_exp
 11758  0A25  3000               	movlw	0
 11759  0A26  00B9               	movwf	___fldiv@new_exp+1
 11760  0A27  3000               	movlw	0
 11761  0A28  00AD               	movwf	___fldiv@b+3
 11762  0A29  3000               	movlw	0
 11763  0A2A  00AC               	movwf	___fldiv@b+2
 11764  0A2B  3000               	movlw	0
 11765  0A2C  00AB               	movwf	___fldiv@b+1
 11766  0A2D  3000               	movlw	0
 11767  0A2E  00AA               	movwf	___fldiv@b
 11768  0A2F                     l1516:	
 11769  0A2F  0020               	movlb	0	; select bank0
 11770  0A30  0839               	movf	___fldiv@new_exp+1,w
 11771  0A31  3A80               	xorlw	128
 11772  0A32  00AE               	movwf	??___fldiv
 11773  0A33  3080               	movlw	128
 11774  0A34  022E               	subwf	??___fldiv,w
 11775  0A35  1D03               	skipz
 11776  0A36  2A39               	goto	u4675
 11777  0A37  3001               	movlw	1
 11778  0A38  0238               	subwf	___fldiv@new_exp,w
 11779  0A39                     u4675:	
 11780  0A39  1803               	skipnc
 11781  0A3A  2A47               	goto	l1517
 11782  0A3B  0020               	movlb	0	; select bank0
 11783  0A3C  01B8               	clrf	___fldiv@new_exp
 11784  0A3D  01B9               	clrf	___fldiv@new_exp+1
 11785  0A3E  3000               	movlw	0
 11786  0A3F  00AD               	movwf	___fldiv@b+3
 11787  0A40  3000               	movlw	0
 11788  0A41  00AC               	movwf	___fldiv@b+2
 11789  0A42  3000               	movlw	0
 11790  0A43  00AB               	movwf	___fldiv@b+1
 11791  0A44  3000               	movlw	0
 11792  0A45  00AA               	movwf	___fldiv@b
 11793  0A46  01B7               	clrf	___fldiv@sign
 11794  0A47                     l1517:	
 11795  0A47  0020               	movlb	0	; select bank0
 11796  0A48  0838               	movf	___fldiv@new_exp,w
 11797  0A49  00AE               	movwf	??___fldiv
 11798  0A4A  082E               	movf	??___fldiv,w
 11799  0A4B  00BE               	movwf	___fldiv@bexp
 11800  0A4C  1C3E               	btfss	___fldiv@bexp,0
 11801  0A4D  2A50               	goto	l4845
 11802  0A4E  17AC               	bsf	___fldiv@b+2,7
 11803  0A4F  2A54               	goto	l1519
 11804  0A50                     l4845:	
 11805  0A50  307F               	movlw	127
 11806  0A51  00AE               	movwf	??___fldiv
 11807  0A52  082E               	movf	??___fldiv,w
 11808  0A53  05AC               	andwf	___fldiv@b+2,f
 11809  0A54                     l1519:	
 11810  0A54  363E               	lsrf	___fldiv@bexp,w
 11811  0A55  00AE               	movwf	??___fldiv
 11812  0A56  082E               	movf	??___fldiv,w
 11813  0A57  00AD               	movwf	___fldiv@b+3
 11814  0A58  293A               	goto	L12
 11815  0A59                     __end_of___fldiv:	
 11816                           
 11817                           	psect	text28
 11818  1384                     __ptext28:	
 11819 ;; *************** function ___awmod *****************
 11820 ;; Defined at:
 11821 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
 11822 ;; Parameters:    Size  Location     Type
 11823 ;;  divisor         2    1[COMMON] int 
 11824 ;;  dividend        2    3[COMMON] int 
 11825 ;; Auto vars:     Size  Location     Type
 11826 ;;  sign            1    7[COMMON] unsigned char 
 11827 ;;  counter         1    6[COMMON] unsigned char 
 11828 ;; Return value:  Size  Location     Type
 11829 ;;                  2    1[COMMON] int 
 11830 ;; Registers used:
 11831 ;;		wreg, status,2, status,0
 11832 ;; Tracked objects:
 11833 ;;		On entry : 0/0
 11834 ;;		On exit  : 0/0
 11835 ;;		Unchanged: 0/0
 11836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11837 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11838 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11839 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11840 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11841 ;;Total ram usage:        7 bytes
 11842 ;; Hardware stack levels used:    1
 11843 ;; Hardware stack levels required when called:    4
 11844 ;; This function calls:
 11845 ;;		Nothing
 11846 ;; This function is called by:
 11847 ;;		_efgtoa
 11848 ;; This function uses a non-reentrant model
 11849 ;;
 11850                           
 11851                           
 11852                           ;psect for function ___awmod
 11853  1384                     ___awmod:	
 11854                           
 11855                           ;incstack = 0
 11856                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11857  1384  01F7               	clrf	___awmod@sign
 11858  1385  1FF4               	btfss	___awmod@dividend+1,7
 11859  1386  2B8E               	goto	l4599
 11860  1387  09F3               	comf	___awmod@dividend,f
 11861  1388  09F4               	comf	___awmod@dividend+1,f
 11862  1389  0AF3               	incf	___awmod@dividend,f
 11863  138A  1903               	skipnz
 11864  138B  0AF4               	incf	___awmod@dividend+1,f
 11865  138C  01F7               	clrf	___awmod@sign
 11866  138D  0AF7               	incf	___awmod@sign,f
 11867  138E                     l4599:	
 11868  138E  1FF2               	btfss	___awmod@divisor+1,7
 11869  138F  2B95               	goto	l4603
 11870  1390  09F1               	comf	___awmod@divisor,f
 11871  1391  09F2               	comf	___awmod@divisor+1,f
 11872  1392  0AF1               	incf	___awmod@divisor,f
 11873  1393  1903               	skipnz
 11874  1394  0AF2               	incf	___awmod@divisor+1,f
 11875  1395                     l4603:	
 11876  1395  0871               	movf	___awmod@divisor,w
 11877  1396  0472               	iorwf	___awmod@divisor+1,w
 11878  1397  1903               	btfsc	3,2
 11879  1398  2BBC               	goto	l4621
 11880  1399  01F6               	clrf	___awmod@counter
 11881  139A  0AF6               	incf	___awmod@counter,f
 11882  139B                     l4611:	
 11883  139B  1BF2               	btfsc	___awmod@divisor+1,7
 11884  139C  2BA7               	goto	l4613
 11885  139D  3001               	movlw	1
 11886  139E                     u4155:	
 11887  139E  35F1               	lslf	___awmod@divisor,f
 11888  139F  0DF2               	rlf	___awmod@divisor+1,f
 11889  13A0  0B89               	decfsz	9,f
 11890  13A1  2B9E               	goto	u4155
 11891  13A2  3001               	movlw	1
 11892  13A3  00F5               	movwf	??___awmod
 11893  13A4  0875               	movf	??___awmod,w
 11894  13A5  07F6               	addwf	___awmod@counter,f
 11895  13A6  2B9B               	goto	l4611
 11896  13A7                     l4613:	
 11897  13A7  0872               	movf	___awmod@divisor+1,w
 11898  13A8  0274               	subwf	___awmod@dividend+1,w
 11899  13A9  1D03               	skipz
 11900  13AA  2BAD               	goto	u4175
 11901  13AB  0871               	movf	___awmod@divisor,w
 11902  13AC  0273               	subwf	___awmod@dividend,w
 11903  13AD                     u4175:	
 11904  13AD  1C03               	skipc
 11905  13AE  2BB3               	goto	l4617
 11906  13AF  0871               	movf	___awmod@divisor,w
 11907  13B0  02F3               	subwf	___awmod@dividend,f
 11908  13B1  0872               	movf	___awmod@divisor+1,w
 11909  13B2  3BF4               	subwfb	___awmod@dividend+1,f
 11910  13B3                     l4617:	
 11911  13B3  3001               	movlw	1
 11912  13B4                     u4185:	
 11913  13B4  36F2               	lsrf	___awmod@divisor+1,f
 11914  13B5  0CF1               	rrf	___awmod@divisor,f
 11915  13B6  0B89               	decfsz	9,f
 11916  13B7  2BB4               	goto	u4185
 11917  13B8  3001               	movlw	1
 11918  13B9  02F6               	subwf	___awmod@counter,f
 11919  13BA  1D03               	btfss	3,2
 11920  13BB  2BA7               	goto	l4613
 11921  13BC                     l4621:	
 11922  13BC  0877               	movf	___awmod@sign,w
 11923  13BD  1903               	btfsc	3,2
 11924  13BE  2BC4               	goto	l4625
 11925  13BF  09F3               	comf	___awmod@dividend,f
 11926  13C0  09F4               	comf	___awmod@dividend+1,f
 11927  13C1  0AF3               	incf	___awmod@dividend,f
 11928  13C2  1903               	skipnz
 11929  13C3  0AF4               	incf	___awmod@dividend+1,f
 11930  13C4                     l4625:	
 11931  13C4  0874               	movf	___awmod@dividend+1,w
 11932  13C5  00F2               	movwf	?___awmod+1
 11933  13C6  0873               	movf	___awmod@dividend,w
 11934  13C7  00F1               	movwf	?___awmod
 11935  13C8  0008               	return
 11936  13C9                     __end_of___awmod:	
 11937                           
 11938                           	psect	text29
 11939  14AE                     __ptext29:	
 11940 ;; *************** function ___awdiv *****************
 11941 ;; Defined at:
 11942 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 11943 ;; Parameters:    Size  Location     Type
 11944 ;;  divisor         2    1[COMMON] int 
 11945 ;;  dividend        2    3[COMMON] int 
 11946 ;; Auto vars:     Size  Location     Type
 11947 ;;  quotient        2    8[COMMON] int 
 11948 ;;  sign            1    7[COMMON] unsigned char 
 11949 ;;  counter         1    6[COMMON] unsigned char 
 11950 ;; Return value:  Size  Location     Type
 11951 ;;                  2    1[COMMON] int 
 11952 ;; Registers used:
 11953 ;;		wreg, status,2, status,0
 11954 ;; Tracked objects:
 11955 ;;		On entry : 0/0
 11956 ;;		On exit  : 0/0
 11957 ;;		Unchanged: 0/0
 11958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11959 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11960 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11961 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11962 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11963 ;;Total ram usage:        9 bytes
 11964 ;; Hardware stack levels used:    1
 11965 ;; Hardware stack levels required when called:    4
 11966 ;; This function calls:
 11967 ;;		Nothing
 11968 ;; This function is called by:
 11969 ;;		_efgtoa
 11970 ;; This function uses a non-reentrant model
 11971 ;;
 11972                           
 11973                           
 11974                           ;psect for function ___awdiv
 11975  14AE                     ___awdiv:	
 11976                           
 11977                           ;incstack = 0
 11978                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11979  14AE  01F7               	clrf	___awdiv@sign
 11980  14AF  1FF2               	btfss	___awdiv@divisor+1,7
 11981  14B0  2CB8               	goto	l4555
 11982  14B1  09F1               	comf	___awdiv@divisor,f
 11983  14B2  09F2               	comf	___awdiv@divisor+1,f
 11984  14B3  0AF1               	incf	___awdiv@divisor,f
 11985  14B4  1903               	skipnz
 11986  14B5  0AF2               	incf	___awdiv@divisor+1,f
 11987  14B6  01F7               	clrf	___awdiv@sign
 11988  14B7  0AF7               	incf	___awdiv@sign,f
 11989  14B8                     l4555:	
 11990  14B8  1FF4               	btfss	___awdiv@dividend+1,7
 11991  14B9  2CC3               	goto	l4561
 11992  14BA  09F3               	comf	___awdiv@dividend,f
 11993  14BB  09F4               	comf	___awdiv@dividend+1,f
 11994  14BC  0AF3               	incf	___awdiv@dividend,f
 11995  14BD  1903               	skipnz
 11996  14BE  0AF4               	incf	___awdiv@dividend+1,f
 11997  14BF  3001               	movlw	1
 11998  14C0  00F5               	movwf	??___awdiv
 11999  14C1  0875               	movf	??___awdiv,w
 12000  14C2  06F7               	xorwf	___awdiv@sign,f
 12001  14C3                     l4561:	
 12002  14C3  01F8               	clrf	___awdiv@quotient
 12003  14C4  01F9               	clrf	___awdiv@quotient+1
 12004  14C5  0871               	movf	___awdiv@divisor,w
 12005  14C6  0472               	iorwf	___awdiv@divisor+1,w
 12006  14C7  1903               	btfsc	3,2
 12007  14C8  2CF2               	goto	l4583
 12008  14C9  01F6               	clrf	___awdiv@counter
 12009  14CA  0AF6               	incf	___awdiv@counter,f
 12010  14CB                     l4571:	
 12011  14CB  1BF2               	btfsc	___awdiv@divisor+1,7
 12012  14CC  2CD7               	goto	l4573
 12013  14CD  3001               	movlw	1
 12014  14CE                     u4055:	
 12015  14CE  35F1               	lslf	___awdiv@divisor,f
 12016  14CF  0DF2               	rlf	___awdiv@divisor+1,f
 12017  14D0  0B89               	decfsz	9,f
 12018  14D1  2CCE               	goto	u4055
 12019  14D2  3001               	movlw	1
 12020  14D3  00F5               	movwf	??___awdiv
 12021  14D4  0875               	movf	??___awdiv,w
 12022  14D5  07F6               	addwf	___awdiv@counter,f
 12023  14D6  2CCB               	goto	l4571
 12024  14D7                     l4573:	
 12025  14D7  3001               	movlw	1
 12026  14D8                     u4075:	
 12027  14D8  35F8               	lslf	___awdiv@quotient,f
 12028  14D9  0DF9               	rlf	___awdiv@quotient+1,f
 12029  14DA  0B89               	decfsz	9,f
 12030  14DB  2CD8               	goto	u4075
 12031  14DC  0872               	movf	___awdiv@divisor+1,w
 12032  14DD  0274               	subwf	___awdiv@dividend+1,w
 12033  14DE  1D03               	skipz
 12034  14DF  2CE2               	goto	u4085
 12035  14E0  0871               	movf	___awdiv@divisor,w
 12036  14E1  0273               	subwf	___awdiv@dividend,w
 12037  14E2                     u4085:	
 12038  14E2  1C03               	skipc
 12039  14E3  2CE9               	goto	l4579
 12040  14E4  0871               	movf	___awdiv@divisor,w
 12041  14E5  02F3               	subwf	___awdiv@dividend,f
 12042  14E6  0872               	movf	___awdiv@divisor+1,w
 12043  14E7  3BF4               	subwfb	___awdiv@dividend+1,f
 12044  14E8  1478               	bsf	___awdiv@quotient,0
 12045  14E9                     l4579:	
 12046  14E9  3001               	movlw	1
 12047  14EA                     u4095:	
 12048  14EA  36F2               	lsrf	___awdiv@divisor+1,f
 12049  14EB  0CF1               	rrf	___awdiv@divisor,f
 12050  14EC  0B89               	decfsz	9,f
 12051  14ED  2CEA               	goto	u4095
 12052  14EE  3001               	movlw	1
 12053  14EF  02F6               	subwf	___awdiv@counter,f
 12054  14F0  1D03               	btfss	3,2
 12055  14F1  2CD7               	goto	l4573
 12056  14F2                     l4583:	
 12057  14F2  0877               	movf	___awdiv@sign,w
 12058  14F3  1903               	btfsc	3,2
 12059  14F4  2CFA               	goto	l4587
 12060  14F5  09F8               	comf	___awdiv@quotient,f
 12061  14F6  09F9               	comf	___awdiv@quotient+1,f
 12062  14F7  0AF8               	incf	___awdiv@quotient,f
 12063  14F8  1903               	skipnz
 12064  14F9  0AF9               	incf	___awdiv@quotient+1,f
 12065  14FA                     l4587:	
 12066  14FA  0879               	movf	___awdiv@quotient+1,w
 12067  14FB  00F2               	movwf	?___awdiv+1
 12068  14FC  0878               	movf	___awdiv@quotient,w
 12069  14FD  00F1               	movwf	?___awdiv
 12070  14FE  0008               	return
 12071  14FF                     __end_of___awdiv:	
 12072                           
 12073                           	psect	text30
 12074  0849                     __ptext30:	
 12075 ;; *************** function ___xxtofl *****************
 12076 ;; Defined at:
 12077 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 12078 ;; Parameters:    Size  Location     Type
 12079 ;;  sign            1    wreg     unsigned char 
 12080 ;;  val             4    1[COMMON] long 
 12081 ;; Auto vars:     Size  Location     Type
 12082 ;;  sign            1    0[BANK0 ] unsigned char 
 12083 ;;  arg             4    2[BANK0 ] unsigned long 
 12084 ;;  exp             1    1[BANK0 ] unsigned char 
 12085 ;; Return value:  Size  Location     Type
 12086 ;;                  4    1[COMMON] unsigned char 
 12087 ;; Registers used:
 12088 ;;		wreg, status,2, status,0
 12089 ;; Tracked objects:
 12090 ;;		On entry : 0/0
 12091 ;;		On exit  : 0/0
 12092 ;;		Unchanged: 0/0
 12093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12094 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12095 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12096 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12097 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12098 ;;Total ram usage:       14 bytes
 12099 ;; Hardware stack levels used:    1
 12100 ;; Hardware stack levels required when called:    4
 12101 ;; This function calls:
 12102 ;;		Nothing
 12103 ;; This function is called by:
 12104 ;;		_readPressureSensor
 12105 ;; This function uses a non-reentrant model
 12106 ;;
 12107                           
 12108                           
 12109                           ;psect for function ___xxtofl
 12110  0849                     ___xxtofl:	
 12111                           
 12112                           ;incstack = 0
 12113                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 12114                           ;___xxtofl@sign stored from wreg
 12115  0849  0020               	movlb	0	; select bank0
 12116  084A  00A0               	movwf	___xxtofl@sign
 12117  084B  0820               	movf	___xxtofl@sign,w
 12118  084C  1D03               	btfss	3,2
 12119  084D  1FF4               	btfss	___xxtofl@val+3,7
 12120  084E  285F               	goto	l5653
 12121  084F  0971               	comf	___xxtofl@val,w
 12122  0850  00A2               	movwf	___xxtofl@arg
 12123  0851  0972               	comf	___xxtofl@val+1,w
 12124  0852  00A3               	movwf	___xxtofl@arg+1
 12125  0853  0973               	comf	___xxtofl@val+2,w
 12126  0854  00A4               	movwf	___xxtofl@arg+2
 12127  0855  0974               	comf	___xxtofl@val+3,w
 12128  0856  00A5               	movwf	___xxtofl@arg+3
 12129  0857  0AA2               	incf	___xxtofl@arg,f
 12130  0858  1903               	skipnz
 12131  0859  0AA3               	incf	___xxtofl@arg+1,f
 12132  085A  1903               	skipnz
 12133  085B  0AA4               	incf	___xxtofl@arg+2,f
 12134  085C  1903               	skipnz
 12135  085D  0AA5               	incf	___xxtofl@arg+3,f
 12136  085E  2867               	goto	l1573
 12137  085F                     l5653:	
 12138  085F  0874               	movf	___xxtofl@val+3,w
 12139  0860  00A5               	movwf	___xxtofl@arg+3
 12140  0861  0873               	movf	___xxtofl@val+2,w
 12141  0862  00A4               	movwf	___xxtofl@arg+2
 12142  0863  0872               	movf	___xxtofl@val+1,w
 12143  0864  00A3               	movwf	___xxtofl@arg+1
 12144  0865  0871               	movf	___xxtofl@val,w
 12145  0866  00A2               	movwf	___xxtofl@arg
 12146  0867                     l1573:	
 12147  0867  0874               	movf	___xxtofl@val+3,w
 12148  0868  0473               	iorwf	___xxtofl@val+2,w
 12149  0869  0472               	iorwf	___xxtofl@val+1,w
 12150  086A  0471               	iorwf	___xxtofl@val,w
 12151  086B  1D03               	skipz
 12152  086C  2876               	goto	l5659
 12153  086D  3000               	movlw	0
 12154  086E  00F4               	movwf	?___xxtofl+3
 12155  086F  3000               	movlw	0
 12156  0870  00F3               	movwf	?___xxtofl+2
 12157  0871  3000               	movlw	0
 12158  0872  00F2               	movwf	?___xxtofl+1
 12159  0873  3000               	movlw	0
 12160  0874  00F1               	movwf	?___xxtofl
 12161  0875  0008               	return
 12162  0876                     l5659:	
 12163  0876  3096               	movlw	150
 12164  0877  00F5               	movwf	??___xxtofl
 12165  0878  0875               	movf	??___xxtofl,w
 12166  0879  00A1               	movwf	___xxtofl@exp
 12167  087A                     l5663:	
 12168  087A  30FE               	movlw	254
 12169  087B  0525               	andwf	___xxtofl@arg+3,w
 12170  087C  1903               	btfsc	3,2
 12171  087D  289D               	goto	l1579
 12172  087E  3001               	movlw	1
 12173  087F  00F5               	movwf	??___xxtofl
 12174  0880  0875               	movf	??___xxtofl,w
 12175  0881  07A1               	addwf	___xxtofl@exp,f
 12176  0882  3001               	movlw	1
 12177  0883                     u5745:	
 12178  0883  36A5               	lsrf	___xxtofl@arg+3,f
 12179  0884  0CA4               	rrf	___xxtofl@arg+2,f
 12180  0885  0CA3               	rrf	___xxtofl@arg+1,f
 12181  0886  0CA2               	rrf	___xxtofl@arg,f
 12182  0887  0B89               	decfsz	9,f
 12183  0888  2883               	goto	u5745
 12184  0889  287A               	goto	l5663
 12185  088A                     l5665:	
 12186  088A  3001               	movlw	1
 12187  088B  00F5               	movwf	??___xxtofl
 12188  088C  0875               	movf	??___xxtofl,w
 12189  088D  07A1               	addwf	___xxtofl@exp,f
 12190  088E  3001               	movlw	1
 12191  088F  07A2               	addwf	___xxtofl@arg,f
 12192  0890  3000               	movlw	0
 12193  0891  3DA3               	addwfc	___xxtofl@arg+1,f
 12194  0892  3000               	movlw	0
 12195  0893  3DA4               	addwfc	___xxtofl@arg+2,f
 12196  0894  3000               	movlw	0
 12197  0895  3DA5               	addwfc	___xxtofl@arg+3,f
 12198  0896  3001               	movlw	1
 12199  0897                     u5765:	
 12200  0897  36A5               	lsrf	___xxtofl@arg+3,f
 12201  0898  0CA4               	rrf	___xxtofl@arg+2,f
 12202  0899  0CA3               	rrf	___xxtofl@arg+1,f
 12203  089A  0CA2               	rrf	___xxtofl@arg,f
 12204  089B  0B89               	decfsz	9,f
 12205  089C  2897               	goto	u5765
 12206  089D                     l1579:	
 12207  089D  30FF               	movlw	255
 12208  089E  0525               	andwf	___xxtofl@arg+3,w
 12209  089F  1903               	btfsc	3,2
 12210  08A0  28AF               	goto	l5673
 12211  08A1  288A               	goto	l5665
 12212  08A2                     l5675:	
 12213  08A2  3002               	movlw	2
 12214  08A3  0221               	subwf	___xxtofl@exp,w
 12215  08A4  1C03               	btfss	3,0
 12216  08A5  28B1               	goto	l1586
 12217  08A6  3001               	movlw	1
 12218  08A7  02A1               	subwf	___xxtofl@exp,f
 12219  08A8  3001               	movlw	1
 12220  08A9                     u5785:	
 12221  08A9  35A2               	lslf	___xxtofl@arg,f
 12222  08AA  0DA3               	rlf	___xxtofl@arg+1,f
 12223  08AB  0DA4               	rlf	___xxtofl@arg+2,f
 12224  08AC  0DA5               	rlf	___xxtofl@arg+3,f
 12225  08AD  0B89               	decfsz	9,f
 12226  08AE  28A9               	goto	u5785
 12227  08AF                     l5673:	
 12228  08AF  1FA4               	btfss	___xxtofl@arg+2,7
 12229  08B0  28A2               	goto	l5675
 12230  08B1                     l1586:	
 12231  08B1  1821               	btfsc	___xxtofl@exp,0
 12232  08B2  28BB               	goto	l1587
 12233  08B3  30FF               	movlw	255
 12234  08B4  05A2               	andwf	___xxtofl@arg,f
 12235  08B5  30FF               	movlw	255
 12236  08B6  05A3               	andwf	___xxtofl@arg+1,f
 12237  08B7  307F               	movlw	127
 12238  08B8  05A4               	andwf	___xxtofl@arg+2,f
 12239  08B9  30FF               	movlw	255
 12240  08BA  05A5               	andwf	___xxtofl@arg+3,f
 12241  08BB                     l1587:	
 12242  08BB  1003               	clrc
 12243  08BC  0CA1               	rrf	___xxtofl@exp,f
 12244  08BD  0821               	movf	___xxtofl@exp,w
 12245  08BE  00F5               	movwf	??___xxtofl
 12246  08BF  01F6               	clrf	??___xxtofl+1
 12247  08C0  01F7               	clrf	??___xxtofl+2
 12248  08C1  01F8               	clrf	??___xxtofl+3
 12249  08C2  3018               	movlw	24
 12250  08C3                     u5825:	
 12251  08C3  35F5               	lslf	??___xxtofl,f
 12252  08C4  0DF6               	rlf	??___xxtofl+1,f
 12253  08C5  0DF7               	rlf	??___xxtofl+2,f
 12254  08C6  0DF8               	rlf	??___xxtofl+3,f
 12255  08C7  0B89               	decfsz	9,f
 12256  08C8  28C3               	goto	u5825
 12257  08C9  0875               	movf	??___xxtofl,w
 12258  08CA  04A2               	iorwf	___xxtofl@arg,f
 12259  08CB  0876               	movf	??___xxtofl+1,w
 12260  08CC  04A3               	iorwf	___xxtofl@arg+1,f
 12261  08CD  0877               	movf	??___xxtofl+2,w
 12262  08CE  04A4               	iorwf	___xxtofl@arg+2,f
 12263  08CF  0878               	movf	??___xxtofl+3,w
 12264  08D0  04A5               	iorwf	___xxtofl@arg+3,f
 12265  08D1  0820               	movf	___xxtofl@sign,w
 12266  08D2  1D03               	btfss	3,2
 12267  08D3  1FF4               	btfss	___xxtofl@val+3,7
 12268  08D4  28D6               	goto	l5687
 12269  08D5  17A5               	bsf	___xxtofl@arg+3,7
 12270  08D6                     l5687:	
 12271  08D6  0825               	movf	___xxtofl@arg+3,w
 12272  08D7  00F4               	movwf	?___xxtofl+3
 12273  08D8  0824               	movf	___xxtofl@arg+2,w
 12274  08D9  00F3               	movwf	?___xxtofl+2
 12275  08DA  0823               	movf	___xxtofl@arg+1,w
 12276  08DB  00F2               	movwf	?___xxtofl+1
 12277  08DC  0822               	movf	___xxtofl@arg,w
 12278  08DD  00F1               	movwf	?___xxtofl
 12279  08DE  0008               	return
 12280  08DF                     __end_of___xxtofl:	
 12281                           
 12282                           	psect	text31
 12283  11F8                     __ptext31:	
 12284 ;; *************** function _I2C1_Read1ByteRegister *****************
 12285 ;; Defined at:
 12286 ;;		line 63 in file "mcc_generated_files/examples/i2c1_master_example.c"
 12287 ;; Parameters:    Size  Location     Type
 12288 ;;  address         1    wreg     unsigned char 
 12289 ;;  reg             1    8[BANK0 ] unsigned char 
 12290 ;; Auto vars:     Size  Location     Type
 12291 ;;  address         1   10[BANK0 ] unsigned char 
 12292 ;;  returnValue     1   11[BANK0 ] unsigned char 
 12293 ;; Return value:  Size  Location     Type
 12294 ;;                  1    wreg      unsigned char 
 12295 ;; Registers used:
 12296 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12297 ;; Tracked objects:
 12298 ;;		On entry : 0/0
 12299 ;;		On exit  : 0/0
 12300 ;;		Unchanged: 0/0
 12301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12302 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12303 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12304 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12305 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12306 ;;Total ram usage:        4 bytes
 12307 ;; Hardware stack levels used:    1
 12308 ;; Hardware stack levels required when called:   12
 12309 ;; This function calls:
 12310 ;;		_I2C1_Close
 12311 ;;		_I2C1_MasterWrite
 12312 ;;		_I2C1_Open
 12313 ;;		_I2C1_SetAddressNackCallback
 12314 ;;		_I2C1_SetBuffer
 12315 ;;		_I2C1_SetDataCompleteCallback
 12316 ;; This function is called by:
 12317 ;;		_readPressureSensor
 12318 ;; This function uses a non-reentrant model
 12319 ;;
 12320                           
 12321                           
 12322                           ;psect for function _I2C1_Read1ByteRegister
 12323  11F8                     _I2C1_Read1ByteRegister:	
 12324                           
 12325                           ;incstack = 0
 12326                           ; Regs used in _I2C1_Read1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12327                           ;I2C1_Read1ByteRegister@address stored from wreg
 12328  11F8  0020               	movlb	0	; select bank0
 12329  11F9  00AA               	movwf	I2C1_Read1ByteRegister@address
 12330                           
 12331                           ;mcc_generated_files/examples/i2c1_master_example.c: 63: uint8_t I2C1_Read1ByteRegister(
      +                          i2c1_address_t address, uint8_t reg);mcc_generated_files/examples/i2c1_master_example.c:
      +                           64: {;mcc_generated_files/examples/i2c1_master_example.c: 65:     uint8_t returnValue =
      +                           0x00;
 12332  11FA  01AB               	clrf	I2C1_Read1ByteRegister@returnValue
 12333  11FB                     l6671:	
 12334                           ;mcc_generated_files/examples/i2c1_master_example.c: 67:     while(!I2C1_Open(address));
 12335                           
 12336  11FB  0020               	movlb	0	; select bank0
 12337  11FC  082A               	movf	I2C1_Read1ByteRegister@address,w
 12338  11FD  3187  27C9  3191   	fcall	_I2C1_Open
 12339  1200  3A00               	xorlw	0
 12340  1201  1903               	skipnz
 12341  1202  29FB               	goto	l6671
 12342                           
 12343                           ;mcc_generated_files/examples/i2c1_master_example.c: 68:     I2C1_SetDataCompleteCallbac
      +                          k(rd1RegCompleteHandler,&returnValue);
 12344  1203  305A               	movlw	low _rd1RegCompleteHandler
 12345  1204  00F6               	movwf	I2C1_SetDataCompleteCallback@cb
 12346  1205  301F               	movlw	high _rd1RegCompleteHandler
 12347  1206  00F7               	movwf	I2C1_SetDataCompleteCallback@cb+1
 12348  1207  302B               	movlw	(low (I2C1_Read1ByteRegister@returnValue| 0))& (0+255)
 12349  1208  0020               	movlb	0	; select bank0
 12350  1209  00A9               	movwf	??_I2C1_Read1ByteRegister
 12351  120A  0829               	movf	??_I2C1_Read1ByteRegister,w
 12352  120B  00F8               	movwf	I2C1_SetDataCompleteCallback@ptr
 12353  120C  319F  2724  3191   	fcall	_I2C1_SetDataCompleteCallback
 12354                           
 12355                           ;mcc_generated_files/examples/i2c1_master_example.c: 69:     I2C1_SetBuffer(&reg,1);
 12356  120F  3001               	movlw	1
 12357  1210  00F1               	movwf	I2C1_SetBuffer@bufferSize
 12358  1211  3000               	movlw	0
 12359  1212  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 12360  1213  3028               	movlw	(low (I2C1_Read1ByteRegister@reg| 0))& (0+255)
 12361  1214  319F  273C  3191   	fcall	_I2C1_SetBuffer
 12362                           
 12363                           ;mcc_generated_files/examples/i2c1_master_example.c: 70:     I2C1_SetAddressNackCallback
      +                          (((void*)0),((void*)0));
 12364  1217  3000               	movlw	0
 12365  1218  00F6               	movwf	I2C1_SetAddressNackCallback@cb
 12366  1219  00F7               	movwf	I2C1_SetAddressNackCallback@cb+1
 12367  121A  01F8               	clrf	I2C1_SetAddressNackCallback@ptr
 12368  121B  319F  2730  3191   	fcall	_I2C1_SetAddressNackCallback
 12369                           
 12370                           ;mcc_generated_files/examples/i2c1_master_example.c: 71:     I2C1_MasterWrite();
 12371  121E  319E  2677  3191   	fcall	_I2C1_MasterWrite
 12372  1221                     l6681:	
 12373                           ;mcc_generated_files/examples/i2c1_master_example.c: 72:     while(I2C1_BUSY == I2C1_Clo
      +                          se());
 12374                           
 12375  1221  3190  2028  3191   	fcall	_I2C1_Close
 12376  1224  3A01               	xorlw	1
 12377  1225  1903               	skipnz
 12378  1226  2A21               	goto	l6681
 12379                           
 12380                           ;mcc_generated_files/examples/i2c1_master_example.c: 74:     return returnValue;
 12381  1227  0020               	movlb	0	; select bank0
 12382  1228  082B               	movf	I2C1_Read1ByteRegister@returnValue,w
 12383  1229  0008               	return
 12384  122A                     __end_of_I2C1_Read1ByteRegister:	
 12385                           
 12386                           	psect	text32
 12387  1F30                     __ptext32:	
 12388 ;; *************** function _I2C1_SetAddressNackCallback *****************
 12389 ;; Defined at:
 12390 ;;		line 283 in file "mcc_generated_files/i2c1_master.c"
 12391 ;; Parameters:    Size  Location     Type
 12392 ;;  cb              2    6[COMMON] PTR FTN(PTR void ,)enum 
 12393 ;;		 -> Absolute function(1), 
 12394 ;;  ptr             1    8[COMMON] PTR void 
 12395 ;;		 -> NULL(0), 
 12396 ;; Auto vars:     Size  Location     Type
 12397 ;;		None
 12398 ;; Return value:  Size  Location     Type
 12399 ;;                  1    wreg      void 
 12400 ;; Registers used:
 12401 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12402 ;; Tracked objects:
 12403 ;;		On entry : 0/0
 12404 ;;		On exit  : 0/0
 12405 ;;		Unchanged: 0/0
 12406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12407 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12409 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12410 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12411 ;;Total ram usage:        4 bytes
 12412 ;; Hardware stack levels used:    1
 12413 ;; Hardware stack levels required when called:    5
 12414 ;; This function calls:
 12415 ;;		_I2C1_SetCallback
 12416 ;; This function is called by:
 12417 ;;		_I2C1_Read1ByteRegister
 12418 ;;		_I2C1_Read2ByteRegister
 12419 ;;		_I2C1_Write1ByteRegister
 12420 ;;		_I2C1_Write2ByteRegister
 12421 ;;		_I2C1_WriteNBytes
 12422 ;;		_I2C1_ReadDataBlock
 12423 ;; This function uses a non-reentrant model
 12424 ;;
 12425                           
 12426                           
 12427                           ;psect for function _I2C1_SetAddressNackCallback
 12428  1F30                     _I2C1_SetAddressNackCallback:	
 12429                           
 12430                           ;mcc_generated_files/i2c1_master.c: 283: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 284: {;mcc_generated_files/i2c1_mast
      +                          er.c: 285:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 12431                           
 12432                           ;incstack = 0
 12433                           ; Regs used in _I2C1_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 12434  1F30  0877               	movf	I2C1_SetAddressNackCallback@cb+1,w
 12435  1F31  00F2               	movwf	I2C1_SetCallback@cb+1
 12436  1F32  0876               	movf	I2C1_SetAddressNackCallback@cb,w
 12437  1F33  00F1               	movwf	I2C1_SetCallback@cb
 12438  1F34  0878               	movf	I2C1_SetAddressNackCallback@ptr,w
 12439  1F35  00F9               	movwf	??_I2C1_SetAddressNackCallback
 12440  1F36  0879               	movf	??_I2C1_SetAddressNackCallback,w
 12441  1F37  00F3               	movwf	I2C1_SetCallback@ptr
 12442  1F38  3002               	movlw	2
 12443  1F39  3191  2148         	fcall	_I2C1_SetCallback
 12444  1F3B  0008               	return
 12445  1F3C                     __end_of_I2C1_SetAddressNackCallback:	
 12446                           
 12447                           	psect	text33
 12448  07C9                     __ptext33:	
 12449 ;; *************** function _I2C1_Open *****************
 12450 ;; Defined at:
 12451 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 12452 ;; Parameters:    Size  Location     Type
 12453 ;;  address         1    wreg     unsigned char 
 12454 ;; Auto vars:     Size  Location     Type
 12455 ;;  address         1    2[COMMON] unsigned char 
 12456 ;;  returnValue     1    3[COMMON] enum E353
 12457 ;; Return value:  Size  Location     Type
 12458 ;;                  1    wreg      enum E353
 12459 ;; Registers used:
 12460 ;;		wreg, status,2, status,0, pclath, cstack
 12461 ;; Tracked objects:
 12462 ;;		On entry : 0/0
 12463 ;;		On exit  : 0/0
 12464 ;;		Unchanged: 0/0
 12465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12467 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12468 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12469 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12470 ;;Total ram usage:        3 bytes
 12471 ;; Hardware stack levels used:    1
 12472 ;; Hardware stack levels required when called:    5
 12473 ;; This function calls:
 12474 ;;		_I2C1_MasterClearIrq
 12475 ;;		_I2C1_MasterOpen
 12476 ;; This function is called by:
 12477 ;;		_I2C1_Read1ByteRegister
 12478 ;;		_I2C1_Read2ByteRegister
 12479 ;;		_I2C1_Write1ByteRegister
 12480 ;;		_I2C1_Write2ByteRegister
 12481 ;;		_I2C1_WriteNBytes
 12482 ;;		_I2C1_ReadNBytes
 12483 ;;		_I2C1_ReadDataBlock
 12484 ;; This function uses a non-reentrant model
 12485 ;;
 12486                           
 12487                           
 12488                           ;psect for function _I2C1_Open
 12489  07C9                     _I2C1_Open:	
 12490                           
 12491                           ;incstack = 0
 12492                           ; Regs used in _I2C1_Open: [wreg+status,2+status,0+pclath+cstack]
 12493                           ;I2C1_Open@address stored from wreg
 12494  07C9  00F2               	movwf	I2C1_Open@address
 12495                           
 12496                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 12497  07CA  01F3               	clrf	I2C1_Open@returnValue
 12498  07CB  0AF3               	incf	I2C1_Open@returnValue,f
 12499                           
 12500                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 12501  07CC  0023               	movlb	3	; select bank3
 12502  07CD  193C               	btfsc	(_I2C1_Status^(0+384)+28),2
 12503  07CE  2FFE               	goto	l541
 12504                           
 12505                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 12506  07CF  0872               	movf	I2C1_Open@address,w
 12507  07D0  00F1               	movwf	??_I2C1_Open
 12508  07D1  0871               	movf	??_I2C1_Open,w
 12509  07D2  00B6               	movwf	(_I2C1_Status^(0+384)+22)
 12510                           
 12511                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 12512  07D3  10BC               	bcf	(_I2C1_Status^(0+384)+28),1
 12513                           
 12514                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 12515  07D4  153C               	bsf	(_I2C1_Status^(0+384)+28),2
 12516                           
 12517                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 12518  07D5  103C               	bcf	(_I2C1_Status^(0+384)+28),0
 12519                           
 12520                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 12521  07D6  300E               	movlw	14
 12522  07D7  00F1               	movwf	??_I2C1_Open
 12523  07D8  0871               	movf	??_I2C1_Open,w
 12524  07D9  00BA               	movwf	(_I2C1_Status^(0+384)+26)
 12525                           
 12526                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 12527  07DA  30F4               	movlw	244
 12528  07DB  00B4               	movwf	(_I2C1_Status^(0+384)+20)
 12529  07DC  3001               	movlw	1
 12530  07DD  00B5               	movwf	(_I2C1_Status^(0+384)+21)
 12531                           
 12532                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 12533  07DE  15BC               	bsf	(_I2C1_Status^(0+384)+28),3
 12534                           
 12535                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 12536  07DF  3024               	movlw	low _I2C1_CallbackReturnStop
 12537  07E0  00A0               	movwf	_I2C1_Status^(0+384)
 12538  07E1  301E               	movlw	high _I2C1_CallbackReturnStop
 12539  07E2  00A1               	movwf	(_I2C1_Status^(0+384)+1)
 12540                           
 12541                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 12542  07E3  01AC               	clrf	(low ((_I2C1_Status| (0+256)+12)))^(0+128)
 12543                           
 12544                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 12545  07E4  3024               	movlw	low _I2C1_CallbackReturnStop
 12546  07E5  00A2               	movwf	(low ((_I2C1_Status| (0+256)+2)))^(0+128)
 12547  07E6  301E               	movlw	high _I2C1_CallbackReturnStop
 12548  07E7  00A3               	movwf	((low ((_I2C1_Status| (0+256)+2)))^(0+128)+1)
 12549                           
 12550                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 12551  07E8  01AD               	clrf	(low ((_I2C1_Status| (0+256)+13)))^(0+128)
 12552                           
 12553                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 12554  07E9  3024               	movlw	low _I2C1_CallbackReturnStop
 12555  07EA  00A4               	movwf	(low ((_I2C1_Status| (0+256)+4)))^(0+128)
 12556  07EB  301E               	movlw	high _I2C1_CallbackReturnStop
 12557  07EC  00A5               	movwf	((low ((_I2C1_Status| (0+256)+4)))^(0+128)+1)
 12558                           
 12559                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 12560  07ED  01AE               	clrf	(low ((_I2C1_Status| (0+256)+14)))^(0+128)
 12561                           
 12562                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 12563  07EE  3024               	movlw	low _I2C1_CallbackReturnStop
 12564  07EF  00A6               	movwf	(low ((_I2C1_Status| (0+256)+6)))^(0+128)
 12565  07F0  301E               	movlw	high _I2C1_CallbackReturnStop
 12566  07F1  00A7               	movwf	((low ((_I2C1_Status| (0+256)+6)))^(0+128)+1)
 12567                           
 12568                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 12569  07F2  01AF               	clrf	(low ((_I2C1_Status| (0+256)+15)))^(0+128)
 12570                           
 12571                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 12572  07F3  3002               	movlw	low _I2C1_CallbackReturnReset
 12573  07F4  00A8               	movwf	(low ((_I2C1_Status| (0+256)+8)))^(0+128)
 12574  07F5  3000               	movlw	high _I2C1_CallbackReturnReset
 12575  07F6  00A9               	movwf	((low ((_I2C1_Status| (0+256)+8)))^(0+128)+1)
 12576                           
 12577                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 12578  07F7  01B0               	clrf	(low ((_I2C1_Status| (0+256)+16)))^(0+128)
 12579                           
 12580                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_MasterClearIrq();
 12581  07F8  319E  2629  3187   	fcall	_I2C1_MasterClearIrq
 12582                           
 12583                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterOpen();
 12584  07FB  319F  270D         	fcall	_I2C1_MasterOpen
 12585                           
 12586                           ;mcc_generated_files/i2c1_master.c: 204:         returnValue = I2C1_NOERR;
 12587  07FD  01F3               	clrf	I2C1_Open@returnValue
 12588  07FE                     l541:	
 12589                           ;mcc_generated_files/i2c1_master.c: 205:     }
 12590                           
 12591                           
 12592                           ;mcc_generated_files/i2c1_master.c: 206:     return returnValue;
 12593  07FE  0873               	movf	I2C1_Open@returnValue,w
 12594  07FF  0008               	return
 12595  0800                     __end_of_I2C1_Open:	
 12596                           
 12597                           	psect	text34
 12598  1F0D                     __ptext34:	
 12599 ;; *************** function _I2C1_MasterOpen *****************
 12600 ;; Defined at:
 12601 ;;		line 543 in file "mcc_generated_files/i2c1_master.c"
 12602 ;; Parameters:    Size  Location     Type
 12603 ;;		None
 12604 ;; Auto vars:     Size  Location     Type
 12605 ;;		None
 12606 ;; Return value:  Size  Location     Type
 12607 ;;                  1    wreg      _Bool 
 12608 ;; Registers used:
 12609 ;;		wreg, status,2
 12610 ;; Tracked objects:
 12611 ;;		On entry : 0/0
 12612 ;;		On exit  : 0/0
 12613 ;;		Unchanged: 0/0
 12614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12619 ;;Total ram usage:        0 bytes
 12620 ;; Hardware stack levels used:    1
 12621 ;; Hardware stack levels required when called:    4
 12622 ;; This function calls:
 12623 ;;		Nothing
 12624 ;; This function is called by:
 12625 ;;		_I2C1_Open
 12626 ;; This function uses a non-reentrant model
 12627 ;;
 12628                           
 12629                           
 12630                           ;psect for function _I2C1_MasterOpen
 12631  1F0D                     _I2C1_MasterOpen:	
 12632                           
 12633                           ;mcc_generated_files/i2c1_master.c: 545:     if(!SSP1CON1bits.SSPEN)
 12634                           
 12635                           ;incstack = 0
 12636                           ; Regs used in _I2C1_MasterOpen: [wreg+status,2]
 12637  1F0D  0024               	movlb	4	; select bank4
 12638  1F0E  1A95               	btfsc	21,5	;volatile
 12639  1F0F  0008               	return
 12640                           
 12641                           ;mcc_generated_files/i2c1_master.c: 546:     {;mcc_generated_files/i2c1_master.c: 547:  
      +                                 SSP1STAT = 0x00;
 12642  1F10  0194               	clrf	20	;volatile
 12643                           
 12644                           ;mcc_generated_files/i2c1_master.c: 548:         SSP1CON1 = 0x08;
 12645  1F11  3008               	movlw	8
 12646  1F12  0095               	movwf	21	;volatile
 12647                           
 12648                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON2 = 0x00;
 12649  1F13  0196               	clrf	22	;volatile
 12650                           
 12651                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1ADD = 0x4F;
 12652  1F14  304F               	movlw	79
 12653  1F15  0092               	movwf	18	;volatile
 12654                           
 12655                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON1bits.SSPEN = 1;
 12656  1F16  1695               	bsf	21,5	;volatile
 12657  1F17  0008               	return
 12658  1F18                     __end_of_I2C1_MasterOpen:	
 12659                           
 12660                           	psect	text35
 12661  1E77                     __ptext35:	
 12662 ;; *************** function _I2C1_MasterWrite *****************
 12663 ;; Defined at:
 12664 ;;		line 251 in file "mcc_generated_files/i2c1_master.c"
 12665 ;; Parameters:    Size  Location     Type
 12666 ;;		None
 12667 ;; Auto vars:     Size  Location     Type
 12668 ;;		None
 12669 ;; Return value:  Size  Location     Type
 12670 ;;                  1    wreg      enum E353
 12671 ;; Registers used:
 12672 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12673 ;; Tracked objects:
 12674 ;;		On entry : 0/0
 12675 ;;		On exit  : 0/0
 12676 ;;		Unchanged: 0/0
 12677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12682 ;;Total ram usage:        0 bytes
 12683 ;; Hardware stack levels used:    1
 12684 ;; Hardware stack levels required when called:   11
 12685 ;; This function calls:
 12686 ;;		_I2C1_MasterOperation
 12687 ;; This function is called by:
 12688 ;;		_I2C1_Read1ByteRegister
 12689 ;;		_I2C1_Read2ByteRegister
 12690 ;;		_I2C1_Write1ByteRegister
 12691 ;;		_I2C1_Write2ByteRegister
 12692 ;;		_I2C1_WriteNBytes
 12693 ;;		_I2C1_ReadDataBlock
 12694 ;; This function uses a non-reentrant model
 12695 ;;
 12696                           
 12697                           
 12698                           ;psect for function _I2C1_MasterWrite
 12699  1E77                     _I2C1_MasterWrite:	
 12700                           
 12701                           ;mcc_generated_files/i2c1_master.c: 253:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 12702                           
 12703                           ;incstack = 0
 12704                           ; Regs used in _I2C1_MasterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12705  1E77  3000               	movlw	0
 12706  1E78  3190  2041         	fcall	_I2C1_MasterOperation
 12707  1E7A  0008               	return
 12708  1E7B                     __end_of_I2C1_MasterWrite:	
 12709                           
 12710                           	psect	text36
 12711  1041                     __ptext36:	
 12712 ;; *************** function _I2C1_MasterOperation *****************
 12713 ;; Defined at:
 12714 ;;		line 224 in file "mcc_generated_files/i2c1_master.c"
 12715 ;; Parameters:    Size  Location     Type
 12716 ;;  read            1    wreg     _Bool 
 12717 ;; Auto vars:     Size  Location     Type
 12718 ;;  read            1    6[BANK0 ] _Bool 
 12719 ;;  returnValue     1    7[BANK0 ] enum E353
 12720 ;; Return value:  Size  Location     Type
 12721 ;;                  1    wreg      enum E353
 12722 ;; Registers used:
 12723 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12724 ;; Tracked objects:
 12725 ;;		On entry : 0/0
 12726 ;;		On exit  : 0/0
 12727 ;;		Unchanged: 0/0
 12728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12730 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12731 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12732 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12733 ;;Total ram usage:        3 bytes
 12734 ;; Hardware stack levels used:    1
 12735 ;; Hardware stack levels required when called:   10
 12736 ;; This function calls:
 12737 ;;		_I2C1_MasterStart
 12738 ;;		_I2C1_Poller
 12739 ;; This function is called by:
 12740 ;;		_I2C1_MasterWrite
 12741 ;;		_I2C1_MasterRead
 12742 ;; This function uses a non-reentrant model
 12743 ;;
 12744                           
 12745                           
 12746                           ;psect for function _I2C1_MasterOperation
 12747  1041                     _I2C1_MasterOperation:	
 12748                           
 12749                           ;incstack = 0
 12750                           ; Regs used in _I2C1_MasterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12751                           ;I2C1_MasterOperation@read stored from wreg
 12752  1041  0020               	movlb	0	; select bank0
 12753  1042  00A6               	movwf	I2C1_MasterOperation@read
 12754                           
 12755                           ;mcc_generated_files/i2c1_master.c: 224: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 225: {;mcc_generated_files/i2c1_master.c: 226:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 12756  1043  01A7               	clrf	I2C1_MasterOperation@returnValue
 12757  1044  0AA7               	incf	I2C1_MasterOperation@returnValue,f
 12758                           
 12759                           ;mcc_generated_files/i2c1_master.c: 227:     if(!I2C1_Status.busy)
 12760  1045  0023               	movlb	3	; select bank3
 12761  1046  18BC               	btfsc	(_I2C1_Status^(0+384)+28),1
 12762  1047  285C               	goto	l5351
 12763                           
 12764                           ;mcc_generated_files/i2c1_master.c: 228:     {;mcc_generated_files/i2c1_master.c: 229:  
      +                                 I2C1_Status.busy = 1;
 12765  1048  14BC               	bsf	(_I2C1_Status^(0+384)+28),1
 12766                           
 12767                           ;mcc_generated_files/i2c1_master.c: 230:         returnValue = I2C1_NOERR;
 12768  1049  0020               	movlb	0	; select bank0
 12769  104A  01A7               	clrf	I2C1_MasterOperation@returnValue
 12770                           
 12771                           ;mcc_generated_files/i2c1_master.c: 232:         if(read)
 12772  104B  0826               	movf	I2C1_MasterOperation@read,w
 12773  104C  1903               	btfsc	3,2
 12774  104D  2852               	goto	l5345
 12775                           
 12776                           ;mcc_generated_files/i2c1_master.c: 233:         {;mcc_generated_files/i2c1_master.c: 23
      +                          4:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 12777  104E  0023               	movlb	3	; select bank3
 12778  104F  01BA               	clrf	(_I2C1_Status^(0+384)+26)
 12779  1050  0ABA               	incf	(_I2C1_Status^(0+384)+26),f
 12780                           
 12781                           ;mcc_generated_files/i2c1_master.c: 235:         }
 12782  1051  2857               	goto	l5347
 12783  1052                     l5345:	
 12784                           
 12785                           ;mcc_generated_files/i2c1_master.c: 237:         {;mcc_generated_files/i2c1_master.c: 23
      +                          8:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 12786  1052  3002               	movlw	2
 12787  1053  00FB               	movwf	??_I2C1_MasterOperation
 12788  1054  087B               	movf	??_I2C1_MasterOperation,w
 12789  1055  0023               	movlb	3	; select bank3
 12790  1056  00BA               	movwf	(_I2C1_Status^(0+384)+26)
 12791  1057                     l5347:	
 12792                           
 12793                           ;mcc_generated_files/i2c1_master.c: 240:         I2C1_MasterStart();
 12794  1057  319E  2632  3190   	fcall	_I2C1_MasterStart
 12795                           
 12796                           ;mcc_generated_files/i2c1_master.c: 241:         I2C1_Poller();
 12797  105A  319F  2703         	fcall	_I2C1_Poller
 12798  105C                     l5351:	
 12799                           
 12800                           ;mcc_generated_files/i2c1_master.c: 243:     return returnValue;
 12801  105C  0020               	movlb	0	; select bank0
 12802  105D  0827               	movf	I2C1_MasterOperation@returnValue,w
 12803  105E  0008               	return
 12804  105F                     __end_of_I2C1_MasterOperation:	
 12805                           
 12806                           	psect	text37
 12807  1F03                     __ptext37:	
 12808 ;; *************** function _I2C1_Poller *****************
 12809 ;; Defined at:
 12810 ;;		line 312 in file "mcc_generated_files/i2c1_master.c"
 12811 ;; Parameters:    Size  Location     Type
 12812 ;;		None
 12813 ;; Auto vars:     Size  Location     Type
 12814 ;;		None
 12815 ;; Return value:  Size  Location     Type
 12816 ;;                  1    wreg      void 
 12817 ;; Registers used:
 12818 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12819 ;; Tracked objects:
 12820 ;;		On entry : 0/0
 12821 ;;		On exit  : 0/0
 12822 ;;		Unchanged: 0/0
 12823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12828 ;;Total ram usage:        0 bytes
 12829 ;; Hardware stack levels used:    1
 12830 ;; Hardware stack levels required when called:    9
 12831 ;; This function calls:
 12832 ;;		_I2C1_MasterFsm
 12833 ;;		_I2C1_MasterWaitForEvent
 12834 ;; This function is called by:
 12835 ;;		_I2C1_MasterOperation
 12836 ;; This function uses a non-reentrant model
 12837 ;;
 12838                           
 12839                           
 12840                           ;psect for function _I2C1_Poller
 12841  1F03                     _I2C1_Poller:	
 12842  1F03                     l4999:	
 12843                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 12844                           
 12845                           ;incstack = 0
 12846                           ; Regs used in _I2C1_Poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12847                           
 12848                           
 12849                           ;mcc_generated_files/i2c1_master.c: 314:     while(I2C1_Status.busy)
 12850  1F03  0023               	movlb	3	; select bank3
 12851  1F04  1CBC               	btfss	(_I2C1_Status^(0+384)+28),1
 12852  1F05  0008               	return
 12853                           
 12854                           ;mcc_generated_files/i2c1_master.c: 315:     {;mcc_generated_files/i2c1_master.c: 316:  
      +                                 I2C1_MasterWaitForEvent();
 12855  1F06  319E  2673  319F   	fcall	_I2C1_MasterWaitForEvent
 12856                           
 12857                           ;mcc_generated_files/i2c1_master.c: 317:         I2C1_MasterFsm();
 12858  1F09  3191  2170  319F   	fcall	_I2C1_MasterFsm
 12859  1F0C  2F03               	goto	l4999
 12860  1F0D                     __end_of_I2C1_Poller:	
 12861                           
 12862                           	psect	text38
 12863  1E73                     __ptext38:	
 12864 ;; *************** function _I2C1_MasterWaitForEvent *****************
 12865 ;; Defined at:
 12866 ;;		line 650 in file "mcc_generated_files/i2c1_master.c"
 12867 ;; Parameters:    Size  Location     Type
 12868 ;;		None
 12869 ;; Auto vars:     Size  Location     Type
 12870 ;;		None
 12871 ;; Return value:  Size  Location     Type
 12872 ;;                  1    wreg      void 
 12873 ;; Registers used:
 12874 ;;		None
 12875 ;; Tracked objects:
 12876 ;;		On entry : 0/0
 12877 ;;		On exit  : 0/0
 12878 ;;		Unchanged: 0/0
 12879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12884 ;;Total ram usage:        0 bytes
 12885 ;; Hardware stack levels used:    1
 12886 ;; Hardware stack levels required when called:    4
 12887 ;; This function calls:
 12888 ;;		Nothing
 12889 ;; This function is called by:
 12890 ;;		_I2C1_Poller
 12891 ;; This function uses a non-reentrant model
 12892 ;;
 12893                           
 12894                           
 12895                           ;psect for function _I2C1_MasterWaitForEvent
 12896  1E73                     _I2C1_MasterWaitForEvent:	
 12897  1E73                     l764:	
 12898                           ;incstack = 0
 12899                           ; Regs used in _I2C1_MasterWaitForEvent: []
 12900                           ;mcc_generated_files/i2c1_master.c: 652:     while(1)
 12901                           
 12902                           
 12903                           ;mcc_generated_files/i2c1_master.c: 653:     {;mcc_generated_files/i2c1_master.c: 654:  
      +                                 if(PIR1bits.SSP1IF)
 12904  1E73  0020               	movlb	0	; select bank0
 12905  1E74  1991               	btfsc	17,3	;volatile
 12906  1E75  0008               	return
 12907  1E76  2E73               	goto	l764
 12908  1E77                     __end_of_I2C1_MasterWaitForEvent:	
 12909                           
 12910                           	psect	text39
 12911  1170                     __ptext39:	
 12912 ;; *************** function _I2C1_MasterFsm *****************
 12913 ;; Defined at:
 12914 ;;		line 321 in file "mcc_generated_files/i2c1_master.c"
 12915 ;; Parameters:    Size  Location     Type
 12916 ;;		None
 12917 ;; Auto vars:     Size  Location     Type
 12918 ;;		None
 12919 ;; Return value:  Size  Location     Type
 12920 ;;                  1    wreg      void 
 12921 ;; Registers used:
 12922 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12923 ;; Tracked objects:
 12924 ;;		On entry : 0/0
 12925 ;;		On exit  : 0/0
 12926 ;;		Unchanged: 0/0
 12927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12930 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12931 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12932 ;;Total ram usage:        3 bytes
 12933 ;; Hardware stack levels used:    1
 12934 ;; Hardware stack levels required when called:    8
 12935 ;; This function calls:
 12936 ;;		_I2C1_DO_ADDRESS_NACK
 12937 ;;		_I2C1_DO_IDLE
 12938 ;;		_I2C1_DO_RCEN
 12939 ;;		_I2C1_DO_RESET
 12940 ;;		_I2C1_DO_RX
 12941 ;;		_I2C1_DO_RX_ACK
 12942 ;;		_I2C1_DO_RX_NACK_RESTART
 12943 ;;		_I2C1_DO_RX_NACK_STOP
 12944 ;;		_I2C1_DO_SEND_ADR_READ
 12945 ;;		_I2C1_DO_SEND_ADR_WRITE
 12946 ;;		_I2C1_DO_SEND_RESTART
 12947 ;;		_I2C1_DO_SEND_RESTART_READ
 12948 ;;		_I2C1_DO_SEND_RESTART_WRITE
 12949 ;;		_I2C1_DO_SEND_STOP
 12950 ;;		_I2C1_DO_TX
 12951 ;;		_I2C1_DO_TX_EMPTY
 12952 ;;		_I2C1_MasterClearIrq
 12953 ;;		_I2C1_MasterIsNack
 12954 ;; This function is called by:
 12955 ;;		_I2C1_Poller
 12956 ;; This function uses a non-reentrant model
 12957 ;;
 12958                           
 12959                           
 12960                           ;psect for function _I2C1_MasterFsm
 12961  1170                     _I2C1_MasterFsm:	
 12962                           
 12963                           ;mcc_generated_files/i2c1_master.c: 323:     I2C1_MasterClearIrq();
 12964                           
 12965                           ;incstack = 0
 12966                           ; Regs used in _I2C1_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12967  1170  319E  2629  3191   	fcall	_I2C1_MasterClearIrq
 12968                           
 12969                           ;mcc_generated_files/i2c1_master.c: 325:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 12970  1173  0023               	movlb	3	; select bank3
 12971  1174  1C3C               	btfss	(_I2C1_Status^(0+384)+28),0
 12972  1175  2982               	goto	l4457
 12973  1176  319E  26B1  3191   	fcall	_I2C1_MasterIsNack
 12974  1179  3A00               	xorlw	0
 12975  117A  1903               	skipnz
 12976  117B  2982               	goto	l4457
 12977                           
 12978                           ;mcc_generated_files/i2c1_master.c: 326:     {;mcc_generated_files/i2c1_master.c: 327:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 12979  117C  300F               	movlw	15
 12980  117D  0020               	movlb	0	; select bank0
 12981  117E  00A3               	movwf	??_I2C1_MasterFsm
 12982  117F  0823               	movf	??_I2C1_MasterFsm,w
 12983  1180  0023               	movlb	3	; select bank3
 12984  1181  00BA               	movwf	(_I2C1_Status^(0+384)+26)
 12985  1182                     l4457:	
 12986                           
 12987                           ;mcc_generated_files/i2c1_master.c: 329:     I2C1_Status.state = fsmStateTable[I2C1_Stat
      +                          us.state]();
 12988  1182  0023               	movlb	3	; select bank3
 12989  1183  083A               	movf	(_I2C1_Status^(0+384)+26),w
 12990  1184  0020               	movlb	0	; select bank0
 12991  1185  00A3               	movwf	??_I2C1_MasterFsm
 12992  1186  01A4               	clrf	??_I2C1_MasterFsm+1
 12993  1187  35A3               	lslf	??_I2C1_MasterFsm,f
 12994  1188  0DA4               	rlf	??_I2C1_MasterFsm+1,f
 12995  1189  3000               	movlw	low (_fsmStateTable| (0+32768))
 12996  118A  0723               	addwf	??_I2C1_MasterFsm,w
 12997  118B  0084               	movwf	4
 12998  118C  3098               	movlw	high (_fsmStateTable| (0+32768))
 12999  118D  3D24               	addwfc	??_I2C1_MasterFsm+1,w
 13000  118E  0085               	movwf	5
 13001  118F  3F01               	moviw [1]fsr0
 13002  1190  008A               	movwf	10
 13003  1191  3F00               	moviw [0]fsr0
 13004  1192  000A               	callw
 13005  1193  3191               	pagesel	$
 13006  1194  0020               	movlb	0	; select bank0
 13007  1195  00A5               	movwf	??_I2C1_MasterFsm+2
 13008  1196  0825               	movf	??_I2C1_MasterFsm+2,w
 13009  1197  0023               	movlb	3	; select bank3
 13010  1198  00BA               	movwf	(_I2C1_Status^(0+384)+26)
 13011  1199  0008               	return
 13012  119A                     __end_of_I2C1_MasterFsm:	
 13013                           
 13014                           	psect	text40
 13015  11C9                     __ptext40:	
 13016 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 13017 ;; Defined at:
 13018 ;;		line 500 in file "mcc_generated_files/i2c1_master.c"
 13019 ;; Parameters:    Size  Location     Type
 13020 ;;		None
 13021 ;; Auto vars:     Size  Location     Type
 13022 ;;		None
 13023 ;; Return value:  Size  Location     Type
 13024 ;;                  1    wreg      enum E7150
 13025 ;; Registers used:
 13026 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13027 ;; Tracked objects:
 13028 ;;		On entry : 0/0
 13029 ;;		On exit  : 0/0
 13030 ;;		Unchanged: 0/0
 13031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13034 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13035 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13036 ;;Total ram usage:        3 bytes
 13037 ;; Hardware stack levels used:    1
 13038 ;; Hardware stack levels required when called:    7
 13039 ;; This function calls:
 13040 ;;		Absolute function
 13041 ;;		_I2C1_CallbackReturnReset
 13042 ;;		_I2C1_CallbackReturnStop
 13043 ;;		_I2C1_DO_SEND_RESTART
 13044 ;;		_I2C1_DO_SEND_STOP
 13045 ;;		_rd1RegCompleteHandler
 13046 ;;		_rd2RegCompleteHandler
 13047 ;;		_rdBlkRegCompleteHandler
 13048 ;;		_wr1RegCompleteHandler
 13049 ;;		_wr2RegCompleteHandler
 13050 ;; This function is called by:
 13051 ;;		_I2C1_MasterFsm
 13052 ;; This function uses a non-reentrant model
 13053 ;;
 13054                           
 13055                           
 13056                           ;psect for function _I2C1_DO_ADDRESS_NACK
 13057  11C9                     _I2C1_DO_ADDRESS_NACK:	
 13058                           
 13059                           ;mcc_generated_files/i2c1_master.c: 502:     I2C1_Status.addressNackCheck = 0;
 13060                           
 13061                           ;incstack = 0
 13062                           ; Regs used in _I2C1_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13063  11C9  0023               	movlb	3	; select bank3
 13064  11CA  103C               	bcf	(_I2C1_Status^(0+384)+28),0
 13065                           
 13066                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.error = I2C1_FAIL;
 13067  11CB  3002               	movlw	2
 13068  11CC  0020               	movlb	0	; select bank0
 13069  11CD  00A0               	movwf	??_I2C1_DO_ADDRESS_NACK
 13070  11CE  0820               	movf	??_I2C1_DO_ADDRESS_NACK,w
 13071  11CF  0023               	movlb	3	; select bank3
 13072  11D0  00BB               	movwf	(_I2C1_Status^(0+384)+27)
 13073                           
 13074                           ;mcc_generated_files/i2c1_master.c: 504:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 13075  11D1  29D8               	goto	l4211
 13076  11D2                     l4201:	
 13077                           
 13078                           ;mcc_generated_files/i2c1_master.c: 508:             return I2C1_DO_SEND_RESTART();
 13079  11D2  319E  265F         	fcall	_I2C1_DO_SEND_RESTART
 13080  11D4  0008               	return
 13081  11D5                     l4205:	
 13082                           
 13083                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_STOP();
 13084  11D5  319E  2663         	fcall	_I2C1_DO_SEND_STOP
 13085  11D7  0008               	return
 13086  11D8                     l4211:	
 13087  11D8  082E               	movf	(low ((_I2C1_Status| (0+256)+14)))^(0+128),w
 13088  11D9  0020               	movlb	0	; select bank0
 13089  11DA  00A0               	movwf	??_I2C1_DO_ADDRESS_NACK
 13090  11DB  0820               	movf	??_I2C1_DO_ADDRESS_NACK,w
 13091  11DC  00FA               	movwf	I2C1_CallbackReturnReset@funPtr
 13092  11DD  3004               	movlw	4
 13093  11DE  3EA0               	addlw	(low (_I2C1_Status| (0+256)))& (0+255)
 13094  11DF  0086               	movwf	6
 13095  11E0  3001               	movlw	1	; select bank3/4
 13096  11E1  0087               	movwf	7
 13097  11E2  3F41               	moviw [1]fsr1
 13098  11E3  008A               	movwf	10
 13099  11E4  3F40               	moviw [0]fsr1
 13100  11E5  000A               	callw
 13101  11E6  3191               	pagesel	$
 13102  11E7  0020               	movlb	0	; select bank0
 13103  11E8  00A1               	movwf	??_I2C1_DO_ADDRESS_NACK+1
 13104  11E9  01A2               	clrf	??_I2C1_DO_ADDRESS_NACK+2
 13105                           
 13106                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13107                           ; Switch size 1, requested type "simple"
 13108                           ; Number of cases is 1, Range of values is 0 to 0
 13109                           ; switch strategies available:
 13110                           ; Name         Instructions Cycles
 13111                           ; simple_byte            4     3 (average)
 13112                           ; direct_byte            8     6 (fixed)
 13113                           ; jumptable            260     6 (fixed)
 13114                           ;	Chosen strategy is simple_byte
 13115  11EA  0822               	movf	??_I2C1_DO_ADDRESS_NACK+2,w
 13116  11EB  3A00               	xorlw	0	; case 0
 13117  11EC  1903               	skipnz
 13118  11ED  29EF               	goto	l6823
 13119  11EE  29D5               	goto	l4205
 13120  11EF                     l6823:	
 13121                           
 13122                           ; Switch size 1, requested type "simple"
 13123                           ; Number of cases is 2, Range of values is 2 to 3
 13124                           ; switch strategies available:
 13125                           ; Name         Instructions Cycles
 13126                           ; simple_byte            7     4 (average)
 13127                           ; direct_byte           13     9 (fixed)
 13128                           ; jumptable            263     9 (fixed)
 13129                           ;	Chosen strategy is simple_byte
 13130  11EF  0821               	movf	??_I2C1_DO_ADDRESS_NACK+1,w
 13131  11F0  3A02               	xorlw	2	; case 2
 13132  11F1  1903               	skipnz
 13133  11F2  29D2               	goto	l4201
 13134  11F3  3A01               	xorlw	1	; case 3
 13135  11F4  1903               	skipnz
 13136  11F5  29D2               	goto	l4201
 13137  11F6  29D5               	goto	l4205
 13138  11F7  0008               	return
 13139  11F8                     __end_of_I2C1_DO_ADDRESS_NACK:	
 13140                           
 13141                           	psect	text41
 13142  1E89                     __ptext41:	
 13143 ;; *************** function _I2C1_DO_RESET *****************
 13144 ;; Defined at:
 13145 ;;		line 494 in file "mcc_generated_files/i2c1_master.c"
 13146 ;; Parameters:    Size  Location     Type
 13147 ;;		None
 13148 ;; Auto vars:     Size  Location     Type
 13149 ;;		None
 13150 ;; Return value:  Size  Location     Type
 13151 ;;                  1    wreg      enum E7150
 13152 ;; Registers used:
 13153 ;;		wreg, status,2
 13154 ;; Tracked objects:
 13155 ;;		On entry : 0/0
 13156 ;;		On exit  : 0/0
 13157 ;;		Unchanged: 0/0
 13158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13163 ;;Total ram usage:        0 bytes
 13164 ;; Hardware stack levels used:    1
 13165 ;; Hardware stack levels required when called:    4
 13166 ;; This function calls:
 13167 ;;		Nothing
 13168 ;; This function is called by:
 13169 ;;		_I2C1_MasterFsm
 13170 ;; This function uses a non-reentrant model
 13171 ;;
 13172                           
 13173                           
 13174                           ;psect for function _I2C1_DO_RESET
 13175  1E89                     _I2C1_DO_RESET:	
 13176                           
 13177                           ;mcc_generated_files/i2c1_master.c: 496:     I2C1_Status.busy = 0;
 13178                           
 13179                           ;incstack = 0
 13180                           ; Regs used in _I2C1_DO_RESET: [wreg+status,2]
 13181  1E89  0023               	movlb	3	; select bank3
 13182  1E8A  10BC               	bcf	(_I2C1_Status^(0+384)+28),1
 13183                           
 13184                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.error = I2C1_NOERR;
 13185  1E8B  01BB               	clrf	(_I2C1_Status^(0+384)+27)
 13186                           
 13187                           ;mcc_generated_files/i2c1_master.c: 498:     return I2C1_RESET;
 13188  1E8C  300E               	movlw	14
 13189  1E8D  0008               	return
 13190  1E8E                     __end_of_I2C1_DO_RESET:	
 13191                           
 13192                           	psect	text42
 13193  1E6F                     __ptext42:	
 13194 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 13195 ;; Defined at:
 13196 ;;		line 488 in file "mcc_generated_files/i2c1_master.c"
 13197 ;; Parameters:    Size  Location     Type
 13198 ;;		None
 13199 ;; Auto vars:     Size  Location     Type
 13200 ;;		None
 13201 ;; Return value:  Size  Location     Type
 13202 ;;                  1    wreg      enum E7150
 13203 ;; Registers used:
 13204 ;;		wreg, status,2, status,0, pclath, cstack
 13205 ;; Tracked objects:
 13206 ;;		On entry : 0/0
 13207 ;;		On exit  : 0/0
 13208 ;;		Unchanged: 0/0
 13209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13214 ;;Total ram usage:        0 bytes
 13215 ;; Hardware stack levels used:    1
 13216 ;; Hardware stack levels required when called:    5
 13217 ;; This function calls:
 13218 ;;		_I2C1_MasterSendNack
 13219 ;; This function is called by:
 13220 ;;		_I2C1_DO_RX
 13221 ;;		_I2C1_MasterFsm
 13222 ;; This function uses a non-reentrant model
 13223 ;;
 13224                           
 13225                           
 13226                           ;psect for function _I2C1_DO_RX_NACK_RESTART
 13227  1E6F                     _I2C1_DO_RX_NACK_RESTART:	
 13228                           
 13229                           ;mcc_generated_files/i2c1_master.c: 490:     I2C1_MasterSendNack();
 13230                           
 13231                           ;incstack = 0
 13232                           ; Regs used in _I2C1_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 13233  1E6F  319E  264F         	fcall	_I2C1_MasterSendNack
 13234                           
 13235                           ;mcc_generated_files/i2c1_master.c: 491:     return I2C1_SEND_RESTART;
 13236  1E71  3009               	movlw	9
 13237  1E72  0008               	return
 13238  1E73                     __end_of_I2C1_DO_RX_NACK_RESTART:	
 13239                           
 13240                           	psect	text43
 13241  1E6B                     __ptext43:	
 13242 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 13243 ;; Defined at:
 13244 ;;		line 482 in file "mcc_generated_files/i2c1_master.c"
 13245 ;; Parameters:    Size  Location     Type
 13246 ;;		None
 13247 ;; Auto vars:     Size  Location     Type
 13248 ;;		None
 13249 ;; Return value:  Size  Location     Type
 13250 ;;                  1    wreg      enum E7150
 13251 ;; Registers used:
 13252 ;;		wreg, status,2, status,0, pclath, cstack
 13253 ;; Tracked objects:
 13254 ;;		On entry : 0/0
 13255 ;;		On exit  : 0/0
 13256 ;;		Unchanged: 0/0
 13257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13262 ;;Total ram usage:        0 bytes
 13263 ;; Hardware stack levels used:    1
 13264 ;; Hardware stack levels required when called:    5
 13265 ;; This function calls:
 13266 ;;		_I2C1_MasterSendNack
 13267 ;; This function is called by:
 13268 ;;		_I2C1_DO_RX
 13269 ;;		_I2C1_MasterFsm
 13270 ;; This function uses a non-reentrant model
 13271 ;;
 13272                           
 13273                           
 13274                           ;psect for function _I2C1_DO_RX_NACK_STOP
 13275  1E6B                     _I2C1_DO_RX_NACK_STOP:	
 13276                           
 13277                           ;mcc_generated_files/i2c1_master.c: 484:     I2C1_MasterSendNack();
 13278                           
 13279                           ;incstack = 0
 13280                           ; Regs used in _I2C1_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 13281  1E6B  319E  264F         	fcall	_I2C1_MasterSendNack
 13282                           
 13283                           ;mcc_generated_files/i2c1_master.c: 485:     return I2C1_SEND_STOP;
 13284  1E6D  300A               	movlw	10
 13285  1E6E  0008               	return
 13286  1E6F                     __end_of_I2C1_DO_RX_NACK_STOP:	
 13287                           
 13288                           	psect	text44
 13289  1E67                     __ptext44:	
 13290 ;; *************** function _I2C1_DO_RX_ACK *****************
 13291 ;; Defined at:
 13292 ;;		line 475 in file "mcc_generated_files/i2c1_master.c"
 13293 ;; Parameters:    Size  Location     Type
 13294 ;;		None
 13295 ;; Auto vars:     Size  Location     Type
 13296 ;;		None
 13297 ;; Return value:  Size  Location     Type
 13298 ;;                  1    wreg      enum E7150
 13299 ;; Registers used:
 13300 ;;		wreg, status,2, status,0, pclath, cstack
 13301 ;; Tracked objects:
 13302 ;;		On entry : 0/0
 13303 ;;		On exit  : 0/0
 13304 ;;		Unchanged: 0/0
 13305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13310 ;;Total ram usage:        0 bytes
 13311 ;; Hardware stack levels used:    1
 13312 ;; Hardware stack levels required when called:    5
 13313 ;; This function calls:
 13314 ;;		_I2C1_MasterSendAck
 13315 ;; This function is called by:
 13316 ;;		_I2C1_MasterFsm
 13317 ;; This function uses a non-reentrant model
 13318 ;;
 13319                           
 13320                           
 13321                           ;psect for function _I2C1_DO_RX_ACK
 13322  1E67                     _I2C1_DO_RX_ACK:	
 13323                           
 13324                           ;mcc_generated_files/i2c1_master.c: 477:     I2C1_MasterSendAck();
 13325                           
 13326                           ;incstack = 0
 13327                           ; Regs used in _I2C1_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
 13328  1E67  319E  2653         	fcall	_I2C1_MasterSendAck
 13329                           
 13330                           ;mcc_generated_files/i2c1_master.c: 478:     return I2C1_RCEN;
 13331  1E69  3005               	movlw	5
 13332  1E6A  0008               	return
 13333  1E6B                     __end_of_I2C1_DO_RX_ACK:	
 13334                           
 13335                           	psect	text45
 13336  1E63                     __ptext45:	
 13337 ;; *************** function _I2C1_DO_SEND_STOP *****************
 13338 ;; Defined at:
 13339 ;;		line 469 in file "mcc_generated_files/i2c1_master.c"
 13340 ;; Parameters:    Size  Location     Type
 13341 ;;		None
 13342 ;; Auto vars:     Size  Location     Type
 13343 ;;		None
 13344 ;; Return value:  Size  Location     Type
 13345 ;;                  1    wreg      enum E7150
 13346 ;; Registers used:
 13347 ;;		wreg, status,2, status,0, pclath, cstack
 13348 ;; Tracked objects:
 13349 ;;		On entry : 0/0
 13350 ;;		On exit  : 0/0
 13351 ;;		Unchanged: 0/0
 13352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13357 ;;Total ram usage:        0 bytes
 13358 ;; Hardware stack levels used:    1
 13359 ;; Hardware stack levels required when called:    5
 13360 ;; This function calls:
 13361 ;;		_I2C1_MasterStop
 13362 ;; This function is called by:
 13363 ;;		_I2C1_DO_TX
 13364 ;;		_I2C1_DO_TX_EMPTY
 13365 ;;		_I2C1_DO_ADDRESS_NACK
 13366 ;;		_I2C1_MasterFsm
 13367 ;; This function uses a non-reentrant model
 13368 ;;
 13369                           
 13370                           
 13371                           ;psect for function _I2C1_DO_SEND_STOP
 13372  1E63                     _I2C1_DO_SEND_STOP:	
 13373                           
 13374                           ;mcc_generated_files/i2c1_master.c: 471:     I2C1_MasterStop();
 13375                           
 13376                           ;incstack = 0
 13377                           ; Regs used in _I2C1_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 13378  1E63  319E  2638         	fcall	_I2C1_MasterStop
 13379                           
 13380                           ;mcc_generated_files/i2c1_master.c: 472:     return I2C1_IDLE;
 13381  1E65  3000               	movlw	0
 13382  1E66  0008               	return
 13383  1E67                     __end_of_I2C1_DO_SEND_STOP:	
 13384                           
 13385                           	psect	text46
 13386  1E5F                     __ptext46:	
 13387 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 13388 ;; Defined at:
 13389 ;;		line 463 in file "mcc_generated_files/i2c1_master.c"
 13390 ;; Parameters:    Size  Location     Type
 13391 ;;		None
 13392 ;; Auto vars:     Size  Location     Type
 13393 ;;		None
 13394 ;; Return value:  Size  Location     Type
 13395 ;;                  1    wreg      enum E7150
 13396 ;; Registers used:
 13397 ;;		wreg, status,2, status,0, pclath, cstack
 13398 ;; Tracked objects:
 13399 ;;		On entry : 0/0
 13400 ;;		On exit  : 0/0
 13401 ;;		Unchanged: 0/0
 13402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13407 ;;Total ram usage:        0 bytes
 13408 ;; Hardware stack levels used:    1
 13409 ;; Hardware stack levels required when called:    5
 13410 ;; This function calls:
 13411 ;;		_I2C1_MasterEnableRestart
 13412 ;; This function is called by:
 13413 ;;		_I2C1_DO_TX_EMPTY
 13414 ;;		_I2C1_DO_ADDRESS_NACK
 13415 ;;		_I2C1_MasterFsm
 13416 ;; This function uses a non-reentrant model
 13417 ;;
 13418                           
 13419                           
 13420                           ;psect for function _I2C1_DO_SEND_RESTART
 13421  1E5F                     _I2C1_DO_SEND_RESTART:	
 13422                           
 13423                           ;mcc_generated_files/i2c1_master.c: 465:     I2C1_MasterEnableRestart();
 13424                           
 13425                           ;incstack = 0
 13426                           ; Regs used in _I2C1_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 13427  1E5F  319E  2635         	fcall	_I2C1_MasterEnableRestart
 13428                           
 13429                           ;mcc_generated_files/i2c1_master.c: 466:     return I2C1_SEND_ADR_READ;
 13430  1E61  3001               	movlw	1
 13431  1E62  0008               	return
 13432  1E63                     __end_of_I2C1_DO_SEND_RESTART:	
 13433                           
 13434                           	psect	text47
 13435  1E5B                     __ptext47:	
 13436 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 13437 ;; Defined at:
 13438 ;;		line 456 in file "mcc_generated_files/i2c1_master.c"
 13439 ;; Parameters:    Size  Location     Type
 13440 ;;		None
 13441 ;; Auto vars:     Size  Location     Type
 13442 ;;		None
 13443 ;; Return value:  Size  Location     Type
 13444 ;;                  1    wreg      enum E7150
 13445 ;; Registers used:
 13446 ;;		wreg, status,2, status,0, pclath, cstack
 13447 ;; Tracked objects:
 13448 ;;		On entry : 0/0
 13449 ;;		On exit  : 0/0
 13450 ;;		Unchanged: 0/0
 13451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13456 ;;Total ram usage:        0 bytes
 13457 ;; Hardware stack levels used:    1
 13458 ;; Hardware stack levels required when called:    5
 13459 ;; This function calls:
 13460 ;;		_I2C1_MasterEnableRestart
 13461 ;; This function is called by:
 13462 ;;		_I2C1_DO_TX
 13463 ;;		_I2C1_MasterFsm
 13464 ;; This function uses a non-reentrant model
 13465 ;;
 13466                           
 13467                           
 13468                           ;psect for function _I2C1_DO_SEND_RESTART_WRITE
 13469  1E5B                     _I2C1_DO_SEND_RESTART_WRITE:	
 13470                           
 13471                           ;mcc_generated_files/i2c1_master.c: 458:     I2C1_MasterEnableRestart();
 13472                           
 13473                           ;incstack = 0
 13474                           ; Regs used in _I2C1_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 13475  1E5B  319E  2635         	fcall	_I2C1_MasterEnableRestart
 13476                           
 13477                           ;mcc_generated_files/i2c1_master.c: 459:     return I2C1_SEND_ADR_WRITE;
 13478  1E5D  3002               	movlw	2
 13479  1E5E  0008               	return
 13480  1E5F                     __end_of_I2C1_DO_SEND_RESTART_WRITE:	
 13481                           
 13482                           	psect	text48
 13483  1E57                     __ptext48:	
 13484 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 13485 ;; Defined at:
 13486 ;;		line 450 in file "mcc_generated_files/i2c1_master.c"
 13487 ;; Parameters:    Size  Location     Type
 13488 ;;		None
 13489 ;; Auto vars:     Size  Location     Type
 13490 ;;		None
 13491 ;; Return value:  Size  Location     Type
 13492 ;;                  1    wreg      enum E7150
 13493 ;; Registers used:
 13494 ;;		wreg, status,2, status,0, pclath, cstack
 13495 ;; Tracked objects:
 13496 ;;		On entry : 0/0
 13497 ;;		On exit  : 0/0
 13498 ;;		Unchanged: 0/0
 13499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13504 ;;Total ram usage:        0 bytes
 13505 ;; Hardware stack levels used:    1
 13506 ;; Hardware stack levels required when called:    5
 13507 ;; This function calls:
 13508 ;;		_I2C1_MasterEnableRestart
 13509 ;; This function is called by:
 13510 ;;		_I2C1_DO_TX
 13511 ;;		_I2C1_MasterFsm
 13512 ;; This function uses a non-reentrant model
 13513 ;;
 13514                           
 13515                           
 13516                           ;psect for function _I2C1_DO_SEND_RESTART_READ
 13517  1E57                     _I2C1_DO_SEND_RESTART_READ:	
 13518                           
 13519                           ;mcc_generated_files/i2c1_master.c: 452:     I2C1_MasterEnableRestart();
 13520                           
 13521                           ;incstack = 0
 13522                           ; Regs used in _I2C1_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 13523  1E57  319E  2635         	fcall	_I2C1_MasterEnableRestart
 13524                           
 13525                           ;mcc_generated_files/i2c1_master.c: 453:     return I2C1_SEND_ADR_READ;
 13526  1E59  3001               	movlw	1
 13527  1E5A  0008               	return
 13528  1E5B                     __end_of_I2C1_DO_SEND_RESTART_READ:	
 13529                           
 13530                           	psect	text49
 13531  1EB7                     __ptext49:	
 13532 ;; *************** function _I2C1_DO_RCEN *****************
 13533 ;; Defined at:
 13534 ;;		line 402 in file "mcc_generated_files/i2c1_master.c"
 13535 ;; Parameters:    Size  Location     Type
 13536 ;;		None
 13537 ;; Auto vars:     Size  Location     Type
 13538 ;;		None
 13539 ;; Return value:  Size  Location     Type
 13540 ;;                  1    wreg      enum E7150
 13541 ;; Registers used:
 13542 ;;		wreg, status,2, status,0, pclath, cstack
 13543 ;; Tracked objects:
 13544 ;;		On entry : 0/0
 13545 ;;		On exit  : 0/0
 13546 ;;		Unchanged: 0/0
 13547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13552 ;;Total ram usage:        0 bytes
 13553 ;; Hardware stack levels used:    1
 13554 ;; Hardware stack levels required when called:    5
 13555 ;; This function calls:
 13556 ;;		_I2C1_MasterStartRx
 13557 ;; This function is called by:
 13558 ;;		_I2C1_MasterFsm
 13559 ;; This function uses a non-reentrant model
 13560 ;;
 13561                           
 13562                           
 13563                           ;psect for function _I2C1_DO_RCEN
 13564  1EB7                     _I2C1_DO_RCEN:	
 13565                           
 13566                           ;mcc_generated_files/i2c1_master.c: 404:     I2C1_Status.addressNackCheck = 0;
 13567                           
 13568                           ;incstack = 0
 13569                           ; Regs used in _I2C1_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
 13570  1EB7  0023               	movlb	3	; select bank3
 13571  1EB8  103C               	bcf	(_I2C1_Status^(0+384)+28),0
 13572                           
 13573                           ;mcc_generated_files/i2c1_master.c: 405:     I2C1_MasterStartRx();
 13574  1EB9  319E  263B         	fcall	_I2C1_MasterStartRx
 13575                           
 13576                           ;mcc_generated_files/i2c1_master.c: 406:     return I2C1_RX;
 13577  1EBB  3004               	movlw	4
 13578  1EBC  0008               	return
 13579  1EBD                     __end_of_I2C1_DO_RCEN:	
 13580                           
 13581                           	psect	text50
 13582  13C9                     __ptext50:	
 13583 ;; *************** function _I2C1_DO_RX *****************
 13584 ;; Defined at:
 13585 ;;		line 378 in file "mcc_generated_files/i2c1_master.c"
 13586 ;; Parameters:    Size  Location     Type
 13587 ;;		None
 13588 ;; Auto vars:     Size  Location     Type
 13589 ;;		None
 13590 ;; Return value:  Size  Location     Type
 13591 ;;                  1    wreg      enum E7150
 13592 ;; Registers used:
 13593 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13594 ;; Tracked objects:
 13595 ;;		On entry : 0/0
 13596 ;;		On exit  : 0/0
 13597 ;;		Unchanged: 0/0
 13598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13601 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13602 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13603 ;;Total ram usage:        3 bytes
 13604 ;; Hardware stack levels used:    1
 13605 ;; Hardware stack levels required when called:    7
 13606 ;; This function calls:
 13607 ;;		Absolute function
 13608 ;;		_I2C1_CallbackReturnReset
 13609 ;;		_I2C1_CallbackReturnStop
 13610 ;;		_I2C1_DO_RX_NACK_RESTART
 13611 ;;		_I2C1_DO_RX_NACK_STOP
 13612 ;;		_I2C1_MasterGetRxData
 13613 ;;		_I2C1_MasterSendAck
 13614 ;;		_rd1RegCompleteHandler
 13615 ;;		_rd2RegCompleteHandler
 13616 ;;		_rdBlkRegCompleteHandler
 13617 ;;		_wr1RegCompleteHandler
 13618 ;;		_wr2RegCompleteHandler
 13619 ;; This function is called by:
 13620 ;;		_I2C1_MasterFsm
 13621 ;; This function uses a non-reentrant model
 13622 ;;
 13623                           
 13624                           
 13625                           ;psect for function _I2C1_DO_RX
 13626  13C9                     _I2C1_DO_RX:	
 13627                           
 13628                           ;mcc_generated_files/i2c1_master.c: 380:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 13629                           
 13630                           ;incstack = 0
 13631                           ; Regs used in _I2C1_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13632  13C9  319E  263E  3193   	fcall	_I2C1_MasterGetRxData
 13633  13CC  0020               	movlb	0	; select bank0
 13634  13CD  00A0               	movwf	??_I2C1_DO_RX
 13635  13CE  0023               	movlb	3	; select bank3
 13636  13CF  0837               	movf	(low ((_I2C1_Status| (0+256)+23)))^(0+128),w
 13637  13D0  0086               	movwf	6
 13638  13D1  0187               	clrf	7
 13639  13D2  0020               	movlb	0	; select bank0
 13640  13D3  0820               	movf	??_I2C1_DO_RX,w
 13641  13D4  0081               	movwf	1
 13642  13D5  3001               	movlw	1
 13643  13D6  00A0               	movwf	??_I2C1_DO_RX
 13644  13D7  0820               	movf	??_I2C1_DO_RX,w
 13645  13D8  0023               	movlb	3	; select bank3
 13646  13D9  07B7               	addwf	(low ((_I2C1_Status| (0+256)+23)))^(0+128),f
 13647                           
 13648                           ;mcc_generated_files/i2c1_master.c: 381:     if(--I2C1_Status.data_length)
 13649  13DA  3001               	movlw	1
 13650  13DB  02B8               	subwf	(_I2C1_Status^(0+384)+24),f
 13651  13DC  3000               	movlw	0
 13652  13DD  3BB9               	subwfb	((_I2C1_Status+1)^(0+384)+24),f
 13653  13DE  0838               	movf	(_I2C1_Status^(0+384)+24),w
 13654  13DF  0439               	iorwf	((_I2C1_Status+1)^(0+384)+24),w
 13655  13E0  1903               	btfsc	3,2
 13656  13E1  2BE6               	goto	l623
 13657                           
 13658                           ;mcc_generated_files/i2c1_master.c: 382:     {;mcc_generated_files/i2c1_master.c: 383:  
      +                                 I2C1_MasterSendAck();
 13659  13E2  319E  2653         	fcall	_I2C1_MasterSendAck
 13660                           
 13661                           ;mcc_generated_files/i2c1_master.c: 384:         return I2C1_RCEN;
 13662  13E4  3005               	movlw	5
 13663  13E5  0008               	return
 13664  13E6                     l623:	
 13665                           ;mcc_generated_files/i2c1_master.c: 386:     else
 13666                           
 13667                           
 13668                           ;mcc_generated_files/i2c1_master.c: 387:     {;mcc_generated_files/i2c1_master.c: 388:  
      +                                 I2C1_Status.bufferFree = 1;
 13669  13E6  15BC               	bsf	(_I2C1_Status^(0+384)+28),3
 13670                           
 13671                           ;mcc_generated_files/i2c1_master.c: 389:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 13672  13E7  2BEE               	goto	l4145
 13673  13E8                     l4135:	
 13674                           
 13675                           ;mcc_generated_files/i2c1_master.c: 393:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 13676  13E8  319E  266F         	fcall	_I2C1_DO_RX_NACK_RESTART
 13677  13EA  0008               	return
 13678  13EB                     l4139:	
 13679                           
 13680                           ;mcc_generated_files/i2c1_master.c: 397:                 return I2C1_DO_RX_NACK_STOP();
 13681  13EB  319E  266B         	fcall	_I2C1_DO_RX_NACK_STOP
 13682  13ED  0008               	return
 13683  13EE                     l4145:	
 13684  13EE  082C               	movf	(low ((_I2C1_Status| (0+256)+12)))^(0+128),w
 13685  13EF  0020               	movlb	0	; select bank0
 13686  13F0  00A0               	movwf	??_I2C1_DO_RX
 13687  13F1  0820               	movf	??_I2C1_DO_RX,w
 13688  13F2  00FA               	movwf	I2C1_CallbackReturnReset@funPtr
 13689  13F3  0023               	movlb	3	; select bank3
 13690  13F4  0821               	movf	(_I2C1_Status+1)^(0+384),w
 13691  13F5  008A               	movwf	10
 13692  13F6  0820               	movf	_I2C1_Status^(0+384),w
 13693  13F7  000A               	callw
 13694  13F8  3193               	pagesel	$
 13695  13F9  0020               	movlb	0	; select bank0
 13696  13FA  00A1               	movwf	??_I2C1_DO_RX+1
 13697  13FB  01A2               	clrf	??_I2C1_DO_RX+2
 13698                           
 13699                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13700                           ; Switch size 1, requested type "simple"
 13701                           ; Number of cases is 1, Range of values is 0 to 0
 13702                           ; switch strategies available:
 13703                           ; Name         Instructions Cycles
 13704                           ; simple_byte            4     3 (average)
 13705                           ; direct_byte            8     6 (fixed)
 13706                           ; jumptable            260     6 (fixed)
 13707                           ;	Chosen strategy is simple_byte
 13708  13FC  0822               	movf	??_I2C1_DO_RX+2,w
 13709  13FD  3A00               	xorlw	0	; case 0
 13710  13FE  1903               	skipnz
 13711  13FF  2C01               	goto	l6825
 13712  1400  2BEB               	goto	l4139
 13713  1401                     l6825:	
 13714                           
 13715                           ; Switch size 1, requested type "simple"
 13716                           ; Number of cases is 4, Range of values is 1 to 4
 13717                           ; switch strategies available:
 13718                           ; Name         Instructions Cycles
 13719                           ; simple_byte           13     7 (average)
 13720                           ; direct_byte           17     9 (fixed)
 13721                           ; jumptable            263     9 (fixed)
 13722                           ;	Chosen strategy is simple_byte
 13723  1401  0821               	movf	??_I2C1_DO_RX+1,w
 13724  1402  3A01               	xorlw	1	; case 1
 13725  1403  1903               	skipnz
 13726  1404  2BEB               	goto	l4139
 13727  1405  3A03               	xorlw	3	; case 2
 13728  1406  1903               	skipnz
 13729  1407  2BE8               	goto	l4135
 13730  1408  3A01               	xorlw	1	; case 3
 13731  1409  1903               	skipnz
 13732  140A  2BE8               	goto	l4135
 13733  140B  3A07               	xorlw	7	; case 4
 13734  140C  1903               	skipnz
 13735  140D  2BEB               	goto	l4139
 13736  140E  2BEB               	goto	l4139
 13737  140F  0008               	return
 13738  1410                     __end_of_I2C1_DO_RX:	
 13739                           
 13740                           	psect	text51
 13741  14FF                     __ptext51:	
 13742 ;; *************** function _I2C1_DO_TX *****************
 13743 ;; Defined at:
 13744 ;;		line 354 in file "mcc_generated_files/i2c1_master.c"
 13745 ;; Parameters:    Size  Location     Type
 13746 ;;		None
 13747 ;; Auto vars:     Size  Location     Type
 13748 ;;		None
 13749 ;; Return value:  Size  Location     Type
 13750 ;;                  1    wreg      enum E7150
 13751 ;; Registers used:
 13752 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13753 ;; Tracked objects:
 13754 ;;		On entry : 0/0
 13755 ;;		On exit  : 0/0
 13756 ;;		Unchanged: 0/0
 13757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13760 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13761 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13762 ;;Total ram usage:        3 bytes
 13763 ;; Hardware stack levels used:    1
 13764 ;; Hardware stack levels required when called:    7
 13765 ;; This function calls:
 13766 ;;		Absolute function
 13767 ;;		_I2C1_CallbackReturnReset
 13768 ;;		_I2C1_CallbackReturnStop
 13769 ;;		_I2C1_DO_SEND_RESTART_READ
 13770 ;;		_I2C1_DO_SEND_RESTART_WRITE
 13771 ;;		_I2C1_DO_SEND_STOP
 13772 ;;		_I2C1_MasterIsNack
 13773 ;;		_I2C1_MasterSendTxData
 13774 ;;		_rd1RegCompleteHandler
 13775 ;;		_rd2RegCompleteHandler
 13776 ;;		_rdBlkRegCompleteHandler
 13777 ;;		_wr1RegCompleteHandler
 13778 ;;		_wr2RegCompleteHandler
 13779 ;; This function is called by:
 13780 ;;		_I2C1_MasterFsm
 13781 ;; This function uses a non-reentrant model
 13782 ;;
 13783                           
 13784                           
 13785                           ;psect for function _I2C1_DO_TX
 13786  14FF                     _I2C1_DO_TX:	
 13787                           
 13788                           ;mcc_generated_files/i2c1_master.c: 356:     if(I2C1_MasterIsNack())
 13789                           
 13790                           ;incstack = 0
 13791                           ; Regs used in _I2C1_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13792  14FF  319E  26B1  3194   	fcall	_I2C1_MasterIsNack
 13793  1502  3A00               	xorlw	0
 13794  1503  1D03               	btfss	3,2
 13795  1504  2D0F               	goto	l4105
 13796  1505  2D35               	goto	l607
 13797  1506                     l4091:	
 13798                           
 13799                           ;mcc_generated_files/i2c1_master.c: 361:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 13800  1506  319E  2657         	fcall	_I2C1_DO_SEND_RESTART_READ
 13801  1508  0008               	return
 13802  1509                     l4095:	
 13803                           
 13804                           ;mcc_generated_files/i2c1_master.c: 363:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 13805  1509  319E  265B         	fcall	_I2C1_DO_SEND_RESTART_WRITE
 13806  150B  0008               	return
 13807  150C                     l4099:	
 13808                           
 13809                           ;mcc_generated_files/i2c1_master.c: 367:                 return I2C1_DO_SEND_STOP();
 13810  150C  319E  2663         	fcall	_I2C1_DO_SEND_STOP
 13811  150E  0008               	return
 13812  150F                     l4105:	
 13813  150F  0023               	movlb	3	; select bank3
 13814  1510  082F               	movf	(low ((_I2C1_Status| (0+256)+15)))^(0+128),w
 13815  1511  0020               	movlb	0	; select bank0
 13816  1512  00A0               	movwf	??_I2C1_DO_TX
 13817  1513  0820               	movf	??_I2C1_DO_TX,w
 13818  1514  00FA               	movwf	I2C1_CallbackReturnReset@funPtr
 13819  1515  3006               	movlw	6
 13820  1516  3EA0               	addlw	(low (_I2C1_Status| (0+256)))& (0+255)
 13821  1517  0086               	movwf	6
 13822  1518  3001               	movlw	1	; select bank3/4
 13823  1519  0087               	movwf	7
 13824  151A  3F41               	moviw [1]fsr1
 13825  151B  008A               	movwf	10
 13826  151C  3F40               	moviw [0]fsr1
 13827  151D  000A               	callw
 13828  151E  3194               	pagesel	$
 13829  151F  0020               	movlb	0	; select bank0
 13830  1520  00A1               	movwf	??_I2C1_DO_TX+1
 13831  1521  01A2               	clrf	??_I2C1_DO_TX+2
 13832                           
 13833                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13834                           ; Switch size 1, requested type "simple"
 13835                           ; Number of cases is 1, Range of values is 0 to 0
 13836                           ; switch strategies available:
 13837                           ; Name         Instructions Cycles
 13838                           ; simple_byte            4     3 (average)
 13839                           ; direct_byte            8     6 (fixed)
 13840                           ; jumptable            260     6 (fixed)
 13841                           ;	Chosen strategy is simple_byte
 13842  1522  0822               	movf	??_I2C1_DO_TX+2,w
 13843  1523  3A00               	xorlw	0	; case 0
 13844  1524  1903               	skipnz
 13845  1525  2D27               	goto	l6827
 13846  1526  2D0C               	goto	l4099
 13847  1527                     l6827:	
 13848                           
 13849                           ; Switch size 1, requested type "simple"
 13850                           ; Number of cases is 4, Range of values is 1 to 4
 13851                           ; switch strategies available:
 13852                           ; Name         Instructions Cycles
 13853                           ; simple_byte           13     7 (average)
 13854                           ; direct_byte           17     9 (fixed)
 13855                           ; jumptable            263     9 (fixed)
 13856                           ;	Chosen strategy is simple_byte
 13857  1527  0821               	movf	??_I2C1_DO_TX+1,w
 13858  1528  3A01               	xorlw	1	; case 1
 13859  1529  1903               	skipnz
 13860  152A  2D0C               	goto	l4099
 13861  152B  3A03               	xorlw	3	; case 2
 13862  152C  1903               	skipnz
 13863  152D  2D06               	goto	l4091
 13864  152E  3A01               	xorlw	1	; case 3
 13865  152F  1903               	skipnz
 13866  1530  2D09               	goto	l4095
 13867  1531  3A07               	xorlw	7	; case 4
 13868  1532  1903               	skipnz
 13869  1533  2D0C               	goto	l4099
 13870  1534  2D0C               	goto	l4099
 13871  1535                     l607:	
 13872                           ;mcc_generated_files/i2c1_master.c: 370:     else
 13873                           
 13874                           
 13875                           ;mcc_generated_files/i2c1_master.c: 371:     {;mcc_generated_files/i2c1_master.c: 372:  
      +                                 I2C1_Status.addressNackCheck = 0;
 13876  1535  0023               	movlb	3	; select bank3
 13877  1536  103C               	bcf	(_I2C1_Status^(0+384)+28),0
 13878                           
 13879                           ;mcc_generated_files/i2c1_master.c: 373:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 13880  1537  3017               	movlw	23
 13881  1538  3EA0               	addlw	(low (_I2C1_Status| (0+256)))& (0+255)
 13882  1539  0086               	movwf	6
 13883  153A  3001               	movlw	1	; select bank3/4
 13884  153B  0087               	movwf	7
 13885  153C  3F40               	moviw [0]fsr1
 13886  153D  0084               	movwf	4
 13887  153E  0185               	clrf	5
 13888  153F  0A81               	incf	1,f
 13889  1540  0800               	movf	0,w
 13890  1541  319E  267F  3194   	fcall	_I2C1_MasterSendTxData
 13891                           
 13892                           ;mcc_generated_files/i2c1_master.c: 374:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 13893  1544  3001               	movlw	1
 13894  1545  0023               	movlb	3	; select bank3
 13895  1546  02B8               	subwf	(_I2C1_Status^(0+384)+24),f
 13896  1547  3000               	movlw	0
 13897  1548  3BB9               	subwfb	((_I2C1_Status+1)^(0+384)+24),f
 13898  1549  0838               	movf	(_I2C1_Status^(0+384)+24),w
 13899  154A  0439               	iorwf	((_I2C1_Status+1)^(0+384)+24),w
 13900  154B  1D03               	btfss	3,2
 13901  154C  2D4F               	goto	l4113
 13902  154D  3006               	movlw	6
 13903  154E  0008               	return
 13904  154F                     l4113:	
 13905  154F  3003               	movlw	3
 13906  1550  0008               	return
 13907  1551                     __end_of_I2C1_DO_TX:	
 13908                           
 13909                           	psect	text52
 13910  1EC9                     __ptext52:	
 13911 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 13912 ;; Defined at:
 13913 ;;		line 347 in file "mcc_generated_files/i2c1_master.c"
 13914 ;; Parameters:    Size  Location     Type
 13915 ;;		None
 13916 ;; Auto vars:     Size  Location     Type
 13917 ;;		None
 13918 ;; Return value:  Size  Location     Type
 13919 ;;                  1    wreg      enum E7150
 13920 ;; Registers used:
 13921 ;;		wreg, status,2, status,0, pclath, cstack
 13922 ;; Tracked objects:
 13923 ;;		On entry : 0/0
 13924 ;;		On exit  : 0/0
 13925 ;;		Unchanged: 0/0
 13926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13931 ;;Total ram usage:        0 bytes
 13932 ;; Hardware stack levels used:    1
 13933 ;; Hardware stack levels required when called:    5
 13934 ;; This function calls:
 13935 ;;		_I2C1_MasterSendTxData
 13936 ;; This function is called by:
 13937 ;;		_I2C1_MasterFsm
 13938 ;; This function uses a non-reentrant model
 13939 ;;
 13940                           
 13941                           
 13942                           ;psect for function _I2C1_DO_SEND_ADR_WRITE
 13943  1EC9                     _I2C1_DO_SEND_ADR_WRITE:	
 13944                           
 13945                           ;mcc_generated_files/i2c1_master.c: 349:     I2C1_Status.addressNackCheck = 1;
 13946                           
 13947                           ;incstack = 0
 13948                           ; Regs used in _I2C1_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 13949  1EC9  0023               	movlb	3	; select bank3
 13950  1ECA  143C               	bsf	(_I2C1_Status^(0+384)+28),0
 13951                           
 13952                           ;mcc_generated_files/i2c1_master.c: 350:     I2C1_MasterSendTxData(I2C1_Status.address <
      +                          < 1);
 13953  1ECB  3536               	lslf	(_I2C1_Status^(0+384)+22),w
 13954  1ECC  319E  267F         	fcall	_I2C1_MasterSendTxData
 13955                           
 13956                           ;mcc_generated_files/i2c1_master.c: 351:     return I2C1_TX;
 13957  1ECE  3003               	movlw	3
 13958  1ECF  0008               	return
 13959  1ED0                     __end_of_I2C1_DO_SEND_ADR_WRITE:	
 13960                           
 13961                           	psect	text53
 13962  1EE0                     __ptext53:	
 13963 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 13964 ;; Defined at:
 13965 ;;		line 340 in file "mcc_generated_files/i2c1_master.c"
 13966 ;; Parameters:    Size  Location     Type
 13967 ;;		None
 13968 ;; Auto vars:     Size  Location     Type
 13969 ;;		None
 13970 ;; Return value:  Size  Location     Type
 13971 ;;                  1    wreg      enum E7150
 13972 ;; Registers used:
 13973 ;;		wreg, status,2, status,0, pclath, cstack
 13974 ;; Tracked objects:
 13975 ;;		On entry : 0/0
 13976 ;;		On exit  : 0/0
 13977 ;;		Unchanged: 0/0
 13978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13983 ;;Total ram usage:        0 bytes
 13984 ;; Hardware stack levels used:    1
 13985 ;; Hardware stack levels required when called:    5
 13986 ;; This function calls:
 13987 ;;		_I2C1_MasterSendTxData
 13988 ;; This function is called by:
 13989 ;;		_I2C1_MasterFsm
 13990 ;; This function uses a non-reentrant model
 13991 ;;
 13992                           
 13993                           
 13994                           ;psect for function _I2C1_DO_SEND_ADR_READ
 13995  1EE0                     _I2C1_DO_SEND_ADR_READ:	
 13996                           
 13997                           ;mcc_generated_files/i2c1_master.c: 342:     I2C1_Status.addressNackCheck = 1;
 13998                           
 13999                           ;incstack = 0
 14000                           ; Regs used in _I2C1_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 14001  1EE0  0023               	movlb	3	; select bank3
 14002  1EE1  143C               	bsf	(_I2C1_Status^(0+384)+28),0
 14003                           
 14004                           ;mcc_generated_files/i2c1_master.c: 343:     I2C1_MasterSendTxData(I2C1_Status.address <
      +                          < 1 | 1);
 14005  1EE2  1403               	setc
 14006  1EE3  0D36               	rlf	(_I2C1_Status^(0+384)+22),w
 14007  1EE4  319E  267F         	fcall	_I2C1_MasterSendTxData
 14008                           
 14009                           ;mcc_generated_files/i2c1_master.c: 344:     return I2C1_RCEN;
 14010  1EE6  3005               	movlw	5
 14011  1EE7  0008               	return
 14012  1EE8                     __end_of_I2C1_DO_SEND_ADR_READ:	
 14013                           
 14014                           	psect	text54
 14015  1E84                     __ptext54:	
 14016 ;; *************** function _I2C1_DO_IDLE *****************
 14017 ;; Defined at:
 14018 ;;		line 333 in file "mcc_generated_files/i2c1_master.c"
 14019 ;; Parameters:    Size  Location     Type
 14020 ;;		None
 14021 ;; Auto vars:     Size  Location     Type
 14022 ;;		None
 14023 ;; Return value:  Size  Location     Type
 14024 ;;                  1    wreg      enum E7150
 14025 ;; Registers used:
 14026 ;;		wreg, status,2
 14027 ;; Tracked objects:
 14028 ;;		On entry : 0/0
 14029 ;;		On exit  : 0/0
 14030 ;;		Unchanged: 0/0
 14031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14036 ;;Total ram usage:        0 bytes
 14037 ;; Hardware stack levels used:    1
 14038 ;; Hardware stack levels required when called:    4
 14039 ;; This function calls:
 14040 ;;		Nothing
 14041 ;; This function is called by:
 14042 ;;		_I2C1_MasterFsm
 14043 ;; This function uses a non-reentrant model
 14044 ;;
 14045                           
 14046                           
 14047                           ;psect for function _I2C1_DO_IDLE
 14048  1E84                     _I2C1_DO_IDLE:	
 14049                           
 14050                           ;mcc_generated_files/i2c1_master.c: 335:     I2C1_Status.busy = 0;
 14051                           
 14052                           ;incstack = 0
 14053                           ; Regs used in _I2C1_DO_IDLE: [wreg+status,2]
 14054  1E84  0023               	movlb	3	; select bank3
 14055  1E85  10BC               	bcf	(_I2C1_Status^(0+384)+28),1
 14056                           
 14057                           ;mcc_generated_files/i2c1_master.c: 336:     I2C1_Status.error = I2C1_NOERR;
 14058  1E86  01BB               	clrf	(_I2C1_Status^(0+384)+27)
 14059                           
 14060                           ;mcc_generated_files/i2c1_master.c: 337:     return I2C1_RESET;
 14061  1E87  300E               	movlw	14
 14062  1E88  0008               	return
 14063  1E89                     __end_of_I2C1_DO_IDLE:	
 14064                           
 14065                           	psect	text55
 14066  119A                     __ptext55:	
 14067 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 14068 ;; Defined at:
 14069 ;;		line 409 in file "mcc_generated_files/i2c1_master.c"
 14070 ;; Parameters:    Size  Location     Type
 14071 ;;		None
 14072 ;; Auto vars:     Size  Location     Type
 14073 ;;		None
 14074 ;; Return value:  Size  Location     Type
 14075 ;;                  1    wreg      enum E7150
 14076 ;; Registers used:
 14077 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14078 ;; Tracked objects:
 14079 ;;		On entry : 0/0
 14080 ;;		On exit  : 0/0
 14081 ;;		Unchanged: 0/0
 14082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14085 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14086 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14087 ;;Total ram usage:        3 bytes
 14088 ;; Hardware stack levels used:    1
 14089 ;; Hardware stack levels required when called:    7
 14090 ;; This function calls:
 14091 ;;		Absolute function
 14092 ;;		_I2C1_CallbackReturnReset
 14093 ;;		_I2C1_CallbackReturnStop
 14094 ;;		_I2C1_DO_SEND_RESTART
 14095 ;;		_I2C1_DO_SEND_STOP
 14096 ;;		_I2C1_MasterSetIrq
 14097 ;;		_rd1RegCompleteHandler
 14098 ;;		_rd2RegCompleteHandler
 14099 ;;		_rdBlkRegCompleteHandler
 14100 ;;		_wr1RegCompleteHandler
 14101 ;;		_wr2RegCompleteHandler
 14102 ;; This function is called by:
 14103 ;;		_I2C1_MasterFsm
 14104 ;; This function uses a non-reentrant model
 14105 ;;
 14106                           
 14107                           
 14108                           ;psect for function _I2C1_DO_TX_EMPTY
 14109  119A                     _I2C1_DO_TX_EMPTY:	
 14110                           
 14111                           ;mcc_generated_files/i2c1_master.c: 411:     I2C1_Status.bufferFree = 1;
 14112                           
 14113                           ;incstack = 0
 14114                           ; Regs used in _I2C1_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14115  119A  0023               	movlb	3	; select bank3
 14116  119B  15BC               	bsf	(_I2C1_Status^(0+384)+28),3
 14117                           
 14118                           ;mcc_generated_files/i2c1_master.c: 412:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 14119  119C  29A7               	goto	l4177
 14120  119D                     l4161:	
 14121                           
 14122                           ;mcc_generated_files/i2c1_master.c: 416:             return I2C1_DO_SEND_RESTART();
 14123  119D  319E  265F         	fcall	_I2C1_DO_SEND_RESTART
 14124  119F  0008               	return
 14125  11A0                     l4165:	
 14126                           
 14127                           ;mcc_generated_files/i2c1_master.c: 418:             I2C1_MasterSetIrq();
 14128  11A0  319E  2641         	fcall	_I2C1_MasterSetIrq
 14129                           
 14130                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_TX;
 14131  11A2  3003               	movlw	3
 14132  11A3  0008               	return
 14133  11A4                     l4171:	
 14134                           
 14135                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_DO_SEND_STOP();
 14136  11A4  319E  2663         	fcall	_I2C1_DO_SEND_STOP
 14137  11A6  0008               	return
 14138  11A7                     l4177:	
 14139  11A7  082C               	movf	(low ((_I2C1_Status| (0+256)+12)))^(0+128),w
 14140  11A8  0020               	movlb	0	; select bank0
 14141  11A9  00A0               	movwf	??_I2C1_DO_TX_EMPTY
 14142  11AA  0820               	movf	??_I2C1_DO_TX_EMPTY,w
 14143  11AB  00FA               	movwf	I2C1_CallbackReturnReset@funPtr
 14144  11AC  0023               	movlb	3	; select bank3
 14145  11AD  0821               	movf	(_I2C1_Status+1)^(0+384),w
 14146  11AE  008A               	movwf	10
 14147  11AF  0820               	movf	_I2C1_Status^(0+384),w
 14148  11B0  000A               	callw
 14149  11B1  3191               	pagesel	$
 14150  11B2  0020               	movlb	0	; select bank0
 14151  11B3  00A1               	movwf	??_I2C1_DO_TX_EMPTY+1
 14152  11B4  01A2               	clrf	??_I2C1_DO_TX_EMPTY+2
 14153                           
 14154                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14155                           ; Switch size 1, requested type "simple"
 14156                           ; Number of cases is 1, Range of values is 0 to 0
 14157                           ; switch strategies available:
 14158                           ; Name         Instructions Cycles
 14159                           ; simple_byte            4     3 (average)
 14160                           ; direct_byte            8     6 (fixed)
 14161                           ; jumptable            260     6 (fixed)
 14162                           ;	Chosen strategy is simple_byte
 14163  11B5  0822               	movf	??_I2C1_DO_TX_EMPTY+2,w
 14164  11B6  3A00               	xorlw	0	; case 0
 14165  11B7  1903               	skipnz
 14166  11B8  29BA               	goto	l6829
 14167  11B9  29A4               	goto	l4171
 14168  11BA                     l6829:	
 14169                           
 14170                           ; Switch size 1, requested type "simple"
 14171                           ; Number of cases is 4, Range of values is 1 to 4
 14172                           ; switch strategies available:
 14173                           ; Name         Instructions Cycles
 14174                           ; simple_byte           13     7 (average)
 14175                           ; direct_byte           17     9 (fixed)
 14176                           ; jumptable            263     9 (fixed)
 14177                           ;	Chosen strategy is simple_byte
 14178  11BA  0821               	movf	??_I2C1_DO_TX_EMPTY+1,w
 14179  11BB  3A01               	xorlw	1	; case 1
 14180  11BC  1903               	skipnz
 14181  11BD  29A4               	goto	l4171
 14182  11BE  3A03               	xorlw	3	; case 2
 14183  11BF  1903               	skipnz
 14184  11C0  299D               	goto	l4161
 14185  11C1  3A01               	xorlw	1	; case 3
 14186  11C2  1903               	skipnz
 14187  11C3  299D               	goto	l4161
 14188  11C4  3A07               	xorlw	7	; case 4
 14189  11C5  1903               	skipnz
 14190  11C6  29A0               	goto	l4165
 14191  11C7  29A4               	goto	l4171
 14192  11C8  0008               	return
 14193  11C9                     __end_of_I2C1_DO_TX_EMPTY:	
 14194                           
 14195                           	psect	text56
 14196  1E41                     __ptext56:	
 14197 ;; *************** function _I2C1_MasterSetIrq *****************
 14198 ;; Defined at:
 14199 ;;		line 645 in file "mcc_generated_files/i2c1_master.c"
 14200 ;; Parameters:    Size  Location     Type
 14201 ;;		None
 14202 ;; Auto vars:     Size  Location     Type
 14203 ;;		None
 14204 ;; Return value:  Size  Location     Type
 14205 ;;                  1    wreg      void 
 14206 ;; Registers used:
 14207 ;;		None
 14208 ;; Tracked objects:
 14209 ;;		On entry : 0/0
 14210 ;;		On exit  : 0/0
 14211 ;;		Unchanged: 0/0
 14212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14217 ;;Total ram usage:        0 bytes
 14218 ;; Hardware stack levels used:    1
 14219 ;; Hardware stack levels required when called:    4
 14220 ;; This function calls:
 14221 ;;		Nothing
 14222 ;; This function is called by:
 14223 ;;		_I2C1_DO_TX_EMPTY
 14224 ;; This function uses a non-reentrant model
 14225 ;;
 14226                           
 14227                           
 14228                           ;psect for function _I2C1_MasterSetIrq
 14229  1E41                     _I2C1_MasterSetIrq:	
 14230                           
 14231                           ;mcc_generated_files/i2c1_master.c: 647:     PIR1bits.SSP1IF = 1;
 14232                           
 14233                           ;incstack = 0
 14234                           ; Regs used in _I2C1_MasterSetIrq: []
 14235  1E41  0020               	movlb	0	; select bank0
 14236  1E42  1591               	bsf	17,3	;volatile
 14237  1E43  0008               	return
 14238  1E44                     __end_of_I2C1_MasterSetIrq:	
 14239                           
 14240                           	psect	text57
 14241  1EB1                     __ptext57:	
 14242 ;; *************** function _I2C1_MasterIsNack *****************
 14243 ;; Defined at:
 14244 ;;		line 598 in file "mcc_generated_files/i2c1_master.c"
 14245 ;; Parameters:    Size  Location     Type
 14246 ;;		None
 14247 ;; Auto vars:     Size  Location     Type
 14248 ;;		None
 14249 ;; Return value:  Size  Location     Type
 14250 ;;                  1    wreg      _Bool 
 14251 ;; Registers used:
 14252 ;;		wreg, status,2, status,0
 14253 ;; Tracked objects:
 14254 ;;		On entry : 0/0
 14255 ;;		On exit  : 0/0
 14256 ;;		Unchanged: 0/0
 14257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14262 ;;Total ram usage:        0 bytes
 14263 ;; Hardware stack levels used:    1
 14264 ;; Hardware stack levels required when called:    4
 14265 ;; This function calls:
 14266 ;;		Nothing
 14267 ;; This function is called by:
 14268 ;;		_I2C1_MasterFsm
 14269 ;;		_I2C1_DO_TX
 14270 ;; This function uses a non-reentrant model
 14271 ;;
 14272                           
 14273                           
 14274                           ;psect for function _I2C1_MasterIsNack
 14275  1EB1                     _I2C1_MasterIsNack:	
 14276                           
 14277                           ;mcc_generated_files/i2c1_master.c: 600:     return SSP1CON2bits.ACKSTAT;
 14278                           
 14279                           ;incstack = 0
 14280                           ; Regs used in _I2C1_MasterIsNack: [wreg+status,2+status,0]
 14281  1EB1  0024               	movlb	4	; select bank4
 14282  1EB2  0E16               	swapf	22,w	;volatile
 14283  1EB3  0C89               	rrf	9,f
 14284  1EB4  0C89               	rrf	9,f
 14285  1EB5  3901               	andlw	1
 14286  1EB6  0008               	return
 14287  1EB7                     __end_of_I2C1_MasterIsNack:	
 14288                           
 14289                           	psect	text58
 14290  1E7F                     __ptext58:	
 14291 ;; *************** function _I2C1_MasterSendTxData *****************
 14292 ;; Defined at:
 14293 ;;		line 568 in file "mcc_generated_files/i2c1_master.c"
 14294 ;; Parameters:    Size  Location     Type
 14295 ;;  data            1    wreg     unsigned char 
 14296 ;; Auto vars:     Size  Location     Type
 14297 ;;  data            1    1[COMMON] unsigned char 
 14298 ;; Return value:  Size  Location     Type
 14299 ;;                  1    wreg      void 
 14300 ;; Registers used:
 14301 ;;		wreg
 14302 ;; Tracked objects:
 14303 ;;		On entry : 0/0
 14304 ;;		On exit  : 0/0
 14305 ;;		Unchanged: 0/0
 14306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14308 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14310 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14311 ;;Total ram usage:        1 bytes
 14312 ;; Hardware stack levels used:    1
 14313 ;; Hardware stack levels required when called:    4
 14314 ;; This function calls:
 14315 ;;		Nothing
 14316 ;; This function is called by:
 14317 ;;		_I2C1_DO_SEND_ADR_READ
 14318 ;;		_I2C1_DO_SEND_ADR_WRITE
 14319 ;;		_I2C1_DO_TX
 14320 ;; This function uses a non-reentrant model
 14321 ;;
 14322                           
 14323                           
 14324                           ;psect for function _I2C1_MasterSendTxData
 14325  1E7F                     _I2C1_MasterSendTxData:	
 14326                           
 14327                           ;incstack = 0
 14328                           ; Regs used in _I2C1_MasterSendTxData: [wreg]
 14329                           ;I2C1_MasterSendTxData@data stored from wreg
 14330  1E7F  00F1               	movwf	I2C1_MasterSendTxData@data
 14331                           
 14332                           ;mcc_generated_files/i2c1_master.c: 568: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 569: {;mcc_generated_files/i
      +                          2c1_master.c: 570:     SSP1BUF = data;
 14333  1E80  0871               	movf	I2C1_MasterSendTxData@data,w
 14334  1E81  0024               	movlb	4	; select bank4
 14335  1E82  0091               	movwf	17	;volatile
 14336  1E83  0008               	return
 14337  1E84                     __end_of_I2C1_MasterSendTxData:	
 14338                           
 14339                           	psect	text59
 14340  1E53                     __ptext59:	
 14341 ;; *************** function _I2C1_MasterSendAck *****************
 14342 ;; Defined at:
 14343 ;;		line 603 in file "mcc_generated_files/i2c1_master.c"
 14344 ;; Parameters:    Size  Location     Type
 14345 ;;		None
 14346 ;; Auto vars:     Size  Location     Type
 14347 ;;		None
 14348 ;; Return value:  Size  Location     Type
 14349 ;;                  1    wreg      void 
 14350 ;; Registers used:
 14351 ;;		None
 14352 ;; Tracked objects:
 14353 ;;		On entry : 0/0
 14354 ;;		On exit  : 0/0
 14355 ;;		Unchanged: 0/0
 14356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14361 ;;Total ram usage:        0 bytes
 14362 ;; Hardware stack levels used:    1
 14363 ;; Hardware stack levels required when called:    4
 14364 ;; This function calls:
 14365 ;;		Nothing
 14366 ;; This function is called by:
 14367 ;;		_I2C1_DO_RX
 14368 ;;		_I2C1_DO_RX_ACK
 14369 ;; This function uses a non-reentrant model
 14370 ;;
 14371                           
 14372                           
 14373                           ;psect for function _I2C1_MasterSendAck
 14374  1E53                     _I2C1_MasterSendAck:	
 14375                           
 14376                           ;mcc_generated_files/i2c1_master.c: 605:     SSP1CON2bits.ACKDT = 0;
 14377                           
 14378                           ;incstack = 0
 14379                           ; Regs used in _I2C1_MasterSendAck: []
 14380  1E53  0024               	movlb	4	; select bank4
 14381  1E54  1296               	bcf	22,5	;volatile
 14382                           
 14383                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKEN = 1;
 14384  1E55  1616               	bsf	22,4	;volatile
 14385  1E56  0008               	return
 14386  1E57                     __end_of_I2C1_MasterSendAck:	
 14387                           
 14388                           	psect	text60
 14389  1E3E                     __ptext60:	
 14390 ;; *************** function _I2C1_MasterGetRxData *****************
 14391 ;; Defined at:
 14392 ;;		line 563 in file "mcc_generated_files/i2c1_master.c"
 14393 ;; Parameters:    Size  Location     Type
 14394 ;;		None
 14395 ;; Auto vars:     Size  Location     Type
 14396 ;;		None
 14397 ;; Return value:  Size  Location     Type
 14398 ;;                  1    wreg      unsigned char 
 14399 ;; Registers used:
 14400 ;;		wreg
 14401 ;; Tracked objects:
 14402 ;;		On entry : 0/0
 14403 ;;		On exit  : 0/0
 14404 ;;		Unchanged: 0/0
 14405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14410 ;;Total ram usage:        0 bytes
 14411 ;; Hardware stack levels used:    1
 14412 ;; Hardware stack levels required when called:    4
 14413 ;; This function calls:
 14414 ;;		Nothing
 14415 ;; This function is called by:
 14416 ;;		_I2C1_DO_RX
 14417 ;; This function uses a non-reentrant model
 14418 ;;
 14419                           
 14420                           
 14421                           ;psect for function _I2C1_MasterGetRxData
 14422  1E3E                     _I2C1_MasterGetRxData:	
 14423                           
 14424                           ;mcc_generated_files/i2c1_master.c: 565:     return SSP1BUF;
 14425                           
 14426                           ;incstack = 0
 14427                           ; Regs used in _I2C1_MasterGetRxData: [wreg]
 14428  1E3E  0024               	movlb	4	; select bank4
 14429  1E3F  0811               	movf	17,w	;volatile
 14430  1E40  0008               	return
 14431  1E41                     __end_of_I2C1_MasterGetRxData:	
 14432                           
 14433                           	psect	text61
 14434  1E4F                     __ptext61:	
 14435 ;; *************** function _I2C1_MasterSendNack *****************
 14436 ;; Defined at:
 14437 ;;		line 609 in file "mcc_generated_files/i2c1_master.c"
 14438 ;; Parameters:    Size  Location     Type
 14439 ;;		None
 14440 ;; Auto vars:     Size  Location     Type
 14441 ;;		None
 14442 ;; Return value:  Size  Location     Type
 14443 ;;                  1    wreg      void 
 14444 ;; Registers used:
 14445 ;;		None
 14446 ;; Tracked objects:
 14447 ;;		On entry : 0/0
 14448 ;;		On exit  : 0/0
 14449 ;;		Unchanged: 0/0
 14450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14455 ;;Total ram usage:        0 bytes
 14456 ;; Hardware stack levels used:    1
 14457 ;; Hardware stack levels required when called:    4
 14458 ;; This function calls:
 14459 ;;		Nothing
 14460 ;; This function is called by:
 14461 ;;		_I2C1_DO_RX_NACK_STOP
 14462 ;;		_I2C1_DO_RX_NACK_RESTART
 14463 ;; This function uses a non-reentrant model
 14464 ;;
 14465                           
 14466                           
 14467                           ;psect for function _I2C1_MasterSendNack
 14468  1E4F                     _I2C1_MasterSendNack:	
 14469                           
 14470                           ;mcc_generated_files/i2c1_master.c: 611:     SSP1CON2bits.ACKDT = 1;
 14471                           
 14472                           ;incstack = 0
 14473                           ; Regs used in _I2C1_MasterSendNack: []
 14474  1E4F  0024               	movlb	4	; select bank4
 14475  1E50  1696               	bsf	22,5	;volatile
 14476                           
 14477                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKEN = 1;
 14478  1E51  1616               	bsf	22,4	;volatile
 14479  1E52  0008               	return
 14480  1E53                     __end_of_I2C1_MasterSendNack:	
 14481                           
 14482                           	psect	text62
 14483  1E3B                     __ptext62:	
 14484 ;; *************** function _I2C1_MasterStartRx *****************
 14485 ;; Defined at:
 14486 ;;		line 583 in file "mcc_generated_files/i2c1_master.c"
 14487 ;; Parameters:    Size  Location     Type
 14488 ;;		None
 14489 ;; Auto vars:     Size  Location     Type
 14490 ;;		None
 14491 ;; Return value:  Size  Location     Type
 14492 ;;                  1    wreg      void 
 14493 ;; Registers used:
 14494 ;;		None
 14495 ;; Tracked objects:
 14496 ;;		On entry : 0/0
 14497 ;;		On exit  : 0/0
 14498 ;;		Unchanged: 0/0
 14499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14504 ;;Total ram usage:        0 bytes
 14505 ;; Hardware stack levels used:    1
 14506 ;; Hardware stack levels required when called:    4
 14507 ;; This function calls:
 14508 ;;		Nothing
 14509 ;; This function is called by:
 14510 ;;		_I2C1_DO_RCEN
 14511 ;; This function uses a non-reentrant model
 14512 ;;
 14513                           
 14514                           
 14515                           ;psect for function _I2C1_MasterStartRx
 14516  1E3B                     _I2C1_MasterStartRx:	
 14517                           
 14518                           ;mcc_generated_files/i2c1_master.c: 585:     SSP1CON2bits.RCEN = 1;
 14519                           
 14520                           ;incstack = 0
 14521                           ; Regs used in _I2C1_MasterStartRx: []
 14522  1E3B  0024               	movlb	4	; select bank4
 14523  1E3C  1596               	bsf	22,3	;volatile
 14524  1E3D  0008               	return
 14525  1E3E                     __end_of_I2C1_MasterStartRx:	
 14526                           
 14527                           	psect	text63
 14528  0002                     __ptext63:	
 14529 ;; *************** function _I2C1_CallbackReturnReset *****************
 14530 ;; Defined at:
 14531 ;;		line 525 in file "mcc_generated_files/i2c1_master.c"
 14532 ;; Parameters:    Size  Location     Type
 14533 ;;  funPtr          1   10[COMMON] PTR void 
 14534 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 14535 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 14536 ;; Auto vars:     Size  Location     Type
 14537 ;;		None
 14538 ;; Return value:  Size  Location     Type
 14539 ;;                  1    wreg      enum E358
 14540 ;; Registers used:
 14541 ;;		wreg
 14542 ;; Tracked objects:
 14543 ;;		On entry : 0/0
 14544 ;;		On exit  : 0/0
 14545 ;;		Unchanged: 0/0
 14546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14547 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14550 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14551 ;;Total ram usage:        1 bytes
 14552 ;; Hardware stack levels used:    1
 14553 ;; Hardware stack levels required when called:    4
 14554 ;; This function calls:
 14555 ;;		Nothing
 14556 ;; This function is called by:
 14557 ;;		_I2C1_Open
 14558 ;;		_I2C1_DO_TX
 14559 ;;		_I2C1_DO_RX
 14560 ;;		_I2C1_DO_TX_EMPTY
 14561 ;;		_I2C1_DO_ADDRESS_NACK
 14562 ;;		_I2C1_DO_RX_EMPTY
 14563 ;; This function uses a non-reentrant model
 14564 ;;
 14565                           
 14566                           
 14567                           ;psect for function _I2C1_CallbackReturnReset
 14568  0002                     _I2C1_CallbackReturnReset:	
 14569                           
 14570                           ;mcc_generated_files/i2c1_master.c: 525: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 526: {;mcc_generated_files/i2c1_master.c: 5
      +                          27:     return I2C1_RESET_LINK;
 14571                           
 14572                           ;incstack = 0
 14573                           ; Regs used in _I2C1_CallbackReturnReset: [wreg]
 14574  0002  3005               	movlw	5
 14575  0003  0008               	return
 14576  0004                     __end_of_I2C1_CallbackReturnReset:	
 14577                           
 14578                           	psect	text64
 14579  1E24                     __ptext64:	
 14580 ;; *************** function _I2C1_CallbackReturnStop *****************
 14581 ;; Defined at:
 14582 ;;		line 520 in file "mcc_generated_files/i2c1_master.c"
 14583 ;; Parameters:    Size  Location     Type
 14584 ;;  funPtr          1   10[COMMON] PTR void 
 14585 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 14586 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 14587 ;; Auto vars:     Size  Location     Type
 14588 ;;		None
 14589 ;; Return value:  Size  Location     Type
 14590 ;;                  1    wreg      enum E358
 14591 ;; Registers used:
 14592 ;;		wreg
 14593 ;; Tracked objects:
 14594 ;;		On entry : 0/0
 14595 ;;		On exit  : 0/0
 14596 ;;		Unchanged: 0/0
 14597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14598 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14601 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14602 ;;Total ram usage:        1 bytes
 14603 ;; Hardware stack levels used:    1
 14604 ;; Hardware stack levels required when called:    4
 14605 ;; This function calls:
 14606 ;;		Nothing
 14607 ;; This function is called by:
 14608 ;;		_I2C1_Open
 14609 ;;		_I2C1_SetCallback
 14610 ;;		_I2C1_DO_TX
 14611 ;;		_I2C1_DO_RX
 14612 ;;		_I2C1_DO_TX_EMPTY
 14613 ;;		_I2C1_DO_ADDRESS_NACK
 14614 ;;		_I2C1_DO_RX_EMPTY
 14615 ;; This function uses a non-reentrant model
 14616 ;;
 14617                           
 14618                           
 14619                           ;psect for function _I2C1_CallbackReturnStop
 14620  1E24                     _I2C1_CallbackReturnStop:	
 14621                           
 14622                           ;mcc_generated_files/i2c1_master.c: 520: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 521: {;mcc_generated_files/i2c1_master.c: 52
      +                          2:     return I2C1_STOP;
 14623                           
 14624                           ;incstack = 0
 14625                           ; Regs used in _I2C1_CallbackReturnStop: [wreg]
 14626  1E24  3001               	movlw	1
 14627  1E25  0008               	return
 14628  1E26                     __end_of_I2C1_CallbackReturnStop:	
 14629                           
 14630                           	psect	text65
 14631  1F8B                     __ptext65:	
 14632 ;; *************** function _rdBlkRegCompleteHandler *****************
 14633 ;; Defined at:
 14634 ;;		line 170 in file "mcc_generated_files/examples/i2c1_master_example.c"
 14635 ;; Parameters:    Size  Location     Type
 14636 ;;  ptr             1   10[COMMON] PTR void 
 14637 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 14638 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 14639 ;; Auto vars:     Size  Location     Type
 14640 ;;		None
 14641 ;; Return value:  Size  Location     Type
 14642 ;;                  1    wreg      enum E358
 14643 ;; Registers used:
 14644 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14645 ;; Tracked objects:
 14646 ;;		On entry : 0/0
 14647 ;;		On exit  : 0/0
 14648 ;;		Unchanged: 0/0
 14649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14650 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14653 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14654 ;;Total ram usage:        1 bytes
 14655 ;; Hardware stack levels used:    1
 14656 ;; Hardware stack levels required when called:    6
 14657 ;; This function calls:
 14658 ;;		_I2C1_SetBuffer
 14659 ;;		_I2C1_SetDataCompleteCallback
 14660 ;; This function is called by:
 14661 ;;		_I2C1_ReadDataBlock
 14662 ;;		_I2C1_DO_TX
 14663 ;;		_I2C1_DO_RX
 14664 ;;		_I2C1_DO_TX_EMPTY
 14665 ;;		_I2C1_DO_ADDRESS_NACK
 14666 ;;		_I2C1_DO_RX_EMPTY
 14667 ;; This function uses a non-reentrant model
 14668 ;;
 14669                           
 14670                           
 14671                           ;psect for function _rdBlkRegCompleteHandler
 14672  1F8B                     _rdBlkRegCompleteHandler:	
 14673                           
 14674                           ;mcc_generated_files/examples/i2c1_master_example.c: 170: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 171: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 14675                           
 14676                           ;incstack = 0
 14677                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 14678  1F8B  087A               	movf	rdBlkRegCompleteHandler@ptr,w
 14679  1F8C  0086               	movwf	6
 14680  1F8D  0187               	clrf	7
 14681  1F8E  3F40               	moviw [0]fsr1
 14682  1F8F  00F1               	movwf	I2C1_SetBuffer@bufferSize
 14683  1F90  3F41               	moviw [1]fsr1
 14684  1F91  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 14685  1F92  087A               	movf	rdBlkRegCompleteHandler@ptr,w
 14686  1F93  3E02               	addlw	2
 14687  1F94  0086               	movwf	6
 14688  1F95  0187               	clrf	7
 14689  1F96  0801               	movf	1,w
 14690  1F97  319F  273C  319F   	fcall	_I2C1_SetBuffer
 14691                           
 14692                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 14693  1F9A  3000               	movlw	0
 14694  1F9B  00F6               	movwf	I2C1_SetDataCompleteCallback@cb
 14695  1F9C  00F7               	movwf	I2C1_SetDataCompleteCallback@cb+1
 14696  1F9D  01F8               	clrf	I2C1_SetDataCompleteCallback@ptr
 14697  1F9E  319F  2724         	fcall	_I2C1_SetDataCompleteCallback
 14698                           
 14699                           ;mcc_generated_files/examples/i2c1_master_example.c: 174:     return I2C1_RESTART_READ;
 14700  1FA0  3002               	movlw	2
 14701  1FA1  0008               	return
 14702  1FA2                     __end_of_rdBlkRegCompleteHandler:	
 14703                           
 14704                           	psect	text66
 14705  1000                     __ptext66:	
 14706 ;; *************** function _wr1RegCompleteHandler *****************
 14707 ;; Defined at:
 14708 ;;		line 156 in file "mcc_generated_files/examples/i2c1_master_example.c"
 14709 ;; Parameters:    Size  Location     Type
 14710 ;;  ptr             1   10[COMMON] PTR void 
 14711 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 14712 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 14713 ;; Auto vars:     Size  Location     Type
 14714 ;;		None
 14715 ;; Return value:  Size  Location     Type
 14716 ;;                  1    wreg      enum E358
 14717 ;; Registers used:
 14718 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14719 ;; Tracked objects:
 14720 ;;		On entry : 0/0
 14721 ;;		On exit  : 0/0
 14722 ;;		Unchanged: 0/0
 14723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14724 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14727 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14728 ;;Total ram usage:        1 bytes
 14729 ;; Hardware stack levels used:    1
 14730 ;; Hardware stack levels required when called:    6
 14731 ;; This function calls:
 14732 ;;		_I2C1_SetBuffer
 14733 ;;		_I2C1_SetDataCompleteCallback
 14734 ;; This function is called by:
 14735 ;;		_I2C1_Write1ByteRegister
 14736 ;;		_I2C1_DO_TX
 14737 ;;		_I2C1_DO_RX
 14738 ;;		_I2C1_DO_TX_EMPTY
 14739 ;;		_I2C1_DO_ADDRESS_NACK
 14740 ;;		_I2C1_DO_RX_EMPTY
 14741 ;; This function uses a non-reentrant model
 14742 ;;
 14743                           
 14744                           
 14745                           ;psect for function _wr1RegCompleteHandler
 14746  1000                     _wr1RegCompleteHandler:	
 14747                           
 14748                           ;mcc_generated_files/examples/i2c1_master_example.c: 156: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 157: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetBuffer(ptr,1);
 14749                           
 14750                           ;incstack = 0
 14751                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 14752  1000  3001               	movlw	1
 14753  1001  00F1               	movwf	I2C1_SetBuffer@bufferSize
 14754  1002  3000               	movlw	0
 14755  1003  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 14756  1004  087A               	movf	wr1RegCompleteHandler@ptr,w
 14757  1005  319F  273C  3190   	fcall	_I2C1_SetBuffer
 14758                           
 14759                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 14760  1008  3000               	movlw	0
 14761  1009  00F6               	movwf	I2C1_SetDataCompleteCallback@cb
 14762  100A  00F7               	movwf	I2C1_SetDataCompleteCallback@cb+1
 14763  100B  01F8               	clrf	I2C1_SetDataCompleteCallback@ptr
 14764  100C  319F  2724         	fcall	_I2C1_SetDataCompleteCallback
 14765                           
 14766                           ;mcc_generated_files/examples/i2c1_master_example.c: 160:     return I2C1_CONTINUE;
 14767  100E  3004               	movlw	4
 14768  100F  0008               	return
 14769  1010                     __end_of_wr1RegCompleteHandler:	
 14770                           
 14771                           	psect	text67
 14772  1F6A                     __ptext67:	
 14773 ;; *************** function _rd2RegCompleteHandler *****************
 14774 ;; Defined at:
 14775 ;;		line 149 in file "mcc_generated_files/examples/i2c1_master_example.c"
 14776 ;; Parameters:    Size  Location     Type
 14777 ;;  ptr             1   10[COMMON] PTR void 
 14778 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 14779 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 14780 ;; Auto vars:     Size  Location     Type
 14781 ;;		None
 14782 ;; Return value:  Size  Location     Type
 14783 ;;                  1    wreg      enum E358
 14784 ;; Registers used:
 14785 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14786 ;; Tracked objects:
 14787 ;;		On entry : 0/0
 14788 ;;		On exit  : 0/0
 14789 ;;		Unchanged: 0/0
 14790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14791 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14794 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14795 ;;Total ram usage:        1 bytes
 14796 ;; Hardware stack levels used:    1
 14797 ;; Hardware stack levels required when called:    6
 14798 ;; This function calls:
 14799 ;;		_I2C1_SetBuffer
 14800 ;;		_I2C1_SetDataCompleteCallback
 14801 ;; This function is called by:
 14802 ;;		_I2C1_Read2ByteRegister
 14803 ;;		_I2C1_DO_TX
 14804 ;;		_I2C1_DO_RX
 14805 ;;		_I2C1_DO_TX_EMPTY
 14806 ;;		_I2C1_DO_ADDRESS_NACK
 14807 ;;		_I2C1_DO_RX_EMPTY
 14808 ;; This function uses a non-reentrant model
 14809 ;;
 14810                           
 14811                           
 14812                           ;psect for function _rd2RegCompleteHandler
 14813  1F6A                     _rd2RegCompleteHandler:	
 14814                           
 14815                           ;mcc_generated_files/examples/i2c1_master_example.c: 149: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 150: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetBuffer(ptr,2);
 14816                           
 14817                           ;incstack = 0
 14818                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 14819  1F6A  3002               	movlw	2
 14820  1F6B  00F1               	movwf	I2C1_SetBuffer@bufferSize
 14821  1F6C  3000               	movlw	0
 14822  1F6D  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 14823  1F6E  087A               	movf	rd2RegCompleteHandler@ptr,w
 14824  1F6F  319F  273C  319F   	fcall	_I2C1_SetBuffer
 14825                           
 14826                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 14827  1F72  3000               	movlw	0
 14828  1F73  00F6               	movwf	I2C1_SetDataCompleteCallback@cb
 14829  1F74  00F7               	movwf	I2C1_SetDataCompleteCallback@cb+1
 14830  1F75  01F8               	clrf	I2C1_SetDataCompleteCallback@ptr
 14831  1F76  319F  2724         	fcall	_I2C1_SetDataCompleteCallback
 14832                           
 14833                           ;mcc_generated_files/examples/i2c1_master_example.c: 153:     return I2C1_RESTART_READ;
 14834  1F78  3002               	movlw	2
 14835  1F79  0008               	return
 14836  1F7A                     __end_of_rd2RegCompleteHandler:	
 14837                           
 14838                           	psect	text68
 14839  1F5A                     __ptext68:	
 14840 ;; *************** function _rd1RegCompleteHandler *****************
 14841 ;; Defined at:
 14842 ;;		line 142 in file "mcc_generated_files/examples/i2c1_master_example.c"
 14843 ;; Parameters:    Size  Location     Type
 14844 ;;  ptr             1   10[COMMON] PTR void 
 14845 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 14846 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 14847 ;; Auto vars:     Size  Location     Type
 14848 ;;		None
 14849 ;; Return value:  Size  Location     Type
 14850 ;;                  1    wreg      enum E358
 14851 ;; Registers used:
 14852 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14853 ;; Tracked objects:
 14854 ;;		On entry : 0/0
 14855 ;;		On exit  : 0/0
 14856 ;;		Unchanged: 0/0
 14857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14858 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14861 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14862 ;;Total ram usage:        1 bytes
 14863 ;; Hardware stack levels used:    1
 14864 ;; Hardware stack levels required when called:    6
 14865 ;; This function calls:
 14866 ;;		_I2C1_SetBuffer
 14867 ;;		_I2C1_SetDataCompleteCallback
 14868 ;; This function is called by:
 14869 ;;		_I2C1_Read1ByteRegister
 14870 ;;		_I2C1_DO_TX
 14871 ;;		_I2C1_DO_RX
 14872 ;;		_I2C1_DO_TX_EMPTY
 14873 ;;		_I2C1_DO_ADDRESS_NACK
 14874 ;;		_I2C1_DO_RX_EMPTY
 14875 ;; This function uses a non-reentrant model
 14876 ;;
 14877                           
 14878                           
 14879                           ;psect for function _rd1RegCompleteHandler
 14880  1F5A                     _rd1RegCompleteHandler:	
 14881                           
 14882                           ;mcc_generated_files/examples/i2c1_master_example.c: 142: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 143: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 144:     I2C1_SetBuffer(ptr,1);
 14883                           
 14884                           ;incstack = 0
 14885                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 14886  1F5A  3001               	movlw	1
 14887  1F5B  00F1               	movwf	I2C1_SetBuffer@bufferSize
 14888  1F5C  3000               	movlw	0
 14889  1F5D  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 14890  1F5E  087A               	movf	rd1RegCompleteHandler@ptr,w
 14891  1F5F  319F  273C  319F   	fcall	_I2C1_SetBuffer
 14892                           
 14893                           ;mcc_generated_files/examples/i2c1_master_example.c: 145:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 14894  1F62  3000               	movlw	0
 14895  1F63  00F6               	movwf	I2C1_SetDataCompleteCallback@cb
 14896  1F64  00F7               	movwf	I2C1_SetDataCompleteCallback@cb+1
 14897  1F65  01F8               	clrf	I2C1_SetDataCompleteCallback@ptr
 14898  1F66  319F  2724         	fcall	_I2C1_SetDataCompleteCallback
 14899                           
 14900                           ;mcc_generated_files/examples/i2c1_master_example.c: 146:     return I2C1_RESTART_READ;
 14901  1F68  3002               	movlw	2
 14902  1F69  0008               	return
 14903  1F6A                     __end_of_rd1RegCompleteHandler:	
 14904                           
 14905                           	psect	text69
 14906  1F4A                     __ptext69:	
 14907 ;; *************** function _wr2RegCompleteHandler *****************
 14908 ;; Defined at:
 14909 ;;		line 163 in file "mcc_generated_files/examples/i2c1_master_example.c"
 14910 ;; Parameters:    Size  Location     Type
 14911 ;;  ptr             1   10[COMMON] PTR void 
 14912 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 14913 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 14914 ;; Auto vars:     Size  Location     Type
 14915 ;;		None
 14916 ;; Return value:  Size  Location     Type
 14917 ;;                  1    wreg      enum E358
 14918 ;; Registers used:
 14919 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14920 ;; Tracked objects:
 14921 ;;		On entry : 0/0
 14922 ;;		On exit  : 0/0
 14923 ;;		Unchanged: 0/0
 14924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14925 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14928 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14929 ;;Total ram usage:        1 bytes
 14930 ;; Hardware stack levels used:    1
 14931 ;; Hardware stack levels required when called:    6
 14932 ;; This function calls:
 14933 ;;		_I2C1_SetBuffer
 14934 ;;		_I2C1_SetDataCompleteCallback
 14935 ;; This function is called by:
 14936 ;;		_I2C1_Write2ByteRegister
 14937 ;;		_I2C1_DO_TX
 14938 ;;		_I2C1_DO_RX
 14939 ;;		_I2C1_DO_TX_EMPTY
 14940 ;;		_I2C1_DO_ADDRESS_NACK
 14941 ;;		_I2C1_DO_RX_EMPTY
 14942 ;; This function uses a non-reentrant model
 14943 ;;
 14944                           
 14945                           
 14946                           ;psect for function _wr2RegCompleteHandler
 14947  1F4A                     _wr2RegCompleteHandler:	
 14948                           
 14949                           ;mcc_generated_files/examples/i2c1_master_example.c: 163: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 164: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetBuffer(ptr,2);
 14950                           
 14951                           ;incstack = 0
 14952                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 14953  1F4A  3002               	movlw	2
 14954  1F4B  00F1               	movwf	I2C1_SetBuffer@bufferSize
 14955  1F4C  3000               	movlw	0
 14956  1F4D  00F2               	movwf	I2C1_SetBuffer@bufferSize+1
 14957  1F4E  087A               	movf	wr2RegCompleteHandler@ptr,w
 14958  1F4F  319F  273C  319F   	fcall	_I2C1_SetBuffer
 14959                           
 14960                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 14961  1F52  3000               	movlw	0
 14962  1F53  00F6               	movwf	I2C1_SetDataCompleteCallback@cb
 14963  1F54  00F7               	movwf	I2C1_SetDataCompleteCallback@cb+1
 14964  1F55  01F8               	clrf	I2C1_SetDataCompleteCallback@ptr
 14965  1F56  319F  2724         	fcall	_I2C1_SetDataCompleteCallback
 14966                           
 14967                           ;mcc_generated_files/examples/i2c1_master_example.c: 167:     return I2C1_CONTINUE;
 14968  1F58  3004               	movlw	4
 14969  1F59  0008               	return
 14970  1F5A                     __end_of_wr2RegCompleteHandler:	
 14971                           
 14972                           	psect	text70
 14973  1F24                     __ptext70:	
 14974 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 14975 ;; Defined at:
 14976 ;;		line 273 in file "mcc_generated_files/i2c1_master.c"
 14977 ;; Parameters:    Size  Location     Type
 14978 ;;  cb              2    6[COMMON] PTR FTN(PTR void ,)enum 
 14979 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 14980 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 14981 ;;  ptr             1    8[COMMON] PTR void 
 14982 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 14983 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 14984 ;; Auto vars:     Size  Location     Type
 14985 ;;		None
 14986 ;; Return value:  Size  Location     Type
 14987 ;;                  1    wreg      void 
 14988 ;; Registers used:
 14989 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14990 ;; Tracked objects:
 14991 ;;		On entry : 0/0
 14992 ;;		On exit  : 0/0
 14993 ;;		Unchanged: 0/0
 14994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14995 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14997 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14998 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14999 ;;Total ram usage:        4 bytes
 15000 ;; Hardware stack levels used:    1
 15001 ;; Hardware stack levels required when called:    5
 15002 ;; This function calls:
 15003 ;;		_I2C1_SetCallback
 15004 ;; This function is called by:
 15005 ;;		_I2C1_Read1ByteRegister
 15006 ;;		_rd1RegCompleteHandler
 15007 ;;		_rd2RegCompleteHandler
 15008 ;;		_wr1RegCompleteHandler
 15009 ;;		_wr2RegCompleteHandler
 15010 ;;		_rdBlkRegCompleteHandler
 15011 ;;		_I2C1_Read2ByteRegister
 15012 ;;		_I2C1_Write1ByteRegister
 15013 ;;		_I2C1_Write2ByteRegister
 15014 ;;		_I2C1_ReadDataBlock
 15015 ;; This function uses a non-reentrant model
 15016 ;;
 15017                           
 15018                           
 15019                           ;psect for function _I2C1_SetDataCompleteCallback
 15020  1F24                     _I2C1_SetDataCompleteCallback:	
 15021                           
 15022                           ;mcc_generated_files/i2c1_master.c: 273: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 274: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 275:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 15023                           
 15024                           ;incstack = 0
 15025                           ; Regs used in _I2C1_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 15026  1F24  0877               	movf	I2C1_SetDataCompleteCallback@cb+1,w
 15027  1F25  00F2               	movwf	I2C1_SetCallback@cb+1
 15028  1F26  0876               	movf	I2C1_SetDataCompleteCallback@cb,w
 15029  1F27  00F1               	movwf	I2C1_SetCallback@cb
 15030  1F28  0878               	movf	I2C1_SetDataCompleteCallback@ptr,w
 15031  1F29  00F9               	movwf	??_I2C1_SetDataCompleteCallback
 15032  1F2A  0879               	movf	??_I2C1_SetDataCompleteCallback,w
 15033  1F2B  00F3               	movwf	I2C1_SetCallback@ptr
 15034  1F2C  3000               	movlw	0
 15035  1F2D  3191  2148         	fcall	_I2C1_SetCallback
 15036  1F2F  0008               	return
 15037  1F30                     __end_of_I2C1_SetDataCompleteCallback:	
 15038                           
 15039                           	psect	text71
 15040  1148                     __ptext71:	
 15041 ;; *************** function _I2C1_SetCallback *****************
 15042 ;; Defined at:
 15043 ;;		line 298 in file "mcc_generated_files/i2c1_master.c"
 15044 ;; Parameters:    Size  Location     Type
 15045 ;;  idx             1    wreg     enum E7168
 15046 ;;  cb              2    1[COMMON] PTR FTN(PTR void ,)enum 
 15047 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 15048 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 15049 ;;  ptr             1    3[COMMON] PTR void 
 15050 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 15051 ;;		 -> NULL(0), I2C1_Read1ByteRegister@returnValue(1), 
 15052 ;; Auto vars:     Size  Location     Type
 15053 ;;  idx             1    5[COMMON] enum E7168
 15054 ;; Return value:  Size  Location     Type
 15055 ;;                  1    wreg      void 
 15056 ;; Registers used:
 15057 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15058 ;; Tracked objects:
 15059 ;;		On entry : 0/0
 15060 ;;		On exit  : 0/0
 15061 ;;		Unchanged: 0/0
 15062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15063 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15064 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15065 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15066 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15067 ;;Total ram usage:        5 bytes
 15068 ;; Hardware stack levels used:    1
 15069 ;; Hardware stack levels required when called:    4
 15070 ;; This function calls:
 15071 ;;		Nothing
 15072 ;; This function is called by:
 15073 ;;		_I2C1_SetDataCompleteCallback
 15074 ;;		_I2C1_SetAddressNackCallback
 15075 ;;		_I2C1_SetWriteCollisionCallback
 15076 ;;		_I2C1_SetDataNackCallback
 15077 ;;		_I2C1_SetTimeoutCallback
 15078 ;; This function uses a non-reentrant model
 15079 ;;
 15080                           
 15081                           
 15082                           ;psect for function _I2C1_SetCallback
 15083  1148                     _I2C1_SetCallback:	
 15084                           
 15085                           ;incstack = 0
 15086                           ; Regs used in _I2C1_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 15087                           ;I2C1_SetCallback@idx stored from wreg
 15088  1148  00F5               	movwf	I2C1_SetCallback@idx
 15089                           
 15090                           ;mcc_generated_files/i2c1_master.c: 298: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 299: {;mcc_gen
      +                          erated_files/i2c1_master.c: 300:     if(cb)
 15091  1149  0871               	movf	I2C1_SetCallback@cb,w
 15092  114A  0472               	iorwf	I2C1_SetCallback@cb+1,w
 15093  114B  1903               	btfsc	3,2
 15094  114C  2960               	goto	l3931
 15095                           
 15096                           ;mcc_generated_files/i2c1_master.c: 301:     {;mcc_generated_files/i2c1_master.c: 302:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 15097  114D  3575               	lslf	I2C1_SetCallback@idx,w
 15098  114E  3EA0               	addlw	(low (_I2C1_Status| (0+256)))& (0+255)
 15099  114F  0086               	movwf	6
 15100  1150  3001               	movlw	1	; select bank3/4
 15101  1151  0087               	movwf	7
 15102  1152  0871               	movf	I2C1_SetCallback@cb,w
 15103  1153  3FC0               	movwi [0]fsr1
 15104  1154  0872               	movf	I2C1_SetCallback@cb+1,w
 15105  1155  3FC1               	movwi [1]fsr1
 15106                           
 15107                           ;mcc_generated_files/i2c1_master.c: 303:         I2C1_Status.callbackPayload[idx] = ptr;
 15108  1156  0873               	movf	I2C1_SetCallback@ptr,w
 15109  1157  00F4               	movwf	??_I2C1_SetCallback
 15110  1158  0875               	movf	I2C1_SetCallback@idx,w
 15111  1159  3EAC               	addlw	(low ((_I2C1_Status| (0+256)+12)))& (0+255)
 15112  115A  0086               	movwf	6
 15113  115B  3001               	movlw	1	; select bank3/4
 15114  115C  0087               	movwf	7
 15115  115D  0874               	movf	??_I2C1_SetCallback,w
 15116  115E  0081               	movwf	1
 15117                           
 15118                           ;mcc_generated_files/i2c1_master.c: 304:     }
 15119  115F  0008               	return
 15120  1160                     l3931:	
 15121                           
 15122                           ;mcc_generated_files/i2c1_master.c: 306:     {;mcc_generated_files/i2c1_master.c: 307:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 15123  1160  3575               	lslf	I2C1_SetCallback@idx,w
 15124  1161  3EA0               	addlw	(low (_I2C1_Status| (0+256)))& (0+255)
 15125  1162  0086               	movwf	6
 15126  1163  3001               	movlw	1	; select bank3/4
 15127  1164  0087               	movwf	7
 15128  1165  3024               	movlw	low _I2C1_CallbackReturnStop
 15129  1166  3FC0               	movwi [0]fsr1
 15130  1167  301E               	movlw	high _I2C1_CallbackReturnStop
 15131  1168  3FC1               	movwi [1]fsr1
 15132                           
 15133                           ;mcc_generated_files/i2c1_master.c: 308:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 15134  1169  0875               	movf	I2C1_SetCallback@idx,w
 15135  116A  3EAC               	addlw	(low ((_I2C1_Status| (0+256)+12)))& (0+255)
 15136  116B  0086               	movwf	6
 15137  116C  3001               	movlw	1	; select bank3/4
 15138  116D  0087               	movwf	7
 15139  116E  0181               	clrf	1
 15140  116F  0008               	return
 15141  1170                     __end_of_I2C1_SetCallback:	
 15142                           
 15143                           	psect	text72
 15144  1F3C                     __ptext72:	
 15145 ;; *************** function _I2C1_SetBuffer *****************
 15146 ;; Defined at:
 15147 ;;		line 263 in file "mcc_generated_files/i2c1_master.c"
 15148 ;; Parameters:    Size  Location     Type
 15149 ;;  buffer          1    wreg     PTR void 
 15150 ;;		 -> I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteReg
      +ister@data(2), 
 15151 ;;		 -> I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRe
      +gister@returnValue(2), 
 15152 ;;		 -> NULL(0), I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), 
 15153 ;;  bufferSize      2    1[COMMON] unsigned int 
 15154 ;; Auto vars:     Size  Location     Type
 15155 ;;  buffer          1    4[COMMON] PTR void 
 15156 ;;		 -> I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteReg
      +ister@data(2), 
 15157 ;;		 -> I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRe
      +gister@returnValue(2), 
 15158 ;;		 -> NULL(0), I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), 
 15159 ;; Return value:  Size  Location     Type
 15160 ;;                  1    wreg      void 
 15161 ;; Registers used:
 15162 ;;		wreg
 15163 ;; Tracked objects:
 15164 ;;		On entry : 0/0
 15165 ;;		On exit  : 0/0
 15166 ;;		Unchanged: 0/0
 15167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15168 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15169 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15170 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15171 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15172 ;;Total ram usage:        4 bytes
 15173 ;; Hardware stack levels used:    1
 15174 ;; Hardware stack levels required when called:    4
 15175 ;; This function calls:
 15176 ;;		Nothing
 15177 ;; This function is called by:
 15178 ;;		_I2C1_Read1ByteRegister
 15179 ;;		_rd1RegCompleteHandler
 15180 ;;		_rd2RegCompleteHandler
 15181 ;;		_wr1RegCompleteHandler
 15182 ;;		_wr2RegCompleteHandler
 15183 ;;		_rdBlkRegCompleteHandler
 15184 ;;		_I2C1_Read2ByteRegister
 15185 ;;		_I2C1_Write1ByteRegister
 15186 ;;		_I2C1_Write2ByteRegister
 15187 ;;		_I2C1_WriteNBytes
 15188 ;;		_I2C1_ReadNBytes
 15189 ;;		_I2C1_ReadDataBlock
 15190 ;; This function uses a non-reentrant model
 15191 ;;
 15192                           
 15193                           
 15194                           ;psect for function _I2C1_SetBuffer
 15195  1F3C                     _I2C1_SetBuffer:	
 15196                           
 15197                           ;incstack = 0
 15198                           ; Regs used in _I2C1_SetBuffer: [wreg]
 15199                           ;I2C1_SetBuffer@buffer stored from wreg
 15200  1F3C  00F4               	movwf	I2C1_SetBuffer@buffer
 15201                           
 15202                           ;mcc_generated_files/i2c1_master.c: 263: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 264: {;mcc_generated_files/i2c1_master.c: 265: 
      +                              if(I2C1_Status.bufferFree)
 15203  1F3D  0023               	movlb	3	; select bank3
 15204  1F3E  1DBC               	btfss	(_I2C1_Status^(0+384)+28),3
 15205  1F3F  0008               	return
 15206                           
 15207                           ;mcc_generated_files/i2c1_master.c: 266:     {;mcc_generated_files/i2c1_master.c: 267:  
      +                                 I2C1_Status.data_ptr = buffer;
 15208  1F40  0874               	movf	I2C1_SetBuffer@buffer,w
 15209  1F41  00F3               	movwf	??_I2C1_SetBuffer
 15210  1F42  0873               	movf	??_I2C1_SetBuffer,w
 15211  1F43  00B7               	movwf	(low ((_I2C1_Status| (0+256)+23)))^(0+128)
 15212                           
 15213                           ;mcc_generated_files/i2c1_master.c: 268:         I2C1_Status.data_length = bufferSize;
 15214  1F44  0872               	movf	I2C1_SetBuffer@bufferSize+1,w
 15215  1F45  00B9               	movwf	((_I2C1_Status+1)^(0+384)+24)
 15216  1F46  0871               	movf	I2C1_SetBuffer@bufferSize,w
 15217  1F47  00B8               	movwf	(_I2C1_Status^(0+384)+24)
 15218                           
 15219                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.bufferFree = 0;
 15220  1F48  11BC               	bcf	(_I2C1_Status^(0+384)+28),3
 15221  1F49  0008               	return
 15222  1F4A                     __end_of_I2C1_SetBuffer:	
 15223                           
 15224                           	psect	text73
 15225  1E38                     __ptext73:	
 15226 ;; *************** function _I2C1_MasterStop *****************
 15227 ;; Defined at:
 15228 ;;		line 593 in file "mcc_generated_files/i2c1_master.c"
 15229 ;; Parameters:    Size  Location     Type
 15230 ;;		None
 15231 ;; Auto vars:     Size  Location     Type
 15232 ;;		None
 15233 ;; Return value:  Size  Location     Type
 15234 ;;                  1    wreg      void 
 15235 ;; Registers used:
 15236 ;;		None
 15237 ;; Tracked objects:
 15238 ;;		On entry : 0/0
 15239 ;;		On exit  : 0/0
 15240 ;;		Unchanged: 0/0
 15241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15246 ;;Total ram usage:        0 bytes
 15247 ;; Hardware stack levels used:    1
 15248 ;; Hardware stack levels required when called:    4
 15249 ;; This function calls:
 15250 ;;		Nothing
 15251 ;; This function is called by:
 15252 ;;		_I2C1_DO_SEND_STOP
 15253 ;; This function uses a non-reentrant model
 15254 ;;
 15255                           
 15256                           
 15257                           ;psect for function _I2C1_MasterStop
 15258  1E38                     _I2C1_MasterStop:	
 15259                           
 15260                           ;mcc_generated_files/i2c1_master.c: 595:     SSP1CON2bits.PEN = 1;
 15261                           
 15262                           ;incstack = 0
 15263                           ; Regs used in _I2C1_MasterStop: []
 15264  1E38  0024               	movlb	4	; select bank4
 15265  1E39  1516               	bsf	22,2	;volatile
 15266  1E3A  0008               	return
 15267  1E3B                     __end_of_I2C1_MasterStop:	
 15268                           
 15269                           	psect	text74
 15270  1E35                     __ptext74:	
 15271 ;; *************** function _I2C1_MasterEnableRestart *****************
 15272 ;; Defined at:
 15273 ;;		line 573 in file "mcc_generated_files/i2c1_master.c"
 15274 ;; Parameters:    Size  Location     Type
 15275 ;;		None
 15276 ;; Auto vars:     Size  Location     Type
 15277 ;;		None
 15278 ;; Return value:  Size  Location     Type
 15279 ;;                  1    wreg      void 
 15280 ;; Registers used:
 15281 ;;		None
 15282 ;; Tracked objects:
 15283 ;;		On entry : 0/0
 15284 ;;		On exit  : 0/0
 15285 ;;		Unchanged: 0/0
 15286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15291 ;;Total ram usage:        0 bytes
 15292 ;; Hardware stack levels used:    1
 15293 ;; Hardware stack levels required when called:    4
 15294 ;; This function calls:
 15295 ;;		Nothing
 15296 ;; This function is called by:
 15297 ;;		_I2C1_DO_SEND_RESTART_READ
 15298 ;;		_I2C1_DO_SEND_RESTART_WRITE
 15299 ;;		_I2C1_DO_SEND_RESTART
 15300 ;;		_I2C1_DO_RX_EMPTY
 15301 ;; This function uses a non-reentrant model
 15302 ;;
 15303                           
 15304                           
 15305                           ;psect for function _I2C1_MasterEnableRestart
 15306  1E35                     _I2C1_MasterEnableRestart:	
 15307                           
 15308                           ;mcc_generated_files/i2c1_master.c: 575:     SSP1CON2bits.RSEN = 1;
 15309                           
 15310                           ;incstack = 0
 15311                           ; Regs used in _I2C1_MasterEnableRestart: []
 15312  1E35  0024               	movlb	4	; select bank4
 15313  1E36  1496               	bsf	22,1	;volatile
 15314  1E37  0008               	return
 15315  1E38                     __end_of_I2C1_MasterEnableRestart:	
 15316                           
 15317                           	psect	text75
 15318  1E32                     __ptext75:	
 15319 ;; *************** function _I2C1_MasterStart *****************
 15320 ;; Defined at:
 15321 ;;		line 588 in file "mcc_generated_files/i2c1_master.c"
 15322 ;; Parameters:    Size  Location     Type
 15323 ;;		None
 15324 ;; Auto vars:     Size  Location     Type
 15325 ;;		None
 15326 ;; Return value:  Size  Location     Type
 15327 ;;                  1    wreg      void 
 15328 ;; Registers used:
 15329 ;;		None
 15330 ;; Tracked objects:
 15331 ;;		On entry : 0/0
 15332 ;;		On exit  : 0/0
 15333 ;;		Unchanged: 0/0
 15334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15339 ;;Total ram usage:        0 bytes
 15340 ;; Hardware stack levels used:    1
 15341 ;; Hardware stack levels required when called:    4
 15342 ;; This function calls:
 15343 ;;		Nothing
 15344 ;; This function is called by:
 15345 ;;		_I2C1_MasterOperation
 15346 ;; This function uses a non-reentrant model
 15347 ;;
 15348                           
 15349                           
 15350                           ;psect for function _I2C1_MasterStart
 15351  1E32                     _I2C1_MasterStart:	
 15352                           
 15353                           ;mcc_generated_files/i2c1_master.c: 590:     SSP1CON2bits.SEN = 1;
 15354                           
 15355                           ;incstack = 0
 15356                           ; Regs used in _I2C1_MasterStart: []
 15357  1E32  0024               	movlb	4	; select bank4
 15358  1E33  1416               	bsf	22,0	;volatile
 15359  1E34  0008               	return
 15360  1E35                     __end_of_I2C1_MasterStart:	
 15361                           
 15362                           	psect	text76
 15363  1028                     __ptext76:	
 15364 ;; *************** function _I2C1_Close *****************
 15365 ;; Defined at:
 15366 ;;		line 209 in file "mcc_generated_files/i2c1_master.c"
 15367 ;; Parameters:    Size  Location     Type
 15368 ;;		None
 15369 ;; Auto vars:     Size  Location     Type
 15370 ;;  returnValue     1    2[COMMON] enum E353
 15371 ;; Return value:  Size  Location     Type
 15372 ;;                  1    wreg      enum E353
 15373 ;; Registers used:
 15374 ;;		wreg, status,2, status,0, pclath, cstack
 15375 ;; Tracked objects:
 15376 ;;		On entry : 0/0
 15377 ;;		On exit  : 0/0
 15378 ;;		Unchanged: 0/0
 15379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15381 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15382 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15383 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15384 ;;Total ram usage:        2 bytes
 15385 ;; Hardware stack levels used:    1
 15386 ;; Hardware stack levels required when called:    5
 15387 ;; This function calls:
 15388 ;;		_I2C1_MasterClearIrq
 15389 ;;		_I2C1_MasterClose
 15390 ;;		_I2C1_MasterDisableIrq
 15391 ;; This function is called by:
 15392 ;;		_I2C1_Read1ByteRegister
 15393 ;;		_I2C1_Read2ByteRegister
 15394 ;;		_I2C1_Write1ByteRegister
 15395 ;;		_I2C1_Write2ByteRegister
 15396 ;;		_I2C1_WriteNBytes
 15397 ;;		_I2C1_ReadNBytes
 15398 ;;		_I2C1_ReadDataBlock
 15399 ;; This function uses a non-reentrant model
 15400 ;;
 15401                           
 15402                           
 15403                           ;psect for function _I2C1_Close
 15404  1028                     _I2C1_Close:	
 15405                           
 15406                           ;mcc_generated_files/i2c1_master.c: 211:     i2c1_error_t returnValue = I2C1_BUSY;
 15407                           
 15408                           ;incstack = 0
 15409                           ; Regs used in _I2C1_Close: [wreg+status,2+status,0+pclath+cstack]
 15410  1028  01F2               	clrf	I2C1_Close@returnValue
 15411  1029  0AF2               	incf	I2C1_Close@returnValue,f
 15412                           
 15413                           ;mcc_generated_files/i2c1_master.c: 212:     if(!I2C1_Status.busy)
 15414  102A  0023               	movlb	3	; select bank3
 15415  102B  18BC               	btfsc	(_I2C1_Status^(0+384)+28),1
 15416  102C  283F               	goto	l5479
 15417                           
 15418                           ;mcc_generated_files/i2c1_master.c: 213:     {;mcc_generated_files/i2c1_master.c: 214:  
      +                                 I2C1_Status.inUse = 0;
 15419  102D  113C               	bcf	(_I2C1_Status^(0+384)+28),2
 15420                           
 15421                           ;mcc_generated_files/i2c1_master.c: 215:         I2C1_Status.address = 0xff;
 15422  102E  30FF               	movlw	255
 15423  102F  00F1               	movwf	??_I2C1_Close
 15424  1030  0871               	movf	??_I2C1_Close,w
 15425  1031  00B6               	movwf	(_I2C1_Status^(0+384)+22)
 15426                           
 15427                           ;mcc_generated_files/i2c1_master.c: 216:         I2C1_MasterClearIrq();
 15428  1032  319E  2629  3190   	fcall	_I2C1_MasterClearIrq
 15429                           
 15430                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_MasterDisableIrq();
 15431  1035  319E  262F  3190   	fcall	_I2C1_MasterDisableIrq
 15432                           
 15433                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClose();
 15434  1038  319E  262C         	fcall	_I2C1_MasterClose
 15435                           
 15436                           ;mcc_generated_files/i2c1_master.c: 219:         returnValue = I2C1_Status.error;
 15437  103A  0023               	movlb	3	; select bank3
 15438  103B  083B               	movf	(_I2C1_Status^(0+384)+27),w
 15439  103C  00F1               	movwf	??_I2C1_Close
 15440  103D  0871               	movf	??_I2C1_Close,w
 15441  103E  00F2               	movwf	I2C1_Close@returnValue
 15442  103F                     l5479:	
 15443                           
 15444                           ;mcc_generated_files/i2c1_master.c: 221:     return returnValue;
 15445  103F  0872               	movf	I2C1_Close@returnValue,w
 15446  1040  0008               	return
 15447  1041                     __end_of_I2C1_Close:	
 15448                           
 15449                           	psect	text77
 15450  1E2F                     __ptext77:	
 15451 ;; *************** function _I2C1_MasterDisableIrq *****************
 15452 ;; Defined at:
 15453 ;;		line 635 in file "mcc_generated_files/i2c1_master.c"
 15454 ;; Parameters:    Size  Location     Type
 15455 ;;		None
 15456 ;; Auto vars:     Size  Location     Type
 15457 ;;		None
 15458 ;; Return value:  Size  Location     Type
 15459 ;;                  1    wreg      void 
 15460 ;; Registers used:
 15461 ;;		None
 15462 ;; Tracked objects:
 15463 ;;		On entry : 0/0
 15464 ;;		On exit  : 0/0
 15465 ;;		Unchanged: 0/0
 15466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15471 ;;Total ram usage:        0 bytes
 15472 ;; Hardware stack levels used:    1
 15473 ;; Hardware stack levels required when called:    4
 15474 ;; This function calls:
 15475 ;;		Nothing
 15476 ;; This function is called by:
 15477 ;;		_I2C1_Close
 15478 ;;		_I2C1_SetTimeOut
 15479 ;; This function uses a non-reentrant model
 15480 ;;
 15481                           
 15482                           
 15483                           ;psect for function _I2C1_MasterDisableIrq
 15484  1E2F                     _I2C1_MasterDisableIrq:	
 15485                           
 15486                           ;mcc_generated_files/i2c1_master.c: 637:     PIE1bits.SSP1IE = 0;
 15487                           
 15488                           ;incstack = 0
 15489                           ; Regs used in _I2C1_MasterDisableIrq: []
 15490  1E2F  0021               	movlb	1	; select bank1
 15491  1E30  1191               	bcf	17,3	;volatile
 15492  1E31  0008               	return
 15493  1E32                     __end_of_I2C1_MasterDisableIrq:	
 15494                           
 15495                           	psect	text78
 15496  1E2C                     __ptext78:	
 15497 ;; *************** function _I2C1_MasterClose *****************
 15498 ;; Defined at:
 15499 ;;		line 557 in file "mcc_generated_files/i2c1_master.c"
 15500 ;; Parameters:    Size  Location     Type
 15501 ;;		None
 15502 ;; Auto vars:     Size  Location     Type
 15503 ;;		None
 15504 ;; Return value:  Size  Location     Type
 15505 ;;                  1    wreg      void 
 15506 ;; Registers used:
 15507 ;;		None
 15508 ;; Tracked objects:
 15509 ;;		On entry : 0/0
 15510 ;;		On exit  : 0/0
 15511 ;;		Unchanged: 0/0
 15512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15517 ;;Total ram usage:        0 bytes
 15518 ;; Hardware stack levels used:    1
 15519 ;; Hardware stack levels required when called:    4
 15520 ;; This function calls:
 15521 ;;		Nothing
 15522 ;; This function is called by:
 15523 ;;		_I2C1_Close
 15524 ;; This function uses a non-reentrant model
 15525 ;;
 15526                           
 15527                           
 15528                           ;psect for function _I2C1_MasterClose
 15529  1E2C                     _I2C1_MasterClose:	
 15530                           
 15531                           ;mcc_generated_files/i2c1_master.c: 560:     SSP1CON1bits.SSPEN = 0;
 15532                           
 15533                           ;incstack = 0
 15534                           ; Regs used in _I2C1_MasterClose: []
 15535  1E2C  0024               	movlb	4	; select bank4
 15536  1E2D  1295               	bcf	21,5	;volatile
 15537  1E2E  0008               	return
 15538  1E2F                     __end_of_I2C1_MasterClose:	
 15539                           
 15540                           	psect	text79
 15541  1E29                     __ptext79:	
 15542 ;; *************** function _I2C1_MasterClearIrq *****************
 15543 ;; Defined at:
 15544 ;;		line 640 in file "mcc_generated_files/i2c1_master.c"
 15545 ;; Parameters:    Size  Location     Type
 15546 ;;		None
 15547 ;; Auto vars:     Size  Location     Type
 15548 ;;		None
 15549 ;; Return value:  Size  Location     Type
 15550 ;;                  1    wreg      void 
 15551 ;; Registers used:
 15552 ;;		None
 15553 ;; Tracked objects:
 15554 ;;		On entry : 0/0
 15555 ;;		On exit  : 0/0
 15556 ;;		Unchanged: 0/0
 15557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15562 ;;Total ram usage:        0 bytes
 15563 ;; Hardware stack levels used:    1
 15564 ;; Hardware stack levels required when called:    4
 15565 ;; This function calls:
 15566 ;;		Nothing
 15567 ;; This function is called by:
 15568 ;;		_I2C1_Open
 15569 ;;		_I2C1_Close
 15570 ;;		_I2C1_MasterFsm
 15571 ;; This function uses a non-reentrant model
 15572 ;;
 15573                           
 15574                           
 15575                           ;psect for function _I2C1_MasterClearIrq
 15576  1E29                     _I2C1_MasterClearIrq:	
 15577                           
 15578                           ;mcc_generated_files/i2c1_master.c: 642:     PIR1bits.SSP1IF = 0;
 15579                           
 15580                           ;incstack = 0
 15581                           ; Regs used in _I2C1_MasterClearIrq: []
 15582  1E29  0020               	movlb	0	; select bank0
 15583  1E2A  1191               	bcf	17,3	;volatile
 15584  1E2B  0008               	return
 15585  1E2C                     __end_of_I2C1_MasterClearIrq:	
 15586                           
 15587                           	psect	text80
 15588  1FE8                     __ptext80:	
 15589 ;; *************** function _SYSTEM_Initialize *****************
 15590 ;; Defined at:
 15591 ;;		line 50 in file "mcc_generated_files/mcc.c"
 15592 ;; Parameters:    Size  Location     Type
 15593 ;;		None
 15594 ;; Auto vars:     Size  Location     Type
 15595 ;;		None
 15596 ;; Return value:  Size  Location     Type
 15597 ;;                  1    wreg      void 
 15598 ;; Registers used:
 15599 ;;		wreg, status,2, status,0, pclath, cstack
 15600 ;; Tracked objects:
 15601 ;;		On entry : 0/0
 15602 ;;		On exit  : 0/0
 15603 ;;		Unchanged: 0/0
 15604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15609 ;;Total ram usage:        0 bytes
 15610 ;; Hardware stack levels used:    1
 15611 ;; Hardware stack levels required when called:    6
 15612 ;; This function calls:
 15613 ;;		_EUSART_Initialize
 15614 ;;		_I2C1_Initialize
 15615 ;;		_OSCILLATOR_Initialize
 15616 ;;		_PIN_MANAGER_Initialize
 15617 ;;		_PMD_Initialize
 15618 ;;		_PWM5_Initialize
 15619 ;;		_TMR2_Initialize
 15620 ;;		_WDT_Initialize
 15621 ;; This function is called by:
 15622 ;;		_main
 15623 ;; This function uses a non-reentrant model
 15624 ;;
 15625                           
 15626                           
 15627                           ;psect for function _SYSTEM_Initialize
 15628  1FE8                     _SYSTEM_Initialize:	
 15629                           
 15630                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 15631                           
 15632                           ;incstack = 0
 15633                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15634  1FE8  319E  26D0  319F   	fcall	_PMD_Initialize
 15635                           
 15636                           ;mcc_generated_files/mcc.c: 54:     I2C1_Initialize();
 15637  1FEB  319E  26E8  319F   	fcall	_I2C1_Initialize
 15638                           
 15639                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 15640  1FEE  3192  22C6  319F   	fcall	_PIN_MANAGER_Initialize
 15641                           
 15642                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 15643  1FF1  319E  26F1  319F   	fcall	_OSCILLATOR_Initialize
 15644                           
 15645                           ;mcc_generated_files/mcc.c: 57:     WDT_Initialize();
 15646  1FF4  319E  264B  319F   	fcall	_WDT_Initialize
 15647                           
 15648                           ;mcc_generated_files/mcc.c: 58:     PWM5_Initialize();
 15649  1FF7  319F  2718  319F   	fcall	_PWM5_Initialize
 15650                           
 15651                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 15652  1FFA  319E  26D8  319F   	fcall	_TMR2_Initialize
 15653                           
 15654                           ;mcc_generated_files/mcc.c: 60:     EUSART_Initialize();
 15655  1FFD  3193  2341         	fcall	_EUSART_Initialize
 15656  1FFF  0008               	return
 15657  2000                     __end_of_SYSTEM_Initialize:	
 15658                           
 15659                           	psect	text81
 15660  1E4B                     __ptext81:	
 15661 ;; *************** function _WDT_Initialize *****************
 15662 ;; Defined at:
 15663 ;;		line 77 in file "mcc_generated_files/mcc.c"
 15664 ;; Parameters:    Size  Location     Type
 15665 ;;		None
 15666 ;; Auto vars:     Size  Location     Type
 15667 ;;		None
 15668 ;; Return value:  Size  Location     Type
 15669 ;;                  1    wreg      void 
 15670 ;; Registers used:
 15671 ;;		wreg
 15672 ;; Tracked objects:
 15673 ;;		On entry : 0/0
 15674 ;;		On exit  : 0/0
 15675 ;;		Unchanged: 0/0
 15676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15681 ;;Total ram usage:        0 bytes
 15682 ;; Hardware stack levels used:    1
 15683 ;; Hardware stack levels required when called:    4
 15684 ;; This function calls:
 15685 ;;		Nothing
 15686 ;; This function is called by:
 15687 ;;		_SYSTEM_Initialize
 15688 ;; This function uses a non-reentrant model
 15689 ;;
 15690                           
 15691                           
 15692                           ;psect for function _WDT_Initialize
 15693  1E4B                     _WDT_Initialize:	
 15694                           
 15695                           ;mcc_generated_files/mcc.c: 80:     WDTCON = 0x16;
 15696                           
 15697                           ;incstack = 0
 15698                           ; Regs used in _WDT_Initialize: [wreg]
 15699  1E4B  3016               	movlw	22
 15700  1E4C  0021               	movlb	1	; select bank1
 15701  1E4D  0097               	movwf	23	;volatile
 15702  1E4E  0008               	return
 15703  1E4F                     __end_of_WDT_Initialize:	
 15704                           
 15705                           	psect	text82
 15706  1ED8                     __ptext82:	
 15707 ;; *************** function _TMR2_Initialize *****************
 15708 ;; Defined at:
 15709 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 15710 ;; Parameters:    Size  Location     Type
 15711 ;;		None
 15712 ;; Auto vars:     Size  Location     Type
 15713 ;;		None
 15714 ;; Return value:  Size  Location     Type
 15715 ;;                  1    wreg      void 
 15716 ;; Registers used:
 15717 ;;		wreg, status,2
 15718 ;; Tracked objects:
 15719 ;;		On entry : 0/0
 15720 ;;		On exit  : 0/0
 15721 ;;		Unchanged: 0/0
 15722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15727 ;;Total ram usage:        0 bytes
 15728 ;; Hardware stack levels used:    1
 15729 ;; Hardware stack levels required when called:    4
 15730 ;; This function calls:
 15731 ;;		Nothing
 15732 ;; This function is called by:
 15733 ;;		_SYSTEM_Initialize
 15734 ;; This function uses a non-reentrant model
 15735 ;;
 15736                           
 15737                           
 15738                           ;psect for function _TMR2_Initialize
 15739  1ED8                     _TMR2_Initialize:	
 15740                           
 15741                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xD1;
 15742                           
 15743                           ;incstack = 0
 15744                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 15745  1ED8  30D1               	movlw	209
 15746  1ED9  0020               	movlb	0	; select bank0
 15747  1EDA  009E               	movwf	30	;volatile
 15748                           
 15749                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
 15750  1EDB  019D               	clrf	29	;volatile
 15751                           
 15752                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
 15753  1EDC  1091               	bcf	17,1	;volatile
 15754                           
 15755                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x05;
 15756  1EDD  3005               	movlw	5
 15757  1EDE  009F               	movwf	31	;volatile
 15758  1EDF  0008               	return
 15759  1EE0                     __end_of_TMR2_Initialize:	
 15760                           
 15761                           	psect	text83
 15762  1F18                     __ptext83:	
 15763 ;; *************** function _PWM5_Initialize *****************
 15764 ;; Defined at:
 15765 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 15766 ;; Parameters:    Size  Location     Type
 15767 ;;		None
 15768 ;; Auto vars:     Size  Location     Type
 15769 ;;		None
 15770 ;; Return value:  Size  Location     Type
 15771 ;;                  1    wreg      void 
 15772 ;; Registers used:
 15773 ;;		wreg, status,2, status,0
 15774 ;; Tracked objects:
 15775 ;;		On entry : 0/0
 15776 ;;		On exit  : 0/0
 15777 ;;		Unchanged: 0/0
 15778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15783 ;;Total ram usage:        0 bytes
 15784 ;; Hardware stack levels used:    1
 15785 ;; Hardware stack levels required when called:    4
 15786 ;; This function calls:
 15787 ;;		Nothing
 15788 ;; This function is called by:
 15789 ;;		_SYSTEM_Initialize
 15790 ;; This function uses a non-reentrant model
 15791 ;;
 15792                           
 15793                           
 15794                           ;psect for function _PWM5_Initialize
 15795  1F18                     _PWM5_Initialize:	
 15796                           
 15797                           ;mcc_generated_files/pwm5.c: 62:     PWM5CON = 0x80;
 15798                           
 15799                           ;incstack = 0
 15800                           ; Regs used in _PWM5_Initialize: [wreg+status,2+status,0]
 15801  1F18  3080               	movlw	128
 15802  1F19  002C               	movlb	12	; select bank12
 15803  1F1A  0099               	movwf	25	;volatile
 15804                           
 15805                           ;mcc_generated_files/pwm5.c: 65:     PWM5DCH = 0x68;
 15806  1F1B  3068               	movlw	104
 15807  1F1C  0098               	movwf	24	;volatile
 15808                           
 15809                           ;mcc_generated_files/pwm5.c: 68:     PWM5DCL = 0xC0;
 15810  1F1D  30C0               	movlw	192
 15811  1F1E  0097               	movwf	23	;volatile
 15812                           
 15813                           ;mcc_generated_files/pwm5.c: 71:     PWMTMRSbits.P5TSEL = 1;
 15814  1F1F  081F               	movf	31,w	;volatile
 15815  1F20  39FC               	andlw	-4
 15816  1F21  3801               	iorlw	1
 15817  1F22  009F               	movwf	31	;volatile
 15818  1F23  0008               	return
 15819  1F24                     __end_of_PWM5_Initialize:	
 15820                           
 15821                           	psect	text84
 15822  1ED0                     __ptext84:	
 15823 ;; *************** function _PMD_Initialize *****************
 15824 ;; Defined at:
 15825 ;;		line 83 in file "mcc_generated_files/mcc.c"
 15826 ;; Parameters:    Size  Location     Type
 15827 ;;		None
 15828 ;; Auto vars:     Size  Location     Type
 15829 ;;		None
 15830 ;; Return value:  Size  Location     Type
 15831 ;;                  1    wreg      void 
 15832 ;; Registers used:
 15833 ;;		status,2
 15834 ;; Tracked objects:
 15835 ;;		On entry : 0/0
 15836 ;;		On exit  : 0/0
 15837 ;;		Unchanged: 0/0
 15838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15843 ;;Total ram usage:        0 bytes
 15844 ;; Hardware stack levels used:    1
 15845 ;; Hardware stack levels required when called:    4
 15846 ;; This function calls:
 15847 ;;		Nothing
 15848 ;; This function is called by:
 15849 ;;		_SYSTEM_Initialize
 15850 ;; This function uses a non-reentrant model
 15851 ;;
 15852                           
 15853                           
 15854                           ;psect for function _PMD_Initialize
 15855  1ED0                     _PMD_Initialize:	
 15856                           
 15857                           ;mcc_generated_files/mcc.c: 86:     PMD0 = 0x00;
 15858                           
 15859                           ;incstack = 0
 15860                           ; Regs used in _PMD_Initialize: [status,2]
 15861  1ED0  0032               	movlb	18	; select bank18
 15862  1ED1  0191               	clrf	17	;volatile
 15863                           
 15864                           ;mcc_generated_files/mcc.c: 88:     PMD1 = 0x00;
 15865  1ED2  0192               	clrf	18	;volatile
 15866                           
 15867                           ;mcc_generated_files/mcc.c: 90:     PMD2 = 0x00;
 15868  1ED3  0193               	clrf	19	;volatile
 15869                           
 15870                           ;mcc_generated_files/mcc.c: 92:     PMD3 = 0x00;
 15871  1ED4  0194               	clrf	20	;volatile
 15872                           
 15873                           ;mcc_generated_files/mcc.c: 94:     PMD4 = 0x00;
 15874  1ED5  0195               	clrf	21	;volatile
 15875                           
 15876                           ;mcc_generated_files/mcc.c: 96:     PMD5 = 0x00;
 15877  1ED6  0196               	clrf	22	;volatile
 15878  1ED7  0008               	return
 15879  1ED8                     __end_of_PMD_Initialize:	
 15880                           
 15881                           	psect	text85
 15882  12C6                     __ptext85:	
 15883 ;; *************** function _PIN_MANAGER_Initialize *****************
 15884 ;; Defined at:
 15885 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 15886 ;; Parameters:    Size  Location     Type
 15887 ;;		None
 15888 ;; Auto vars:     Size  Location     Type
 15889 ;;		None
 15890 ;; Return value:  Size  Location     Type
 15891 ;;                  1    wreg      void 
 15892 ;; Registers used:
 15893 ;;		wreg, status,2
 15894 ;; Tracked objects:
 15895 ;;		On entry : 0/0
 15896 ;;		On exit  : 0/0
 15897 ;;		Unchanged: 0/0
 15898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15903 ;;Total ram usage:        0 bytes
 15904 ;; Hardware stack levels used:    1
 15905 ;; Hardware stack levels required when called:    4
 15906 ;; This function calls:
 15907 ;;		Nothing
 15908 ;; This function is called by:
 15909 ;;		_SYSTEM_Initialize
 15910 ;; This function uses a non-reentrant model
 15911 ;;
 15912                           
 15913                           
 15914                           ;psect for function _PIN_MANAGER_Initialize
 15915  12C6                     _PIN_MANAGER_Initialize:	
 15916                           
 15917                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 15918                           
 15919                           ;incstack = 0
 15920                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 15921  12C6  0022               	movlb	2	; select bank2
 15922  12C7  018C               	clrf	12	;volatile
 15923                           
 15924                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 15925  12C8  018D               	clrf	13	;volatile
 15926                           
 15927                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 15928  12C9  018E               	clrf	14	;volatile
 15929                           
 15930                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x37;
 15931  12CA  3037               	movlw	55
 15932  12CB  0021               	movlb	1	; select bank1
 15933  12CC  008C               	movwf	12	;volatile
 15934                           
 15935                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x70;
 15936  12CD  3070               	movlw	112
 15937  12CE  008D               	movwf	13	;volatile
 15938                           
 15939                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xB7;
 15940  12CF  30B7               	movlw	183
 15941  12D0  008E               	movwf	14	;volatile
 15942                           
 15943                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xE7;
 15944  12D1  30E7               	movlw	231
 15945  12D2  0023               	movlb	3	; select bank3
 15946  12D3  008E               	movwf	14	;volatile
 15947                           
 15948                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x80;
 15949  12D4  3080               	movlw	128
 15950  12D5  008D               	movwf	13	;volatile
 15951                           
 15952                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x37;
 15953  12D6  3037               	movlw	55
 15954  12D7  008C               	movwf	12	;volatile
 15955                           
 15956                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
 15957  12D8  0024               	movlb	4	; select bank4
 15958  12D9  018D               	clrf	13	;volatile
 15959                           
 15960                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
 15961  12DA  018C               	clrf	12	;volatile
 15962                           
 15963                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
 15964  12DB  018E               	clrf	14	;volatile
 15965                           
 15966                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
 15967  12DC  0025               	movlb	5	; select bank5
 15968  12DD  018C               	clrf	12	;volatile
 15969                           
 15970                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
 15971  12DE  018D               	clrf	13	;volatile
 15972                           
 15973                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
 15974  12DF  018E               	clrf	14	;volatile
 15975                           
 15976                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
 15977  12E0  3037               	movlw	55
 15978  12E1  0026               	movlb	6	; select bank6
 15979  12E2  008C               	movwf	12	;volatile
 15980                           
 15981                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
 15982  12E3  30F0               	movlw	240
 15983  12E4  008D               	movwf	13	;volatile
 15984                           
 15985                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
 15986  12E5  30FF               	movlw	255
 15987  12E6  008E               	movwf	14	;volatile
 15988                           
 15989                           ;mcc_generated_files/pin_manager.c: 102:     INLVLA = 0x3F;
 15990  12E7  303F               	movlw	63
 15991  12E8  0027               	movlb	7	; select bank7
 15992  12E9  008C               	movwf	12	;volatile
 15993                           
 15994                           ;mcc_generated_files/pin_manager.c: 103:     INLVLB = 0xF0;
 15995  12EA  30F0               	movlw	240
 15996  12EB  008D               	movwf	13	;volatile
 15997                           
 15998                           ;mcc_generated_files/pin_manager.c: 104:     INLVLC = 0xFF;
 15999  12EC  30FF               	movlw	255
 16000  12ED  008E               	movwf	14	;volatile
 16001                           
 16002                           ;mcc_generated_files/pin_manager.c: 113:     RXPPS = 0x0E;
 16003  12EE  300E               	movlw	14
 16004  12EF  003C               	movlb	28	; select bank28
 16005  12F0  00A4               	movwf	36	;volatile
 16006                           
 16007                           ;mcc_generated_files/pin_manager.c: 114:     SSP1CLKPPS = 0x0D;
 16008  12F1  300D               	movlw	13
 16009  12F2  00A0               	movwf	32	;volatile
 16010                           
 16011                           ;mcc_generated_files/pin_manager.c: 115:     RB7PPS = 0x14;
 16012  12F3  3014               	movlw	20
 16013  12F4  003D               	movlb	29	; select bank29
 16014  12F5  009F               	movwf	31	;volatile
 16015                           
 16016                           ;mcc_generated_files/pin_manager.c: 116:     RB5PPS = 0x18;
 16017  12F6  3018               	movlw	24
 16018  12F7  009D               	movwf	29	;volatile
 16019                           
 16020                           ;mcc_generated_files/pin_manager.c: 117:     RB4PPS = 0x19;
 16021  12F8  3019               	movlw	25
 16022  12F9  009C               	movwf	28	;volatile
 16023                           
 16024                           ;mcc_generated_files/pin_manager.c: 118:     RC6PPS = 0x02;
 16025  12FA  3002               	movlw	2
 16026  12FB  00A6               	movwf	38	;volatile
 16027                           
 16028                           ;mcc_generated_files/pin_manager.c: 119:     SSP1DATPPS = 0x0C;
 16029  12FC  300C               	movlw	12
 16030  12FD  003C               	movlb	28	; select bank28
 16031  12FE  00A1               	movwf	33	;volatile
 16032  12FF  0008               	return
 16033  1300                     __end_of_PIN_MANAGER_Initialize:	
 16034                           
 16035                           	psect	text86
 16036  1EF1                     __ptext86:	
 16037 ;; *************** function _OSCILLATOR_Initialize *****************
 16038 ;; Defined at:
 16039 ;;		line 63 in file "mcc_generated_files/mcc.c"
 16040 ;; Parameters:    Size  Location     Type
 16041 ;;		None
 16042 ;; Auto vars:     Size  Location     Type
 16043 ;;		None
 16044 ;; Return value:  Size  Location     Type
 16045 ;;                  1    wreg      void 
 16046 ;; Registers used:
 16047 ;;		wreg, status,2
 16048 ;; Tracked objects:
 16049 ;;		On entry : 0/0
 16050 ;;		On exit  : 0/0
 16051 ;;		Unchanged: 0/0
 16052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16057 ;;Total ram usage:        0 bytes
 16058 ;; Hardware stack levels used:    1
 16059 ;; Hardware stack levels required when called:    4
 16060 ;; This function calls:
 16061 ;;		Nothing
 16062 ;; This function is called by:
 16063 ;;		_SYSTEM_Initialize
 16064 ;; This function uses a non-reentrant model
 16065 ;;
 16066                           
 16067                           
 16068                           ;psect for function _OSCILLATOR_Initialize
 16069  1EF1                     _OSCILLATOR_Initialize:	
 16070                           
 16071                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x60;
 16072                           
 16073                           ;incstack = 0
 16074                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 16075  1EF1  3060               	movlw	96
 16076  1EF2  0032               	movlb	18	; select bank18
 16077  1EF3  0099               	movwf	25	;volatile
 16078                           
 16079                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
 16080  1EF4  019B               	clrf	27	;volatile
 16081                           
 16082                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
 16083  1EF5  019D               	clrf	29	;volatile
 16084                           
 16085                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x07;
 16086  1EF6  3007               	movlw	7
 16087  1EF7  009F               	movwf	31	;volatile
 16088                           
 16089                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 16090  1EF8  019E               	clrf	30	;volatile
 16091  1EF9  0008               	return
 16092  1EFA                     __end_of_OSCILLATOR_Initialize:	
 16093                           
 16094                           	psect	text87
 16095  1EE8                     __ptext87:	
 16096 ;; *************** function _I2C1_Initialize *****************
 16097 ;; Defined at:
 16098 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 16099 ;; Parameters:    Size  Location     Type
 16100 ;;		None
 16101 ;; Auto vars:     Size  Location     Type
 16102 ;;		None
 16103 ;; Return value:  Size  Location     Type
 16104 ;;                  1    wreg      void 
 16105 ;; Registers used:
 16106 ;;		wreg, status,2
 16107 ;; Tracked objects:
 16108 ;;		On entry : 0/0
 16109 ;;		On exit  : 0/0
 16110 ;;		Unchanged: 0/0
 16111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16116 ;;Total ram usage:        0 bytes
 16117 ;; Hardware stack levels used:    1
 16118 ;; Hardware stack levels required when called:    4
 16119 ;; This function calls:
 16120 ;;		Nothing
 16121 ;; This function is called by:
 16122 ;;		_SYSTEM_Initialize
 16123 ;; This function uses a non-reentrant model
 16124 ;;
 16125                           
 16126                           
 16127                           ;psect for function _I2C1_Initialize
 16128  1EE8                     _I2C1_Initialize:	
 16129                           
 16130                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x00;
 16131                           
 16132                           ;incstack = 0
 16133                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 16134  1EE8  0024               	movlb	4	; select bank4
 16135  1EE9  0194               	clrf	20	;volatile
 16136                           
 16137                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 16138  1EEA  3008               	movlw	8
 16139  1EEB  0095               	movwf	21	;volatile
 16140                           
 16141                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 16142  1EEC  0196               	clrf	22	;volatile
 16143                           
 16144                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x4F;
 16145  1EED  304F               	movlw	79
 16146  1EEE  0092               	movwf	18	;volatile
 16147                           
 16148                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 16149  1EEF  1295               	bcf	21,5	;volatile
 16150  1EF0  0008               	return
 16151  1EF1                     __end_of_I2C1_Initialize:	
 16152                           
 16153                           	psect	text88
 16154  1341                     __ptext88:	
 16155 ;; *************** function _EUSART_Initialize *****************
 16156 ;; Defined at:
 16157 ;;		line 88 in file "mcc_generated_files/eusart.c"
 16158 ;; Parameters:    Size  Location     Type
 16159 ;;		None
 16160 ;; Auto vars:     Size  Location     Type
 16161 ;;		None
 16162 ;; Return value:  Size  Location     Type
 16163 ;;                  1    wreg      void 
 16164 ;; Registers used:
 16165 ;;		wreg, status,2, status,0, pclath, cstack
 16166 ;; Tracked objects:
 16167 ;;		On entry : 0/0
 16168 ;;		On exit  : 0/0
 16169 ;;		Unchanged: 0/0
 16170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16173 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16174 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16175 ;;Total ram usage:        1 bytes
 16176 ;; Hardware stack levels used:    1
 16177 ;; Hardware stack levels required when called:    5
 16178 ;; This function calls:
 16179 ;;		_EUSART_SetErrorHandler
 16180 ;;		_EUSART_SetFramingErrorHandler
 16181 ;;		_EUSART_SetOverrunErrorHandler
 16182 ;;		_EUSART_SetRxInterruptHandler
 16183 ;;		_EUSART_SetTxInterruptHandler
 16184 ;; This function is called by:
 16185 ;;		_SYSTEM_Initialize
 16186 ;; This function uses a non-reentrant model
 16187 ;;
 16188                           
 16189                           
 16190                           ;psect for function _EUSART_Initialize
 16191  1341                     _EUSART_Initialize:	
 16192                           
 16193                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
 16194                           
 16195                           ;incstack = 0
 16196                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16197  1341  0021               	movlb	1	; select bank1
 16198  1342  1291               	bcf	17,5	;volatile
 16199                           
 16200                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
 16201  1343  305D               	movlw	low _EUSART_Receive_ISR
 16202  1344  00F1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
 16203  1345  3012               	movlw	high _EUSART_Receive_ISR
 16204  1346  00F2               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
 16205  1347  319E  26A5  3193   	fcall	_EUSART_SetRxInterruptHandler
 16206                           
 16207                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
 16208  134A  0021               	movlb	1	; select bank1
 16209  134B  1211               	bcf	17,4	;volatile
 16210                           
 16211                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
 16212  134C  30BC               	movlw	low _EUSART_Transmit_ISR
 16213  134D  00F1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
 16214  134E  3010               	movlw	high _EUSART_Transmit_ISR
 16215  134F  00F2               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
 16216  1350  319E  26AB  3193   	fcall	_EUSART_SetTxInterruptHandler
 16217                           
 16218                           ;mcc_generated_files/eusart.c: 98:     BAUD1CON = 0x08;
 16219  1353  3008               	movlw	8
 16220  1354  0023               	movlb	3	; select bank3
 16221  1355  009F               	movwf	31	;volatile
 16222                           
 16223                           ;mcc_generated_files/eusart.c: 101:     RC1STA = 0x90;
 16224  1356  3090               	movlw	144
 16225  1357  009D               	movwf	29	;volatile
 16226                           
 16227                           ;mcc_generated_files/eusart.c: 104:     TX1STA = 0x24;
 16228  1358  3024               	movlw	36
 16229  1359  009E               	movwf	30	;volatile
 16230                           
 16231                           ;mcc_generated_files/eusart.c: 107:     SP1BRGL = 0x40;
 16232  135A  3040               	movlw	64
 16233  135B  009B               	movwf	27	;volatile
 16234                           
 16235                           ;mcc_generated_files/eusart.c: 110:     SP1BRGH = 0x03;
 16236  135C  3003               	movlw	3
 16237  135D  009C               	movwf	28	;volatile
 16238                           
 16239                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
 16240  135E  3023               	movlw	low _EUSART_DefaultFramingErrorHandler
 16241  135F  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
 16242  1360  301E               	movlw	high _EUSART_DefaultFramingErrorHandler
 16243  1361  00F2               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
 16244  1362  319E  2699  3193   	fcall	_EUSART_SetFramingErrorHandler
 16245                           
 16246                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
 16247  1365  3047               	movlw	low _EUSART_DefaultOverrunErrorHandler
 16248  1366  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
 16249  1367  301E               	movlw	high _EUSART_DefaultOverrunErrorHandler
 16250  1368  00F2               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
 16251  1369  319E  269F  3193   	fcall	_EUSART_SetOverrunErrorHandler
 16252                           
 16253                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
 16254  136C  3026               	movlw	low _EUSART_DefaultErrorHandler
 16255  136D  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler
 16256  136E  301E               	movlw	high _EUSART_DefaultErrorHandler
 16257  136F  00F2               	movwf	EUSART_SetErrorHandler@interruptHandler+1
 16258  1370  319E  2693         	fcall	_EUSART_SetErrorHandler
 16259                           
 16260                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
 16261  1372  0022               	movlb	2	; select bank2
 16262  1373  01DF               	clrf	_eusartRxLastError^(0+256)	;volatile
 16263                           
 16264                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
 16265  1374  0021               	movlb	1	; select bank1
 16266  1375  01EF               	clrf	_eusartTxHead^(0+128)	;volatile
 16267                           
 16268                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
 16269  1376  01EE               	clrf	_eusartTxTail^(0+128)	;volatile
 16270                           
 16271                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
 16272  1377  3008               	movlw	8
 16273  1378  00F3               	movwf	??_EUSART_Initialize
 16274  1379  0873               	movf	??_EUSART_Initialize,w
 16275  137A  0022               	movlb	2	; select bank2
 16276  137B  00E5               	movwf	_eusartTxBufferRemaining^(0+256)	;volatile
 16277                           
 16278                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
 16279  137C  01FC               	clrf	_eusartRxHead	;volatile
 16280                           
 16281                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
 16282  137D  0021               	movlb	1	; select bank1
 16283  137E  01ED               	clrf	_eusartRxTail^(0+128)	;volatile
 16284                           
 16285                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
 16286  137F  0022               	movlb	2	; select bank2
 16287  1380  01E0               	clrf	_eusartRxCount^(0+256)	;volatile
 16288                           
 16289                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
 16290  1381  0021               	movlb	1	; select bank1
 16291  1382  1691               	bsf	17,5	;volatile
 16292  1383  0008               	return
 16293  1384                     __end_of_EUSART_Initialize:	
 16294                           
 16295                           	psect	text89
 16296  1EAB                     __ptext89:	
 16297 ;; *************** function _EUSART_SetTxInterruptHandler *****************
 16298 ;; Defined at:
 16299 ;;		line 285 in file "mcc_generated_files/eusart.c"
 16300 ;; Parameters:    Size  Location     Type
 16301 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 16302 ;;		 -> EUSART_Transmit_ISR(1), 
 16303 ;; Auto vars:     Size  Location     Type
 16304 ;;		None
 16305 ;; Return value:  Size  Location     Type
 16306 ;;                  1    wreg      void 
 16307 ;; Registers used:
 16308 ;;		wreg
 16309 ;; Tracked objects:
 16310 ;;		On entry : 0/0
 16311 ;;		On exit  : 0/0
 16312 ;;		Unchanged: 0/0
 16313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16314 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16317 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16318 ;;Total ram usage:        2 bytes
 16319 ;; Hardware stack levels used:    1
 16320 ;; Hardware stack levels required when called:    4
 16321 ;; This function calls:
 16322 ;;		Nothing
 16323 ;; This function is called by:
 16324 ;;		_EUSART_Initialize
 16325 ;; This function uses a non-reentrant model
 16326 ;;
 16327                           
 16328                           
 16329                           ;psect for function _EUSART_SetTxInterruptHandler
 16330  1EAB                     _EUSART_SetTxInterruptHandler:	
 16331                           
 16332                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
 16333                           
 16334                           ;incstack = 0
 16335                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
 16336  1EAB  0872               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
 16337  1EAC  0022               	movlb	2	; select bank2
 16338  1EAD  00E4               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+256)
 16339  1EAE  0871               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
 16340  1EAF  00E3               	movwf	_EUSART_TxDefaultInterruptHandler^(0+256)
 16341  1EB0  0008               	return
 16342  1EB1                     __end_of_EUSART_SetTxInterruptHandler:	
 16343                           
 16344                           	psect	text90
 16345  1EA5                     __ptext90:	
 16346 ;; *************** function _EUSART_SetRxInterruptHandler *****************
 16347 ;; Defined at:
 16348 ;;		line 289 in file "mcc_generated_files/eusart.c"
 16349 ;; Parameters:    Size  Location     Type
 16350 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 16351 ;;		 -> EUSART_Receive_ISR(1), 
 16352 ;; Auto vars:     Size  Location     Type
 16353 ;;		None
 16354 ;; Return value:  Size  Location     Type
 16355 ;;                  1    wreg      void 
 16356 ;; Registers used:
 16357 ;;		wreg
 16358 ;; Tracked objects:
 16359 ;;		On entry : 0/0
 16360 ;;		On exit  : 0/0
 16361 ;;		Unchanged: 0/0
 16362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16363 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16366 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16367 ;;Total ram usage:        2 bytes
 16368 ;; Hardware stack levels used:    1
 16369 ;; Hardware stack levels required when called:    4
 16370 ;; This function calls:
 16371 ;;		Nothing
 16372 ;; This function is called by:
 16373 ;;		_EUSART_Initialize
 16374 ;; This function uses a non-reentrant model
 16375 ;;
 16376                           
 16377                           
 16378                           ;psect for function _EUSART_SetRxInterruptHandler
 16379  1EA5                     _EUSART_SetRxInterruptHandler:	
 16380                           
 16381                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
 16382                           
 16383                           ;incstack = 0
 16384                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
 16385  1EA5  0872               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
 16386  1EA6  0022               	movlb	2	; select bank2
 16387  1EA7  00E2               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+256)
 16388  1EA8  0871               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
 16389  1EA9  00E1               	movwf	_EUSART_RxDefaultInterruptHandler^(0+256)
 16390  1EAA  0008               	return
 16391  1EAB                     __end_of_EUSART_SetRxInterruptHandler:	
 16392                           
 16393                           	psect	text91
 16394  1E9F                     __ptext91:	
 16395 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
 16396 ;; Defined at:
 16397 ;;		line 277 in file "mcc_generated_files/eusart.c"
 16398 ;; Parameters:    Size  Location     Type
 16399 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 16400 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
 16401 ;; Auto vars:     Size  Location     Type
 16402 ;;		None
 16403 ;; Return value:  Size  Location     Type
 16404 ;;                  1    wreg      void 
 16405 ;; Registers used:
 16406 ;;		wreg
 16407 ;; Tracked objects:
 16408 ;;		On entry : 0/0
 16409 ;;		On exit  : 0/0
 16410 ;;		Unchanged: 0/0
 16411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16412 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16415 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16416 ;;Total ram usage:        2 bytes
 16417 ;; Hardware stack levels used:    1
 16418 ;; Hardware stack levels required when called:    4
 16419 ;; This function calls:
 16420 ;;		Nothing
 16421 ;; This function is called by:
 16422 ;;		_EUSART_Initialize
 16423 ;; This function uses a non-reentrant model
 16424 ;;
 16425                           
 16426                           
 16427                           ;psect for function _EUSART_SetOverrunErrorHandler
 16428  1E9F                     _EUSART_SetOverrunErrorHandler:	
 16429                           
 16430                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
 16431                           
 16432                           ;incstack = 0
 16433                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
 16434  1E9F  0872               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
 16435  1EA0  0023               	movlb	3	; select bank3
 16436  1EA1  00D8               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+384)
 16437  1EA2  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
 16438  1EA3  00D7               	movwf	_EUSART_OverrunErrorHandler^(0+384)
 16439  1EA4  0008               	return
 16440  1EA5                     __end_of_EUSART_SetOverrunErrorHandler:	
 16441                           
 16442                           	psect	text92
 16443  1E99                     __ptext92:	
 16444 ;; *************** function _EUSART_SetFramingErrorHandler *****************
 16445 ;; Defined at:
 16446 ;;		line 273 in file "mcc_generated_files/eusart.c"
 16447 ;; Parameters:    Size  Location     Type
 16448 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 16449 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
 16450 ;; Auto vars:     Size  Location     Type
 16451 ;;		None
 16452 ;; Return value:  Size  Location     Type
 16453 ;;                  1    wreg      void 
 16454 ;; Registers used:
 16455 ;;		wreg
 16456 ;; Tracked objects:
 16457 ;;		On entry : 0/0
 16458 ;;		On exit  : 0/0
 16459 ;;		Unchanged: 0/0
 16460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16461 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16464 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16465 ;;Total ram usage:        2 bytes
 16466 ;; Hardware stack levels used:    1
 16467 ;; Hardware stack levels required when called:    4
 16468 ;; This function calls:
 16469 ;;		Nothing
 16470 ;; This function is called by:
 16471 ;;		_EUSART_Initialize
 16472 ;; This function uses a non-reentrant model
 16473 ;;
 16474                           
 16475                           
 16476                           ;psect for function _EUSART_SetFramingErrorHandler
 16477  1E99                     _EUSART_SetFramingErrorHandler:	
 16478                           
 16479                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
 16480                           
 16481                           ;incstack = 0
 16482                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
 16483  1E99  0872               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
 16484  1E9A  0023               	movlb	3	; select bank3
 16485  1E9B  00DA               	movwf	(_EUSART_FramingErrorHandler+1)^(0+384)
 16486  1E9C  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
 16487  1E9D  00D9               	movwf	_EUSART_FramingErrorHandler^(0+384)
 16488  1E9E  0008               	return
 16489  1E9F                     __end_of_EUSART_SetFramingErrorHandler:	
 16490                           
 16491                           	psect	text93
 16492  1E93                     __ptext93:	
 16493 ;; *************** function _EUSART_SetErrorHandler *****************
 16494 ;; Defined at:
 16495 ;;		line 281 in file "mcc_generated_files/eusart.c"
 16496 ;; Parameters:    Size  Location     Type
 16497 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
 16498 ;;		 -> EUSART_DefaultErrorHandler(1), 
 16499 ;; Auto vars:     Size  Location     Type
 16500 ;;		None
 16501 ;; Return value:  Size  Location     Type
 16502 ;;                  1    wreg      void 
 16503 ;; Registers used:
 16504 ;;		wreg
 16505 ;; Tracked objects:
 16506 ;;		On entry : 0/0
 16507 ;;		On exit  : 0/0
 16508 ;;		Unchanged: 0/0
 16509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16510 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16513 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16514 ;;Total ram usage:        2 bytes
 16515 ;; Hardware stack levels used:    1
 16516 ;; Hardware stack levels required when called:    4
 16517 ;; This function calls:
 16518 ;;		Nothing
 16519 ;; This function is called by:
 16520 ;;		_EUSART_Initialize
 16521 ;; This function uses a non-reentrant model
 16522 ;;
 16523                           
 16524                           
 16525                           ;psect for function _EUSART_SetErrorHandler
 16526  1E93                     _EUSART_SetErrorHandler:	
 16527                           
 16528                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
 16529                           
 16530                           ;incstack = 0
 16531                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
 16532  1E93  0872               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
 16533  1E94  0023               	movlb	3	; select bank3
 16534  1E95  00D6               	movwf	(_EUSART_ErrorHandler+1)^(0+384)
 16535  1E96  0871               	movf	EUSART_SetErrorHandler@interruptHandler,w
 16536  1E97  00D5               	movwf	_EUSART_ErrorHandler^(0+384)
 16537  1E98  0008               	return
 16538  1E99                     __end_of_EUSART_SetErrorHandler:	
 16539                           
 16540                           	psect	intentry
 16541  0004                     __pintentry:	
 16542 ;; *************** function _INTERRUPT_InterruptManager *****************
 16543 ;; Defined at:
 16544 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 16545 ;; Parameters:    Size  Location     Type
 16546 ;;		None
 16547 ;; Auto vars:     Size  Location     Type
 16548 ;;		None
 16549 ;; Return value:  Size  Location     Type
 16550 ;;                  1    wreg      void 
 16551 ;; Registers used:
 16552 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16553 ;; Tracked objects:
 16554 ;;		On entry : 0/0
 16555 ;;		On exit  : 0/0
 16556 ;;		Unchanged: 0/0
 16557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16562 ;;Total ram usage:        0 bytes
 16563 ;; Hardware stack levels used:    1
 16564 ;; Hardware stack levels required when called:    3
 16565 ;; This function calls:
 16566 ;;		Absolute function
 16567 ;;		_EUSART_Receive_ISR
 16568 ;;		_EUSART_Transmit_ISR
 16569 ;; This function is called by:
 16570 ;;		Interrupt level 1
 16571 ;; This function uses a non-reentrant model
 16572 ;;
 16573                           
 16574  0004                     _INTERRUPT_InterruptManager:	
 16575                           
 16576                           ;incstack = 0
 16577  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 16578                           
 16579                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 16580  0005  3180               	pagesel	$
 16581                           
 16582                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
 16583  0006  1F0B               	btfss	11,6	;volatile
 16584  0007  2821               	goto	i1l319
 16585                           
 16586                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
 16587  0008  0021               	movlb	1	; select bank1
 16588  0009  1E11               	btfss	17,4	;volatile
 16589  000A  2815               	goto	i1l314
 16590  000B  0020               	movlb	0	; select bank0
 16591  000C  1E11               	btfss	17,4	;volatile
 16592  000D  2815               	goto	i1l314
 16593                           
 16594                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART_TxDefaultInterruptHandler();
 16595  000E  0022               	movlb	2	; select bank2
 16596  000F  0864               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+256),w
 16597  0010  008A               	movwf	10
 16598  0011  0863               	movf	_EUSART_TxDefaultInterruptHandler^(0+256),w
 16599  0012  000A               	callw
 16600  0013  3180               	pagesel	$
 16601                           
 16602                           ;mcc_generated_files/interrupt_manager.c: 60:         }
 16603  0014  2821               	goto	i1l319
 16604  0015                     i1l314:	
 16605                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
 16606                           
 16607  0015  0021               	movlb	1	; select bank1
 16608  0016  1E91               	btfss	17,5	;volatile
 16609  0017  2821               	goto	i1l319
 16610  0018  0020               	movlb	0	; select bank0
 16611  0019  1E91               	btfss	17,5	;volatile
 16612  001A  2821               	goto	i1l319
 16613                           
 16614                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_RxDefaultInterruptHandler();
 16615  001B  0022               	movlb	2	; select bank2
 16616  001C  0862               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+256),w
 16617  001D  008A               	movwf	10
 16618  001E  0861               	movf	_EUSART_RxDefaultInterruptHandler^(0+256),w
 16619  001F  000A               	callw
 16620  0020  3180               	pagesel	$
 16621  0021                     i1l319:	
 16622                           ;mcc_generated_files/interrupt_manager.c: 69:     }
 16623                           
 16624                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 16625                           
 16626  0021  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 16627  0022  0009               	retfie
 16628  0023                     __end_of_INTERRUPT_InterruptManager:	
 16629                           
 16630                           	psect	text95
 16631  10BC                     __ptext95:	
 16632 ;; *************** function _EUSART_Transmit_ISR *****************
 16633 ;; Defined at:
 16634 ;;		line 206 in file "mcc_generated_files/eusart.c"
 16635 ;; Parameters:    Size  Location     Type
 16636 ;;		None
 16637 ;; Auto vars:     Size  Location     Type
 16638 ;;		None
 16639 ;; Return value:  Size  Location     Type
 16640 ;;                  1    wreg      void 
 16641 ;; Registers used:
 16642 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16643 ;; Tracked objects:
 16644 ;;		On entry : 0/0
 16645 ;;		On exit  : 0/0
 16646 ;;		Unchanged: 0/0
 16647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16650 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16651 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16652 ;;Total ram usage:        1 bytes
 16653 ;; Hardware stack levels used:    1
 16654 ;; This function calls:
 16655 ;;		Nothing
 16656 ;; This function is called by:
 16657 ;;		_EUSART_Initialize
 16658 ;;		_INTERRUPT_InterruptManager
 16659 ;; This function uses a non-reentrant model
 16660 ;;
 16661                           
 16662                           
 16663                           ;psect for function _EUSART_Transmit_ISR
 16664  10BC                     _EUSART_Transmit_ISR:	
 16665                           
 16666                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
 16667                           
 16668                           ;incstack = 0
 16669                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 16670  10BC  3008               	movlw	8
 16671  10BD  0022               	movlb	2	; select bank2
 16672  10BE  0265               	subwf	_eusartTxBufferRemaining^(0+256),w	;volatile
 16673  10BF  1803               	skipnc
 16674  10C0  28D9               	goto	i1l228
 16675                           
 16676                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TX1
      +                          REG = eusartTxBuffer[eusartTxTail++];
 16677  10C1  0021               	movlb	1	; select bank1
 16678  10C2  086E               	movf	_eusartTxTail^(0+128),w
 16679  10C3  3EC5               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 16680  10C4  0086               	movwf	6
 16681  10C5  3001               	movlw	1	; select bank3/4
 16682  10C6  0087               	movwf	7
 16683  10C7  0801               	movf	1,w
 16684  10C8  0023               	movlb	3	; select bank3
 16685  10C9  009A               	movwf	26	;volatile
 16686  10CA  3001               	movlw	1
 16687  10CB  00F0               	movwf	??_EUSART_Transmit_ISR
 16688  10CC  0870               	movf	??_EUSART_Transmit_ISR,w
 16689  10CD  0021               	movlb	1	; select bank1
 16690  10CE  07EE               	addwf	_eusartTxTail^(0+128),f	;volatile
 16691                           
 16692                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 16693  10CF  3008               	movlw	8
 16694  10D0  026E               	subwf	_eusartTxTail^(0+128),w	;volatile
 16695  10D1  1803               	btfsc	3,0
 16696                           
 16697                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
 16698  10D2  01EE               	clrf	_eusartTxTail^(0+128)	;volatile
 16699                           
 16700                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
 16701  10D3  3001               	movlw	1
 16702  10D4  00F0               	movwf	??_EUSART_Transmit_ISR
 16703  10D5  0870               	movf	??_EUSART_Transmit_ISR,w
 16704  10D6  0022               	movlb	2	; select bank2
 16705  10D7  07E5               	addwf	_eusartTxBufferRemaining^(0+256),f	;volatile
 16706                           
 16707                           ;mcc_generated_files/eusart.c: 218:     }
 16708  10D8  0008               	return
 16709  10D9                     i1l228:	
 16710                           ;mcc_generated_files/eusart.c: 219:     else
 16711                           
 16712                           
 16713                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          1bits.TXIE = 0;
 16714  10D9  0021               	movlb	1	; select bank1
 16715  10DA  1211               	bcf	17,4	;volatile
 16716  10DB  0008               	return
 16717  10DC                     __end_of_EUSART_Transmit_ISR:	
 16718                           
 16719                           	psect	text96
 16720  125D                     __ptext96:	
 16721 ;; *************** function _EUSART_Receive_ISR *****************
 16722 ;; Defined at:
 16723 ;;		line 225 in file "mcc_generated_files/eusart.c"
 16724 ;; Parameters:    Size  Location     Type
 16725 ;;		None
 16726 ;; Auto vars:     Size  Location     Type
 16727 ;;		None
 16728 ;; Return value:  Size  Location     Type
 16729 ;;                  1    wreg      void 
 16730 ;; Registers used:
 16731 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16732 ;; Tracked objects:
 16733 ;;		On entry : 0/0
 16734 ;;		On exit  : 0/0
 16735 ;;		Unchanged: 0/0
 16736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16741 ;;Total ram usage:        0 bytes
 16742 ;; Hardware stack levels used:    1
 16743 ;; Hardware stack levels required when called:    2
 16744 ;; This function calls:
 16745 ;;		Absolute function
 16746 ;;		_EUSART_DefaultErrorHandler
 16747 ;;		_EUSART_DefaultFramingErrorHandler
 16748 ;;		_EUSART_DefaultOverrunErrorHandler
 16749 ;;		_EUSART_RxDataHandler
 16750 ;; This function is called by:
 16751 ;;		_EUSART_Initialize
 16752 ;;		_INTERRUPT_InterruptManager
 16753 ;; This function uses a non-reentrant model
 16754 ;;
 16755                           
 16756                           
 16757                           ;psect for function _EUSART_Receive_ISR
 16758  125D                     _EUSART_Receive_ISR:	
 16759                           
 16760                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 16761                           
 16762                           ;incstack = 0
 16763                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16764  125D  087C               	movf	_eusartRxHead,w	;volatile
 16765  125E  3E44               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 16766  125F  0086               	movwf	6
 16767  1260  3001               	movlw	1	; select bank2/3
 16768  1261  0087               	movwf	7
 16769  1262  0181               	clrf	1
 16770                           
 16771                           ;mcc_generated_files/eusart.c: 230:     if(RC1STAbits.FERR){
 16772  1263  0023               	movlb	3	; select bank3
 16773  1264  1D1D               	btfss	29,2	;volatile
 16774  1265  2A71               	goto	i1l5733
 16775                           
 16776                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 16777  1266  087C               	movf	_eusartRxHead,w	;volatile
 16778  1267  3E44               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 16779  1268  0086               	movwf	6
 16780  1269  3001               	movlw	1	; select bank2/3
 16781  126A  0087               	movwf	7
 16782  126B  1481               	bsf	1,1
 16783                           
 16784                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
 16785  126C  085A               	movf	(_EUSART_FramingErrorHandler+1)^(0+384),w
 16786  126D  008A               	movwf	10
 16787  126E  0859               	movf	_EUSART_FramingErrorHandler^(0+384),w
 16788  126F  000A               	callw
 16789  1270  3192               	pagesel	$
 16790  1271                     i1l5733:	
 16791                           
 16792                           ;mcc_generated_files/eusart.c: 235:     if(RC1STAbits.OERR){
 16793  1271  0023               	movlb	3	; select bank3
 16794  1272  1C9D               	btfss	29,1	;volatile
 16795  1273  2A7F               	goto	i1l5739
 16796                           
 16797                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 16798  1274  087C               	movf	_eusartRxHead,w	;volatile
 16799  1275  3E44               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 16800  1276  0086               	movwf	6
 16801  1277  3001               	movlw	1	; select bank2/3
 16802  1278  0087               	movwf	7
 16803  1279  1501               	bsf	1,2
 16804                           
 16805                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
 16806  127A  0858               	movf	(_EUSART_OverrunErrorHandler+1)^(0+384),w
 16807  127B  008A               	movwf	10
 16808  127C  0857               	movf	_EUSART_OverrunErrorHandler^(0+384),w
 16809  127D  000A               	callw
 16810  127E  3192               	pagesel	$
 16811  127F                     i1l5739:	
 16812                           
 16813                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
 16814  127F  087C               	movf	_eusartRxHead,w	;volatile
 16815  1280  3E44               	addlw	(low (_eusartRxStatusBuffer| (0+256)))& (0+255)
 16816  1281  0086               	movwf	6
 16817  1282  3001               	movlw	1	; select bank2/3
 16818  1283  0087               	movwf	7
 16819  1284  0801               	movf	1,w
 16820  1285  1903               	btfsc	3,2
 16821  1286  2A8E               	goto	i1l5743
 16822                           
 16823                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
 16824  1287  0023               	movlb	3	; select bank3
 16825  1288  0856               	movf	(_EUSART_ErrorHandler+1)^(0+384),w
 16826  1289  008A               	movwf	10
 16827  128A  0855               	movf	_EUSART_ErrorHandler^(0+384),w
 16828  128B  000A               	callw
 16829  128C  3192               	pagesel	$
 16830                           
 16831                           ;mcc_generated_files/eusart.c: 242:     } else {
 16832  128D  0008               	return
 16833  128E                     i1l5743:	
 16834                           
 16835                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
 16836  128E  319F  27D0         	fcall	_EUSART_RxDataHandler
 16837  1290  0008               	return
 16838  1291                     __end_of_EUSART_Receive_ISR:	
 16839                           
 16840                           	psect	text97
 16841  1E47                     __ptext97:	
 16842 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 16843 ;; Defined at:
 16844 ;;		line 261 in file "mcc_generated_files/eusart.c"
 16845 ;; Parameters:    Size  Location     Type
 16846 ;;		None
 16847 ;; Auto vars:     Size  Location     Type
 16848 ;;		None
 16849 ;; Return value:  Size  Location     Type
 16850 ;;                  1    wreg      void 
 16851 ;; Registers used:
 16852 ;;		None
 16853 ;; Tracked objects:
 16854 ;;		On entry : 0/0
 16855 ;;		On exit  : 0/0
 16856 ;;		Unchanged: 0/0
 16857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16862 ;;Total ram usage:        0 bytes
 16863 ;; Hardware stack levels used:    1
 16864 ;; This function calls:
 16865 ;;		Nothing
 16866 ;; This function is called by:
 16867 ;;		_EUSART_Initialize
 16868 ;;		_EUSART_Receive_ISR
 16869 ;; This function uses a non-reentrant model
 16870 ;;
 16871                           
 16872                           
 16873                           ;psect for function _EUSART_DefaultOverrunErrorHandler
 16874  1E47                     _EUSART_DefaultOverrunErrorHandler:	
 16875                           
 16876                           ;mcc_generated_files/eusart.c: 264:     RC1STAbits.CREN = 0;
 16877                           
 16878                           ;incstack = 0
 16879                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
 16880  1E47  0023               	movlb	3	; select bank3
 16881  1E48  121D               	bcf	29,4	;volatile
 16882                           
 16883                           ;mcc_generated_files/eusart.c: 265:     RC1STAbits.CREN = 1;
 16884  1E49  161D               	bsf	29,4	;volatile
 16885  1E4A  0008               	return
 16886  1E4B                     __end_of_EUSART_DefaultOverrunErrorHandler:	
 16887                           
 16888                           	psect	text98
 16889  1E23                     __ptext98:	
 16890 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 16891 ;; Defined at:
 16892 ;;		line 259 in file "mcc_generated_files/eusart.c"
 16893 ;; Parameters:    Size  Location     Type
 16894 ;;		None
 16895 ;; Auto vars:     Size  Location     Type
 16896 ;;		None
 16897 ;; Return value:  Size  Location     Type
 16898 ;;                  1    wreg      void 
 16899 ;; Registers used:
 16900 ;;		None
 16901 ;; Tracked objects:
 16902 ;;		On entry : 0/0
 16903 ;;		On exit  : 0/0
 16904 ;;		Unchanged: 0/0
 16905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16910 ;;Total ram usage:        0 bytes
 16911 ;; Hardware stack levels used:    1
 16912 ;; This function calls:
 16913 ;;		Nothing
 16914 ;; This function is called by:
 16915 ;;		_EUSART_Initialize
 16916 ;;		_EUSART_Receive_ISR
 16917 ;; This function uses a non-reentrant model
 16918 ;;
 16919                           
 16920                           
 16921                           ;psect for function _EUSART_DefaultFramingErrorHandler
 16922  1E23                     _EUSART_DefaultFramingErrorHandler:	
 16923                           
 16924                           ;incstack = 0
 16925                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
 16926  1E23  0008               	return
 16927  1E24                     __end_of_EUSART_DefaultFramingErrorHandler:	
 16928                           
 16929                           	psect	text99
 16930  1E26                     __ptext99:	
 16931 ;; *************** function _EUSART_DefaultErrorHandler *****************
 16932 ;; Defined at:
 16933 ;;		line 269 in file "mcc_generated_files/eusart.c"
 16934 ;; Parameters:    Size  Location     Type
 16935 ;;		None
 16936 ;; Auto vars:     Size  Location     Type
 16937 ;;		None
 16938 ;; Return value:  Size  Location     Type
 16939 ;;                  1    wreg      void 
 16940 ;; Registers used:
 16941 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16942 ;; Tracked objects:
 16943 ;;		On entry : 0/0
 16944 ;;		On exit  : 0/0
 16945 ;;		Unchanged: 0/0
 16946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16951 ;;Total ram usage:        0 bytes
 16952 ;; Hardware stack levels used:    1
 16953 ;; Hardware stack levels required when called:    1
 16954 ;; This function calls:
 16955 ;;		_EUSART_RxDataHandler
 16956 ;; This function is called by:
 16957 ;;		_EUSART_Initialize
 16958 ;;		_EUSART_Receive_ISR
 16959 ;; This function uses a non-reentrant model
 16960 ;;
 16961                           
 16962                           
 16963                           ;psect for function _EUSART_DefaultErrorHandler
 16964  1E26                     _EUSART_DefaultErrorHandler:	
 16965                           
 16966                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
 16967                           
 16968                           ;incstack = 0
 16969                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 16970  1E26  319F  27D0         	fcall	_EUSART_RxDataHandler
 16971  1E28  0008               	return
 16972  1E29                     __end_of_EUSART_DefaultErrorHandler:	
 16973                           
 16974                           	psect	text100
 16975  1FD0                     __ptext100:	
 16976 ;; *************** function _EUSART_RxDataHandler *****************
 16977 ;; Defined at:
 16978 ;;		line 249 in file "mcc_generated_files/eusart.c"
 16979 ;; Parameters:    Size  Location     Type
 16980 ;;		None
 16981 ;; Auto vars:     Size  Location     Type
 16982 ;;		None
 16983 ;; Return value:  Size  Location     Type
 16984 ;;                  1    wreg      void 
 16985 ;; Registers used:
 16986 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16987 ;; Tracked objects:
 16988 ;;		On entry : 0/0
 16989 ;;		On exit  : 0/0
 16990 ;;		Unchanged: 0/0
 16991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16994 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16995 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16996 ;;Total ram usage:        1 bytes
 16997 ;; Hardware stack levels used:    1
 16998 ;; This function calls:
 16999 ;;		Nothing
 17000 ;; This function is called by:
 17001 ;;		_EUSART_Receive_ISR
 17002 ;;		_EUSART_DefaultErrorHandler
 17003 ;; This function uses a non-reentrant model
 17004 ;;
 17005                           
 17006                           
 17007                           ;psect for function _EUSART_RxDataHandler
 17008  1FD0                     _EUSART_RxDataHandler:	
 17009                           
 17010                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RC1REG;
 17011                           
 17012                           ;incstack = 0
 17013                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
 17014  1FD0  0023               	movlb	3	; select bank3
 17015  1FD1  0819               	movf	25,w	;volatile
 17016  1FD2  00F0               	movwf	??_EUSART_RxDataHandler
 17017  1FD3  087C               	movf	_eusartRxHead,w
 17018  1FD4  3EBD               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 17019  1FD5  0086               	movwf	6
 17020  1FD6  3001               	movlw	1	; select bank3/4
 17021  1FD7  0087               	movwf	7
 17022  1FD8  0870               	movf	??_EUSART_RxDataHandler,w
 17023  1FD9  0081               	movwf	1
 17024  1FDA  3001               	movlw	1
 17025  1FDB  00F0               	movwf	??_EUSART_RxDataHandler
 17026  1FDC  0870               	movf	??_EUSART_RxDataHandler,w
 17027  1FDD  07FC               	addwf	_eusartRxHead,f	;volatile
 17028                           
 17029                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 17030  1FDE  3008               	movlw	8
 17031  1FDF  027C               	subwf	_eusartRxHead,w	;volatile
 17032  1FE0  1803               	btfsc	3,0
 17033                           
 17034                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
 17035  1FE1  01FC               	clrf	_eusartRxHead	;volatile
 17036                           
 17037                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
 17038  1FE2  3001               	movlw	1
 17039  1FE3  00F0               	movwf	??_EUSART_RxDataHandler
 17040  1FE4  0870               	movf	??_EUSART_RxDataHandler,w
 17041  1FE5  0022               	movlb	2	; select bank2
 17042  1FE6  07E0               	addwf	_eusartRxCount^(0+256),f	;volatile
 17043  1FE7  0008               	return
 17044  1FE8                     __end_of_EUSART_RxDataHandler:	
 17045  007E                     btemp	set	126	;btemp
 17046  007E                     int$flags	set	126
 17047  007E                     wtemp0	set	126


Data Sizes:
    Strings     52
    Constant    32
    Data        27
    BSS         158
    Persistent  55
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80     77      80
    BANK2            80     38      80
    BANK3            80      0      59
    BANK4            80      0      80
    BANK5            80      0      23
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_DO_TX$2152$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C1_DO_TX$2157	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C1_DO_TX$2152	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_MasterFsm$2151	const PTR FTN()enum E7150 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    S701$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_13(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[15]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S1788_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    I2C1_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_SetBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@reg(BANK0[1]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    S701$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@reg(BANK0[1]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@reg(BANK0[1]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    S701$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    I2C1_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    S701$callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    fsmStateTable	const PTR FTN()enum E7150[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(BANK0[1]), 

    S94$data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _vfpfcnvrt->_fputc
    _efgtoa->___fltol
    _tolower->_isupper
    _pad->_fputc
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    ___flmul->__Umul8_16
    ___fldiv->___xxtofl
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback
    _SYSTEM_Initialize->_EUSART_Initialize
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    ___fldiv->___xxtofl
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _I2C1_Poller->_I2C1_MasterFsm
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _readPressureSensor->_printf
    _printf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_readPressureSensor

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                31    31      0  118286
                                             75 BANK1      2     2      0
                                              9 BANK2     29    29      0
                  _SYSTEM_Initialize
                 _readPressureSensor
                            _setZero
 ---------------------------------------------------------------------------------
 (1) _setZero                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readPressureSensor                                   9     9      0  117784
                                              0 BANK2      9     9      0
             _I2C1_Read1ByteRegister
                            ___fldiv
                           ___xxtofl
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              10     4      6   30454
                                             65 BANK1     10     4      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     5      3   30181
                                             57 BANK1      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           43    41      2   29722
                                             61 BANK0     19    17      2
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                              9     5      4     410
                                              1 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              66    61      5   25448
                                             52 BANK0      9     4      5
                                              0 BANK1     57    57      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1142
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               8     6      2     641
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (6) _pad                                                  9     6      3    3241
                                              8 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               5     3      2     123
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     7      1    1226
                                              0 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     834
                                              4 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      66
                                              3 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (7) _EUSART_Write                                         2     2      0      44
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             32 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       16    12      4     287
                                              1 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             11     7      4     381
                                              1 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    3727
                                             26 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             20    12      8    3302
                                              1 COMMON     8     0      8
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             26    18      8    3025
                                              0 BANK0     26    18      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (7) __Umul8_16                                            9     7      2     799
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     790
                                             26 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     490
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             26    18      8    2185
                                              6 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              7     3      4     448
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              9     5      4     452
                                              1 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Read1ByteRegister                               4     3      1   84671
                                              8 BANK0      4     3      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C1_SetAddressNackCallback                          4     1      3    1870
                                              6 COMMON     4     1      3
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (3) _I2C1_Open                                            3     3      0      46
                                              1 COMMON     3     3      0
                _I2C1_MasterClearIrq
                    _I2C1_MasterOpen
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterWrite                                     0     0      0   78300
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterOperation                                 3     3      0   78300
                                             11 COMMON     1     1      0
                                              6 BANK0      2     2      0
                   _I2C1_MasterStart
                        _I2C1_Poller
 ---------------------------------------------------------------------------------
 (5) _I2C1_Poller                                          0     0      0   78254
                     _I2C1_MasterFsm
            _I2C1_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterWaitForEvent                              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterFsm                                       3     3      0   78254
                                              3 BANK0      3     3      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                _I2C1_MasterClearIrq
                  _I2C1_MasterIsNack
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_TX_EMPTY                                     3     3      0   19547
                                              0 BANK0      3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterSetIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_TX                                           3     3      0   19569
                                              0 BANK0      3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C1_MasterIsNack                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_DO_SEND_RESTART_WRITE                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C1_DO_SEND_RESTART_READ                            0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_SEND_ADR_WRITE                               0     0      0      22
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_SEND_ADR_READ                                0     0      0      22
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterSendTxData                                1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_RX_ACK                                       0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_RX                                           3     3      0   19547
                                              0 BANK0      3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterSendAck                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterGetRxData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_RX_NACK_STOP                                 0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_RX_NACK_RESTART                              0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterSendNack                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_RESET                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_RCEN                                         0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (8) _I2C1_MasterStartRx                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_IDLE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_DO_ADDRESS_NACK                                 3     3      0   19547
                                              0 BANK0      3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                1     0      1    3852
                                             10 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                1     0      1    3852
                                             10 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              1     0      1    3874
                                             10 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                1     0      1    3852
                                             10 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                1     0      1    3852
                                             10 COMMON     1     0      1
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C1_SetDataCompleteCallback                         4     1      3    2478
                                              6 COMMON     4     1      3
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (4) _I2C1_SetCallback                                     5     2      3     914
                                              1 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (3) _I2C1_SetBuffer                                       4     2      2    1352
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _I2C1_DO_SEND_STOP                                    0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_DO_SEND_RESTART                                 0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C1_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C1_CallbackReturnStop                              1     0      1       0
                                             10 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _I2C1_CallbackReturnReset                             1     0      1     265
                                             10 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C1_Close                                           2     2      0      24
                                              1 COMMON     2     2      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                  _EUSART_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM5_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     490
                                              3 COMMON     1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          0     0      0       0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (12) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (13) _EUSART_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM5_Initialize
     _TMR2_Initialize
     _WDT_Initialize
   _readPressureSensor
     _I2C1_Read1ByteRegister
       _I2C1_Close
         _I2C1_MasterClearIrq
         _I2C1_MasterClose
         _I2C1_MasterDisableIrq
       _I2C1_MasterWrite
         _I2C1_MasterOperation
           _I2C1_MasterStart
           _I2C1_Poller
             _I2C1_MasterFsm
               _I2C1_DO_ADDRESS_NACK *
                 Absolute function(Fake) *
                 _I2C1_CallbackReturnReset *
                 _I2C1_CallbackReturnStop *
                 _I2C1_DO_SEND_RESTART *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_STOP *
                   _I2C1_MasterStop
                 _rd1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
               _I2C1_DO_IDLE *
               _I2C1_DO_RCEN *
                 _I2C1_MasterStartRx
               _I2C1_DO_RESET *
               _I2C1_DO_RX *
                 Absolute function(Fake) *
                 _I2C1_CallbackReturnReset *
                 _I2C1_CallbackReturnStop *
                 _I2C1_DO_RX_NACK_RESTART *
                   _I2C1_MasterSendNack
                 _I2C1_DO_RX_NACK_STOP *
                   _I2C1_MasterSendNack
                 _I2C1_MasterGetRxData *
                 _I2C1_MasterSendAck *
                 _rd1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
               _I2C1_DO_RX_ACK *
                 _I2C1_MasterSendAck
               _I2C1_DO_RX_NACK_RESTART *
                 _I2C1_MasterSendNack
               _I2C1_DO_RX_NACK_STOP *
                 _I2C1_MasterSendNack
               _I2C1_DO_SEND_ADR_READ *
                 _I2C1_MasterSendTxData
               _I2C1_DO_SEND_ADR_WRITE *
                 _I2C1_MasterSendTxData
               _I2C1_DO_SEND_RESTART *
                 _I2C1_MasterEnableRestart
               _I2C1_DO_SEND_RESTART_READ *
                 _I2C1_MasterEnableRestart
               _I2C1_DO_SEND_RESTART_WRITE *
                 _I2C1_MasterEnableRestart
               _I2C1_DO_SEND_STOP *
                 _I2C1_MasterStop
               _I2C1_DO_TX *
                 Absolute function(Fake) *
                 _I2C1_CallbackReturnReset *
                 _I2C1_CallbackReturnStop *
                 _I2C1_DO_SEND_RESTART_READ *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_RESTART_WRITE *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_STOP *
                   _I2C1_MasterStop
                 _I2C1_MasterIsNack *
                 _I2C1_MasterSendTxData *
                 _rd1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
               _I2C1_DO_TX_EMPTY *
                 Absolute function(Fake) *
                 _I2C1_CallbackReturnReset *
                 _I2C1_CallbackReturnStop *
                 _I2C1_DO_SEND_RESTART *
                   _I2C1_MasterEnableRestart
                 _I2C1_DO_SEND_STOP *
                   _I2C1_MasterStop
                 _I2C1_MasterSetIrq *
                 _rd1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C1_SetBuffer
                   _I2C1_SetDataCompleteCallback
                     _I2C1_SetCallback
               _I2C1_MasterClearIrq *
               _I2C1_MasterIsNack *
             _I2C1_MasterWaitForEvent
       _I2C1_Open
         _I2C1_MasterClearIrq
         _I2C1_MasterOpen
       _I2C1_SetAddressNackCallback
         _I2C1_SetCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
         _I2C1_SetCallback
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _printf
       _vfprintf
         _vfpfcnvrt
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
               ___xxtofl (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 __Umul8_16
             ___flmul
               __Umul8_16
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 __Umul8_16
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___xxtofl (ARG)
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART_Write
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _EUSART_Write
           _isupper
           _strncmp
           _tolower
             _isupper
   _setZero

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4D      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     26      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      3B      11       73.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     19F      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      17      16       28.8%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     19F      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Feb 19 16:09:03 2020

                ?_EUSART_SetRxInterruptHandler 0071                                   ___fldiv@aexp 003F  
                                 ___fldiv@bexp 003E                                   ___fldiv@sign 0037  
                                  __CFG_CP$OFF 0000                                   ___awdiv@sign 0077  
                          __Umul8_16@word_mpld 0077                                    __CFG_LVP$ON 0000  
                                          l216 110A                                            l541 07FE  
                                          l607 1535                                            l623 13E6  
                                          l764 1E73                                            _PR2 001E  
                                 __CFG_CPD$OFF 0000                          ?_I2C1_MasterOperation 0070  
                       ??_EUSART_RxDataHandler 0070                                            _pad 145E  
               ?_EUSART_SetFramingErrorHandler 0071                        __size_of_PMD_Initialize 0008  
                                 ___awmod@sign 0077                                _TMR2_Initialize 1ED8  
                                          wreg 0009                         ?_I2C1_MasterSendTxData 0070  
            __size_of_I2C1_MasterEnableRestart 0003                           _I2C1_DO_RX_NACK_STOP 1E6B  
                                 ___flmul@aexp 0032                      ?_I2C1_MasterEnableRestart 0070  
                                 ___flmul@bexp 0033                                   ___flmul@sign 002D  
                                 ___flmul@temp 0038                                   ___flmul@prod 0034  
                         I2C1_SetBuffer@buffer 0074                                   ___fltol@exp1 007B  
                                         l1020 1496                                           l1021 14A2  
                                  main@hdr_trl 0140                                           l1017 1476  
                      ??_rd2RegCompleteHandler 007B                                           l1055 0299  
                                         l1056 0286                                           l1066 02D7  
                                         l1307 081B                                           l1308 0835  
                                         l1316 1649                                           l1084 0494  
                                         l1319 1697                                           l1443 0CD2  
                                         l1339 159A                                           l1516 0A2F  
                                         l1460 0D55                                           l1517 0A47  
                                         l1445 0CB5                                           l1519 0A54  
                                         l1439 0C3F                                           l4113 154F  
                                         l4105 150F                                           l4201 11D2  
                                         l1481 0DCC                                           l1473 0DB4  
                                         l1609 07C0                                           l4211 11D8  
                                         l1547 0FF3                                           l4205 11D5  
                                         l1573 0867                                           l4053 129A  
                                         l4135 13E8                                           l1495 0928  
                                         l4231 1021                                           l4161 119D  
                                         l4145 13EE                                           l4057 12BD  
                                         l1586 08B1                                           l4171 11A4  
                                         l4091 1506                                           l4139 13EB  
                                         l1587 08BB                                           l1579 089D  
                                         l1683 106F                                           l4165 11A0  
                                         l4229 1015                                           l4095 1509  
                                         l4177 11A7                                           l4505 10A6  
                                         l4099 150C                                           l4611 139B  
                                         l4603 1395                                           l5315 1450  
                                         l5307 144A                                           l4613 13A7  
                                         l4621 13BC                                           l4437 1069  
                                         l6213 0D86                                           l6205 0D7B  
                                         l4701 15A7                                           l4541 07A3  
                                         l6045 1126                                           l5309 1426  
                                         ?_pad 0028                                           l5351 105C  
                                         l6207 0D7D                                           l6071 0C17  
                                         l4535 0779                                           l3911 10FF  
                                         l6311 00B8                                           l6303 00A6  
                                         l4457 1182                                           l5345 1052  
                                         l4561 14C3                                           l4625 13C4  
                                         l4617 13B3                                           l6217 0D88  
                                         l6137 0CBD                                           l6129 0C85  
                                         l6065 0C0C                                           l4537 078A  
                                         l3931 1160                                           l5347 1057  
                                         l4571 14CB                                           l4555 14B8  
                                         l4811 09D5                                           l4731 0904  
                                         l4651 167D                                           l6235 0DC4  
                                         l6163 0CF2                                           l6155 0CE0  
                                         l6139 0CBF                                           l6147 0CCD  
                                         l6315 00BF                                           l6323 00D2  
                                         l4573 14D7                                           l4821 09EE  
                                         l4725 08F9                                           l6165 0CF4  
                                         l6173 0D03                                           l6093 0C37  
                                         l6069 0C0F                                           l4493 1606  
                                         l3925 111F                                           l6253 1474  
                                         l6413 02E4                                           l6405 02D1  
                                         l6333 0105                                           l6341 012A  
                                         l4583 14F2                                           l4831 0A17  
                                         l4647 1663                                           l6239 0DC8  
                                         l6191 0D67                                           l6183 0D4D  
                                         l4671 155A                                           l6511 05EF  
                                         l6423 02F8                                           l6415 02E8  
                                         l6351 015D                                           l4817 09EC  
                                         l4809 09BE                                           l4745 091D  
                                         l4729 08FC                                           l6089 0C34  
                                         l4489 1601                                           l6249 146C  
                                         l4587 14FA                                           l4579 14E9  
                                         l6283 0847                                           l6099 0C49  
                                         l4691 1588                                           l4675 1563  
                                         l4499 1629                                           l6259 1478  
                                         l6507 05D1                                           l6443 0443  
                                         l6427 0300                                           l6371 01D3  
                                         l6603 0AD6                                           l5653 085F  
                                         l4845 0A50                                           l4765 0953  
                                         l4749 0920                                           l4693 1596  
                                         l6437 0312                                           l6373 020D  
                                         l5479 103F                                           l5663 087A  
                                         l4599 138E                                           l4791 09B3  
                                         l4759 0947                                           l6199 0D74  
                                         l6535 062A                                           l6519 0608  
                                         l6471 04FC                                           l6439 03F0  
                                         l6391 029C                                           l6367 01A3  
                                         l6359 0182                                           l6615 0B16  
                                         l5673 08AF                                           l5665 088A  
                                         l4785 099A                                           l4793 097C  
                                         l4865 0DEE                                           l6537 0632  
                                         l6457 0492                                           l6449 0464  
                                         l6377 023D                                           l6625 0B6F  
                                         l6633 0B9C                                           l6705 1739  
                                         l5675 08A2                                           l5659 0876  
                                         l4795 09B8                                           l4955 0F89  
                                         l4947 0F5B                                           l4883 0E11  
                                         l4867 0DF0                                           l6547 062E  
                                         l6491 051B                                           l6459 049B  
                                         l6379 0262                                           l6643 0BC4  
                                         l4973 0FC9                                           l4949 0F72  
                                         l4885 0E13                                           l4869 0DF8  
                                         l6573 06BB                                           l6557 0681  
                                         l6549 0669                                           l6581 06DA  
                                         l6493 0539                                           l6397 02A4  
                                         l6389 0293                                           l6823 11EF  
                                         l6671 11FB                                           l5687 08D6  
                                         l4959 0F8B                                           l4895 0E29  
                                         l4887 0E1B                                           l6639 0BBE  
                                         l6663 1233                                           l6825 1401  
                                         l6681 1221                                           l4969 0FB4  
                                         l6649 0BCF                                           l6665 1254  
                                         l6827 1527                                           l4979 0FE0  
                                         l6499 054F                                           l6739 1331  
                                         l6829 11BA                                           l4999 1F03  
                                         STR_1 2012                                           STR_2 2000  
                                         STR_3 2021                                           STR_4 2029  
                                         STR_7 2025                                           STR_8 202D  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           u4005 07AC  
                                         u4055 14CE                                           u3185 12BB  
                                         u4075 14D8                                           u4155 139E  
                                         u4315 156C                                           u4085 14E2  
                                         u4095 14EA                                           u4175 13AD  
                                         u4185 13B4                                           u4505 098B  
                                         u3705 1070                                           u4345 1589  
                                         _PMD0 0911                                           u4525 0994  
                                         _PMD1 0912                                           u6150 1FB1  
                                         _PMD2 0913                                           u4535 09A8  
                                         u4375 159E                                           u3815 15F0  
                                         _PMD3 0914                                           u6160 1FB2  
                                         u7200 06AC                                           _PMD4 0915  
                                         u7105 05DF                                           _PMD5 0916  
                                         u3850 1621                                           u6315 0CC3  
                                         u3915 0712                                           u7115 05ED  
                                         u3860 1622                                           u3940 0740  
                                         u4565 09C1                                           u4805 0F3B  
                                         u3845 1613                                           u3925 072D  
                                         u6270 0CA3                                           u4655 0A05  
                                         u4495 0984                                           u4815 0F4A  
                                         u6280 0CA4                                           u4665 0A20  
                                         u4585 09CA                                           u4825 0F5E  
                                         u6265 0C99                                           u3945 073C  
                                         u4675 0A39                                           u4915 0FA2  
                                         u6435 0D68                                           u3795 15D7  
                                         u4925 0FBD                                           u4845 0F67  
                                         u3965 0765                                           u7190 06AB  
                                         u7270 0B54                                           u4935 0FD3  
                                         u4775 0E9F                                           u6535 0D9F  
                                         u7175 0674                                           u6640 10EC  
                                         u6800 014C                                           u7280 0B55  
                                         u5825 08C3                                           u5745 0883  
                                         u4785 0ECE                                           u6393 0D15  
                                         u6385 0CF8                                           u3985 0793  
                                         u6625 1482                                           u7345 16E0  
                                         u6650 10ED                                           u7370 132D  
                                         u4795 0F24                                           u7355 170D  
                                         u5765 0897                                           u6750 00F3  
                                         u6760 00F4                                           u5785 08A9  
                                         u6905 02B3                                           u6915 02CD  
                                         u7387 133A                                           u7397 1771  
                                         u6790 014B                                           u6695 0843  
                                         u6875 0291                                           u6985 0320  
                                         _TMR2 001D                                           _WPUA 020C  
                                         _WPUB 020D                                           _WPUC 020E  
                      ??_wr2RegCompleteHandler 007B                               ??_I2C1_MasterFsm 0023  
             __size_of_I2C1_DO_RX_NACK_RESTART 0004                                   __CFG_WRT$OFF 0000  
                                __CFG_FCMEN$ON 0000                      ??_I2C1_CallbackReturnStop 007B  
                                         _dbuf 0220                                           _main 1300  
                                         _prec 0158                                           _nout 0154  
                                         pad@i 002C                                           pad@p 0029  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         pad@w 002E                                           btemp 007E  
                                __CFG_BOREN$ON 0000                                  ___fpclassifyf 15B6  
                                __CFG_BORV$LOW 0000                                           start 0023  
                             ??_I2C1_SetBuffer 0073                                ___fldiv@new_exp 0038  
                              _PWM5_Initialize 1F18                                   _tolower$1848 0079  
                                __CFG_CSWEN$ON 0000                                  __CFG_MCLRE$ON 0000  
             __size_of_rdBlkRegCompleteHandler 0017                  I2C1_CallbackReturnStop@funPtr 007A  
                                        ??_pad 002B                                  ?_EUSART_Write 0070  
               __size_of_OSCILLATOR_Initialize 0009                  __end_of_OSCILLATOR_Initialize 1EFA  
                                ___fltol@sign1 007A                              __end_of_I2C1_Open 0800  
                              __end_of___fladd 0DD4                                          ?_main 0070  
                              __end_of___fldiv 0A59                                __end_of___awdiv 14FF  
                              __end_of___flneg 1F03                                          STR_11 2031  
                                        STR_13 2031                                  __CFG_WDTE$OFF 0000  
                              __end_of___awmod 13C9                                __end_of___flmul 1000  
                              __end_of___flsub 109D                                __end_of___fltol 15B6  
                              ___awdiv@divisor 0071                                          _T2CON 001F  
                               __CFG_DEBUG$OFF 0000                                          i1l314 0015  
                                        i1l228 10D9                                          i1l319 0021  
                              ___awdiv@counter 0076                                          _OSCEN 091D  
                                 vfpfcnvrt@fmt 005D                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                       ??_I2C1_MasterGetRxData 0071                                          _RXPPS 0E24  
                        ?_I2C1_DO_RX_NACK_STOP 0070                     ??_I2C1_CallbackReturnReset 007B  
                            ??_I2C1_MasterOpen 0071                              ??_I2C1_MasterStop 0071  
                            ??_I2C1_Initialize 0071                                          _flags 015A  
                               _WDT_Initialize 1E4B                                          _fputc 1291  
                                        _fputs 1122                                          _value 015E  
                                        pad@fp 0030                                          _width 0156  
                                        _putch 1E8E                                __end_of_setZero 1E47  
                              __end_of_isupper 1FB9                                          pclath 000A  
                                        status 0003                    __size_of_I2C1_MasterSendAck 0004  
                                        wtemp0 007E                                 ?___fpclassifyf 0071  
                              __end_of_tolower 10FE                                   ??_I2C1_DO_RX 0020  
                                 ??_I2C1_DO_TX 0020                                __end_of_strncmp 145E  
                       ??_I2C1_DO_ADDRESS_NACK 0020                                   ??_I2C1_Close 0071  
                  __size_of_I2C1_MasterStartRx 0003                                  _fsmStateTable 1800  
                              __initialization 0025                                   __end_of_main 1341  
                               ??_EUSART_Write 0071                        __end_of_TMR2_Initialize 1EE0  
                  ?_INTERRUPT_InterruptManager 0070                 ??_EUSART_SetRxInterruptHandler 0073  
                       ??_I2C1_MasterOperation 007B                                         ??_main 00EB  
                __size_of_I2C1_DO_SEND_RESTART 0004                             __end_of_I2C1_DO_RX 1410  
                           __end_of_I2C1_DO_TX 1551                         __end_of_WDT_Initialize 1E4F  
                           __end_of_I2C1_Close 1041      __end_of_EUSART_DefaultFramingErrorHandler 1E24  
   __size_of_EUSART_DefaultFramingErrorHandler 0001            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 1E23  
                      ?_I2C1_Read1ByteRegister 0028                     _EUSART_OverrunErrorHandler 01D7  
                                       ?_fputc 0074                                         ?_fputs 0020  
                             ___awdiv@dividend 0073                                         _ANSELA 018C  
                                       ?_putch 0070                                         _ANSELB 018D  
                                       _ANSELC 018E                             __CFG_RSTOSC$HFINT1 0000  
                                       _RC1REG 0199                                         _RC1STA 019D  
                                       _RB4PPS 0E9C                                         _RB5PPS 0E9D  
                                       _RB7PPS 0E9F                                         _ODCONA 028C  
                                       _ODCONB 028D                                         _RC6PPS 0EA6  
                                       _ODCONC 028E                        __end_of_PWM5_Initialize 1F24  
         __size_of_I2C1_SetAddressNackCallback 000C                                         i1l5733 1271  
                                       i1l5743 128E                                         i1l5739 127F  
                                       _INLVLA 038C                                         _INLVLB 038D  
                                       _INLVLC 038E                                         _OSCFRQ 091F  
                                       _TX1REG 019A                                         _WDTCON 0097  
                                       _TX1STA 019E                              ?_I2C1_MasterClose 0070  
                             __end_of___xxtofl 08DF                        ??_I2C1_MasterDisableIrq 0071  
                            ?_I2C1_MasterStart 0070                              ?_I2C1_MasterWrite 0070  
                     ?_I2C1_MasterWaitForEvent 0070                             ??_I2C1_MasterClose 0071  
                             _I2C1_DO_TX_EMPTY 119A                                 __CFG_PWRTE$OFF 0000  
                           ??_I2C1_MasterStart 0071                             ??_I2C1_MasterWrite 007C  
                                 vfprintf@cfmt 00DF                                         ___flge 162E  
                                       ___fleq 0800                                      ??___fladd 0020  
                                    ??___fldiv 002E                                      ??___awdiv 0075  
                                    ??___flneg 0075                                 __CFG_STVREN$ON 0000  
                                    ??___awmod 0075                                      ??___flmul 0028  
                                    ??___flsub 007A                                      ??___fltol 0075  
                                       _efgtoa 005D                            _EUSART_Transmit_ISR 10BC  
                                       _floorf 06F1                   __size_of_I2C1_MasterClearIrq 0003  
                             ___awdiv@quotient 0078                                ___awmod@divisor 0071  
                              ___awmod@counter 0076                                         _printf 1F7A  
                                       pad@buf 0028                       ??_I2C1_DO_SEND_ADR_WRITE 0072  
                                       _strcpy 109D                                         _strlen 1010  
                            ?_I2C1_SetCallback 0071                         ??_I2C1_DO_RX_NACK_STOP 0071  
                        _I2C1_DO_SEND_ADR_READ 1EE0                                         fputc@c 0074  
                               _PMD_Initialize 1ED0                                         fputs@c 0024  
                                       fputs@i 0025                                         fputs@s 0027  
                ?_I2C1_SetDataCompleteCallback 0076                             __size_of__Umul8_16 001F  
                              ___fpclassifyf@e 0020                                ___fpclassifyf@u 0022  
                              ___fpclassifyf@x 0071                             ??_I2C1_SetCallback 0074  
               __end_of_I2C1_Read1ByteRegister 122A                                ?_WDT_Initialize 0070  
                                    ??_setZero 0071                                      ??_isupper 0073  
                             __end_of_vfprintf 125D                                      ??_tolower 0020  
                 __size_of_I2C1_MasterSendNack 0004                                      ??_strncmp 0075  
                         ?_EUSART_Transmit_ISR 0070                        _I2C1_DO_RX_NACK_RESTART 1E6F  
                                   ___flge@ff1 003A                                     ___flge@ff2 003E  
                              ??___fpclassifyf 0075                                   ___xxtofl@arg 0022  
                                 ___xxtofl@exp 0021                              _SYSTEM_Initialize 1FE8  
                                 ___xxtofl@val 0071                                     ___fleq@ff1 0071  
                                   ___fleq@ff2 0075                 I2C1_SetDataCompleteCallback@cb 0076  
                      __end_of__initialization 0059                                     ___flneg@f1 0071  
              I2C1_MasterOperation@returnValue 0027                             ?_SYSTEM_Initialize 0070  
                                   ___fltol@f1 0071                                  ??_I2C1_Poller 007B  
         __end_of_EUSART_SetTxInterruptHandler 1EB1          __size_of_EUSART_SetTxInterruptHandler 0006  
                 _EUSART_SetTxInterruptHandler 1EAB                        _rdBlkRegCompleteHandler 1F8B  
                               __pcstackCOMMON 0070                                   __pidataBANK2 1E7B  
                                 __pidataBANK5 1FB9                            ??_SYSTEM_Initialize 0074  
             __end_of_I2C1_MasterEnableRestart 1E38                     __end_of_readPressureSensor 1800  
                                __end_of_fputc 12C6                                  __end_of_fputs 1148  
                                __end_of_putch 1E93                               ?_TMR2_Initialize 0070  
                       __end_of_PMD_Initialize 1ED8                   ??_I2C1_DO_SEND_RESTART_WRITE 0071  
                      ??_I2C1_MasterSendTxData 0071                           _eusartRxStatusBuffer 0144  
                        __end_of_I2C1_DO_RESET 1E8E                ??_EUSART_SetOverrunErrorHandler 0073  
                                      ??_fputc 0077                      __end_of_SYSTEM_Initialize 2000  
                                      ??_fputs 0021                          ??_EUSART_Transmit_ISR 0070  
                                      ??_putch 0073                                     __pbssBANK1 00ED  
                                   __pbssBANK2 0144                                     __pbssBANK3 01A0  
                                   __pbssBANK4 0220                __end_of_I2C1_MasterWaitForEvent 1E77  
                         __end_of_EUSART_Write 1122                               ?_PWM5_Initialize 0070  
               __size_of_rd2RegCompleteHandler 0010                  __end_of_rd2RegCompleteHandler 1F7A  
                         I2C1_Open@returnValue 0073                 __size_of_wr2RegCompleteHandler 0010  
                __end_of_wr2RegCompleteHandler 1F5A                    __size_of_EUSART_Receive_ISR 0034  
                        _rd1RegCompleteHandler 1F5A                              _I2C1_DO_SEND_STOP 1E63  
                            __end_of__Umul8_16 107E                          _wr1RegCompleteHandler 1000  
          __size_of_I2C1_DO_SEND_RESTART_WRITE 0004                                     __pmaintext 1300  
                     rd1RegCompleteHandler@ptr 007A                                        ?___flge 003A  
                ?_EUSART_SetTxInterruptHandler 0071                                        ?___fleq 0071  
             _EUSART_TxDefaultInterruptHandler 0163                             ?_I2C1_DO_SEND_STOP 0070  
                              __CFG_PPS1WAY$ON 0000                                _I2C1_MasterOpen 1F0D  
                                   __pintentry 0004                                        ?_efgtoa 0054  
                              _I2C1_MasterStop 1E38                                _I2C1_Initialize 1EE8  
                          __end_of_I2C1_Poller 1F0D                                        ?_floorf 0040  
                      __size_of_I2C1_DO_RX_ACK 0004                   ??_EUSART_DefaultErrorHandler 0071  
                                      ?_printf 00E1                                ?_PMD_Initialize 0070  
                       ?_I2C1_DO_SEND_ADR_READ 0070                            ??_I2C1_DO_SEND_STOP 0071  
                                      ?_strcpy 0071                                        ?_strlen 0071  
              __size_of_I2C1_DO_SEND_ADR_WRITE 0007                                  _eusartRxCount 0160  
                                    ?___xxtofl 0071                              _I2C1_MasterIsNack 1EB1  
                                      _SP1BRGH 019C                                        _SP1BRGL 019B  
                                      _OSCCON1 0919                                        _OSCCON3 091B  
                                    _I2C1_Open 07C9                             __size_of_vfpfcnvrt 0199  
                    ??_I2C1_DO_RX_NACK_RESTART 0071                  __size_of_EUSART_RxDataHandler 0018  
                                      _OSCTUNE 091E                                        _PWM5DCH 0618  
                                      _PWM5DCL 0617                                        _PWM5CON 0619  
                            _I2C1_MasterSetIrq 1E41             __size_of_I2C1_DO_SEND_RESTART_READ 0004  
                                      _SSP1ADD 0212                                        _SLRCONA 030C  
                                      _SLRCONB 030D                                        _SLRCONC 030E  
                                      _SSP1BUF 0211                             ?_I2C1_MasterIsNack 0070  
                   ?_I2C1_DO_SEND_RESTART_READ 0070                       ??_EUSART_SetErrorHandler 0073  
               ??_I2C1_SetDataCompleteCallback 0079                             ?_I2C1_MasterSetIrq 0070  
                               main@dummy_data 0129                            ??_I2C1_MasterIsNack 0071  
                    __end_of_I2C1_DO_SEND_STOP 1E67                      ??_rdBlkRegCompleteHandler 007B  
                           I2C1_SetCallback@cb 0071                            ??_I2C1_MasterSetIrq 0071  
          __size_of_EUSART_DefaultErrorHandler 0003                                __size_of___flge 007C  
                              __size_of___fleq 0049                                        ___fladd 0BF2  
                                      ___fldiv 08DF                                        ___awdiv 14AE  
                                      ___flneg 1EFA                                        ___awmod 1384  
                                      ___flmul 0DD4                                        ___flsub 107E  
                                      ___fltol 1551                                      ?_vfprintf 00D9  
                              __size_of_efgtoa 0694                                __size_of_floorf 00D8  
                                ?_I2C1_DO_IDLE 0070                                  ?_I2C1_DO_RCEN 0070  
                                      __ptext1 1E44                                        __ptext2 16AA  
                                      __ptext3 1F7A                                        __ptext4 122A  
                                      __ptext5 0A59                                        __ptext6 1410  
                                      __ptext7 005D                                        __ptext8 10DC  
                                      __ptext9 1FA2                       _I2C1_MasterEnableRestart 1E35  
                              __size_of_printf 0011                      __end_of_I2C1_MasterIsNack 1EB7  
                 ?_I2C1_SetAddressNackCallback 0076                                __size_of_strcpy 001F  
                              __size_of_strlen 0018                          _OSCILLATOR_Initialize 1EF1  
                                    _T2CONbits 001F                                   __size_of_pad 0050  
                    __end_of_I2C1_MasterSetIrq 1E44                                     ??___xxtofl 0075  
                     __end_of_I2C1_DO_TX_EMPTY 11C9                               ___awmod@dividend 0073  
                     ??_PIN_MANAGER_Initialize 0071                       wr1RegCompleteHandler@ptr 007A  
                                   ?_I2C1_Open 0070                                        _setZero 1E44  
                                      _isupper 1FA2                                        efgtoa@c 0058  
                                      efgtoa@d 00B8                                        efgtoa@e 00D1  
                                      efgtoa@f 0054                                        efgtoa@g 00CD  
                                      efgtoa@h 00C3                                        efgtoa@i 00CB  
                                      efgtoa@l 00C7                                        efgtoa@m 00B4  
                                      efgtoa@n 00D3                                        efgtoa@p 00BD  
                                      efgtoa@t 00B0                                        efgtoa@u 00D5  
                                      efgtoa@w 00C0                  __size_of_I2C1_MasterGetRxData 0003  
                     ?_I2C1_CallbackReturnStop 007A                     __size_of_SYSTEM_Initialize 0018  
                                      _tolower 10DC                                        clrloop0 1EBE  
                                      _strncmp 1410              __end_of_I2C1_DO_SEND_RESTART_READ 1E5B  
                         end_of_initialization 0059                     __end_of_I2C1_MasterSendAck 1E57  
                                      floorf@e 004E                                        floorf@m 004A  
                                      floorf@u 0050                                        floorf@x 0040  
                          _I2C1_MasterClearIrq 1E29          __end_of_EUSART_SetOverrunErrorHandler 1EA5  
       __size_of_EUSART_SetOverrunErrorHandler 0006                  _EUSART_SetOverrunErrorHandler 1E9F  
                                      fputc@fp 0076                                        init_ram 1EC3  
                   __end_of_I2C1_MasterStartRx 1E3E                                        fputs@fp 0020  
                       ?_rd1RegCompleteHandler 007A                                        initloop 1EC4  
                       _I2C1_DO_SEND_ADR_WRITE 1EC9                   __end_of_I2C1_DO_SEND_RESTART 1E63  
                            _EUSART_Initialize 1341                        __end_of_I2C1_MasterOpen 1F18  
                       ?_wr1RegCompleteHandler 007A                        __end_of_I2C1_MasterStop 1E3B  
                      __end_of_I2C1_Initialize 1EF1              __size_of_I2C1_CallbackReturnReset 0002  
                                  _I2C1_Poller 1F03                 __size_of_I2C1_MasterDisableIrq 0003  
                    ?_I2C1_CallbackReturnReset 007A                  __end_of_I2C1_MasterDisableIrq 1E32  
                                  _I2C1_Status 01A0                  __size_of_I2C1_DO_ADDRESS_NACK 002F  
                           ?_EUSART_Initialize 0070                              __end_of_vfpfcnvrt 0BF2  
                                   efgtoa@mode 00C2                                     efgtoa@sign 00BA  
                      __size_of_I2C1_MasterFsm 002A                            _I2C1_MasterSendNack 1E4F  
          __end_of_I2C1_SetAddressNackCallback 1F3C                    _I2C1_SetAddressNackCallback 1F30  
                                   ??_vfprintf 00DC                           ?_I2C1_MasterClearIrq 0070  
                               ??_I2C1_DO_IDLE 0071                                 ??_I2C1_DO_RCEN 0071  
           __end_of_I2C1_DO_SEND_RESTART_WRITE 1E5F                     _I2C1_DO_SEND_RESTART_WRITE 1E5B  
                                      strcpy@d 0077                                        strlen@a 0074  
                                      strcpy@s 0075                                        strlen@s 0075  
                    __size_of_I2C1_MasterClose 0003                            ??_EUSART_Initialize 0073  
                             ??_WDT_Initialize 0071                 ??_EUSART_SetTxInterruptHandler 0073  
                              _raw_temperature 015C                        __size_of_I2C1_SetBuffer 000E  
              __end_of_rdBlkRegCompleteHandler 1FA2               __size_of_I2C1_MasterWaitForEvent 0004  
                    __size_of_I2C1_MasterStart 0003                      __size_of_I2C1_MasterWrite 0004  
                                  ___fladd@grs 002B                  __size_of_I2C1_MasterOperation 001E  
                ??_I2C1_SetAddressNackCallback 0079                      I2C1_Read1ByteRegister@reg 0028  
                                ___xxtofl@sign 0020                I2C1_SetDataCompleteCallback@ptr 0078  
                        __size_of_EUSART_Write 0024                                    ___fldiv@grs 003A  
                                  ___fldiv@rem 0033                 I2C1_CallbackReturnReset@funPtr 007A  
                         ?_I2C1_MasterSendNack 0070                               __CFG_FEXTOSC$OFF 0000  
              __size_of_EUSART_SetErrorHandler 0006                                    ___flmul@grs 002E  
                    __end_of_EUSART_Initialize 1384                      __size_of_I2C1_SetCallback 0028  
                   rdBlkRegCompleteHandler@ptr 007A                     __size_of_I2C1_DO_SEND_STOP 0004  
                        ??_I2C1_MasterClearIrq 0071                                 __end_of___flge 16AA  
                               __end_of___fleq 0849             __end_of_EUSART_DefaultErrorHandler 1E29  
                   _EUSART_DefaultErrorHandler 1E26                                    vfpfcnvrt@ap 005E  
                                  vfpfcnvrt@ct 0067                                    vfpfcnvrt@fp 006F  
                               _I2C1_DO_RX_ACK 1E67                                 __end_of_efgtoa 06F1  
                                 _EUSART_Write 10FE                                 __end_of_floorf 07C9  
                       ?_OSCILLATOR_Initialize 0070                                     floorf@F524 014C  
                   __size_of_I2C1_MasterIsNack 0006                __end_of_I2C1_CallbackReturnStop 1E26  
                               __end_of_printf 1F8B                 __size_of_I2C1_MasterSendTxData 0005  
                __end_of_I2C1_MasterSendTxData 1E84                     __size_of_I2C1_MasterSetIrq 0003  
                               __end_of_strcpy 10BC                                 __end_of_strlen 1028  
                          start_initialization 0025                                    ??_I2C1_Open 0071  
                __size_of_I2C1_DO_RX_NACK_STOP 0004                __size_of_PIN_MANAGER_Initialize 003A  
                           _readPressureSensor 16AA                                    __end_of_pad 14AE  
                        ??_I2C1_MasterSendNack 0071   EUSART_SetRxInterruptHandler@interruptHandler 0071  
 EUSART_SetTxInterruptHandler@interruptHandler 0071                                    putch@txData 0073  
                          ?_readPressureSensor 0070                          __end_of___fpclassifyf 162E  
                     I2C1_SetBuffer@bufferSize 0071                               ?_I2C1_MasterOpen 0070  
                             ?_I2C1_MasterStop 0070                               ?_I2C1_Initialize 0070  
               ?_EUSART_SetOverrunErrorHandler 0071                               __CFG_LPBOREN$OFF 0000  
                                  vfprintf@fmt 00D9                     _EUSART_FramingErrorHandler 01D9  
                                     ??___flge 0042                                       ??___fleq 0020  
                             ??_PMD_Initialize 0071                         __end_of_I2C1_DO_RX_ACK 1E6B  
                       _EUSART_SetErrorHandler 1E93                        ??_I2C1_DO_SEND_ADR_READ 0071  
                                     ??_efgtoa 0059                                      __Umul8_16 105F  
                                  __pdataBANK2 016A                                    __pdataBANK5 02A0  
                                     ??_floorf 0044                           ??_readPressureSensor 0120  
                                     ??_printf 00E7                                       ??_strcpy 0073  
                                     ??_strlen 0073                               I2C1_Open@address 0072  
                                    ___fladd@a 0075                                      ___fladd@b 0071  
                                    ___fldiv@a 0026                                      ___fldiv@b 002A  
                  __end_of_EUSART_Transmit_ISR 10DC                                      ___flmul@a 0024  
                                    ___flmul@b 0020                                    __pbssCOMMON 007C  
                         _I2C1_DO_SEND_RESTART 1E5F                                      ___flsub@a 003A  
                                    ___flsub@b 003E                                      ___latbits 0003  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                                __pcstackBANK2 0120                       __size_of_TMR2_Initialize 0008  
                            __size_of___xxtofl 0096                    ??_I2C1_DO_SEND_RESTART_READ 0071  
                   __end_of_EUSART_Receive_ISR 1291                           __end_of_I2C1_DO_IDLE 1E89  
                         __end_of_I2C1_DO_RCEN 1EBD                     __size_of_EUSART_Initialize 0043  
             _EUSART_RxDefaultInterruptHandler 0161                  I2C1_SetAddressNackCallback@cb 0076  
                                    __pnvBANK2 0161                                      __pnvBANK3 01CD  
                        _rd2RegCompleteHandler 1F6A                          __end_of_fsmStateTable 1820  
                                  _efgtoa$1450 00AE                                    _efgtoa$1444 00A8  
                                  _efgtoa$1438 00A4                                    _efgtoa$1439 00A6  
                                  _efgtoa$1448 00AA                                    _efgtoa$1449 00AC  
                 __end_of_EUSART_RxDataHandler 1FE8                         _PIN_MANAGER_Initialize 12C6  
                        _wr2RegCompleteHandler 1F4A                     ??_I2C1_MasterEnableRestart 0071  
                     __size_of_PWM5_Initialize 000C                       rd2RegCompleteHandler@ptr 007A  
                               _I2C1_MasterFsm 1170                         __size_of_I2C1_DO_RESET 0005  
                                     ?___fladd 0071                                ?_I2C1_DO_RX_ACK 0070  
                                     ?___fldiv 0026                                       ?___awdiv 0071  
                                    __ptext100 1FD0                                       ?___flneg 0071  
                                     ?___awmod 0071                                       ?___flmul 0020  
                                     ?___flsub 003A                                       ?___fltol 0071  
                                   ?__Umul8_16 0071                                   _eusartRxHead 007C  
                                 _eusartTxHead 00EF                                   _eusartRxTail 00ED  
                                 _eusartTxTail 00EE                        _I2C1_MasterWaitForEvent 1E73  
                             _I2C1_MasterClose 1E2C                       ??_I2C1_Read1ByteRegister 0029  
                               _I2C1_SetBuffer 1F3C                   ??_INTERRUPT_InterruptManager 0071  
                             _I2C1_MasterStart 1E32                              __size_of_vfprintf 0033  
                             _I2C1_MasterWrite 1E77                        _eusartTxBufferRemaining 0165  
                                     _BAUD1CON 019F                          ?_I2C1_DO_SEND_RESTART 0070  
                            ?_I2C1_DO_TX_EMPTY 0070                                       ?_setZero 0070  
                                     ?_isupper 0071               __end_of_I2C1_CallbackReturnReset 0004  
                           ??_I2C1_DO_TX_EMPTY 0020                                       ?_tolower 0077  
                               __size_of_fputc 0035                                 __size_of_fputs 0026  
                      ??_rd1RegCompleteHandler 007B                                       ?_strncmp 0071  
                      ?_I2C1_DO_SEND_ADR_WRITE 0070                      I2C1_MasterSendTxData@data 0071  
                               __size_of_putch 0005                                 _eusartRxBuffer 01BD  
                      ??_wr1RegCompleteHandler 007B                                 _eusartTxBuffer 01C5  
                             _I2C1_SetCallback 1148         EUSART_SetErrorHandler@interruptHandler 0071  
                                   _I2C1_DO_RX 13C9                                     _I2C1_DO_TX 14FF  
                                    clear_ram0 1EBD                                       _PIE1bits 0091  
                            _eusartRxLastError 015F                                     _I2C1_Close 1028  
                                 ?_I2C1_Poller 0070                         __end_of_I2C1_MasterFsm 119A  
          __size_of_INTERRUPT_InterruptManager 001F                   __end_of_I2C1_MasterGetRxData 1E41  
                                     _PIR1bits 0011               __size_of_I2C1_CallbackReturnStop 0002  
              ??_EUSART_SetFramingErrorHandler 0073                             _I2C1_MasterSendAck 1E53  
                    _I2C1_DO_SEND_RESTART_READ 1E57                                      main@F7270 016A  
                                    main@F7272 02A0                                       _SSP1CON1 0215  
                                     _SSP1CON2 0216      __end_of_EUSART_DefaultOverrunErrorHandler 1E4B  
   __size_of_EUSART_DefaultOverrunErrorHandler 0004            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 1E47  
                       __end_of_I2C1_SetBuffer 1F4A                                       _SSP1STAT 0214  
         __end_of_I2C1_SetDataCompleteCallback 1F30          __size_of_I2C1_SetDataCompleteCallback 000C  
                 _I2C1_SetDataCompleteCallback 1F24                             _I2C1_MasterStartRx 1E3B  
                                    _vfpfcnvrt 0A59                    ?_I2C1_DO_SEND_RESTART_WRITE 0070  
                          ?_I2C1_MasterSendAck 0070                       ?_I2C1_DO_RX_NACK_RESTART 0070  
                          ?_I2C1_MasterStartRx 0070                   __end_of_I2C1_DO_ADDRESS_NACK 11F8  
                     wr2RegCompleteHandler@ptr 007A                 __end_of_I2C1_DO_SEND_ADR_WRITE 1ED0  
                                _I2C1_DO_RESET 1E89                                     vfpfcnvrt@c 006E  
                                   vfpfcnvrt@f 006A                          I2C1_Close@returnValue 0072  
                     ?_rdBlkRegCompleteHandler 007A                            I2C1_SetCallback@idx 0075  
                          I2C1_SetCallback@ptr 0073                           ??_I2C1_MasterSendAck 0071  
                            ??_TMR2_Initialize 0071                         ?_rd2RegCompleteHandler 007A  
                 __end_of_I2C1_MasterOperation 105F                         ?_wr2RegCompleteHandler 007A  
                         ??_I2C1_MasterStartRx 0071                                ?_I2C1_MasterFsm 0070  
                                   vfprintf@ap 00DB                                     vfprintf@fp 00DE  
                    ??_I2C1_MasterWaitForEvent 0071                          _I2C1_MasterDisableIrq 1E2F  
                      ??_OSCILLATOR_Initialize 0071                                    ??__Umul8_16 0073  
                          _EUSART_ErrorHandler 01D5                                ?_I2C1_SetBuffer 0071  
                             __size_of___fladd 01E2                               __size_of___fldiv 017A  
                             __size_of___awdiv 0051                               __size_of___flneg 0009  
                             __size_of___awmod 0045                               __size_of___flmul 022C  
                             __size_of___flsub 001F                               __size_of___fltol 0065  
                  ?_EUSART_DefaultErrorHandler 0070                                     ?_vfpfcnvrt 005D  
                                 _raw_pressure 0166                __size_of_I2C1_Read1ByteRegister 0032  
                            ??_PWM5_Initialize 0071              I2C1_Read1ByteRegister@returnValue 002B  
                       ??_I2C1_DO_SEND_RESTART 0071                             ___fpclassifyf@F463 0150  
                                     ___xxtofl 0849                                 ?_I2C1_DO_RESET 0070  
                         _EUSART_RxDataHandler 1FD0                          __size_of_I2C1_DO_IDLE 0005  
                        __size_of_I2C1_DO_RCEN 0006                                       __ptext10 109D  
                                     __ptext11 145E                                       __ptext20 107E  
                                     __ptext12 1010                                       __ptext21 0BF2  
                                     __ptext13 1122                                       __ptext30 0849  
                                     __ptext22 1EFA                                       __ptext14 1291  
                                     __ptext31 11F8                                       __ptext23 0DD4  
                                     __ptext15 1E8E                                       __ptext40 11C9  
                                     __ptext32 1F30                                       __ptext24 105F  
                                     __ptext16 10FE                                       __ptext41 1E89  
                                     __ptext33 07C9                                       __ptext25 162E  
                                     __ptext17 06F1                               __size_of_setZero 0003  
                                     __ptext50 13C9                                       __ptext42 1E6F  
                                     __ptext34 1F0D                                       __ptext26 0800  
                                     __ptext18 15B6                                       __ptext51 14FF  
                                     __ptext43 1E6B                                       __ptext35 1E77  
                                     __ptext27 08DF                                       __ptext19 1551  
                                     __ptext60 1E3E                                       __ptext52 1EC9  
                                     __ptext44 1E67                                       __ptext36 1041  
                                     __ptext28 1384                                       __ptext61 1E4F  
                                     __ptext53 1EE0                                       __ptext45 1E63  
                                     __ptext37 1F03                                       __ptext29 14AE  
                                     __ptext70 1F24                                       __ptext62 1E3B  
                                     __ptext54 1E84                                       __ptext46 1E5F  
                                     __ptext38 1E73                                       __ptext71 1148  
                                     __ptext63 0002                                       __ptext55 119A  
                                     __ptext47 1E5B                                       __ptext39 1170  
                                     __ptext80 1FE8                                       __ptext72 1F3C  
                                     __ptext64 1E24                                       __ptext56 1E41  
                                     __ptext48 1E57                                       __ptext81 1E4B  
                                     __ptext73 1E38                                       __ptext65 1F8B  
                                     __ptext57 1EB1                                       __ptext49 1EB7  
                                     __ptext90 1EA5                                       __ptext82 1ED8  
                                     __ptext74 1E35                                       __ptext66 1000  
                                     __ptext58 1E7F                                       __ptext91 1E9F  
                                     __ptext83 1F18                                       __ptext75 1E32  
                                     __ptext67 1F6A                                       __ptext59 1E53  
                                     __ptext92 1E99                                       __ptext84 1ED0  
                                     __ptext76 1028                                       __ptext68 1F5A  
                                     __ptext93 1E93                                       __ptext85 12C6  
                                     __ptext77 1E2F                                       __ptext69 1F4A  
                                     __ptext86 1EF1                                       __ptext78 1E2C  
                                     __ptext95 10BC                                       __ptext87 1EE8  
                                     __ptext79 1E29                                       __ptext96 125D  
                                     __ptext88 1341                                       __ptext97 1E47  
                                     __ptext89 1EAB                                       __ptext98 1E23  
                                     __ptext99 1E26                               __size_of_isupper 0017  
                                 _SSP1CON1bits 0215                                   _SSP1CON2bits 0216  
                             __size_of_tolower 0022                                     strcpy@dest 0078  
                             __size_of_strncmp 004E                       _I2C1_CallbackReturnReset 0002  
                                __size_of_main 0041                                    ?_I2C1_DO_RX 0070  
                                  ?_I2C1_DO_TX 0070                    __end_of_I2C1_MasterClearIrq 1E2C  
                 __end_of_I2C1_DO_RX_NACK_STOP 1E6F                                    ?_I2C1_Close 0070  
                      ?_EUSART_SetErrorHandler 0071                                     _RC1STAbits 019D  
                                     efgtoa@fp 00BC                                       efgtoa@ne 00B6  
                                     efgtoa@pp 00B2                                       efgtoa@ou 00A0  
EUSART_SetOverrunErrorHandler@interruptHandler 0071                                       int$flags 007E  
                                     _pressure 01D1                __end_of_I2C1_DO_RX_NACK_RESTART 1E73  
                     I2C1_MasterOperation@read 0026                                       _vfprintf 122A  
           __end_of_INTERRUPT_InterruptManager 0023                     _INTERRUPT_InterruptManager 0004  
                                    printf@fmt 00E1          __end_of_EUSART_SetFramingErrorHandler 1E9F  
       __size_of_EUSART_SetFramingErrorHandler 0006                  _EUSART_SetFramingErrorHandler 1E99  
                                 _SSP1STATbits 0214                 __size_of_I2C1_DO_SEND_ADR_READ 0008  
                __end_of_I2C1_DO_SEND_ADR_READ 1EE8                                   _I2C1_DO_IDLE 1E84  
                                 _I2C1_DO_RCEN 1EB7                    __end_of_I2C1_MasterSendNack 1E53  
                               _vfpfcnvrt$1467 0065                                     _INTCONbits 000B  
                        ?_EUSART_RxDataHandler 0070                 I2C1_SetAddressNackCallback@ptr 0078  
                         _I2C1_MasterGetRxData 1E3E                          _I2C1_MasterSendTxData 1E7F  
                      __size_of_WDT_Initialize 0004                                       intlevel1 0000  
                     __end_of_I2C1_MasterClose 1E2F                         _I2C1_Read1ByteRegister 11F8  
                      ?_PIN_MANAGER_Initialize 0070                  I2C1_Read1ByteRegister@address 002A  
                     __end_of_I2C1_MasterStart 1E35                       __end_of_I2C1_MasterWrite 1E7B  
               __end_of_EUSART_SetErrorHandler 1E99                              __CFG_CLKOUTEN$OFF 0000  
                                    strcpy@src 0071                               ??_I2C1_DO_RX_ACK 0071  
                                     isupper@c 0071                        _I2C1_CallbackReturnStop 1E24  
                                    strncmp@_l 0076                                      strncmp@_r 0071  
         __end_of_EUSART_SetRxInterruptHandler 1EAB          __size_of_EUSART_SetRxInterruptHandler 0006  
                 _EUSART_SetRxInterruptHandler 1EA5                           _I2C1_DO_ADDRESS_NACK 11C9  
                       ?_I2C1_MasterDisableIrq 0070                                    efgtoa@nmode 00BF  
                         __size_of_I2C1_Poller 000A                                       printf@ap 00EA  
                           _EUSART_Receive_ISR 125D  EUSART_SetFramingErrorHandler@interruptHandler 0071  
                                  ??_vfpfcnvrt 005F                       __size_of_I2C1_MasterOpen 000B  
                     __size_of_I2C1_MasterStop 0003                       __size_of_I2C1_Initialize 0009  
                                __pstringtext1 1800                                  __pstringtext2 2000  
                                __pstringtext3 2012                                  __pstringtext4 2021  
                                __pstringtext5 2025                                  __pstringtext6 2029  
                                __pstringtext7 202D                                  __pstringtext8 2031  
                  __size_of_readPressureSensor 0156                                  __pstringtext9 0000  
                     __end_of_I2C1_SetCallback 1170                         __Umul8_16@multiplicand 0071  
                                  _temperature 01CD                                       tolower@c 0077  
                          ?_EUSART_Receive_ISR 0070                                     _SSP1DATPPS 0E21  
                       __size_of___fpclassifyf 0078                                     _SSP1CLKPPS 0E20  
                          __size_of_I2C1_DO_RX 0047                            __size_of_I2C1_DO_TX 0052  
                              ??_I2C1_DO_RESET 0071                           _I2C1_MasterOperation 1041  
                                     strncmp@l 0079                                       strncmp@n 0073  
                                     strncmp@r 0077                            __size_of_I2C1_Close 0019  
                        ?_I2C1_MasterGetRxData 0070                                     _TX1STAbits 019E  
                                ___fladd@signs 0028                             EUSART_Write@txData 0072  
                 __size_of_EUSART_Transmit_ISR 0020                 __end_of_PIN_MANAGER_Initialize 1300  
               __size_of_rd1RegCompleteHandler 0010                  __end_of_rd1RegCompleteHandler 1F6A  
                           __size_of_I2C1_Open 0037                                    _PWMTMRSbits 061F  
                                 ___fladd@aexp 0029                                   ___fladd@bexp 002A  
               __size_of_wr1RegCompleteHandler 0010                           ??_EUSART_Receive_ISR 0071  
                         __Umul8_16@multiplier 0079                  __end_of_wr1RegCompleteHandler 1010  
                    __size_of_I2C1_DO_TX_EMPTY 002F                          ?_I2C1_DO_ADDRESS_NACK 0070  
                            __Umul8_16@product 0075  
